#pragma GCC diagnostic ignored "-Wdeprecated-declarations" 
#include "xsim.dir/pfm_top_wrapper_behav/obj/sysc_interface.h"
#include <map>
#include <list>


extern "C" { std::vector<void*> *_glb_hdl_sc_channel_map; } 



extern "C"
    void call_HDL_SC_WRITE_bv_1(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<1, sc_dt::sc_bv<1> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_2(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<2, sc_dt::sc_bv<2> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_3(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<3, sc_dt::sc_bv<3> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_4(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<4, sc_dt::sc_bv<4> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_6(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<6, sc_dt::sc_bv<6> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_7(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<7, sc_dt::sc_bv<7> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_8(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<8, sc_dt::sc_bv<8> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_9(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<9, sc_dt::sc_bv<9> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_12(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<12, sc_dt::sc_bv<12> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_14(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<14, sc_dt::sc_bv<14> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_16(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<16, sc_dt::sc_bv<16> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_17(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<17, sc_dt::sc_bv<17> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_18(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<18, sc_dt::sc_bv<18> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_22(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<22, sc_dt::sc_bv<22> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_24(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<24, sc_dt::sc_bv<24> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_31(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<31, sc_dt::sc_bv<31> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_32(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<32, sc_dt::sc_bv<32> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_33(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<33, sc_dt::sc_bv<33> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_34(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<34, sc_dt::sc_bv<34> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_37(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<37, sc_dt::sc_bv<37> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_38(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<38, sc_dt::sc_bv<38> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_62(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<62, sc_dt::sc_bv<62> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_64(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<64, sc_dt::sc_bv<64> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_72(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<72, sc_dt::sc_bv<72> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_96(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<96, sc_dt::sc_bv<96> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_114(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<114, sc_dt::sc_bv<114> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_128(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<128, sc_dt::sc_bv<128> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_192(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<192, sc_dt::sc_bv<192> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_256(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<256, sc_dt::sc_bv<256> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_384(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<384, sc_dt::sc_bv<384> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_512(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<512, sc_dt::sc_bv<512> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_int(unsigned int sc_net_index, char* pval)
    {
          int val = *((int*)(pval));
          ((xsim_sc_channel<0, int>*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(val);
    } 



extern "C"
    void call_HDL_SC_WRITE_bit(unsigned int sc_net_index, char* pval)
    {
            sc_dt::sc_bit val  =  (sc_dt::sc_bit)((*((int*)(pval)) & 0x1));
          ((xsim_sc_channel<0, sc_dt::sc_bit>*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(val);
    } 



extern "C"
    void call_HDL_SC_WRITE_logic(unsigned int sc_net_index, char* pval)
    {
          sc_dt::sc_logic val  =  (sc_dt::sc_logic_value_t) (((*((int*)(pval)+1) & 0x1) << 1) | (*((int*)(pval)) & 0x1));
          ((xsim_sc_channel<0, sc_dt::sc_logic>*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(val);
    } 



extern "C"
    void call_HDL_SC_WRITE_bool(unsigned int sc_net_index, char* pval)
    {
          bool val = *((bool*)(pval));
          ((xsim_sc_channel<0, bool>*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(val);
    } 



extern "C"
    void implicit_HDL_SCinstantiate()
    {
        _glb_hdl_sc_channel_map = new std::vector<void*> ();
        sc_inst_1 = new pfm_dynamic_auto_cc_1(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.m00_couplers.auto_cc");
        sc_inst_1->xsim_set_dbg_index(1924);
        xsim_sc_channel<0, bool > *p_1_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_aclk.bind(*p_1_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_1_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_aresetn.bind(*p_1_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->s_axi_awaddr.bind(*p_1_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_1_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_1->s_axi_awprot.bind(*p_1_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_1_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_awvalid.bind(*p_1_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_1_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_awready.bind(*p_1_s_axi_awready);
        p_1_s_axi_awready->set_sv_netview_offsetfromdp(8323112);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_1_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_1->s_axi_wdata.bind(*p_1_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_1_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_1->s_axi_wstrb.bind(*p_1_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_1_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_wvalid.bind(*p_1_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_1_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_wready.bind(*p_1_s_axi_wready);
        p_1_s_axi_wready->set_sv_netview_offsetfromdp(8323336);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->s_axi_bresp.bind(*p_1_s_axi_bresp);
        p_1_s_axi_bresp->set_sv_netview_offsetfromdp(8323392);
        xsim_sc_channel<0, bool > *p_1_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_bvalid.bind(*p_1_s_axi_bvalid);
        p_1_s_axi_bvalid->set_sv_netview_offsetfromdp(8323448);
        xsim_sc_channel<0, bool > *p_1_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_bready.bind(*p_1_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_bready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->s_axi_araddr.bind(*p_1_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_1_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_1->s_axi_arprot.bind(*p_1_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_1_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_arvalid.bind(*p_1_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_1_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_arready.bind(*p_1_s_axi_arready);
        p_1_s_axi_arready->set_sv_netview_offsetfromdp(8323728);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_1_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_1->s_axi_rdata.bind(*p_1_s_axi_rdata);
        p_1_s_axi_rdata->set_sv_netview_offsetfromdp(8323784);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->s_axi_rresp.bind(*p_1_s_axi_rresp);
        p_1_s_axi_rresp->set_sv_netview_offsetfromdp(8323840);
        xsim_sc_channel<0, bool > *p_1_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_rvalid.bind(*p_1_s_axi_rvalid);
        p_1_s_axi_rvalid->set_sv_netview_offsetfromdp(8323896);
        xsim_sc_channel<0, bool > *p_1_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_rready.bind(*p_1_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_rready);
        xsim_sc_channel<0, bool > *p_1_m_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_aclk.bind(*p_1_m_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_1_m_axi_aclk);
        xsim_sc_channel<0, bool > *p_1_m_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_aresetn.bind(*p_1_m_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_1_m_axi_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_m_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->m_axi_awaddr.bind(*p_1_m_axi_awaddr);
        p_1_m_axi_awaddr->set_sv_netview_offsetfromdp(8324120);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_1_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_1->m_axi_awprot.bind(*p_1_m_axi_awprot);
        p_1_m_axi_awprot->set_sv_netview_offsetfromdp(8324176);
        xsim_sc_channel<0, bool > *p_1_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_awvalid.bind(*p_1_m_axi_awvalid);
        p_1_m_axi_awvalid->set_sv_netview_offsetfromdp(8324232);
        xsim_sc_channel<0, bool > *p_1_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_awready.bind(*p_1_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_1_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_1_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_1->m_axi_wdata.bind(*p_1_m_axi_wdata);
        p_1_m_axi_wdata->set_sv_netview_offsetfromdp(8324344);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_1_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_1->m_axi_wstrb.bind(*p_1_m_axi_wstrb);
        p_1_m_axi_wstrb->set_sv_netview_offsetfromdp(8324400);
        xsim_sc_channel<0, bool > *p_1_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_wvalid.bind(*p_1_m_axi_wvalid);
        p_1_m_axi_wvalid->set_sv_netview_offsetfromdp(8324456);
        xsim_sc_channel<0, bool > *p_1_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_wready.bind(*p_1_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_1_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->m_axi_bresp.bind(*p_1_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_1_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_1_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_bvalid.bind(*p_1_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_1_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_1_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_bready.bind(*p_1_m_axi_bready);
        p_1_m_axi_bready->set_sv_netview_offsetfromdp(8324680);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_m_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->m_axi_araddr.bind(*p_1_m_axi_araddr);
        p_1_m_axi_araddr->set_sv_netview_offsetfromdp(8324736);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_1_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_1->m_axi_arprot.bind(*p_1_m_axi_arprot);
        p_1_m_axi_arprot->set_sv_netview_offsetfromdp(8324792);
        xsim_sc_channel<0, bool > *p_1_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_arvalid.bind(*p_1_m_axi_arvalid);
        p_1_m_axi_arvalid->set_sv_netview_offsetfromdp(8324848);
        xsim_sc_channel<0, bool > *p_1_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_arready.bind(*p_1_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_1_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_1_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_1->m_axi_rdata.bind(*p_1_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_1_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->m_axi_rresp.bind(*p_1_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_1_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_1_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_rvalid.bind(*p_1_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_1_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_1_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_rready.bind(*p_1_m_axi_rready);
        p_1_m_axi_rready->set_sv_netview_offsetfromdp(8325128);
        sc_inst_2 = new pfm_dynamic_m00_regslice_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.m00_couplers.m00_regslice");
        sc_inst_2->xsim_set_dbg_index(1925);
        xsim_sc_channel<0, bool > *p_2_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_2->aclk.bind(*p_2_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_2_aclk);
        xsim_sc_channel<0, bool > *p_2_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_2->aresetn.bind(*p_2_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_2_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_2_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_2->s_axi_awaddr.bind(*p_2_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_2_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_2->s_axi_awprot.bind(*p_2_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_2_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_awvalid.bind(*p_2_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_2_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_awready.bind(*p_2_s_axi_awready);
        p_2_s_axi_awready->set_sv_netview_offsetfromdp(8325512);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_2_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_2->s_axi_wdata.bind(*p_2_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_2_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_2->s_axi_wstrb.bind(*p_2_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_2_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_wvalid.bind(*p_2_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_2_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_wready.bind(*p_2_s_axi_wready);
        p_2_s_axi_wready->set_sv_netview_offsetfromdp(8325736);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_2_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_2->s_axi_bresp.bind(*p_2_s_axi_bresp);
        p_2_s_axi_bresp->set_sv_netview_offsetfromdp(8325792);
        xsim_sc_channel<0, bool > *p_2_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_bvalid.bind(*p_2_s_axi_bvalid);
        p_2_s_axi_bvalid->set_sv_netview_offsetfromdp(8325848);
        xsim_sc_channel<0, bool > *p_2_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_bready.bind(*p_2_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_bready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_2_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_2->s_axi_araddr.bind(*p_2_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_2_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_2->s_axi_arprot.bind(*p_2_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_2_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_arvalid.bind(*p_2_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_2_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_arready.bind(*p_2_s_axi_arready);
        p_2_s_axi_arready->set_sv_netview_offsetfromdp(8326128);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_2_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_2->s_axi_rdata.bind(*p_2_s_axi_rdata);
        p_2_s_axi_rdata->set_sv_netview_offsetfromdp(8326184);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_2_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_2->s_axi_rresp.bind(*p_2_s_axi_rresp);
        p_2_s_axi_rresp->set_sv_netview_offsetfromdp(8326240);
        xsim_sc_channel<0, bool > *p_2_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_rvalid.bind(*p_2_s_axi_rvalid);
        p_2_s_axi_rvalid->set_sv_netview_offsetfromdp(8326296);
        xsim_sc_channel<0, bool > *p_2_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_rready.bind(*p_2_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_rready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_2_m_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_2->m_axi_awaddr.bind(*p_2_m_axi_awaddr);
        p_2_m_axi_awaddr->set_sv_netview_offsetfromdp(8326408);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_2_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_2->m_axi_awprot.bind(*p_2_m_axi_awprot);
        p_2_m_axi_awprot->set_sv_netview_offsetfromdp(8326464);
        xsim_sc_channel<0, bool > *p_2_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axi_awvalid.bind(*p_2_m_axi_awvalid);
        p_2_m_axi_awvalid->set_sv_netview_offsetfromdp(8326520);
        xsim_sc_channel<0, bool > *p_2_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axi_awready.bind(*p_2_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_2_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_2_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_2->m_axi_wdata.bind(*p_2_m_axi_wdata);
        p_2_m_axi_wdata->set_sv_netview_offsetfromdp(8326632);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_2_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_2->m_axi_wstrb.bind(*p_2_m_axi_wstrb);
        p_2_m_axi_wstrb->set_sv_netview_offsetfromdp(8326688);
        xsim_sc_channel<0, bool > *p_2_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axi_wvalid.bind(*p_2_m_axi_wvalid);
        p_2_m_axi_wvalid->set_sv_netview_offsetfromdp(8326744);
        xsim_sc_channel<0, bool > *p_2_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axi_wready.bind(*p_2_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_2_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_2_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_2->m_axi_bresp.bind(*p_2_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_2_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_2_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axi_bvalid.bind(*p_2_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_2_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_2_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axi_bready.bind(*p_2_m_axi_bready);
        p_2_m_axi_bready->set_sv_netview_offsetfromdp(8326968);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_2_m_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_2->m_axi_araddr.bind(*p_2_m_axi_araddr);
        p_2_m_axi_araddr->set_sv_netview_offsetfromdp(8327024);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_2_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_2->m_axi_arprot.bind(*p_2_m_axi_arprot);
        p_2_m_axi_arprot->set_sv_netview_offsetfromdp(8327080);
        xsim_sc_channel<0, bool > *p_2_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axi_arvalid.bind(*p_2_m_axi_arvalid);
        p_2_m_axi_arvalid->set_sv_netview_offsetfromdp(8327136);
        xsim_sc_channel<0, bool > *p_2_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axi_arready.bind(*p_2_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_2_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_2_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_2->m_axi_rdata.bind(*p_2_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_2_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_2_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_2->m_axi_rresp.bind(*p_2_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_2_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_2_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axi_rvalid.bind(*p_2_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_2_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_2_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axi_rready.bind(*p_2_m_axi_rready);
        p_2_m_axi_rready->set_sv_netview_offsetfromdp(8327416);
        sc_inst_3 = new pfm_dynamic_auto_cc_2(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.m01_couplers.auto_cc");
        sc_inst_3->xsim_set_dbg_index(1966);
        xsim_sc_channel<0, bool > *p_3_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_aclk.bind(*p_3_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_3_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_aresetn.bind(*p_3_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->s_axi_awaddr.bind(*p_3_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_3_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_3->s_axi_awprot.bind(*p_3_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_3_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_awvalid.bind(*p_3_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_3_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_awready.bind(*p_3_s_axi_awready);
        p_3_s_axi_awready->set_sv_netview_offsetfromdp(8363288);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_3_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_3->s_axi_wdata.bind(*p_3_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_3_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_3->s_axi_wstrb.bind(*p_3_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_3_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_wvalid.bind(*p_3_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_3_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_wready.bind(*p_3_s_axi_wready);
        p_3_s_axi_wready->set_sv_netview_offsetfromdp(8363512);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->s_axi_bresp.bind(*p_3_s_axi_bresp);
        p_3_s_axi_bresp->set_sv_netview_offsetfromdp(8363568);
        xsim_sc_channel<0, bool > *p_3_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_bvalid.bind(*p_3_s_axi_bvalid);
        p_3_s_axi_bvalid->set_sv_netview_offsetfromdp(8363624);
        xsim_sc_channel<0, bool > *p_3_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_bready.bind(*p_3_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_bready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->s_axi_araddr.bind(*p_3_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_3_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_3->s_axi_arprot.bind(*p_3_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_3_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_arvalid.bind(*p_3_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_3_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_arready.bind(*p_3_s_axi_arready);
        p_3_s_axi_arready->set_sv_netview_offsetfromdp(8363904);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_3_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_3->s_axi_rdata.bind(*p_3_s_axi_rdata);
        p_3_s_axi_rdata->set_sv_netview_offsetfromdp(8363960);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->s_axi_rresp.bind(*p_3_s_axi_rresp);
        p_3_s_axi_rresp->set_sv_netview_offsetfromdp(8364016);
        xsim_sc_channel<0, bool > *p_3_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_rvalid.bind(*p_3_s_axi_rvalid);
        p_3_s_axi_rvalid->set_sv_netview_offsetfromdp(8364072);
        xsim_sc_channel<0, bool > *p_3_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_rready.bind(*p_3_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_rready);
        xsim_sc_channel<0, bool > *p_3_m_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_aclk.bind(*p_3_m_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_3_m_axi_aclk);
        xsim_sc_channel<0, bool > *p_3_m_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_aresetn.bind(*p_3_m_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_3_m_axi_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_m_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->m_axi_awaddr.bind(*p_3_m_axi_awaddr);
        p_3_m_axi_awaddr->set_sv_netview_offsetfromdp(8364296);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_3_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_3->m_axi_awprot.bind(*p_3_m_axi_awprot);
        p_3_m_axi_awprot->set_sv_netview_offsetfromdp(8364352);
        xsim_sc_channel<0, bool > *p_3_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_awvalid.bind(*p_3_m_axi_awvalid);
        p_3_m_axi_awvalid->set_sv_netview_offsetfromdp(8364408);
        xsim_sc_channel<0, bool > *p_3_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_awready.bind(*p_3_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_3_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_3_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_3->m_axi_wdata.bind(*p_3_m_axi_wdata);
        p_3_m_axi_wdata->set_sv_netview_offsetfromdp(8364520);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_3_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_3->m_axi_wstrb.bind(*p_3_m_axi_wstrb);
        p_3_m_axi_wstrb->set_sv_netview_offsetfromdp(8364576);
        xsim_sc_channel<0, bool > *p_3_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_wvalid.bind(*p_3_m_axi_wvalid);
        p_3_m_axi_wvalid->set_sv_netview_offsetfromdp(8364632);
        xsim_sc_channel<0, bool > *p_3_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_wready.bind(*p_3_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_3_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->m_axi_bresp.bind(*p_3_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_3_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_3_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_bvalid.bind(*p_3_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_3_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_3_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_bready.bind(*p_3_m_axi_bready);
        p_3_m_axi_bready->set_sv_netview_offsetfromdp(8364856);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_m_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->m_axi_araddr.bind(*p_3_m_axi_araddr);
        p_3_m_axi_araddr->set_sv_netview_offsetfromdp(8364912);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_3_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_3->m_axi_arprot.bind(*p_3_m_axi_arprot);
        p_3_m_axi_arprot->set_sv_netview_offsetfromdp(8364968);
        xsim_sc_channel<0, bool > *p_3_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_arvalid.bind(*p_3_m_axi_arvalid);
        p_3_m_axi_arvalid->set_sv_netview_offsetfromdp(8365024);
        xsim_sc_channel<0, bool > *p_3_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_arready.bind(*p_3_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_3_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_3_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_3->m_axi_rdata.bind(*p_3_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_3_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->m_axi_rresp.bind(*p_3_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_3_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_3_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_rvalid.bind(*p_3_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_3_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_3_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_rready.bind(*p_3_m_axi_rready);
        p_3_m_axi_rready->set_sv_netview_offsetfromdp(8365304);
        sc_inst_4 = new pfm_dynamic_m01_regslice_5(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.m01_couplers.m01_regslice");
        sc_inst_4->xsim_set_dbg_index(1967);
        xsim_sc_channel<0, bool > *p_4_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_4->aclk.bind(*p_4_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_4_aclk);
        xsim_sc_channel<0, bool > *p_4_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_4->aresetn.bind(*p_4_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_4_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->s_axi_awaddr.bind(*p_4_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->s_axi_awprot.bind(*p_4_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_4_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_awvalid.bind(*p_4_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_4_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_awready.bind(*p_4_s_axi_awready);
        p_4_s_axi_awready->set_sv_netview_offsetfromdp(8365688);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_4_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_4->s_axi_wdata.bind(*p_4_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_4_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_4->s_axi_wstrb.bind(*p_4_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_4_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_wvalid.bind(*p_4_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_4_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_wready.bind(*p_4_s_axi_wready);
        p_4_s_axi_wready->set_sv_netview_offsetfromdp(8365912);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->s_axi_bresp.bind(*p_4_s_axi_bresp);
        p_4_s_axi_bresp->set_sv_netview_offsetfromdp(8365968);
        xsim_sc_channel<0, bool > *p_4_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_bvalid.bind(*p_4_s_axi_bvalid);
        p_4_s_axi_bvalid->set_sv_netview_offsetfromdp(8366024);
        xsim_sc_channel<0, bool > *p_4_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_bready.bind(*p_4_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_bready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->s_axi_araddr.bind(*p_4_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->s_axi_arprot.bind(*p_4_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_4_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_arvalid.bind(*p_4_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_4_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_arready.bind(*p_4_s_axi_arready);
        p_4_s_axi_arready->set_sv_netview_offsetfromdp(8366304);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_4_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_4->s_axi_rdata.bind(*p_4_s_axi_rdata);
        p_4_s_axi_rdata->set_sv_netview_offsetfromdp(8366360);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->s_axi_rresp.bind(*p_4_s_axi_rresp);
        p_4_s_axi_rresp->set_sv_netview_offsetfromdp(8366416);
        xsim_sc_channel<0, bool > *p_4_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_rvalid.bind(*p_4_s_axi_rvalid);
        p_4_s_axi_rvalid->set_sv_netview_offsetfromdp(8366472);
        xsim_sc_channel<0, bool > *p_4_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_rready.bind(*p_4_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_rready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_m_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->m_axi_awaddr.bind(*p_4_m_axi_awaddr);
        p_4_m_axi_awaddr->set_sv_netview_offsetfromdp(8366584);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->m_axi_awprot.bind(*p_4_m_axi_awprot);
        p_4_m_axi_awprot->set_sv_netview_offsetfromdp(8366640);
        xsim_sc_channel<0, bool > *p_4_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axi_awvalid.bind(*p_4_m_axi_awvalid);
        p_4_m_axi_awvalid->set_sv_netview_offsetfromdp(8366696);
        xsim_sc_channel<0, bool > *p_4_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axi_awready.bind(*p_4_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_4_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_4_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_4->m_axi_wdata.bind(*p_4_m_axi_wdata);
        p_4_m_axi_wdata->set_sv_netview_offsetfromdp(8366808);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_4_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_4->m_axi_wstrb.bind(*p_4_m_axi_wstrb);
        p_4_m_axi_wstrb->set_sv_netview_offsetfromdp(8366864);
        xsim_sc_channel<0, bool > *p_4_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axi_wvalid.bind(*p_4_m_axi_wvalid);
        p_4_m_axi_wvalid->set_sv_netview_offsetfromdp(8366920);
        xsim_sc_channel<0, bool > *p_4_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axi_wready.bind(*p_4_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_4_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->m_axi_bresp.bind(*p_4_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_4_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_4_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axi_bvalid.bind(*p_4_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_4_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_4_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axi_bready.bind(*p_4_m_axi_bready);
        p_4_m_axi_bready->set_sv_netview_offsetfromdp(8367144);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_m_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->m_axi_araddr.bind(*p_4_m_axi_araddr);
        p_4_m_axi_araddr->set_sv_netview_offsetfromdp(8367200);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->m_axi_arprot.bind(*p_4_m_axi_arprot);
        p_4_m_axi_arprot->set_sv_netview_offsetfromdp(8367256);
        xsim_sc_channel<0, bool > *p_4_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axi_arvalid.bind(*p_4_m_axi_arvalid);
        p_4_m_axi_arvalid->set_sv_netview_offsetfromdp(8367312);
        xsim_sc_channel<0, bool > *p_4_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axi_arready.bind(*p_4_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_4_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_4_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_4->m_axi_rdata.bind(*p_4_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_4_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->m_axi_rresp.bind(*p_4_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_4_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_4_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axi_rvalid.bind(*p_4_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_4_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_4_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axi_rready.bind(*p_4_m_axi_rready);
        p_4_m_axi_rready->set_sv_netview_offsetfromdp(8367592);
        sc_inst_5 = new pfm_dynamic_auto_cc_3(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.m02_couplers.auto_cc");
        sc_inst_5->xsim_set_dbg_index(2008);
        xsim_sc_channel<0, bool > *p_5_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_aclk.bind(*p_5_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_5_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_aresetn.bind(*p_5_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->s_axi_awaddr.bind(*p_5_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->s_axi_awprot.bind(*p_5_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_5_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_awvalid.bind(*p_5_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_5_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_awready.bind(*p_5_s_axi_awready);
        p_5_s_axi_awready->set_sv_netview_offsetfromdp(8404616);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_5_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_5->s_axi_wdata.bind(*p_5_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->s_axi_wstrb.bind(*p_5_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_5_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_wvalid.bind(*p_5_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_5_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_wready.bind(*p_5_s_axi_wready);
        p_5_s_axi_wready->set_sv_netview_offsetfromdp(8404840);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->s_axi_bresp.bind(*p_5_s_axi_bresp);
        p_5_s_axi_bresp->set_sv_netview_offsetfromdp(8404896);
        xsim_sc_channel<0, bool > *p_5_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_bvalid.bind(*p_5_s_axi_bvalid);
        p_5_s_axi_bvalid->set_sv_netview_offsetfromdp(8404952);
        xsim_sc_channel<0, bool > *p_5_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_bready.bind(*p_5_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_bready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->s_axi_araddr.bind(*p_5_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->s_axi_arprot.bind(*p_5_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_5_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_arvalid.bind(*p_5_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_5_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_arready.bind(*p_5_s_axi_arready);
        p_5_s_axi_arready->set_sv_netview_offsetfromdp(8405232);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_5_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_5->s_axi_rdata.bind(*p_5_s_axi_rdata);
        p_5_s_axi_rdata->set_sv_netview_offsetfromdp(8405288);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->s_axi_rresp.bind(*p_5_s_axi_rresp);
        p_5_s_axi_rresp->set_sv_netview_offsetfromdp(8405344);
        xsim_sc_channel<0, bool > *p_5_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_rvalid.bind(*p_5_s_axi_rvalid);
        p_5_s_axi_rvalid->set_sv_netview_offsetfromdp(8405400);
        xsim_sc_channel<0, bool > *p_5_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_rready.bind(*p_5_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_rready);
        xsim_sc_channel<0, bool > *p_5_m_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_aclk.bind(*p_5_m_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_5_m_axi_aclk);
        xsim_sc_channel<0, bool > *p_5_m_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_aresetn.bind(*p_5_m_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_5_m_axi_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_m_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->m_axi_awaddr.bind(*p_5_m_axi_awaddr);
        p_5_m_axi_awaddr->set_sv_netview_offsetfromdp(8405624);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->m_axi_awprot.bind(*p_5_m_axi_awprot);
        p_5_m_axi_awprot->set_sv_netview_offsetfromdp(8405680);
        xsim_sc_channel<0, bool > *p_5_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_awvalid.bind(*p_5_m_axi_awvalid);
        p_5_m_axi_awvalid->set_sv_netview_offsetfromdp(8405736);
        xsim_sc_channel<0, bool > *p_5_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_awready.bind(*p_5_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_5_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_5_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_5->m_axi_wdata.bind(*p_5_m_axi_wdata);
        p_5_m_axi_wdata->set_sv_netview_offsetfromdp(8405848);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->m_axi_wstrb.bind(*p_5_m_axi_wstrb);
        p_5_m_axi_wstrb->set_sv_netview_offsetfromdp(8405904);
        xsim_sc_channel<0, bool > *p_5_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_wvalid.bind(*p_5_m_axi_wvalid);
        p_5_m_axi_wvalid->set_sv_netview_offsetfromdp(8405960);
        xsim_sc_channel<0, bool > *p_5_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_wready.bind(*p_5_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_5_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->m_axi_bresp.bind(*p_5_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_5_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_5_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_bvalid.bind(*p_5_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_5_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_bready.bind(*p_5_m_axi_bready);
        p_5_m_axi_bready->set_sv_netview_offsetfromdp(8406184);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_m_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->m_axi_araddr.bind(*p_5_m_axi_araddr);
        p_5_m_axi_araddr->set_sv_netview_offsetfromdp(8406240);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->m_axi_arprot.bind(*p_5_m_axi_arprot);
        p_5_m_axi_arprot->set_sv_netview_offsetfromdp(8406296);
        xsim_sc_channel<0, bool > *p_5_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_arvalid.bind(*p_5_m_axi_arvalid);
        p_5_m_axi_arvalid->set_sv_netview_offsetfromdp(8406352);
        xsim_sc_channel<0, bool > *p_5_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_arready.bind(*p_5_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_5_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_5_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_5->m_axi_rdata.bind(*p_5_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_5_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->m_axi_rresp.bind(*p_5_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_5_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_5_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_rvalid.bind(*p_5_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_5_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_rready.bind(*p_5_m_axi_rready);
        p_5_m_axi_rready->set_sv_netview_offsetfromdp(8406632);
        sc_inst_6 = new pfm_dynamic_m02_regslice_5(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.m02_couplers.m02_regslice");
        sc_inst_6->xsim_set_dbg_index(2009);
        xsim_sc_channel<0, bool > *p_6_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_6->aclk.bind(*p_6_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_6_aclk);
        xsim_sc_channel<0, bool > *p_6_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_6->aresetn.bind(*p_6_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_6_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->s_axi_awaddr.bind(*p_6_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->s_axi_awprot.bind(*p_6_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_6_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_awvalid.bind(*p_6_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_6_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_awready.bind(*p_6_s_axi_awready);
        p_6_s_axi_awready->set_sv_netview_offsetfromdp(8407016);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->s_axi_wdata.bind(*p_6_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->s_axi_wstrb.bind(*p_6_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_6_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_wvalid.bind(*p_6_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_6_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_wready.bind(*p_6_s_axi_wready);
        p_6_s_axi_wready->set_sv_netview_offsetfromdp(8407240);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->s_axi_bresp.bind(*p_6_s_axi_bresp);
        p_6_s_axi_bresp->set_sv_netview_offsetfromdp(8407296);
        xsim_sc_channel<0, bool > *p_6_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_bvalid.bind(*p_6_s_axi_bvalid);
        p_6_s_axi_bvalid->set_sv_netview_offsetfromdp(8407352);
        xsim_sc_channel<0, bool > *p_6_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_bready.bind(*p_6_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_bready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->s_axi_araddr.bind(*p_6_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->s_axi_arprot.bind(*p_6_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_6_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_arvalid.bind(*p_6_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_6_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_arready.bind(*p_6_s_axi_arready);
        p_6_s_axi_arready->set_sv_netview_offsetfromdp(8407632);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->s_axi_rdata.bind(*p_6_s_axi_rdata);
        p_6_s_axi_rdata->set_sv_netview_offsetfromdp(8407688);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->s_axi_rresp.bind(*p_6_s_axi_rresp);
        p_6_s_axi_rresp->set_sv_netview_offsetfromdp(8407744);
        xsim_sc_channel<0, bool > *p_6_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_rvalid.bind(*p_6_s_axi_rvalid);
        p_6_s_axi_rvalid->set_sv_netview_offsetfromdp(8407800);
        xsim_sc_channel<0, bool > *p_6_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_rready.bind(*p_6_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_rready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_m_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->m_axi_awaddr.bind(*p_6_m_axi_awaddr);
        p_6_m_axi_awaddr->set_sv_netview_offsetfromdp(8407912);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->m_axi_awprot.bind(*p_6_m_axi_awprot);
        p_6_m_axi_awprot->set_sv_netview_offsetfromdp(8407968);
        xsim_sc_channel<0, bool > *p_6_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axi_awvalid.bind(*p_6_m_axi_awvalid);
        p_6_m_axi_awvalid->set_sv_netview_offsetfromdp(8408024);
        xsim_sc_channel<0, bool > *p_6_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axi_awready.bind(*p_6_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_6_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->m_axi_wdata.bind(*p_6_m_axi_wdata);
        p_6_m_axi_wdata->set_sv_netview_offsetfromdp(8408136);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->m_axi_wstrb.bind(*p_6_m_axi_wstrb);
        p_6_m_axi_wstrb->set_sv_netview_offsetfromdp(8408192);
        xsim_sc_channel<0, bool > *p_6_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axi_wvalid.bind(*p_6_m_axi_wvalid);
        p_6_m_axi_wvalid->set_sv_netview_offsetfromdp(8408248);
        xsim_sc_channel<0, bool > *p_6_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axi_wready.bind(*p_6_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_6_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->m_axi_bresp.bind(*p_6_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_6_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_6_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axi_bvalid.bind(*p_6_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_6_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_6_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axi_bready.bind(*p_6_m_axi_bready);
        p_6_m_axi_bready->set_sv_netview_offsetfromdp(8408472);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_m_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->m_axi_araddr.bind(*p_6_m_axi_araddr);
        p_6_m_axi_araddr->set_sv_netview_offsetfromdp(8408528);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->m_axi_arprot.bind(*p_6_m_axi_arprot);
        p_6_m_axi_arprot->set_sv_netview_offsetfromdp(8408584);
        xsim_sc_channel<0, bool > *p_6_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axi_arvalid.bind(*p_6_m_axi_arvalid);
        p_6_m_axi_arvalid->set_sv_netview_offsetfromdp(8408640);
        xsim_sc_channel<0, bool > *p_6_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axi_arready.bind(*p_6_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_6_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->m_axi_rdata.bind(*p_6_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_6_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->m_axi_rresp.bind(*p_6_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_6_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_6_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axi_rvalid.bind(*p_6_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_6_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_6_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axi_rready.bind(*p_6_m_axi_rready);
        p_6_m_axi_rready->set_sv_netview_offsetfromdp(8408920);
        sc_inst_7 = new pfm_dynamic_auto_cc_4(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.m03_couplers.auto_cc");
        sc_inst_7->xsim_set_dbg_index(2052);
        xsim_sc_channel<0, bool > *p_7_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_aclk.bind(*p_7_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_7_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_aresetn.bind(*p_7_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_7_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_7->s_axi_awaddr.bind(*p_7_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->s_axi_awprot.bind(*p_7_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_7_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_awvalid.bind(*p_7_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_7_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_awready.bind(*p_7_s_axi_awready);
        p_7_s_axi_awready->set_sv_netview_offsetfromdp(8444792);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_7_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_7->s_axi_wdata.bind(*p_7_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->s_axi_wstrb.bind(*p_7_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_7_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_wvalid.bind(*p_7_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_7_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_wready.bind(*p_7_s_axi_wready);
        p_7_s_axi_wready->set_sv_netview_offsetfromdp(8445016);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->s_axi_bresp.bind(*p_7_s_axi_bresp);
        p_7_s_axi_bresp->set_sv_netview_offsetfromdp(8445072);
        xsim_sc_channel<0, bool > *p_7_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_bvalid.bind(*p_7_s_axi_bvalid);
        p_7_s_axi_bvalid->set_sv_netview_offsetfromdp(8445128);
        xsim_sc_channel<0, bool > *p_7_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_bready.bind(*p_7_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_bready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_7_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_7->s_axi_araddr.bind(*p_7_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->s_axi_arprot.bind(*p_7_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_7_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_arvalid.bind(*p_7_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_7_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_arready.bind(*p_7_s_axi_arready);
        p_7_s_axi_arready->set_sv_netview_offsetfromdp(8445408);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_7_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_7->s_axi_rdata.bind(*p_7_s_axi_rdata);
        p_7_s_axi_rdata->set_sv_netview_offsetfromdp(8445464);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->s_axi_rresp.bind(*p_7_s_axi_rresp);
        p_7_s_axi_rresp->set_sv_netview_offsetfromdp(8445520);
        xsim_sc_channel<0, bool > *p_7_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_rvalid.bind(*p_7_s_axi_rvalid);
        p_7_s_axi_rvalid->set_sv_netview_offsetfromdp(8445576);
        xsim_sc_channel<0, bool > *p_7_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_rready.bind(*p_7_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_rready);
        xsim_sc_channel<0, bool > *p_7_m_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_aclk.bind(*p_7_m_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_axi_aclk);
        xsim_sc_channel<0, bool > *p_7_m_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_aresetn.bind(*p_7_m_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_axi_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_7_m_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_7->m_axi_awaddr.bind(*p_7_m_axi_awaddr);
        p_7_m_axi_awaddr->set_sv_netview_offsetfromdp(8445800);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->m_axi_awprot.bind(*p_7_m_axi_awprot);
        p_7_m_axi_awprot->set_sv_netview_offsetfromdp(8445856);
        xsim_sc_channel<0, bool > *p_7_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_awvalid.bind(*p_7_m_axi_awvalid);
        p_7_m_axi_awvalid->set_sv_netview_offsetfromdp(8445912);
        xsim_sc_channel<0, bool > *p_7_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_awready.bind(*p_7_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_7_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_7->m_axi_wdata.bind(*p_7_m_axi_wdata);
        p_7_m_axi_wdata->set_sv_netview_offsetfromdp(8446024);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->m_axi_wstrb.bind(*p_7_m_axi_wstrb);
        p_7_m_axi_wstrb->set_sv_netview_offsetfromdp(8446080);
        xsim_sc_channel<0, bool > *p_7_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_wvalid.bind(*p_7_m_axi_wvalid);
        p_7_m_axi_wvalid->set_sv_netview_offsetfromdp(8446136);
        xsim_sc_channel<0, bool > *p_7_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_wready.bind(*p_7_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->m_axi_bresp.bind(*p_7_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_7_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_bvalid.bind(*p_7_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_7_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_bready.bind(*p_7_m_axi_bready);
        p_7_m_axi_bready->set_sv_netview_offsetfromdp(8446360);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_7_m_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_7->m_axi_araddr.bind(*p_7_m_axi_araddr);
        p_7_m_axi_araddr->set_sv_netview_offsetfromdp(8446416);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->m_axi_arprot.bind(*p_7_m_axi_arprot);
        p_7_m_axi_arprot->set_sv_netview_offsetfromdp(8446472);
        xsim_sc_channel<0, bool > *p_7_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_arvalid.bind(*p_7_m_axi_arvalid);
        p_7_m_axi_arvalid->set_sv_netview_offsetfromdp(8446528);
        xsim_sc_channel<0, bool > *p_7_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_arready.bind(*p_7_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_7_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_7->m_axi_rdata.bind(*p_7_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->m_axi_rresp.bind(*p_7_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_7_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_rvalid.bind(*p_7_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_7_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_rready.bind(*p_7_m_axi_rready);
        p_7_m_axi_rready->set_sv_netview_offsetfromdp(8446808);
        sc_inst_8 = new pfm_dynamic_m03_regslice_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.m03_couplers.m03_regslice");
        sc_inst_8->xsim_set_dbg_index(2053);
        xsim_sc_channel<0, bool > *p_8_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_8->aclk.bind(*p_8_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_8_aclk);
        xsim_sc_channel<0, bool > *p_8_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_8->aresetn.bind(*p_8_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_8_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_8_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_8->s_axi_awaddr.bind(*p_8_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->s_axi_awprot.bind(*p_8_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_8_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_axi_awvalid.bind(*p_8_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_8_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_axi_awready.bind(*p_8_s_axi_awready);
        p_8_s_axi_awready->set_sv_netview_offsetfromdp(8447192);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->s_axi_wdata.bind(*p_8_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->s_axi_wstrb.bind(*p_8_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_8_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_axi_wvalid.bind(*p_8_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_8_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_axi_wready.bind(*p_8_s_axi_wready);
        p_8_s_axi_wready->set_sv_netview_offsetfromdp(8447416);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->s_axi_bresp.bind(*p_8_s_axi_bresp);
        p_8_s_axi_bresp->set_sv_netview_offsetfromdp(8447472);
        xsim_sc_channel<0, bool > *p_8_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_axi_bvalid.bind(*p_8_s_axi_bvalid);
        p_8_s_axi_bvalid->set_sv_netview_offsetfromdp(8447528);
        xsim_sc_channel<0, bool > *p_8_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_axi_bready.bind(*p_8_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_axi_bready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_8_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_8->s_axi_araddr.bind(*p_8_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->s_axi_arprot.bind(*p_8_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_8_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_axi_arvalid.bind(*p_8_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_8_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_axi_arready.bind(*p_8_s_axi_arready);
        p_8_s_axi_arready->set_sv_netview_offsetfromdp(8447808);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->s_axi_rdata.bind(*p_8_s_axi_rdata);
        p_8_s_axi_rdata->set_sv_netview_offsetfromdp(8447864);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->s_axi_rresp.bind(*p_8_s_axi_rresp);
        p_8_s_axi_rresp->set_sv_netview_offsetfromdp(8447920);
        xsim_sc_channel<0, bool > *p_8_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_axi_rvalid.bind(*p_8_s_axi_rvalid);
        p_8_s_axi_rvalid->set_sv_netview_offsetfromdp(8447976);
        xsim_sc_channel<0, bool > *p_8_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_axi_rready.bind(*p_8_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_axi_rready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_8_m_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_8->m_axi_awaddr.bind(*p_8_m_axi_awaddr);
        p_8_m_axi_awaddr->set_sv_netview_offsetfromdp(8448088);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->m_axi_awprot.bind(*p_8_m_axi_awprot);
        p_8_m_axi_awprot->set_sv_netview_offsetfromdp(8448144);
        xsim_sc_channel<0, bool > *p_8_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->m_axi_awvalid.bind(*p_8_m_axi_awvalid);
        p_8_m_axi_awvalid->set_sv_netview_offsetfromdp(8448200);
        xsim_sc_channel<0, bool > *p_8_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_8->m_axi_awready.bind(*p_8_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->m_axi_wdata.bind(*p_8_m_axi_wdata);
        p_8_m_axi_wdata->set_sv_netview_offsetfromdp(8448312);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->m_axi_wstrb.bind(*p_8_m_axi_wstrb);
        p_8_m_axi_wstrb->set_sv_netview_offsetfromdp(8448368);
        xsim_sc_channel<0, bool > *p_8_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->m_axi_wvalid.bind(*p_8_m_axi_wvalid);
        p_8_m_axi_wvalid->set_sv_netview_offsetfromdp(8448424);
        xsim_sc_channel<0, bool > *p_8_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_8->m_axi_wready.bind(*p_8_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->m_axi_bresp.bind(*p_8_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_8_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->m_axi_bvalid.bind(*p_8_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_8_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_8->m_axi_bready.bind(*p_8_m_axi_bready);
        p_8_m_axi_bready->set_sv_netview_offsetfromdp(8448648);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_8_m_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_8->m_axi_araddr.bind(*p_8_m_axi_araddr);
        p_8_m_axi_araddr->set_sv_netview_offsetfromdp(8448704);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->m_axi_arprot.bind(*p_8_m_axi_arprot);
        p_8_m_axi_arprot->set_sv_netview_offsetfromdp(8448760);
        xsim_sc_channel<0, bool > *p_8_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->m_axi_arvalid.bind(*p_8_m_axi_arvalid);
        p_8_m_axi_arvalid->set_sv_netview_offsetfromdp(8448816);
        xsim_sc_channel<0, bool > *p_8_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_8->m_axi_arready.bind(*p_8_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->m_axi_rdata.bind(*p_8_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->m_axi_rresp.bind(*p_8_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_8_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->m_axi_rvalid.bind(*p_8_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_8_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_8->m_axi_rready.bind(*p_8_m_axi_rready);
        p_8_m_axi_rready->set_sv_netview_offsetfromdp(8449096);
        sc_inst_9 = new pfm_dynamic_auto_cc_5(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.m04_couplers.auto_cc");
        sc_inst_9->xsim_set_dbg_index(2094);
        xsim_sc_channel<0, bool > *p_9_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_aclk.bind(*p_9_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_9_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_aresetn.bind(*p_9_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_9_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_9->s_axi_awaddr.bind(*p_9_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->s_axi_awprot.bind(*p_9_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_9_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_awvalid.bind(*p_9_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_9_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_awready.bind(*p_9_s_axi_awready);
        p_9_s_axi_awready->set_sv_netview_offsetfromdp(8484968);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->s_axi_wdata.bind(*p_9_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->s_axi_wstrb.bind(*p_9_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_9_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_wvalid.bind(*p_9_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_9_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_wready.bind(*p_9_s_axi_wready);
        p_9_s_axi_wready->set_sv_netview_offsetfromdp(8485192);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->s_axi_bresp.bind(*p_9_s_axi_bresp);
        p_9_s_axi_bresp->set_sv_netview_offsetfromdp(8485248);
        xsim_sc_channel<0, bool > *p_9_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_bvalid.bind(*p_9_s_axi_bvalid);
        p_9_s_axi_bvalid->set_sv_netview_offsetfromdp(8485304);
        xsim_sc_channel<0, bool > *p_9_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_bready.bind(*p_9_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_bready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_9_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_9->s_axi_araddr.bind(*p_9_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->s_axi_arprot.bind(*p_9_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_9_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_arvalid.bind(*p_9_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_9_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_arready.bind(*p_9_s_axi_arready);
        p_9_s_axi_arready->set_sv_netview_offsetfromdp(8485584);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->s_axi_rdata.bind(*p_9_s_axi_rdata);
        p_9_s_axi_rdata->set_sv_netview_offsetfromdp(8485640);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->s_axi_rresp.bind(*p_9_s_axi_rresp);
        p_9_s_axi_rresp->set_sv_netview_offsetfromdp(8485696);
        xsim_sc_channel<0, bool > *p_9_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_rvalid.bind(*p_9_s_axi_rvalid);
        p_9_s_axi_rvalid->set_sv_netview_offsetfromdp(8485752);
        xsim_sc_channel<0, bool > *p_9_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_rready.bind(*p_9_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_rready);
        xsim_sc_channel<0, bool > *p_9_m_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_9->m_axi_aclk.bind(*p_9_m_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_9_m_axi_aclk);
        xsim_sc_channel<0, bool > *p_9_m_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_9->m_axi_aresetn.bind(*p_9_m_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_9_m_axi_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_9_m_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_9->m_axi_awaddr.bind(*p_9_m_axi_awaddr);
        p_9_m_axi_awaddr->set_sv_netview_offsetfromdp(8485976);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->m_axi_awprot.bind(*p_9_m_axi_awprot);
        p_9_m_axi_awprot->set_sv_netview_offsetfromdp(8486032);
        xsim_sc_channel<0, bool > *p_9_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->m_axi_awvalid.bind(*p_9_m_axi_awvalid);
        p_9_m_axi_awvalid->set_sv_netview_offsetfromdp(8486088);
        xsim_sc_channel<0, bool > *p_9_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_9->m_axi_awready.bind(*p_9_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_9_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->m_axi_wdata.bind(*p_9_m_axi_wdata);
        p_9_m_axi_wdata->set_sv_netview_offsetfromdp(8486200);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->m_axi_wstrb.bind(*p_9_m_axi_wstrb);
        p_9_m_axi_wstrb->set_sv_netview_offsetfromdp(8486256);
        xsim_sc_channel<0, bool > *p_9_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->m_axi_wvalid.bind(*p_9_m_axi_wvalid);
        p_9_m_axi_wvalid->set_sv_netview_offsetfromdp(8486312);
        xsim_sc_channel<0, bool > *p_9_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_9->m_axi_wready.bind(*p_9_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_9_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->m_axi_bresp.bind(*p_9_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_9_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_9_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->m_axi_bvalid.bind(*p_9_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_9_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_9->m_axi_bready.bind(*p_9_m_axi_bready);
        p_9_m_axi_bready->set_sv_netview_offsetfromdp(8486536);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_9_m_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_9->m_axi_araddr.bind(*p_9_m_axi_araddr);
        p_9_m_axi_araddr->set_sv_netview_offsetfromdp(8486592);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->m_axi_arprot.bind(*p_9_m_axi_arprot);
        p_9_m_axi_arprot->set_sv_netview_offsetfromdp(8486648);
        xsim_sc_channel<0, bool > *p_9_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->m_axi_arvalid.bind(*p_9_m_axi_arvalid);
        p_9_m_axi_arvalid->set_sv_netview_offsetfromdp(8486704);
        xsim_sc_channel<0, bool > *p_9_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_9->m_axi_arready.bind(*p_9_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_9_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->m_axi_rdata.bind(*p_9_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_9_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->m_axi_rresp.bind(*p_9_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_9_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_9_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->m_axi_rvalid.bind(*p_9_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_9_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_9->m_axi_rready.bind(*p_9_m_axi_rready);
        p_9_m_axi_rready->set_sv_netview_offsetfromdp(8486984);
        sc_inst_10 = new pfm_dynamic_m04_regslice_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.m04_couplers.m04_regslice");
        sc_inst_10->xsim_set_dbg_index(2095);
        xsim_sc_channel<0, bool > *p_10_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_10->aclk.bind(*p_10_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_10_aclk);
        xsim_sc_channel<0, bool > *p_10_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_10->aresetn.bind(*p_10_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_10_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_10_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_10->s_axi_awaddr.bind(*p_10_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->s_axi_awprot.bind(*p_10_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_10_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_axi_awvalid.bind(*p_10_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_10_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_axi_awready.bind(*p_10_s_axi_awready);
        p_10_s_axi_awready->set_sv_netview_offsetfromdp(8487368);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_10_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_10->s_axi_wdata.bind(*p_10_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->s_axi_wstrb.bind(*p_10_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_10_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_axi_wvalid.bind(*p_10_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_10_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_axi_wready.bind(*p_10_s_axi_wready);
        p_10_s_axi_wready->set_sv_netview_offsetfromdp(8487592);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->s_axi_bresp.bind(*p_10_s_axi_bresp);
        p_10_s_axi_bresp->set_sv_netview_offsetfromdp(8487648);
        xsim_sc_channel<0, bool > *p_10_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_axi_bvalid.bind(*p_10_s_axi_bvalid);
        p_10_s_axi_bvalid->set_sv_netview_offsetfromdp(8487704);
        xsim_sc_channel<0, bool > *p_10_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_axi_bready.bind(*p_10_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_bready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_10_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_10->s_axi_araddr.bind(*p_10_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->s_axi_arprot.bind(*p_10_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_10_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_axi_arvalid.bind(*p_10_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_10_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_axi_arready.bind(*p_10_s_axi_arready);
        p_10_s_axi_arready->set_sv_netview_offsetfromdp(8487984);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_10_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_10->s_axi_rdata.bind(*p_10_s_axi_rdata);
        p_10_s_axi_rdata->set_sv_netview_offsetfromdp(8488040);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->s_axi_rresp.bind(*p_10_s_axi_rresp);
        p_10_s_axi_rresp->set_sv_netview_offsetfromdp(8488096);
        xsim_sc_channel<0, bool > *p_10_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_axi_rvalid.bind(*p_10_s_axi_rvalid);
        p_10_s_axi_rvalid->set_sv_netview_offsetfromdp(8488152);
        xsim_sc_channel<0, bool > *p_10_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_axi_rready.bind(*p_10_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_rready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_10_m_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_10->m_axi_awaddr.bind(*p_10_m_axi_awaddr);
        p_10_m_axi_awaddr->set_sv_netview_offsetfromdp(8488264);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->m_axi_awprot.bind(*p_10_m_axi_awprot);
        p_10_m_axi_awprot->set_sv_netview_offsetfromdp(8488320);
        xsim_sc_channel<0, bool > *p_10_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->m_axi_awvalid.bind(*p_10_m_axi_awvalid);
        p_10_m_axi_awvalid->set_sv_netview_offsetfromdp(8488376);
        xsim_sc_channel<0, bool > *p_10_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_10->m_axi_awready.bind(*p_10_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_10_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_10->m_axi_wdata.bind(*p_10_m_axi_wdata);
        p_10_m_axi_wdata->set_sv_netview_offsetfromdp(8488488);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->m_axi_wstrb.bind(*p_10_m_axi_wstrb);
        p_10_m_axi_wstrb->set_sv_netview_offsetfromdp(8488544);
        xsim_sc_channel<0, bool > *p_10_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->m_axi_wvalid.bind(*p_10_m_axi_wvalid);
        p_10_m_axi_wvalid->set_sv_netview_offsetfromdp(8488600);
        xsim_sc_channel<0, bool > *p_10_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_10->m_axi_wready.bind(*p_10_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->m_axi_bresp.bind(*p_10_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_10_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->m_axi_bvalid.bind(*p_10_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_10_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_10->m_axi_bready.bind(*p_10_m_axi_bready);
        p_10_m_axi_bready->set_sv_netview_offsetfromdp(8488824);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_10_m_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_10->m_axi_araddr.bind(*p_10_m_axi_araddr);
        p_10_m_axi_araddr->set_sv_netview_offsetfromdp(8488880);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->m_axi_arprot.bind(*p_10_m_axi_arprot);
        p_10_m_axi_arprot->set_sv_netview_offsetfromdp(8488936);
        xsim_sc_channel<0, bool > *p_10_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->m_axi_arvalid.bind(*p_10_m_axi_arvalid);
        p_10_m_axi_arvalid->set_sv_netview_offsetfromdp(8488992);
        xsim_sc_channel<0, bool > *p_10_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_10->m_axi_arready.bind(*p_10_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_10_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_10->m_axi_rdata.bind(*p_10_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->m_axi_rresp.bind(*p_10_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_10_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->m_axi_rvalid.bind(*p_10_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_10_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_10->m_axi_rready.bind(*p_10_m_axi_rready);
        p_10_m_axi_rready->set_sv_netview_offsetfromdp(8489272);
        sc_inst_11 = new pfm_dynamic_auto_cc_6(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.m05_couplers.auto_cc");
        sc_inst_11->xsim_set_dbg_index(2136);
        xsim_sc_channel<0, bool > *p_11_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axi_aclk.bind(*p_11_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_11_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axi_aresetn.bind(*p_11_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axi_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_11_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_11->s_axi_awaddr.bind(*p_11_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_11_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_11->s_axi_awprot.bind(*p_11_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_11_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axi_awvalid.bind(*p_11_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_11_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axi_awready.bind(*p_11_s_axi_awready);
        p_11_s_axi_awready->set_sv_netview_offsetfromdp(8525144);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_11_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_11->s_axi_wdata.bind(*p_11_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->s_axi_wstrb.bind(*p_11_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_11_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axi_wvalid.bind(*p_11_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_11_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axi_wready.bind(*p_11_s_axi_wready);
        p_11_s_axi_wready->set_sv_netview_offsetfromdp(8525368);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->s_axi_bresp.bind(*p_11_s_axi_bresp);
        p_11_s_axi_bresp->set_sv_netview_offsetfromdp(8525424);
        xsim_sc_channel<0, bool > *p_11_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axi_bvalid.bind(*p_11_s_axi_bvalid);
        p_11_s_axi_bvalid->set_sv_netview_offsetfromdp(8525480);
        xsim_sc_channel<0, bool > *p_11_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axi_bready.bind(*p_11_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axi_bready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_11_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_11->s_axi_araddr.bind(*p_11_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_11_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_11->s_axi_arprot.bind(*p_11_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_11_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axi_arvalid.bind(*p_11_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_11_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axi_arready.bind(*p_11_s_axi_arready);
        p_11_s_axi_arready->set_sv_netview_offsetfromdp(8525760);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_11_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_11->s_axi_rdata.bind(*p_11_s_axi_rdata);
        p_11_s_axi_rdata->set_sv_netview_offsetfromdp(8525816);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->s_axi_rresp.bind(*p_11_s_axi_rresp);
        p_11_s_axi_rresp->set_sv_netview_offsetfromdp(8525872);
        xsim_sc_channel<0, bool > *p_11_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axi_rvalid.bind(*p_11_s_axi_rvalid);
        p_11_s_axi_rvalid->set_sv_netview_offsetfromdp(8525928);
        xsim_sc_channel<0, bool > *p_11_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axi_rready.bind(*p_11_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axi_rready);
        xsim_sc_channel<0, bool > *p_11_m_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_11->m_axi_aclk.bind(*p_11_m_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_11_m_axi_aclk);
        xsim_sc_channel<0, bool > *p_11_m_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_11->m_axi_aresetn.bind(*p_11_m_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_11_m_axi_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_11_m_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_11->m_axi_awaddr.bind(*p_11_m_axi_awaddr);
        p_11_m_axi_awaddr->set_sv_netview_offsetfromdp(8526152);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_11_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_11->m_axi_awprot.bind(*p_11_m_axi_awprot);
        p_11_m_axi_awprot->set_sv_netview_offsetfromdp(8526208);
        xsim_sc_channel<0, bool > *p_11_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->m_axi_awvalid.bind(*p_11_m_axi_awvalid);
        p_11_m_axi_awvalid->set_sv_netview_offsetfromdp(8526264);
        xsim_sc_channel<0, bool > *p_11_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_11->m_axi_awready.bind(*p_11_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_11_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_11_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_11->m_axi_wdata.bind(*p_11_m_axi_wdata);
        p_11_m_axi_wdata->set_sv_netview_offsetfromdp(8526376);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->m_axi_wstrb.bind(*p_11_m_axi_wstrb);
        p_11_m_axi_wstrb->set_sv_netview_offsetfromdp(8526432);
        xsim_sc_channel<0, bool > *p_11_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->m_axi_wvalid.bind(*p_11_m_axi_wvalid);
        p_11_m_axi_wvalid->set_sv_netview_offsetfromdp(8526488);
        xsim_sc_channel<0, bool > *p_11_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_11->m_axi_wready.bind(*p_11_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_11_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->m_axi_bresp.bind(*p_11_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_11_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_11_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->m_axi_bvalid.bind(*p_11_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_11_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_11_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_11->m_axi_bready.bind(*p_11_m_axi_bready);
        p_11_m_axi_bready->set_sv_netview_offsetfromdp(8526712);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_11_m_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_11->m_axi_araddr.bind(*p_11_m_axi_araddr);
        p_11_m_axi_araddr->set_sv_netview_offsetfromdp(8526768);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_11_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_11->m_axi_arprot.bind(*p_11_m_axi_arprot);
        p_11_m_axi_arprot->set_sv_netview_offsetfromdp(8526824);
        xsim_sc_channel<0, bool > *p_11_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->m_axi_arvalid.bind(*p_11_m_axi_arvalid);
        p_11_m_axi_arvalid->set_sv_netview_offsetfromdp(8526880);
        xsim_sc_channel<0, bool > *p_11_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_11->m_axi_arready.bind(*p_11_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_11_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_11_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_11->m_axi_rdata.bind(*p_11_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_11_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->m_axi_rresp.bind(*p_11_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_11_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_11_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->m_axi_rvalid.bind(*p_11_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_11_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_11_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_11->m_axi_rready.bind(*p_11_m_axi_rready);
        p_11_m_axi_rready->set_sv_netview_offsetfromdp(8527160);
        sc_inst_12 = new pfm_dynamic_m05_regslice_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.m05_couplers.m05_regslice");
        sc_inst_12->xsim_set_dbg_index(2137);
        xsim_sc_channel<0, bool > *p_12_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_12->aclk.bind(*p_12_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_12_aclk);
        xsim_sc_channel<0, bool > *p_12_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_12->aresetn.bind(*p_12_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_12_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_12_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_12->s_axi_awaddr.bind(*p_12_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->s_axi_awprot.bind(*p_12_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_12_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->s_axi_awvalid.bind(*p_12_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_12_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_12->s_axi_awready.bind(*p_12_s_axi_awready);
        p_12_s_axi_awready->set_sv_netview_offsetfromdp(8527544);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_12_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_12->s_axi_wdata.bind(*p_12_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->s_axi_wstrb.bind(*p_12_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_12_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->s_axi_wvalid.bind(*p_12_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_12_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_12->s_axi_wready.bind(*p_12_s_axi_wready);
        p_12_s_axi_wready->set_sv_netview_offsetfromdp(8527768);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->s_axi_bresp.bind(*p_12_s_axi_bresp);
        p_12_s_axi_bresp->set_sv_netview_offsetfromdp(8527824);
        xsim_sc_channel<0, bool > *p_12_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->s_axi_bvalid.bind(*p_12_s_axi_bvalid);
        p_12_s_axi_bvalid->set_sv_netview_offsetfromdp(8527880);
        xsim_sc_channel<0, bool > *p_12_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_12->s_axi_bready.bind(*p_12_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_axi_bready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_12_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_12->s_axi_araddr.bind(*p_12_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->s_axi_arprot.bind(*p_12_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_12_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->s_axi_arvalid.bind(*p_12_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_12_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_12->s_axi_arready.bind(*p_12_s_axi_arready);
        p_12_s_axi_arready->set_sv_netview_offsetfromdp(8528160);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_12_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_12->s_axi_rdata.bind(*p_12_s_axi_rdata);
        p_12_s_axi_rdata->set_sv_netview_offsetfromdp(8528216);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->s_axi_rresp.bind(*p_12_s_axi_rresp);
        p_12_s_axi_rresp->set_sv_netview_offsetfromdp(8528272);
        xsim_sc_channel<0, bool > *p_12_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->s_axi_rvalid.bind(*p_12_s_axi_rvalid);
        p_12_s_axi_rvalid->set_sv_netview_offsetfromdp(8528328);
        xsim_sc_channel<0, bool > *p_12_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_12->s_axi_rready.bind(*p_12_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_axi_rready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_12_m_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_12->m_axi_awaddr.bind(*p_12_m_axi_awaddr);
        p_12_m_axi_awaddr->set_sv_netview_offsetfromdp(8528440);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->m_axi_awprot.bind(*p_12_m_axi_awprot);
        p_12_m_axi_awprot->set_sv_netview_offsetfromdp(8528496);
        xsim_sc_channel<0, bool > *p_12_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->m_axi_awvalid.bind(*p_12_m_axi_awvalid);
        p_12_m_axi_awvalid->set_sv_netview_offsetfromdp(8528552);
        xsim_sc_channel<0, bool > *p_12_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_12->m_axi_awready.bind(*p_12_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_12_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_12->m_axi_wdata.bind(*p_12_m_axi_wdata);
        p_12_m_axi_wdata->set_sv_netview_offsetfromdp(8528664);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->m_axi_wstrb.bind(*p_12_m_axi_wstrb);
        p_12_m_axi_wstrb->set_sv_netview_offsetfromdp(8528720);
        xsim_sc_channel<0, bool > *p_12_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->m_axi_wvalid.bind(*p_12_m_axi_wvalid);
        p_12_m_axi_wvalid->set_sv_netview_offsetfromdp(8528776);
        xsim_sc_channel<0, bool > *p_12_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_12->m_axi_wready.bind(*p_12_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->m_axi_bresp.bind(*p_12_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_12_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->m_axi_bvalid.bind(*p_12_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_12_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_12->m_axi_bready.bind(*p_12_m_axi_bready);
        p_12_m_axi_bready->set_sv_netview_offsetfromdp(8529000);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_12_m_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_12->m_axi_araddr.bind(*p_12_m_axi_araddr);
        p_12_m_axi_araddr->set_sv_netview_offsetfromdp(8529056);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->m_axi_arprot.bind(*p_12_m_axi_arprot);
        p_12_m_axi_arprot->set_sv_netview_offsetfromdp(8529112);
        xsim_sc_channel<0, bool > *p_12_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->m_axi_arvalid.bind(*p_12_m_axi_arvalid);
        p_12_m_axi_arvalid->set_sv_netview_offsetfromdp(8529168);
        xsim_sc_channel<0, bool > *p_12_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_12->m_axi_arready.bind(*p_12_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_12_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_12->m_axi_rdata.bind(*p_12_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->m_axi_rresp.bind(*p_12_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_12_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->m_axi_rvalid.bind(*p_12_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_12_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_12->m_axi_rready.bind(*p_12_m_axi_rready);
        p_12_m_axi_rready->set_sv_netview_offsetfromdp(8529448);
        sc_inst_13 = new pfm_dynamic_s00_regslice_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.s00_couplers.s00_regslice");
        sc_inst_13->xsim_set_dbg_index(2178);
        xsim_sc_channel<0, bool > *p_13_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_13->aclk.bind(*p_13_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_13_aclk);
        xsim_sc_channel<0, bool > *p_13_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_13->aresetn.bind(*p_13_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_13_aresetn);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_13_s_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_13->s_axi_awaddr.bind(*p_13_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->s_axi_awprot.bind(*p_13_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_13_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axi_awvalid.bind(*p_13_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_13_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axi_awready.bind(*p_13_s_axi_awready);
        p_13_s_axi_awready->set_sv_netview_offsetfromdp(8553088);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_13_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_13->s_axi_wdata.bind(*p_13_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->s_axi_wstrb.bind(*p_13_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_13_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axi_wvalid.bind(*p_13_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_13_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axi_wready.bind(*p_13_s_axi_wready);
        p_13_s_axi_wready->set_sv_netview_offsetfromdp(8553312);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->s_axi_bresp.bind(*p_13_s_axi_bresp);
        p_13_s_axi_bresp->set_sv_netview_offsetfromdp(8553368);
        xsim_sc_channel<0, bool > *p_13_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axi_bvalid.bind(*p_13_s_axi_bvalid);
        p_13_s_axi_bvalid->set_sv_netview_offsetfromdp(8553424);
        xsim_sc_channel<0, bool > *p_13_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axi_bready.bind(*p_13_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_13_s_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_13->s_axi_araddr.bind(*p_13_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->s_axi_arprot.bind(*p_13_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_13_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axi_arvalid.bind(*p_13_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_13_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axi_arready.bind(*p_13_s_axi_arready);
        p_13_s_axi_arready->set_sv_netview_offsetfromdp(8553704);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_13_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_13->s_axi_rdata.bind(*p_13_s_axi_rdata);
        p_13_s_axi_rdata->set_sv_netview_offsetfromdp(8553760);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->s_axi_rresp.bind(*p_13_s_axi_rresp);
        p_13_s_axi_rresp->set_sv_netview_offsetfromdp(8553816);
        xsim_sc_channel<0, bool > *p_13_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axi_rvalid.bind(*p_13_s_axi_rvalid);
        p_13_s_axi_rvalid->set_sv_netview_offsetfromdp(8553872);
        xsim_sc_channel<0, bool > *p_13_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axi_rready.bind(*p_13_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_rready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_13_m_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_13->m_axi_awaddr.bind(*p_13_m_axi_awaddr);
        p_13_m_axi_awaddr->set_sv_netview_offsetfromdp(8553984);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->m_axi_awprot.bind(*p_13_m_axi_awprot);
        p_13_m_axi_awprot->set_sv_netview_offsetfromdp(8554040);
        xsim_sc_channel<0, bool > *p_13_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->m_axi_awvalid.bind(*p_13_m_axi_awvalid);
        p_13_m_axi_awvalid->set_sv_netview_offsetfromdp(8554096);
        xsim_sc_channel<0, bool > *p_13_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_13->m_axi_awready.bind(*p_13_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_13_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_13->m_axi_wdata.bind(*p_13_m_axi_wdata);
        p_13_m_axi_wdata->set_sv_netview_offsetfromdp(8554208);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->m_axi_wstrb.bind(*p_13_m_axi_wstrb);
        p_13_m_axi_wstrb->set_sv_netview_offsetfromdp(8554264);
        xsim_sc_channel<0, bool > *p_13_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->m_axi_wvalid.bind(*p_13_m_axi_wvalid);
        p_13_m_axi_wvalid->set_sv_netview_offsetfromdp(8554320);
        xsim_sc_channel<0, bool > *p_13_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_13->m_axi_wready.bind(*p_13_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->m_axi_bresp.bind(*p_13_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_13_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->m_axi_bvalid.bind(*p_13_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_13_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_13->m_axi_bready.bind(*p_13_m_axi_bready);
        p_13_m_axi_bready->set_sv_netview_offsetfromdp(8554544);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_13_m_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_13->m_axi_araddr.bind(*p_13_m_axi_araddr);
        p_13_m_axi_araddr->set_sv_netview_offsetfromdp(8554600);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->m_axi_arprot.bind(*p_13_m_axi_arprot);
        p_13_m_axi_arprot->set_sv_netview_offsetfromdp(8554656);
        xsim_sc_channel<0, bool > *p_13_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->m_axi_arvalid.bind(*p_13_m_axi_arvalid);
        p_13_m_axi_arvalid->set_sv_netview_offsetfromdp(8554712);
        xsim_sc_channel<0, bool > *p_13_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_13->m_axi_arready.bind(*p_13_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_13_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_13->m_axi_rdata.bind(*p_13_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->m_axi_rresp.bind(*p_13_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_13_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->m_axi_rvalid.bind(*p_13_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_13_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_13->m_axi_rready.bind(*p_13_m_axi_rready);
        p_13_m_axi_rready->set_sv_netview_offsetfromdp(8554992);
        sc_inst_14 = new pfm_dynamic_xbar_4(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.xbar");
        sc_inst_14->xsim_set_dbg_index(788);
        xsim_sc_channel<0, bool > *p_14_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_14->aclk.bind(*p_14_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_14_aclk);
        xsim_sc_channel<0, bool > *p_14_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_14->aresetn.bind(*p_14_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_14_aresetn);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_14_s_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_14->s_axi_awaddr.bind(*p_14_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->s_axi_awprot.bind(*p_14_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_awprot);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s_axi_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s_axi_awvalid.bind(*p_14_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_awvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s_axi_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s_axi_awready.bind(*p_14_s_axi_awready);
        p_14_s_axi_awready->set_sv_netview_offsetfromdp(8555376);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_14_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_14->s_axi_wdata.bind(*p_14_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s_axi_wstrb.bind(*p_14_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_wstrb);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s_axi_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s_axi_wvalid.bind(*p_14_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_wvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s_axi_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s_axi_wready.bind(*p_14_s_axi_wready);
        p_14_s_axi_wready->set_sv_netview_offsetfromdp(8555600);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->s_axi_bresp.bind(*p_14_s_axi_bresp);
        p_14_s_axi_bresp->set_sv_netview_offsetfromdp(8555656);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s_axi_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s_axi_bvalid.bind(*p_14_s_axi_bvalid);
        p_14_s_axi_bvalid->set_sv_netview_offsetfromdp(8555712);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s_axi_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s_axi_bready.bind(*p_14_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_14_s_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_14->s_axi_araddr.bind(*p_14_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->s_axi_arprot.bind(*p_14_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_arprot);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s_axi_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s_axi_arvalid.bind(*p_14_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_arvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s_axi_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s_axi_arready.bind(*p_14_s_axi_arready);
        p_14_s_axi_arready->set_sv_netview_offsetfromdp(8555992);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_14_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_14->s_axi_rdata.bind(*p_14_s_axi_rdata);
        p_14_s_axi_rdata->set_sv_netview_offsetfromdp(8556048);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->s_axi_rresp.bind(*p_14_s_axi_rresp);
        p_14_s_axi_rresp->set_sv_netview_offsetfromdp(8556104);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s_axi_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s_axi_rvalid.bind(*p_14_s_axi_rvalid);
        p_14_s_axi_rvalid->set_sv_netview_offsetfromdp(8556160);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s_axi_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s_axi_rready.bind(*p_14_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_rready);
        xsim_sc_channel<384, sc_dt::sc_bv<384> > *p_14_m_axi_awaddr = new xsim_sc_channel<384, sc_dt::sc_bv<384> >();
        sc_inst_14->m_axi_awaddr.bind(*p_14_m_axi_awaddr);
        p_14_m_axi_awaddr->set_sv_netview_offsetfromdp(8556272);
        xsim_sc_channel<18, sc_dt::sc_bv<18> > *p_14_m_axi_awprot = new xsim_sc_channel<18, sc_dt::sc_bv<18> >();
        sc_inst_14->m_axi_awprot.bind(*p_14_m_axi_awprot);
        p_14_m_axi_awprot->set_sv_netview_offsetfromdp(8556328);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_14_m_axi_awvalid = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_14->m_axi_awvalid.bind(*p_14_m_axi_awvalid);
        p_14_m_axi_awvalid->set_sv_netview_offsetfromdp(8556384);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_14_m_axi_awready = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_14->m_axi_awready.bind(*p_14_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m_axi_awready);
        xsim_sc_channel<192, sc_dt::sc_bv<192> > *p_14_m_axi_wdata = new xsim_sc_channel<192, sc_dt::sc_bv<192> >();
        sc_inst_14->m_axi_wdata.bind(*p_14_m_axi_wdata);
        p_14_m_axi_wdata->set_sv_netview_offsetfromdp(8556496);
        xsim_sc_channel<24, sc_dt::sc_bv<24> > *p_14_m_axi_wstrb = new xsim_sc_channel<24, sc_dt::sc_bv<24> >();
        sc_inst_14->m_axi_wstrb.bind(*p_14_m_axi_wstrb);
        p_14_m_axi_wstrb->set_sv_netview_offsetfromdp(8556552);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_14_m_axi_wvalid = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_14->m_axi_wvalid.bind(*p_14_m_axi_wvalid);
        p_14_m_axi_wvalid->set_sv_netview_offsetfromdp(8556608);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_14_m_axi_wready = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_14->m_axi_wready.bind(*p_14_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m_axi_wready);
        xsim_sc_channel<12, sc_dt::sc_bv<12> > *p_14_m_axi_bresp = new xsim_sc_channel<12, sc_dt::sc_bv<12> >();
        sc_inst_14->m_axi_bresp.bind(*p_14_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m_axi_bresp);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_14_m_axi_bvalid = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_14->m_axi_bvalid.bind(*p_14_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m_axi_bvalid);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_14_m_axi_bready = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_14->m_axi_bready.bind(*p_14_m_axi_bready);
        p_14_m_axi_bready->set_sv_netview_offsetfromdp(8556832);
        xsim_sc_channel<384, sc_dt::sc_bv<384> > *p_14_m_axi_araddr = new xsim_sc_channel<384, sc_dt::sc_bv<384> >();
        sc_inst_14->m_axi_araddr.bind(*p_14_m_axi_araddr);
        p_14_m_axi_araddr->set_sv_netview_offsetfromdp(8556888);
        xsim_sc_channel<18, sc_dt::sc_bv<18> > *p_14_m_axi_arprot = new xsim_sc_channel<18, sc_dt::sc_bv<18> >();
        sc_inst_14->m_axi_arprot.bind(*p_14_m_axi_arprot);
        p_14_m_axi_arprot->set_sv_netview_offsetfromdp(8556944);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_14_m_axi_arvalid = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_14->m_axi_arvalid.bind(*p_14_m_axi_arvalid);
        p_14_m_axi_arvalid->set_sv_netview_offsetfromdp(8557000);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_14_m_axi_arready = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_14->m_axi_arready.bind(*p_14_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m_axi_arready);
        xsim_sc_channel<192, sc_dt::sc_bv<192> > *p_14_m_axi_rdata = new xsim_sc_channel<192, sc_dt::sc_bv<192> >();
        sc_inst_14->m_axi_rdata.bind(*p_14_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m_axi_rdata);
        xsim_sc_channel<12, sc_dt::sc_bv<12> > *p_14_m_axi_rresp = new xsim_sc_channel<12, sc_dt::sc_bv<12> >();
        sc_inst_14->m_axi_rresp.bind(*p_14_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m_axi_rresp);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_14_m_axi_rvalid = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_14->m_axi_rvalid.bind(*p_14_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m_axi_rvalid);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_14_m_axi_rready = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_14->m_axi_rready.bind(*p_14_m_axi_rready);
        p_14_m_axi_rready->set_sv_netview_offsetfromdp(8557280);
        sc_inst_15 = new pfm_dynamic_dpa_hub_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_hub");
        sc_inst_15->xsim_set_dbg_index(399);
        xsim_sc_channel<0, bool > *p_15_s_aximm_clk = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_aximm_clk.bind(*p_15_s_aximm_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_aximm_clk);
        xsim_sc_channel<0, bool > *p_15_s_aximm_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_aximm_aresetn.bind(*p_15_s_aximm_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_aximm_aresetn);
        xsim_sc_channel<0, bool > *p_15_trace_clk = new xsim_sc_channel<0, bool >();
        sc_inst_15->trace_clk.bind(*p_15_trace_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_15_trace_clk);
        xsim_sc_channel<0, bool > *p_15_trace_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_15->trace_aresetn.bind(*p_15_trace_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_15_trace_aresetn);
        xsim_sc_channel<0, bool > *p_15_axilite_clk = new xsim_sc_channel<0, bool >();
        sc_inst_15->axilite_clk.bind(*p_15_axilite_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_15_axilite_clk);
        xsim_sc_channel<0, bool > *p_15_axilite_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_15->axilite_aresetn.bind(*p_15_axilite_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_15_axilite_aresetn);
        xsim_sc_channel<0, bool > *p_15_trace_tready0 = new xsim_sc_channel<0, bool >();
        sc_inst_15->trace_tready0.bind(*p_15_trace_tready0);
        p_15_trace_tready0->set_sv_netview_offsetfromdp(8557720);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_trace_tdata0 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->trace_tdata0.bind(*p_15_trace_tdata0);
        (*_glb_hdl_sc_channel_map).push_back(p_15_trace_tdata0);
        xsim_sc_channel<0, bool > *p_15_trace_tlast0 = new xsim_sc_channel<0, bool >();
        sc_inst_15->trace_tlast0.bind(*p_15_trace_tlast0);
        (*_glb_hdl_sc_channel_map).push_back(p_15_trace_tlast0);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_trace_tid0 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->trace_tid0.bind(*p_15_trace_tid0);
        (*_glb_hdl_sc_channel_map).push_back(p_15_trace_tid0);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_trace_tdest0 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->trace_tdest0.bind(*p_15_trace_tdest0);
        (*_glb_hdl_sc_channel_map).push_back(p_15_trace_tdest0);
        xsim_sc_channel<0, bool > *p_15_trace_tvalid0 = new xsim_sc_channel<0, bool >();
        sc_inst_15->trace_tvalid0.bind(*p_15_trace_tvalid0);
        (*_glb_hdl_sc_channel_map).push_back(p_15_trace_tvalid0);
        xsim_sc_channel<0, bool > *p_15_trace_tready1 = new xsim_sc_channel<0, bool >();
        sc_inst_15->trace_tready1.bind(*p_15_trace_tready1);
        p_15_trace_tready1->set_sv_netview_offsetfromdp(8558056);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_trace_tdata1 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->trace_tdata1.bind(*p_15_trace_tdata1);
        p_15_trace_tdata1->set_sv_netview_offsetfromdp(8558112);
        xsim_sc_channel<0, bool > *p_15_trace_tlast1 = new xsim_sc_channel<0, bool >();
        sc_inst_15->trace_tlast1.bind(*p_15_trace_tlast1);
        (*_glb_hdl_sc_channel_map).push_back(p_15_trace_tlast1);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_trace_tid1 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->trace_tid1.bind(*p_15_trace_tid1);
        (*_glb_hdl_sc_channel_map).push_back(p_15_trace_tid1);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_trace_tdest1 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->trace_tdest1.bind(*p_15_trace_tdest1);
        (*_glb_hdl_sc_channel_map).push_back(p_15_trace_tdest1);
        xsim_sc_channel<0, bool > *p_15_trace_tvalid1 = new xsim_sc_channel<0, bool >();
        sc_inst_15->trace_tvalid1.bind(*p_15_trace_tvalid1);
        (*_glb_hdl_sc_channel_map).push_back(p_15_trace_tvalid1);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_trace_tdata2 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->trace_tdata2.bind(*p_15_trace_tdata2);
        (*_glb_hdl_sc_channel_map).push_back(p_15_trace_tdata2);
        xsim_sc_channel<0, bool > *p_15_trace_tready2 = new xsim_sc_channel<0, bool >();
        sc_inst_15->trace_tready2.bind(*p_15_trace_tready2);
        p_15_trace_tready2->set_sv_netview_offsetfromdp(8558448);
        xsim_sc_channel<0, bool > *p_15_trace_tlast2 = new xsim_sc_channel<0, bool >();
        sc_inst_15->trace_tlast2.bind(*p_15_trace_tlast2);
        (*_glb_hdl_sc_channel_map).push_back(p_15_trace_tlast2);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_trace_tid2 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->trace_tid2.bind(*p_15_trace_tid2);
        (*_glb_hdl_sc_channel_map).push_back(p_15_trace_tid2);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_trace_tdest2 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->trace_tdest2.bind(*p_15_trace_tdest2);
        (*_glb_hdl_sc_channel_map).push_back(p_15_trace_tdest2);
        xsim_sc_channel<0, bool > *p_15_trace_tvalid2 = new xsim_sc_channel<0, bool >();
        sc_inst_15->trace_tvalid2.bind(*p_15_trace_tvalid2);
        (*_glb_hdl_sc_channel_map).push_back(p_15_trace_tvalid2);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_trace_tdata3 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->trace_tdata3.bind(*p_15_trace_tdata3);
        (*_glb_hdl_sc_channel_map).push_back(p_15_trace_tdata3);
        xsim_sc_channel<0, bool > *p_15_trace_tready3 = new xsim_sc_channel<0, bool >();
        sc_inst_15->trace_tready3.bind(*p_15_trace_tready3);
        p_15_trace_tready3->set_sv_netview_offsetfromdp(8558784);
        xsim_sc_channel<0, bool > *p_15_trace_tlast3 = new xsim_sc_channel<0, bool >();
        sc_inst_15->trace_tlast3.bind(*p_15_trace_tlast3);
        (*_glb_hdl_sc_channel_map).push_back(p_15_trace_tlast3);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_trace_tid3 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->trace_tid3.bind(*p_15_trace_tid3);
        (*_glb_hdl_sc_channel_map).push_back(p_15_trace_tid3);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_trace_tdest3 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->trace_tdest3.bind(*p_15_trace_tdest3);
        (*_glb_hdl_sc_channel_map).push_back(p_15_trace_tdest3);
        xsim_sc_channel<0, bool > *p_15_trace_tvalid3 = new xsim_sc_channel<0, bool >();
        sc_inst_15->trace_tvalid3.bind(*p_15_trace_tvalid3);
        (*_glb_hdl_sc_channel_map).push_back(p_15_trace_tvalid3);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_trace_tdata4 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->trace_tdata4.bind(*p_15_trace_tdata4);
        (*_glb_hdl_sc_channel_map).push_back(p_15_trace_tdata4);
        xsim_sc_channel<0, bool > *p_15_trace_tready4 = new xsim_sc_channel<0, bool >();
        sc_inst_15->trace_tready4.bind(*p_15_trace_tready4);
        p_15_trace_tready4->set_sv_netview_offsetfromdp(8559120);
        xsim_sc_channel<0, bool > *p_15_trace_tlast4 = new xsim_sc_channel<0, bool >();
        sc_inst_15->trace_tlast4.bind(*p_15_trace_tlast4);
        (*_glb_hdl_sc_channel_map).push_back(p_15_trace_tlast4);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_trace_tid4 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->trace_tid4.bind(*p_15_trace_tid4);
        (*_glb_hdl_sc_channel_map).push_back(p_15_trace_tid4);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_trace_tdest4 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->trace_tdest4.bind(*p_15_trace_tdest4);
        (*_glb_hdl_sc_channel_map).push_back(p_15_trace_tdest4);
        xsim_sc_channel<0, bool > *p_15_trace_tvalid4 = new xsim_sc_channel<0, bool >();
        sc_inst_15->trace_tvalid4.bind(*p_15_trace_tvalid4);
        (*_glb_hdl_sc_channel_map).push_back(p_15_trace_tvalid4);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_trace_tdata5 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->trace_tdata5.bind(*p_15_trace_tdata5);
        (*_glb_hdl_sc_channel_map).push_back(p_15_trace_tdata5);
        xsim_sc_channel<0, bool > *p_15_trace_tready5 = new xsim_sc_channel<0, bool >();
        sc_inst_15->trace_tready5.bind(*p_15_trace_tready5);
        p_15_trace_tready5->set_sv_netview_offsetfromdp(8559456);
        xsim_sc_channel<0, bool > *p_15_trace_tlast5 = new xsim_sc_channel<0, bool >();
        sc_inst_15->trace_tlast5.bind(*p_15_trace_tlast5);
        (*_glb_hdl_sc_channel_map).push_back(p_15_trace_tlast5);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_trace_tid5 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->trace_tid5.bind(*p_15_trace_tid5);
        (*_glb_hdl_sc_channel_map).push_back(p_15_trace_tid5);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_trace_tdest5 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->trace_tdest5.bind(*p_15_trace_tdest5);
        (*_glb_hdl_sc_channel_map).push_back(p_15_trace_tdest5);
        xsim_sc_channel<0, bool > *p_15_trace_tvalid5 = new xsim_sc_channel<0, bool >();
        sc_inst_15->trace_tvalid5.bind(*p_15_trace_tvalid5);
        (*_glb_hdl_sc_channel_map).push_back(p_15_trace_tvalid5);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_trace_tdata6 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->trace_tdata6.bind(*p_15_trace_tdata6);
        (*_glb_hdl_sc_channel_map).push_back(p_15_trace_tdata6);
        xsim_sc_channel<0, bool > *p_15_trace_tready6 = new xsim_sc_channel<0, bool >();
        sc_inst_15->trace_tready6.bind(*p_15_trace_tready6);
        p_15_trace_tready6->set_sv_netview_offsetfromdp(8559792);
        xsim_sc_channel<0, bool > *p_15_trace_tlast6 = new xsim_sc_channel<0, bool >();
        sc_inst_15->trace_tlast6.bind(*p_15_trace_tlast6);
        (*_glb_hdl_sc_channel_map).push_back(p_15_trace_tlast6);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_trace_tid6 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->trace_tid6.bind(*p_15_trace_tid6);
        (*_glb_hdl_sc_channel_map).push_back(p_15_trace_tid6);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_trace_tdest6 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->trace_tdest6.bind(*p_15_trace_tdest6);
        (*_glb_hdl_sc_channel_map).push_back(p_15_trace_tdest6);
        xsim_sc_channel<0, bool > *p_15_trace_tvalid6 = new xsim_sc_channel<0, bool >();
        sc_inst_15->trace_tvalid6.bind(*p_15_trace_tvalid6);
        (*_glb_hdl_sc_channel_map).push_back(p_15_trace_tvalid6);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->s_axi_awaddr.bind(*p_15_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_awaddr);
        xsim_sc_channel<0, bool > *p_15_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_awvalid.bind(*p_15_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_15_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_awready.bind(*p_15_s_axi_awready);
        p_15_s_axi_awready->set_sv_netview_offsetfromdp(8560184);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_15_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_15->s_axi_wdata.bind(*p_15_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s_axi_wstrb.bind(*p_15_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_15_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_wvalid.bind(*p_15_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_15_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_wready.bind(*p_15_s_axi_wready);
        p_15_s_axi_wready->set_sv_netview_offsetfromdp(8560408);
        xsim_sc_channel<0, bool > *p_15_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_bvalid.bind(*p_15_s_axi_bvalid);
        p_15_s_axi_bvalid->set_sv_netview_offsetfromdp(8560464);
        xsim_sc_channel<0, bool > *p_15_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_bready.bind(*p_15_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s_axi_bresp.bind(*p_15_s_axi_bresp);
        p_15_s_axi_bresp->set_sv_netview_offsetfromdp(8560576);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->s_axi_araddr.bind(*p_15_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_araddr);
        xsim_sc_channel<0, bool > *p_15_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_arvalid.bind(*p_15_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_15_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_arready.bind(*p_15_s_axi_arready);
        p_15_s_axi_arready->set_sv_netview_offsetfromdp(8560744);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_15_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_15->s_axi_rdata.bind(*p_15_s_axi_rdata);
        p_15_s_axi_rdata->set_sv_netview_offsetfromdp(8560800);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s_axi_rresp.bind(*p_15_s_axi_rresp);
        p_15_s_axi_rresp->set_sv_netview_offsetfromdp(8560856);
        xsim_sc_channel<0, bool > *p_15_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_rvalid.bind(*p_15_s_axi_rvalid);
        p_15_s_axi_rvalid->set_sv_netview_offsetfromdp(8560912);
        xsim_sc_channel<0, bool > *p_15_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_rready.bind(*p_15_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_rready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_s_axihub_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->s_axihub_awaddr.bind(*p_15_s_axihub_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axihub_awaddr);
        xsim_sc_channel<0, bool > *p_15_s_axihub_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axihub_awvalid.bind(*p_15_s_axihub_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axihub_awvalid);
        xsim_sc_channel<0, bool > *p_15_s_axihub_awready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axihub_awready.bind(*p_15_s_axihub_awready);
        p_15_s_axihub_awready->set_sv_netview_offsetfromdp(8561136);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_15_s_axihub_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_15->s_axihub_wdata.bind(*p_15_s_axihub_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axihub_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s_axihub_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s_axihub_wstrb.bind(*p_15_s_axihub_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axihub_wstrb);
        xsim_sc_channel<0, bool > *p_15_s_axihub_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axihub_wvalid.bind(*p_15_s_axihub_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axihub_wvalid);
        xsim_sc_channel<0, bool > *p_15_s_axihub_wready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axihub_wready.bind(*p_15_s_axihub_wready);
        p_15_s_axihub_wready->set_sv_netview_offsetfromdp(8561360);
        xsim_sc_channel<0, bool > *p_15_s_axihub_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axihub_bvalid.bind(*p_15_s_axihub_bvalid);
        p_15_s_axihub_bvalid->set_sv_netview_offsetfromdp(8561416);
        xsim_sc_channel<0, bool > *p_15_s_axihub_bready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axihub_bready.bind(*p_15_s_axihub_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axihub_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s_axihub_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s_axihub_bresp.bind(*p_15_s_axihub_bresp);
        p_15_s_axihub_bresp->set_sv_netview_offsetfromdp(8561528);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_s_axihub_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->s_axihub_araddr.bind(*p_15_s_axihub_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axihub_araddr);
        xsim_sc_channel<0, bool > *p_15_s_axihub_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axihub_arvalid.bind(*p_15_s_axihub_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axihub_arvalid);
        xsim_sc_channel<0, bool > *p_15_s_axihub_arready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axihub_arready.bind(*p_15_s_axihub_arready);
        p_15_s_axihub_arready->set_sv_netview_offsetfromdp(8561696);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_15_s_axihub_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_15->s_axihub_rdata.bind(*p_15_s_axihub_rdata);
        p_15_s_axihub_rdata->set_sv_netview_offsetfromdp(8561752);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s_axihub_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s_axihub_rresp.bind(*p_15_s_axihub_rresp);
        p_15_s_axihub_rresp->set_sv_netview_offsetfromdp(8561808);
        xsim_sc_channel<0, bool > *p_15_s_axihub_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axihub_rvalid.bind(*p_15_s_axihub_rvalid);
        p_15_s_axihub_rvalid->set_sv_netview_offsetfromdp(8561864);
        xsim_sc_channel<0, bool > *p_15_s_axihub_rready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axihub_rready.bind(*p_15_s_axihub_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axihub_rready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_15_s_aximm_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_15->s_aximm_awaddr.bind(*p_15_s_aximm_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_aximm_awaddr);
        xsim_sc_channel<0, bool > *p_15_s_aximm_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_aximm_awvalid.bind(*p_15_s_aximm_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_aximm_awvalid);
        xsim_sc_channel<0, bool > *p_15_s_aximm_awready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_aximm_awready.bind(*p_15_s_aximm_awready);
        p_15_s_aximm_awready->set_sv_netview_offsetfromdp(8562088);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_s_aximm_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->s_aximm_awlen.bind(*p_15_s_aximm_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_aximm_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_s_aximm_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->s_aximm_awsize.bind(*p_15_s_aximm_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_aximm_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s_aximm_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s_aximm_awburst.bind(*p_15_s_aximm_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_aximm_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_s_aximm_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->s_aximm_awid.bind(*p_15_s_aximm_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_aximm_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_s_aximm_wdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->s_aximm_wdata.bind(*p_15_s_aximm_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_aximm_wdata);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_s_aximm_wstrb = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->s_aximm_wstrb.bind(*p_15_s_aximm_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_aximm_wstrb);
        xsim_sc_channel<0, bool > *p_15_s_aximm_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_aximm_wvalid.bind(*p_15_s_aximm_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_aximm_wvalid);
        xsim_sc_channel<0, bool > *p_15_s_aximm_wready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_aximm_wready.bind(*p_15_s_aximm_wready);
        p_15_s_aximm_wready->set_sv_netview_offsetfromdp(8562536);
        xsim_sc_channel<0, bool > *p_15_s_aximm_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_aximm_bvalid.bind(*p_15_s_aximm_bvalid);
        p_15_s_aximm_bvalid->set_sv_netview_offsetfromdp(8562592);
        xsim_sc_channel<0, bool > *p_15_s_aximm_bready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_aximm_bready.bind(*p_15_s_aximm_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_aximm_bready);
        xsim_sc_channel<0, bool > *p_15_s_aximm_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_aximm_wlast.bind(*p_15_s_aximm_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_aximm_wlast);
        xsim_sc_channel<0, bool > *p_15_s_aximm_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_aximm_rlast.bind(*p_15_s_aximm_rlast);
        p_15_s_aximm_rlast->set_sv_netview_offsetfromdp(8562760);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s_aximm_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s_aximm_bresp.bind(*p_15_s_aximm_bresp);
        p_15_s_aximm_bresp->set_sv_netview_offsetfromdp(8562816);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_s_aximm_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->s_aximm_bid.bind(*p_15_s_aximm_bid);
        p_15_s_aximm_bid->set_sv_netview_offsetfromdp(8562872);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_15_s_aximm_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_15->s_aximm_araddr.bind(*p_15_s_aximm_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_aximm_araddr);
        xsim_sc_channel<0, bool > *p_15_s_aximm_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_aximm_arvalid.bind(*p_15_s_aximm_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_aximm_arvalid);
        xsim_sc_channel<0, bool > *p_15_s_aximm_arready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_aximm_arready.bind(*p_15_s_aximm_arready);
        p_15_s_aximm_arready->set_sv_netview_offsetfromdp(8563040);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_s_aximm_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->s_aximm_arlen.bind(*p_15_s_aximm_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_aximm_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_s_aximm_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->s_aximm_arsize.bind(*p_15_s_aximm_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_aximm_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s_aximm_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s_aximm_arburst.bind(*p_15_s_aximm_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_aximm_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_s_aximm_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->s_aximm_arid.bind(*p_15_s_aximm_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_aximm_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_s_aximm_rdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->s_aximm_rdata.bind(*p_15_s_aximm_rdata);
        p_15_s_aximm_rdata->set_sv_netview_offsetfromdp(8563320);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_s_aximm_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->s_aximm_rid.bind(*p_15_s_aximm_rid);
        p_15_s_aximm_rid->set_sv_netview_offsetfromdp(8563376);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s_aximm_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s_aximm_rresp.bind(*p_15_s_aximm_rresp);
        p_15_s_aximm_rresp->set_sv_netview_offsetfromdp(8563432);
        xsim_sc_channel<0, bool > *p_15_s_aximm_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_aximm_rvalid.bind(*p_15_s_aximm_rvalid);
        p_15_s_aximm_rvalid->set_sv_netview_offsetfromdp(8563488);
        xsim_sc_channel<0, bool > *p_15_s_aximm_rready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_aximm_rready.bind(*p_15_s_aximm_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_aximm_rready);
        sc_inst_16 = new pfm_dynamic_dpa_mon0_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_mon0");
        sc_inst_16->xsim_set_dbg_index(400);
        xsim_sc_channel<0, bool > *p_16_mon_clk = new xsim_sc_channel<0, bool >();
        sc_inst_16->mon_clk.bind(*p_16_mon_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_clk);
        xsim_sc_channel<0, bool > *p_16_mon_resetn = new xsim_sc_channel<0, bool >();
        sc_inst_16->mon_resetn.bind(*p_16_mon_resetn);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_resetn);
        xsim_sc_channel<0, bool > *p_16_trace_clk = new xsim_sc_channel<0, bool >();
        sc_inst_16->trace_clk.bind(*p_16_trace_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_16_trace_clk);
        xsim_sc_channel<0, bool > *p_16_trace_rst = new xsim_sc_channel<0, bool >();
        sc_inst_16->trace_rst.bind(*p_16_trace_rst);
        (*_glb_hdl_sc_channel_map).push_back(p_16_trace_rst);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_16_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_16->s_axi_awaddr.bind(*p_16_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_16_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_16->s_axi_awprot.bind(*p_16_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_16_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_awvalid.bind(*p_16_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_16_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_awready.bind(*p_16_s_axi_awready);
        p_16_s_axi_awready->set_sv_netview_offsetfromdp(8564040);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_16_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_16->s_axi_wdata.bind(*p_16_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->s_axi_wstrb.bind(*p_16_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_16_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_wvalid.bind(*p_16_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_16_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_wready.bind(*p_16_s_axi_wready);
        p_16_s_axi_wready->set_sv_netview_offsetfromdp(8564264);
        xsim_sc_channel<0, bool > *p_16_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_bvalid.bind(*p_16_s_axi_bvalid);
        p_16_s_axi_bvalid->set_sv_netview_offsetfromdp(8564320);
        xsim_sc_channel<0, bool > *p_16_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_bready.bind(*p_16_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->s_axi_bresp.bind(*p_16_s_axi_bresp);
        p_16_s_axi_bresp->set_sv_netview_offsetfromdp(8564432);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_16_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_16->s_axi_araddr.bind(*p_16_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_16_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_16->s_axi_arprot.bind(*p_16_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_16_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_arvalid.bind(*p_16_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_16_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_arready.bind(*p_16_s_axi_arready);
        p_16_s_axi_arready->set_sv_netview_offsetfromdp(8564656);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_16_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_16->s_axi_rdata.bind(*p_16_s_axi_rdata);
        p_16_s_axi_rdata->set_sv_netview_offsetfromdp(8564712);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->s_axi_rresp.bind(*p_16_s_axi_rresp);
        p_16_s_axi_rresp->set_sv_netview_offsetfromdp(8564768);
        xsim_sc_channel<0, bool > *p_16_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_rvalid.bind(*p_16_s_axi_rvalid);
        p_16_s_axi_rvalid->set_sv_netview_offsetfromdp(8564824);
        xsim_sc_channel<0, bool > *p_16_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_rready.bind(*p_16_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_rready);
        xsim_sc_channel<0, bool > *p_16_mon_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_16->mon_AWVALID.bind(*p_16_mon_AWVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_AWVALID);
        xsim_sc_channel<0, bool > *p_16_mon_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_16->mon_AWREADY.bind(*p_16_mon_AWREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_AWREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_16_mon_AWADDR = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_16->mon_AWADDR.bind(*p_16_mon_AWADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_AWADDR);
        xsim_sc_channel<0, bool > *p_16_mon_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_16->mon_WVALID.bind(*p_16_mon_WVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_WVALID);
        xsim_sc_channel<0, bool > *p_16_mon_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_16->mon_WREADY.bind(*p_16_mon_WREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_WREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_16_mon_WDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_16->mon_WDATA.bind(*p_16_mon_WDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_WDATA);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_mon_WSTRB = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->mon_WSTRB.bind(*p_16_mon_WSTRB);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_WSTRB);
        xsim_sc_channel<0, bool > *p_16_mon_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_16->mon_ARVALID.bind(*p_16_mon_ARVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_ARVALID);
        xsim_sc_channel<0, bool > *p_16_mon_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_16->mon_ARREADY.bind(*p_16_mon_ARREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_ARREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_16_mon_ARADDR = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_16->mon_ARADDR.bind(*p_16_mon_ARADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_ARADDR);
        xsim_sc_channel<0, bool > *p_16_mon_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_16->mon_RVALID.bind(*p_16_mon_RVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_RVALID);
        xsim_sc_channel<0, bool > *p_16_mon_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_16->mon_RREADY.bind(*p_16_mon_RREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_RREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_16_mon_RDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_16->mon_RDATA.bind(*p_16_mon_RDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_RDATA);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_mon_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->mon_RRESP.bind(*p_16_mon_RRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_RRESP);
        xsim_sc_channel<0, bool > *p_16_mon_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_16->mon_BVALID.bind(*p_16_mon_BVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_BVALID);
        xsim_sc_channel<0, bool > *p_16_mon_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_16->mon_BREADY.bind(*p_16_mon_BREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_BREADY);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_mon_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->mon_BRESP.bind(*p_16_mon_BRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_BRESP);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_m_axis_tready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->m_axis_tready.bind(*p_16_m_axis_tready);
        (*_glb_hdl_sc_channel_map).push_back(p_16_m_axis_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_16_m_axis_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_16->m_axis_tdata.bind(*p_16_m_axis_tdata);
        p_16_m_axis_tdata->set_sv_netview_offsetfromdp(8565944);
        xsim_sc_channel<0, bool > *p_16_m_axis_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_16->m_axis_tlast.bind(*p_16_m_axis_tlast);
        p_16_m_axis_tlast->set_sv_netview_offsetfromdp(8566000);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_16_m_axis_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_16->m_axis_tid.bind(*p_16_m_axis_tid);
        p_16_m_axis_tid->set_sv_netview_offsetfromdp(8566056);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_16_m_axis_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_16->m_axis_tdest.bind(*p_16_m_axis_tdest);
        p_16_m_axis_tdest->set_sv_netview_offsetfromdp(8566112);
        xsim_sc_channel<0, bool > *p_16_m_axis_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->m_axis_tvalid.bind(*p_16_m_axis_tvalid);
        p_16_m_axis_tvalid->set_sv_netview_offsetfromdp(8566168);
        xsim_sc_channel<0, bool > *p_16_ap_continue = new xsim_sc_channel<0, bool >();
        sc_inst_16->ap_continue.bind(*p_16_ap_continue);
        (*_glb_hdl_sc_channel_map).push_back(p_16_ap_continue);
        xsim_sc_channel<0, bool > *p_16_ap_ready = new xsim_sc_channel<0, bool >();
        sc_inst_16->ap_ready.bind(*p_16_ap_ready);
        (*_glb_hdl_sc_channel_map).push_back(p_16_ap_ready);
        xsim_sc_channel<0, bool > *p_16_ap_start = new xsim_sc_channel<0, bool >();
        sc_inst_16->ap_start.bind(*p_16_ap_start);
        (*_glb_hdl_sc_channel_map).push_back(p_16_ap_start);
        xsim_sc_channel<0, bool > *p_16_ap_idle = new xsim_sc_channel<0, bool >();
        sc_inst_16->ap_idle.bind(*p_16_ap_idle);
        (*_glb_hdl_sc_channel_map).push_back(p_16_ap_idle);
        xsim_sc_channel<0, bool > *p_16_ap_done = new xsim_sc_channel<0, bool >();
        sc_inst_16->ap_done.bind(*p_16_ap_done);
        (*_glb_hdl_sc_channel_map).push_back(p_16_ap_done);
        sc_inst_17 = new pfm_dynamic_dpa_mon1_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_mon1");
        sc_inst_17->xsim_set_dbg_index(401);
        xsim_sc_channel<0, bool > *p_17_mon_clk = new xsim_sc_channel<0, bool >();
        sc_inst_17->mon_clk.bind(*p_17_mon_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_17_mon_clk);
        xsim_sc_channel<0, bool > *p_17_mon_resetn = new xsim_sc_channel<0, bool >();
        sc_inst_17->mon_resetn.bind(*p_17_mon_resetn);
        (*_glb_hdl_sc_channel_map).push_back(p_17_mon_resetn);
        xsim_sc_channel<0, bool > *p_17_trace_clk = new xsim_sc_channel<0, bool >();
        sc_inst_17->trace_clk.bind(*p_17_trace_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_17_trace_clk);
        xsim_sc_channel<0, bool > *p_17_trace_rst = new xsim_sc_channel<0, bool >();
        sc_inst_17->trace_rst.bind(*p_17_trace_rst);
        (*_glb_hdl_sc_channel_map).push_back(p_17_trace_rst);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_17_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_17->s_axi_awaddr.bind(*p_17_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_awaddr);
        xsim_sc_channel<0, bool > *p_17_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_awvalid.bind(*p_17_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_17_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_awready.bind(*p_17_s_axi_awready);
        p_17_s_axi_awready->set_sv_netview_offsetfromdp(8566888);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_17_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_17->s_axi_wdata.bind(*p_17_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->s_axi_wstrb.bind(*p_17_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_17_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_wvalid.bind(*p_17_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_17_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_wready.bind(*p_17_s_axi_wready);
        p_17_s_axi_wready->set_sv_netview_offsetfromdp(8567112);
        xsim_sc_channel<0, bool > *p_17_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_bvalid.bind(*p_17_s_axi_bvalid);
        p_17_s_axi_bvalid->set_sv_netview_offsetfromdp(8567168);
        xsim_sc_channel<0, bool > *p_17_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_bready.bind(*p_17_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->s_axi_bresp.bind(*p_17_s_axi_bresp);
        p_17_s_axi_bresp->set_sv_netview_offsetfromdp(8567280);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_17_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_17->s_axi_araddr.bind(*p_17_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_araddr);
        xsim_sc_channel<0, bool > *p_17_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_arvalid.bind(*p_17_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_17_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_arready.bind(*p_17_s_axi_arready);
        p_17_s_axi_arready->set_sv_netview_offsetfromdp(8567448);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_17_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_17->s_axi_rdata.bind(*p_17_s_axi_rdata);
        p_17_s_axi_rdata->set_sv_netview_offsetfromdp(8567504);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->s_axi_rresp.bind(*p_17_s_axi_rresp);
        p_17_s_axi_rresp->set_sv_netview_offsetfromdp(8567560);
        xsim_sc_channel<0, bool > *p_17_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_rvalid.bind(*p_17_s_axi_rvalid);
        p_17_s_axi_rvalid->set_sv_netview_offsetfromdp(8567616);
        xsim_sc_channel<0, bool > *p_17_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_rready.bind(*p_17_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_rready);
        xsim_sc_channel<0, bool > *p_17_mon_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_17->mon_AWVALID.bind(*p_17_mon_AWVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_17_mon_AWVALID);
        xsim_sc_channel<0, bool > *p_17_mon_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_17->mon_AWREADY.bind(*p_17_mon_AWREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_17_mon_AWREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_17_mon_AWADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_17->mon_AWADDR.bind(*p_17_mon_AWADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_17_mon_AWADDR);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_17_mon_AWID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_17->mon_AWID.bind(*p_17_mon_AWID);
        (*_glb_hdl_sc_channel_map).push_back(p_17_mon_AWID);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_17_mon_AWLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_17->mon_AWLEN.bind(*p_17_mon_AWLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_17_mon_AWLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_17_mon_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_17->mon_AWSIZE.bind(*p_17_mon_AWSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_17_mon_AWSIZE);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_mon_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->mon_AWBURST.bind(*p_17_mon_AWBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_17_mon_AWBURST);
        xsim_sc_channel<0, bool > *p_17_mon_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_17->mon_WVALID.bind(*p_17_mon_WVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_17_mon_WVALID);
        xsim_sc_channel<0, bool > *p_17_mon_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_17->mon_WREADY.bind(*p_17_mon_WREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_17_mon_WREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_17_mon_WDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_17->mon_WDATA.bind(*p_17_mon_WDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_17_mon_WDATA);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_17_mon_WSTRB = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_17->mon_WSTRB.bind(*p_17_mon_WSTRB);
        (*_glb_hdl_sc_channel_map).push_back(p_17_mon_WSTRB);
        xsim_sc_channel<0, bool > *p_17_mon_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_17->mon_WLAST.bind(*p_17_mon_WLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_17_mon_WLAST);
        xsim_sc_channel<0, bool > *p_17_mon_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_17->mon_ARVALID.bind(*p_17_mon_ARVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_17_mon_ARVALID);
        xsim_sc_channel<0, bool > *p_17_mon_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_17->mon_ARREADY.bind(*p_17_mon_ARREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_17_mon_ARREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_17_mon_ARADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_17->mon_ARADDR.bind(*p_17_mon_ARADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_17_mon_ARADDR);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_17_mon_ARID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_17->mon_ARID.bind(*p_17_mon_ARID);
        (*_glb_hdl_sc_channel_map).push_back(p_17_mon_ARID);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_17_mon_ARLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_17->mon_ARLEN.bind(*p_17_mon_ARLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_17_mon_ARLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_17_mon_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_17->mon_ARSIZE.bind(*p_17_mon_ARSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_17_mon_ARSIZE);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_mon_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->mon_ARBURST.bind(*p_17_mon_ARBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_17_mon_ARBURST);
        xsim_sc_channel<0, bool > *p_17_mon_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_17->mon_RVALID.bind(*p_17_mon_RVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_17_mon_RVALID);
        xsim_sc_channel<0, bool > *p_17_mon_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_17->mon_RREADY.bind(*p_17_mon_RREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_17_mon_RREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_17_mon_RDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_17->mon_RDATA.bind(*p_17_mon_RDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_17_mon_RDATA);
        xsim_sc_channel<0, bool > *p_17_mon_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_17->mon_RLAST.bind(*p_17_mon_RLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_17_mon_RLAST);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_17_mon_RID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_17->mon_RID.bind(*p_17_mon_RID);
        (*_glb_hdl_sc_channel_map).push_back(p_17_mon_RID);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_mon_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->mon_RRESP.bind(*p_17_mon_RRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_17_mon_RRESP);
        xsim_sc_channel<0, bool > *p_17_mon_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_17->mon_BVALID.bind(*p_17_mon_BVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_17_mon_BVALID);
        xsim_sc_channel<0, bool > *p_17_mon_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_17->mon_BREADY.bind(*p_17_mon_BREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_17_mon_BREADY);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_mon_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->mon_BRESP.bind(*p_17_mon_BRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_17_mon_BRESP);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_17_mon_BID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_17->mon_BID.bind(*p_17_mon_BID);
        (*_glb_hdl_sc_channel_map).push_back(p_17_mon_BID);
        xsim_sc_channel<0, bool > *p_17_m_axis_rd_tready = new xsim_sc_channel<0, bool >();
        sc_inst_17->m_axis_rd_tready.bind(*p_17_m_axis_rd_tready);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m_axis_rd_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_17_m_axis_rd_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_17->m_axis_rd_tdata.bind(*p_17_m_axis_rd_tdata);
        p_17_m_axis_rd_tdata->set_sv_netview_offsetfromdp(8569408);
        xsim_sc_channel<0, bool > *p_17_m_axis_rd_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_17->m_axis_rd_tlast.bind(*p_17_m_axis_rd_tlast);
        p_17_m_axis_rd_tlast->set_sv_netview_offsetfromdp(8569464);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_17_m_axis_rd_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_17->m_axis_rd_tid.bind(*p_17_m_axis_rd_tid);
        p_17_m_axis_rd_tid->set_sv_netview_offsetfromdp(8569520);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_17_m_axis_rd_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_17->m_axis_rd_tdest.bind(*p_17_m_axis_rd_tdest);
        p_17_m_axis_rd_tdest->set_sv_netview_offsetfromdp(8569576);
        xsim_sc_channel<0, bool > *p_17_m_axis_wr_tready = new xsim_sc_channel<0, bool >();
        sc_inst_17->m_axis_wr_tready.bind(*p_17_m_axis_wr_tready);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m_axis_wr_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_17_m_axis_wr_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_17->m_axis_wr_tdata.bind(*p_17_m_axis_wr_tdata);
        p_17_m_axis_wr_tdata->set_sv_netview_offsetfromdp(8569688);
        xsim_sc_channel<0, bool > *p_17_m_axis_wr_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_17->m_axis_wr_tlast.bind(*p_17_m_axis_wr_tlast);
        p_17_m_axis_wr_tlast->set_sv_netview_offsetfromdp(8569744);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_17_m_axis_wr_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_17->m_axis_wr_tid.bind(*p_17_m_axis_wr_tid);
        p_17_m_axis_wr_tid->set_sv_netview_offsetfromdp(8569800);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_17_m_axis_wr_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_17->m_axis_wr_tdest.bind(*p_17_m_axis_wr_tdest);
        p_17_m_axis_wr_tdest->set_sv_netview_offsetfromdp(8569856);
        xsim_sc_channel<0, bool > *p_17_m_axis_wr_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->m_axis_wr_tvalid.bind(*p_17_m_axis_wr_tvalid);
        p_17_m_axis_wr_tvalid->set_sv_netview_offsetfromdp(8569912);
        xsim_sc_channel<0, bool > *p_17_m_axis_rd_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->m_axis_rd_tvalid.bind(*p_17_m_axis_rd_tvalid);
        p_17_m_axis_rd_tvalid->set_sv_netview_offsetfromdp(8569968);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_17_s_axi_awaddr_mon = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_17->s_axi_awaddr_mon.bind(*p_17_s_axi_awaddr_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_awaddr_mon);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_17_s_axi_awprot_mon = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_17->s_axi_awprot_mon.bind(*p_17_s_axi_awprot_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_awprot_mon);
        xsim_sc_channel<0, bool > *p_17_s_axi_awvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_awvalid_mon.bind(*p_17_s_axi_awvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_awvalid_mon);
        xsim_sc_channel<0, bool > *p_17_s_axi_awready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_awready_mon.bind(*p_17_s_axi_awready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_awready_mon);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_17_s_axi_wdata_mon = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_17->s_axi_wdata_mon.bind(*p_17_s_axi_wdata_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_wdata_mon);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_s_axi_wstrb_mon = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->s_axi_wstrb_mon.bind(*p_17_s_axi_wstrb_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_wstrb_mon);
        xsim_sc_channel<0, bool > *p_17_s_axi_wvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_wvalid_mon.bind(*p_17_s_axi_wvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_wvalid_mon);
        xsim_sc_channel<0, bool > *p_17_s_axi_wready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_wready_mon.bind(*p_17_s_axi_wready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_wready_mon);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_s_axi_bresp_mon = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->s_axi_bresp_mon.bind(*p_17_s_axi_bresp_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_bresp_mon);
        xsim_sc_channel<0, bool > *p_17_s_axi_bvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_bvalid_mon.bind(*p_17_s_axi_bvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_bvalid_mon);
        xsim_sc_channel<0, bool > *p_17_s_axi_bready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_bready_mon.bind(*p_17_s_axi_bready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_bready_mon);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_17_s_axi_araddr_mon = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_17->s_axi_araddr_mon.bind(*p_17_s_axi_araddr_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_araddr_mon);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_17_s_axi_arprot_mon = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_17->s_axi_arprot_mon.bind(*p_17_s_axi_arprot_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_arprot_mon);
        xsim_sc_channel<0, bool > *p_17_s_axi_arvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_arvalid_mon.bind(*p_17_s_axi_arvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_arvalid_mon);
        xsim_sc_channel<0, bool > *p_17_s_axi_arready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_arready_mon.bind(*p_17_s_axi_arready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_arready_mon);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_17_s_axi_rdata_mon = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_17->s_axi_rdata_mon.bind(*p_17_s_axi_rdata_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_rdata_mon);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_s_axi_rresp_mon = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->s_axi_rresp_mon.bind(*p_17_s_axi_rresp_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_rresp_mon);
        xsim_sc_channel<0, bool > *p_17_s_axi_rvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_rvalid_mon.bind(*p_17_s_axi_rvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_rvalid_mon);
        xsim_sc_channel<0, bool > *p_17_s_axi_rready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_rready_mon.bind(*p_17_s_axi_rready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_rready_mon);
        sc_inst_18 = new pfm_dynamic_dpa_mon2_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_mon2");
        sc_inst_18->xsim_set_dbg_index(402);
        xsim_sc_channel<0, bool > *p_18_mon_clk = new xsim_sc_channel<0, bool >();
        sc_inst_18->mon_clk.bind(*p_18_mon_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_18_mon_clk);
        xsim_sc_channel<0, bool > *p_18_mon_resetn = new xsim_sc_channel<0, bool >();
        sc_inst_18->mon_resetn.bind(*p_18_mon_resetn);
        (*_glb_hdl_sc_channel_map).push_back(p_18_mon_resetn);
        xsim_sc_channel<0, bool > *p_18_trace_clk = new xsim_sc_channel<0, bool >();
        sc_inst_18->trace_clk.bind(*p_18_trace_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_18_trace_clk);
        xsim_sc_channel<0, bool > *p_18_trace_rst = new xsim_sc_channel<0, bool >();
        sc_inst_18->trace_rst.bind(*p_18_trace_rst);
        (*_glb_hdl_sc_channel_map).push_back(p_18_trace_rst);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_18_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_18->s_axi_awaddr.bind(*p_18_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_awaddr);
        xsim_sc_channel<0, bool > *p_18_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_awvalid.bind(*p_18_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_18_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_awready.bind(*p_18_s_axi_awready);
        p_18_s_axi_awready->set_sv_netview_offsetfromdp(8571472);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_18_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_18->s_axi_wdata.bind(*p_18_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->s_axi_wstrb.bind(*p_18_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_18_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_wvalid.bind(*p_18_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_18_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_wready.bind(*p_18_s_axi_wready);
        p_18_s_axi_wready->set_sv_netview_offsetfromdp(8571696);
        xsim_sc_channel<0, bool > *p_18_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_bvalid.bind(*p_18_s_axi_bvalid);
        p_18_s_axi_bvalid->set_sv_netview_offsetfromdp(8571752);
        xsim_sc_channel<0, bool > *p_18_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_bready.bind(*p_18_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->s_axi_bresp.bind(*p_18_s_axi_bresp);
        p_18_s_axi_bresp->set_sv_netview_offsetfromdp(8571864);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_18_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_18->s_axi_araddr.bind(*p_18_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_araddr);
        xsim_sc_channel<0, bool > *p_18_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_arvalid.bind(*p_18_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_18_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_arready.bind(*p_18_s_axi_arready);
        p_18_s_axi_arready->set_sv_netview_offsetfromdp(8572032);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_18_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_18->s_axi_rdata.bind(*p_18_s_axi_rdata);
        p_18_s_axi_rdata->set_sv_netview_offsetfromdp(8572088);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->s_axi_rresp.bind(*p_18_s_axi_rresp);
        p_18_s_axi_rresp->set_sv_netview_offsetfromdp(8572144);
        xsim_sc_channel<0, bool > *p_18_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_rvalid.bind(*p_18_s_axi_rvalid);
        p_18_s_axi_rvalid->set_sv_netview_offsetfromdp(8572200);
        xsim_sc_channel<0, bool > *p_18_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_rready.bind(*p_18_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_rready);
        xsim_sc_channel<0, bool > *p_18_mon_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_18->mon_AWVALID.bind(*p_18_mon_AWVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_18_mon_AWVALID);
        xsim_sc_channel<0, bool > *p_18_mon_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->mon_AWREADY.bind(*p_18_mon_AWREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_18_mon_AWREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_18_mon_AWADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_18->mon_AWADDR.bind(*p_18_mon_AWADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_18_mon_AWADDR);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_18_mon_AWID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_18->mon_AWID.bind(*p_18_mon_AWID);
        (*_glb_hdl_sc_channel_map).push_back(p_18_mon_AWID);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_18_mon_AWLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_18->mon_AWLEN.bind(*p_18_mon_AWLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_18_mon_AWLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_18_mon_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_18->mon_AWSIZE.bind(*p_18_mon_AWSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_18_mon_AWSIZE);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_mon_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->mon_AWBURST.bind(*p_18_mon_AWBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_18_mon_AWBURST);
        xsim_sc_channel<0, bool > *p_18_mon_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_18->mon_WVALID.bind(*p_18_mon_WVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_18_mon_WVALID);
        xsim_sc_channel<0, bool > *p_18_mon_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->mon_WREADY.bind(*p_18_mon_WREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_18_mon_WREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_18_mon_WDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_18->mon_WDATA.bind(*p_18_mon_WDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_18_mon_WDATA);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_18_mon_WSTRB = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_18->mon_WSTRB.bind(*p_18_mon_WSTRB);
        (*_glb_hdl_sc_channel_map).push_back(p_18_mon_WSTRB);
        xsim_sc_channel<0, bool > *p_18_mon_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_18->mon_WLAST.bind(*p_18_mon_WLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_18_mon_WLAST);
        xsim_sc_channel<0, bool > *p_18_mon_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_18->mon_ARVALID.bind(*p_18_mon_ARVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_18_mon_ARVALID);
        xsim_sc_channel<0, bool > *p_18_mon_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->mon_ARREADY.bind(*p_18_mon_ARREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_18_mon_ARREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_18_mon_ARADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_18->mon_ARADDR.bind(*p_18_mon_ARADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_18_mon_ARADDR);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_18_mon_ARID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_18->mon_ARID.bind(*p_18_mon_ARID);
        (*_glb_hdl_sc_channel_map).push_back(p_18_mon_ARID);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_18_mon_ARLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_18->mon_ARLEN.bind(*p_18_mon_ARLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_18_mon_ARLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_18_mon_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_18->mon_ARSIZE.bind(*p_18_mon_ARSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_18_mon_ARSIZE);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_mon_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->mon_ARBURST.bind(*p_18_mon_ARBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_18_mon_ARBURST);
        xsim_sc_channel<0, bool > *p_18_mon_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_18->mon_RVALID.bind(*p_18_mon_RVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_18_mon_RVALID);
        xsim_sc_channel<0, bool > *p_18_mon_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->mon_RREADY.bind(*p_18_mon_RREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_18_mon_RREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_18_mon_RDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_18->mon_RDATA.bind(*p_18_mon_RDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_18_mon_RDATA);
        xsim_sc_channel<0, bool > *p_18_mon_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_18->mon_RLAST.bind(*p_18_mon_RLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_18_mon_RLAST);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_18_mon_RID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_18->mon_RID.bind(*p_18_mon_RID);
        (*_glb_hdl_sc_channel_map).push_back(p_18_mon_RID);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_mon_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->mon_RRESP.bind(*p_18_mon_RRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_18_mon_RRESP);
        xsim_sc_channel<0, bool > *p_18_mon_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_18->mon_BVALID.bind(*p_18_mon_BVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_18_mon_BVALID);
        xsim_sc_channel<0, bool > *p_18_mon_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->mon_BREADY.bind(*p_18_mon_BREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_18_mon_BREADY);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_mon_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->mon_BRESP.bind(*p_18_mon_BRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_18_mon_BRESP);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_18_mon_BID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_18->mon_BID.bind(*p_18_mon_BID);
        (*_glb_hdl_sc_channel_map).push_back(p_18_mon_BID);
        xsim_sc_channel<0, bool > *p_18_m_axis_rd_tready = new xsim_sc_channel<0, bool >();
        sc_inst_18->m_axis_rd_tready.bind(*p_18_m_axis_rd_tready);
        (*_glb_hdl_sc_channel_map).push_back(p_18_m_axis_rd_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_18_m_axis_rd_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_18->m_axis_rd_tdata.bind(*p_18_m_axis_rd_tdata);
        p_18_m_axis_rd_tdata->set_sv_netview_offsetfromdp(8573992);
        xsim_sc_channel<0, bool > *p_18_m_axis_rd_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_18->m_axis_rd_tlast.bind(*p_18_m_axis_rd_tlast);
        p_18_m_axis_rd_tlast->set_sv_netview_offsetfromdp(8574048);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_18_m_axis_rd_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_18->m_axis_rd_tid.bind(*p_18_m_axis_rd_tid);
        p_18_m_axis_rd_tid->set_sv_netview_offsetfromdp(8574104);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_18_m_axis_rd_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_18->m_axis_rd_tdest.bind(*p_18_m_axis_rd_tdest);
        p_18_m_axis_rd_tdest->set_sv_netview_offsetfromdp(8574160);
        xsim_sc_channel<0, bool > *p_18_m_axis_wr_tready = new xsim_sc_channel<0, bool >();
        sc_inst_18->m_axis_wr_tready.bind(*p_18_m_axis_wr_tready);
        (*_glb_hdl_sc_channel_map).push_back(p_18_m_axis_wr_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_18_m_axis_wr_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_18->m_axis_wr_tdata.bind(*p_18_m_axis_wr_tdata);
        p_18_m_axis_wr_tdata->set_sv_netview_offsetfromdp(8574272);
        xsim_sc_channel<0, bool > *p_18_m_axis_wr_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_18->m_axis_wr_tlast.bind(*p_18_m_axis_wr_tlast);
        p_18_m_axis_wr_tlast->set_sv_netview_offsetfromdp(8574328);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_18_m_axis_wr_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_18->m_axis_wr_tid.bind(*p_18_m_axis_wr_tid);
        p_18_m_axis_wr_tid->set_sv_netview_offsetfromdp(8574384);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_18_m_axis_wr_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_18->m_axis_wr_tdest.bind(*p_18_m_axis_wr_tdest);
        p_18_m_axis_wr_tdest->set_sv_netview_offsetfromdp(8574440);
        xsim_sc_channel<0, bool > *p_18_m_axis_wr_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_18->m_axis_wr_tvalid.bind(*p_18_m_axis_wr_tvalid);
        p_18_m_axis_wr_tvalid->set_sv_netview_offsetfromdp(8574496);
        xsim_sc_channel<0, bool > *p_18_m_axis_rd_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_18->m_axis_rd_tvalid.bind(*p_18_m_axis_rd_tvalid);
        p_18_m_axis_rd_tvalid->set_sv_netview_offsetfromdp(8574552);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_18_s_axi_awaddr_mon = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_18->s_axi_awaddr_mon.bind(*p_18_s_axi_awaddr_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_awaddr_mon);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_18_s_axi_awprot_mon = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_18->s_axi_awprot_mon.bind(*p_18_s_axi_awprot_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_awprot_mon);
        xsim_sc_channel<0, bool > *p_18_s_axi_awvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_awvalid_mon.bind(*p_18_s_axi_awvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_awvalid_mon);
        xsim_sc_channel<0, bool > *p_18_s_axi_awready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_awready_mon.bind(*p_18_s_axi_awready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_awready_mon);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_18_s_axi_wdata_mon = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_18->s_axi_wdata_mon.bind(*p_18_s_axi_wdata_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_wdata_mon);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_s_axi_wstrb_mon = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->s_axi_wstrb_mon.bind(*p_18_s_axi_wstrb_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_wstrb_mon);
        xsim_sc_channel<0, bool > *p_18_s_axi_wvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_wvalid_mon.bind(*p_18_s_axi_wvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_wvalid_mon);
        xsim_sc_channel<0, bool > *p_18_s_axi_wready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_wready_mon.bind(*p_18_s_axi_wready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_wready_mon);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_s_axi_bresp_mon = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->s_axi_bresp_mon.bind(*p_18_s_axi_bresp_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_bresp_mon);
        xsim_sc_channel<0, bool > *p_18_s_axi_bvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_bvalid_mon.bind(*p_18_s_axi_bvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_bvalid_mon);
        xsim_sc_channel<0, bool > *p_18_s_axi_bready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_bready_mon.bind(*p_18_s_axi_bready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_bready_mon);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_18_s_axi_araddr_mon = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_18->s_axi_araddr_mon.bind(*p_18_s_axi_araddr_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_araddr_mon);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_18_s_axi_arprot_mon = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_18->s_axi_arprot_mon.bind(*p_18_s_axi_arprot_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_arprot_mon);
        xsim_sc_channel<0, bool > *p_18_s_axi_arvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_arvalid_mon.bind(*p_18_s_axi_arvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_arvalid_mon);
        xsim_sc_channel<0, bool > *p_18_s_axi_arready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_arready_mon.bind(*p_18_s_axi_arready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_arready_mon);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_18_s_axi_rdata_mon = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_18->s_axi_rdata_mon.bind(*p_18_s_axi_rdata_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_rdata_mon);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_s_axi_rresp_mon = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->s_axi_rresp_mon.bind(*p_18_s_axi_rresp_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_rresp_mon);
        xsim_sc_channel<0, bool > *p_18_s_axi_rvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_rvalid_mon.bind(*p_18_s_axi_rvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_rvalid_mon);
        xsim_sc_channel<0, bool > *p_18_s_axi_rready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_rready_mon.bind(*p_18_s_axi_rready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_rready_mon);
        sc_inst_19 = new pfm_dynamic_dpa_mon3_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_mon3");
        sc_inst_19->xsim_set_dbg_index(403);
        xsim_sc_channel<0, bool > *p_19_mon_clk = new xsim_sc_channel<0, bool >();
        sc_inst_19->mon_clk.bind(*p_19_mon_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_19_mon_clk);
        xsim_sc_channel<0, bool > *p_19_mon_resetn = new xsim_sc_channel<0, bool >();
        sc_inst_19->mon_resetn.bind(*p_19_mon_resetn);
        (*_glb_hdl_sc_channel_map).push_back(p_19_mon_resetn);
        xsim_sc_channel<0, bool > *p_19_trace_clk = new xsim_sc_channel<0, bool >();
        sc_inst_19->trace_clk.bind(*p_19_trace_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_19_trace_clk);
        xsim_sc_channel<0, bool > *p_19_trace_rst = new xsim_sc_channel<0, bool >();
        sc_inst_19->trace_rst.bind(*p_19_trace_rst);
        (*_glb_hdl_sc_channel_map).push_back(p_19_trace_rst);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_19_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_19->s_axi_awaddr.bind(*p_19_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_awaddr);
        xsim_sc_channel<0, bool > *p_19_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_awvalid.bind(*p_19_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_19_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_awready.bind(*p_19_s_axi_awready);
        p_19_s_axi_awready->set_sv_netview_offsetfromdp(8576056);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_19_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_19->s_axi_wdata.bind(*p_19_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->s_axi_wstrb.bind(*p_19_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_19_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_wvalid.bind(*p_19_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_19_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_wready.bind(*p_19_s_axi_wready);
        p_19_s_axi_wready->set_sv_netview_offsetfromdp(8576280);
        xsim_sc_channel<0, bool > *p_19_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_bvalid.bind(*p_19_s_axi_bvalid);
        p_19_s_axi_bvalid->set_sv_netview_offsetfromdp(8576336);
        xsim_sc_channel<0, bool > *p_19_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_bready.bind(*p_19_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->s_axi_bresp.bind(*p_19_s_axi_bresp);
        p_19_s_axi_bresp->set_sv_netview_offsetfromdp(8576448);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_19_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_19->s_axi_araddr.bind(*p_19_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_araddr);
        xsim_sc_channel<0, bool > *p_19_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_arvalid.bind(*p_19_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_19_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_arready.bind(*p_19_s_axi_arready);
        p_19_s_axi_arready->set_sv_netview_offsetfromdp(8576616);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_19_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_19->s_axi_rdata.bind(*p_19_s_axi_rdata);
        p_19_s_axi_rdata->set_sv_netview_offsetfromdp(8576672);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->s_axi_rresp.bind(*p_19_s_axi_rresp);
        p_19_s_axi_rresp->set_sv_netview_offsetfromdp(8576728);
        xsim_sc_channel<0, bool > *p_19_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_rvalid.bind(*p_19_s_axi_rvalid);
        p_19_s_axi_rvalid->set_sv_netview_offsetfromdp(8576784);
        xsim_sc_channel<0, bool > *p_19_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_rready.bind(*p_19_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_rready);
        xsim_sc_channel<0, bool > *p_19_mon_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_19->mon_AWVALID.bind(*p_19_mon_AWVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_19_mon_AWVALID);
        xsim_sc_channel<0, bool > *p_19_mon_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_19->mon_AWREADY.bind(*p_19_mon_AWREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_19_mon_AWREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_19_mon_AWADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_19->mon_AWADDR.bind(*p_19_mon_AWADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_19_mon_AWADDR);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_19_mon_AWID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_19->mon_AWID.bind(*p_19_mon_AWID);
        (*_glb_hdl_sc_channel_map).push_back(p_19_mon_AWID);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_19_mon_AWLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_19->mon_AWLEN.bind(*p_19_mon_AWLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_19_mon_AWLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_19_mon_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_19->mon_AWSIZE.bind(*p_19_mon_AWSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_19_mon_AWSIZE);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_mon_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->mon_AWBURST.bind(*p_19_mon_AWBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_19_mon_AWBURST);
        xsim_sc_channel<0, bool > *p_19_mon_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_19->mon_WVALID.bind(*p_19_mon_WVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_19_mon_WVALID);
        xsim_sc_channel<0, bool > *p_19_mon_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_19->mon_WREADY.bind(*p_19_mon_WREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_19_mon_WREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_19_mon_WDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_19->mon_WDATA.bind(*p_19_mon_WDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_19_mon_WDATA);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_19_mon_WSTRB = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_19->mon_WSTRB.bind(*p_19_mon_WSTRB);
        (*_glb_hdl_sc_channel_map).push_back(p_19_mon_WSTRB);
        xsim_sc_channel<0, bool > *p_19_mon_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_19->mon_WLAST.bind(*p_19_mon_WLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_19_mon_WLAST);
        xsim_sc_channel<0, bool > *p_19_mon_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_19->mon_ARVALID.bind(*p_19_mon_ARVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_19_mon_ARVALID);
        xsim_sc_channel<0, bool > *p_19_mon_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_19->mon_ARREADY.bind(*p_19_mon_ARREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_19_mon_ARREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_19_mon_ARADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_19->mon_ARADDR.bind(*p_19_mon_ARADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_19_mon_ARADDR);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_19_mon_ARID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_19->mon_ARID.bind(*p_19_mon_ARID);
        (*_glb_hdl_sc_channel_map).push_back(p_19_mon_ARID);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_19_mon_ARLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_19->mon_ARLEN.bind(*p_19_mon_ARLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_19_mon_ARLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_19_mon_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_19->mon_ARSIZE.bind(*p_19_mon_ARSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_19_mon_ARSIZE);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_mon_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->mon_ARBURST.bind(*p_19_mon_ARBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_19_mon_ARBURST);
        xsim_sc_channel<0, bool > *p_19_mon_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_19->mon_RVALID.bind(*p_19_mon_RVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_19_mon_RVALID);
        xsim_sc_channel<0, bool > *p_19_mon_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_19->mon_RREADY.bind(*p_19_mon_RREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_19_mon_RREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_19_mon_RDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_19->mon_RDATA.bind(*p_19_mon_RDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_19_mon_RDATA);
        xsim_sc_channel<0, bool > *p_19_mon_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_19->mon_RLAST.bind(*p_19_mon_RLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_19_mon_RLAST);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_19_mon_RID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_19->mon_RID.bind(*p_19_mon_RID);
        (*_glb_hdl_sc_channel_map).push_back(p_19_mon_RID);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_mon_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->mon_RRESP.bind(*p_19_mon_RRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_19_mon_RRESP);
        xsim_sc_channel<0, bool > *p_19_mon_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_19->mon_BVALID.bind(*p_19_mon_BVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_19_mon_BVALID);
        xsim_sc_channel<0, bool > *p_19_mon_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_19->mon_BREADY.bind(*p_19_mon_BREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_19_mon_BREADY);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_mon_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->mon_BRESP.bind(*p_19_mon_BRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_19_mon_BRESP);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_19_mon_BID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_19->mon_BID.bind(*p_19_mon_BID);
        (*_glb_hdl_sc_channel_map).push_back(p_19_mon_BID);
        xsim_sc_channel<0, bool > *p_19_m_axis_rd_tready = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axis_rd_tready.bind(*p_19_m_axis_rd_tready);
        (*_glb_hdl_sc_channel_map).push_back(p_19_m_axis_rd_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_19_m_axis_rd_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_19->m_axis_rd_tdata.bind(*p_19_m_axis_rd_tdata);
        p_19_m_axis_rd_tdata->set_sv_netview_offsetfromdp(8578576);
        xsim_sc_channel<0, bool > *p_19_m_axis_rd_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axis_rd_tlast.bind(*p_19_m_axis_rd_tlast);
        p_19_m_axis_rd_tlast->set_sv_netview_offsetfromdp(8578632);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_19_m_axis_rd_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_19->m_axis_rd_tid.bind(*p_19_m_axis_rd_tid);
        p_19_m_axis_rd_tid->set_sv_netview_offsetfromdp(8578688);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_19_m_axis_rd_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_19->m_axis_rd_tdest.bind(*p_19_m_axis_rd_tdest);
        p_19_m_axis_rd_tdest->set_sv_netview_offsetfromdp(8578744);
        xsim_sc_channel<0, bool > *p_19_m_axis_wr_tready = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axis_wr_tready.bind(*p_19_m_axis_wr_tready);
        (*_glb_hdl_sc_channel_map).push_back(p_19_m_axis_wr_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_19_m_axis_wr_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_19->m_axis_wr_tdata.bind(*p_19_m_axis_wr_tdata);
        p_19_m_axis_wr_tdata->set_sv_netview_offsetfromdp(8578856);
        xsim_sc_channel<0, bool > *p_19_m_axis_wr_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axis_wr_tlast.bind(*p_19_m_axis_wr_tlast);
        p_19_m_axis_wr_tlast->set_sv_netview_offsetfromdp(8578912);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_19_m_axis_wr_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_19->m_axis_wr_tid.bind(*p_19_m_axis_wr_tid);
        p_19_m_axis_wr_tid->set_sv_netview_offsetfromdp(8578968);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_19_m_axis_wr_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_19->m_axis_wr_tdest.bind(*p_19_m_axis_wr_tdest);
        p_19_m_axis_wr_tdest->set_sv_netview_offsetfromdp(8579024);
        xsim_sc_channel<0, bool > *p_19_m_axis_wr_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axis_wr_tvalid.bind(*p_19_m_axis_wr_tvalid);
        p_19_m_axis_wr_tvalid->set_sv_netview_offsetfromdp(8579080);
        xsim_sc_channel<0, bool > *p_19_m_axis_rd_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axis_rd_tvalid.bind(*p_19_m_axis_rd_tvalid);
        p_19_m_axis_rd_tvalid->set_sv_netview_offsetfromdp(8579136);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_19_s_axi_awaddr_mon = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_19->s_axi_awaddr_mon.bind(*p_19_s_axi_awaddr_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_awaddr_mon);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_19_s_axi_awprot_mon = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_19->s_axi_awprot_mon.bind(*p_19_s_axi_awprot_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_awprot_mon);
        xsim_sc_channel<0, bool > *p_19_s_axi_awvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_awvalid_mon.bind(*p_19_s_axi_awvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_awvalid_mon);
        xsim_sc_channel<0, bool > *p_19_s_axi_awready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_awready_mon.bind(*p_19_s_axi_awready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_awready_mon);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_19_s_axi_wdata_mon = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_19->s_axi_wdata_mon.bind(*p_19_s_axi_wdata_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_wdata_mon);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_s_axi_wstrb_mon = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->s_axi_wstrb_mon.bind(*p_19_s_axi_wstrb_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_wstrb_mon);
        xsim_sc_channel<0, bool > *p_19_s_axi_wvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_wvalid_mon.bind(*p_19_s_axi_wvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_wvalid_mon);
        xsim_sc_channel<0, bool > *p_19_s_axi_wready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_wready_mon.bind(*p_19_s_axi_wready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_wready_mon);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_s_axi_bresp_mon = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->s_axi_bresp_mon.bind(*p_19_s_axi_bresp_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_bresp_mon);
        xsim_sc_channel<0, bool > *p_19_s_axi_bvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_bvalid_mon.bind(*p_19_s_axi_bvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_bvalid_mon);
        xsim_sc_channel<0, bool > *p_19_s_axi_bready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_bready_mon.bind(*p_19_s_axi_bready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_bready_mon);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_19_s_axi_araddr_mon = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_19->s_axi_araddr_mon.bind(*p_19_s_axi_araddr_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_araddr_mon);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_19_s_axi_arprot_mon = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_19->s_axi_arprot_mon.bind(*p_19_s_axi_arprot_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_arprot_mon);
        xsim_sc_channel<0, bool > *p_19_s_axi_arvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_arvalid_mon.bind(*p_19_s_axi_arvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_arvalid_mon);
        xsim_sc_channel<0, bool > *p_19_s_axi_arready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_arready_mon.bind(*p_19_s_axi_arready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_arready_mon);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_19_s_axi_rdata_mon = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_19->s_axi_rdata_mon.bind(*p_19_s_axi_rdata_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_rdata_mon);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_s_axi_rresp_mon = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->s_axi_rresp_mon.bind(*p_19_s_axi_rresp_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_rresp_mon);
        xsim_sc_channel<0, bool > *p_19_s_axi_rvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_rvalid_mon.bind(*p_19_s_axi_rvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_rvalid_mon);
        xsim_sc_channel<0, bool > *p_19_s_axi_rready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_rready_mon.bind(*p_19_s_axi_rready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_rready_mon);
        sc_inst_20 = new bd_5dca_sci(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.hmss_0.inst.bd_5dca_sci_inst");
        sc_inst_20->xsim_set_dbg_index(949);
        sc_inst_21 = new bd_5dca_hbm_inst_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.hmss_0.inst.hbm_inst");
        sc_inst_21->xsim_set_dbg_index(950);
        xsim_sc_channel<0, bool > *p_21_HBM_REF_CLK_0 = new xsim_sc_channel<0, bool >();
        sc_inst_21->HBM_REF_CLK_0.bind(*p_21_HBM_REF_CLK_0);
        (*_glb_hdl_sc_channel_map).push_back(p_21_HBM_REF_CLK_0);
        xsim_sc_channel<0, bool > *p_21_HBM_REF_CLK_1 = new xsim_sc_channel<0, bool >();
        sc_inst_21->HBM_REF_CLK_1.bind(*p_21_HBM_REF_CLK_1);
        (*_glb_hdl_sc_channel_map).push_back(p_21_HBM_REF_CLK_1);
        xsim_sc_channel<0, bool > *p_21_AXI_04_ACLK = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_04_ACLK.bind(*p_21_AXI_04_ACLK);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_04_ACLK);
        xsim_sc_channel<0, bool > *p_21_AXI_04_ARESET_N = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_04_ARESET_N.bind(*p_21_AXI_04_ARESET_N);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_04_ARESET_N);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_21_AXI_04_ARADDR = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_21->AXI_04_ARADDR.bind(*p_21_AXI_04_ARADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_04_ARADDR);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_AXI_04_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->AXI_04_ARBURST.bind(*p_21_AXI_04_ARBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_04_ARBURST);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_21_AXI_04_ARID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_21->AXI_04_ARID.bind(*p_21_AXI_04_ARID);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_04_ARID);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_AXI_04_ARLEN = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->AXI_04_ARLEN.bind(*p_21_AXI_04_ARLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_04_ARLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_21_AXI_04_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_21->AXI_04_ARSIZE.bind(*p_21_AXI_04_ARSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_04_ARSIZE);
        xsim_sc_channel<0, bool > *p_21_AXI_04_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_04_ARVALID.bind(*p_21_AXI_04_ARVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_04_ARVALID);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_21_AXI_04_AWADDR = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_21->AXI_04_AWADDR.bind(*p_21_AXI_04_AWADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_04_AWADDR);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_AXI_04_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->AXI_04_AWBURST.bind(*p_21_AXI_04_AWBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_04_AWBURST);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_21_AXI_04_AWID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_21->AXI_04_AWID.bind(*p_21_AXI_04_AWID);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_04_AWID);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_AXI_04_AWLEN = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->AXI_04_AWLEN.bind(*p_21_AXI_04_AWLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_04_AWLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_21_AXI_04_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_21->AXI_04_AWSIZE.bind(*p_21_AXI_04_AWSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_04_AWSIZE);
        xsim_sc_channel<0, bool > *p_21_AXI_04_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_04_AWVALID.bind(*p_21_AXI_04_AWVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_04_AWVALID);
        xsim_sc_channel<0, bool > *p_21_AXI_04_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_04_RREADY.bind(*p_21_AXI_04_RREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_04_RREADY);
        xsim_sc_channel<0, bool > *p_21_AXI_04_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_04_BREADY.bind(*p_21_AXI_04_BREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_04_BREADY);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_21_AXI_04_WDATA = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_21->AXI_04_WDATA.bind(*p_21_AXI_04_WDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_04_WDATA);
        xsim_sc_channel<0, bool > *p_21_AXI_04_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_04_WLAST.bind(*p_21_AXI_04_WLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_04_WLAST);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_21_AXI_04_WSTRB = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_21->AXI_04_WSTRB.bind(*p_21_AXI_04_WSTRB);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_04_WSTRB);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_21_AXI_04_WDATA_PARITY = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_21->AXI_04_WDATA_PARITY.bind(*p_21_AXI_04_WDATA_PARITY);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_04_WDATA_PARITY);
        xsim_sc_channel<0, bool > *p_21_AXI_04_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_04_WVALID.bind(*p_21_AXI_04_WVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_04_WVALID);
        xsim_sc_channel<0, bool > *p_21_AXI_08_ACLK = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_08_ACLK.bind(*p_21_AXI_08_ACLK);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_08_ACLK);
        xsim_sc_channel<0, bool > *p_21_AXI_08_ARESET_N = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_08_ARESET_N.bind(*p_21_AXI_08_ARESET_N);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_08_ARESET_N);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_21_AXI_08_ARADDR = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_21->AXI_08_ARADDR.bind(*p_21_AXI_08_ARADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_08_ARADDR);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_AXI_08_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->AXI_08_ARBURST.bind(*p_21_AXI_08_ARBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_08_ARBURST);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_21_AXI_08_ARID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_21->AXI_08_ARID.bind(*p_21_AXI_08_ARID);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_08_ARID);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_AXI_08_ARLEN = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->AXI_08_ARLEN.bind(*p_21_AXI_08_ARLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_08_ARLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_21_AXI_08_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_21->AXI_08_ARSIZE.bind(*p_21_AXI_08_ARSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_08_ARSIZE);
        xsim_sc_channel<0, bool > *p_21_AXI_08_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_08_ARVALID.bind(*p_21_AXI_08_ARVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_08_ARVALID);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_21_AXI_08_AWADDR = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_21->AXI_08_AWADDR.bind(*p_21_AXI_08_AWADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_08_AWADDR);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_AXI_08_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->AXI_08_AWBURST.bind(*p_21_AXI_08_AWBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_08_AWBURST);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_21_AXI_08_AWID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_21->AXI_08_AWID.bind(*p_21_AXI_08_AWID);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_08_AWID);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_AXI_08_AWLEN = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->AXI_08_AWLEN.bind(*p_21_AXI_08_AWLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_08_AWLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_21_AXI_08_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_21->AXI_08_AWSIZE.bind(*p_21_AXI_08_AWSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_08_AWSIZE);
        xsim_sc_channel<0, bool > *p_21_AXI_08_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_08_AWVALID.bind(*p_21_AXI_08_AWVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_08_AWVALID);
        xsim_sc_channel<0, bool > *p_21_AXI_08_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_08_RREADY.bind(*p_21_AXI_08_RREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_08_RREADY);
        xsim_sc_channel<0, bool > *p_21_AXI_08_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_08_BREADY.bind(*p_21_AXI_08_BREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_08_BREADY);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_21_AXI_08_WDATA = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_21->AXI_08_WDATA.bind(*p_21_AXI_08_WDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_08_WDATA);
        xsim_sc_channel<0, bool > *p_21_AXI_08_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_08_WLAST.bind(*p_21_AXI_08_WLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_08_WLAST);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_21_AXI_08_WSTRB = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_21->AXI_08_WSTRB.bind(*p_21_AXI_08_WSTRB);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_08_WSTRB);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_21_AXI_08_WDATA_PARITY = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_21->AXI_08_WDATA_PARITY.bind(*p_21_AXI_08_WDATA_PARITY);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_08_WDATA_PARITY);
        xsim_sc_channel<0, bool > *p_21_AXI_08_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_08_WVALID.bind(*p_21_AXI_08_WVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_08_WVALID);
        xsim_sc_channel<0, bool > *p_21_AXI_18_ACLK = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_18_ACLK.bind(*p_21_AXI_18_ACLK);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_18_ACLK);
        xsim_sc_channel<0, bool > *p_21_AXI_18_ARESET_N = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_18_ARESET_N.bind(*p_21_AXI_18_ARESET_N);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_18_ARESET_N);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_21_AXI_18_ARADDR = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_21->AXI_18_ARADDR.bind(*p_21_AXI_18_ARADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_18_ARADDR);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_AXI_18_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->AXI_18_ARBURST.bind(*p_21_AXI_18_ARBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_18_ARBURST);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_21_AXI_18_ARID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_21->AXI_18_ARID.bind(*p_21_AXI_18_ARID);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_18_ARID);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_AXI_18_ARLEN = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->AXI_18_ARLEN.bind(*p_21_AXI_18_ARLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_18_ARLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_21_AXI_18_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_21->AXI_18_ARSIZE.bind(*p_21_AXI_18_ARSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_18_ARSIZE);
        xsim_sc_channel<0, bool > *p_21_AXI_18_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_18_ARVALID.bind(*p_21_AXI_18_ARVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_18_ARVALID);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_21_AXI_18_AWADDR = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_21->AXI_18_AWADDR.bind(*p_21_AXI_18_AWADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_18_AWADDR);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_AXI_18_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->AXI_18_AWBURST.bind(*p_21_AXI_18_AWBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_18_AWBURST);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_21_AXI_18_AWID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_21->AXI_18_AWID.bind(*p_21_AXI_18_AWID);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_18_AWID);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_AXI_18_AWLEN = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->AXI_18_AWLEN.bind(*p_21_AXI_18_AWLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_18_AWLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_21_AXI_18_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_21->AXI_18_AWSIZE.bind(*p_21_AXI_18_AWSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_18_AWSIZE);
        xsim_sc_channel<0, bool > *p_21_AXI_18_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_18_AWVALID.bind(*p_21_AXI_18_AWVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_18_AWVALID);
        xsim_sc_channel<0, bool > *p_21_AXI_18_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_18_RREADY.bind(*p_21_AXI_18_RREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_18_RREADY);
        xsim_sc_channel<0, bool > *p_21_AXI_18_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_18_BREADY.bind(*p_21_AXI_18_BREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_18_BREADY);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_21_AXI_18_WDATA = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_21->AXI_18_WDATA.bind(*p_21_AXI_18_WDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_18_WDATA);
        xsim_sc_channel<0, bool > *p_21_AXI_18_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_18_WLAST.bind(*p_21_AXI_18_WLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_18_WLAST);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_21_AXI_18_WSTRB = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_21->AXI_18_WSTRB.bind(*p_21_AXI_18_WSTRB);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_18_WSTRB);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_21_AXI_18_WDATA_PARITY = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_21->AXI_18_WDATA_PARITY.bind(*p_21_AXI_18_WDATA_PARITY);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_18_WDATA_PARITY);
        xsim_sc_channel<0, bool > *p_21_AXI_18_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_18_WVALID.bind(*p_21_AXI_18_WVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_18_WVALID);
        xsim_sc_channel<0, bool > *p_21_AXI_22_ACLK = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_22_ACLK.bind(*p_21_AXI_22_ACLK);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_22_ACLK);
        xsim_sc_channel<0, bool > *p_21_AXI_22_ARESET_N = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_22_ARESET_N.bind(*p_21_AXI_22_ARESET_N);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_22_ARESET_N);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_21_AXI_22_ARADDR = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_21->AXI_22_ARADDR.bind(*p_21_AXI_22_ARADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_22_ARADDR);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_AXI_22_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->AXI_22_ARBURST.bind(*p_21_AXI_22_ARBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_22_ARBURST);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_21_AXI_22_ARID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_21->AXI_22_ARID.bind(*p_21_AXI_22_ARID);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_22_ARID);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_AXI_22_ARLEN = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->AXI_22_ARLEN.bind(*p_21_AXI_22_ARLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_22_ARLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_21_AXI_22_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_21->AXI_22_ARSIZE.bind(*p_21_AXI_22_ARSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_22_ARSIZE);
        xsim_sc_channel<0, bool > *p_21_AXI_22_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_22_ARVALID.bind(*p_21_AXI_22_ARVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_22_ARVALID);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_21_AXI_22_AWADDR = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_21->AXI_22_AWADDR.bind(*p_21_AXI_22_AWADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_22_AWADDR);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_AXI_22_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->AXI_22_AWBURST.bind(*p_21_AXI_22_AWBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_22_AWBURST);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_21_AXI_22_AWID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_21->AXI_22_AWID.bind(*p_21_AXI_22_AWID);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_22_AWID);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_AXI_22_AWLEN = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->AXI_22_AWLEN.bind(*p_21_AXI_22_AWLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_22_AWLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_21_AXI_22_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_21->AXI_22_AWSIZE.bind(*p_21_AXI_22_AWSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_22_AWSIZE);
        xsim_sc_channel<0, bool > *p_21_AXI_22_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_22_AWVALID.bind(*p_21_AXI_22_AWVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_22_AWVALID);
        xsim_sc_channel<0, bool > *p_21_AXI_22_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_22_RREADY.bind(*p_21_AXI_22_RREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_22_RREADY);
        xsim_sc_channel<0, bool > *p_21_AXI_22_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_22_BREADY.bind(*p_21_AXI_22_BREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_22_BREADY);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_21_AXI_22_WDATA = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_21->AXI_22_WDATA.bind(*p_21_AXI_22_WDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_22_WDATA);
        xsim_sc_channel<0, bool > *p_21_AXI_22_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_22_WLAST.bind(*p_21_AXI_22_WLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_22_WLAST);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_21_AXI_22_WSTRB = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_21->AXI_22_WSTRB.bind(*p_21_AXI_22_WSTRB);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_22_WSTRB);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_21_AXI_22_WDATA_PARITY = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_21->AXI_22_WDATA_PARITY.bind(*p_21_AXI_22_WDATA_PARITY);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_22_WDATA_PARITY);
        xsim_sc_channel<0, bool > *p_21_AXI_22_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_22_WVALID.bind(*p_21_AXI_22_WVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_22_WVALID);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_21_APB_0_PWDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_21->APB_0_PWDATA.bind(*p_21_APB_0_PWDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_21_APB_0_PWDATA);
        xsim_sc_channel<22, sc_dt::sc_bv<22> > *p_21_APB_0_PADDR = new xsim_sc_channel<22, sc_dt::sc_bv<22> >();
        sc_inst_21->APB_0_PADDR.bind(*p_21_APB_0_PADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_21_APB_0_PADDR);
        xsim_sc_channel<0, bool > *p_21_APB_0_PCLK = new xsim_sc_channel<0, bool >();
        sc_inst_21->APB_0_PCLK.bind(*p_21_APB_0_PCLK);
        (*_glb_hdl_sc_channel_map).push_back(p_21_APB_0_PCLK);
        xsim_sc_channel<0, bool > *p_21_APB_0_PENABLE = new xsim_sc_channel<0, bool >();
        sc_inst_21->APB_0_PENABLE.bind(*p_21_APB_0_PENABLE);
        (*_glb_hdl_sc_channel_map).push_back(p_21_APB_0_PENABLE);
        xsim_sc_channel<0, bool > *p_21_APB_0_PRESET_N = new xsim_sc_channel<0, bool >();
        sc_inst_21->APB_0_PRESET_N.bind(*p_21_APB_0_PRESET_N);
        (*_glb_hdl_sc_channel_map).push_back(p_21_APB_0_PRESET_N);
        xsim_sc_channel<0, bool > *p_21_APB_0_PSEL = new xsim_sc_channel<0, bool >();
        sc_inst_21->APB_0_PSEL.bind(*p_21_APB_0_PSEL);
        (*_glb_hdl_sc_channel_map).push_back(p_21_APB_0_PSEL);
        xsim_sc_channel<0, bool > *p_21_APB_0_PWRITE = new xsim_sc_channel<0, bool >();
        sc_inst_21->APB_0_PWRITE.bind(*p_21_APB_0_PWRITE);
        (*_glb_hdl_sc_channel_map).push_back(p_21_APB_0_PWRITE);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_21_APB_1_PWDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_21->APB_1_PWDATA.bind(*p_21_APB_1_PWDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_21_APB_1_PWDATA);
        xsim_sc_channel<22, sc_dt::sc_bv<22> > *p_21_APB_1_PADDR = new xsim_sc_channel<22, sc_dt::sc_bv<22> >();
        sc_inst_21->APB_1_PADDR.bind(*p_21_APB_1_PADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_21_APB_1_PADDR);
        xsim_sc_channel<0, bool > *p_21_APB_1_PCLK = new xsim_sc_channel<0, bool >();
        sc_inst_21->APB_1_PCLK.bind(*p_21_APB_1_PCLK);
        (*_glb_hdl_sc_channel_map).push_back(p_21_APB_1_PCLK);
        xsim_sc_channel<0, bool > *p_21_APB_1_PENABLE = new xsim_sc_channel<0, bool >();
        sc_inst_21->APB_1_PENABLE.bind(*p_21_APB_1_PENABLE);
        (*_glb_hdl_sc_channel_map).push_back(p_21_APB_1_PENABLE);
        xsim_sc_channel<0, bool > *p_21_APB_1_PRESET_N = new xsim_sc_channel<0, bool >();
        sc_inst_21->APB_1_PRESET_N.bind(*p_21_APB_1_PRESET_N);
        (*_glb_hdl_sc_channel_map).push_back(p_21_APB_1_PRESET_N);
        xsim_sc_channel<0, bool > *p_21_APB_1_PSEL = new xsim_sc_channel<0, bool >();
        sc_inst_21->APB_1_PSEL.bind(*p_21_APB_1_PSEL);
        (*_glb_hdl_sc_channel_map).push_back(p_21_APB_1_PSEL);
        xsim_sc_channel<0, bool > *p_21_APB_1_PWRITE = new xsim_sc_channel<0, bool >();
        sc_inst_21->APB_1_PWRITE.bind(*p_21_APB_1_PWRITE);
        (*_glb_hdl_sc_channel_map).push_back(p_21_APB_1_PWRITE);
        xsim_sc_channel<0, bool > *p_21_AXI_04_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_04_ARREADY.bind(*p_21_AXI_04_ARREADY);
        p_21_AXI_04_ARREADY->set_sv_netview_offsetfromdp(8783264);
        xsim_sc_channel<0, bool > *p_21_AXI_04_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_04_AWREADY.bind(*p_21_AXI_04_AWREADY);
        p_21_AXI_04_AWREADY->set_sv_netview_offsetfromdp(8783320);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_21_AXI_04_RDATA_PARITY = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_21->AXI_04_RDATA_PARITY.bind(*p_21_AXI_04_RDATA_PARITY);
        p_21_AXI_04_RDATA_PARITY->set_sv_netview_offsetfromdp(8783376);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_21_AXI_04_RDATA = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_21->AXI_04_RDATA.bind(*p_21_AXI_04_RDATA);
        p_21_AXI_04_RDATA->set_sv_netview_offsetfromdp(8783432);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_21_AXI_04_RID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_21->AXI_04_RID.bind(*p_21_AXI_04_RID);
        p_21_AXI_04_RID->set_sv_netview_offsetfromdp(8783488);
        xsim_sc_channel<0, bool > *p_21_AXI_04_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_04_RLAST.bind(*p_21_AXI_04_RLAST);
        p_21_AXI_04_RLAST->set_sv_netview_offsetfromdp(8783544);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_AXI_04_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->AXI_04_RRESP.bind(*p_21_AXI_04_RRESP);
        p_21_AXI_04_RRESP->set_sv_netview_offsetfromdp(8783600);
        xsim_sc_channel<0, bool > *p_21_AXI_04_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_04_RVALID.bind(*p_21_AXI_04_RVALID);
        p_21_AXI_04_RVALID->set_sv_netview_offsetfromdp(8783656);
        xsim_sc_channel<0, bool > *p_21_AXI_04_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_04_WREADY.bind(*p_21_AXI_04_WREADY);
        p_21_AXI_04_WREADY->set_sv_netview_offsetfromdp(8783712);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_21_AXI_04_BID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_21->AXI_04_BID.bind(*p_21_AXI_04_BID);
        p_21_AXI_04_BID->set_sv_netview_offsetfromdp(8783768);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_AXI_04_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->AXI_04_BRESP.bind(*p_21_AXI_04_BRESP);
        p_21_AXI_04_BRESP->set_sv_netview_offsetfromdp(8783824);
        xsim_sc_channel<0, bool > *p_21_AXI_04_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_04_BVALID.bind(*p_21_AXI_04_BVALID);
        p_21_AXI_04_BVALID->set_sv_netview_offsetfromdp(8783880);
        xsim_sc_channel<0, bool > *p_21_AXI_08_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_08_ARREADY.bind(*p_21_AXI_08_ARREADY);
        p_21_AXI_08_ARREADY->set_sv_netview_offsetfromdp(8783936);
        xsim_sc_channel<0, bool > *p_21_AXI_08_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_08_AWREADY.bind(*p_21_AXI_08_AWREADY);
        p_21_AXI_08_AWREADY->set_sv_netview_offsetfromdp(8783992);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_21_AXI_08_RDATA_PARITY = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_21->AXI_08_RDATA_PARITY.bind(*p_21_AXI_08_RDATA_PARITY);
        p_21_AXI_08_RDATA_PARITY->set_sv_netview_offsetfromdp(8784048);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_21_AXI_08_RDATA = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_21->AXI_08_RDATA.bind(*p_21_AXI_08_RDATA);
        p_21_AXI_08_RDATA->set_sv_netview_offsetfromdp(8784104);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_21_AXI_08_RID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_21->AXI_08_RID.bind(*p_21_AXI_08_RID);
        p_21_AXI_08_RID->set_sv_netview_offsetfromdp(8784160);
        xsim_sc_channel<0, bool > *p_21_AXI_08_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_08_RLAST.bind(*p_21_AXI_08_RLAST);
        p_21_AXI_08_RLAST->set_sv_netview_offsetfromdp(8784216);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_AXI_08_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->AXI_08_RRESP.bind(*p_21_AXI_08_RRESP);
        p_21_AXI_08_RRESP->set_sv_netview_offsetfromdp(8784272);
        xsim_sc_channel<0, bool > *p_21_AXI_08_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_08_RVALID.bind(*p_21_AXI_08_RVALID);
        p_21_AXI_08_RVALID->set_sv_netview_offsetfromdp(8784328);
        xsim_sc_channel<0, bool > *p_21_AXI_08_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_08_WREADY.bind(*p_21_AXI_08_WREADY);
        p_21_AXI_08_WREADY->set_sv_netview_offsetfromdp(8784384);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_21_AXI_08_BID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_21->AXI_08_BID.bind(*p_21_AXI_08_BID);
        p_21_AXI_08_BID->set_sv_netview_offsetfromdp(8784440);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_AXI_08_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->AXI_08_BRESP.bind(*p_21_AXI_08_BRESP);
        p_21_AXI_08_BRESP->set_sv_netview_offsetfromdp(8784496);
        xsim_sc_channel<0, bool > *p_21_AXI_08_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_08_BVALID.bind(*p_21_AXI_08_BVALID);
        p_21_AXI_08_BVALID->set_sv_netview_offsetfromdp(8784552);
        xsim_sc_channel<0, bool > *p_21_AXI_18_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_18_ARREADY.bind(*p_21_AXI_18_ARREADY);
        p_21_AXI_18_ARREADY->set_sv_netview_offsetfromdp(8784608);
        xsim_sc_channel<0, bool > *p_21_AXI_18_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_18_AWREADY.bind(*p_21_AXI_18_AWREADY);
        p_21_AXI_18_AWREADY->set_sv_netview_offsetfromdp(8784664);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_21_AXI_18_RDATA_PARITY = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_21->AXI_18_RDATA_PARITY.bind(*p_21_AXI_18_RDATA_PARITY);
        p_21_AXI_18_RDATA_PARITY->set_sv_netview_offsetfromdp(8784720);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_21_AXI_18_RDATA = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_21->AXI_18_RDATA.bind(*p_21_AXI_18_RDATA);
        p_21_AXI_18_RDATA->set_sv_netview_offsetfromdp(8784776);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_21_AXI_18_RID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_21->AXI_18_RID.bind(*p_21_AXI_18_RID);
        p_21_AXI_18_RID->set_sv_netview_offsetfromdp(8784832);
        xsim_sc_channel<0, bool > *p_21_AXI_18_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_18_RLAST.bind(*p_21_AXI_18_RLAST);
        p_21_AXI_18_RLAST->set_sv_netview_offsetfromdp(8784888);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_AXI_18_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->AXI_18_RRESP.bind(*p_21_AXI_18_RRESP);
        p_21_AXI_18_RRESP->set_sv_netview_offsetfromdp(8784944);
        xsim_sc_channel<0, bool > *p_21_AXI_18_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_18_RVALID.bind(*p_21_AXI_18_RVALID);
        p_21_AXI_18_RVALID->set_sv_netview_offsetfromdp(8785000);
        xsim_sc_channel<0, bool > *p_21_AXI_18_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_18_WREADY.bind(*p_21_AXI_18_WREADY);
        p_21_AXI_18_WREADY->set_sv_netview_offsetfromdp(8785056);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_21_AXI_18_BID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_21->AXI_18_BID.bind(*p_21_AXI_18_BID);
        p_21_AXI_18_BID->set_sv_netview_offsetfromdp(8785112);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_AXI_18_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->AXI_18_BRESP.bind(*p_21_AXI_18_BRESP);
        p_21_AXI_18_BRESP->set_sv_netview_offsetfromdp(8785168);
        xsim_sc_channel<0, bool > *p_21_AXI_18_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_18_BVALID.bind(*p_21_AXI_18_BVALID);
        p_21_AXI_18_BVALID->set_sv_netview_offsetfromdp(8785224);
        xsim_sc_channel<0, bool > *p_21_AXI_22_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_22_ARREADY.bind(*p_21_AXI_22_ARREADY);
        p_21_AXI_22_ARREADY->set_sv_netview_offsetfromdp(8785280);
        xsim_sc_channel<0, bool > *p_21_AXI_22_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_22_AWREADY.bind(*p_21_AXI_22_AWREADY);
        p_21_AXI_22_AWREADY->set_sv_netview_offsetfromdp(8785336);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_21_AXI_22_RDATA_PARITY = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_21->AXI_22_RDATA_PARITY.bind(*p_21_AXI_22_RDATA_PARITY);
        p_21_AXI_22_RDATA_PARITY->set_sv_netview_offsetfromdp(8785392);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_21_AXI_22_RDATA = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_21->AXI_22_RDATA.bind(*p_21_AXI_22_RDATA);
        p_21_AXI_22_RDATA->set_sv_netview_offsetfromdp(8785448);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_21_AXI_22_RID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_21->AXI_22_RID.bind(*p_21_AXI_22_RID);
        p_21_AXI_22_RID->set_sv_netview_offsetfromdp(8785504);
        xsim_sc_channel<0, bool > *p_21_AXI_22_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_22_RLAST.bind(*p_21_AXI_22_RLAST);
        p_21_AXI_22_RLAST->set_sv_netview_offsetfromdp(8785560);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_AXI_22_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->AXI_22_RRESP.bind(*p_21_AXI_22_RRESP);
        p_21_AXI_22_RRESP->set_sv_netview_offsetfromdp(8785616);
        xsim_sc_channel<0, bool > *p_21_AXI_22_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_22_RVALID.bind(*p_21_AXI_22_RVALID);
        p_21_AXI_22_RVALID->set_sv_netview_offsetfromdp(8785672);
        xsim_sc_channel<0, bool > *p_21_AXI_22_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_22_WREADY.bind(*p_21_AXI_22_WREADY);
        p_21_AXI_22_WREADY->set_sv_netview_offsetfromdp(8785728);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_21_AXI_22_BID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_21->AXI_22_BID.bind(*p_21_AXI_22_BID);
        p_21_AXI_22_BID->set_sv_netview_offsetfromdp(8785784);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_AXI_22_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->AXI_22_BRESP.bind(*p_21_AXI_22_BRESP);
        p_21_AXI_22_BRESP->set_sv_netview_offsetfromdp(8785840);
        xsim_sc_channel<0, bool > *p_21_AXI_22_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_22_BVALID.bind(*p_21_AXI_22_BVALID);
        p_21_AXI_22_BVALID->set_sv_netview_offsetfromdp(8785896);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_21_APB_0_PRDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_21->APB_0_PRDATA.bind(*p_21_APB_0_PRDATA);
        p_21_APB_0_PRDATA->set_sv_netview_offsetfromdp(8785952);
        xsim_sc_channel<0, bool > *p_21_APB_0_PREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->APB_0_PREADY.bind(*p_21_APB_0_PREADY);
        p_21_APB_0_PREADY->set_sv_netview_offsetfromdp(8786008);
        xsim_sc_channel<0, bool > *p_21_APB_0_PSLVERR = new xsim_sc_channel<0, bool >();
        sc_inst_21->APB_0_PSLVERR.bind(*p_21_APB_0_PSLVERR);
        p_21_APB_0_PSLVERR->set_sv_netview_offsetfromdp(8786064);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_21_APB_1_PRDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_21->APB_1_PRDATA.bind(*p_21_APB_1_PRDATA);
        p_21_APB_1_PRDATA->set_sv_netview_offsetfromdp(8786120);
        xsim_sc_channel<0, bool > *p_21_APB_1_PREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->APB_1_PREADY.bind(*p_21_APB_1_PREADY);
        p_21_APB_1_PREADY->set_sv_netview_offsetfromdp(8786176);
        xsim_sc_channel<0, bool > *p_21_APB_1_PSLVERR = new xsim_sc_channel<0, bool >();
        sc_inst_21->APB_1_PSLVERR.bind(*p_21_APB_1_PSLVERR);
        p_21_APB_1_PSLVERR->set_sv_netview_offsetfromdp(8786232);
        xsim_sc_channel<0, bool > *p_21_apb_complete_0 = new xsim_sc_channel<0, bool >();
        sc_inst_21->apb_complete_0.bind(*p_21_apb_complete_0);
        p_21_apb_complete_0->set_sv_netview_offsetfromdp(8786288);
        xsim_sc_channel<0, bool > *p_21_apb_complete_1 = new xsim_sc_channel<0, bool >();
        sc_inst_21->apb_complete_1.bind(*p_21_apb_complete_1);
        p_21_apb_complete_1->set_sv_netview_offsetfromdp(8786344);
        xsim_sc_channel<0, bool > *p_21_DRAM_0_STAT_CATTRIP = new xsim_sc_channel<0, bool >();
        sc_inst_21->DRAM_0_STAT_CATTRIP.bind(*p_21_DRAM_0_STAT_CATTRIP);
        p_21_DRAM_0_STAT_CATTRIP->set_sv_netview_offsetfromdp(8786400);
        xsim_sc_channel<7, sc_dt::sc_bv<7> > *p_21_DRAM_0_STAT_TEMP = new xsim_sc_channel<7, sc_dt::sc_bv<7> >();
        sc_inst_21->DRAM_0_STAT_TEMP.bind(*p_21_DRAM_0_STAT_TEMP);
        p_21_DRAM_0_STAT_TEMP->set_sv_netview_offsetfromdp(8786456);
        xsim_sc_channel<0, bool > *p_21_DRAM_1_STAT_CATTRIP = new xsim_sc_channel<0, bool >();
        sc_inst_21->DRAM_1_STAT_CATTRIP.bind(*p_21_DRAM_1_STAT_CATTRIP);
        p_21_DRAM_1_STAT_CATTRIP->set_sv_netview_offsetfromdp(8786512);
        xsim_sc_channel<7, sc_dt::sc_bv<7> > *p_21_DRAM_1_STAT_TEMP = new xsim_sc_channel<7, sc_dt::sc_bv<7> >();
        sc_inst_21->DRAM_1_STAT_TEMP.bind(*p_21_DRAM_1_STAT_TEMP);
        p_21_DRAM_1_STAT_TEMP->set_sv_netview_offsetfromdp(8786568);
        sc_inst_22 = new bd_5dca_interconnect0_18_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.hmss_0.inst.path_18.interconnect0_18");
        sc_inst_22->xsim_set_dbg_index(2227);
        xsim_sc_channel<0, bool > *p_22_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_22->aclk.bind(*p_22_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_22_aclk);
        xsim_sc_channel<0, bool > *p_22_aclk1 = new xsim_sc_channel<0, bool >();
        sc_inst_22->aclk1.bind(*p_22_aclk1);
        (*_glb_hdl_sc_channel_map).push_back(p_22_aclk1);
        xsim_sc_channel<0, bool > *p_22_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_22->aresetn.bind(*p_22_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_22_aresetn);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_22_S00_AXI_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_22->S00_AXI_awaddr.bind(*p_22_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_22_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_22_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_22->S00_AXI_awlen.bind(*p_22_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_22_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_22_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_22->S00_AXI_awsize.bind(*p_22_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_22_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->S00_AXI_awburst.bind(*p_22_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_22_S00_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_22_S00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_22->S00_AXI_awlock.bind(*p_22_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_22_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->S00_AXI_awcache.bind(*p_22_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_22_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_22_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_22->S00_AXI_awprot.bind(*p_22_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_22_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->S00_AXI_awqos.bind(*p_22_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_22_S00_AXI_awqos);
        xsim_sc_channel<0, bool > *p_22_S00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_22->S00_AXI_awvalid.bind(*p_22_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_22_S00_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_22_S00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_22->S00_AXI_awready.bind(*p_22_S00_AXI_awready);
        p_22_S00_AXI_awready->set_sv_netview_offsetfromdp(8980720);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_22_S00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_22->S00_AXI_wdata.bind(*p_22_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_22_S00_AXI_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_22_S00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_22->S00_AXI_wstrb.bind(*p_22_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_22_S00_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_22_S00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_22->S00_AXI_wlast.bind(*p_22_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_22_S00_AXI_wlast);
        xsim_sc_channel<0, bool > *p_22_S00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_22->S00_AXI_wvalid.bind(*p_22_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_22_S00_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_22_S00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_22->S00_AXI_wready.bind(*p_22_S00_AXI_wready);
        p_22_S00_AXI_wready->set_sv_netview_offsetfromdp(8981000);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->S00_AXI_bresp.bind(*p_22_S00_AXI_bresp);
        p_22_S00_AXI_bresp->set_sv_netview_offsetfromdp(8981056);
        xsim_sc_channel<0, bool > *p_22_S00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_22->S00_AXI_bvalid.bind(*p_22_S00_AXI_bvalid);
        p_22_S00_AXI_bvalid->set_sv_netview_offsetfromdp(8981112);
        xsim_sc_channel<0, bool > *p_22_S00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_22->S00_AXI_bready.bind(*p_22_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_22_S00_AXI_bready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_22_S00_AXI_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_22->S00_AXI_araddr.bind(*p_22_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_22_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_22_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_22->S00_AXI_arlen.bind(*p_22_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_22_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_22_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_22->S00_AXI_arsize.bind(*p_22_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_22_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->S00_AXI_arburst.bind(*p_22_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_22_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_22_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_22->S00_AXI_arlock.bind(*p_22_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_22_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->S00_AXI_arcache.bind(*p_22_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_22_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_22_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_22->S00_AXI_arprot.bind(*p_22_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_22_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->S00_AXI_arqos.bind(*p_22_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_22_S00_AXI_arqos);
        xsim_sc_channel<0, bool > *p_22_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_22->S00_AXI_arvalid.bind(*p_22_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_22_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_22_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_22->S00_AXI_arready.bind(*p_22_S00_AXI_arready);
        p_22_S00_AXI_arready->set_sv_netview_offsetfromdp(8981728);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_22_S00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_22->S00_AXI_rdata.bind(*p_22_S00_AXI_rdata);
        p_22_S00_AXI_rdata->set_sv_netview_offsetfromdp(8981784);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->S00_AXI_rresp.bind(*p_22_S00_AXI_rresp);
        p_22_S00_AXI_rresp->set_sv_netview_offsetfromdp(8981840);
        xsim_sc_channel<0, bool > *p_22_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_22->S00_AXI_rlast.bind(*p_22_S00_AXI_rlast);
        p_22_S00_AXI_rlast->set_sv_netview_offsetfromdp(8981896);
        xsim_sc_channel<0, bool > *p_22_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_22->S00_AXI_rvalid.bind(*p_22_S00_AXI_rvalid);
        p_22_S00_AXI_rvalid->set_sv_netview_offsetfromdp(8981952);
        xsim_sc_channel<0, bool > *p_22_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_22->S00_AXI_rready.bind(*p_22_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_22_S00_AXI_rready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_22_M00_AXI_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_22->M00_AXI_awaddr.bind(*p_22_M00_AXI_awaddr);
        p_22_M00_AXI_awaddr->set_sv_netview_offsetfromdp(8982064);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_M00_AXI_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->M00_AXI_awlen.bind(*p_22_M00_AXI_awlen);
        p_22_M00_AXI_awlen->set_sv_netview_offsetfromdp(8982120);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_22_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_22->M00_AXI_awsize.bind(*p_22_M00_AXI_awsize);
        p_22_M00_AXI_awsize->set_sv_netview_offsetfromdp(8982176);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->M00_AXI_awburst.bind(*p_22_M00_AXI_awburst);
        p_22_M00_AXI_awburst->set_sv_netview_offsetfromdp(8982232);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_M00_AXI_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->M00_AXI_awlock.bind(*p_22_M00_AXI_awlock);
        p_22_M00_AXI_awlock->set_sv_netview_offsetfromdp(8982288);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->M00_AXI_awcache.bind(*p_22_M00_AXI_awcache);
        p_22_M00_AXI_awcache->set_sv_netview_offsetfromdp(8982344);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_22_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_22->M00_AXI_awprot.bind(*p_22_M00_AXI_awprot);
        p_22_M00_AXI_awprot->set_sv_netview_offsetfromdp(8982400);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->M00_AXI_awqos.bind(*p_22_M00_AXI_awqos);
        p_22_M00_AXI_awqos->set_sv_netview_offsetfromdp(8982456);
        xsim_sc_channel<0, bool > *p_22_M00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_22->M00_AXI_awvalid.bind(*p_22_M00_AXI_awvalid);
        p_22_M00_AXI_awvalid->set_sv_netview_offsetfromdp(8982512);
        xsim_sc_channel<0, bool > *p_22_M00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_22->M00_AXI_awready.bind(*p_22_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_22_M00_AXI_awready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_22_M00_AXI_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_22->M00_AXI_wdata.bind(*p_22_M00_AXI_wdata);
        p_22_M00_AXI_wdata->set_sv_netview_offsetfromdp(8982624);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_22_M00_AXI_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_22->M00_AXI_wstrb.bind(*p_22_M00_AXI_wstrb);
        p_22_M00_AXI_wstrb->set_sv_netview_offsetfromdp(8982680);
        xsim_sc_channel<0, bool > *p_22_M00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_22->M00_AXI_wlast.bind(*p_22_M00_AXI_wlast);
        p_22_M00_AXI_wlast->set_sv_netview_offsetfromdp(8982736);
        xsim_sc_channel<0, bool > *p_22_M00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_22->M00_AXI_wvalid.bind(*p_22_M00_AXI_wvalid);
        p_22_M00_AXI_wvalid->set_sv_netview_offsetfromdp(8982792);
        xsim_sc_channel<0, bool > *p_22_M00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_22->M00_AXI_wready.bind(*p_22_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_22_M00_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->M00_AXI_bresp.bind(*p_22_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_22_M00_AXI_bresp);
        xsim_sc_channel<0, bool > *p_22_M00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_22->M00_AXI_bvalid.bind(*p_22_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_22_M00_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_22_M00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_22->M00_AXI_bready.bind(*p_22_M00_AXI_bready);
        p_22_M00_AXI_bready->set_sv_netview_offsetfromdp(8983016);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_22_M00_AXI_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_22->M00_AXI_araddr.bind(*p_22_M00_AXI_araddr);
        p_22_M00_AXI_araddr->set_sv_netview_offsetfromdp(8983072);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_M00_AXI_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->M00_AXI_arlen.bind(*p_22_M00_AXI_arlen);
        p_22_M00_AXI_arlen->set_sv_netview_offsetfromdp(8983128);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_22_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_22->M00_AXI_arsize.bind(*p_22_M00_AXI_arsize);
        p_22_M00_AXI_arsize->set_sv_netview_offsetfromdp(8983184);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->M00_AXI_arburst.bind(*p_22_M00_AXI_arburst);
        p_22_M00_AXI_arburst->set_sv_netview_offsetfromdp(8983240);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_M00_AXI_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->M00_AXI_arlock.bind(*p_22_M00_AXI_arlock);
        p_22_M00_AXI_arlock->set_sv_netview_offsetfromdp(8983296);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->M00_AXI_arcache.bind(*p_22_M00_AXI_arcache);
        p_22_M00_AXI_arcache->set_sv_netview_offsetfromdp(8983352);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_22_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_22->M00_AXI_arprot.bind(*p_22_M00_AXI_arprot);
        p_22_M00_AXI_arprot->set_sv_netview_offsetfromdp(8983408);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->M00_AXI_arqos.bind(*p_22_M00_AXI_arqos);
        p_22_M00_AXI_arqos->set_sv_netview_offsetfromdp(8983464);
        xsim_sc_channel<0, bool > *p_22_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_22->M00_AXI_arvalid.bind(*p_22_M00_AXI_arvalid);
        p_22_M00_AXI_arvalid->set_sv_netview_offsetfromdp(8983520);
        xsim_sc_channel<0, bool > *p_22_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_22->M00_AXI_arready.bind(*p_22_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_22_M00_AXI_arready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_22_M00_AXI_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_22->M00_AXI_rdata.bind(*p_22_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_22_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->M00_AXI_rresp.bind(*p_22_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_22_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_22_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_22->M00_AXI_rlast.bind(*p_22_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_22_M00_AXI_rlast);
        xsim_sc_channel<0, bool > *p_22_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_22->M00_AXI_rvalid.bind(*p_22_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_22_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_22_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_22->M00_AXI_rready.bind(*p_22_M00_AXI_rready);
        p_22_M00_AXI_rready->set_sv_netview_offsetfromdp(8983856);
        sc_inst_23 = new bd_5dca_slice0_18_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.hmss_0.inst.path_18.slice0_18");
        sc_inst_23->xsim_set_dbg_index(2228);
        xsim_sc_channel<0, bool > *p_23_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_23->aclk.bind(*p_23_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_23_aclk);
        xsim_sc_channel<0, bool > *p_23_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_23->aresetn.bind(*p_23_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_23_aresetn);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_23_s_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_23->s_axi_awaddr.bind(*p_23_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_23_s_axi_awaddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_s_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->s_axi_awlen.bind(*p_23_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_23_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->s_axi_awsize.bind(*p_23_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_23_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->s_axi_awburst.bind(*p_23_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_23_s_axi_awburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_s_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->s_axi_awlock.bind(*p_23_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_23_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->s_axi_awcache.bind(*p_23_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_23_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->s_axi_awprot.bind(*p_23_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_23_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->s_axi_awqos.bind(*p_23_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_23_s_axi_awqos);
        xsim_sc_channel<0, bool > *p_23_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_axi_awvalid.bind(*p_23_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_23_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_23_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_axi_awready.bind(*p_23_s_axi_awready);
        p_23_s_axi_awready->set_sv_netview_offsetfromdp(8984576);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_23_s_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_23->s_axi_wdata.bind(*p_23_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_23_s_axi_wdata);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_23_s_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_23->s_axi_wstrb.bind(*p_23_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_23_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_23_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_axi_wlast.bind(*p_23_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_23_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_23_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_axi_wvalid.bind(*p_23_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_23_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_23_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_axi_wready.bind(*p_23_s_axi_wready);
        p_23_s_axi_wready->set_sv_netview_offsetfromdp(8984856);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->s_axi_bresp.bind(*p_23_s_axi_bresp);
        p_23_s_axi_bresp->set_sv_netview_offsetfromdp(8984912);
        xsim_sc_channel<0, bool > *p_23_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_axi_bvalid.bind(*p_23_s_axi_bvalid);
        p_23_s_axi_bvalid->set_sv_netview_offsetfromdp(8984968);
        xsim_sc_channel<0, bool > *p_23_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_axi_bready.bind(*p_23_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_23_s_axi_bready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_23_s_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_23->s_axi_araddr.bind(*p_23_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_23_s_axi_araddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_s_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->s_axi_arlen.bind(*p_23_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_23_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->s_axi_arsize.bind(*p_23_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_23_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->s_axi_arburst.bind(*p_23_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_23_s_axi_arburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_s_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->s_axi_arlock.bind(*p_23_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_23_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->s_axi_arcache.bind(*p_23_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_23_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->s_axi_arprot.bind(*p_23_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_23_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->s_axi_arqos.bind(*p_23_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_23_s_axi_arqos);
        xsim_sc_channel<0, bool > *p_23_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_axi_arvalid.bind(*p_23_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_23_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_23_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_axi_arready.bind(*p_23_s_axi_arready);
        p_23_s_axi_arready->set_sv_netview_offsetfromdp(8985584);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_23_s_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_23->s_axi_rdata.bind(*p_23_s_axi_rdata);
        p_23_s_axi_rdata->set_sv_netview_offsetfromdp(8985640);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->s_axi_rresp.bind(*p_23_s_axi_rresp);
        p_23_s_axi_rresp->set_sv_netview_offsetfromdp(8985696);
        xsim_sc_channel<0, bool > *p_23_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_axi_rlast.bind(*p_23_s_axi_rlast);
        p_23_s_axi_rlast->set_sv_netview_offsetfromdp(8985752);
        xsim_sc_channel<0, bool > *p_23_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_axi_rvalid.bind(*p_23_s_axi_rvalid);
        p_23_s_axi_rvalid->set_sv_netview_offsetfromdp(8985808);
        xsim_sc_channel<0, bool > *p_23_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_axi_rready.bind(*p_23_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_23_s_axi_rready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_23_m_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_23->m_axi_awaddr.bind(*p_23_m_axi_awaddr);
        p_23_m_axi_awaddr->set_sv_netview_offsetfromdp(8985920);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_m_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->m_axi_awlen.bind(*p_23_m_axi_awlen);
        p_23_m_axi_awlen->set_sv_netview_offsetfromdp(8985976);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_m_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->m_axi_awsize.bind(*p_23_m_axi_awsize);
        p_23_m_axi_awsize->set_sv_netview_offsetfromdp(8986032);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_m_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->m_axi_awburst.bind(*p_23_m_axi_awburst);
        p_23_m_axi_awburst->set_sv_netview_offsetfromdp(8986088);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_m_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->m_axi_awlock.bind(*p_23_m_axi_awlock);
        p_23_m_axi_awlock->set_sv_netview_offsetfromdp(8986144);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_m_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->m_axi_awcache.bind(*p_23_m_axi_awcache);
        p_23_m_axi_awcache->set_sv_netview_offsetfromdp(8986200);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->m_axi_awprot.bind(*p_23_m_axi_awprot);
        p_23_m_axi_awprot->set_sv_netview_offsetfromdp(8986256);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_m_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->m_axi_awqos.bind(*p_23_m_axi_awqos);
        p_23_m_axi_awqos->set_sv_netview_offsetfromdp(8986312);
        xsim_sc_channel<0, bool > *p_23_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_axi_awvalid.bind(*p_23_m_axi_awvalid);
        p_23_m_axi_awvalid->set_sv_netview_offsetfromdp(8986368);
        xsim_sc_channel<0, bool > *p_23_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_axi_awready.bind(*p_23_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_23_m_axi_awready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_23_m_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_23->m_axi_wdata.bind(*p_23_m_axi_wdata);
        p_23_m_axi_wdata->set_sv_netview_offsetfromdp(8986480);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_23_m_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_23->m_axi_wstrb.bind(*p_23_m_axi_wstrb);
        p_23_m_axi_wstrb->set_sv_netview_offsetfromdp(8986536);
        xsim_sc_channel<0, bool > *p_23_m_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_axi_wlast.bind(*p_23_m_axi_wlast);
        p_23_m_axi_wlast->set_sv_netview_offsetfromdp(8986592);
        xsim_sc_channel<0, bool > *p_23_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_axi_wvalid.bind(*p_23_m_axi_wvalid);
        p_23_m_axi_wvalid->set_sv_netview_offsetfromdp(8986648);
        xsim_sc_channel<0, bool > *p_23_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_axi_wready.bind(*p_23_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_23_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->m_axi_bresp.bind(*p_23_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_23_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_23_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_axi_bvalid.bind(*p_23_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_23_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_23_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_axi_bready.bind(*p_23_m_axi_bready);
        p_23_m_axi_bready->set_sv_netview_offsetfromdp(8986872);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_23_m_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_23->m_axi_araddr.bind(*p_23_m_axi_araddr);
        p_23_m_axi_araddr->set_sv_netview_offsetfromdp(8986928);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_m_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->m_axi_arlen.bind(*p_23_m_axi_arlen);
        p_23_m_axi_arlen->set_sv_netview_offsetfromdp(8986984);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_m_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->m_axi_arsize.bind(*p_23_m_axi_arsize);
        p_23_m_axi_arsize->set_sv_netview_offsetfromdp(8987040);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_m_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->m_axi_arburst.bind(*p_23_m_axi_arburst);
        p_23_m_axi_arburst->set_sv_netview_offsetfromdp(8987096);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_m_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->m_axi_arlock.bind(*p_23_m_axi_arlock);
        p_23_m_axi_arlock->set_sv_netview_offsetfromdp(8987152);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_m_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->m_axi_arcache.bind(*p_23_m_axi_arcache);
        p_23_m_axi_arcache->set_sv_netview_offsetfromdp(8987208);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->m_axi_arprot.bind(*p_23_m_axi_arprot);
        p_23_m_axi_arprot->set_sv_netview_offsetfromdp(8987264);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_m_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->m_axi_arqos.bind(*p_23_m_axi_arqos);
        p_23_m_axi_arqos->set_sv_netview_offsetfromdp(8987320);
        xsim_sc_channel<0, bool > *p_23_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_axi_arvalid.bind(*p_23_m_axi_arvalid);
        p_23_m_axi_arvalid->set_sv_netview_offsetfromdp(8987376);
        xsim_sc_channel<0, bool > *p_23_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_axi_arready.bind(*p_23_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_23_m_axi_arready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_23_m_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_23->m_axi_rdata.bind(*p_23_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_23_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->m_axi_rresp.bind(*p_23_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_23_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_23_m_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_axi_rlast.bind(*p_23_m_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_23_m_axi_rlast);
        xsim_sc_channel<0, bool > *p_23_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_axi_rvalid.bind(*p_23_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_23_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_23_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_axi_rready.bind(*p_23_m_axi_rready);
        p_23_m_axi_rready->set_sv_netview_offsetfromdp(8987712);
        sc_inst_24 = new bd_5dca_interconnect2_22_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.hmss_0.inst.path_22.interconnect2_22");
        sc_inst_24->xsim_set_dbg_index(2297);
        xsim_sc_channel<0, bool > *p_24_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_24->aclk.bind(*p_24_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_24_aclk);
        xsim_sc_channel<0, bool > *p_24_aclk1 = new xsim_sc_channel<0, bool >();
        sc_inst_24->aclk1.bind(*p_24_aclk1);
        (*_glb_hdl_sc_channel_map).push_back(p_24_aclk1);
        xsim_sc_channel<0, bool > *p_24_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_24->aresetn.bind(*p_24_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_24_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_24_S00_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_24->S00_AXI_arid.bind(*p_24_S00_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_24_S00_AXI_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_24_S00_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_24->S00_AXI_araddr.bind(*p_24_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_24_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_24_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_24->S00_AXI_arlen.bind(*p_24_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_24_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_24_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_24->S00_AXI_arsize.bind(*p_24_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_24_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_24_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_24->S00_AXI_arburst.bind(*p_24_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_24_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_24_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_24->S00_AXI_arlock.bind(*p_24_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_24_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_24_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_24->S00_AXI_arcache.bind(*p_24_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_24_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_24_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_24->S00_AXI_arprot.bind(*p_24_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_24_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_24_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_24->S00_AXI_arqos.bind(*p_24_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_24_S00_AXI_arqos);
        xsim_sc_channel<0, bool > *p_24_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_24->S00_AXI_arvalid.bind(*p_24_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_24_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_24_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_24->S00_AXI_arready.bind(*p_24_S00_AXI_arready);
        p_24_S00_AXI_arready->set_sv_netview_offsetfromdp(9031632);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_24_S00_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_24->S00_AXI_rid.bind(*p_24_S00_AXI_rid);
        p_24_S00_AXI_rid->set_sv_netview_offsetfromdp(9031688);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_24_S00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_24->S00_AXI_rdata.bind(*p_24_S00_AXI_rdata);
        p_24_S00_AXI_rdata->set_sv_netview_offsetfromdp(9031744);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_24_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_24->S00_AXI_rresp.bind(*p_24_S00_AXI_rresp);
        p_24_S00_AXI_rresp->set_sv_netview_offsetfromdp(9031800);
        xsim_sc_channel<0, bool > *p_24_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_24->S00_AXI_rlast.bind(*p_24_S00_AXI_rlast);
        p_24_S00_AXI_rlast->set_sv_netview_offsetfromdp(9031856);
        xsim_sc_channel<0, bool > *p_24_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_24->S00_AXI_rvalid.bind(*p_24_S00_AXI_rvalid);
        p_24_S00_AXI_rvalid->set_sv_netview_offsetfromdp(9031912);
        xsim_sc_channel<0, bool > *p_24_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_24->S00_AXI_rready.bind(*p_24_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_24_S00_AXI_rready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_24_M00_AXI_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_24->M00_AXI_araddr.bind(*p_24_M00_AXI_araddr);
        p_24_M00_AXI_araddr->set_sv_netview_offsetfromdp(9032024);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_24_M00_AXI_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_24->M00_AXI_arlen.bind(*p_24_M00_AXI_arlen);
        p_24_M00_AXI_arlen->set_sv_netview_offsetfromdp(9032080);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_24_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_24->M00_AXI_arsize.bind(*p_24_M00_AXI_arsize);
        p_24_M00_AXI_arsize->set_sv_netview_offsetfromdp(9032136);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_24_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_24->M00_AXI_arburst.bind(*p_24_M00_AXI_arburst);
        p_24_M00_AXI_arburst->set_sv_netview_offsetfromdp(9032192);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_24_M00_AXI_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_24->M00_AXI_arlock.bind(*p_24_M00_AXI_arlock);
        p_24_M00_AXI_arlock->set_sv_netview_offsetfromdp(9032248);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_24_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_24->M00_AXI_arcache.bind(*p_24_M00_AXI_arcache);
        p_24_M00_AXI_arcache->set_sv_netview_offsetfromdp(9032304);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_24_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_24->M00_AXI_arprot.bind(*p_24_M00_AXI_arprot);
        p_24_M00_AXI_arprot->set_sv_netview_offsetfromdp(9032360);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_24_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_24->M00_AXI_arqos.bind(*p_24_M00_AXI_arqos);
        p_24_M00_AXI_arqos->set_sv_netview_offsetfromdp(9032416);
        xsim_sc_channel<0, bool > *p_24_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_24->M00_AXI_arvalid.bind(*p_24_M00_AXI_arvalid);
        p_24_M00_AXI_arvalid->set_sv_netview_offsetfromdp(9032472);
        xsim_sc_channel<0, bool > *p_24_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_24->M00_AXI_arready.bind(*p_24_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_24_M00_AXI_arready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_24_M00_AXI_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_24->M00_AXI_rdata.bind(*p_24_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_24_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_24_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_24->M00_AXI_rresp.bind(*p_24_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_24_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_24_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_24->M00_AXI_rlast.bind(*p_24_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_24_M00_AXI_rlast);
        xsim_sc_channel<0, bool > *p_24_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_24->M00_AXI_rvalid.bind(*p_24_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_24_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_24_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_24->M00_AXI_rready.bind(*p_24_M00_AXI_rready);
        p_24_M00_AXI_rready->set_sv_netview_offsetfromdp(9032808);
        sc_inst_25 = new bd_5dca_slice2_22_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.hmss_0.inst.path_22.slice2_22");
        sc_inst_25->xsim_set_dbg_index(2298);
        xsim_sc_channel<0, bool > *p_25_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_25->aclk.bind(*p_25_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_25_aclk);
        xsim_sc_channel<0, bool > *p_25_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_25->aresetn.bind(*p_25_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_25_aresetn);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_25_s_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_25->s_axi_awaddr.bind(*p_25_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_awaddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_25_s_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_25->s_axi_awlen.bind(*p_25_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_25_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_25->s_axi_awsize.bind(*p_25_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_25_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_25->s_axi_awburst.bind(*p_25_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_awburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_25_s_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_25->s_axi_awlock.bind(*p_25_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_25_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_25->s_axi_awcache.bind(*p_25_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_25_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_25->s_axi_awprot.bind(*p_25_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_25_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_25->s_axi_awqos.bind(*p_25_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_awqos);
        xsim_sc_channel<0, bool > *p_25_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_axi_awvalid.bind(*p_25_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_25_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_axi_awready.bind(*p_25_s_axi_awready);
        p_25_s_axi_awready->set_sv_netview_offsetfromdp(9033528);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_25_s_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_25->s_axi_wdata.bind(*p_25_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_wdata);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_25_s_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_25->s_axi_wstrb.bind(*p_25_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_25_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_axi_wlast.bind(*p_25_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_25_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_axi_wvalid.bind(*p_25_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_25_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_axi_wready.bind(*p_25_s_axi_wready);
        p_25_s_axi_wready->set_sv_netview_offsetfromdp(9033808);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_25_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_25->s_axi_bresp.bind(*p_25_s_axi_bresp);
        p_25_s_axi_bresp->set_sv_netview_offsetfromdp(9033864);
        xsim_sc_channel<0, bool > *p_25_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_axi_bvalid.bind(*p_25_s_axi_bvalid);
        p_25_s_axi_bvalid->set_sv_netview_offsetfromdp(9033920);
        xsim_sc_channel<0, bool > *p_25_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_axi_bready.bind(*p_25_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_bready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_25_s_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_25->s_axi_araddr.bind(*p_25_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_araddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_25_s_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_25->s_axi_arlen.bind(*p_25_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_25_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_25->s_axi_arsize.bind(*p_25_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_25_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_25->s_axi_arburst.bind(*p_25_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_arburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_25_s_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_25->s_axi_arlock.bind(*p_25_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_25_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_25->s_axi_arcache.bind(*p_25_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_25_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_25->s_axi_arprot.bind(*p_25_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_25_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_25->s_axi_arqos.bind(*p_25_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_arqos);
        xsim_sc_channel<0, bool > *p_25_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_axi_arvalid.bind(*p_25_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_25_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_axi_arready.bind(*p_25_s_axi_arready);
        p_25_s_axi_arready->set_sv_netview_offsetfromdp(9034536);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_25_s_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_25->s_axi_rdata.bind(*p_25_s_axi_rdata);
        p_25_s_axi_rdata->set_sv_netview_offsetfromdp(9034592);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_25_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_25->s_axi_rresp.bind(*p_25_s_axi_rresp);
        p_25_s_axi_rresp->set_sv_netview_offsetfromdp(9034648);
        xsim_sc_channel<0, bool > *p_25_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_axi_rlast.bind(*p_25_s_axi_rlast);
        p_25_s_axi_rlast->set_sv_netview_offsetfromdp(9034704);
        xsim_sc_channel<0, bool > *p_25_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_axi_rvalid.bind(*p_25_s_axi_rvalid);
        p_25_s_axi_rvalid->set_sv_netview_offsetfromdp(9034760);
        xsim_sc_channel<0, bool > *p_25_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_axi_rready.bind(*p_25_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_rready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_25_m_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_25->m_axi_awaddr.bind(*p_25_m_axi_awaddr);
        p_25_m_axi_awaddr->set_sv_netview_offsetfromdp(9034872);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_25_m_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_25->m_axi_awlen.bind(*p_25_m_axi_awlen);
        p_25_m_axi_awlen->set_sv_netview_offsetfromdp(9034928);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_25_m_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_25->m_axi_awsize.bind(*p_25_m_axi_awsize);
        p_25_m_axi_awsize->set_sv_netview_offsetfromdp(9034984);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_25_m_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_25->m_axi_awburst.bind(*p_25_m_axi_awburst);
        p_25_m_axi_awburst->set_sv_netview_offsetfromdp(9035040);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_25_m_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_25->m_axi_awlock.bind(*p_25_m_axi_awlock);
        p_25_m_axi_awlock->set_sv_netview_offsetfromdp(9035096);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_25_m_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_25->m_axi_awcache.bind(*p_25_m_axi_awcache);
        p_25_m_axi_awcache->set_sv_netview_offsetfromdp(9035152);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_25_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_25->m_axi_awprot.bind(*p_25_m_axi_awprot);
        p_25_m_axi_awprot->set_sv_netview_offsetfromdp(9035208);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_25_m_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_25->m_axi_awqos.bind(*p_25_m_axi_awqos);
        p_25_m_axi_awqos->set_sv_netview_offsetfromdp(9035264);
        xsim_sc_channel<0, bool > *p_25_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_25->m_axi_awvalid.bind(*p_25_m_axi_awvalid);
        p_25_m_axi_awvalid->set_sv_netview_offsetfromdp(9035320);
        xsim_sc_channel<0, bool > *p_25_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_25->m_axi_awready.bind(*p_25_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_25_m_axi_awready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_25_m_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_25->m_axi_wdata.bind(*p_25_m_axi_wdata);
        p_25_m_axi_wdata->set_sv_netview_offsetfromdp(9035432);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_25_m_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_25->m_axi_wstrb.bind(*p_25_m_axi_wstrb);
        p_25_m_axi_wstrb->set_sv_netview_offsetfromdp(9035488);
        xsim_sc_channel<0, bool > *p_25_m_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_25->m_axi_wlast.bind(*p_25_m_axi_wlast);
        p_25_m_axi_wlast->set_sv_netview_offsetfromdp(9035544);
        xsim_sc_channel<0, bool > *p_25_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_25->m_axi_wvalid.bind(*p_25_m_axi_wvalid);
        p_25_m_axi_wvalid->set_sv_netview_offsetfromdp(9035600);
        xsim_sc_channel<0, bool > *p_25_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_25->m_axi_wready.bind(*p_25_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_25_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_25_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_25->m_axi_bresp.bind(*p_25_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_25_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_25_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_25->m_axi_bvalid.bind(*p_25_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_25_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_25_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_25->m_axi_bready.bind(*p_25_m_axi_bready);
        p_25_m_axi_bready->set_sv_netview_offsetfromdp(9035824);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_25_m_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_25->m_axi_araddr.bind(*p_25_m_axi_araddr);
        p_25_m_axi_araddr->set_sv_netview_offsetfromdp(9035880);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_25_m_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_25->m_axi_arlen.bind(*p_25_m_axi_arlen);
        p_25_m_axi_arlen->set_sv_netview_offsetfromdp(9035936);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_25_m_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_25->m_axi_arsize.bind(*p_25_m_axi_arsize);
        p_25_m_axi_arsize->set_sv_netview_offsetfromdp(9035992);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_25_m_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_25->m_axi_arburst.bind(*p_25_m_axi_arburst);
        p_25_m_axi_arburst->set_sv_netview_offsetfromdp(9036048);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_25_m_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_25->m_axi_arlock.bind(*p_25_m_axi_arlock);
        p_25_m_axi_arlock->set_sv_netview_offsetfromdp(9036104);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_25_m_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_25->m_axi_arcache.bind(*p_25_m_axi_arcache);
        p_25_m_axi_arcache->set_sv_netview_offsetfromdp(9036160);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_25_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_25->m_axi_arprot.bind(*p_25_m_axi_arprot);
        p_25_m_axi_arprot->set_sv_netview_offsetfromdp(9036216);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_25_m_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_25->m_axi_arqos.bind(*p_25_m_axi_arqos);
        p_25_m_axi_arqos->set_sv_netview_offsetfromdp(9036272);
        xsim_sc_channel<0, bool > *p_25_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_25->m_axi_arvalid.bind(*p_25_m_axi_arvalid);
        p_25_m_axi_arvalid->set_sv_netview_offsetfromdp(9036328);
        xsim_sc_channel<0, bool > *p_25_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_25->m_axi_arready.bind(*p_25_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_25_m_axi_arready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_25_m_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_25->m_axi_rdata.bind(*p_25_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_25_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_25_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_25->m_axi_rresp.bind(*p_25_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_25_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_25_m_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_25->m_axi_rlast.bind(*p_25_m_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_25_m_axi_rlast);
        xsim_sc_channel<0, bool > *p_25_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_25->m_axi_rvalid.bind(*p_25_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_25_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_25_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_25->m_axi_rready.bind(*p_25_m_axi_rready);
        p_25_m_axi_rready->set_sv_netview_offsetfromdp(9036664);
        sc_inst_26 = new bd_5dca_interconnect1_4_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.hmss_0.inst.path_4.interconnect1_4");
        sc_inst_26->xsim_set_dbg_index(2351);
        xsim_sc_channel<0, bool > *p_26_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_26->aclk.bind(*p_26_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_26_aclk);
        xsim_sc_channel<0, bool > *p_26_aclk1 = new xsim_sc_channel<0, bool >();
        sc_inst_26->aclk1.bind(*p_26_aclk1);
        (*_glb_hdl_sc_channel_map).push_back(p_26_aclk1);
        xsim_sc_channel<0, bool > *p_26_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_26->aresetn.bind(*p_26_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_26_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_26_S00_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_26->S00_AXI_arid.bind(*p_26_S00_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S00_AXI_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_26_S00_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_26->S00_AXI_araddr.bind(*p_26_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_26_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_26->S00_AXI_arlen.bind(*p_26_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_26_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_26->S00_AXI_arsize.bind(*p_26_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_26_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_26->S00_AXI_arburst.bind(*p_26_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_26_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_26->S00_AXI_arlock.bind(*p_26_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->S00_AXI_arcache.bind(*p_26_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_26_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_26->S00_AXI_arprot.bind(*p_26_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->S00_AXI_arqos.bind(*p_26_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S00_AXI_arqos);
        xsim_sc_channel<0, bool > *p_26_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->S00_AXI_arvalid.bind(*p_26_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_26_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_26->S00_AXI_arready.bind(*p_26_S00_AXI_arready);
        p_26_S00_AXI_arready->set_sv_netview_offsetfromdp(9080584);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_26_S00_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_26->S00_AXI_rid.bind(*p_26_S00_AXI_rid);
        p_26_S00_AXI_rid->set_sv_netview_offsetfromdp(9080640);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_26_S00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_26->S00_AXI_rdata.bind(*p_26_S00_AXI_rdata);
        p_26_S00_AXI_rdata->set_sv_netview_offsetfromdp(9080696);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_26_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_26->S00_AXI_rresp.bind(*p_26_S00_AXI_rresp);
        p_26_S00_AXI_rresp->set_sv_netview_offsetfromdp(9080752);
        xsim_sc_channel<0, bool > *p_26_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_26->S00_AXI_rlast.bind(*p_26_S00_AXI_rlast);
        p_26_S00_AXI_rlast->set_sv_netview_offsetfromdp(9080808);
        xsim_sc_channel<0, bool > *p_26_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->S00_AXI_rvalid.bind(*p_26_S00_AXI_rvalid);
        p_26_S00_AXI_rvalid->set_sv_netview_offsetfromdp(9080864);
        xsim_sc_channel<0, bool > *p_26_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_26->S00_AXI_rready.bind(*p_26_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S00_AXI_rready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_26_M00_AXI_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_26->M00_AXI_araddr.bind(*p_26_M00_AXI_araddr);
        p_26_M00_AXI_araddr->set_sv_netview_offsetfromdp(9080976);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_M00_AXI_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->M00_AXI_arlen.bind(*p_26_M00_AXI_arlen);
        p_26_M00_AXI_arlen->set_sv_netview_offsetfromdp(9081032);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_26_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_26->M00_AXI_arsize.bind(*p_26_M00_AXI_arsize);
        p_26_M00_AXI_arsize->set_sv_netview_offsetfromdp(9081088);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_26_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_26->M00_AXI_arburst.bind(*p_26_M00_AXI_arburst);
        p_26_M00_AXI_arburst->set_sv_netview_offsetfromdp(9081144);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_26_M00_AXI_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_26->M00_AXI_arlock.bind(*p_26_M00_AXI_arlock);
        p_26_M00_AXI_arlock->set_sv_netview_offsetfromdp(9081200);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->M00_AXI_arcache.bind(*p_26_M00_AXI_arcache);
        p_26_M00_AXI_arcache->set_sv_netview_offsetfromdp(9081256);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_26_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_26->M00_AXI_arprot.bind(*p_26_M00_AXI_arprot);
        p_26_M00_AXI_arprot->set_sv_netview_offsetfromdp(9081312);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->M00_AXI_arqos.bind(*p_26_M00_AXI_arqos);
        p_26_M00_AXI_arqos->set_sv_netview_offsetfromdp(9081368);
        xsim_sc_channel<0, bool > *p_26_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->M00_AXI_arvalid.bind(*p_26_M00_AXI_arvalid);
        p_26_M00_AXI_arvalid->set_sv_netview_offsetfromdp(9081424);
        xsim_sc_channel<0, bool > *p_26_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_26->M00_AXI_arready.bind(*p_26_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_26_M00_AXI_arready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_26_M00_AXI_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_26->M00_AXI_rdata.bind(*p_26_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_26_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_26_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_26->M00_AXI_rresp.bind(*p_26_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_26_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_26_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_26->M00_AXI_rlast.bind(*p_26_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_26_M00_AXI_rlast);
        xsim_sc_channel<0, bool > *p_26_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->M00_AXI_rvalid.bind(*p_26_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_26_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_26_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_26->M00_AXI_rready.bind(*p_26_M00_AXI_rready);
        p_26_M00_AXI_rready->set_sv_netview_offsetfromdp(9081760);
        sc_inst_27 = new bd_5dca_slice1_4_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.hmss_0.inst.path_4.slice1_4");
        sc_inst_27->xsim_set_dbg_index(2352);
        xsim_sc_channel<0, bool > *p_27_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_27->aclk.bind(*p_27_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_27_aclk);
        xsim_sc_channel<0, bool > *p_27_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_27->aresetn.bind(*p_27_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_27_aresetn);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_27_s_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_27->s_axi_awaddr.bind(*p_27_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_awaddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_27_s_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_27->s_axi_awlen.bind(*p_27_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_27_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_27->s_axi_awsize.bind(*p_27_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_27_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_27->s_axi_awburst.bind(*p_27_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_awburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_27_s_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_27->s_axi_awlock.bind(*p_27_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_27_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_27->s_axi_awcache.bind(*p_27_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_27_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_27->s_axi_awprot.bind(*p_27_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_27_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_27->s_axi_awqos.bind(*p_27_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_awqos);
        xsim_sc_channel<0, bool > *p_27_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_27->s_axi_awvalid.bind(*p_27_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_27_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_27->s_axi_awready.bind(*p_27_s_axi_awready);
        p_27_s_axi_awready->set_sv_netview_offsetfromdp(9082480);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_27_s_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_27->s_axi_wdata.bind(*p_27_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_wdata);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_27_s_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_27->s_axi_wstrb.bind(*p_27_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_27_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_27->s_axi_wlast.bind(*p_27_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_27_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_27->s_axi_wvalid.bind(*p_27_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_27_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_27->s_axi_wready.bind(*p_27_s_axi_wready);
        p_27_s_axi_wready->set_sv_netview_offsetfromdp(9082760);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_27_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_27->s_axi_bresp.bind(*p_27_s_axi_bresp);
        p_27_s_axi_bresp->set_sv_netview_offsetfromdp(9082816);
        xsim_sc_channel<0, bool > *p_27_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_27->s_axi_bvalid.bind(*p_27_s_axi_bvalid);
        p_27_s_axi_bvalid->set_sv_netview_offsetfromdp(9082872);
        xsim_sc_channel<0, bool > *p_27_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_27->s_axi_bready.bind(*p_27_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_bready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_27_s_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_27->s_axi_araddr.bind(*p_27_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_araddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_27_s_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_27->s_axi_arlen.bind(*p_27_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_27_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_27->s_axi_arsize.bind(*p_27_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_27_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_27->s_axi_arburst.bind(*p_27_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_arburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_27_s_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_27->s_axi_arlock.bind(*p_27_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_27_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_27->s_axi_arcache.bind(*p_27_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_27_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_27->s_axi_arprot.bind(*p_27_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_27_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_27->s_axi_arqos.bind(*p_27_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_arqos);
        xsim_sc_channel<0, bool > *p_27_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_27->s_axi_arvalid.bind(*p_27_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_27_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_27->s_axi_arready.bind(*p_27_s_axi_arready);
        p_27_s_axi_arready->set_sv_netview_offsetfromdp(9083488);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_27_s_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_27->s_axi_rdata.bind(*p_27_s_axi_rdata);
        p_27_s_axi_rdata->set_sv_netview_offsetfromdp(9083544);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_27_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_27->s_axi_rresp.bind(*p_27_s_axi_rresp);
        p_27_s_axi_rresp->set_sv_netview_offsetfromdp(9083600);
        xsim_sc_channel<0, bool > *p_27_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_27->s_axi_rlast.bind(*p_27_s_axi_rlast);
        p_27_s_axi_rlast->set_sv_netview_offsetfromdp(9083656);
        xsim_sc_channel<0, bool > *p_27_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_27->s_axi_rvalid.bind(*p_27_s_axi_rvalid);
        p_27_s_axi_rvalid->set_sv_netview_offsetfromdp(9083712);
        xsim_sc_channel<0, bool > *p_27_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_27->s_axi_rready.bind(*p_27_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_rready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_27_m_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_27->m_axi_awaddr.bind(*p_27_m_axi_awaddr);
        p_27_m_axi_awaddr->set_sv_netview_offsetfromdp(9083824);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_27_m_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_27->m_axi_awlen.bind(*p_27_m_axi_awlen);
        p_27_m_axi_awlen->set_sv_netview_offsetfromdp(9083880);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_27_m_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_27->m_axi_awsize.bind(*p_27_m_axi_awsize);
        p_27_m_axi_awsize->set_sv_netview_offsetfromdp(9083936);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_27_m_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_27->m_axi_awburst.bind(*p_27_m_axi_awburst);
        p_27_m_axi_awburst->set_sv_netview_offsetfromdp(9083992);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_27_m_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_27->m_axi_awlock.bind(*p_27_m_axi_awlock);
        p_27_m_axi_awlock->set_sv_netview_offsetfromdp(9084048);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_27_m_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_27->m_axi_awcache.bind(*p_27_m_axi_awcache);
        p_27_m_axi_awcache->set_sv_netview_offsetfromdp(9084104);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_27_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_27->m_axi_awprot.bind(*p_27_m_axi_awprot);
        p_27_m_axi_awprot->set_sv_netview_offsetfromdp(9084160);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_27_m_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_27->m_axi_awqos.bind(*p_27_m_axi_awqos);
        p_27_m_axi_awqos->set_sv_netview_offsetfromdp(9084216);
        xsim_sc_channel<0, bool > *p_27_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_27->m_axi_awvalid.bind(*p_27_m_axi_awvalid);
        p_27_m_axi_awvalid->set_sv_netview_offsetfromdp(9084272);
        xsim_sc_channel<0, bool > *p_27_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_27->m_axi_awready.bind(*p_27_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_27_m_axi_awready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_27_m_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_27->m_axi_wdata.bind(*p_27_m_axi_wdata);
        p_27_m_axi_wdata->set_sv_netview_offsetfromdp(9084384);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_27_m_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_27->m_axi_wstrb.bind(*p_27_m_axi_wstrb);
        p_27_m_axi_wstrb->set_sv_netview_offsetfromdp(9084440);
        xsim_sc_channel<0, bool > *p_27_m_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_27->m_axi_wlast.bind(*p_27_m_axi_wlast);
        p_27_m_axi_wlast->set_sv_netview_offsetfromdp(9084496);
        xsim_sc_channel<0, bool > *p_27_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_27->m_axi_wvalid.bind(*p_27_m_axi_wvalid);
        p_27_m_axi_wvalid->set_sv_netview_offsetfromdp(9084552);
        xsim_sc_channel<0, bool > *p_27_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_27->m_axi_wready.bind(*p_27_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_27_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_27_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_27->m_axi_bresp.bind(*p_27_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_27_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_27_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_27->m_axi_bvalid.bind(*p_27_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_27_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_27_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_27->m_axi_bready.bind(*p_27_m_axi_bready);
        p_27_m_axi_bready->set_sv_netview_offsetfromdp(9084776);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_27_m_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_27->m_axi_araddr.bind(*p_27_m_axi_araddr);
        p_27_m_axi_araddr->set_sv_netview_offsetfromdp(9084832);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_27_m_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_27->m_axi_arlen.bind(*p_27_m_axi_arlen);
        p_27_m_axi_arlen->set_sv_netview_offsetfromdp(9084888);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_27_m_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_27->m_axi_arsize.bind(*p_27_m_axi_arsize);
        p_27_m_axi_arsize->set_sv_netview_offsetfromdp(9084944);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_27_m_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_27->m_axi_arburst.bind(*p_27_m_axi_arburst);
        p_27_m_axi_arburst->set_sv_netview_offsetfromdp(9085000);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_27_m_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_27->m_axi_arlock.bind(*p_27_m_axi_arlock);
        p_27_m_axi_arlock->set_sv_netview_offsetfromdp(9085056);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_27_m_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_27->m_axi_arcache.bind(*p_27_m_axi_arcache);
        p_27_m_axi_arcache->set_sv_netview_offsetfromdp(9085112);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_27_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_27->m_axi_arprot.bind(*p_27_m_axi_arprot);
        p_27_m_axi_arprot->set_sv_netview_offsetfromdp(9085168);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_27_m_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_27->m_axi_arqos.bind(*p_27_m_axi_arqos);
        p_27_m_axi_arqos->set_sv_netview_offsetfromdp(9085224);
        xsim_sc_channel<0, bool > *p_27_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_27->m_axi_arvalid.bind(*p_27_m_axi_arvalid);
        p_27_m_axi_arvalid->set_sv_netview_offsetfromdp(9085280);
        xsim_sc_channel<0, bool > *p_27_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_27->m_axi_arready.bind(*p_27_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_27_m_axi_arready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_27_m_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_27->m_axi_rdata.bind(*p_27_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_27_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_27_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_27->m_axi_rresp.bind(*p_27_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_27_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_27_m_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_27->m_axi_rlast.bind(*p_27_m_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_27_m_axi_rlast);
        xsim_sc_channel<0, bool > *p_27_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_27->m_axi_rvalid.bind(*p_27_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_27_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_27_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_27->m_axi_rready.bind(*p_27_m_axi_rready);
        p_27_m_axi_rready->set_sv_netview_offsetfromdp(9085616);
        sc_inst_28 = new bd_5dca_interconnect3_8_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.hmss_0.inst.path_8.interconnect3_8");
        sc_inst_28->xsim_set_dbg_index(2405);
        xsim_sc_channel<0, bool > *p_28_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_28->aclk.bind(*p_28_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_28_aclk);
        xsim_sc_channel<0, bool > *p_28_aclk1 = new xsim_sc_channel<0, bool >();
        sc_inst_28->aclk1.bind(*p_28_aclk1);
        (*_glb_hdl_sc_channel_map).push_back(p_28_aclk1);
        xsim_sc_channel<0, bool > *p_28_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_28->aresetn.bind(*p_28_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_28_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_28_S00_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_28->S00_AXI_awid.bind(*p_28_S00_AXI_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_28_S00_AXI_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_28_S00_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_28->S00_AXI_awaddr.bind(*p_28_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_28_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_28_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_28->S00_AXI_awlen.bind(*p_28_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_28_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_28_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_28->S00_AXI_awsize.bind(*p_28_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_28_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_28_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_28->S00_AXI_awburst.bind(*p_28_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_28_S00_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_28_S00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_28->S00_AXI_awlock.bind(*p_28_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_28_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_28_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_28->S00_AXI_awcache.bind(*p_28_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_28_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_28_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_28->S00_AXI_awprot.bind(*p_28_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_28_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_28_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_28->S00_AXI_awqos.bind(*p_28_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_28_S00_AXI_awqos);
        xsim_sc_channel<0, bool > *p_28_S00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_28->S00_AXI_awvalid.bind(*p_28_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_28_S00_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_28_S00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_28->S00_AXI_awready.bind(*p_28_S00_AXI_awready);
        p_28_S00_AXI_awready->set_sv_netview_offsetfromdp(9132408);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_28_S00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_28->S00_AXI_wdata.bind(*p_28_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_28_S00_AXI_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_28_S00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_28->S00_AXI_wstrb.bind(*p_28_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_28_S00_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_28_S00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_28->S00_AXI_wlast.bind(*p_28_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_28_S00_AXI_wlast);
        xsim_sc_channel<0, bool > *p_28_S00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_28->S00_AXI_wvalid.bind(*p_28_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_28_S00_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_28_S00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_28->S00_AXI_wready.bind(*p_28_S00_AXI_wready);
        p_28_S00_AXI_wready->set_sv_netview_offsetfromdp(9132688);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_28_S00_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_28->S00_AXI_bid.bind(*p_28_S00_AXI_bid);
        p_28_S00_AXI_bid->set_sv_netview_offsetfromdp(9132744);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_28_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_28->S00_AXI_bresp.bind(*p_28_S00_AXI_bresp);
        p_28_S00_AXI_bresp->set_sv_netview_offsetfromdp(9132800);
        xsim_sc_channel<0, bool > *p_28_S00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_28->S00_AXI_bvalid.bind(*p_28_S00_AXI_bvalid);
        p_28_S00_AXI_bvalid->set_sv_netview_offsetfromdp(9132856);
        xsim_sc_channel<0, bool > *p_28_S00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_28->S00_AXI_bready.bind(*p_28_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_28_S00_AXI_bready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_28_M00_AXI_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_28->M00_AXI_awaddr.bind(*p_28_M00_AXI_awaddr);
        p_28_M00_AXI_awaddr->set_sv_netview_offsetfromdp(9132968);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_28_M00_AXI_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_28->M00_AXI_awlen.bind(*p_28_M00_AXI_awlen);
        p_28_M00_AXI_awlen->set_sv_netview_offsetfromdp(9133024);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_28_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_28->M00_AXI_awsize.bind(*p_28_M00_AXI_awsize);
        p_28_M00_AXI_awsize->set_sv_netview_offsetfromdp(9133080);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_28_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_28->M00_AXI_awburst.bind(*p_28_M00_AXI_awburst);
        p_28_M00_AXI_awburst->set_sv_netview_offsetfromdp(9133136);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_28_M00_AXI_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_28->M00_AXI_awlock.bind(*p_28_M00_AXI_awlock);
        p_28_M00_AXI_awlock->set_sv_netview_offsetfromdp(9133192);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_28_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_28->M00_AXI_awcache.bind(*p_28_M00_AXI_awcache);
        p_28_M00_AXI_awcache->set_sv_netview_offsetfromdp(9133248);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_28_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_28->M00_AXI_awprot.bind(*p_28_M00_AXI_awprot);
        p_28_M00_AXI_awprot->set_sv_netview_offsetfromdp(9133304);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_28_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_28->M00_AXI_awqos.bind(*p_28_M00_AXI_awqos);
        p_28_M00_AXI_awqos->set_sv_netview_offsetfromdp(9133360);
        xsim_sc_channel<0, bool > *p_28_M00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_28->M00_AXI_awvalid.bind(*p_28_M00_AXI_awvalid);
        p_28_M00_AXI_awvalid->set_sv_netview_offsetfromdp(9133416);
        xsim_sc_channel<0, bool > *p_28_M00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_28->M00_AXI_awready.bind(*p_28_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_28_M00_AXI_awready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_28_M00_AXI_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_28->M00_AXI_wdata.bind(*p_28_M00_AXI_wdata);
        p_28_M00_AXI_wdata->set_sv_netview_offsetfromdp(9133528);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_28_M00_AXI_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_28->M00_AXI_wstrb.bind(*p_28_M00_AXI_wstrb);
        p_28_M00_AXI_wstrb->set_sv_netview_offsetfromdp(9133584);
        xsim_sc_channel<0, bool > *p_28_M00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_28->M00_AXI_wlast.bind(*p_28_M00_AXI_wlast);
        p_28_M00_AXI_wlast->set_sv_netview_offsetfromdp(9133640);
        xsim_sc_channel<0, bool > *p_28_M00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_28->M00_AXI_wvalid.bind(*p_28_M00_AXI_wvalid);
        p_28_M00_AXI_wvalid->set_sv_netview_offsetfromdp(9133696);
        xsim_sc_channel<0, bool > *p_28_M00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_28->M00_AXI_wready.bind(*p_28_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_28_M00_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_28_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_28->M00_AXI_bresp.bind(*p_28_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_28_M00_AXI_bresp);
        xsim_sc_channel<0, bool > *p_28_M00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_28->M00_AXI_bvalid.bind(*p_28_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_28_M00_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_28_M00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_28->M00_AXI_bready.bind(*p_28_M00_AXI_bready);
        p_28_M00_AXI_bready->set_sv_netview_offsetfromdp(9133920);
        sc_inst_29 = new bd_5dca_slice3_8_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.hmss_0.inst.path_8.slice3_8");
        sc_inst_29->xsim_set_dbg_index(2406);
        xsim_sc_channel<0, bool > *p_29_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_29->aclk.bind(*p_29_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_29_aclk);
        xsim_sc_channel<0, bool > *p_29_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_29->aresetn.bind(*p_29_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_29_aresetn);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_29_s_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_29->s_axi_awaddr.bind(*p_29_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_awaddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_29_s_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_29->s_axi_awlen.bind(*p_29_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_29_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_29->s_axi_awsize.bind(*p_29_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_29_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_29->s_axi_awburst.bind(*p_29_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_awburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_29_s_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_29->s_axi_awlock.bind(*p_29_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_29_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_29->s_axi_awcache.bind(*p_29_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_29_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_29->s_axi_awprot.bind(*p_29_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_29_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_29->s_axi_awqos.bind(*p_29_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_awqos);
        xsim_sc_channel<0, bool > *p_29_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_29->s_axi_awvalid.bind(*p_29_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_29_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_29->s_axi_awready.bind(*p_29_s_axi_awready);
        p_29_s_axi_awready->set_sv_netview_offsetfromdp(9134640);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_29_s_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_29->s_axi_wdata.bind(*p_29_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_wdata);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_29_s_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_29->s_axi_wstrb.bind(*p_29_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_29_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_29->s_axi_wlast.bind(*p_29_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_29_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_29->s_axi_wvalid.bind(*p_29_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_29_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_29->s_axi_wready.bind(*p_29_s_axi_wready);
        p_29_s_axi_wready->set_sv_netview_offsetfromdp(9134920);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_29_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_29->s_axi_bresp.bind(*p_29_s_axi_bresp);
        p_29_s_axi_bresp->set_sv_netview_offsetfromdp(9134976);
        xsim_sc_channel<0, bool > *p_29_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_29->s_axi_bvalid.bind(*p_29_s_axi_bvalid);
        p_29_s_axi_bvalid->set_sv_netview_offsetfromdp(9135032);
        xsim_sc_channel<0, bool > *p_29_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_29->s_axi_bready.bind(*p_29_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_bready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_29_s_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_29->s_axi_araddr.bind(*p_29_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_araddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_29_s_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_29->s_axi_arlen.bind(*p_29_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_29_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_29->s_axi_arsize.bind(*p_29_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_29_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_29->s_axi_arburst.bind(*p_29_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_arburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_29_s_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_29->s_axi_arlock.bind(*p_29_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_29_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_29->s_axi_arcache.bind(*p_29_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_29_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_29->s_axi_arprot.bind(*p_29_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_29_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_29->s_axi_arqos.bind(*p_29_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_arqos);
        xsim_sc_channel<0, bool > *p_29_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_29->s_axi_arvalid.bind(*p_29_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_29_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_29->s_axi_arready.bind(*p_29_s_axi_arready);
        p_29_s_axi_arready->set_sv_netview_offsetfromdp(9135648);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_29_s_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_29->s_axi_rdata.bind(*p_29_s_axi_rdata);
        p_29_s_axi_rdata->set_sv_netview_offsetfromdp(9135704);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_29_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_29->s_axi_rresp.bind(*p_29_s_axi_rresp);
        p_29_s_axi_rresp->set_sv_netview_offsetfromdp(9135760);
        xsim_sc_channel<0, bool > *p_29_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_29->s_axi_rlast.bind(*p_29_s_axi_rlast);
        p_29_s_axi_rlast->set_sv_netview_offsetfromdp(9135816);
        xsim_sc_channel<0, bool > *p_29_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_29->s_axi_rvalid.bind(*p_29_s_axi_rvalid);
        p_29_s_axi_rvalid->set_sv_netview_offsetfromdp(9135872);
        xsim_sc_channel<0, bool > *p_29_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_29->s_axi_rready.bind(*p_29_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_rready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_29_m_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_29->m_axi_awaddr.bind(*p_29_m_axi_awaddr);
        p_29_m_axi_awaddr->set_sv_netview_offsetfromdp(9135984);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_29_m_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_29->m_axi_awlen.bind(*p_29_m_axi_awlen);
        p_29_m_axi_awlen->set_sv_netview_offsetfromdp(9136040);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_29_m_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_29->m_axi_awsize.bind(*p_29_m_axi_awsize);
        p_29_m_axi_awsize->set_sv_netview_offsetfromdp(9136096);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_29_m_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_29->m_axi_awburst.bind(*p_29_m_axi_awburst);
        p_29_m_axi_awburst->set_sv_netview_offsetfromdp(9136152);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_29_m_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_29->m_axi_awlock.bind(*p_29_m_axi_awlock);
        p_29_m_axi_awlock->set_sv_netview_offsetfromdp(9136208);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_29_m_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_29->m_axi_awcache.bind(*p_29_m_axi_awcache);
        p_29_m_axi_awcache->set_sv_netview_offsetfromdp(9136264);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_29_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_29->m_axi_awprot.bind(*p_29_m_axi_awprot);
        p_29_m_axi_awprot->set_sv_netview_offsetfromdp(9136320);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_29_m_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_29->m_axi_awqos.bind(*p_29_m_axi_awqos);
        p_29_m_axi_awqos->set_sv_netview_offsetfromdp(9136376);
        xsim_sc_channel<0, bool > *p_29_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_29->m_axi_awvalid.bind(*p_29_m_axi_awvalid);
        p_29_m_axi_awvalid->set_sv_netview_offsetfromdp(9136432);
        xsim_sc_channel<0, bool > *p_29_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_29->m_axi_awready.bind(*p_29_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_29_m_axi_awready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_29_m_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_29->m_axi_wdata.bind(*p_29_m_axi_wdata);
        p_29_m_axi_wdata->set_sv_netview_offsetfromdp(9136544);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_29_m_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_29->m_axi_wstrb.bind(*p_29_m_axi_wstrb);
        p_29_m_axi_wstrb->set_sv_netview_offsetfromdp(9136600);
        xsim_sc_channel<0, bool > *p_29_m_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_29->m_axi_wlast.bind(*p_29_m_axi_wlast);
        p_29_m_axi_wlast->set_sv_netview_offsetfromdp(9136656);
        xsim_sc_channel<0, bool > *p_29_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_29->m_axi_wvalid.bind(*p_29_m_axi_wvalid);
        p_29_m_axi_wvalid->set_sv_netview_offsetfromdp(9136712);
        xsim_sc_channel<0, bool > *p_29_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_29->m_axi_wready.bind(*p_29_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_29_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_29_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_29->m_axi_bresp.bind(*p_29_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_29_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_29_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_29->m_axi_bvalid.bind(*p_29_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_29_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_29_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_29->m_axi_bready.bind(*p_29_m_axi_bready);
        p_29_m_axi_bready->set_sv_netview_offsetfromdp(9136936);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_29_m_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_29->m_axi_araddr.bind(*p_29_m_axi_araddr);
        p_29_m_axi_araddr->set_sv_netview_offsetfromdp(9136992);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_29_m_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_29->m_axi_arlen.bind(*p_29_m_axi_arlen);
        p_29_m_axi_arlen->set_sv_netview_offsetfromdp(9137048);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_29_m_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_29->m_axi_arsize.bind(*p_29_m_axi_arsize);
        p_29_m_axi_arsize->set_sv_netview_offsetfromdp(9137104);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_29_m_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_29->m_axi_arburst.bind(*p_29_m_axi_arburst);
        p_29_m_axi_arburst->set_sv_netview_offsetfromdp(9137160);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_29_m_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_29->m_axi_arlock.bind(*p_29_m_axi_arlock);
        p_29_m_axi_arlock->set_sv_netview_offsetfromdp(9137216);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_29_m_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_29->m_axi_arcache.bind(*p_29_m_axi_arcache);
        p_29_m_axi_arcache->set_sv_netview_offsetfromdp(9137272);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_29_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_29->m_axi_arprot.bind(*p_29_m_axi_arprot);
        p_29_m_axi_arprot->set_sv_netview_offsetfromdp(9137328);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_29_m_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_29->m_axi_arqos.bind(*p_29_m_axi_arqos);
        p_29_m_axi_arqos->set_sv_netview_offsetfromdp(9137384);
        xsim_sc_channel<0, bool > *p_29_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_29->m_axi_arvalid.bind(*p_29_m_axi_arvalid);
        p_29_m_axi_arvalid->set_sv_netview_offsetfromdp(9137440);
        xsim_sc_channel<0, bool > *p_29_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_29->m_axi_arready.bind(*p_29_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_29_m_axi_arready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_29_m_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_29->m_axi_rdata.bind(*p_29_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_29_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_29_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_29->m_axi_rresp.bind(*p_29_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_29_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_29_m_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_29->m_axi_rlast.bind(*p_29_m_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_29_m_axi_rlast);
        xsim_sc_channel<0, bool > *p_29_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_29->m_axi_rvalid.bind(*p_29_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_29_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_29_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_29->m_axi_rready.bind(*p_29_m_axi_rready);
        p_29_m_axi_rready->set_sv_netview_offsetfromdp(9137776);
        sc_inst_30 = new bd_5dca_vip_S00_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.hmss_0.inst.vip_S00");
        sc_inst_30->xsim_set_dbg_index(959);
        xsim_sc_channel<0, bool > *p_30_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_30->aclk.bind(*p_30_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_30_aclk);
        xsim_sc_channel<0, bool > *p_30_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_30->aresetn.bind(*p_30_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_30_aresetn);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_30_s_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_30->s_axi_awaddr.bind(*p_30_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_awaddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_30_s_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_30->s_axi_awlen.bind(*p_30_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_awlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_30_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_30->s_axi_awburst.bind(*p_30_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_awburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_30_s_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_30->s_axi_awlock.bind(*p_30_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_30_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_30->s_axi_awcache.bind(*p_30_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_30_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_30->s_axi_awprot.bind(*p_30_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_30_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_30->s_axi_awqos.bind(*p_30_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_awqos);
        xsim_sc_channel<0, bool > *p_30_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_30->s_axi_awvalid.bind(*p_30_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_30_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_30->s_axi_awready.bind(*p_30_s_axi_awready);
        p_30_s_axi_awready->set_sv_netview_offsetfromdp(9139056);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_30_s_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_30->s_axi_wdata.bind(*p_30_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_wdata);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_30_s_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_30->s_axi_wstrb.bind(*p_30_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_30_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_30->s_axi_wlast.bind(*p_30_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_30_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_30->s_axi_wvalid.bind(*p_30_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_30_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_30->s_axi_wready.bind(*p_30_s_axi_wready);
        p_30_s_axi_wready->set_sv_netview_offsetfromdp(9139336);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_30_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_30->s_axi_bresp.bind(*p_30_s_axi_bresp);
        p_30_s_axi_bresp->set_sv_netview_offsetfromdp(9139392);
        xsim_sc_channel<0, bool > *p_30_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_30->s_axi_bvalid.bind(*p_30_s_axi_bvalid);
        p_30_s_axi_bvalid->set_sv_netview_offsetfromdp(9139448);
        xsim_sc_channel<0, bool > *p_30_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_30->s_axi_bready.bind(*p_30_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_bready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_30_s_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_30->s_axi_araddr.bind(*p_30_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_araddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_30_s_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_30->s_axi_arlen.bind(*p_30_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_arlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_30_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_30->s_axi_arburst.bind(*p_30_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_arburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_30_s_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_30->s_axi_arlock.bind(*p_30_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_30_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_30->s_axi_arcache.bind(*p_30_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_30_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_30->s_axi_arprot.bind(*p_30_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_30_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_30->s_axi_arqos.bind(*p_30_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_arqos);
        xsim_sc_channel<0, bool > *p_30_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_30->s_axi_arvalid.bind(*p_30_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_30_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_30->s_axi_arready.bind(*p_30_s_axi_arready);
        p_30_s_axi_arready->set_sv_netview_offsetfromdp(9140008);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_30_s_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_30->s_axi_rdata.bind(*p_30_s_axi_rdata);
        p_30_s_axi_rdata->set_sv_netview_offsetfromdp(9140064);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_30_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_30->s_axi_rresp.bind(*p_30_s_axi_rresp);
        p_30_s_axi_rresp->set_sv_netview_offsetfromdp(9140120);
        xsim_sc_channel<0, bool > *p_30_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_30->s_axi_rlast.bind(*p_30_s_axi_rlast);
        p_30_s_axi_rlast->set_sv_netview_offsetfromdp(9140176);
        xsim_sc_channel<0, bool > *p_30_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_30->s_axi_rvalid.bind(*p_30_s_axi_rvalid);
        p_30_s_axi_rvalid->set_sv_netview_offsetfromdp(9140232);
        xsim_sc_channel<0, bool > *p_30_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_30->s_axi_rready.bind(*p_30_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_rready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_30_m_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_30->m_axi_awaddr.bind(*p_30_m_axi_awaddr);
        p_30_m_axi_awaddr->set_sv_netview_offsetfromdp(9140344);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_30_m_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_30->m_axi_awlen.bind(*p_30_m_axi_awlen);
        p_30_m_axi_awlen->set_sv_netview_offsetfromdp(9140400);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_30_m_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_30->m_axi_awburst.bind(*p_30_m_axi_awburst);
        p_30_m_axi_awburst->set_sv_netview_offsetfromdp(9140456);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_30_m_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_30->m_axi_awlock.bind(*p_30_m_axi_awlock);
        p_30_m_axi_awlock->set_sv_netview_offsetfromdp(9140512);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_30_m_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_30->m_axi_awcache.bind(*p_30_m_axi_awcache);
        p_30_m_axi_awcache->set_sv_netview_offsetfromdp(9140568);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_30_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_30->m_axi_awprot.bind(*p_30_m_axi_awprot);
        p_30_m_axi_awprot->set_sv_netview_offsetfromdp(9140624);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_30_m_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_30->m_axi_awqos.bind(*p_30_m_axi_awqos);
        p_30_m_axi_awqos->set_sv_netview_offsetfromdp(9140680);
        xsim_sc_channel<0, bool > *p_30_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_30->m_axi_awvalid.bind(*p_30_m_axi_awvalid);
        p_30_m_axi_awvalid->set_sv_netview_offsetfromdp(9140736);
        xsim_sc_channel<0, bool > *p_30_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_30->m_axi_awready.bind(*p_30_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_30_m_axi_awready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_30_m_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_30->m_axi_wdata.bind(*p_30_m_axi_wdata);
        p_30_m_axi_wdata->set_sv_netview_offsetfromdp(9140848);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_30_m_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_30->m_axi_wstrb.bind(*p_30_m_axi_wstrb);
        p_30_m_axi_wstrb->set_sv_netview_offsetfromdp(9140904);
        xsim_sc_channel<0, bool > *p_30_m_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_30->m_axi_wlast.bind(*p_30_m_axi_wlast);
        p_30_m_axi_wlast->set_sv_netview_offsetfromdp(9140960);
        xsim_sc_channel<0, bool > *p_30_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_30->m_axi_wvalid.bind(*p_30_m_axi_wvalid);
        p_30_m_axi_wvalid->set_sv_netview_offsetfromdp(9141016);
        xsim_sc_channel<0, bool > *p_30_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_30->m_axi_wready.bind(*p_30_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_30_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_30_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_30->m_axi_bresp.bind(*p_30_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_30_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_30_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_30->m_axi_bvalid.bind(*p_30_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_30_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_30_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_30->m_axi_bready.bind(*p_30_m_axi_bready);
        p_30_m_axi_bready->set_sv_netview_offsetfromdp(9141240);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_30_m_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_30->m_axi_araddr.bind(*p_30_m_axi_araddr);
        p_30_m_axi_araddr->set_sv_netview_offsetfromdp(9141296);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_30_m_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_30->m_axi_arlen.bind(*p_30_m_axi_arlen);
        p_30_m_axi_arlen->set_sv_netview_offsetfromdp(9141352);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_30_m_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_30->m_axi_arburst.bind(*p_30_m_axi_arburst);
        p_30_m_axi_arburst->set_sv_netview_offsetfromdp(9141408);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_30_m_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_30->m_axi_arlock.bind(*p_30_m_axi_arlock);
        p_30_m_axi_arlock->set_sv_netview_offsetfromdp(9141464);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_30_m_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_30->m_axi_arcache.bind(*p_30_m_axi_arcache);
        p_30_m_axi_arcache->set_sv_netview_offsetfromdp(9141520);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_30_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_30->m_axi_arprot.bind(*p_30_m_axi_arprot);
        p_30_m_axi_arprot->set_sv_netview_offsetfromdp(9141576);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_30_m_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_30->m_axi_arqos.bind(*p_30_m_axi_arqos);
        p_30_m_axi_arqos->set_sv_netview_offsetfromdp(9141632);
        xsim_sc_channel<0, bool > *p_30_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_30->m_axi_arvalid.bind(*p_30_m_axi_arvalid);
        p_30_m_axi_arvalid->set_sv_netview_offsetfromdp(9141688);
        xsim_sc_channel<0, bool > *p_30_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_30->m_axi_arready.bind(*p_30_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_30_m_axi_arready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_30_m_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_30->m_axi_rdata.bind(*p_30_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_30_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_30_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_30->m_axi_rresp.bind(*p_30_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_30_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_30_m_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_30->m_axi_rlast.bind(*p_30_m_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_30_m_axi_rlast);
        xsim_sc_channel<0, bool > *p_30_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_30->m_axi_rvalid.bind(*p_30_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_30_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_30_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_30->m_axi_rready.bind(*p_30_m_axi_rready);
        p_30_m_axi_rready->set_sv_netview_offsetfromdp(9142024);
        sc_inst_31 = new bd_5dca_vip_S01_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.hmss_0.inst.vip_S01");
        sc_inst_31->xsim_set_dbg_index(960);
        xsim_sc_channel<0, bool > *p_31_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_31->aclk.bind(*p_31_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_31_aclk);
        xsim_sc_channel<0, bool > *p_31_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_31->aresetn.bind(*p_31_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_31_aresetn);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_31_s_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_31->s_axi_awaddr.bind(*p_31_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_awaddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_31_s_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_31->s_axi_awlen.bind(*p_31_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_awlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_31_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_31->s_axi_awburst.bind(*p_31_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_awburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_31_s_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_31->s_axi_awlock.bind(*p_31_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_31_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_31->s_axi_awcache.bind(*p_31_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_31_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_31->s_axi_awprot.bind(*p_31_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_31_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_31->s_axi_awqos.bind(*p_31_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_awqos);
        xsim_sc_channel<0, bool > *p_31_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_31->s_axi_awvalid.bind(*p_31_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_31_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_31->s_axi_awready.bind(*p_31_s_axi_awready);
        p_31_s_axi_awready->set_sv_netview_offsetfromdp(9142688);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_31_s_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_31->s_axi_wdata.bind(*p_31_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_wdata);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_31_s_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_31->s_axi_wstrb.bind(*p_31_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_31_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_31->s_axi_wlast.bind(*p_31_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_31_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_31->s_axi_wvalid.bind(*p_31_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_31_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_31->s_axi_wready.bind(*p_31_s_axi_wready);
        p_31_s_axi_wready->set_sv_netview_offsetfromdp(9142968);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_31_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_31->s_axi_bresp.bind(*p_31_s_axi_bresp);
        p_31_s_axi_bresp->set_sv_netview_offsetfromdp(9143024);
        xsim_sc_channel<0, bool > *p_31_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_31->s_axi_bvalid.bind(*p_31_s_axi_bvalid);
        p_31_s_axi_bvalid->set_sv_netview_offsetfromdp(9143080);
        xsim_sc_channel<0, bool > *p_31_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_31->s_axi_bready.bind(*p_31_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_bready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_31_s_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_31->s_axi_araddr.bind(*p_31_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_araddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_31_s_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_31->s_axi_arlen.bind(*p_31_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_arlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_31_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_31->s_axi_arburst.bind(*p_31_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_arburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_31_s_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_31->s_axi_arlock.bind(*p_31_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_31_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_31->s_axi_arcache.bind(*p_31_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_31_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_31->s_axi_arprot.bind(*p_31_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_31_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_31->s_axi_arqos.bind(*p_31_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_arqos);
        xsim_sc_channel<0, bool > *p_31_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_31->s_axi_arvalid.bind(*p_31_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_31_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_31->s_axi_arready.bind(*p_31_s_axi_arready);
        p_31_s_axi_arready->set_sv_netview_offsetfromdp(9143640);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_31_s_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_31->s_axi_rdata.bind(*p_31_s_axi_rdata);
        p_31_s_axi_rdata->set_sv_netview_offsetfromdp(9143696);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_31_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_31->s_axi_rresp.bind(*p_31_s_axi_rresp);
        p_31_s_axi_rresp->set_sv_netview_offsetfromdp(9143752);
        xsim_sc_channel<0, bool > *p_31_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_31->s_axi_rlast.bind(*p_31_s_axi_rlast);
        p_31_s_axi_rlast->set_sv_netview_offsetfromdp(9143808);
        xsim_sc_channel<0, bool > *p_31_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_31->s_axi_rvalid.bind(*p_31_s_axi_rvalid);
        p_31_s_axi_rvalid->set_sv_netview_offsetfromdp(9143864);
        xsim_sc_channel<0, bool > *p_31_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_31->s_axi_rready.bind(*p_31_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_rready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_31_m_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_31->m_axi_awaddr.bind(*p_31_m_axi_awaddr);
        p_31_m_axi_awaddr->set_sv_netview_offsetfromdp(9143976);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_31_m_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_31->m_axi_awlen.bind(*p_31_m_axi_awlen);
        p_31_m_axi_awlen->set_sv_netview_offsetfromdp(9144032);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_31_m_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_31->m_axi_awburst.bind(*p_31_m_axi_awburst);
        p_31_m_axi_awburst->set_sv_netview_offsetfromdp(9144088);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_31_m_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_31->m_axi_awlock.bind(*p_31_m_axi_awlock);
        p_31_m_axi_awlock->set_sv_netview_offsetfromdp(9144144);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_31_m_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_31->m_axi_awcache.bind(*p_31_m_axi_awcache);
        p_31_m_axi_awcache->set_sv_netview_offsetfromdp(9144200);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_31_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_31->m_axi_awprot.bind(*p_31_m_axi_awprot);
        p_31_m_axi_awprot->set_sv_netview_offsetfromdp(9144256);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_31_m_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_31->m_axi_awqos.bind(*p_31_m_axi_awqos);
        p_31_m_axi_awqos->set_sv_netview_offsetfromdp(9144312);
        xsim_sc_channel<0, bool > *p_31_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_31->m_axi_awvalid.bind(*p_31_m_axi_awvalid);
        p_31_m_axi_awvalid->set_sv_netview_offsetfromdp(9144368);
        xsim_sc_channel<0, bool > *p_31_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_31->m_axi_awready.bind(*p_31_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_31_m_axi_awready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_31_m_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_31->m_axi_wdata.bind(*p_31_m_axi_wdata);
        p_31_m_axi_wdata->set_sv_netview_offsetfromdp(9144480);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_31_m_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_31->m_axi_wstrb.bind(*p_31_m_axi_wstrb);
        p_31_m_axi_wstrb->set_sv_netview_offsetfromdp(9144536);
        xsim_sc_channel<0, bool > *p_31_m_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_31->m_axi_wlast.bind(*p_31_m_axi_wlast);
        p_31_m_axi_wlast->set_sv_netview_offsetfromdp(9144592);
        xsim_sc_channel<0, bool > *p_31_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_31->m_axi_wvalid.bind(*p_31_m_axi_wvalid);
        p_31_m_axi_wvalid->set_sv_netview_offsetfromdp(9144648);
        xsim_sc_channel<0, bool > *p_31_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_31->m_axi_wready.bind(*p_31_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_31_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_31_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_31->m_axi_bresp.bind(*p_31_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_31_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_31_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_31->m_axi_bvalid.bind(*p_31_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_31_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_31_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_31->m_axi_bready.bind(*p_31_m_axi_bready);
        p_31_m_axi_bready->set_sv_netview_offsetfromdp(9144872);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_31_m_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_31->m_axi_araddr.bind(*p_31_m_axi_araddr);
        p_31_m_axi_araddr->set_sv_netview_offsetfromdp(9144928);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_31_m_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_31->m_axi_arlen.bind(*p_31_m_axi_arlen);
        p_31_m_axi_arlen->set_sv_netview_offsetfromdp(9144984);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_31_m_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_31->m_axi_arburst.bind(*p_31_m_axi_arburst);
        p_31_m_axi_arburst->set_sv_netview_offsetfromdp(9145040);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_31_m_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_31->m_axi_arlock.bind(*p_31_m_axi_arlock);
        p_31_m_axi_arlock->set_sv_netview_offsetfromdp(9145096);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_31_m_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_31->m_axi_arcache.bind(*p_31_m_axi_arcache);
        p_31_m_axi_arcache->set_sv_netview_offsetfromdp(9145152);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_31_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_31->m_axi_arprot.bind(*p_31_m_axi_arprot);
        p_31_m_axi_arprot->set_sv_netview_offsetfromdp(9145208);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_31_m_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_31->m_axi_arqos.bind(*p_31_m_axi_arqos);
        p_31_m_axi_arqos->set_sv_netview_offsetfromdp(9145264);
        xsim_sc_channel<0, bool > *p_31_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_31->m_axi_arvalid.bind(*p_31_m_axi_arvalid);
        p_31_m_axi_arvalid->set_sv_netview_offsetfromdp(9145320);
        xsim_sc_channel<0, bool > *p_31_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_31->m_axi_arready.bind(*p_31_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_31_m_axi_arready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_31_m_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_31->m_axi_rdata.bind(*p_31_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_31_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_31_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_31->m_axi_rresp.bind(*p_31_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_31_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_31_m_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_31->m_axi_rlast.bind(*p_31_m_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_31_m_axi_rlast);
        xsim_sc_channel<0, bool > *p_31_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_31->m_axi_rvalid.bind(*p_31_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_31_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_31_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_31->m_axi_rready.bind(*p_31_m_axi_rready);
        p_31_m_axi_rready->set_sv_netview_offsetfromdp(9145656);
        sc_inst_32 = new bd_5dca_vip_S02_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.hmss_0.inst.vip_S02");
        sc_inst_32->xsim_set_dbg_index(961);
        xsim_sc_channel<0, bool > *p_32_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_32->aclk.bind(*p_32_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_32_aclk);
        xsim_sc_channel<0, bool > *p_32_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_32->aresetn.bind(*p_32_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_32_aresetn);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_32_s_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_32->s_axi_awaddr.bind(*p_32_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_awaddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_32_s_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_32->s_axi_awlen.bind(*p_32_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_awlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_32_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_32->s_axi_awburst.bind(*p_32_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_awburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_32_s_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_32->s_axi_awlock.bind(*p_32_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_32_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_32->s_axi_awcache.bind(*p_32_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_32_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_32->s_axi_awprot.bind(*p_32_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_32_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_32->s_axi_awqos.bind(*p_32_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_awqos);
        xsim_sc_channel<0, bool > *p_32_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_32->s_axi_awvalid.bind(*p_32_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_32_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_32->s_axi_awready.bind(*p_32_s_axi_awready);
        p_32_s_axi_awready->set_sv_netview_offsetfromdp(9146320);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_32_s_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_32->s_axi_wdata.bind(*p_32_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_wdata);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_32_s_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_32->s_axi_wstrb.bind(*p_32_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_32_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_32->s_axi_wlast.bind(*p_32_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_32_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_32->s_axi_wvalid.bind(*p_32_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_32_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_32->s_axi_wready.bind(*p_32_s_axi_wready);
        p_32_s_axi_wready->set_sv_netview_offsetfromdp(9146600);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_32_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_32->s_axi_bresp.bind(*p_32_s_axi_bresp);
        p_32_s_axi_bresp->set_sv_netview_offsetfromdp(9146656);
        xsim_sc_channel<0, bool > *p_32_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_32->s_axi_bvalid.bind(*p_32_s_axi_bvalid);
        p_32_s_axi_bvalid->set_sv_netview_offsetfromdp(9146712);
        xsim_sc_channel<0, bool > *p_32_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_32->s_axi_bready.bind(*p_32_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_bready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_32_s_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_32->s_axi_araddr.bind(*p_32_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_araddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_32_s_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_32->s_axi_arlen.bind(*p_32_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_arlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_32_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_32->s_axi_arburst.bind(*p_32_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_arburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_32_s_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_32->s_axi_arlock.bind(*p_32_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_32_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_32->s_axi_arcache.bind(*p_32_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_32_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_32->s_axi_arprot.bind(*p_32_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_32_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_32->s_axi_arqos.bind(*p_32_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_arqos);
        xsim_sc_channel<0, bool > *p_32_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_32->s_axi_arvalid.bind(*p_32_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_32_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_32->s_axi_arready.bind(*p_32_s_axi_arready);
        p_32_s_axi_arready->set_sv_netview_offsetfromdp(9147272);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_32_s_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_32->s_axi_rdata.bind(*p_32_s_axi_rdata);
        p_32_s_axi_rdata->set_sv_netview_offsetfromdp(9147328);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_32_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_32->s_axi_rresp.bind(*p_32_s_axi_rresp);
        p_32_s_axi_rresp->set_sv_netview_offsetfromdp(9147384);
        xsim_sc_channel<0, bool > *p_32_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_32->s_axi_rlast.bind(*p_32_s_axi_rlast);
        p_32_s_axi_rlast->set_sv_netview_offsetfromdp(9147440);
        xsim_sc_channel<0, bool > *p_32_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_32->s_axi_rvalid.bind(*p_32_s_axi_rvalid);
        p_32_s_axi_rvalid->set_sv_netview_offsetfromdp(9147496);
        xsim_sc_channel<0, bool > *p_32_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_32->s_axi_rready.bind(*p_32_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_rready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_32_m_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_32->m_axi_awaddr.bind(*p_32_m_axi_awaddr);
        p_32_m_axi_awaddr->set_sv_netview_offsetfromdp(9147608);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_32_m_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_32->m_axi_awlen.bind(*p_32_m_axi_awlen);
        p_32_m_axi_awlen->set_sv_netview_offsetfromdp(9147664);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_32_m_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_32->m_axi_awburst.bind(*p_32_m_axi_awburst);
        p_32_m_axi_awburst->set_sv_netview_offsetfromdp(9147720);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_32_m_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_32->m_axi_awlock.bind(*p_32_m_axi_awlock);
        p_32_m_axi_awlock->set_sv_netview_offsetfromdp(9147776);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_32_m_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_32->m_axi_awcache.bind(*p_32_m_axi_awcache);
        p_32_m_axi_awcache->set_sv_netview_offsetfromdp(9147832);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_32_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_32->m_axi_awprot.bind(*p_32_m_axi_awprot);
        p_32_m_axi_awprot->set_sv_netview_offsetfromdp(9147888);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_32_m_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_32->m_axi_awqos.bind(*p_32_m_axi_awqos);
        p_32_m_axi_awqos->set_sv_netview_offsetfromdp(9147944);
        xsim_sc_channel<0, bool > *p_32_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_32->m_axi_awvalid.bind(*p_32_m_axi_awvalid);
        p_32_m_axi_awvalid->set_sv_netview_offsetfromdp(9148000);
        xsim_sc_channel<0, bool > *p_32_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_32->m_axi_awready.bind(*p_32_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_32_m_axi_awready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_32_m_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_32->m_axi_wdata.bind(*p_32_m_axi_wdata);
        p_32_m_axi_wdata->set_sv_netview_offsetfromdp(9148112);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_32_m_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_32->m_axi_wstrb.bind(*p_32_m_axi_wstrb);
        p_32_m_axi_wstrb->set_sv_netview_offsetfromdp(9148168);
        xsim_sc_channel<0, bool > *p_32_m_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_32->m_axi_wlast.bind(*p_32_m_axi_wlast);
        p_32_m_axi_wlast->set_sv_netview_offsetfromdp(9148224);
        xsim_sc_channel<0, bool > *p_32_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_32->m_axi_wvalid.bind(*p_32_m_axi_wvalid);
        p_32_m_axi_wvalid->set_sv_netview_offsetfromdp(9148280);
        xsim_sc_channel<0, bool > *p_32_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_32->m_axi_wready.bind(*p_32_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_32_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_32_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_32->m_axi_bresp.bind(*p_32_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_32_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_32_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_32->m_axi_bvalid.bind(*p_32_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_32_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_32_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_32->m_axi_bready.bind(*p_32_m_axi_bready);
        p_32_m_axi_bready->set_sv_netview_offsetfromdp(9148504);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_32_m_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_32->m_axi_araddr.bind(*p_32_m_axi_araddr);
        p_32_m_axi_araddr->set_sv_netview_offsetfromdp(9148560);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_32_m_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_32->m_axi_arlen.bind(*p_32_m_axi_arlen);
        p_32_m_axi_arlen->set_sv_netview_offsetfromdp(9148616);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_32_m_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_32->m_axi_arburst.bind(*p_32_m_axi_arburst);
        p_32_m_axi_arburst->set_sv_netview_offsetfromdp(9148672);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_32_m_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_32->m_axi_arlock.bind(*p_32_m_axi_arlock);
        p_32_m_axi_arlock->set_sv_netview_offsetfromdp(9148728);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_32_m_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_32->m_axi_arcache.bind(*p_32_m_axi_arcache);
        p_32_m_axi_arcache->set_sv_netview_offsetfromdp(9148784);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_32_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_32->m_axi_arprot.bind(*p_32_m_axi_arprot);
        p_32_m_axi_arprot->set_sv_netview_offsetfromdp(9148840);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_32_m_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_32->m_axi_arqos.bind(*p_32_m_axi_arqos);
        p_32_m_axi_arqos->set_sv_netview_offsetfromdp(9148896);
        xsim_sc_channel<0, bool > *p_32_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_32->m_axi_arvalid.bind(*p_32_m_axi_arvalid);
        p_32_m_axi_arvalid->set_sv_netview_offsetfromdp(9148952);
        xsim_sc_channel<0, bool > *p_32_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_32->m_axi_arready.bind(*p_32_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_32_m_axi_arready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_32_m_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_32->m_axi_rdata.bind(*p_32_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_32_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_32_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_32->m_axi_rresp.bind(*p_32_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_32_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_32_m_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_32->m_axi_rlast.bind(*p_32_m_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_32_m_axi_rlast);
        xsim_sc_channel<0, bool > *p_32_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_32->m_axi_rvalid.bind(*p_32_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_32_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_32_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_32->m_axi_rready.bind(*p_32_m_axi_rready);
        p_32_m_axi_rready->set_sv_netview_offsetfromdp(9149288);
        sc_inst_33 = new bd_5dca_vip_S03_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.hmss_0.inst.vip_S03");
        sc_inst_33->xsim_set_dbg_index(962);
        xsim_sc_channel<0, bool > *p_33_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_33->aclk.bind(*p_33_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_33_aclk);
        xsim_sc_channel<0, bool > *p_33_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_33->aresetn.bind(*p_33_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_33_aresetn);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_33_s_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_33->s_axi_awaddr.bind(*p_33_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_33_s_axi_awaddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_33_s_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_33->s_axi_awlen.bind(*p_33_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_33_s_axi_awlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_33_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_33->s_axi_awburst.bind(*p_33_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_33_s_axi_awburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_33_s_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_33->s_axi_awlock.bind(*p_33_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_33_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_33_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_33->s_axi_awcache.bind(*p_33_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_33_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_33_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_33->s_axi_awprot.bind(*p_33_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_33_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_33_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_33->s_axi_awqos.bind(*p_33_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_33_s_axi_awqos);
        xsim_sc_channel<0, bool > *p_33_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_33->s_axi_awvalid.bind(*p_33_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_33_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_33_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_33->s_axi_awready.bind(*p_33_s_axi_awready);
        p_33_s_axi_awready->set_sv_netview_offsetfromdp(9149952);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_33_s_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_33->s_axi_wdata.bind(*p_33_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_33_s_axi_wdata);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_33_s_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_33->s_axi_wstrb.bind(*p_33_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_33_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_33_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_33->s_axi_wlast.bind(*p_33_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_33_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_33_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_33->s_axi_wvalid.bind(*p_33_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_33_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_33_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_33->s_axi_wready.bind(*p_33_s_axi_wready);
        p_33_s_axi_wready->set_sv_netview_offsetfromdp(9150232);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_33_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_33->s_axi_bresp.bind(*p_33_s_axi_bresp);
        p_33_s_axi_bresp->set_sv_netview_offsetfromdp(9150288);
        xsim_sc_channel<0, bool > *p_33_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_33->s_axi_bvalid.bind(*p_33_s_axi_bvalid);
        p_33_s_axi_bvalid->set_sv_netview_offsetfromdp(9150344);
        xsim_sc_channel<0, bool > *p_33_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_33->s_axi_bready.bind(*p_33_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_33_s_axi_bready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_33_s_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_33->s_axi_araddr.bind(*p_33_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_33_s_axi_araddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_33_s_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_33->s_axi_arlen.bind(*p_33_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_33_s_axi_arlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_33_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_33->s_axi_arburst.bind(*p_33_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_33_s_axi_arburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_33_s_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_33->s_axi_arlock.bind(*p_33_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_33_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_33_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_33->s_axi_arcache.bind(*p_33_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_33_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_33_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_33->s_axi_arprot.bind(*p_33_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_33_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_33_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_33->s_axi_arqos.bind(*p_33_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_33_s_axi_arqos);
        xsim_sc_channel<0, bool > *p_33_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_33->s_axi_arvalid.bind(*p_33_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_33_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_33_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_33->s_axi_arready.bind(*p_33_s_axi_arready);
        p_33_s_axi_arready->set_sv_netview_offsetfromdp(9150904);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_33_s_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_33->s_axi_rdata.bind(*p_33_s_axi_rdata);
        p_33_s_axi_rdata->set_sv_netview_offsetfromdp(9150960);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_33_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_33->s_axi_rresp.bind(*p_33_s_axi_rresp);
        p_33_s_axi_rresp->set_sv_netview_offsetfromdp(9151016);
        xsim_sc_channel<0, bool > *p_33_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_33->s_axi_rlast.bind(*p_33_s_axi_rlast);
        p_33_s_axi_rlast->set_sv_netview_offsetfromdp(9151072);
        xsim_sc_channel<0, bool > *p_33_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_33->s_axi_rvalid.bind(*p_33_s_axi_rvalid);
        p_33_s_axi_rvalid->set_sv_netview_offsetfromdp(9151128);
        xsim_sc_channel<0, bool > *p_33_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_33->s_axi_rready.bind(*p_33_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_33_s_axi_rready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_33_m_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_33->m_axi_awaddr.bind(*p_33_m_axi_awaddr);
        p_33_m_axi_awaddr->set_sv_netview_offsetfromdp(9151240);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_33_m_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_33->m_axi_awlen.bind(*p_33_m_axi_awlen);
        p_33_m_axi_awlen->set_sv_netview_offsetfromdp(9151296);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_33_m_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_33->m_axi_awburst.bind(*p_33_m_axi_awburst);
        p_33_m_axi_awburst->set_sv_netview_offsetfromdp(9151352);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_33_m_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_33->m_axi_awlock.bind(*p_33_m_axi_awlock);
        p_33_m_axi_awlock->set_sv_netview_offsetfromdp(9151408);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_33_m_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_33->m_axi_awcache.bind(*p_33_m_axi_awcache);
        p_33_m_axi_awcache->set_sv_netview_offsetfromdp(9151464);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_33_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_33->m_axi_awprot.bind(*p_33_m_axi_awprot);
        p_33_m_axi_awprot->set_sv_netview_offsetfromdp(9151520);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_33_m_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_33->m_axi_awqos.bind(*p_33_m_axi_awqos);
        p_33_m_axi_awqos->set_sv_netview_offsetfromdp(9151576);
        xsim_sc_channel<0, bool > *p_33_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_33->m_axi_awvalid.bind(*p_33_m_axi_awvalid);
        p_33_m_axi_awvalid->set_sv_netview_offsetfromdp(9151632);
        xsim_sc_channel<0, bool > *p_33_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_33->m_axi_awready.bind(*p_33_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_33_m_axi_awready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_33_m_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_33->m_axi_wdata.bind(*p_33_m_axi_wdata);
        p_33_m_axi_wdata->set_sv_netview_offsetfromdp(9151744);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_33_m_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_33->m_axi_wstrb.bind(*p_33_m_axi_wstrb);
        p_33_m_axi_wstrb->set_sv_netview_offsetfromdp(9151800);
        xsim_sc_channel<0, bool > *p_33_m_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_33->m_axi_wlast.bind(*p_33_m_axi_wlast);
        p_33_m_axi_wlast->set_sv_netview_offsetfromdp(9151856);
        xsim_sc_channel<0, bool > *p_33_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_33->m_axi_wvalid.bind(*p_33_m_axi_wvalid);
        p_33_m_axi_wvalid->set_sv_netview_offsetfromdp(9151912);
        xsim_sc_channel<0, bool > *p_33_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_33->m_axi_wready.bind(*p_33_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_33_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_33_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_33->m_axi_bresp.bind(*p_33_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_33_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_33_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_33->m_axi_bvalid.bind(*p_33_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_33_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_33_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_33->m_axi_bready.bind(*p_33_m_axi_bready);
        p_33_m_axi_bready->set_sv_netview_offsetfromdp(9152136);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_33_m_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_33->m_axi_araddr.bind(*p_33_m_axi_araddr);
        p_33_m_axi_araddr->set_sv_netview_offsetfromdp(9152192);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_33_m_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_33->m_axi_arlen.bind(*p_33_m_axi_arlen);
        p_33_m_axi_arlen->set_sv_netview_offsetfromdp(9152248);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_33_m_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_33->m_axi_arburst.bind(*p_33_m_axi_arburst);
        p_33_m_axi_arburst->set_sv_netview_offsetfromdp(9152304);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_33_m_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_33->m_axi_arlock.bind(*p_33_m_axi_arlock);
        p_33_m_axi_arlock->set_sv_netview_offsetfromdp(9152360);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_33_m_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_33->m_axi_arcache.bind(*p_33_m_axi_arcache);
        p_33_m_axi_arcache->set_sv_netview_offsetfromdp(9152416);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_33_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_33->m_axi_arprot.bind(*p_33_m_axi_arprot);
        p_33_m_axi_arprot->set_sv_netview_offsetfromdp(9152472);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_33_m_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_33->m_axi_arqos.bind(*p_33_m_axi_arqos);
        p_33_m_axi_arqos->set_sv_netview_offsetfromdp(9152528);
        xsim_sc_channel<0, bool > *p_33_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_33->m_axi_arvalid.bind(*p_33_m_axi_arvalid);
        p_33_m_axi_arvalid->set_sv_netview_offsetfromdp(9152584);
        xsim_sc_channel<0, bool > *p_33_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_33->m_axi_arready.bind(*p_33_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_33_m_axi_arready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_33_m_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_33->m_axi_rdata.bind(*p_33_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_33_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_33_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_33->m_axi_rresp.bind(*p_33_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_33_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_33_m_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_33->m_axi_rlast.bind(*p_33_m_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_33_m_axi_rlast);
        xsim_sc_channel<0, bool > *p_33_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_33->m_axi_rvalid.bind(*p_33_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_33_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_33_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_33->m_axi_rready.bind(*p_33_m_axi_rready);
        p_33_m_axi_rready->set_sv_netview_offsetfromdp(9152920);
        sc_inst_34 = new pfm_dynamic_irq_const_tieoff_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.irq_const_tieoff");
        sc_inst_34->xsim_set_dbg_index(56);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_34_dout = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_34->dout.bind(*p_34_dout);
        p_34_dout->set_sv_netview_offsetfromdp(9322072);
        sc_inst_35 = new bd_d216_sci(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.bd_d216_sci_inst");
        sc_inst_35->xsim_set_dbg_index(1314);
        sc_inst_36 = new bd_d216_interconnect_DDR4_MEM00_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.interconnect.interconnect_ddr4_mem00");
        sc_inst_36->xsim_set_dbg_index(2688);
        xsim_sc_channel<0, bool > *p_36_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_36->aclk.bind(*p_36_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_36_aclk);
        xsim_sc_channel<0, bool > *p_36_aclk1 = new xsim_sc_channel<0, bool >();
        sc_inst_36->aclk1.bind(*p_36_aclk1);
        (*_glb_hdl_sc_channel_map).push_back(p_36_aclk1);
        xsim_sc_channel<0, bool > *p_36_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_36->aresetn.bind(*p_36_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_36_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_36_S00_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_36->S00_AXI_awid.bind(*p_36_S00_AXI_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_awid);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_36_S00_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_36->S00_AXI_awaddr.bind(*p_36_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_36_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_36->S00_AXI_awlen.bind(*p_36_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_36_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_36->S00_AXI_awsize.bind(*p_36_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_36_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_36->S00_AXI_awburst.bind(*p_36_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_36_S00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_36->S00_AXI_awlock.bind(*p_36_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_36_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_36->S00_AXI_awcache.bind(*p_36_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_36_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_36->S00_AXI_awprot.bind(*p_36_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_36_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_36->S00_AXI_awqos.bind(*p_36_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_awqos);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_36_S00_AXI_awuser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_36->S00_AXI_awuser.bind(*p_36_S00_AXI_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_awuser);
        xsim_sc_channel<0, bool > *p_36_S00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_36->S00_AXI_awvalid.bind(*p_36_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_36_S00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_36->S00_AXI_awready.bind(*p_36_S00_AXI_awready);
        p_36_S00_AXI_awready->set_sv_netview_offsetfromdp(10353928);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_36_S00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_36->S00_AXI_wdata.bind(*p_36_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_36_S00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_36->S00_AXI_wstrb.bind(*p_36_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_36_S00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_36->S00_AXI_wlast.bind(*p_36_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_wlast);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_36_S00_AXI_wuser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_36->S00_AXI_wuser.bind(*p_36_S00_AXI_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_wuser);
        xsim_sc_channel<0, bool > *p_36_S00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_36->S00_AXI_wvalid.bind(*p_36_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_36_S00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_36->S00_AXI_wready.bind(*p_36_S00_AXI_wready);
        p_36_S00_AXI_wready->set_sv_netview_offsetfromdp(10354264);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_36_S00_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_36->S00_AXI_bid.bind(*p_36_S00_AXI_bid);
        p_36_S00_AXI_bid->set_sv_netview_offsetfromdp(10354320);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_36_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_36->S00_AXI_bresp.bind(*p_36_S00_AXI_bresp);
        p_36_S00_AXI_bresp->set_sv_netview_offsetfromdp(10354376);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_36_S00_AXI_buser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_36->S00_AXI_buser.bind(*p_36_S00_AXI_buser);
        p_36_S00_AXI_buser->set_sv_netview_offsetfromdp(10354432);
        xsim_sc_channel<0, bool > *p_36_S00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_36->S00_AXI_bvalid.bind(*p_36_S00_AXI_bvalid);
        p_36_S00_AXI_bvalid->set_sv_netview_offsetfromdp(10354488);
        xsim_sc_channel<0, bool > *p_36_S00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_36->S00_AXI_bready.bind(*p_36_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_36_S00_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_36->S00_AXI_arid.bind(*p_36_S00_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_arid);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_36_S00_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_36->S00_AXI_araddr.bind(*p_36_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_36_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_36->S00_AXI_arlen.bind(*p_36_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_36_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_36->S00_AXI_arsize.bind(*p_36_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_36_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_36->S00_AXI_arburst.bind(*p_36_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_36_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_36->S00_AXI_arlock.bind(*p_36_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_36_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_36->S00_AXI_arcache.bind(*p_36_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_36_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_36->S00_AXI_arprot.bind(*p_36_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_36_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_36->S00_AXI_arqos.bind(*p_36_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_arqos);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_36_S00_AXI_aruser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_36->S00_AXI_aruser.bind(*p_36_S00_AXI_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_aruser);
        xsim_sc_channel<0, bool > *p_36_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_36->S00_AXI_arvalid.bind(*p_36_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_36_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_36->S00_AXI_arready.bind(*p_36_S00_AXI_arready);
        p_36_S00_AXI_arready->set_sv_netview_offsetfromdp(10355216);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_36_S00_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_36->S00_AXI_rid.bind(*p_36_S00_AXI_rid);
        p_36_S00_AXI_rid->set_sv_netview_offsetfromdp(10355272);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_36_S00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_36->S00_AXI_rdata.bind(*p_36_S00_AXI_rdata);
        p_36_S00_AXI_rdata->set_sv_netview_offsetfromdp(10355328);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_36_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_36->S00_AXI_rresp.bind(*p_36_S00_AXI_rresp);
        p_36_S00_AXI_rresp->set_sv_netview_offsetfromdp(10355384);
        xsim_sc_channel<0, bool > *p_36_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_36->S00_AXI_rlast.bind(*p_36_S00_AXI_rlast);
        p_36_S00_AXI_rlast->set_sv_netview_offsetfromdp(10355440);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_36_S00_AXI_ruser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_36->S00_AXI_ruser.bind(*p_36_S00_AXI_ruser);
        p_36_S00_AXI_ruser->set_sv_netview_offsetfromdp(10355496);
        xsim_sc_channel<0, bool > *p_36_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_36->S00_AXI_rvalid.bind(*p_36_S00_AXI_rvalid);
        p_36_S00_AXI_rvalid->set_sv_netview_offsetfromdp(10355552);
        xsim_sc_channel<0, bool > *p_36_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_36->S00_AXI_rready.bind(*p_36_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_rready);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_36_M00_AXI_awaddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_36->M00_AXI_awaddr.bind(*p_36_M00_AXI_awaddr);
        p_36_M00_AXI_awaddr->set_sv_netview_offsetfromdp(10355664);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_36_M00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_36->M00_AXI_awlen.bind(*p_36_M00_AXI_awlen);
        p_36_M00_AXI_awlen->set_sv_netview_offsetfromdp(10355720);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_36_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_36->M00_AXI_awsize.bind(*p_36_M00_AXI_awsize);
        p_36_M00_AXI_awsize->set_sv_netview_offsetfromdp(10355776);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_36_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_36->M00_AXI_awburst.bind(*p_36_M00_AXI_awburst);
        p_36_M00_AXI_awburst->set_sv_netview_offsetfromdp(10355832);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_36_M00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_36->M00_AXI_awlock.bind(*p_36_M00_AXI_awlock);
        p_36_M00_AXI_awlock->set_sv_netview_offsetfromdp(10355888);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_36_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_36->M00_AXI_awcache.bind(*p_36_M00_AXI_awcache);
        p_36_M00_AXI_awcache->set_sv_netview_offsetfromdp(10355944);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_36_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_36->M00_AXI_awprot.bind(*p_36_M00_AXI_awprot);
        p_36_M00_AXI_awprot->set_sv_netview_offsetfromdp(10356000);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_36_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_36->M00_AXI_awqos.bind(*p_36_M00_AXI_awqos);
        p_36_M00_AXI_awqos->set_sv_netview_offsetfromdp(10356056);
        xsim_sc_channel<0, bool > *p_36_M00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_36->M00_AXI_awvalid.bind(*p_36_M00_AXI_awvalid);
        p_36_M00_AXI_awvalid->set_sv_netview_offsetfromdp(10356112);
        xsim_sc_channel<0, bool > *p_36_M00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_36->M00_AXI_awready.bind(*p_36_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M00_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_36_M00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_36->M00_AXI_wdata.bind(*p_36_M00_AXI_wdata);
        p_36_M00_AXI_wdata->set_sv_netview_offsetfromdp(10356224);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_36_M00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_36->M00_AXI_wstrb.bind(*p_36_M00_AXI_wstrb);
        p_36_M00_AXI_wstrb->set_sv_netview_offsetfromdp(10356280);
        xsim_sc_channel<0, bool > *p_36_M00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_36->M00_AXI_wlast.bind(*p_36_M00_AXI_wlast);
        p_36_M00_AXI_wlast->set_sv_netview_offsetfromdp(10356336);
        xsim_sc_channel<0, bool > *p_36_M00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_36->M00_AXI_wvalid.bind(*p_36_M00_AXI_wvalid);
        p_36_M00_AXI_wvalid->set_sv_netview_offsetfromdp(10356392);
        xsim_sc_channel<0, bool > *p_36_M00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_36->M00_AXI_wready.bind(*p_36_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M00_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_36_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_36->M00_AXI_bresp.bind(*p_36_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M00_AXI_bresp);
        xsim_sc_channel<0, bool > *p_36_M00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_36->M00_AXI_bvalid.bind(*p_36_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M00_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_36_M00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_36->M00_AXI_bready.bind(*p_36_M00_AXI_bready);
        p_36_M00_AXI_bready->set_sv_netview_offsetfromdp(10356616);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_36_M00_AXI_araddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_36->M00_AXI_araddr.bind(*p_36_M00_AXI_araddr);
        p_36_M00_AXI_araddr->set_sv_netview_offsetfromdp(10356672);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_36_M00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_36->M00_AXI_arlen.bind(*p_36_M00_AXI_arlen);
        p_36_M00_AXI_arlen->set_sv_netview_offsetfromdp(10356728);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_36_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_36->M00_AXI_arsize.bind(*p_36_M00_AXI_arsize);
        p_36_M00_AXI_arsize->set_sv_netview_offsetfromdp(10356784);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_36_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_36->M00_AXI_arburst.bind(*p_36_M00_AXI_arburst);
        p_36_M00_AXI_arburst->set_sv_netview_offsetfromdp(10356840);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_36_M00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_36->M00_AXI_arlock.bind(*p_36_M00_AXI_arlock);
        p_36_M00_AXI_arlock->set_sv_netview_offsetfromdp(10356896);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_36_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_36->M00_AXI_arcache.bind(*p_36_M00_AXI_arcache);
        p_36_M00_AXI_arcache->set_sv_netview_offsetfromdp(10356952);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_36_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_36->M00_AXI_arprot.bind(*p_36_M00_AXI_arprot);
        p_36_M00_AXI_arprot->set_sv_netview_offsetfromdp(10357008);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_36_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_36->M00_AXI_arqos.bind(*p_36_M00_AXI_arqos);
        p_36_M00_AXI_arqos->set_sv_netview_offsetfromdp(10357064);
        xsim_sc_channel<0, bool > *p_36_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_36->M00_AXI_arvalid.bind(*p_36_M00_AXI_arvalid);
        p_36_M00_AXI_arvalid->set_sv_netview_offsetfromdp(10357120);
        xsim_sc_channel<0, bool > *p_36_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_36->M00_AXI_arready.bind(*p_36_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M00_AXI_arready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_36_M00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_36->M00_AXI_rdata.bind(*p_36_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_36_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_36->M00_AXI_rresp.bind(*p_36_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_36_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_36->M00_AXI_rlast.bind(*p_36_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M00_AXI_rlast);
        xsim_sc_channel<0, bool > *p_36_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_36->M00_AXI_rvalid.bind(*p_36_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_36_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_36->M00_AXI_rready.bind(*p_36_M00_AXI_rready);
        p_36_M00_AXI_rready->set_sv_netview_offsetfromdp(10357456);
        sc_inst_37 = new bd_d216_interconnect_DDR4_MEM01_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.interconnect.interconnect_ddr4_mem01");
        sc_inst_37->xsim_set_dbg_index(2689);
        xsim_sc_channel<0, bool > *p_37_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_37->aclk.bind(*p_37_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_37_aclk);
        xsim_sc_channel<0, bool > *p_37_aclk1 = new xsim_sc_channel<0, bool >();
        sc_inst_37->aclk1.bind(*p_37_aclk1);
        (*_glb_hdl_sc_channel_map).push_back(p_37_aclk1);
        xsim_sc_channel<0, bool > *p_37_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_37->aresetn.bind(*p_37_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_37_aresetn);
        xsim_sc_channel<37, sc_dt::sc_bv<37> > *p_37_S00_AXI_awaddr = new xsim_sc_channel<37, sc_dt::sc_bv<37> >();
        sc_inst_37->S00_AXI_awaddr.bind(*p_37_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_37_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_37->S00_AXI_awlen.bind(*p_37_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_37_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_37->S00_AXI_awsize.bind(*p_37_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_37_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_37->S00_AXI_awburst.bind(*p_37_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_37_S00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_37->S00_AXI_awlock.bind(*p_37_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_37_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_37->S00_AXI_awcache.bind(*p_37_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_37_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_37->S00_AXI_awprot.bind(*p_37_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_37_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_37->S00_AXI_awqos.bind(*p_37_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_awqos);
        xsim_sc_channel<0, bool > *p_37_S00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_37->S00_AXI_awvalid.bind(*p_37_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_37_S00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_37->S00_AXI_awready.bind(*p_37_S00_AXI_awready);
        p_37_S00_AXI_awready->set_sv_netview_offsetfromdp(10358232);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_37_S00_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_37->S00_AXI_wdata.bind(*p_37_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_37_S00_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_37->S00_AXI_wstrb.bind(*p_37_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_37_S00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_37->S00_AXI_wlast.bind(*p_37_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_wlast);
        xsim_sc_channel<0, bool > *p_37_S00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_37->S00_AXI_wvalid.bind(*p_37_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_37_S00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_37->S00_AXI_wready.bind(*p_37_S00_AXI_wready);
        p_37_S00_AXI_wready->set_sv_netview_offsetfromdp(10358512);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_37_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_37->S00_AXI_bresp.bind(*p_37_S00_AXI_bresp);
        p_37_S00_AXI_bresp->set_sv_netview_offsetfromdp(10358568);
        xsim_sc_channel<0, bool > *p_37_S00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_37->S00_AXI_bvalid.bind(*p_37_S00_AXI_bvalid);
        p_37_S00_AXI_bvalid->set_sv_netview_offsetfromdp(10358624);
        xsim_sc_channel<0, bool > *p_37_S00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_37->S00_AXI_bready.bind(*p_37_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_bready);
        xsim_sc_channel<37, sc_dt::sc_bv<37> > *p_37_S00_AXI_araddr = new xsim_sc_channel<37, sc_dt::sc_bv<37> >();
        sc_inst_37->S00_AXI_araddr.bind(*p_37_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_37_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_37->S00_AXI_arlen.bind(*p_37_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_37_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_37->S00_AXI_arsize.bind(*p_37_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_37_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_37->S00_AXI_arburst.bind(*p_37_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_37_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_37->S00_AXI_arlock.bind(*p_37_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_37_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_37->S00_AXI_arcache.bind(*p_37_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_37_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_37->S00_AXI_arprot.bind(*p_37_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_37_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_37->S00_AXI_arqos.bind(*p_37_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_arqos);
        xsim_sc_channel<0, bool > *p_37_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_37->S00_AXI_arvalid.bind(*p_37_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_37_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_37->S00_AXI_arready.bind(*p_37_S00_AXI_arready);
        p_37_S00_AXI_arready->set_sv_netview_offsetfromdp(10359240);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_37_S00_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_37->S00_AXI_rdata.bind(*p_37_S00_AXI_rdata);
        p_37_S00_AXI_rdata->set_sv_netview_offsetfromdp(10359296);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_37_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_37->S00_AXI_rresp.bind(*p_37_S00_AXI_rresp);
        p_37_S00_AXI_rresp->set_sv_netview_offsetfromdp(10359352);
        xsim_sc_channel<0, bool > *p_37_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_37->S00_AXI_rlast.bind(*p_37_S00_AXI_rlast);
        p_37_S00_AXI_rlast->set_sv_netview_offsetfromdp(10359408);
        xsim_sc_channel<0, bool > *p_37_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_37->S00_AXI_rvalid.bind(*p_37_S00_AXI_rvalid);
        p_37_S00_AXI_rvalid->set_sv_netview_offsetfromdp(10359464);
        xsim_sc_channel<0, bool > *p_37_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_37->S00_AXI_rready.bind(*p_37_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_rready);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_37_M00_AXI_awaddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_37->M00_AXI_awaddr.bind(*p_37_M00_AXI_awaddr);
        p_37_M00_AXI_awaddr->set_sv_netview_offsetfromdp(10359576);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_37_M00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_37->M00_AXI_awlen.bind(*p_37_M00_AXI_awlen);
        p_37_M00_AXI_awlen->set_sv_netview_offsetfromdp(10359632);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_37_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_37->M00_AXI_awsize.bind(*p_37_M00_AXI_awsize);
        p_37_M00_AXI_awsize->set_sv_netview_offsetfromdp(10359688);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_37_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_37->M00_AXI_awburst.bind(*p_37_M00_AXI_awburst);
        p_37_M00_AXI_awburst->set_sv_netview_offsetfromdp(10359744);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_37_M00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_37->M00_AXI_awlock.bind(*p_37_M00_AXI_awlock);
        p_37_M00_AXI_awlock->set_sv_netview_offsetfromdp(10359800);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_37_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_37->M00_AXI_awcache.bind(*p_37_M00_AXI_awcache);
        p_37_M00_AXI_awcache->set_sv_netview_offsetfromdp(10359856);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_37_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_37->M00_AXI_awprot.bind(*p_37_M00_AXI_awprot);
        p_37_M00_AXI_awprot->set_sv_netview_offsetfromdp(10359912);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_37_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_37->M00_AXI_awqos.bind(*p_37_M00_AXI_awqos);
        p_37_M00_AXI_awqos->set_sv_netview_offsetfromdp(10359968);
        xsim_sc_channel<0, bool > *p_37_M00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_37->M00_AXI_awvalid.bind(*p_37_M00_AXI_awvalid);
        p_37_M00_AXI_awvalid->set_sv_netview_offsetfromdp(10360024);
        xsim_sc_channel<0, bool > *p_37_M00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_37->M00_AXI_awready.bind(*p_37_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_37_M00_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_37_M00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_37->M00_AXI_wdata.bind(*p_37_M00_AXI_wdata);
        p_37_M00_AXI_wdata->set_sv_netview_offsetfromdp(10360136);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_37_M00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_37->M00_AXI_wstrb.bind(*p_37_M00_AXI_wstrb);
        p_37_M00_AXI_wstrb->set_sv_netview_offsetfromdp(10360192);
        xsim_sc_channel<0, bool > *p_37_M00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_37->M00_AXI_wlast.bind(*p_37_M00_AXI_wlast);
        p_37_M00_AXI_wlast->set_sv_netview_offsetfromdp(10360248);
        xsim_sc_channel<0, bool > *p_37_M00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_37->M00_AXI_wvalid.bind(*p_37_M00_AXI_wvalid);
        p_37_M00_AXI_wvalid->set_sv_netview_offsetfromdp(10360304);
        xsim_sc_channel<0, bool > *p_37_M00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_37->M00_AXI_wready.bind(*p_37_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_37_M00_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_37_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_37->M00_AXI_bresp.bind(*p_37_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_37_M00_AXI_bresp);
        xsim_sc_channel<0, bool > *p_37_M00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_37->M00_AXI_bvalid.bind(*p_37_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_37_M00_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_37_M00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_37->M00_AXI_bready.bind(*p_37_M00_AXI_bready);
        p_37_M00_AXI_bready->set_sv_netview_offsetfromdp(10360528);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_37_M00_AXI_araddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_37->M00_AXI_araddr.bind(*p_37_M00_AXI_araddr);
        p_37_M00_AXI_araddr->set_sv_netview_offsetfromdp(10360584);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_37_M00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_37->M00_AXI_arlen.bind(*p_37_M00_AXI_arlen);
        p_37_M00_AXI_arlen->set_sv_netview_offsetfromdp(10360640);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_37_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_37->M00_AXI_arsize.bind(*p_37_M00_AXI_arsize);
        p_37_M00_AXI_arsize->set_sv_netview_offsetfromdp(10360696);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_37_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_37->M00_AXI_arburst.bind(*p_37_M00_AXI_arburst);
        p_37_M00_AXI_arburst->set_sv_netview_offsetfromdp(10360752);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_37_M00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_37->M00_AXI_arlock.bind(*p_37_M00_AXI_arlock);
        p_37_M00_AXI_arlock->set_sv_netview_offsetfromdp(10360808);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_37_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_37->M00_AXI_arcache.bind(*p_37_M00_AXI_arcache);
        p_37_M00_AXI_arcache->set_sv_netview_offsetfromdp(10360864);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_37_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_37->M00_AXI_arprot.bind(*p_37_M00_AXI_arprot);
        p_37_M00_AXI_arprot->set_sv_netview_offsetfromdp(10360920);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_37_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_37->M00_AXI_arqos.bind(*p_37_M00_AXI_arqos);
        p_37_M00_AXI_arqos->set_sv_netview_offsetfromdp(10360976);
        xsim_sc_channel<0, bool > *p_37_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_37->M00_AXI_arvalid.bind(*p_37_M00_AXI_arvalid);
        p_37_M00_AXI_arvalid->set_sv_netview_offsetfromdp(10361032);
        xsim_sc_channel<0, bool > *p_37_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_37->M00_AXI_arready.bind(*p_37_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_37_M00_AXI_arready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_37_M00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_37->M00_AXI_rdata.bind(*p_37_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_37_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_37_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_37->M00_AXI_rresp.bind(*p_37_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_37_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_37_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_37->M00_AXI_rlast.bind(*p_37_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_37_M00_AXI_rlast);
        xsim_sc_channel<0, bool > *p_37_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_37->M00_AXI_rvalid.bind(*p_37_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_37_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_37_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_37->M00_AXI_rready.bind(*p_37_M00_AXI_rready);
        p_37_M00_AXI_rready->set_sv_netview_offsetfromdp(10361368);
        sc_inst_38 = new bd_d216_interconnect_M00_AXI_MEM00_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.interconnect.interconnect_m00_axi_mem00");
        sc_inst_38->xsim_set_dbg_index(2690);
        xsim_sc_channel<0, bool > *p_38_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_38->aclk.bind(*p_38_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_38_aclk);
        xsim_sc_channel<0, bool > *p_38_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_38->aresetn.bind(*p_38_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_38_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_38_S00_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_38->S00_AXI_awid.bind(*p_38_S00_AXI_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_awid);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_38_S00_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_38->S00_AXI_awaddr.bind(*p_38_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_38_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_38->S00_AXI_awlen.bind(*p_38_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_38_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_38->S00_AXI_awsize.bind(*p_38_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_38_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_38->S00_AXI_awburst.bind(*p_38_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_38_S00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_38->S00_AXI_awlock.bind(*p_38_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_38_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_38->S00_AXI_awcache.bind(*p_38_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_38_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_38->S00_AXI_awprot.bind(*p_38_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_38_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_38->S00_AXI_awqos.bind(*p_38_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_awqos);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_38_S00_AXI_awuser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_38->S00_AXI_awuser.bind(*p_38_S00_AXI_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_awuser);
        xsim_sc_channel<0, bool > *p_38_S00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_38->S00_AXI_awvalid.bind(*p_38_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_38_S00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_38->S00_AXI_awready.bind(*p_38_S00_AXI_awready);
        p_38_S00_AXI_awready->set_sv_netview_offsetfromdp(10362200);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_38_S00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_38->S00_AXI_wdata.bind(*p_38_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_38_S00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_38->S00_AXI_wstrb.bind(*p_38_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_38_S00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_38->S00_AXI_wlast.bind(*p_38_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_wlast);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_38_S00_AXI_wuser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_38->S00_AXI_wuser.bind(*p_38_S00_AXI_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_wuser);
        xsim_sc_channel<0, bool > *p_38_S00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_38->S00_AXI_wvalid.bind(*p_38_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_38_S00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_38->S00_AXI_wready.bind(*p_38_S00_AXI_wready);
        p_38_S00_AXI_wready->set_sv_netview_offsetfromdp(10362536);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_38_S00_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_38->S00_AXI_bid.bind(*p_38_S00_AXI_bid);
        p_38_S00_AXI_bid->set_sv_netview_offsetfromdp(10362592);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_38_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_38->S00_AXI_bresp.bind(*p_38_S00_AXI_bresp);
        p_38_S00_AXI_bresp->set_sv_netview_offsetfromdp(10362648);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_38_S00_AXI_buser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_38->S00_AXI_buser.bind(*p_38_S00_AXI_buser);
        p_38_S00_AXI_buser->set_sv_netview_offsetfromdp(10362704);
        xsim_sc_channel<0, bool > *p_38_S00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_38->S00_AXI_bvalid.bind(*p_38_S00_AXI_bvalid);
        p_38_S00_AXI_bvalid->set_sv_netview_offsetfromdp(10362760);
        xsim_sc_channel<0, bool > *p_38_S00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_38->S00_AXI_bready.bind(*p_38_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_38_S00_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_38->S00_AXI_arid.bind(*p_38_S00_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_arid);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_38_S00_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_38->S00_AXI_araddr.bind(*p_38_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_38_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_38->S00_AXI_arlen.bind(*p_38_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_38_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_38->S00_AXI_arsize.bind(*p_38_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_38_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_38->S00_AXI_arburst.bind(*p_38_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_38_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_38->S00_AXI_arlock.bind(*p_38_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_38_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_38->S00_AXI_arcache.bind(*p_38_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_38_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_38->S00_AXI_arprot.bind(*p_38_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_38_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_38->S00_AXI_arqos.bind(*p_38_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_arqos);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_38_S00_AXI_aruser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_38->S00_AXI_aruser.bind(*p_38_S00_AXI_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_aruser);
        xsim_sc_channel<0, bool > *p_38_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_38->S00_AXI_arvalid.bind(*p_38_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_38_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_38->S00_AXI_arready.bind(*p_38_S00_AXI_arready);
        p_38_S00_AXI_arready->set_sv_netview_offsetfromdp(10363488);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_38_S00_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_38->S00_AXI_rid.bind(*p_38_S00_AXI_rid);
        p_38_S00_AXI_rid->set_sv_netview_offsetfromdp(10363544);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_38_S00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_38->S00_AXI_rdata.bind(*p_38_S00_AXI_rdata);
        p_38_S00_AXI_rdata->set_sv_netview_offsetfromdp(10363600);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_38_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_38->S00_AXI_rresp.bind(*p_38_S00_AXI_rresp);
        p_38_S00_AXI_rresp->set_sv_netview_offsetfromdp(10363656);
        xsim_sc_channel<0, bool > *p_38_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_38->S00_AXI_rlast.bind(*p_38_S00_AXI_rlast);
        p_38_S00_AXI_rlast->set_sv_netview_offsetfromdp(10363712);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_38_S00_AXI_ruser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_38->S00_AXI_ruser.bind(*p_38_S00_AXI_ruser);
        p_38_S00_AXI_ruser->set_sv_netview_offsetfromdp(10363768);
        xsim_sc_channel<0, bool > *p_38_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_38->S00_AXI_rvalid.bind(*p_38_S00_AXI_rvalid);
        p_38_S00_AXI_rvalid->set_sv_netview_offsetfromdp(10363824);
        xsim_sc_channel<0, bool > *p_38_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_38->S00_AXI_rready.bind(*p_38_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_rready);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_38_M00_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_38->M00_AXI_awaddr.bind(*p_38_M00_AXI_awaddr);
        p_38_M00_AXI_awaddr->set_sv_netview_offsetfromdp(10363936);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_38_M00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_38->M00_AXI_awlen.bind(*p_38_M00_AXI_awlen);
        p_38_M00_AXI_awlen->set_sv_netview_offsetfromdp(10363992);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_38_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_38->M00_AXI_awsize.bind(*p_38_M00_AXI_awsize);
        p_38_M00_AXI_awsize->set_sv_netview_offsetfromdp(10364048);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_38_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_38->M00_AXI_awburst.bind(*p_38_M00_AXI_awburst);
        p_38_M00_AXI_awburst->set_sv_netview_offsetfromdp(10364104);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_38_M00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_38->M00_AXI_awlock.bind(*p_38_M00_AXI_awlock);
        p_38_M00_AXI_awlock->set_sv_netview_offsetfromdp(10364160);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_38_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_38->M00_AXI_awcache.bind(*p_38_M00_AXI_awcache);
        p_38_M00_AXI_awcache->set_sv_netview_offsetfromdp(10364216);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_38_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_38->M00_AXI_awprot.bind(*p_38_M00_AXI_awprot);
        p_38_M00_AXI_awprot->set_sv_netview_offsetfromdp(10364272);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_38_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_38->M00_AXI_awqos.bind(*p_38_M00_AXI_awqos);
        p_38_M00_AXI_awqos->set_sv_netview_offsetfromdp(10364328);
        xsim_sc_channel<0, bool > *p_38_M00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_38->M00_AXI_awvalid.bind(*p_38_M00_AXI_awvalid);
        p_38_M00_AXI_awvalid->set_sv_netview_offsetfromdp(10364384);
        xsim_sc_channel<0, bool > *p_38_M00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_38->M00_AXI_awready.bind(*p_38_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M00_AXI_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_38_M00_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_38->M00_AXI_wdata.bind(*p_38_M00_AXI_wdata);
        p_38_M00_AXI_wdata->set_sv_netview_offsetfromdp(10364496);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_38_M00_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_38->M00_AXI_wstrb.bind(*p_38_M00_AXI_wstrb);
        p_38_M00_AXI_wstrb->set_sv_netview_offsetfromdp(10364552);
        xsim_sc_channel<0, bool > *p_38_M00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_38->M00_AXI_wlast.bind(*p_38_M00_AXI_wlast);
        p_38_M00_AXI_wlast->set_sv_netview_offsetfromdp(10364608);
        xsim_sc_channel<0, bool > *p_38_M00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_38->M00_AXI_wvalid.bind(*p_38_M00_AXI_wvalid);
        p_38_M00_AXI_wvalid->set_sv_netview_offsetfromdp(10364664);
        xsim_sc_channel<0, bool > *p_38_M00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_38->M00_AXI_wready.bind(*p_38_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M00_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_38_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_38->M00_AXI_bresp.bind(*p_38_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M00_AXI_bresp);
        xsim_sc_channel<0, bool > *p_38_M00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_38->M00_AXI_bvalid.bind(*p_38_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M00_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_38_M00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_38->M00_AXI_bready.bind(*p_38_M00_AXI_bready);
        p_38_M00_AXI_bready->set_sv_netview_offsetfromdp(10364888);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_38_M00_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_38->M00_AXI_araddr.bind(*p_38_M00_AXI_araddr);
        p_38_M00_AXI_araddr->set_sv_netview_offsetfromdp(10364944);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_38_M00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_38->M00_AXI_arlen.bind(*p_38_M00_AXI_arlen);
        p_38_M00_AXI_arlen->set_sv_netview_offsetfromdp(10365000);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_38_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_38->M00_AXI_arsize.bind(*p_38_M00_AXI_arsize);
        p_38_M00_AXI_arsize->set_sv_netview_offsetfromdp(10365056);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_38_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_38->M00_AXI_arburst.bind(*p_38_M00_AXI_arburst);
        p_38_M00_AXI_arburst->set_sv_netview_offsetfromdp(10365112);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_38_M00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_38->M00_AXI_arlock.bind(*p_38_M00_AXI_arlock);
        p_38_M00_AXI_arlock->set_sv_netview_offsetfromdp(10365168);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_38_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_38->M00_AXI_arcache.bind(*p_38_M00_AXI_arcache);
        p_38_M00_AXI_arcache->set_sv_netview_offsetfromdp(10365224);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_38_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_38->M00_AXI_arprot.bind(*p_38_M00_AXI_arprot);
        p_38_M00_AXI_arprot->set_sv_netview_offsetfromdp(10365280);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_38_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_38->M00_AXI_arqos.bind(*p_38_M00_AXI_arqos);
        p_38_M00_AXI_arqos->set_sv_netview_offsetfromdp(10365336);
        xsim_sc_channel<0, bool > *p_38_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_38->M00_AXI_arvalid.bind(*p_38_M00_AXI_arvalid);
        p_38_M00_AXI_arvalid->set_sv_netview_offsetfromdp(10365392);
        xsim_sc_channel<0, bool > *p_38_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_38->M00_AXI_arready.bind(*p_38_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M00_AXI_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_38_M00_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_38->M00_AXI_rdata.bind(*p_38_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_38_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_38->M00_AXI_rresp.bind(*p_38_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_38_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_38->M00_AXI_rlast.bind(*p_38_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M00_AXI_rlast);
        xsim_sc_channel<0, bool > *p_38_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_38->M00_AXI_rvalid.bind(*p_38_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_38_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_38->M00_AXI_rready.bind(*p_38_M00_AXI_rready);
        p_38_M00_AXI_rready->set_sv_netview_offsetfromdp(10365728);
        sc_inst_39 = new bd_d216_interconnect_PLRAM_MEM00_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.interconnect.interconnect_plram_mem00");
        sc_inst_39->xsim_set_dbg_index(2691);
        xsim_sc_channel<0, bool > *p_39_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_39->aclk.bind(*p_39_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_39_aclk);
        xsim_sc_channel<0, bool > *p_39_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_39->aresetn.bind(*p_39_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_39_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_39_S00_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_39->S00_AXI_awid.bind(*p_39_S00_AXI_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_awid);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_39_S00_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_39->S00_AXI_awaddr.bind(*p_39_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_39_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_39->S00_AXI_awlen.bind(*p_39_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_39_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_39->S00_AXI_awsize.bind(*p_39_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_39_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_39->S00_AXI_awburst.bind(*p_39_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_39_S00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_39->S00_AXI_awlock.bind(*p_39_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_39_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_39->S00_AXI_awcache.bind(*p_39_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_39_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_39->S00_AXI_awprot.bind(*p_39_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_39_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_39->S00_AXI_awqos.bind(*p_39_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_awqos);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_39_S00_AXI_awuser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_39->S00_AXI_awuser.bind(*p_39_S00_AXI_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_awuser);
        xsim_sc_channel<0, bool > *p_39_S00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->S00_AXI_awvalid.bind(*p_39_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_39_S00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_39->S00_AXI_awready.bind(*p_39_S00_AXI_awready);
        p_39_S00_AXI_awready->set_sv_netview_offsetfromdp(10366560);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_39_S00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_39->S00_AXI_wdata.bind(*p_39_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_39_S00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_39->S00_AXI_wstrb.bind(*p_39_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_39_S00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_39->S00_AXI_wlast.bind(*p_39_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_wlast);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_39_S00_AXI_wuser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_39->S00_AXI_wuser.bind(*p_39_S00_AXI_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_wuser);
        xsim_sc_channel<0, bool > *p_39_S00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->S00_AXI_wvalid.bind(*p_39_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_39_S00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_39->S00_AXI_wready.bind(*p_39_S00_AXI_wready);
        p_39_S00_AXI_wready->set_sv_netview_offsetfromdp(10366896);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_39_S00_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_39->S00_AXI_bid.bind(*p_39_S00_AXI_bid);
        p_39_S00_AXI_bid->set_sv_netview_offsetfromdp(10366952);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_39_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_39->S00_AXI_bresp.bind(*p_39_S00_AXI_bresp);
        p_39_S00_AXI_bresp->set_sv_netview_offsetfromdp(10367008);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_39_S00_AXI_buser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_39->S00_AXI_buser.bind(*p_39_S00_AXI_buser);
        p_39_S00_AXI_buser->set_sv_netview_offsetfromdp(10367064);
        xsim_sc_channel<0, bool > *p_39_S00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->S00_AXI_bvalid.bind(*p_39_S00_AXI_bvalid);
        p_39_S00_AXI_bvalid->set_sv_netview_offsetfromdp(10367120);
        xsim_sc_channel<0, bool > *p_39_S00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_39->S00_AXI_bready.bind(*p_39_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_39_S00_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_39->S00_AXI_arid.bind(*p_39_S00_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_arid);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_39_S00_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_39->S00_AXI_araddr.bind(*p_39_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_39_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_39->S00_AXI_arlen.bind(*p_39_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_39_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_39->S00_AXI_arsize.bind(*p_39_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_39_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_39->S00_AXI_arburst.bind(*p_39_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_39_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_39->S00_AXI_arlock.bind(*p_39_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_39_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_39->S00_AXI_arcache.bind(*p_39_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_39_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_39->S00_AXI_arprot.bind(*p_39_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_39_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_39->S00_AXI_arqos.bind(*p_39_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_arqos);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_39_S00_AXI_aruser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_39->S00_AXI_aruser.bind(*p_39_S00_AXI_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_aruser);
        xsim_sc_channel<0, bool > *p_39_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->S00_AXI_arvalid.bind(*p_39_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_39_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_39->S00_AXI_arready.bind(*p_39_S00_AXI_arready);
        p_39_S00_AXI_arready->set_sv_netview_offsetfromdp(10367848);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_39_S00_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_39->S00_AXI_rid.bind(*p_39_S00_AXI_rid);
        p_39_S00_AXI_rid->set_sv_netview_offsetfromdp(10367904);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_39_S00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_39->S00_AXI_rdata.bind(*p_39_S00_AXI_rdata);
        p_39_S00_AXI_rdata->set_sv_netview_offsetfromdp(10367960);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_39_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_39->S00_AXI_rresp.bind(*p_39_S00_AXI_rresp);
        p_39_S00_AXI_rresp->set_sv_netview_offsetfromdp(10368016);
        xsim_sc_channel<0, bool > *p_39_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_39->S00_AXI_rlast.bind(*p_39_S00_AXI_rlast);
        p_39_S00_AXI_rlast->set_sv_netview_offsetfromdp(10368072);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_39_S00_AXI_ruser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_39->S00_AXI_ruser.bind(*p_39_S00_AXI_ruser);
        p_39_S00_AXI_ruser->set_sv_netview_offsetfromdp(10368128);
        xsim_sc_channel<0, bool > *p_39_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->S00_AXI_rvalid.bind(*p_39_S00_AXI_rvalid);
        p_39_S00_AXI_rvalid->set_sv_netview_offsetfromdp(10368184);
        xsim_sc_channel<0, bool > *p_39_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_39->S00_AXI_rready.bind(*p_39_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_rready);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_39_M00_AXI_awaddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_39->M00_AXI_awaddr.bind(*p_39_M00_AXI_awaddr);
        p_39_M00_AXI_awaddr->set_sv_netview_offsetfromdp(10368296);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_39_M00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_39->M00_AXI_awlen.bind(*p_39_M00_AXI_awlen);
        p_39_M00_AXI_awlen->set_sv_netview_offsetfromdp(10368352);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_39_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_39->M00_AXI_awsize.bind(*p_39_M00_AXI_awsize);
        p_39_M00_AXI_awsize->set_sv_netview_offsetfromdp(10368408);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_39_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_39->M00_AXI_awburst.bind(*p_39_M00_AXI_awburst);
        p_39_M00_AXI_awburst->set_sv_netview_offsetfromdp(10368464);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_39_M00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_39->M00_AXI_awlock.bind(*p_39_M00_AXI_awlock);
        p_39_M00_AXI_awlock->set_sv_netview_offsetfromdp(10368520);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_39_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_39->M00_AXI_awcache.bind(*p_39_M00_AXI_awcache);
        p_39_M00_AXI_awcache->set_sv_netview_offsetfromdp(10368576);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_39_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_39->M00_AXI_awprot.bind(*p_39_M00_AXI_awprot);
        p_39_M00_AXI_awprot->set_sv_netview_offsetfromdp(10368632);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_39_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_39->M00_AXI_awqos.bind(*p_39_M00_AXI_awqos);
        p_39_M00_AXI_awqos->set_sv_netview_offsetfromdp(10368688);
        xsim_sc_channel<0, bool > *p_39_M00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->M00_AXI_awvalid.bind(*p_39_M00_AXI_awvalid);
        p_39_M00_AXI_awvalid->set_sv_netview_offsetfromdp(10368744);
        xsim_sc_channel<0, bool > *p_39_M00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_39->M00_AXI_awready.bind(*p_39_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M00_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_39_M00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_39->M00_AXI_wdata.bind(*p_39_M00_AXI_wdata);
        p_39_M00_AXI_wdata->set_sv_netview_offsetfromdp(10368856);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_39_M00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_39->M00_AXI_wstrb.bind(*p_39_M00_AXI_wstrb);
        p_39_M00_AXI_wstrb->set_sv_netview_offsetfromdp(10368912);
        xsim_sc_channel<0, bool > *p_39_M00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_39->M00_AXI_wlast.bind(*p_39_M00_AXI_wlast);
        p_39_M00_AXI_wlast->set_sv_netview_offsetfromdp(10368968);
        xsim_sc_channel<0, bool > *p_39_M00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->M00_AXI_wvalid.bind(*p_39_M00_AXI_wvalid);
        p_39_M00_AXI_wvalid->set_sv_netview_offsetfromdp(10369024);
        xsim_sc_channel<0, bool > *p_39_M00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_39->M00_AXI_wready.bind(*p_39_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M00_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_39_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_39->M00_AXI_bresp.bind(*p_39_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M00_AXI_bresp);
        xsim_sc_channel<0, bool > *p_39_M00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->M00_AXI_bvalid.bind(*p_39_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M00_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_39_M00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_39->M00_AXI_bready.bind(*p_39_M00_AXI_bready);
        p_39_M00_AXI_bready->set_sv_netview_offsetfromdp(10369248);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_39_M00_AXI_araddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_39->M00_AXI_araddr.bind(*p_39_M00_AXI_araddr);
        p_39_M00_AXI_araddr->set_sv_netview_offsetfromdp(10369304);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_39_M00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_39->M00_AXI_arlen.bind(*p_39_M00_AXI_arlen);
        p_39_M00_AXI_arlen->set_sv_netview_offsetfromdp(10369360);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_39_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_39->M00_AXI_arsize.bind(*p_39_M00_AXI_arsize);
        p_39_M00_AXI_arsize->set_sv_netview_offsetfromdp(10369416);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_39_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_39->M00_AXI_arburst.bind(*p_39_M00_AXI_arburst);
        p_39_M00_AXI_arburst->set_sv_netview_offsetfromdp(10369472);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_39_M00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_39->M00_AXI_arlock.bind(*p_39_M00_AXI_arlock);
        p_39_M00_AXI_arlock->set_sv_netview_offsetfromdp(10369528);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_39_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_39->M00_AXI_arcache.bind(*p_39_M00_AXI_arcache);
        p_39_M00_AXI_arcache->set_sv_netview_offsetfromdp(10369584);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_39_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_39->M00_AXI_arprot.bind(*p_39_M00_AXI_arprot);
        p_39_M00_AXI_arprot->set_sv_netview_offsetfromdp(10369640);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_39_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_39->M00_AXI_arqos.bind(*p_39_M00_AXI_arqos);
        p_39_M00_AXI_arqos->set_sv_netview_offsetfromdp(10369696);
        xsim_sc_channel<0, bool > *p_39_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->M00_AXI_arvalid.bind(*p_39_M00_AXI_arvalid);
        p_39_M00_AXI_arvalid->set_sv_netview_offsetfromdp(10369752);
        xsim_sc_channel<0, bool > *p_39_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_39->M00_AXI_arready.bind(*p_39_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M00_AXI_arready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_39_M00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_39->M00_AXI_rdata.bind(*p_39_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_39_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_39->M00_AXI_rresp.bind(*p_39_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_39_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_39->M00_AXI_rlast.bind(*p_39_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M00_AXI_rlast);
        xsim_sc_channel<0, bool > *p_39_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->M00_AXI_rvalid.bind(*p_39_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_39_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_39->M00_AXI_rready.bind(*p_39_M00_AXI_rready);
        p_39_M00_AXI_rready->set_sv_netview_offsetfromdp(10370088);
        sc_inst_40 = new bd_d216_interconnect_PLRAM_MEM01_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.interconnect.interconnect_plram_mem01");
        sc_inst_40->xsim_set_dbg_index(2692);
        xsim_sc_channel<0, bool > *p_40_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_40->aclk.bind(*p_40_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_40_aclk);
        xsim_sc_channel<0, bool > *p_40_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_40->aresetn.bind(*p_40_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_40_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_40_S00_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_40->S00_AXI_awid.bind(*p_40_S00_AXI_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_40_S00_AXI_awid);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_40_S00_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_40->S00_AXI_awaddr.bind(*p_40_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_40_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_40_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_40->S00_AXI_awlen.bind(*p_40_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_40_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_40_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_40->S00_AXI_awsize.bind(*p_40_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_40_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_40_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_40->S00_AXI_awburst.bind(*p_40_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_40_S00_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_40_S00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_40->S00_AXI_awlock.bind(*p_40_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_40_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_40_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_40->S00_AXI_awcache.bind(*p_40_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_40_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_40_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_40->S00_AXI_awprot.bind(*p_40_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_40_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_40_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_40->S00_AXI_awqos.bind(*p_40_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_40_S00_AXI_awqos);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_40_S00_AXI_awuser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_40->S00_AXI_awuser.bind(*p_40_S00_AXI_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_40_S00_AXI_awuser);
        xsim_sc_channel<0, bool > *p_40_S00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_40->S00_AXI_awvalid.bind(*p_40_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_40_S00_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_40_S00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_40->S00_AXI_awready.bind(*p_40_S00_AXI_awready);
        p_40_S00_AXI_awready->set_sv_netview_offsetfromdp(10370920);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_40_S00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_40->S00_AXI_wdata.bind(*p_40_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_40_S00_AXI_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_40_S00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_40->S00_AXI_wstrb.bind(*p_40_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_40_S00_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_40_S00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_40->S00_AXI_wlast.bind(*p_40_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_40_S00_AXI_wlast);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_40_S00_AXI_wuser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_40->S00_AXI_wuser.bind(*p_40_S00_AXI_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_40_S00_AXI_wuser);
        xsim_sc_channel<0, bool > *p_40_S00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_40->S00_AXI_wvalid.bind(*p_40_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_40_S00_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_40_S00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_40->S00_AXI_wready.bind(*p_40_S00_AXI_wready);
        p_40_S00_AXI_wready->set_sv_netview_offsetfromdp(10371256);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_40_S00_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_40->S00_AXI_bid.bind(*p_40_S00_AXI_bid);
        p_40_S00_AXI_bid->set_sv_netview_offsetfromdp(10371312);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_40_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_40->S00_AXI_bresp.bind(*p_40_S00_AXI_bresp);
        p_40_S00_AXI_bresp->set_sv_netview_offsetfromdp(10371368);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_40_S00_AXI_buser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_40->S00_AXI_buser.bind(*p_40_S00_AXI_buser);
        p_40_S00_AXI_buser->set_sv_netview_offsetfromdp(10371424);
        xsim_sc_channel<0, bool > *p_40_S00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_40->S00_AXI_bvalid.bind(*p_40_S00_AXI_bvalid);
        p_40_S00_AXI_bvalid->set_sv_netview_offsetfromdp(10371480);
        xsim_sc_channel<0, bool > *p_40_S00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_40->S00_AXI_bready.bind(*p_40_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_40_S00_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_40_S00_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_40->S00_AXI_arid.bind(*p_40_S00_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_40_S00_AXI_arid);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_40_S00_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_40->S00_AXI_araddr.bind(*p_40_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_40_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_40_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_40->S00_AXI_arlen.bind(*p_40_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_40_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_40_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_40->S00_AXI_arsize.bind(*p_40_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_40_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_40_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_40->S00_AXI_arburst.bind(*p_40_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_40_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_40_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_40->S00_AXI_arlock.bind(*p_40_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_40_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_40_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_40->S00_AXI_arcache.bind(*p_40_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_40_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_40_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_40->S00_AXI_arprot.bind(*p_40_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_40_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_40_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_40->S00_AXI_arqos.bind(*p_40_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_40_S00_AXI_arqos);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_40_S00_AXI_aruser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_40->S00_AXI_aruser.bind(*p_40_S00_AXI_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_40_S00_AXI_aruser);
        xsim_sc_channel<0, bool > *p_40_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_40->S00_AXI_arvalid.bind(*p_40_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_40_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_40_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_40->S00_AXI_arready.bind(*p_40_S00_AXI_arready);
        p_40_S00_AXI_arready->set_sv_netview_offsetfromdp(10372208);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_40_S00_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_40->S00_AXI_rid.bind(*p_40_S00_AXI_rid);
        p_40_S00_AXI_rid->set_sv_netview_offsetfromdp(10372264);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_40_S00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_40->S00_AXI_rdata.bind(*p_40_S00_AXI_rdata);
        p_40_S00_AXI_rdata->set_sv_netview_offsetfromdp(10372320);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_40_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_40->S00_AXI_rresp.bind(*p_40_S00_AXI_rresp);
        p_40_S00_AXI_rresp->set_sv_netview_offsetfromdp(10372376);
        xsim_sc_channel<0, bool > *p_40_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_40->S00_AXI_rlast.bind(*p_40_S00_AXI_rlast);
        p_40_S00_AXI_rlast->set_sv_netview_offsetfromdp(10372432);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_40_S00_AXI_ruser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_40->S00_AXI_ruser.bind(*p_40_S00_AXI_ruser);
        p_40_S00_AXI_ruser->set_sv_netview_offsetfromdp(10372488);
        xsim_sc_channel<0, bool > *p_40_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_40->S00_AXI_rvalid.bind(*p_40_S00_AXI_rvalid);
        p_40_S00_AXI_rvalid->set_sv_netview_offsetfromdp(10372544);
        xsim_sc_channel<0, bool > *p_40_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_40->S00_AXI_rready.bind(*p_40_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_40_S00_AXI_rready);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_40_M00_AXI_awaddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_40->M00_AXI_awaddr.bind(*p_40_M00_AXI_awaddr);
        p_40_M00_AXI_awaddr->set_sv_netview_offsetfromdp(10372656);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_40_M00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_40->M00_AXI_awlen.bind(*p_40_M00_AXI_awlen);
        p_40_M00_AXI_awlen->set_sv_netview_offsetfromdp(10372712);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_40_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_40->M00_AXI_awsize.bind(*p_40_M00_AXI_awsize);
        p_40_M00_AXI_awsize->set_sv_netview_offsetfromdp(10372768);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_40_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_40->M00_AXI_awburst.bind(*p_40_M00_AXI_awburst);
        p_40_M00_AXI_awburst->set_sv_netview_offsetfromdp(10372824);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_40_M00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_40->M00_AXI_awlock.bind(*p_40_M00_AXI_awlock);
        p_40_M00_AXI_awlock->set_sv_netview_offsetfromdp(10372880);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_40_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_40->M00_AXI_awcache.bind(*p_40_M00_AXI_awcache);
        p_40_M00_AXI_awcache->set_sv_netview_offsetfromdp(10372936);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_40_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_40->M00_AXI_awprot.bind(*p_40_M00_AXI_awprot);
        p_40_M00_AXI_awprot->set_sv_netview_offsetfromdp(10372992);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_40_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_40->M00_AXI_awqos.bind(*p_40_M00_AXI_awqos);
        p_40_M00_AXI_awqos->set_sv_netview_offsetfromdp(10373048);
        xsim_sc_channel<0, bool > *p_40_M00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_40->M00_AXI_awvalid.bind(*p_40_M00_AXI_awvalid);
        p_40_M00_AXI_awvalid->set_sv_netview_offsetfromdp(10373104);
        xsim_sc_channel<0, bool > *p_40_M00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_40->M00_AXI_awready.bind(*p_40_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_40_M00_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_40_M00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_40->M00_AXI_wdata.bind(*p_40_M00_AXI_wdata);
        p_40_M00_AXI_wdata->set_sv_netview_offsetfromdp(10373216);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_40_M00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_40->M00_AXI_wstrb.bind(*p_40_M00_AXI_wstrb);
        p_40_M00_AXI_wstrb->set_sv_netview_offsetfromdp(10373272);
        xsim_sc_channel<0, bool > *p_40_M00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_40->M00_AXI_wlast.bind(*p_40_M00_AXI_wlast);
        p_40_M00_AXI_wlast->set_sv_netview_offsetfromdp(10373328);
        xsim_sc_channel<0, bool > *p_40_M00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_40->M00_AXI_wvalid.bind(*p_40_M00_AXI_wvalid);
        p_40_M00_AXI_wvalid->set_sv_netview_offsetfromdp(10373384);
        xsim_sc_channel<0, bool > *p_40_M00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_40->M00_AXI_wready.bind(*p_40_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_40_M00_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_40_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_40->M00_AXI_bresp.bind(*p_40_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_40_M00_AXI_bresp);
        xsim_sc_channel<0, bool > *p_40_M00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_40->M00_AXI_bvalid.bind(*p_40_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_40_M00_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_40_M00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_40->M00_AXI_bready.bind(*p_40_M00_AXI_bready);
        p_40_M00_AXI_bready->set_sv_netview_offsetfromdp(10373608);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_40_M00_AXI_araddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_40->M00_AXI_araddr.bind(*p_40_M00_AXI_araddr);
        p_40_M00_AXI_araddr->set_sv_netview_offsetfromdp(10373664);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_40_M00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_40->M00_AXI_arlen.bind(*p_40_M00_AXI_arlen);
        p_40_M00_AXI_arlen->set_sv_netview_offsetfromdp(10373720);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_40_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_40->M00_AXI_arsize.bind(*p_40_M00_AXI_arsize);
        p_40_M00_AXI_arsize->set_sv_netview_offsetfromdp(10373776);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_40_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_40->M00_AXI_arburst.bind(*p_40_M00_AXI_arburst);
        p_40_M00_AXI_arburst->set_sv_netview_offsetfromdp(10373832);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_40_M00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_40->M00_AXI_arlock.bind(*p_40_M00_AXI_arlock);
        p_40_M00_AXI_arlock->set_sv_netview_offsetfromdp(10373888);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_40_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_40->M00_AXI_arcache.bind(*p_40_M00_AXI_arcache);
        p_40_M00_AXI_arcache->set_sv_netview_offsetfromdp(10373944);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_40_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_40->M00_AXI_arprot.bind(*p_40_M00_AXI_arprot);
        p_40_M00_AXI_arprot->set_sv_netview_offsetfromdp(10374000);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_40_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_40->M00_AXI_arqos.bind(*p_40_M00_AXI_arqos);
        p_40_M00_AXI_arqos->set_sv_netview_offsetfromdp(10374056);
        xsim_sc_channel<0, bool > *p_40_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_40->M00_AXI_arvalid.bind(*p_40_M00_AXI_arvalid);
        p_40_M00_AXI_arvalid->set_sv_netview_offsetfromdp(10374112);
        xsim_sc_channel<0, bool > *p_40_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_40->M00_AXI_arready.bind(*p_40_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_40_M00_AXI_arready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_40_M00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_40->M00_AXI_rdata.bind(*p_40_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_40_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_40_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_40->M00_AXI_rresp.bind(*p_40_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_40_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_40_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_40->M00_AXI_rlast.bind(*p_40_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_40_M00_AXI_rlast);
        xsim_sc_channel<0, bool > *p_40_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_40->M00_AXI_rvalid.bind(*p_40_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_40_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_40_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_40->M00_AXI_rready.bind(*p_40_M00_AXI_rready);
        p_40_M00_AXI_rready->set_sv_netview_offsetfromdp(10374448);
        sc_inst_41 = new bd_d216_interconnect_PLRAM_MEM02_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.interconnect.interconnect_plram_mem02");
        sc_inst_41->xsim_set_dbg_index(2693);
        xsim_sc_channel<0, bool > *p_41_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_41->aclk.bind(*p_41_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_41_aclk);
        xsim_sc_channel<0, bool > *p_41_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_41->aresetn.bind(*p_41_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_41_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_41_S00_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_41->S00_AXI_awid.bind(*p_41_S00_AXI_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_41_S00_AXI_awid);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_41_S00_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_41->S00_AXI_awaddr.bind(*p_41_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_41_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_41_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_41->S00_AXI_awlen.bind(*p_41_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_41_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_41_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_41->S00_AXI_awsize.bind(*p_41_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_41_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_41_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_41->S00_AXI_awburst.bind(*p_41_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_41_S00_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_41_S00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_41->S00_AXI_awlock.bind(*p_41_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_41_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_41_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_41->S00_AXI_awcache.bind(*p_41_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_41_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_41_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_41->S00_AXI_awprot.bind(*p_41_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_41_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_41_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_41->S00_AXI_awqos.bind(*p_41_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_41_S00_AXI_awqos);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_41_S00_AXI_awuser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_41->S00_AXI_awuser.bind(*p_41_S00_AXI_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_41_S00_AXI_awuser);
        xsim_sc_channel<0, bool > *p_41_S00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_41->S00_AXI_awvalid.bind(*p_41_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_41_S00_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_41_S00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_41->S00_AXI_awready.bind(*p_41_S00_AXI_awready);
        p_41_S00_AXI_awready->set_sv_netview_offsetfromdp(10375280);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_41_S00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_41->S00_AXI_wdata.bind(*p_41_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_41_S00_AXI_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_41_S00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_41->S00_AXI_wstrb.bind(*p_41_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_41_S00_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_41_S00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_41->S00_AXI_wlast.bind(*p_41_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_41_S00_AXI_wlast);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_41_S00_AXI_wuser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_41->S00_AXI_wuser.bind(*p_41_S00_AXI_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_41_S00_AXI_wuser);
        xsim_sc_channel<0, bool > *p_41_S00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_41->S00_AXI_wvalid.bind(*p_41_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_41_S00_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_41_S00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_41->S00_AXI_wready.bind(*p_41_S00_AXI_wready);
        p_41_S00_AXI_wready->set_sv_netview_offsetfromdp(10375616);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_41_S00_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_41->S00_AXI_bid.bind(*p_41_S00_AXI_bid);
        p_41_S00_AXI_bid->set_sv_netview_offsetfromdp(10375672);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_41_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_41->S00_AXI_bresp.bind(*p_41_S00_AXI_bresp);
        p_41_S00_AXI_bresp->set_sv_netview_offsetfromdp(10375728);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_41_S00_AXI_buser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_41->S00_AXI_buser.bind(*p_41_S00_AXI_buser);
        p_41_S00_AXI_buser->set_sv_netview_offsetfromdp(10375784);
        xsim_sc_channel<0, bool > *p_41_S00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_41->S00_AXI_bvalid.bind(*p_41_S00_AXI_bvalid);
        p_41_S00_AXI_bvalid->set_sv_netview_offsetfromdp(10375840);
        xsim_sc_channel<0, bool > *p_41_S00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_41->S00_AXI_bready.bind(*p_41_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_41_S00_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_41_S00_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_41->S00_AXI_arid.bind(*p_41_S00_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_41_S00_AXI_arid);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_41_S00_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_41->S00_AXI_araddr.bind(*p_41_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_41_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_41_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_41->S00_AXI_arlen.bind(*p_41_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_41_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_41_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_41->S00_AXI_arsize.bind(*p_41_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_41_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_41_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_41->S00_AXI_arburst.bind(*p_41_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_41_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_41_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_41->S00_AXI_arlock.bind(*p_41_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_41_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_41_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_41->S00_AXI_arcache.bind(*p_41_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_41_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_41_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_41->S00_AXI_arprot.bind(*p_41_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_41_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_41_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_41->S00_AXI_arqos.bind(*p_41_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_41_S00_AXI_arqos);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_41_S00_AXI_aruser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_41->S00_AXI_aruser.bind(*p_41_S00_AXI_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_41_S00_AXI_aruser);
        xsim_sc_channel<0, bool > *p_41_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_41->S00_AXI_arvalid.bind(*p_41_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_41_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_41_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_41->S00_AXI_arready.bind(*p_41_S00_AXI_arready);
        p_41_S00_AXI_arready->set_sv_netview_offsetfromdp(10376568);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_41_S00_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_41->S00_AXI_rid.bind(*p_41_S00_AXI_rid);
        p_41_S00_AXI_rid->set_sv_netview_offsetfromdp(10376624);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_41_S00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_41->S00_AXI_rdata.bind(*p_41_S00_AXI_rdata);
        p_41_S00_AXI_rdata->set_sv_netview_offsetfromdp(10376680);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_41_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_41->S00_AXI_rresp.bind(*p_41_S00_AXI_rresp);
        p_41_S00_AXI_rresp->set_sv_netview_offsetfromdp(10376736);
        xsim_sc_channel<0, bool > *p_41_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_41->S00_AXI_rlast.bind(*p_41_S00_AXI_rlast);
        p_41_S00_AXI_rlast->set_sv_netview_offsetfromdp(10376792);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_41_S00_AXI_ruser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_41->S00_AXI_ruser.bind(*p_41_S00_AXI_ruser);
        p_41_S00_AXI_ruser->set_sv_netview_offsetfromdp(10376848);
        xsim_sc_channel<0, bool > *p_41_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_41->S00_AXI_rvalid.bind(*p_41_S00_AXI_rvalid);
        p_41_S00_AXI_rvalid->set_sv_netview_offsetfromdp(10376904);
        xsim_sc_channel<0, bool > *p_41_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_41->S00_AXI_rready.bind(*p_41_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_41_S00_AXI_rready);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_41_M00_AXI_awaddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_41->M00_AXI_awaddr.bind(*p_41_M00_AXI_awaddr);
        p_41_M00_AXI_awaddr->set_sv_netview_offsetfromdp(10377016);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_41_M00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_41->M00_AXI_awlen.bind(*p_41_M00_AXI_awlen);
        p_41_M00_AXI_awlen->set_sv_netview_offsetfromdp(10377072);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_41_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_41->M00_AXI_awsize.bind(*p_41_M00_AXI_awsize);
        p_41_M00_AXI_awsize->set_sv_netview_offsetfromdp(10377128);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_41_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_41->M00_AXI_awburst.bind(*p_41_M00_AXI_awburst);
        p_41_M00_AXI_awburst->set_sv_netview_offsetfromdp(10377184);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_41_M00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_41->M00_AXI_awlock.bind(*p_41_M00_AXI_awlock);
        p_41_M00_AXI_awlock->set_sv_netview_offsetfromdp(10377240);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_41_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_41->M00_AXI_awcache.bind(*p_41_M00_AXI_awcache);
        p_41_M00_AXI_awcache->set_sv_netview_offsetfromdp(10377296);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_41_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_41->M00_AXI_awprot.bind(*p_41_M00_AXI_awprot);
        p_41_M00_AXI_awprot->set_sv_netview_offsetfromdp(10377352);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_41_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_41->M00_AXI_awqos.bind(*p_41_M00_AXI_awqos);
        p_41_M00_AXI_awqos->set_sv_netview_offsetfromdp(10377408);
        xsim_sc_channel<0, bool > *p_41_M00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_41->M00_AXI_awvalid.bind(*p_41_M00_AXI_awvalid);
        p_41_M00_AXI_awvalid->set_sv_netview_offsetfromdp(10377464);
        xsim_sc_channel<0, bool > *p_41_M00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_41->M00_AXI_awready.bind(*p_41_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_41_M00_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_41_M00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_41->M00_AXI_wdata.bind(*p_41_M00_AXI_wdata);
        p_41_M00_AXI_wdata->set_sv_netview_offsetfromdp(10377576);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_41_M00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_41->M00_AXI_wstrb.bind(*p_41_M00_AXI_wstrb);
        p_41_M00_AXI_wstrb->set_sv_netview_offsetfromdp(10377632);
        xsim_sc_channel<0, bool > *p_41_M00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_41->M00_AXI_wlast.bind(*p_41_M00_AXI_wlast);
        p_41_M00_AXI_wlast->set_sv_netview_offsetfromdp(10377688);
        xsim_sc_channel<0, bool > *p_41_M00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_41->M00_AXI_wvalid.bind(*p_41_M00_AXI_wvalid);
        p_41_M00_AXI_wvalid->set_sv_netview_offsetfromdp(10377744);
        xsim_sc_channel<0, bool > *p_41_M00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_41->M00_AXI_wready.bind(*p_41_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_41_M00_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_41_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_41->M00_AXI_bresp.bind(*p_41_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_41_M00_AXI_bresp);
        xsim_sc_channel<0, bool > *p_41_M00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_41->M00_AXI_bvalid.bind(*p_41_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_41_M00_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_41_M00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_41->M00_AXI_bready.bind(*p_41_M00_AXI_bready);
        p_41_M00_AXI_bready->set_sv_netview_offsetfromdp(10377968);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_41_M00_AXI_araddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_41->M00_AXI_araddr.bind(*p_41_M00_AXI_araddr);
        p_41_M00_AXI_araddr->set_sv_netview_offsetfromdp(10378024);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_41_M00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_41->M00_AXI_arlen.bind(*p_41_M00_AXI_arlen);
        p_41_M00_AXI_arlen->set_sv_netview_offsetfromdp(10378080);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_41_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_41->M00_AXI_arsize.bind(*p_41_M00_AXI_arsize);
        p_41_M00_AXI_arsize->set_sv_netview_offsetfromdp(10378136);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_41_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_41->M00_AXI_arburst.bind(*p_41_M00_AXI_arburst);
        p_41_M00_AXI_arburst->set_sv_netview_offsetfromdp(10378192);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_41_M00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_41->M00_AXI_arlock.bind(*p_41_M00_AXI_arlock);
        p_41_M00_AXI_arlock->set_sv_netview_offsetfromdp(10378248);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_41_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_41->M00_AXI_arcache.bind(*p_41_M00_AXI_arcache);
        p_41_M00_AXI_arcache->set_sv_netview_offsetfromdp(10378304);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_41_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_41->M00_AXI_arprot.bind(*p_41_M00_AXI_arprot);
        p_41_M00_AXI_arprot->set_sv_netview_offsetfromdp(10378360);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_41_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_41->M00_AXI_arqos.bind(*p_41_M00_AXI_arqos);
        p_41_M00_AXI_arqos->set_sv_netview_offsetfromdp(10378416);
        xsim_sc_channel<0, bool > *p_41_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_41->M00_AXI_arvalid.bind(*p_41_M00_AXI_arvalid);
        p_41_M00_AXI_arvalid->set_sv_netview_offsetfromdp(10378472);
        xsim_sc_channel<0, bool > *p_41_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_41->M00_AXI_arready.bind(*p_41_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_41_M00_AXI_arready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_41_M00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_41->M00_AXI_rdata.bind(*p_41_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_41_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_41_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_41->M00_AXI_rresp.bind(*p_41_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_41_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_41_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_41->M00_AXI_rlast.bind(*p_41_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_41_M00_AXI_rlast);
        xsim_sc_channel<0, bool > *p_41_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_41->M00_AXI_rvalid.bind(*p_41_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_41_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_41_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_41->M00_AXI_rready.bind(*p_41_M00_AXI_rready);
        p_41_M00_AXI_rready->set_sv_netview_offsetfromdp(10378808);
        sc_inst_42 = new bd_d216_interconnect_PLRAM_MEM03_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.interconnect.interconnect_plram_mem03");
        sc_inst_42->xsim_set_dbg_index(2694);
        xsim_sc_channel<0, bool > *p_42_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_42->aclk.bind(*p_42_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_42_aclk);
        xsim_sc_channel<0, bool > *p_42_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_42->aresetn.bind(*p_42_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_42_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_42_S00_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_42->S00_AXI_awid.bind(*p_42_S00_AXI_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_42_S00_AXI_awid);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_42_S00_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_42->S00_AXI_awaddr.bind(*p_42_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_42_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_42_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_42->S00_AXI_awlen.bind(*p_42_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_42_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_42_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_42->S00_AXI_awsize.bind(*p_42_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_42_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_42_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_42->S00_AXI_awburst.bind(*p_42_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_42_S00_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_42_S00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_42->S00_AXI_awlock.bind(*p_42_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_42_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_42_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_42->S00_AXI_awcache.bind(*p_42_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_42_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_42_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_42->S00_AXI_awprot.bind(*p_42_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_42_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_42_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_42->S00_AXI_awqos.bind(*p_42_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_42_S00_AXI_awqos);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_42_S00_AXI_awuser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_42->S00_AXI_awuser.bind(*p_42_S00_AXI_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_42_S00_AXI_awuser);
        xsim_sc_channel<0, bool > *p_42_S00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_42->S00_AXI_awvalid.bind(*p_42_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_42_S00_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_42_S00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_42->S00_AXI_awready.bind(*p_42_S00_AXI_awready);
        p_42_S00_AXI_awready->set_sv_netview_offsetfromdp(10379640);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_42_S00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_42->S00_AXI_wdata.bind(*p_42_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_42_S00_AXI_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_42_S00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_42->S00_AXI_wstrb.bind(*p_42_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_42_S00_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_42_S00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_42->S00_AXI_wlast.bind(*p_42_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_42_S00_AXI_wlast);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_42_S00_AXI_wuser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_42->S00_AXI_wuser.bind(*p_42_S00_AXI_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_42_S00_AXI_wuser);
        xsim_sc_channel<0, bool > *p_42_S00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_42->S00_AXI_wvalid.bind(*p_42_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_42_S00_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_42_S00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_42->S00_AXI_wready.bind(*p_42_S00_AXI_wready);
        p_42_S00_AXI_wready->set_sv_netview_offsetfromdp(10379976);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_42_S00_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_42->S00_AXI_bid.bind(*p_42_S00_AXI_bid);
        p_42_S00_AXI_bid->set_sv_netview_offsetfromdp(10380032);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_42_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_42->S00_AXI_bresp.bind(*p_42_S00_AXI_bresp);
        p_42_S00_AXI_bresp->set_sv_netview_offsetfromdp(10380088);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_42_S00_AXI_buser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_42->S00_AXI_buser.bind(*p_42_S00_AXI_buser);
        p_42_S00_AXI_buser->set_sv_netview_offsetfromdp(10380144);
        xsim_sc_channel<0, bool > *p_42_S00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_42->S00_AXI_bvalid.bind(*p_42_S00_AXI_bvalid);
        p_42_S00_AXI_bvalid->set_sv_netview_offsetfromdp(10380200);
        xsim_sc_channel<0, bool > *p_42_S00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_42->S00_AXI_bready.bind(*p_42_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_42_S00_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_42_S00_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_42->S00_AXI_arid.bind(*p_42_S00_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_42_S00_AXI_arid);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_42_S00_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_42->S00_AXI_araddr.bind(*p_42_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_42_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_42_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_42->S00_AXI_arlen.bind(*p_42_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_42_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_42_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_42->S00_AXI_arsize.bind(*p_42_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_42_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_42_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_42->S00_AXI_arburst.bind(*p_42_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_42_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_42_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_42->S00_AXI_arlock.bind(*p_42_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_42_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_42_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_42->S00_AXI_arcache.bind(*p_42_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_42_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_42_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_42->S00_AXI_arprot.bind(*p_42_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_42_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_42_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_42->S00_AXI_arqos.bind(*p_42_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_42_S00_AXI_arqos);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_42_S00_AXI_aruser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_42->S00_AXI_aruser.bind(*p_42_S00_AXI_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_42_S00_AXI_aruser);
        xsim_sc_channel<0, bool > *p_42_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_42->S00_AXI_arvalid.bind(*p_42_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_42_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_42_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_42->S00_AXI_arready.bind(*p_42_S00_AXI_arready);
        p_42_S00_AXI_arready->set_sv_netview_offsetfromdp(10380928);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_42_S00_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_42->S00_AXI_rid.bind(*p_42_S00_AXI_rid);
        p_42_S00_AXI_rid->set_sv_netview_offsetfromdp(10380984);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_42_S00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_42->S00_AXI_rdata.bind(*p_42_S00_AXI_rdata);
        p_42_S00_AXI_rdata->set_sv_netview_offsetfromdp(10381040);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_42_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_42->S00_AXI_rresp.bind(*p_42_S00_AXI_rresp);
        p_42_S00_AXI_rresp->set_sv_netview_offsetfromdp(10381096);
        xsim_sc_channel<0, bool > *p_42_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_42->S00_AXI_rlast.bind(*p_42_S00_AXI_rlast);
        p_42_S00_AXI_rlast->set_sv_netview_offsetfromdp(10381152);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_42_S00_AXI_ruser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_42->S00_AXI_ruser.bind(*p_42_S00_AXI_ruser);
        p_42_S00_AXI_ruser->set_sv_netview_offsetfromdp(10381208);
        xsim_sc_channel<0, bool > *p_42_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_42->S00_AXI_rvalid.bind(*p_42_S00_AXI_rvalid);
        p_42_S00_AXI_rvalid->set_sv_netview_offsetfromdp(10381264);
        xsim_sc_channel<0, bool > *p_42_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_42->S00_AXI_rready.bind(*p_42_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_42_S00_AXI_rready);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_42_M00_AXI_awaddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_42->M00_AXI_awaddr.bind(*p_42_M00_AXI_awaddr);
        p_42_M00_AXI_awaddr->set_sv_netview_offsetfromdp(10381376);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_42_M00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_42->M00_AXI_awlen.bind(*p_42_M00_AXI_awlen);
        p_42_M00_AXI_awlen->set_sv_netview_offsetfromdp(10381432);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_42_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_42->M00_AXI_awsize.bind(*p_42_M00_AXI_awsize);
        p_42_M00_AXI_awsize->set_sv_netview_offsetfromdp(10381488);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_42_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_42->M00_AXI_awburst.bind(*p_42_M00_AXI_awburst);
        p_42_M00_AXI_awburst->set_sv_netview_offsetfromdp(10381544);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_42_M00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_42->M00_AXI_awlock.bind(*p_42_M00_AXI_awlock);
        p_42_M00_AXI_awlock->set_sv_netview_offsetfromdp(10381600);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_42_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_42->M00_AXI_awcache.bind(*p_42_M00_AXI_awcache);
        p_42_M00_AXI_awcache->set_sv_netview_offsetfromdp(10381656);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_42_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_42->M00_AXI_awprot.bind(*p_42_M00_AXI_awprot);
        p_42_M00_AXI_awprot->set_sv_netview_offsetfromdp(10381712);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_42_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_42->M00_AXI_awqos.bind(*p_42_M00_AXI_awqos);
        p_42_M00_AXI_awqos->set_sv_netview_offsetfromdp(10381768);
        xsim_sc_channel<0, bool > *p_42_M00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_42->M00_AXI_awvalid.bind(*p_42_M00_AXI_awvalid);
        p_42_M00_AXI_awvalid->set_sv_netview_offsetfromdp(10381824);
        xsim_sc_channel<0, bool > *p_42_M00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_42->M00_AXI_awready.bind(*p_42_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_42_M00_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_42_M00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_42->M00_AXI_wdata.bind(*p_42_M00_AXI_wdata);
        p_42_M00_AXI_wdata->set_sv_netview_offsetfromdp(10381936);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_42_M00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_42->M00_AXI_wstrb.bind(*p_42_M00_AXI_wstrb);
        p_42_M00_AXI_wstrb->set_sv_netview_offsetfromdp(10381992);
        xsim_sc_channel<0, bool > *p_42_M00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_42->M00_AXI_wlast.bind(*p_42_M00_AXI_wlast);
        p_42_M00_AXI_wlast->set_sv_netview_offsetfromdp(10382048);
        xsim_sc_channel<0, bool > *p_42_M00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_42->M00_AXI_wvalid.bind(*p_42_M00_AXI_wvalid);
        p_42_M00_AXI_wvalid->set_sv_netview_offsetfromdp(10382104);
        xsim_sc_channel<0, bool > *p_42_M00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_42->M00_AXI_wready.bind(*p_42_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_42_M00_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_42_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_42->M00_AXI_bresp.bind(*p_42_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_42_M00_AXI_bresp);
        xsim_sc_channel<0, bool > *p_42_M00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_42->M00_AXI_bvalid.bind(*p_42_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_42_M00_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_42_M00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_42->M00_AXI_bready.bind(*p_42_M00_AXI_bready);
        p_42_M00_AXI_bready->set_sv_netview_offsetfromdp(10382328);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_42_M00_AXI_araddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_42->M00_AXI_araddr.bind(*p_42_M00_AXI_araddr);
        p_42_M00_AXI_araddr->set_sv_netview_offsetfromdp(10382384);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_42_M00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_42->M00_AXI_arlen.bind(*p_42_M00_AXI_arlen);
        p_42_M00_AXI_arlen->set_sv_netview_offsetfromdp(10382440);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_42_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_42->M00_AXI_arsize.bind(*p_42_M00_AXI_arsize);
        p_42_M00_AXI_arsize->set_sv_netview_offsetfromdp(10382496);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_42_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_42->M00_AXI_arburst.bind(*p_42_M00_AXI_arburst);
        p_42_M00_AXI_arburst->set_sv_netview_offsetfromdp(10382552);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_42_M00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_42->M00_AXI_arlock.bind(*p_42_M00_AXI_arlock);
        p_42_M00_AXI_arlock->set_sv_netview_offsetfromdp(10382608);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_42_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_42->M00_AXI_arcache.bind(*p_42_M00_AXI_arcache);
        p_42_M00_AXI_arcache->set_sv_netview_offsetfromdp(10382664);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_42_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_42->M00_AXI_arprot.bind(*p_42_M00_AXI_arprot);
        p_42_M00_AXI_arprot->set_sv_netview_offsetfromdp(10382720);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_42_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_42->M00_AXI_arqos.bind(*p_42_M00_AXI_arqos);
        p_42_M00_AXI_arqos->set_sv_netview_offsetfromdp(10382776);
        xsim_sc_channel<0, bool > *p_42_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_42->M00_AXI_arvalid.bind(*p_42_M00_AXI_arvalid);
        p_42_M00_AXI_arvalid->set_sv_netview_offsetfromdp(10382832);
        xsim_sc_channel<0, bool > *p_42_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_42->M00_AXI_arready.bind(*p_42_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_42_M00_AXI_arready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_42_M00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_42->M00_AXI_rdata.bind(*p_42_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_42_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_42_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_42->M00_AXI_rresp.bind(*p_42_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_42_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_42_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_42->M00_AXI_rlast.bind(*p_42_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_42_M00_AXI_rlast);
        xsim_sc_channel<0, bool > *p_42_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_42->M00_AXI_rvalid.bind(*p_42_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_42_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_42_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_42->M00_AXI_rready.bind(*p_42_M00_AXI_rready);
        p_42_M00_AXI_rready->set_sv_netview_offsetfromdp(10383168);
        sc_inst_43 = new bd_d216_interconnect_PLRAM_MEM04_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.interconnect.interconnect_plram_mem04");
        sc_inst_43->xsim_set_dbg_index(2695);
        xsim_sc_channel<0, bool > *p_43_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_43->aclk.bind(*p_43_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_43_aclk);
        xsim_sc_channel<0, bool > *p_43_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_43->aresetn.bind(*p_43_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_43_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_43_S00_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_43->S00_AXI_awid.bind(*p_43_S00_AXI_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_43_S00_AXI_awid);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_43_S00_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_43->S00_AXI_awaddr.bind(*p_43_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_43_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_43_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_43->S00_AXI_awlen.bind(*p_43_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_43_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_43_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_43->S00_AXI_awsize.bind(*p_43_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_43_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_43_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_43->S00_AXI_awburst.bind(*p_43_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_43_S00_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_43_S00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_43->S00_AXI_awlock.bind(*p_43_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_43_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_43_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_43->S00_AXI_awcache.bind(*p_43_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_43_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_43_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_43->S00_AXI_awprot.bind(*p_43_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_43_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_43_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_43->S00_AXI_awqos.bind(*p_43_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_43_S00_AXI_awqos);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_43_S00_AXI_awuser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_43->S00_AXI_awuser.bind(*p_43_S00_AXI_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_43_S00_AXI_awuser);
        xsim_sc_channel<0, bool > *p_43_S00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_43->S00_AXI_awvalid.bind(*p_43_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_43_S00_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_43_S00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_43->S00_AXI_awready.bind(*p_43_S00_AXI_awready);
        p_43_S00_AXI_awready->set_sv_netview_offsetfromdp(10384000);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_43_S00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_43->S00_AXI_wdata.bind(*p_43_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_43_S00_AXI_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_43_S00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_43->S00_AXI_wstrb.bind(*p_43_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_43_S00_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_43_S00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_43->S00_AXI_wlast.bind(*p_43_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_43_S00_AXI_wlast);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_43_S00_AXI_wuser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_43->S00_AXI_wuser.bind(*p_43_S00_AXI_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_43_S00_AXI_wuser);
        xsim_sc_channel<0, bool > *p_43_S00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_43->S00_AXI_wvalid.bind(*p_43_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_43_S00_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_43_S00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_43->S00_AXI_wready.bind(*p_43_S00_AXI_wready);
        p_43_S00_AXI_wready->set_sv_netview_offsetfromdp(10384336);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_43_S00_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_43->S00_AXI_bid.bind(*p_43_S00_AXI_bid);
        p_43_S00_AXI_bid->set_sv_netview_offsetfromdp(10384392);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_43_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_43->S00_AXI_bresp.bind(*p_43_S00_AXI_bresp);
        p_43_S00_AXI_bresp->set_sv_netview_offsetfromdp(10384448);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_43_S00_AXI_buser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_43->S00_AXI_buser.bind(*p_43_S00_AXI_buser);
        p_43_S00_AXI_buser->set_sv_netview_offsetfromdp(10384504);
        xsim_sc_channel<0, bool > *p_43_S00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_43->S00_AXI_bvalid.bind(*p_43_S00_AXI_bvalid);
        p_43_S00_AXI_bvalid->set_sv_netview_offsetfromdp(10384560);
        xsim_sc_channel<0, bool > *p_43_S00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_43->S00_AXI_bready.bind(*p_43_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_43_S00_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_43_S00_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_43->S00_AXI_arid.bind(*p_43_S00_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_43_S00_AXI_arid);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_43_S00_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_43->S00_AXI_araddr.bind(*p_43_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_43_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_43_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_43->S00_AXI_arlen.bind(*p_43_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_43_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_43_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_43->S00_AXI_arsize.bind(*p_43_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_43_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_43_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_43->S00_AXI_arburst.bind(*p_43_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_43_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_43_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_43->S00_AXI_arlock.bind(*p_43_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_43_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_43_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_43->S00_AXI_arcache.bind(*p_43_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_43_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_43_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_43->S00_AXI_arprot.bind(*p_43_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_43_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_43_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_43->S00_AXI_arqos.bind(*p_43_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_43_S00_AXI_arqos);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_43_S00_AXI_aruser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_43->S00_AXI_aruser.bind(*p_43_S00_AXI_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_43_S00_AXI_aruser);
        xsim_sc_channel<0, bool > *p_43_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_43->S00_AXI_arvalid.bind(*p_43_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_43_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_43_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_43->S00_AXI_arready.bind(*p_43_S00_AXI_arready);
        p_43_S00_AXI_arready->set_sv_netview_offsetfromdp(10385288);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_43_S00_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_43->S00_AXI_rid.bind(*p_43_S00_AXI_rid);
        p_43_S00_AXI_rid->set_sv_netview_offsetfromdp(10385344);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_43_S00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_43->S00_AXI_rdata.bind(*p_43_S00_AXI_rdata);
        p_43_S00_AXI_rdata->set_sv_netview_offsetfromdp(10385400);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_43_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_43->S00_AXI_rresp.bind(*p_43_S00_AXI_rresp);
        p_43_S00_AXI_rresp->set_sv_netview_offsetfromdp(10385456);
        xsim_sc_channel<0, bool > *p_43_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_43->S00_AXI_rlast.bind(*p_43_S00_AXI_rlast);
        p_43_S00_AXI_rlast->set_sv_netview_offsetfromdp(10385512);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_43_S00_AXI_ruser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_43->S00_AXI_ruser.bind(*p_43_S00_AXI_ruser);
        p_43_S00_AXI_ruser->set_sv_netview_offsetfromdp(10385568);
        xsim_sc_channel<0, bool > *p_43_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_43->S00_AXI_rvalid.bind(*p_43_S00_AXI_rvalid);
        p_43_S00_AXI_rvalid->set_sv_netview_offsetfromdp(10385624);
        xsim_sc_channel<0, bool > *p_43_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_43->S00_AXI_rready.bind(*p_43_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_43_S00_AXI_rready);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_43_M00_AXI_awaddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_43->M00_AXI_awaddr.bind(*p_43_M00_AXI_awaddr);
        p_43_M00_AXI_awaddr->set_sv_netview_offsetfromdp(10385736);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_43_M00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_43->M00_AXI_awlen.bind(*p_43_M00_AXI_awlen);
        p_43_M00_AXI_awlen->set_sv_netview_offsetfromdp(10385792);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_43_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_43->M00_AXI_awsize.bind(*p_43_M00_AXI_awsize);
        p_43_M00_AXI_awsize->set_sv_netview_offsetfromdp(10385848);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_43_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_43->M00_AXI_awburst.bind(*p_43_M00_AXI_awburst);
        p_43_M00_AXI_awburst->set_sv_netview_offsetfromdp(10385904);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_43_M00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_43->M00_AXI_awlock.bind(*p_43_M00_AXI_awlock);
        p_43_M00_AXI_awlock->set_sv_netview_offsetfromdp(10385960);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_43_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_43->M00_AXI_awcache.bind(*p_43_M00_AXI_awcache);
        p_43_M00_AXI_awcache->set_sv_netview_offsetfromdp(10386016);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_43_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_43->M00_AXI_awprot.bind(*p_43_M00_AXI_awprot);
        p_43_M00_AXI_awprot->set_sv_netview_offsetfromdp(10386072);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_43_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_43->M00_AXI_awqos.bind(*p_43_M00_AXI_awqos);
        p_43_M00_AXI_awqos->set_sv_netview_offsetfromdp(10386128);
        xsim_sc_channel<0, bool > *p_43_M00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_43->M00_AXI_awvalid.bind(*p_43_M00_AXI_awvalid);
        p_43_M00_AXI_awvalid->set_sv_netview_offsetfromdp(10386184);
        xsim_sc_channel<0, bool > *p_43_M00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_43->M00_AXI_awready.bind(*p_43_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_43_M00_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_43_M00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_43->M00_AXI_wdata.bind(*p_43_M00_AXI_wdata);
        p_43_M00_AXI_wdata->set_sv_netview_offsetfromdp(10386296);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_43_M00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_43->M00_AXI_wstrb.bind(*p_43_M00_AXI_wstrb);
        p_43_M00_AXI_wstrb->set_sv_netview_offsetfromdp(10386352);
        xsim_sc_channel<0, bool > *p_43_M00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_43->M00_AXI_wlast.bind(*p_43_M00_AXI_wlast);
        p_43_M00_AXI_wlast->set_sv_netview_offsetfromdp(10386408);
        xsim_sc_channel<0, bool > *p_43_M00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_43->M00_AXI_wvalid.bind(*p_43_M00_AXI_wvalid);
        p_43_M00_AXI_wvalid->set_sv_netview_offsetfromdp(10386464);
        xsim_sc_channel<0, bool > *p_43_M00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_43->M00_AXI_wready.bind(*p_43_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_43_M00_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_43_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_43->M00_AXI_bresp.bind(*p_43_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_43_M00_AXI_bresp);
        xsim_sc_channel<0, bool > *p_43_M00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_43->M00_AXI_bvalid.bind(*p_43_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_43_M00_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_43_M00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_43->M00_AXI_bready.bind(*p_43_M00_AXI_bready);
        p_43_M00_AXI_bready->set_sv_netview_offsetfromdp(10386688);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_43_M00_AXI_araddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_43->M00_AXI_araddr.bind(*p_43_M00_AXI_araddr);
        p_43_M00_AXI_araddr->set_sv_netview_offsetfromdp(10386744);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_43_M00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_43->M00_AXI_arlen.bind(*p_43_M00_AXI_arlen);
        p_43_M00_AXI_arlen->set_sv_netview_offsetfromdp(10386800);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_43_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_43->M00_AXI_arsize.bind(*p_43_M00_AXI_arsize);
        p_43_M00_AXI_arsize->set_sv_netview_offsetfromdp(10386856);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_43_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_43->M00_AXI_arburst.bind(*p_43_M00_AXI_arburst);
        p_43_M00_AXI_arburst->set_sv_netview_offsetfromdp(10386912);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_43_M00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_43->M00_AXI_arlock.bind(*p_43_M00_AXI_arlock);
        p_43_M00_AXI_arlock->set_sv_netview_offsetfromdp(10386968);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_43_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_43->M00_AXI_arcache.bind(*p_43_M00_AXI_arcache);
        p_43_M00_AXI_arcache->set_sv_netview_offsetfromdp(10387024);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_43_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_43->M00_AXI_arprot.bind(*p_43_M00_AXI_arprot);
        p_43_M00_AXI_arprot->set_sv_netview_offsetfromdp(10387080);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_43_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_43->M00_AXI_arqos.bind(*p_43_M00_AXI_arqos);
        p_43_M00_AXI_arqos->set_sv_netview_offsetfromdp(10387136);
        xsim_sc_channel<0, bool > *p_43_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_43->M00_AXI_arvalid.bind(*p_43_M00_AXI_arvalid);
        p_43_M00_AXI_arvalid->set_sv_netview_offsetfromdp(10387192);
        xsim_sc_channel<0, bool > *p_43_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_43->M00_AXI_arready.bind(*p_43_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_43_M00_AXI_arready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_43_M00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_43->M00_AXI_rdata.bind(*p_43_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_43_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_43_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_43->M00_AXI_rresp.bind(*p_43_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_43_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_43_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_43->M00_AXI_rlast.bind(*p_43_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_43_M00_AXI_rlast);
        xsim_sc_channel<0, bool > *p_43_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_43->M00_AXI_rvalid.bind(*p_43_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_43_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_43_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_43->M00_AXI_rready.bind(*p_43_M00_AXI_rready);
        p_43_M00_AXI_rready->set_sv_netview_offsetfromdp(10387528);
        sc_inst_44 = new bd_d216_interconnect_PLRAM_MEM05_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.interconnect.interconnect_plram_mem05");
        sc_inst_44->xsim_set_dbg_index(2696);
        xsim_sc_channel<0, bool > *p_44_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_44->aclk.bind(*p_44_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_44_aclk);
        xsim_sc_channel<0, bool > *p_44_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_44->aresetn.bind(*p_44_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_44_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_44_S00_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_44->S00_AXI_awid.bind(*p_44_S00_AXI_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_44_S00_AXI_awid);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_44_S00_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_44->S00_AXI_awaddr.bind(*p_44_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_44_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_44_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_44->S00_AXI_awlen.bind(*p_44_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_44_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_44_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_44->S00_AXI_awsize.bind(*p_44_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_44_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_44_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_44->S00_AXI_awburst.bind(*p_44_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_44_S00_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_44_S00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_44->S00_AXI_awlock.bind(*p_44_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_44_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_44_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_44->S00_AXI_awcache.bind(*p_44_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_44_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_44_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_44->S00_AXI_awprot.bind(*p_44_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_44_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_44_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_44->S00_AXI_awqos.bind(*p_44_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_44_S00_AXI_awqos);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_44_S00_AXI_awuser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_44->S00_AXI_awuser.bind(*p_44_S00_AXI_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_44_S00_AXI_awuser);
        xsim_sc_channel<0, bool > *p_44_S00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_44->S00_AXI_awvalid.bind(*p_44_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_44_S00_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_44_S00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_44->S00_AXI_awready.bind(*p_44_S00_AXI_awready);
        p_44_S00_AXI_awready->set_sv_netview_offsetfromdp(10388360);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_44_S00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_44->S00_AXI_wdata.bind(*p_44_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_44_S00_AXI_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_44_S00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_44->S00_AXI_wstrb.bind(*p_44_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_44_S00_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_44_S00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_44->S00_AXI_wlast.bind(*p_44_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_44_S00_AXI_wlast);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_44_S00_AXI_wuser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_44->S00_AXI_wuser.bind(*p_44_S00_AXI_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_44_S00_AXI_wuser);
        xsim_sc_channel<0, bool > *p_44_S00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_44->S00_AXI_wvalid.bind(*p_44_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_44_S00_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_44_S00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_44->S00_AXI_wready.bind(*p_44_S00_AXI_wready);
        p_44_S00_AXI_wready->set_sv_netview_offsetfromdp(10388696);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_44_S00_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_44->S00_AXI_bid.bind(*p_44_S00_AXI_bid);
        p_44_S00_AXI_bid->set_sv_netview_offsetfromdp(10388752);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_44_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_44->S00_AXI_bresp.bind(*p_44_S00_AXI_bresp);
        p_44_S00_AXI_bresp->set_sv_netview_offsetfromdp(10388808);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_44_S00_AXI_buser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_44->S00_AXI_buser.bind(*p_44_S00_AXI_buser);
        p_44_S00_AXI_buser->set_sv_netview_offsetfromdp(10388864);
        xsim_sc_channel<0, bool > *p_44_S00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_44->S00_AXI_bvalid.bind(*p_44_S00_AXI_bvalid);
        p_44_S00_AXI_bvalid->set_sv_netview_offsetfromdp(10388920);
        xsim_sc_channel<0, bool > *p_44_S00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_44->S00_AXI_bready.bind(*p_44_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_44_S00_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_44_S00_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_44->S00_AXI_arid.bind(*p_44_S00_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_44_S00_AXI_arid);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_44_S00_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_44->S00_AXI_araddr.bind(*p_44_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_44_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_44_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_44->S00_AXI_arlen.bind(*p_44_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_44_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_44_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_44->S00_AXI_arsize.bind(*p_44_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_44_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_44_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_44->S00_AXI_arburst.bind(*p_44_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_44_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_44_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_44->S00_AXI_arlock.bind(*p_44_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_44_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_44_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_44->S00_AXI_arcache.bind(*p_44_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_44_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_44_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_44->S00_AXI_arprot.bind(*p_44_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_44_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_44_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_44->S00_AXI_arqos.bind(*p_44_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_44_S00_AXI_arqos);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_44_S00_AXI_aruser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_44->S00_AXI_aruser.bind(*p_44_S00_AXI_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_44_S00_AXI_aruser);
        xsim_sc_channel<0, bool > *p_44_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_44->S00_AXI_arvalid.bind(*p_44_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_44_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_44_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_44->S00_AXI_arready.bind(*p_44_S00_AXI_arready);
        p_44_S00_AXI_arready->set_sv_netview_offsetfromdp(10389648);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_44_S00_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_44->S00_AXI_rid.bind(*p_44_S00_AXI_rid);
        p_44_S00_AXI_rid->set_sv_netview_offsetfromdp(10389704);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_44_S00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_44->S00_AXI_rdata.bind(*p_44_S00_AXI_rdata);
        p_44_S00_AXI_rdata->set_sv_netview_offsetfromdp(10389760);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_44_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_44->S00_AXI_rresp.bind(*p_44_S00_AXI_rresp);
        p_44_S00_AXI_rresp->set_sv_netview_offsetfromdp(10389816);
        xsim_sc_channel<0, bool > *p_44_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_44->S00_AXI_rlast.bind(*p_44_S00_AXI_rlast);
        p_44_S00_AXI_rlast->set_sv_netview_offsetfromdp(10389872);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_44_S00_AXI_ruser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_44->S00_AXI_ruser.bind(*p_44_S00_AXI_ruser);
        p_44_S00_AXI_ruser->set_sv_netview_offsetfromdp(10389928);
        xsim_sc_channel<0, bool > *p_44_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_44->S00_AXI_rvalid.bind(*p_44_S00_AXI_rvalid);
        p_44_S00_AXI_rvalid->set_sv_netview_offsetfromdp(10389984);
        xsim_sc_channel<0, bool > *p_44_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_44->S00_AXI_rready.bind(*p_44_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_44_S00_AXI_rready);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_44_M00_AXI_awaddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_44->M00_AXI_awaddr.bind(*p_44_M00_AXI_awaddr);
        p_44_M00_AXI_awaddr->set_sv_netview_offsetfromdp(10390096);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_44_M00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_44->M00_AXI_awlen.bind(*p_44_M00_AXI_awlen);
        p_44_M00_AXI_awlen->set_sv_netview_offsetfromdp(10390152);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_44_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_44->M00_AXI_awsize.bind(*p_44_M00_AXI_awsize);
        p_44_M00_AXI_awsize->set_sv_netview_offsetfromdp(10390208);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_44_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_44->M00_AXI_awburst.bind(*p_44_M00_AXI_awburst);
        p_44_M00_AXI_awburst->set_sv_netview_offsetfromdp(10390264);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_44_M00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_44->M00_AXI_awlock.bind(*p_44_M00_AXI_awlock);
        p_44_M00_AXI_awlock->set_sv_netview_offsetfromdp(10390320);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_44_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_44->M00_AXI_awcache.bind(*p_44_M00_AXI_awcache);
        p_44_M00_AXI_awcache->set_sv_netview_offsetfromdp(10390376);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_44_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_44->M00_AXI_awprot.bind(*p_44_M00_AXI_awprot);
        p_44_M00_AXI_awprot->set_sv_netview_offsetfromdp(10390432);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_44_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_44->M00_AXI_awqos.bind(*p_44_M00_AXI_awqos);
        p_44_M00_AXI_awqos->set_sv_netview_offsetfromdp(10390488);
        xsim_sc_channel<0, bool > *p_44_M00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_44->M00_AXI_awvalid.bind(*p_44_M00_AXI_awvalid);
        p_44_M00_AXI_awvalid->set_sv_netview_offsetfromdp(10390544);
        xsim_sc_channel<0, bool > *p_44_M00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_44->M00_AXI_awready.bind(*p_44_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_44_M00_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_44_M00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_44->M00_AXI_wdata.bind(*p_44_M00_AXI_wdata);
        p_44_M00_AXI_wdata->set_sv_netview_offsetfromdp(10390656);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_44_M00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_44->M00_AXI_wstrb.bind(*p_44_M00_AXI_wstrb);
        p_44_M00_AXI_wstrb->set_sv_netview_offsetfromdp(10390712);
        xsim_sc_channel<0, bool > *p_44_M00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_44->M00_AXI_wlast.bind(*p_44_M00_AXI_wlast);
        p_44_M00_AXI_wlast->set_sv_netview_offsetfromdp(10390768);
        xsim_sc_channel<0, bool > *p_44_M00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_44->M00_AXI_wvalid.bind(*p_44_M00_AXI_wvalid);
        p_44_M00_AXI_wvalid->set_sv_netview_offsetfromdp(10390824);
        xsim_sc_channel<0, bool > *p_44_M00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_44->M00_AXI_wready.bind(*p_44_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_44_M00_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_44_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_44->M00_AXI_bresp.bind(*p_44_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_44_M00_AXI_bresp);
        xsim_sc_channel<0, bool > *p_44_M00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_44->M00_AXI_bvalid.bind(*p_44_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_44_M00_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_44_M00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_44->M00_AXI_bready.bind(*p_44_M00_AXI_bready);
        p_44_M00_AXI_bready->set_sv_netview_offsetfromdp(10391048);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_44_M00_AXI_araddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_44->M00_AXI_araddr.bind(*p_44_M00_AXI_araddr);
        p_44_M00_AXI_araddr->set_sv_netview_offsetfromdp(10391104);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_44_M00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_44->M00_AXI_arlen.bind(*p_44_M00_AXI_arlen);
        p_44_M00_AXI_arlen->set_sv_netview_offsetfromdp(10391160);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_44_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_44->M00_AXI_arsize.bind(*p_44_M00_AXI_arsize);
        p_44_M00_AXI_arsize->set_sv_netview_offsetfromdp(10391216);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_44_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_44->M00_AXI_arburst.bind(*p_44_M00_AXI_arburst);
        p_44_M00_AXI_arburst->set_sv_netview_offsetfromdp(10391272);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_44_M00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_44->M00_AXI_arlock.bind(*p_44_M00_AXI_arlock);
        p_44_M00_AXI_arlock->set_sv_netview_offsetfromdp(10391328);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_44_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_44->M00_AXI_arcache.bind(*p_44_M00_AXI_arcache);
        p_44_M00_AXI_arcache->set_sv_netview_offsetfromdp(10391384);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_44_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_44->M00_AXI_arprot.bind(*p_44_M00_AXI_arprot);
        p_44_M00_AXI_arprot->set_sv_netview_offsetfromdp(10391440);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_44_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_44->M00_AXI_arqos.bind(*p_44_M00_AXI_arqos);
        p_44_M00_AXI_arqos->set_sv_netview_offsetfromdp(10391496);
        xsim_sc_channel<0, bool > *p_44_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_44->M00_AXI_arvalid.bind(*p_44_M00_AXI_arvalid);
        p_44_M00_AXI_arvalid->set_sv_netview_offsetfromdp(10391552);
        xsim_sc_channel<0, bool > *p_44_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_44->M00_AXI_arready.bind(*p_44_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_44_M00_AXI_arready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_44_M00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_44->M00_AXI_rdata.bind(*p_44_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_44_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_44_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_44->M00_AXI_rresp.bind(*p_44_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_44_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_44_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_44->M00_AXI_rlast.bind(*p_44_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_44_M00_AXI_rlast);
        xsim_sc_channel<0, bool > *p_44_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_44->M00_AXI_rvalid.bind(*p_44_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_44_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_44_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_44->M00_AXI_rready.bind(*p_44_M00_AXI_rready);
        p_44_M00_AXI_rready->set_sv_netview_offsetfromdp(10391888);
        sc_inst_45 = new bd_d216_interconnect_S00_AXI_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.interconnect.interconnect_s00_axi");
        sc_inst_45->xsim_set_dbg_index(2697);
        xsim_sc_channel<0, bool > *p_45_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_45->aclk.bind(*p_45_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_45_aclk);
        xsim_sc_channel<0, bool > *p_45_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_45->aresetn.bind(*p_45_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_45_aresetn);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_45_S00_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_45->S00_AXI_awaddr.bind(*p_45_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_45_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_45_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_45->S00_AXI_awlen.bind(*p_45_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_45_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_45_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_45->S00_AXI_awsize.bind(*p_45_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_45_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_45_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_45->S00_AXI_awburst.bind(*p_45_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_45_S00_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_S00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->S00_AXI_awlock.bind(*p_45_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_45_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_45_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_45->S00_AXI_awcache.bind(*p_45_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_45_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_45_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_45->S00_AXI_awprot.bind(*p_45_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_45_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_45_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_45->S00_AXI_awqos.bind(*p_45_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_45_S00_AXI_awqos);
        xsim_sc_channel<0, bool > *p_45_S00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->S00_AXI_awvalid.bind(*p_45_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_45_S00_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_45_S00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_45->S00_AXI_awready.bind(*p_45_S00_AXI_awready);
        p_45_S00_AXI_awready->set_sv_netview_offsetfromdp(10392608);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_45_S00_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_45->S00_AXI_wdata.bind(*p_45_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_45_S00_AXI_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_45_S00_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_45->S00_AXI_wstrb.bind(*p_45_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_45_S00_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_45_S00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_45->S00_AXI_wlast.bind(*p_45_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_45_S00_AXI_wlast);
        xsim_sc_channel<0, bool > *p_45_S00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->S00_AXI_wvalid.bind(*p_45_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_45_S00_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_45_S00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_45->S00_AXI_wready.bind(*p_45_S00_AXI_wready);
        p_45_S00_AXI_wready->set_sv_netview_offsetfromdp(10392888);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_45_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_45->S00_AXI_bresp.bind(*p_45_S00_AXI_bresp);
        p_45_S00_AXI_bresp->set_sv_netview_offsetfromdp(10392944);
        xsim_sc_channel<0, bool > *p_45_S00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->S00_AXI_bvalid.bind(*p_45_S00_AXI_bvalid);
        p_45_S00_AXI_bvalid->set_sv_netview_offsetfromdp(10393000);
        xsim_sc_channel<0, bool > *p_45_S00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_45->S00_AXI_bready.bind(*p_45_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_45_S00_AXI_bready);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_45_S00_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_45->S00_AXI_araddr.bind(*p_45_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_45_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_45_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_45->S00_AXI_arlen.bind(*p_45_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_45_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_45_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_45->S00_AXI_arsize.bind(*p_45_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_45_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_45_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_45->S00_AXI_arburst.bind(*p_45_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_45_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->S00_AXI_arlock.bind(*p_45_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_45_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_45_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_45->S00_AXI_arcache.bind(*p_45_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_45_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_45_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_45->S00_AXI_arprot.bind(*p_45_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_45_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_45_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_45->S00_AXI_arqos.bind(*p_45_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_45_S00_AXI_arqos);
        xsim_sc_channel<0, bool > *p_45_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->S00_AXI_arvalid.bind(*p_45_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_45_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_45_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_45->S00_AXI_arready.bind(*p_45_S00_AXI_arready);
        p_45_S00_AXI_arready->set_sv_netview_offsetfromdp(10393616);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_45_S00_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_45->S00_AXI_rdata.bind(*p_45_S00_AXI_rdata);
        p_45_S00_AXI_rdata->set_sv_netview_offsetfromdp(10393672);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_45_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_45->S00_AXI_rresp.bind(*p_45_S00_AXI_rresp);
        p_45_S00_AXI_rresp->set_sv_netview_offsetfromdp(10393728);
        xsim_sc_channel<0, bool > *p_45_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_45->S00_AXI_rlast.bind(*p_45_S00_AXI_rlast);
        p_45_S00_AXI_rlast->set_sv_netview_offsetfromdp(10393784);
        xsim_sc_channel<0, bool > *p_45_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->S00_AXI_rvalid.bind(*p_45_S00_AXI_rvalid);
        p_45_S00_AXI_rvalid->set_sv_netview_offsetfromdp(10393840);
        xsim_sc_channel<0, bool > *p_45_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_45->S00_AXI_rready.bind(*p_45_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_45_S00_AXI_rready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_M00_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->M00_AXI_awid.bind(*p_45_M00_AXI_awid);
        p_45_M00_AXI_awid->set_sv_netview_offsetfromdp(10393952);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_45_M00_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_45->M00_AXI_awaddr.bind(*p_45_M00_AXI_awaddr);
        p_45_M00_AXI_awaddr->set_sv_netview_offsetfromdp(10394008);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_45_M00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_45->M00_AXI_awlen.bind(*p_45_M00_AXI_awlen);
        p_45_M00_AXI_awlen->set_sv_netview_offsetfromdp(10394064);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_45_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_45->M00_AXI_awsize.bind(*p_45_M00_AXI_awsize);
        p_45_M00_AXI_awsize->set_sv_netview_offsetfromdp(10394120);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_45_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_45->M00_AXI_awburst.bind(*p_45_M00_AXI_awburst);
        p_45_M00_AXI_awburst->set_sv_netview_offsetfromdp(10394176);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_M00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->M00_AXI_awlock.bind(*p_45_M00_AXI_awlock);
        p_45_M00_AXI_awlock->set_sv_netview_offsetfromdp(10394232);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_45_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_45->M00_AXI_awcache.bind(*p_45_M00_AXI_awcache);
        p_45_M00_AXI_awcache->set_sv_netview_offsetfromdp(10394288);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_45_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_45->M00_AXI_awprot.bind(*p_45_M00_AXI_awprot);
        p_45_M00_AXI_awprot->set_sv_netview_offsetfromdp(10394344);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_45_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_45->M00_AXI_awqos.bind(*p_45_M00_AXI_awqos);
        p_45_M00_AXI_awqos->set_sv_netview_offsetfromdp(10394400);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_45_M00_AXI_awuser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_45->M00_AXI_awuser.bind(*p_45_M00_AXI_awuser);
        p_45_M00_AXI_awuser->set_sv_netview_offsetfromdp(10394456);
        xsim_sc_channel<0, bool > *p_45_M00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->M00_AXI_awvalid.bind(*p_45_M00_AXI_awvalid);
        p_45_M00_AXI_awvalid->set_sv_netview_offsetfromdp(10394512);
        xsim_sc_channel<0, bool > *p_45_M00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_45->M00_AXI_awready.bind(*p_45_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M00_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_45_M00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_45->M00_AXI_wdata.bind(*p_45_M00_AXI_wdata);
        p_45_M00_AXI_wdata->set_sv_netview_offsetfromdp(10394624);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_45_M00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_45->M00_AXI_wstrb.bind(*p_45_M00_AXI_wstrb);
        p_45_M00_AXI_wstrb->set_sv_netview_offsetfromdp(10394680);
        xsim_sc_channel<0, bool > *p_45_M00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_45->M00_AXI_wlast.bind(*p_45_M00_AXI_wlast);
        p_45_M00_AXI_wlast->set_sv_netview_offsetfromdp(10394736);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_45_M00_AXI_wuser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_45->M00_AXI_wuser.bind(*p_45_M00_AXI_wuser);
        p_45_M00_AXI_wuser->set_sv_netview_offsetfromdp(10394792);
        xsim_sc_channel<0, bool > *p_45_M00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->M00_AXI_wvalid.bind(*p_45_M00_AXI_wvalid);
        p_45_M00_AXI_wvalid->set_sv_netview_offsetfromdp(10394848);
        xsim_sc_channel<0, bool > *p_45_M00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_45->M00_AXI_wready.bind(*p_45_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M00_AXI_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_M00_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->M00_AXI_bid.bind(*p_45_M00_AXI_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M00_AXI_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_45_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_45->M00_AXI_bresp.bind(*p_45_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M00_AXI_bresp);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_45_M00_AXI_buser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_45->M00_AXI_buser.bind(*p_45_M00_AXI_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M00_AXI_buser);
        xsim_sc_channel<0, bool > *p_45_M00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->M00_AXI_bvalid.bind(*p_45_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M00_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_45_M00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_45->M00_AXI_bready.bind(*p_45_M00_AXI_bready);
        p_45_M00_AXI_bready->set_sv_netview_offsetfromdp(10395184);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_M00_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->M00_AXI_arid.bind(*p_45_M00_AXI_arid);
        p_45_M00_AXI_arid->set_sv_netview_offsetfromdp(10395240);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_45_M00_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_45->M00_AXI_araddr.bind(*p_45_M00_AXI_araddr);
        p_45_M00_AXI_araddr->set_sv_netview_offsetfromdp(10395296);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_45_M00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_45->M00_AXI_arlen.bind(*p_45_M00_AXI_arlen);
        p_45_M00_AXI_arlen->set_sv_netview_offsetfromdp(10395352);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_45_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_45->M00_AXI_arsize.bind(*p_45_M00_AXI_arsize);
        p_45_M00_AXI_arsize->set_sv_netview_offsetfromdp(10395408);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_45_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_45->M00_AXI_arburst.bind(*p_45_M00_AXI_arburst);
        p_45_M00_AXI_arburst->set_sv_netview_offsetfromdp(10395464);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_M00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->M00_AXI_arlock.bind(*p_45_M00_AXI_arlock);
        p_45_M00_AXI_arlock->set_sv_netview_offsetfromdp(10395520);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_45_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_45->M00_AXI_arcache.bind(*p_45_M00_AXI_arcache);
        p_45_M00_AXI_arcache->set_sv_netview_offsetfromdp(10395576);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_45_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_45->M00_AXI_arprot.bind(*p_45_M00_AXI_arprot);
        p_45_M00_AXI_arprot->set_sv_netview_offsetfromdp(10395632);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_45_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_45->M00_AXI_arqos.bind(*p_45_M00_AXI_arqos);
        p_45_M00_AXI_arqos->set_sv_netview_offsetfromdp(10395688);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_45_M00_AXI_aruser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_45->M00_AXI_aruser.bind(*p_45_M00_AXI_aruser);
        p_45_M00_AXI_aruser->set_sv_netview_offsetfromdp(10395744);
        xsim_sc_channel<0, bool > *p_45_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->M00_AXI_arvalid.bind(*p_45_M00_AXI_arvalid);
        p_45_M00_AXI_arvalid->set_sv_netview_offsetfromdp(10395800);
        xsim_sc_channel<0, bool > *p_45_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_45->M00_AXI_arready.bind(*p_45_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M00_AXI_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_M00_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->M00_AXI_rid.bind(*p_45_M00_AXI_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M00_AXI_rid);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_45_M00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_45->M00_AXI_rdata.bind(*p_45_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_45_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_45->M00_AXI_rresp.bind(*p_45_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_45_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_45->M00_AXI_rlast.bind(*p_45_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M00_AXI_rlast);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_45_M00_AXI_ruser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_45->M00_AXI_ruser.bind(*p_45_M00_AXI_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M00_AXI_ruser);
        xsim_sc_channel<0, bool > *p_45_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->M00_AXI_rvalid.bind(*p_45_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_45_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_45->M00_AXI_rready.bind(*p_45_M00_AXI_rready);
        p_45_M00_AXI_rready->set_sv_netview_offsetfromdp(10396248);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_M01_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->M01_AXI_awid.bind(*p_45_M01_AXI_awid);
        p_45_M01_AXI_awid->set_sv_netview_offsetfromdp(10396304);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_45_M01_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_45->M01_AXI_awaddr.bind(*p_45_M01_AXI_awaddr);
        p_45_M01_AXI_awaddr->set_sv_netview_offsetfromdp(10396360);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_45_M01_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_45->M01_AXI_awlen.bind(*p_45_M01_AXI_awlen);
        p_45_M01_AXI_awlen->set_sv_netview_offsetfromdp(10396416);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_45_M01_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_45->M01_AXI_awsize.bind(*p_45_M01_AXI_awsize);
        p_45_M01_AXI_awsize->set_sv_netview_offsetfromdp(10396472);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_45_M01_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_45->M01_AXI_awburst.bind(*p_45_M01_AXI_awburst);
        p_45_M01_AXI_awburst->set_sv_netview_offsetfromdp(10396528);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_M01_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->M01_AXI_awlock.bind(*p_45_M01_AXI_awlock);
        p_45_M01_AXI_awlock->set_sv_netview_offsetfromdp(10396584);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_45_M01_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_45->M01_AXI_awcache.bind(*p_45_M01_AXI_awcache);
        p_45_M01_AXI_awcache->set_sv_netview_offsetfromdp(10396640);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_45_M01_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_45->M01_AXI_awprot.bind(*p_45_M01_AXI_awprot);
        p_45_M01_AXI_awprot->set_sv_netview_offsetfromdp(10396696);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_45_M01_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_45->M01_AXI_awqos.bind(*p_45_M01_AXI_awqos);
        p_45_M01_AXI_awqos->set_sv_netview_offsetfromdp(10396752);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_45_M01_AXI_awuser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_45->M01_AXI_awuser.bind(*p_45_M01_AXI_awuser);
        p_45_M01_AXI_awuser->set_sv_netview_offsetfromdp(10396808);
        xsim_sc_channel<0, bool > *p_45_M01_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->M01_AXI_awvalid.bind(*p_45_M01_AXI_awvalid);
        p_45_M01_AXI_awvalid->set_sv_netview_offsetfromdp(10396864);
        xsim_sc_channel<0, bool > *p_45_M01_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_45->M01_AXI_awready.bind(*p_45_M01_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M01_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_45_M01_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_45->M01_AXI_wdata.bind(*p_45_M01_AXI_wdata);
        p_45_M01_AXI_wdata->set_sv_netview_offsetfromdp(10396976);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_45_M01_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_45->M01_AXI_wstrb.bind(*p_45_M01_AXI_wstrb);
        p_45_M01_AXI_wstrb->set_sv_netview_offsetfromdp(10397032);
        xsim_sc_channel<0, bool > *p_45_M01_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_45->M01_AXI_wlast.bind(*p_45_M01_AXI_wlast);
        p_45_M01_AXI_wlast->set_sv_netview_offsetfromdp(10397088);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_45_M01_AXI_wuser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_45->M01_AXI_wuser.bind(*p_45_M01_AXI_wuser);
        p_45_M01_AXI_wuser->set_sv_netview_offsetfromdp(10397144);
        xsim_sc_channel<0, bool > *p_45_M01_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->M01_AXI_wvalid.bind(*p_45_M01_AXI_wvalid);
        p_45_M01_AXI_wvalid->set_sv_netview_offsetfromdp(10397200);
        xsim_sc_channel<0, bool > *p_45_M01_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_45->M01_AXI_wready.bind(*p_45_M01_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M01_AXI_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_M01_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->M01_AXI_bid.bind(*p_45_M01_AXI_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M01_AXI_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_45_M01_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_45->M01_AXI_bresp.bind(*p_45_M01_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M01_AXI_bresp);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_45_M01_AXI_buser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_45->M01_AXI_buser.bind(*p_45_M01_AXI_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M01_AXI_buser);
        xsim_sc_channel<0, bool > *p_45_M01_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->M01_AXI_bvalid.bind(*p_45_M01_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M01_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_45_M01_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_45->M01_AXI_bready.bind(*p_45_M01_AXI_bready);
        p_45_M01_AXI_bready->set_sv_netview_offsetfromdp(10397536);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_M01_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->M01_AXI_arid.bind(*p_45_M01_AXI_arid);
        p_45_M01_AXI_arid->set_sv_netview_offsetfromdp(10397592);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_45_M01_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_45->M01_AXI_araddr.bind(*p_45_M01_AXI_araddr);
        p_45_M01_AXI_araddr->set_sv_netview_offsetfromdp(10397648);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_45_M01_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_45->M01_AXI_arlen.bind(*p_45_M01_AXI_arlen);
        p_45_M01_AXI_arlen->set_sv_netview_offsetfromdp(10397704);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_45_M01_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_45->M01_AXI_arsize.bind(*p_45_M01_AXI_arsize);
        p_45_M01_AXI_arsize->set_sv_netview_offsetfromdp(10397760);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_45_M01_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_45->M01_AXI_arburst.bind(*p_45_M01_AXI_arburst);
        p_45_M01_AXI_arburst->set_sv_netview_offsetfromdp(10397816);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_M01_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->M01_AXI_arlock.bind(*p_45_M01_AXI_arlock);
        p_45_M01_AXI_arlock->set_sv_netview_offsetfromdp(10397872);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_45_M01_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_45->M01_AXI_arcache.bind(*p_45_M01_AXI_arcache);
        p_45_M01_AXI_arcache->set_sv_netview_offsetfromdp(10397928);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_45_M01_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_45->M01_AXI_arprot.bind(*p_45_M01_AXI_arprot);
        p_45_M01_AXI_arprot->set_sv_netview_offsetfromdp(10397984);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_45_M01_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_45->M01_AXI_arqos.bind(*p_45_M01_AXI_arqos);
        p_45_M01_AXI_arqos->set_sv_netview_offsetfromdp(10398040);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_45_M01_AXI_aruser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_45->M01_AXI_aruser.bind(*p_45_M01_AXI_aruser);
        p_45_M01_AXI_aruser->set_sv_netview_offsetfromdp(10398096);
        xsim_sc_channel<0, bool > *p_45_M01_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->M01_AXI_arvalid.bind(*p_45_M01_AXI_arvalid);
        p_45_M01_AXI_arvalid->set_sv_netview_offsetfromdp(10398152);
        xsim_sc_channel<0, bool > *p_45_M01_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_45->M01_AXI_arready.bind(*p_45_M01_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M01_AXI_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_M01_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->M01_AXI_rid.bind(*p_45_M01_AXI_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M01_AXI_rid);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_45_M01_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_45->M01_AXI_rdata.bind(*p_45_M01_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M01_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_45_M01_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_45->M01_AXI_rresp.bind(*p_45_M01_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M01_AXI_rresp);
        xsim_sc_channel<0, bool > *p_45_M01_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_45->M01_AXI_rlast.bind(*p_45_M01_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M01_AXI_rlast);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_45_M01_AXI_ruser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_45->M01_AXI_ruser.bind(*p_45_M01_AXI_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M01_AXI_ruser);
        xsim_sc_channel<0, bool > *p_45_M01_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->M01_AXI_rvalid.bind(*p_45_M01_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M01_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_45_M01_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_45->M01_AXI_rready.bind(*p_45_M01_AXI_rready);
        p_45_M01_AXI_rready->set_sv_netview_offsetfromdp(10398600);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_M02_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->M02_AXI_awid.bind(*p_45_M02_AXI_awid);
        p_45_M02_AXI_awid->set_sv_netview_offsetfromdp(10398656);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_45_M02_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_45->M02_AXI_awaddr.bind(*p_45_M02_AXI_awaddr);
        p_45_M02_AXI_awaddr->set_sv_netview_offsetfromdp(10398712);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_45_M02_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_45->M02_AXI_awlen.bind(*p_45_M02_AXI_awlen);
        p_45_M02_AXI_awlen->set_sv_netview_offsetfromdp(10398768);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_45_M02_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_45->M02_AXI_awsize.bind(*p_45_M02_AXI_awsize);
        p_45_M02_AXI_awsize->set_sv_netview_offsetfromdp(10398824);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_45_M02_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_45->M02_AXI_awburst.bind(*p_45_M02_AXI_awburst);
        p_45_M02_AXI_awburst->set_sv_netview_offsetfromdp(10398880);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_M02_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->M02_AXI_awlock.bind(*p_45_M02_AXI_awlock);
        p_45_M02_AXI_awlock->set_sv_netview_offsetfromdp(10398936);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_45_M02_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_45->M02_AXI_awcache.bind(*p_45_M02_AXI_awcache);
        p_45_M02_AXI_awcache->set_sv_netview_offsetfromdp(10398992);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_45_M02_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_45->M02_AXI_awprot.bind(*p_45_M02_AXI_awprot);
        p_45_M02_AXI_awprot->set_sv_netview_offsetfromdp(10399048);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_45_M02_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_45->M02_AXI_awqos.bind(*p_45_M02_AXI_awqos);
        p_45_M02_AXI_awqos->set_sv_netview_offsetfromdp(10399104);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_45_M02_AXI_awuser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_45->M02_AXI_awuser.bind(*p_45_M02_AXI_awuser);
        p_45_M02_AXI_awuser->set_sv_netview_offsetfromdp(10399160);
        xsim_sc_channel<0, bool > *p_45_M02_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->M02_AXI_awvalid.bind(*p_45_M02_AXI_awvalid);
        p_45_M02_AXI_awvalid->set_sv_netview_offsetfromdp(10399216);
        xsim_sc_channel<0, bool > *p_45_M02_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_45->M02_AXI_awready.bind(*p_45_M02_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M02_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_45_M02_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_45->M02_AXI_wdata.bind(*p_45_M02_AXI_wdata);
        p_45_M02_AXI_wdata->set_sv_netview_offsetfromdp(10399328);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_45_M02_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_45->M02_AXI_wstrb.bind(*p_45_M02_AXI_wstrb);
        p_45_M02_AXI_wstrb->set_sv_netview_offsetfromdp(10399384);
        xsim_sc_channel<0, bool > *p_45_M02_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_45->M02_AXI_wlast.bind(*p_45_M02_AXI_wlast);
        p_45_M02_AXI_wlast->set_sv_netview_offsetfromdp(10399440);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_45_M02_AXI_wuser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_45->M02_AXI_wuser.bind(*p_45_M02_AXI_wuser);
        p_45_M02_AXI_wuser->set_sv_netview_offsetfromdp(10399496);
        xsim_sc_channel<0, bool > *p_45_M02_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->M02_AXI_wvalid.bind(*p_45_M02_AXI_wvalid);
        p_45_M02_AXI_wvalid->set_sv_netview_offsetfromdp(10399552);
        xsim_sc_channel<0, bool > *p_45_M02_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_45->M02_AXI_wready.bind(*p_45_M02_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M02_AXI_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_M02_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->M02_AXI_bid.bind(*p_45_M02_AXI_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M02_AXI_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_45_M02_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_45->M02_AXI_bresp.bind(*p_45_M02_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M02_AXI_bresp);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_45_M02_AXI_buser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_45->M02_AXI_buser.bind(*p_45_M02_AXI_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M02_AXI_buser);
        xsim_sc_channel<0, bool > *p_45_M02_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->M02_AXI_bvalid.bind(*p_45_M02_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M02_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_45_M02_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_45->M02_AXI_bready.bind(*p_45_M02_AXI_bready);
        p_45_M02_AXI_bready->set_sv_netview_offsetfromdp(10399888);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_M02_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->M02_AXI_arid.bind(*p_45_M02_AXI_arid);
        p_45_M02_AXI_arid->set_sv_netview_offsetfromdp(10399944);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_45_M02_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_45->M02_AXI_araddr.bind(*p_45_M02_AXI_araddr);
        p_45_M02_AXI_araddr->set_sv_netview_offsetfromdp(10400000);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_45_M02_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_45->M02_AXI_arlen.bind(*p_45_M02_AXI_arlen);
        p_45_M02_AXI_arlen->set_sv_netview_offsetfromdp(10400056);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_45_M02_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_45->M02_AXI_arsize.bind(*p_45_M02_AXI_arsize);
        p_45_M02_AXI_arsize->set_sv_netview_offsetfromdp(10400112);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_45_M02_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_45->M02_AXI_arburst.bind(*p_45_M02_AXI_arburst);
        p_45_M02_AXI_arburst->set_sv_netview_offsetfromdp(10400168);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_M02_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->M02_AXI_arlock.bind(*p_45_M02_AXI_arlock);
        p_45_M02_AXI_arlock->set_sv_netview_offsetfromdp(10400224);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_45_M02_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_45->M02_AXI_arcache.bind(*p_45_M02_AXI_arcache);
        p_45_M02_AXI_arcache->set_sv_netview_offsetfromdp(10400280);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_45_M02_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_45->M02_AXI_arprot.bind(*p_45_M02_AXI_arprot);
        p_45_M02_AXI_arprot->set_sv_netview_offsetfromdp(10400336);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_45_M02_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_45->M02_AXI_arqos.bind(*p_45_M02_AXI_arqos);
        p_45_M02_AXI_arqos->set_sv_netview_offsetfromdp(10400392);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_45_M02_AXI_aruser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_45->M02_AXI_aruser.bind(*p_45_M02_AXI_aruser);
        p_45_M02_AXI_aruser->set_sv_netview_offsetfromdp(10400448);
        xsim_sc_channel<0, bool > *p_45_M02_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->M02_AXI_arvalid.bind(*p_45_M02_AXI_arvalid);
        p_45_M02_AXI_arvalid->set_sv_netview_offsetfromdp(10400504);
        xsim_sc_channel<0, bool > *p_45_M02_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_45->M02_AXI_arready.bind(*p_45_M02_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M02_AXI_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_M02_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->M02_AXI_rid.bind(*p_45_M02_AXI_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M02_AXI_rid);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_45_M02_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_45->M02_AXI_rdata.bind(*p_45_M02_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M02_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_45_M02_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_45->M02_AXI_rresp.bind(*p_45_M02_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M02_AXI_rresp);
        xsim_sc_channel<0, bool > *p_45_M02_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_45->M02_AXI_rlast.bind(*p_45_M02_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M02_AXI_rlast);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_45_M02_AXI_ruser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_45->M02_AXI_ruser.bind(*p_45_M02_AXI_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M02_AXI_ruser);
        xsim_sc_channel<0, bool > *p_45_M02_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->M02_AXI_rvalid.bind(*p_45_M02_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M02_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_45_M02_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_45->M02_AXI_rready.bind(*p_45_M02_AXI_rready);
        p_45_M02_AXI_rready->set_sv_netview_offsetfromdp(10400952);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_M03_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->M03_AXI_awid.bind(*p_45_M03_AXI_awid);
        p_45_M03_AXI_awid->set_sv_netview_offsetfromdp(10401008);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_45_M03_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_45->M03_AXI_awaddr.bind(*p_45_M03_AXI_awaddr);
        p_45_M03_AXI_awaddr->set_sv_netview_offsetfromdp(10401064);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_45_M03_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_45->M03_AXI_awlen.bind(*p_45_M03_AXI_awlen);
        p_45_M03_AXI_awlen->set_sv_netview_offsetfromdp(10401120);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_45_M03_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_45->M03_AXI_awsize.bind(*p_45_M03_AXI_awsize);
        p_45_M03_AXI_awsize->set_sv_netview_offsetfromdp(10401176);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_45_M03_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_45->M03_AXI_awburst.bind(*p_45_M03_AXI_awburst);
        p_45_M03_AXI_awburst->set_sv_netview_offsetfromdp(10401232);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_M03_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->M03_AXI_awlock.bind(*p_45_M03_AXI_awlock);
        p_45_M03_AXI_awlock->set_sv_netview_offsetfromdp(10401288);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_45_M03_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_45->M03_AXI_awcache.bind(*p_45_M03_AXI_awcache);
        p_45_M03_AXI_awcache->set_sv_netview_offsetfromdp(10401344);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_45_M03_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_45->M03_AXI_awprot.bind(*p_45_M03_AXI_awprot);
        p_45_M03_AXI_awprot->set_sv_netview_offsetfromdp(10401400);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_45_M03_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_45->M03_AXI_awqos.bind(*p_45_M03_AXI_awqos);
        p_45_M03_AXI_awqos->set_sv_netview_offsetfromdp(10401456);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_45_M03_AXI_awuser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_45->M03_AXI_awuser.bind(*p_45_M03_AXI_awuser);
        p_45_M03_AXI_awuser->set_sv_netview_offsetfromdp(10401512);
        xsim_sc_channel<0, bool > *p_45_M03_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->M03_AXI_awvalid.bind(*p_45_M03_AXI_awvalid);
        p_45_M03_AXI_awvalid->set_sv_netview_offsetfromdp(10401568);
        xsim_sc_channel<0, bool > *p_45_M03_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_45->M03_AXI_awready.bind(*p_45_M03_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M03_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_45_M03_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_45->M03_AXI_wdata.bind(*p_45_M03_AXI_wdata);
        p_45_M03_AXI_wdata->set_sv_netview_offsetfromdp(10401680);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_45_M03_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_45->M03_AXI_wstrb.bind(*p_45_M03_AXI_wstrb);
        p_45_M03_AXI_wstrb->set_sv_netview_offsetfromdp(10401736);
        xsim_sc_channel<0, bool > *p_45_M03_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_45->M03_AXI_wlast.bind(*p_45_M03_AXI_wlast);
        p_45_M03_AXI_wlast->set_sv_netview_offsetfromdp(10401792);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_45_M03_AXI_wuser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_45->M03_AXI_wuser.bind(*p_45_M03_AXI_wuser);
        p_45_M03_AXI_wuser->set_sv_netview_offsetfromdp(10401848);
        xsim_sc_channel<0, bool > *p_45_M03_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->M03_AXI_wvalid.bind(*p_45_M03_AXI_wvalid);
        p_45_M03_AXI_wvalid->set_sv_netview_offsetfromdp(10401904);
        xsim_sc_channel<0, bool > *p_45_M03_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_45->M03_AXI_wready.bind(*p_45_M03_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M03_AXI_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_M03_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->M03_AXI_bid.bind(*p_45_M03_AXI_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M03_AXI_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_45_M03_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_45->M03_AXI_bresp.bind(*p_45_M03_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M03_AXI_bresp);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_45_M03_AXI_buser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_45->M03_AXI_buser.bind(*p_45_M03_AXI_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M03_AXI_buser);
        xsim_sc_channel<0, bool > *p_45_M03_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->M03_AXI_bvalid.bind(*p_45_M03_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M03_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_45_M03_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_45->M03_AXI_bready.bind(*p_45_M03_AXI_bready);
        p_45_M03_AXI_bready->set_sv_netview_offsetfromdp(10402240);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_M03_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->M03_AXI_arid.bind(*p_45_M03_AXI_arid);
        p_45_M03_AXI_arid->set_sv_netview_offsetfromdp(10402296);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_45_M03_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_45->M03_AXI_araddr.bind(*p_45_M03_AXI_araddr);
        p_45_M03_AXI_araddr->set_sv_netview_offsetfromdp(10402352);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_45_M03_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_45->M03_AXI_arlen.bind(*p_45_M03_AXI_arlen);
        p_45_M03_AXI_arlen->set_sv_netview_offsetfromdp(10402408);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_45_M03_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_45->M03_AXI_arsize.bind(*p_45_M03_AXI_arsize);
        p_45_M03_AXI_arsize->set_sv_netview_offsetfromdp(10402464);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_45_M03_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_45->M03_AXI_arburst.bind(*p_45_M03_AXI_arburst);
        p_45_M03_AXI_arburst->set_sv_netview_offsetfromdp(10402520);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_M03_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->M03_AXI_arlock.bind(*p_45_M03_AXI_arlock);
        p_45_M03_AXI_arlock->set_sv_netview_offsetfromdp(10402576);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_45_M03_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_45->M03_AXI_arcache.bind(*p_45_M03_AXI_arcache);
        p_45_M03_AXI_arcache->set_sv_netview_offsetfromdp(10402632);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_45_M03_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_45->M03_AXI_arprot.bind(*p_45_M03_AXI_arprot);
        p_45_M03_AXI_arprot->set_sv_netview_offsetfromdp(10402688);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_45_M03_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_45->M03_AXI_arqos.bind(*p_45_M03_AXI_arqos);
        p_45_M03_AXI_arqos->set_sv_netview_offsetfromdp(10402744);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_45_M03_AXI_aruser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_45->M03_AXI_aruser.bind(*p_45_M03_AXI_aruser);
        p_45_M03_AXI_aruser->set_sv_netview_offsetfromdp(10402800);
        xsim_sc_channel<0, bool > *p_45_M03_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->M03_AXI_arvalid.bind(*p_45_M03_AXI_arvalid);
        p_45_M03_AXI_arvalid->set_sv_netview_offsetfromdp(10402856);
        xsim_sc_channel<0, bool > *p_45_M03_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_45->M03_AXI_arready.bind(*p_45_M03_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M03_AXI_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_M03_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->M03_AXI_rid.bind(*p_45_M03_AXI_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M03_AXI_rid);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_45_M03_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_45->M03_AXI_rdata.bind(*p_45_M03_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M03_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_45_M03_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_45->M03_AXI_rresp.bind(*p_45_M03_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M03_AXI_rresp);
        xsim_sc_channel<0, bool > *p_45_M03_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_45->M03_AXI_rlast.bind(*p_45_M03_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M03_AXI_rlast);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_45_M03_AXI_ruser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_45->M03_AXI_ruser.bind(*p_45_M03_AXI_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M03_AXI_ruser);
        xsim_sc_channel<0, bool > *p_45_M03_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->M03_AXI_rvalid.bind(*p_45_M03_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M03_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_45_M03_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_45->M03_AXI_rready.bind(*p_45_M03_AXI_rready);
        p_45_M03_AXI_rready->set_sv_netview_offsetfromdp(10403304);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_M04_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->M04_AXI_awid.bind(*p_45_M04_AXI_awid);
        p_45_M04_AXI_awid->set_sv_netview_offsetfromdp(10403360);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_45_M04_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_45->M04_AXI_awaddr.bind(*p_45_M04_AXI_awaddr);
        p_45_M04_AXI_awaddr->set_sv_netview_offsetfromdp(10403416);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_45_M04_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_45->M04_AXI_awlen.bind(*p_45_M04_AXI_awlen);
        p_45_M04_AXI_awlen->set_sv_netview_offsetfromdp(10403472);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_45_M04_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_45->M04_AXI_awsize.bind(*p_45_M04_AXI_awsize);
        p_45_M04_AXI_awsize->set_sv_netview_offsetfromdp(10403528);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_45_M04_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_45->M04_AXI_awburst.bind(*p_45_M04_AXI_awburst);
        p_45_M04_AXI_awburst->set_sv_netview_offsetfromdp(10403584);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_M04_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->M04_AXI_awlock.bind(*p_45_M04_AXI_awlock);
        p_45_M04_AXI_awlock->set_sv_netview_offsetfromdp(10403640);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_45_M04_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_45->M04_AXI_awcache.bind(*p_45_M04_AXI_awcache);
        p_45_M04_AXI_awcache->set_sv_netview_offsetfromdp(10403696);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_45_M04_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_45->M04_AXI_awprot.bind(*p_45_M04_AXI_awprot);
        p_45_M04_AXI_awprot->set_sv_netview_offsetfromdp(10403752);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_45_M04_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_45->M04_AXI_awqos.bind(*p_45_M04_AXI_awqos);
        p_45_M04_AXI_awqos->set_sv_netview_offsetfromdp(10403808);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_45_M04_AXI_awuser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_45->M04_AXI_awuser.bind(*p_45_M04_AXI_awuser);
        p_45_M04_AXI_awuser->set_sv_netview_offsetfromdp(10403864);
        xsim_sc_channel<0, bool > *p_45_M04_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->M04_AXI_awvalid.bind(*p_45_M04_AXI_awvalid);
        p_45_M04_AXI_awvalid->set_sv_netview_offsetfromdp(10403920);
        xsim_sc_channel<0, bool > *p_45_M04_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_45->M04_AXI_awready.bind(*p_45_M04_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M04_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_45_M04_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_45->M04_AXI_wdata.bind(*p_45_M04_AXI_wdata);
        p_45_M04_AXI_wdata->set_sv_netview_offsetfromdp(10404032);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_45_M04_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_45->M04_AXI_wstrb.bind(*p_45_M04_AXI_wstrb);
        p_45_M04_AXI_wstrb->set_sv_netview_offsetfromdp(10404088);
        xsim_sc_channel<0, bool > *p_45_M04_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_45->M04_AXI_wlast.bind(*p_45_M04_AXI_wlast);
        p_45_M04_AXI_wlast->set_sv_netview_offsetfromdp(10404144);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_45_M04_AXI_wuser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_45->M04_AXI_wuser.bind(*p_45_M04_AXI_wuser);
        p_45_M04_AXI_wuser->set_sv_netview_offsetfromdp(10404200);
        xsim_sc_channel<0, bool > *p_45_M04_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->M04_AXI_wvalid.bind(*p_45_M04_AXI_wvalid);
        p_45_M04_AXI_wvalid->set_sv_netview_offsetfromdp(10404256);
        xsim_sc_channel<0, bool > *p_45_M04_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_45->M04_AXI_wready.bind(*p_45_M04_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M04_AXI_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_M04_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->M04_AXI_bid.bind(*p_45_M04_AXI_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M04_AXI_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_45_M04_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_45->M04_AXI_bresp.bind(*p_45_M04_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M04_AXI_bresp);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_45_M04_AXI_buser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_45->M04_AXI_buser.bind(*p_45_M04_AXI_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M04_AXI_buser);
        xsim_sc_channel<0, bool > *p_45_M04_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->M04_AXI_bvalid.bind(*p_45_M04_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M04_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_45_M04_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_45->M04_AXI_bready.bind(*p_45_M04_AXI_bready);
        p_45_M04_AXI_bready->set_sv_netview_offsetfromdp(10404592);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_M04_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->M04_AXI_arid.bind(*p_45_M04_AXI_arid);
        p_45_M04_AXI_arid->set_sv_netview_offsetfromdp(10404648);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_45_M04_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_45->M04_AXI_araddr.bind(*p_45_M04_AXI_araddr);
        p_45_M04_AXI_araddr->set_sv_netview_offsetfromdp(10404704);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_45_M04_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_45->M04_AXI_arlen.bind(*p_45_M04_AXI_arlen);
        p_45_M04_AXI_arlen->set_sv_netview_offsetfromdp(10404760);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_45_M04_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_45->M04_AXI_arsize.bind(*p_45_M04_AXI_arsize);
        p_45_M04_AXI_arsize->set_sv_netview_offsetfromdp(10404816);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_45_M04_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_45->M04_AXI_arburst.bind(*p_45_M04_AXI_arburst);
        p_45_M04_AXI_arburst->set_sv_netview_offsetfromdp(10404872);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_M04_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->M04_AXI_arlock.bind(*p_45_M04_AXI_arlock);
        p_45_M04_AXI_arlock->set_sv_netview_offsetfromdp(10404928);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_45_M04_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_45->M04_AXI_arcache.bind(*p_45_M04_AXI_arcache);
        p_45_M04_AXI_arcache->set_sv_netview_offsetfromdp(10404984);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_45_M04_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_45->M04_AXI_arprot.bind(*p_45_M04_AXI_arprot);
        p_45_M04_AXI_arprot->set_sv_netview_offsetfromdp(10405040);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_45_M04_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_45->M04_AXI_arqos.bind(*p_45_M04_AXI_arqos);
        p_45_M04_AXI_arqos->set_sv_netview_offsetfromdp(10405096);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_45_M04_AXI_aruser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_45->M04_AXI_aruser.bind(*p_45_M04_AXI_aruser);
        p_45_M04_AXI_aruser->set_sv_netview_offsetfromdp(10405152);
        xsim_sc_channel<0, bool > *p_45_M04_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->M04_AXI_arvalid.bind(*p_45_M04_AXI_arvalid);
        p_45_M04_AXI_arvalid->set_sv_netview_offsetfromdp(10405208);
        xsim_sc_channel<0, bool > *p_45_M04_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_45->M04_AXI_arready.bind(*p_45_M04_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M04_AXI_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_M04_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->M04_AXI_rid.bind(*p_45_M04_AXI_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M04_AXI_rid);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_45_M04_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_45->M04_AXI_rdata.bind(*p_45_M04_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M04_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_45_M04_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_45->M04_AXI_rresp.bind(*p_45_M04_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M04_AXI_rresp);
        xsim_sc_channel<0, bool > *p_45_M04_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_45->M04_AXI_rlast.bind(*p_45_M04_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M04_AXI_rlast);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_45_M04_AXI_ruser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_45->M04_AXI_ruser.bind(*p_45_M04_AXI_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M04_AXI_ruser);
        xsim_sc_channel<0, bool > *p_45_M04_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->M04_AXI_rvalid.bind(*p_45_M04_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M04_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_45_M04_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_45->M04_AXI_rready.bind(*p_45_M04_AXI_rready);
        p_45_M04_AXI_rready->set_sv_netview_offsetfromdp(10405656);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_M05_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->M05_AXI_awid.bind(*p_45_M05_AXI_awid);
        p_45_M05_AXI_awid->set_sv_netview_offsetfromdp(10405712);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_45_M05_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_45->M05_AXI_awaddr.bind(*p_45_M05_AXI_awaddr);
        p_45_M05_AXI_awaddr->set_sv_netview_offsetfromdp(10405768);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_45_M05_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_45->M05_AXI_awlen.bind(*p_45_M05_AXI_awlen);
        p_45_M05_AXI_awlen->set_sv_netview_offsetfromdp(10405824);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_45_M05_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_45->M05_AXI_awsize.bind(*p_45_M05_AXI_awsize);
        p_45_M05_AXI_awsize->set_sv_netview_offsetfromdp(10405880);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_45_M05_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_45->M05_AXI_awburst.bind(*p_45_M05_AXI_awburst);
        p_45_M05_AXI_awburst->set_sv_netview_offsetfromdp(10405936);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_M05_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->M05_AXI_awlock.bind(*p_45_M05_AXI_awlock);
        p_45_M05_AXI_awlock->set_sv_netview_offsetfromdp(10405992);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_45_M05_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_45->M05_AXI_awcache.bind(*p_45_M05_AXI_awcache);
        p_45_M05_AXI_awcache->set_sv_netview_offsetfromdp(10406048);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_45_M05_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_45->M05_AXI_awprot.bind(*p_45_M05_AXI_awprot);
        p_45_M05_AXI_awprot->set_sv_netview_offsetfromdp(10406104);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_45_M05_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_45->M05_AXI_awqos.bind(*p_45_M05_AXI_awqos);
        p_45_M05_AXI_awqos->set_sv_netview_offsetfromdp(10406160);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_45_M05_AXI_awuser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_45->M05_AXI_awuser.bind(*p_45_M05_AXI_awuser);
        p_45_M05_AXI_awuser->set_sv_netview_offsetfromdp(10406216);
        xsim_sc_channel<0, bool > *p_45_M05_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->M05_AXI_awvalid.bind(*p_45_M05_AXI_awvalid);
        p_45_M05_AXI_awvalid->set_sv_netview_offsetfromdp(10406272);
        xsim_sc_channel<0, bool > *p_45_M05_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_45->M05_AXI_awready.bind(*p_45_M05_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M05_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_45_M05_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_45->M05_AXI_wdata.bind(*p_45_M05_AXI_wdata);
        p_45_M05_AXI_wdata->set_sv_netview_offsetfromdp(10406384);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_45_M05_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_45->M05_AXI_wstrb.bind(*p_45_M05_AXI_wstrb);
        p_45_M05_AXI_wstrb->set_sv_netview_offsetfromdp(10406440);
        xsim_sc_channel<0, bool > *p_45_M05_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_45->M05_AXI_wlast.bind(*p_45_M05_AXI_wlast);
        p_45_M05_AXI_wlast->set_sv_netview_offsetfromdp(10406496);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_45_M05_AXI_wuser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_45->M05_AXI_wuser.bind(*p_45_M05_AXI_wuser);
        p_45_M05_AXI_wuser->set_sv_netview_offsetfromdp(10406552);
        xsim_sc_channel<0, bool > *p_45_M05_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->M05_AXI_wvalid.bind(*p_45_M05_AXI_wvalid);
        p_45_M05_AXI_wvalid->set_sv_netview_offsetfromdp(10406608);
        xsim_sc_channel<0, bool > *p_45_M05_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_45->M05_AXI_wready.bind(*p_45_M05_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M05_AXI_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_M05_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->M05_AXI_bid.bind(*p_45_M05_AXI_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M05_AXI_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_45_M05_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_45->M05_AXI_bresp.bind(*p_45_M05_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M05_AXI_bresp);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_45_M05_AXI_buser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_45->M05_AXI_buser.bind(*p_45_M05_AXI_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M05_AXI_buser);
        xsim_sc_channel<0, bool > *p_45_M05_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->M05_AXI_bvalid.bind(*p_45_M05_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M05_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_45_M05_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_45->M05_AXI_bready.bind(*p_45_M05_AXI_bready);
        p_45_M05_AXI_bready->set_sv_netview_offsetfromdp(10406944);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_M05_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->M05_AXI_arid.bind(*p_45_M05_AXI_arid);
        p_45_M05_AXI_arid->set_sv_netview_offsetfromdp(10407000);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_45_M05_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_45->M05_AXI_araddr.bind(*p_45_M05_AXI_araddr);
        p_45_M05_AXI_araddr->set_sv_netview_offsetfromdp(10407056);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_45_M05_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_45->M05_AXI_arlen.bind(*p_45_M05_AXI_arlen);
        p_45_M05_AXI_arlen->set_sv_netview_offsetfromdp(10407112);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_45_M05_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_45->M05_AXI_arsize.bind(*p_45_M05_AXI_arsize);
        p_45_M05_AXI_arsize->set_sv_netview_offsetfromdp(10407168);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_45_M05_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_45->M05_AXI_arburst.bind(*p_45_M05_AXI_arburst);
        p_45_M05_AXI_arburst->set_sv_netview_offsetfromdp(10407224);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_M05_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->M05_AXI_arlock.bind(*p_45_M05_AXI_arlock);
        p_45_M05_AXI_arlock->set_sv_netview_offsetfromdp(10407280);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_45_M05_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_45->M05_AXI_arcache.bind(*p_45_M05_AXI_arcache);
        p_45_M05_AXI_arcache->set_sv_netview_offsetfromdp(10407336);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_45_M05_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_45->M05_AXI_arprot.bind(*p_45_M05_AXI_arprot);
        p_45_M05_AXI_arprot->set_sv_netview_offsetfromdp(10407392);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_45_M05_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_45->M05_AXI_arqos.bind(*p_45_M05_AXI_arqos);
        p_45_M05_AXI_arqos->set_sv_netview_offsetfromdp(10407448);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_45_M05_AXI_aruser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_45->M05_AXI_aruser.bind(*p_45_M05_AXI_aruser);
        p_45_M05_AXI_aruser->set_sv_netview_offsetfromdp(10407504);
        xsim_sc_channel<0, bool > *p_45_M05_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->M05_AXI_arvalid.bind(*p_45_M05_AXI_arvalid);
        p_45_M05_AXI_arvalid->set_sv_netview_offsetfromdp(10407560);
        xsim_sc_channel<0, bool > *p_45_M05_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_45->M05_AXI_arready.bind(*p_45_M05_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M05_AXI_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_M05_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->M05_AXI_rid.bind(*p_45_M05_AXI_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M05_AXI_rid);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_45_M05_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_45->M05_AXI_rdata.bind(*p_45_M05_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M05_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_45_M05_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_45->M05_AXI_rresp.bind(*p_45_M05_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M05_AXI_rresp);
        xsim_sc_channel<0, bool > *p_45_M05_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_45->M05_AXI_rlast.bind(*p_45_M05_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M05_AXI_rlast);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_45_M05_AXI_ruser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_45->M05_AXI_ruser.bind(*p_45_M05_AXI_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M05_AXI_ruser);
        xsim_sc_channel<0, bool > *p_45_M05_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->M05_AXI_rvalid.bind(*p_45_M05_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M05_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_45_M05_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_45->M05_AXI_rready.bind(*p_45_M05_AXI_rready);
        p_45_M05_AXI_rready->set_sv_netview_offsetfromdp(10408008);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_M06_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->M06_AXI_awid.bind(*p_45_M06_AXI_awid);
        p_45_M06_AXI_awid->set_sv_netview_offsetfromdp(10408064);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_45_M06_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_45->M06_AXI_awaddr.bind(*p_45_M06_AXI_awaddr);
        p_45_M06_AXI_awaddr->set_sv_netview_offsetfromdp(10408120);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_45_M06_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_45->M06_AXI_awlen.bind(*p_45_M06_AXI_awlen);
        p_45_M06_AXI_awlen->set_sv_netview_offsetfromdp(10408176);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_45_M06_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_45->M06_AXI_awsize.bind(*p_45_M06_AXI_awsize);
        p_45_M06_AXI_awsize->set_sv_netview_offsetfromdp(10408232);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_45_M06_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_45->M06_AXI_awburst.bind(*p_45_M06_AXI_awburst);
        p_45_M06_AXI_awburst->set_sv_netview_offsetfromdp(10408288);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_M06_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->M06_AXI_awlock.bind(*p_45_M06_AXI_awlock);
        p_45_M06_AXI_awlock->set_sv_netview_offsetfromdp(10408344);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_45_M06_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_45->M06_AXI_awcache.bind(*p_45_M06_AXI_awcache);
        p_45_M06_AXI_awcache->set_sv_netview_offsetfromdp(10408400);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_45_M06_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_45->M06_AXI_awprot.bind(*p_45_M06_AXI_awprot);
        p_45_M06_AXI_awprot->set_sv_netview_offsetfromdp(10408456);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_45_M06_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_45->M06_AXI_awqos.bind(*p_45_M06_AXI_awqos);
        p_45_M06_AXI_awqos->set_sv_netview_offsetfromdp(10408512);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_45_M06_AXI_awuser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_45->M06_AXI_awuser.bind(*p_45_M06_AXI_awuser);
        p_45_M06_AXI_awuser->set_sv_netview_offsetfromdp(10408568);
        xsim_sc_channel<0, bool > *p_45_M06_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->M06_AXI_awvalid.bind(*p_45_M06_AXI_awvalid);
        p_45_M06_AXI_awvalid->set_sv_netview_offsetfromdp(10408624);
        xsim_sc_channel<0, bool > *p_45_M06_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_45->M06_AXI_awready.bind(*p_45_M06_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M06_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_45_M06_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_45->M06_AXI_wdata.bind(*p_45_M06_AXI_wdata);
        p_45_M06_AXI_wdata->set_sv_netview_offsetfromdp(10408736);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_45_M06_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_45->M06_AXI_wstrb.bind(*p_45_M06_AXI_wstrb);
        p_45_M06_AXI_wstrb->set_sv_netview_offsetfromdp(10408792);
        xsim_sc_channel<0, bool > *p_45_M06_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_45->M06_AXI_wlast.bind(*p_45_M06_AXI_wlast);
        p_45_M06_AXI_wlast->set_sv_netview_offsetfromdp(10408848);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_45_M06_AXI_wuser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_45->M06_AXI_wuser.bind(*p_45_M06_AXI_wuser);
        p_45_M06_AXI_wuser->set_sv_netview_offsetfromdp(10408904);
        xsim_sc_channel<0, bool > *p_45_M06_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->M06_AXI_wvalid.bind(*p_45_M06_AXI_wvalid);
        p_45_M06_AXI_wvalid->set_sv_netview_offsetfromdp(10408960);
        xsim_sc_channel<0, bool > *p_45_M06_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_45->M06_AXI_wready.bind(*p_45_M06_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M06_AXI_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_M06_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->M06_AXI_bid.bind(*p_45_M06_AXI_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M06_AXI_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_45_M06_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_45->M06_AXI_bresp.bind(*p_45_M06_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M06_AXI_bresp);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_45_M06_AXI_buser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_45->M06_AXI_buser.bind(*p_45_M06_AXI_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M06_AXI_buser);
        xsim_sc_channel<0, bool > *p_45_M06_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->M06_AXI_bvalid.bind(*p_45_M06_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M06_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_45_M06_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_45->M06_AXI_bready.bind(*p_45_M06_AXI_bready);
        p_45_M06_AXI_bready->set_sv_netview_offsetfromdp(10409296);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_M06_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->M06_AXI_arid.bind(*p_45_M06_AXI_arid);
        p_45_M06_AXI_arid->set_sv_netview_offsetfromdp(10409352);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_45_M06_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_45->M06_AXI_araddr.bind(*p_45_M06_AXI_araddr);
        p_45_M06_AXI_araddr->set_sv_netview_offsetfromdp(10409408);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_45_M06_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_45->M06_AXI_arlen.bind(*p_45_M06_AXI_arlen);
        p_45_M06_AXI_arlen->set_sv_netview_offsetfromdp(10409464);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_45_M06_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_45->M06_AXI_arsize.bind(*p_45_M06_AXI_arsize);
        p_45_M06_AXI_arsize->set_sv_netview_offsetfromdp(10409520);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_45_M06_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_45->M06_AXI_arburst.bind(*p_45_M06_AXI_arburst);
        p_45_M06_AXI_arburst->set_sv_netview_offsetfromdp(10409576);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_M06_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->M06_AXI_arlock.bind(*p_45_M06_AXI_arlock);
        p_45_M06_AXI_arlock->set_sv_netview_offsetfromdp(10409632);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_45_M06_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_45->M06_AXI_arcache.bind(*p_45_M06_AXI_arcache);
        p_45_M06_AXI_arcache->set_sv_netview_offsetfromdp(10409688);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_45_M06_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_45->M06_AXI_arprot.bind(*p_45_M06_AXI_arprot);
        p_45_M06_AXI_arprot->set_sv_netview_offsetfromdp(10409744);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_45_M06_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_45->M06_AXI_arqos.bind(*p_45_M06_AXI_arqos);
        p_45_M06_AXI_arqos->set_sv_netview_offsetfromdp(10409800);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_45_M06_AXI_aruser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_45->M06_AXI_aruser.bind(*p_45_M06_AXI_aruser);
        p_45_M06_AXI_aruser->set_sv_netview_offsetfromdp(10409856);
        xsim_sc_channel<0, bool > *p_45_M06_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->M06_AXI_arvalid.bind(*p_45_M06_AXI_arvalid);
        p_45_M06_AXI_arvalid->set_sv_netview_offsetfromdp(10409912);
        xsim_sc_channel<0, bool > *p_45_M06_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_45->M06_AXI_arready.bind(*p_45_M06_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M06_AXI_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_M06_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->M06_AXI_rid.bind(*p_45_M06_AXI_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M06_AXI_rid);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_45_M06_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_45->M06_AXI_rdata.bind(*p_45_M06_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M06_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_45_M06_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_45->M06_AXI_rresp.bind(*p_45_M06_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M06_AXI_rresp);
        xsim_sc_channel<0, bool > *p_45_M06_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_45->M06_AXI_rlast.bind(*p_45_M06_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M06_AXI_rlast);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_45_M06_AXI_ruser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_45->M06_AXI_ruser.bind(*p_45_M06_AXI_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M06_AXI_ruser);
        xsim_sc_channel<0, bool > *p_45_M06_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->M06_AXI_rvalid.bind(*p_45_M06_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M06_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_45_M06_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_45->M06_AXI_rready.bind(*p_45_M06_AXI_rready);
        p_45_M06_AXI_rready->set_sv_netview_offsetfromdp(10410360);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_M07_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->M07_AXI_awid.bind(*p_45_M07_AXI_awid);
        p_45_M07_AXI_awid->set_sv_netview_offsetfromdp(10410416);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_45_M07_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_45->M07_AXI_awaddr.bind(*p_45_M07_AXI_awaddr);
        p_45_M07_AXI_awaddr->set_sv_netview_offsetfromdp(10410472);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_45_M07_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_45->M07_AXI_awlen.bind(*p_45_M07_AXI_awlen);
        p_45_M07_AXI_awlen->set_sv_netview_offsetfromdp(10410528);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_45_M07_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_45->M07_AXI_awsize.bind(*p_45_M07_AXI_awsize);
        p_45_M07_AXI_awsize->set_sv_netview_offsetfromdp(10410584);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_45_M07_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_45->M07_AXI_awburst.bind(*p_45_M07_AXI_awburst);
        p_45_M07_AXI_awburst->set_sv_netview_offsetfromdp(10410640);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_M07_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->M07_AXI_awlock.bind(*p_45_M07_AXI_awlock);
        p_45_M07_AXI_awlock->set_sv_netview_offsetfromdp(10410696);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_45_M07_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_45->M07_AXI_awcache.bind(*p_45_M07_AXI_awcache);
        p_45_M07_AXI_awcache->set_sv_netview_offsetfromdp(10410752);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_45_M07_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_45->M07_AXI_awprot.bind(*p_45_M07_AXI_awprot);
        p_45_M07_AXI_awprot->set_sv_netview_offsetfromdp(10410808);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_45_M07_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_45->M07_AXI_awqos.bind(*p_45_M07_AXI_awqos);
        p_45_M07_AXI_awqos->set_sv_netview_offsetfromdp(10410864);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_45_M07_AXI_awuser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_45->M07_AXI_awuser.bind(*p_45_M07_AXI_awuser);
        p_45_M07_AXI_awuser->set_sv_netview_offsetfromdp(10410920);
        xsim_sc_channel<0, bool > *p_45_M07_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->M07_AXI_awvalid.bind(*p_45_M07_AXI_awvalid);
        p_45_M07_AXI_awvalid->set_sv_netview_offsetfromdp(10410976);
        xsim_sc_channel<0, bool > *p_45_M07_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_45->M07_AXI_awready.bind(*p_45_M07_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M07_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_45_M07_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_45->M07_AXI_wdata.bind(*p_45_M07_AXI_wdata);
        p_45_M07_AXI_wdata->set_sv_netview_offsetfromdp(10411088);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_45_M07_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_45->M07_AXI_wstrb.bind(*p_45_M07_AXI_wstrb);
        p_45_M07_AXI_wstrb->set_sv_netview_offsetfromdp(10411144);
        xsim_sc_channel<0, bool > *p_45_M07_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_45->M07_AXI_wlast.bind(*p_45_M07_AXI_wlast);
        p_45_M07_AXI_wlast->set_sv_netview_offsetfromdp(10411200);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_45_M07_AXI_wuser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_45->M07_AXI_wuser.bind(*p_45_M07_AXI_wuser);
        p_45_M07_AXI_wuser->set_sv_netview_offsetfromdp(10411256);
        xsim_sc_channel<0, bool > *p_45_M07_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->M07_AXI_wvalid.bind(*p_45_M07_AXI_wvalid);
        p_45_M07_AXI_wvalid->set_sv_netview_offsetfromdp(10411312);
        xsim_sc_channel<0, bool > *p_45_M07_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_45->M07_AXI_wready.bind(*p_45_M07_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M07_AXI_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_M07_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->M07_AXI_bid.bind(*p_45_M07_AXI_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M07_AXI_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_45_M07_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_45->M07_AXI_bresp.bind(*p_45_M07_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M07_AXI_bresp);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_45_M07_AXI_buser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_45->M07_AXI_buser.bind(*p_45_M07_AXI_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M07_AXI_buser);
        xsim_sc_channel<0, bool > *p_45_M07_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->M07_AXI_bvalid.bind(*p_45_M07_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M07_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_45_M07_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_45->M07_AXI_bready.bind(*p_45_M07_AXI_bready);
        p_45_M07_AXI_bready->set_sv_netview_offsetfromdp(10411648);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_M07_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->M07_AXI_arid.bind(*p_45_M07_AXI_arid);
        p_45_M07_AXI_arid->set_sv_netview_offsetfromdp(10411704);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_45_M07_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_45->M07_AXI_araddr.bind(*p_45_M07_AXI_araddr);
        p_45_M07_AXI_araddr->set_sv_netview_offsetfromdp(10411760);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_45_M07_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_45->M07_AXI_arlen.bind(*p_45_M07_AXI_arlen);
        p_45_M07_AXI_arlen->set_sv_netview_offsetfromdp(10411816);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_45_M07_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_45->M07_AXI_arsize.bind(*p_45_M07_AXI_arsize);
        p_45_M07_AXI_arsize->set_sv_netview_offsetfromdp(10411872);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_45_M07_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_45->M07_AXI_arburst.bind(*p_45_M07_AXI_arburst);
        p_45_M07_AXI_arburst->set_sv_netview_offsetfromdp(10411928);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_M07_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->M07_AXI_arlock.bind(*p_45_M07_AXI_arlock);
        p_45_M07_AXI_arlock->set_sv_netview_offsetfromdp(10411984);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_45_M07_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_45->M07_AXI_arcache.bind(*p_45_M07_AXI_arcache);
        p_45_M07_AXI_arcache->set_sv_netview_offsetfromdp(10412040);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_45_M07_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_45->M07_AXI_arprot.bind(*p_45_M07_AXI_arprot);
        p_45_M07_AXI_arprot->set_sv_netview_offsetfromdp(10412096);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_45_M07_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_45->M07_AXI_arqos.bind(*p_45_M07_AXI_arqos);
        p_45_M07_AXI_arqos->set_sv_netview_offsetfromdp(10412152);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_45_M07_AXI_aruser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_45->M07_AXI_aruser.bind(*p_45_M07_AXI_aruser);
        p_45_M07_AXI_aruser->set_sv_netview_offsetfromdp(10412208);
        xsim_sc_channel<0, bool > *p_45_M07_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->M07_AXI_arvalid.bind(*p_45_M07_AXI_arvalid);
        p_45_M07_AXI_arvalid->set_sv_netview_offsetfromdp(10412264);
        xsim_sc_channel<0, bool > *p_45_M07_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_45->M07_AXI_arready.bind(*p_45_M07_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M07_AXI_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_M07_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->M07_AXI_rid.bind(*p_45_M07_AXI_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M07_AXI_rid);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_45_M07_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_45->M07_AXI_rdata.bind(*p_45_M07_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M07_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_45_M07_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_45->M07_AXI_rresp.bind(*p_45_M07_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M07_AXI_rresp);
        xsim_sc_channel<0, bool > *p_45_M07_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_45->M07_AXI_rlast.bind(*p_45_M07_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M07_AXI_rlast);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_45_M07_AXI_ruser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_45->M07_AXI_ruser.bind(*p_45_M07_AXI_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M07_AXI_ruser);
        xsim_sc_channel<0, bool > *p_45_M07_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->M07_AXI_rvalid.bind(*p_45_M07_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M07_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_45_M07_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_45->M07_AXI_rready.bind(*p_45_M07_AXI_rready);
        p_45_M07_AXI_rready->set_sv_netview_offsetfromdp(10412712);
        sc_inst_46 = new bd_d216_rs_M00_AXI_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.interconnect.rs_m00_axi");
        sc_inst_46->xsim_set_dbg_index(2698);
        xsim_sc_channel<0, bool > *p_46_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_46->aclk.bind(*p_46_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_46_aclk);
        xsim_sc_channel<0, bool > *p_46_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_46->aresetn.bind(*p_46_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_46_aresetn);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_46_s_axi_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_46->s_axi_awaddr.bind(*p_46_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_46_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_46->s_axi_awlen.bind(*p_46_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_46_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_46->s_axi_awsize.bind(*p_46_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_46_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_46->s_axi_awburst.bind(*p_46_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_46_s_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_46->s_axi_awlock.bind(*p_46_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_46_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_46->s_axi_awcache.bind(*p_46_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_46_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_46->s_axi_awprot.bind(*p_46_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_46_s_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_46->s_axi_awregion.bind(*p_46_s_axi_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_46_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_46->s_axi_awqos.bind(*p_46_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_awqos);
        xsim_sc_channel<0, bool > *p_46_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_46->s_axi_awvalid.bind(*p_46_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_46_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_46->s_axi_awready.bind(*p_46_s_axi_awready);
        p_46_s_axi_awready->set_sv_netview_offsetfromdp(10413488);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_46_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_46->s_axi_wdata.bind(*p_46_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_46_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_46->s_axi_wstrb.bind(*p_46_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_46_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_46->s_axi_wlast.bind(*p_46_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_46_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_46->s_axi_wvalid.bind(*p_46_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_46_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_46->s_axi_wready.bind(*p_46_s_axi_wready);
        p_46_s_axi_wready->set_sv_netview_offsetfromdp(10413768);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_46_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_46->s_axi_bresp.bind(*p_46_s_axi_bresp);
        p_46_s_axi_bresp->set_sv_netview_offsetfromdp(10413824);
        xsim_sc_channel<0, bool > *p_46_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_46->s_axi_bvalid.bind(*p_46_s_axi_bvalid);
        p_46_s_axi_bvalid->set_sv_netview_offsetfromdp(10413880);
        xsim_sc_channel<0, bool > *p_46_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_46->s_axi_bready.bind(*p_46_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_bready);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_46_s_axi_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_46->s_axi_araddr.bind(*p_46_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_46_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_46->s_axi_arlen.bind(*p_46_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_46_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_46->s_axi_arsize.bind(*p_46_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_46_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_46->s_axi_arburst.bind(*p_46_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_46_s_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_46->s_axi_arlock.bind(*p_46_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_46_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_46->s_axi_arcache.bind(*p_46_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_46_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_46->s_axi_arprot.bind(*p_46_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_46_s_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_46->s_axi_arregion.bind(*p_46_s_axi_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_46_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_46->s_axi_arqos.bind(*p_46_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_arqos);
        xsim_sc_channel<0, bool > *p_46_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_46->s_axi_arvalid.bind(*p_46_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_46_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_46->s_axi_arready.bind(*p_46_s_axi_arready);
        p_46_s_axi_arready->set_sv_netview_offsetfromdp(10414552);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_46_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_46->s_axi_rdata.bind(*p_46_s_axi_rdata);
        p_46_s_axi_rdata->set_sv_netview_offsetfromdp(10414608);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_46_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_46->s_axi_rresp.bind(*p_46_s_axi_rresp);
        p_46_s_axi_rresp->set_sv_netview_offsetfromdp(10414664);
        xsim_sc_channel<0, bool > *p_46_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_46->s_axi_rlast.bind(*p_46_s_axi_rlast);
        p_46_s_axi_rlast->set_sv_netview_offsetfromdp(10414720);
        xsim_sc_channel<0, bool > *p_46_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_46->s_axi_rvalid.bind(*p_46_s_axi_rvalid);
        p_46_s_axi_rvalid->set_sv_netview_offsetfromdp(10414776);
        xsim_sc_channel<0, bool > *p_46_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_46->s_axi_rready.bind(*p_46_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_rready);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_46_m_axi_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_46->m_axi_awaddr.bind(*p_46_m_axi_awaddr);
        p_46_m_axi_awaddr->set_sv_netview_offsetfromdp(10414888);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_46_m_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_46->m_axi_awlen.bind(*p_46_m_axi_awlen);
        p_46_m_axi_awlen->set_sv_netview_offsetfromdp(10414944);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_46_m_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_46->m_axi_awsize.bind(*p_46_m_axi_awsize);
        p_46_m_axi_awsize->set_sv_netview_offsetfromdp(10415000);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_46_m_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_46->m_axi_awburst.bind(*p_46_m_axi_awburst);
        p_46_m_axi_awburst->set_sv_netview_offsetfromdp(10415056);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_46_m_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_46->m_axi_awlock.bind(*p_46_m_axi_awlock);
        p_46_m_axi_awlock->set_sv_netview_offsetfromdp(10415112);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_46_m_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_46->m_axi_awcache.bind(*p_46_m_axi_awcache);
        p_46_m_axi_awcache->set_sv_netview_offsetfromdp(10415168);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_46_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_46->m_axi_awprot.bind(*p_46_m_axi_awprot);
        p_46_m_axi_awprot->set_sv_netview_offsetfromdp(10415224);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_46_m_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_46->m_axi_awregion.bind(*p_46_m_axi_awregion);
        p_46_m_axi_awregion->set_sv_netview_offsetfromdp(10415280);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_46_m_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_46->m_axi_awqos.bind(*p_46_m_axi_awqos);
        p_46_m_axi_awqos->set_sv_netview_offsetfromdp(10415336);
        xsim_sc_channel<0, bool > *p_46_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_46->m_axi_awvalid.bind(*p_46_m_axi_awvalid);
        p_46_m_axi_awvalid->set_sv_netview_offsetfromdp(10415392);
        xsim_sc_channel<0, bool > *p_46_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_46->m_axi_awready.bind(*p_46_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_46_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_46_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_46->m_axi_wdata.bind(*p_46_m_axi_wdata);
        p_46_m_axi_wdata->set_sv_netview_offsetfromdp(10415504);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_46_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_46->m_axi_wstrb.bind(*p_46_m_axi_wstrb);
        p_46_m_axi_wstrb->set_sv_netview_offsetfromdp(10415560);
        xsim_sc_channel<0, bool > *p_46_m_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_46->m_axi_wlast.bind(*p_46_m_axi_wlast);
        p_46_m_axi_wlast->set_sv_netview_offsetfromdp(10415616);
        xsim_sc_channel<0, bool > *p_46_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_46->m_axi_wvalid.bind(*p_46_m_axi_wvalid);
        p_46_m_axi_wvalid->set_sv_netview_offsetfromdp(10415672);
        xsim_sc_channel<0, bool > *p_46_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_46->m_axi_wready.bind(*p_46_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_46_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_46_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_46->m_axi_bresp.bind(*p_46_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_46_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_46_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_46->m_axi_bvalid.bind(*p_46_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_46_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_46_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_46->m_axi_bready.bind(*p_46_m_axi_bready);
        p_46_m_axi_bready->set_sv_netview_offsetfromdp(10415896);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_46_m_axi_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_46->m_axi_araddr.bind(*p_46_m_axi_araddr);
        p_46_m_axi_araddr->set_sv_netview_offsetfromdp(10415952);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_46_m_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_46->m_axi_arlen.bind(*p_46_m_axi_arlen);
        p_46_m_axi_arlen->set_sv_netview_offsetfromdp(10416008);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_46_m_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_46->m_axi_arsize.bind(*p_46_m_axi_arsize);
        p_46_m_axi_arsize->set_sv_netview_offsetfromdp(10416064);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_46_m_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_46->m_axi_arburst.bind(*p_46_m_axi_arburst);
        p_46_m_axi_arburst->set_sv_netview_offsetfromdp(10416120);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_46_m_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_46->m_axi_arlock.bind(*p_46_m_axi_arlock);
        p_46_m_axi_arlock->set_sv_netview_offsetfromdp(10416176);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_46_m_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_46->m_axi_arcache.bind(*p_46_m_axi_arcache);
        p_46_m_axi_arcache->set_sv_netview_offsetfromdp(10416232);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_46_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_46->m_axi_arprot.bind(*p_46_m_axi_arprot);
        p_46_m_axi_arprot->set_sv_netview_offsetfromdp(10416288);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_46_m_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_46->m_axi_arregion.bind(*p_46_m_axi_arregion);
        p_46_m_axi_arregion->set_sv_netview_offsetfromdp(10416344);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_46_m_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_46->m_axi_arqos.bind(*p_46_m_axi_arqos);
        p_46_m_axi_arqos->set_sv_netview_offsetfromdp(10416400);
        xsim_sc_channel<0, bool > *p_46_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_46->m_axi_arvalid.bind(*p_46_m_axi_arvalid);
        p_46_m_axi_arvalid->set_sv_netview_offsetfromdp(10416456);
        xsim_sc_channel<0, bool > *p_46_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_46->m_axi_arready.bind(*p_46_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_46_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_46_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_46->m_axi_rdata.bind(*p_46_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_46_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_46_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_46->m_axi_rresp.bind(*p_46_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_46_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_46_m_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_46->m_axi_rlast.bind(*p_46_m_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_46_m_axi_rlast);
        xsim_sc_channel<0, bool > *p_46_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_46->m_axi_rvalid.bind(*p_46_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_46_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_46_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_46->m_axi_rready.bind(*p_46_m_axi_rready);
        p_46_m_axi_rready->set_sv_netview_offsetfromdp(10416792);
        sc_inst_47 = new bd_d216_ddr4_mem00_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.memory.ddr4_mem00");
        sc_inst_47->xsim_set_dbg_index(3061);
        xsim_sc_channel<0, bool > *p_47_c0_init_calib_complete = new xsim_sc_channel<0, bool >();
        sc_inst_47->c0_init_calib_complete.bind(*p_47_c0_init_calib_complete);
        p_47_c0_init_calib_complete->set_sv_netview_offsetfromdp(10759488);
        xsim_sc_channel<0, bool > *p_47_dbg_clk = new xsim_sc_channel<0, bool >();
        sc_inst_47->dbg_clk.bind(*p_47_dbg_clk);
        p_47_dbg_clk->set_sv_netview_offsetfromdp(10759544);
        xsim_sc_channel<0, bool > *p_47_c0_sys_clk_p = new xsim_sc_channel<0, bool >();
        sc_inst_47->c0_sys_clk_p.bind(*p_47_c0_sys_clk_p);
        (*_glb_hdl_sc_channel_map).push_back(p_47_c0_sys_clk_p);
        xsim_sc_channel<0, bool > *p_47_c0_sys_clk_n = new xsim_sc_channel<0, bool >();
        sc_inst_47->c0_sys_clk_n.bind(*p_47_c0_sys_clk_n);
        (*_glb_hdl_sc_channel_map).push_back(p_47_c0_sys_clk_n);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_47_dbg_bus = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_47->dbg_bus.bind(*p_47_dbg_bus);
        p_47_dbg_bus->set_sv_netview_offsetfromdp(10759712);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_47_c0_ddr4_adr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_47->c0_ddr4_adr.bind(*p_47_c0_ddr4_adr);
        p_47_c0_ddr4_adr->set_sv_netview_offsetfromdp(10759768);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_47_c0_ddr4_ba = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_47->c0_ddr4_ba.bind(*p_47_c0_ddr4_ba);
        p_47_c0_ddr4_ba->set_sv_netview_offsetfromdp(10759824);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_47_c0_ddr4_cke = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_47->c0_ddr4_cke.bind(*p_47_c0_ddr4_cke);
        p_47_c0_ddr4_cke->set_sv_netview_offsetfromdp(10759880);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_47_c0_ddr4_cs_n = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_47->c0_ddr4_cs_n.bind(*p_47_c0_ddr4_cs_n);
        p_47_c0_ddr4_cs_n->set_sv_netview_offsetfromdp(10759936);
        xsim_sc_channel<72, sc_dt::sc_bv<72> > *p_47_c0_ddr4_dq = new xsim_sc_channel<72, sc_dt::sc_bv<72> >();
        sc_inst_47->c0_ddr4_dq.bind(*p_47_c0_ddr4_dq);
        p_47_c0_ddr4_dq->set_sv_netview_offsetfromdp(10759992);
        xsim_sc_channel<18, sc_dt::sc_bv<18> > *p_47_c0_ddr4_dqs_c = new xsim_sc_channel<18, sc_dt::sc_bv<18> >();
        sc_inst_47->c0_ddr4_dqs_c.bind(*p_47_c0_ddr4_dqs_c);
        p_47_c0_ddr4_dqs_c->set_sv_netview_offsetfromdp(10760048);
        xsim_sc_channel<18, sc_dt::sc_bv<18> > *p_47_c0_ddr4_dqs_t = new xsim_sc_channel<18, sc_dt::sc_bv<18> >();
        sc_inst_47->c0_ddr4_dqs_t.bind(*p_47_c0_ddr4_dqs_t);
        p_47_c0_ddr4_dqs_t->set_sv_netview_offsetfromdp(10760104);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_47_c0_ddr4_odt = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_47->c0_ddr4_odt.bind(*p_47_c0_ddr4_odt);
        p_47_c0_ddr4_odt->set_sv_netview_offsetfromdp(10760160);
        xsim_sc_channel<0, bool > *p_47_c0_ddr4_parity = new xsim_sc_channel<0, bool >();
        sc_inst_47->c0_ddr4_parity.bind(*p_47_c0_ddr4_parity);
        p_47_c0_ddr4_parity->set_sv_netview_offsetfromdp(10760216);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_47_c0_ddr4_bg = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_47->c0_ddr4_bg.bind(*p_47_c0_ddr4_bg);
        p_47_c0_ddr4_bg->set_sv_netview_offsetfromdp(10760272);
        xsim_sc_channel<0, bool > *p_47_c0_ddr4_reset_n = new xsim_sc_channel<0, bool >();
        sc_inst_47->c0_ddr4_reset_n.bind(*p_47_c0_ddr4_reset_n);
        p_47_c0_ddr4_reset_n->set_sv_netview_offsetfromdp(10760328);
        xsim_sc_channel<0, bool > *p_47_c0_ddr4_act_n = new xsim_sc_channel<0, bool >();
        sc_inst_47->c0_ddr4_act_n.bind(*p_47_c0_ddr4_act_n);
        p_47_c0_ddr4_act_n->set_sv_netview_offsetfromdp(10760384);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_47_c0_ddr4_ck_c = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_47->c0_ddr4_ck_c.bind(*p_47_c0_ddr4_ck_c);
        p_47_c0_ddr4_ck_c->set_sv_netview_offsetfromdp(10760440);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_47_c0_ddr4_ck_t = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_47->c0_ddr4_ck_t.bind(*p_47_c0_ddr4_ck_t);
        p_47_c0_ddr4_ck_t->set_sv_netview_offsetfromdp(10760496);
        xsim_sc_channel<0, bool > *p_47_c0_ddr4_ui_clk = new xsim_sc_channel<0, bool >();
        sc_inst_47->c0_ddr4_ui_clk.bind(*p_47_c0_ddr4_ui_clk);
        p_47_c0_ddr4_ui_clk->set_sv_netview_offsetfromdp(10760552);
        xsim_sc_channel<0, bool > *p_47_c0_ddr4_ui_clk_sync_rst = new xsim_sc_channel<0, bool >();
        sc_inst_47->c0_ddr4_ui_clk_sync_rst.bind(*p_47_c0_ddr4_ui_clk_sync_rst);
        p_47_c0_ddr4_ui_clk_sync_rst->set_sv_netview_offsetfromdp(10760608);
        xsim_sc_channel<0, bool > *p_47_c0_ddr4_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_47->c0_ddr4_aresetn.bind(*p_47_c0_ddr4_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_47_c0_ddr4_aresetn);
        xsim_sc_channel<0, bool > *p_47_c0_ddr4_s_axi_ctrl_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_47->c0_ddr4_s_axi_ctrl_awvalid.bind(*p_47_c0_ddr4_s_axi_ctrl_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_47_c0_ddr4_s_axi_ctrl_awvalid);
        xsim_sc_channel<0, bool > *p_47_c0_ddr4_s_axi_ctrl_awready = new xsim_sc_channel<0, bool >();
        sc_inst_47->c0_ddr4_s_axi_ctrl_awready.bind(*p_47_c0_ddr4_s_axi_ctrl_awready);
        p_47_c0_ddr4_s_axi_ctrl_awready->set_sv_netview_offsetfromdp(10760776);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_47_c0_ddr4_s_axi_ctrl_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_47->c0_ddr4_s_axi_ctrl_awaddr.bind(*p_47_c0_ddr4_s_axi_ctrl_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_47_c0_ddr4_s_axi_ctrl_awaddr);
        xsim_sc_channel<0, bool > *p_47_c0_ddr4_s_axi_ctrl_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_47->c0_ddr4_s_axi_ctrl_wvalid.bind(*p_47_c0_ddr4_s_axi_ctrl_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_47_c0_ddr4_s_axi_ctrl_wvalid);
        xsim_sc_channel<0, bool > *p_47_c0_ddr4_s_axi_ctrl_wready = new xsim_sc_channel<0, bool >();
        sc_inst_47->c0_ddr4_s_axi_ctrl_wready.bind(*p_47_c0_ddr4_s_axi_ctrl_wready);
        p_47_c0_ddr4_s_axi_ctrl_wready->set_sv_netview_offsetfromdp(10760944);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_47_c0_ddr4_s_axi_ctrl_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_47->c0_ddr4_s_axi_ctrl_wdata.bind(*p_47_c0_ddr4_s_axi_ctrl_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_47_c0_ddr4_s_axi_ctrl_wdata);
        xsim_sc_channel<0, bool > *p_47_c0_ddr4_s_axi_ctrl_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_47->c0_ddr4_s_axi_ctrl_bvalid.bind(*p_47_c0_ddr4_s_axi_ctrl_bvalid);
        p_47_c0_ddr4_s_axi_ctrl_bvalid->set_sv_netview_offsetfromdp(10761056);
        xsim_sc_channel<0, bool > *p_47_c0_ddr4_s_axi_ctrl_bready = new xsim_sc_channel<0, bool >();
        sc_inst_47->c0_ddr4_s_axi_ctrl_bready.bind(*p_47_c0_ddr4_s_axi_ctrl_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_47_c0_ddr4_s_axi_ctrl_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_47_c0_ddr4_s_axi_ctrl_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_47->c0_ddr4_s_axi_ctrl_bresp.bind(*p_47_c0_ddr4_s_axi_ctrl_bresp);
        p_47_c0_ddr4_s_axi_ctrl_bresp->set_sv_netview_offsetfromdp(10761168);
        xsim_sc_channel<0, bool > *p_47_c0_ddr4_s_axi_ctrl_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_47->c0_ddr4_s_axi_ctrl_arvalid.bind(*p_47_c0_ddr4_s_axi_ctrl_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_47_c0_ddr4_s_axi_ctrl_arvalid);
        xsim_sc_channel<0, bool > *p_47_c0_ddr4_s_axi_ctrl_arready = new xsim_sc_channel<0, bool >();
        sc_inst_47->c0_ddr4_s_axi_ctrl_arready.bind(*p_47_c0_ddr4_s_axi_ctrl_arready);
        p_47_c0_ddr4_s_axi_ctrl_arready->set_sv_netview_offsetfromdp(10761280);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_47_c0_ddr4_s_axi_ctrl_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_47->c0_ddr4_s_axi_ctrl_araddr.bind(*p_47_c0_ddr4_s_axi_ctrl_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_47_c0_ddr4_s_axi_ctrl_araddr);
        xsim_sc_channel<0, bool > *p_47_c0_ddr4_s_axi_ctrl_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_47->c0_ddr4_s_axi_ctrl_rvalid.bind(*p_47_c0_ddr4_s_axi_ctrl_rvalid);
        p_47_c0_ddr4_s_axi_ctrl_rvalid->set_sv_netview_offsetfromdp(10761392);
        xsim_sc_channel<0, bool > *p_47_c0_ddr4_s_axi_ctrl_rready = new xsim_sc_channel<0, bool >();
        sc_inst_47->c0_ddr4_s_axi_ctrl_rready.bind(*p_47_c0_ddr4_s_axi_ctrl_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_47_c0_ddr4_s_axi_ctrl_rready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_47_c0_ddr4_s_axi_ctrl_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_47->c0_ddr4_s_axi_ctrl_rdata.bind(*p_47_c0_ddr4_s_axi_ctrl_rdata);
        p_47_c0_ddr4_s_axi_ctrl_rdata->set_sv_netview_offsetfromdp(10761504);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_47_c0_ddr4_s_axi_ctrl_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_47->c0_ddr4_s_axi_ctrl_rresp.bind(*p_47_c0_ddr4_s_axi_ctrl_rresp);
        p_47_c0_ddr4_s_axi_ctrl_rresp->set_sv_netview_offsetfromdp(10761560);
        xsim_sc_channel<0, bool > *p_47_c0_ddr4_interrupt = new xsim_sc_channel<0, bool >();
        sc_inst_47->c0_ddr4_interrupt.bind(*p_47_c0_ddr4_interrupt);
        p_47_c0_ddr4_interrupt->set_sv_netview_offsetfromdp(10761616);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_47_c0_ddr4_s_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_47->c0_ddr4_s_axi_awid.bind(*p_47_c0_ddr4_s_axi_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_47_c0_ddr4_s_axi_awid);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_47_c0_ddr4_s_axi_awaddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_47->c0_ddr4_s_axi_awaddr.bind(*p_47_c0_ddr4_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_47_c0_ddr4_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_47_c0_ddr4_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_47->c0_ddr4_s_axi_awlen.bind(*p_47_c0_ddr4_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_47_c0_ddr4_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_47_c0_ddr4_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_47->c0_ddr4_s_axi_awsize.bind(*p_47_c0_ddr4_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_47_c0_ddr4_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_47_c0_ddr4_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_47->c0_ddr4_s_axi_awburst.bind(*p_47_c0_ddr4_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_47_c0_ddr4_s_axi_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_47_c0_ddr4_s_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_47->c0_ddr4_s_axi_awlock.bind(*p_47_c0_ddr4_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_47_c0_ddr4_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_47_c0_ddr4_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_47->c0_ddr4_s_axi_awcache.bind(*p_47_c0_ddr4_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_47_c0_ddr4_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_47_c0_ddr4_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_47->c0_ddr4_s_axi_awprot.bind(*p_47_c0_ddr4_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_47_c0_ddr4_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_47_c0_ddr4_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_47->c0_ddr4_s_axi_awqos.bind(*p_47_c0_ddr4_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_47_c0_ddr4_s_axi_awqos);
        xsim_sc_channel<0, bool > *p_47_c0_ddr4_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_47->c0_ddr4_s_axi_awvalid.bind(*p_47_c0_ddr4_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_47_c0_ddr4_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_47_c0_ddr4_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_47->c0_ddr4_s_axi_awready.bind(*p_47_c0_ddr4_s_axi_awready);
        p_47_c0_ddr4_s_axi_awready->set_sv_netview_offsetfromdp(10762232);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_47_c0_ddr4_s_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_47->c0_ddr4_s_axi_wdata.bind(*p_47_c0_ddr4_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_47_c0_ddr4_s_axi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_47_c0_ddr4_s_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_47->c0_ddr4_s_axi_wstrb.bind(*p_47_c0_ddr4_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_47_c0_ddr4_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_47_c0_ddr4_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_47->c0_ddr4_s_axi_wlast.bind(*p_47_c0_ddr4_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_47_c0_ddr4_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_47_c0_ddr4_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_47->c0_ddr4_s_axi_wvalid.bind(*p_47_c0_ddr4_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_47_c0_ddr4_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_47_c0_ddr4_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_47->c0_ddr4_s_axi_wready.bind(*p_47_c0_ddr4_s_axi_wready);
        p_47_c0_ddr4_s_axi_wready->set_sv_netview_offsetfromdp(10762512);
        xsim_sc_channel<0, bool > *p_47_c0_ddr4_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_47->c0_ddr4_s_axi_bready.bind(*p_47_c0_ddr4_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_47_c0_ddr4_s_axi_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_47_c0_ddr4_s_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_47->c0_ddr4_s_axi_bid.bind(*p_47_c0_ddr4_s_axi_bid);
        p_47_c0_ddr4_s_axi_bid->set_sv_netview_offsetfromdp(10762624);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_47_c0_ddr4_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_47->c0_ddr4_s_axi_bresp.bind(*p_47_c0_ddr4_s_axi_bresp);
        p_47_c0_ddr4_s_axi_bresp->set_sv_netview_offsetfromdp(10762680);
        xsim_sc_channel<0, bool > *p_47_c0_ddr4_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_47->c0_ddr4_s_axi_bvalid.bind(*p_47_c0_ddr4_s_axi_bvalid);
        p_47_c0_ddr4_s_axi_bvalid->set_sv_netview_offsetfromdp(10762736);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_47_c0_ddr4_s_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_47->c0_ddr4_s_axi_arid.bind(*p_47_c0_ddr4_s_axi_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_47_c0_ddr4_s_axi_arid);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_47_c0_ddr4_s_axi_araddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_47->c0_ddr4_s_axi_araddr.bind(*p_47_c0_ddr4_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_47_c0_ddr4_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_47_c0_ddr4_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_47->c0_ddr4_s_axi_arlen.bind(*p_47_c0_ddr4_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_47_c0_ddr4_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_47_c0_ddr4_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_47->c0_ddr4_s_axi_arsize.bind(*p_47_c0_ddr4_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_47_c0_ddr4_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_47_c0_ddr4_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_47->c0_ddr4_s_axi_arburst.bind(*p_47_c0_ddr4_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_47_c0_ddr4_s_axi_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_47_c0_ddr4_s_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_47->c0_ddr4_s_axi_arlock.bind(*p_47_c0_ddr4_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_47_c0_ddr4_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_47_c0_ddr4_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_47->c0_ddr4_s_axi_arcache.bind(*p_47_c0_ddr4_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_47_c0_ddr4_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_47_c0_ddr4_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_47->c0_ddr4_s_axi_arprot.bind(*p_47_c0_ddr4_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_47_c0_ddr4_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_47_c0_ddr4_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_47->c0_ddr4_s_axi_arqos.bind(*p_47_c0_ddr4_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_47_c0_ddr4_s_axi_arqos);
        xsim_sc_channel<0, bool > *p_47_c0_ddr4_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_47->c0_ddr4_s_axi_arvalid.bind(*p_47_c0_ddr4_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_47_c0_ddr4_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_47_c0_ddr4_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_47->c0_ddr4_s_axi_arready.bind(*p_47_c0_ddr4_s_axi_arready);
        p_47_c0_ddr4_s_axi_arready->set_sv_netview_offsetfromdp(10763352);
        xsim_sc_channel<0, bool > *p_47_c0_ddr4_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_47->c0_ddr4_s_axi_rready.bind(*p_47_c0_ddr4_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_47_c0_ddr4_s_axi_rready);
        xsim_sc_channel<0, bool > *p_47_c0_ddr4_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_47->c0_ddr4_s_axi_rlast.bind(*p_47_c0_ddr4_s_axi_rlast);
        p_47_c0_ddr4_s_axi_rlast->set_sv_netview_offsetfromdp(10763464);
        xsim_sc_channel<0, bool > *p_47_c0_ddr4_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_47->c0_ddr4_s_axi_rvalid.bind(*p_47_c0_ddr4_s_axi_rvalid);
        p_47_c0_ddr4_s_axi_rvalid->set_sv_netview_offsetfromdp(10763520);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_47_c0_ddr4_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_47->c0_ddr4_s_axi_rresp.bind(*p_47_c0_ddr4_s_axi_rresp);
        p_47_c0_ddr4_s_axi_rresp->set_sv_netview_offsetfromdp(10763576);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_47_c0_ddr4_s_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_47->c0_ddr4_s_axi_rid.bind(*p_47_c0_ddr4_s_axi_rid);
        p_47_c0_ddr4_s_axi_rid->set_sv_netview_offsetfromdp(10763632);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_47_c0_ddr4_s_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_47->c0_ddr4_s_axi_rdata.bind(*p_47_c0_ddr4_s_axi_rdata);
        p_47_c0_ddr4_s_axi_rdata->set_sv_netview_offsetfromdp(10763688);
        xsim_sc_channel<0, bool > *p_47_addn_ui_clkout1 = new xsim_sc_channel<0, bool >();
        sc_inst_47->addn_ui_clkout1.bind(*p_47_addn_ui_clkout1);
        p_47_addn_ui_clkout1->set_sv_netview_offsetfromdp(10763744);
        xsim_sc_channel<0, bool > *p_47_sys_rst = new xsim_sc_channel<0, bool >();
        sc_inst_47->sys_rst.bind(*p_47_sys_rst);
        (*_glb_hdl_sc_channel_map).push_back(p_47_sys_rst);
        sc_inst_48 = new bd_d216_ddr4_mem00_ctrl_cc_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.memory.ddr4_mem00_ctrl_cc");
        sc_inst_48->xsim_set_dbg_index(3062);
        xsim_sc_channel<0, bool > *p_48_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_48->s_axi_aclk.bind(*p_48_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_48_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_48->s_axi_aresetn.bind(*p_48_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_aresetn);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_48_s_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_48->s_axi_awaddr.bind(*p_48_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_48_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_48->s_axi_awprot.bind(*p_48_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_48_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_48->s_axi_awvalid.bind(*p_48_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_48_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_48->s_axi_awready.bind(*p_48_s_axi_awready);
        p_48_s_axi_awready->set_sv_netview_offsetfromdp(10764184);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_48_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_48->s_axi_wdata.bind(*p_48_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_48_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_48->s_axi_wstrb.bind(*p_48_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_48_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_48->s_axi_wvalid.bind(*p_48_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_48_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_48->s_axi_wready.bind(*p_48_s_axi_wready);
        p_48_s_axi_wready->set_sv_netview_offsetfromdp(10764408);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_48_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_48->s_axi_bresp.bind(*p_48_s_axi_bresp);
        p_48_s_axi_bresp->set_sv_netview_offsetfromdp(10764464);
        xsim_sc_channel<0, bool > *p_48_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_48->s_axi_bvalid.bind(*p_48_s_axi_bvalid);
        p_48_s_axi_bvalid->set_sv_netview_offsetfromdp(10764520);
        xsim_sc_channel<0, bool > *p_48_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_48->s_axi_bready.bind(*p_48_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_bready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_48_s_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_48->s_axi_araddr.bind(*p_48_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_48_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_48->s_axi_arprot.bind(*p_48_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_48_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_48->s_axi_arvalid.bind(*p_48_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_48_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_48->s_axi_arready.bind(*p_48_s_axi_arready);
        p_48_s_axi_arready->set_sv_netview_offsetfromdp(10764800);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_48_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_48->s_axi_rdata.bind(*p_48_s_axi_rdata);
        p_48_s_axi_rdata->set_sv_netview_offsetfromdp(10764856);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_48_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_48->s_axi_rresp.bind(*p_48_s_axi_rresp);
        p_48_s_axi_rresp->set_sv_netview_offsetfromdp(10764912);
        xsim_sc_channel<0, bool > *p_48_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_48->s_axi_rvalid.bind(*p_48_s_axi_rvalid);
        p_48_s_axi_rvalid->set_sv_netview_offsetfromdp(10764968);
        xsim_sc_channel<0, bool > *p_48_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_48->s_axi_rready.bind(*p_48_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_rready);
        xsim_sc_channel<0, bool > *p_48_m_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_48->m_axi_aclk.bind(*p_48_m_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_48_m_axi_aclk);
        xsim_sc_channel<0, bool > *p_48_m_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_48->m_axi_aresetn.bind(*p_48_m_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_48_m_axi_aresetn);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_48_m_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_48->m_axi_awaddr.bind(*p_48_m_axi_awaddr);
        p_48_m_axi_awaddr->set_sv_netview_offsetfromdp(10765192);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_48_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_48->m_axi_awprot.bind(*p_48_m_axi_awprot);
        p_48_m_axi_awprot->set_sv_netview_offsetfromdp(10765248);
        xsim_sc_channel<0, bool > *p_48_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_48->m_axi_awvalid.bind(*p_48_m_axi_awvalid);
        p_48_m_axi_awvalid->set_sv_netview_offsetfromdp(10765304);
        xsim_sc_channel<0, bool > *p_48_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_48->m_axi_awready.bind(*p_48_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_48_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_48_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_48->m_axi_wdata.bind(*p_48_m_axi_wdata);
        p_48_m_axi_wdata->set_sv_netview_offsetfromdp(10765416);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_48_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_48->m_axi_wstrb.bind(*p_48_m_axi_wstrb);
        p_48_m_axi_wstrb->set_sv_netview_offsetfromdp(10765472);
        xsim_sc_channel<0, bool > *p_48_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_48->m_axi_wvalid.bind(*p_48_m_axi_wvalid);
        p_48_m_axi_wvalid->set_sv_netview_offsetfromdp(10765528);
        xsim_sc_channel<0, bool > *p_48_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_48->m_axi_wready.bind(*p_48_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_48_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_48_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_48->m_axi_bresp.bind(*p_48_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_48_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_48_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_48->m_axi_bvalid.bind(*p_48_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_48_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_48_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_48->m_axi_bready.bind(*p_48_m_axi_bready);
        p_48_m_axi_bready->set_sv_netview_offsetfromdp(10765752);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_48_m_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_48->m_axi_araddr.bind(*p_48_m_axi_araddr);
        p_48_m_axi_araddr->set_sv_netview_offsetfromdp(10765808);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_48_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_48->m_axi_arprot.bind(*p_48_m_axi_arprot);
        p_48_m_axi_arprot->set_sv_netview_offsetfromdp(10765864);
        xsim_sc_channel<0, bool > *p_48_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_48->m_axi_arvalid.bind(*p_48_m_axi_arvalid);
        p_48_m_axi_arvalid->set_sv_netview_offsetfromdp(10765920);
        xsim_sc_channel<0, bool > *p_48_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_48->m_axi_arready.bind(*p_48_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_48_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_48_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_48->m_axi_rdata.bind(*p_48_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_48_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_48_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_48->m_axi_rresp.bind(*p_48_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_48_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_48_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_48->m_axi_rvalid.bind(*p_48_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_48_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_48_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_48->m_axi_rready.bind(*p_48_m_axi_rready);
        p_48_m_axi_rready->set_sv_netview_offsetfromdp(10766200);
        sc_inst_49 = new bd_d216_ddr4_mem01_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.memory.ddr4_mem01");
        sc_inst_49->xsim_set_dbg_index(3063);
        xsim_sc_channel<0, bool > *p_49_c0_init_calib_complete = new xsim_sc_channel<0, bool >();
        sc_inst_49->c0_init_calib_complete.bind(*p_49_c0_init_calib_complete);
        p_49_c0_init_calib_complete->set_sv_netview_offsetfromdp(10766304);
        xsim_sc_channel<0, bool > *p_49_dbg_clk = new xsim_sc_channel<0, bool >();
        sc_inst_49->dbg_clk.bind(*p_49_dbg_clk);
        p_49_dbg_clk->set_sv_netview_offsetfromdp(10766360);
        xsim_sc_channel<0, bool > *p_49_c0_sys_clk_p = new xsim_sc_channel<0, bool >();
        sc_inst_49->c0_sys_clk_p.bind(*p_49_c0_sys_clk_p);
        (*_glb_hdl_sc_channel_map).push_back(p_49_c0_sys_clk_p);
        xsim_sc_channel<0, bool > *p_49_c0_sys_clk_n = new xsim_sc_channel<0, bool >();
        sc_inst_49->c0_sys_clk_n.bind(*p_49_c0_sys_clk_n);
        (*_glb_hdl_sc_channel_map).push_back(p_49_c0_sys_clk_n);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_49_dbg_bus = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_49->dbg_bus.bind(*p_49_dbg_bus);
        p_49_dbg_bus->set_sv_netview_offsetfromdp(10766528);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_49_c0_ddr4_adr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_49->c0_ddr4_adr.bind(*p_49_c0_ddr4_adr);
        p_49_c0_ddr4_adr->set_sv_netview_offsetfromdp(10766584);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_49_c0_ddr4_ba = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_49->c0_ddr4_ba.bind(*p_49_c0_ddr4_ba);
        p_49_c0_ddr4_ba->set_sv_netview_offsetfromdp(10766640);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_49_c0_ddr4_cke = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_49->c0_ddr4_cke.bind(*p_49_c0_ddr4_cke);
        p_49_c0_ddr4_cke->set_sv_netview_offsetfromdp(10766696);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_49_c0_ddr4_cs_n = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_49->c0_ddr4_cs_n.bind(*p_49_c0_ddr4_cs_n);
        p_49_c0_ddr4_cs_n->set_sv_netview_offsetfromdp(10766752);
        xsim_sc_channel<72, sc_dt::sc_bv<72> > *p_49_c0_ddr4_dq = new xsim_sc_channel<72, sc_dt::sc_bv<72> >();
        sc_inst_49->c0_ddr4_dq.bind(*p_49_c0_ddr4_dq);
        p_49_c0_ddr4_dq->set_sv_netview_offsetfromdp(10766808);
        xsim_sc_channel<18, sc_dt::sc_bv<18> > *p_49_c0_ddr4_dqs_c = new xsim_sc_channel<18, sc_dt::sc_bv<18> >();
        sc_inst_49->c0_ddr4_dqs_c.bind(*p_49_c0_ddr4_dqs_c);
        p_49_c0_ddr4_dqs_c->set_sv_netview_offsetfromdp(10766864);
        xsim_sc_channel<18, sc_dt::sc_bv<18> > *p_49_c0_ddr4_dqs_t = new xsim_sc_channel<18, sc_dt::sc_bv<18> >();
        sc_inst_49->c0_ddr4_dqs_t.bind(*p_49_c0_ddr4_dqs_t);
        p_49_c0_ddr4_dqs_t->set_sv_netview_offsetfromdp(10766920);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_49_c0_ddr4_odt = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_49->c0_ddr4_odt.bind(*p_49_c0_ddr4_odt);
        p_49_c0_ddr4_odt->set_sv_netview_offsetfromdp(10766976);
        xsim_sc_channel<0, bool > *p_49_c0_ddr4_parity = new xsim_sc_channel<0, bool >();
        sc_inst_49->c0_ddr4_parity.bind(*p_49_c0_ddr4_parity);
        p_49_c0_ddr4_parity->set_sv_netview_offsetfromdp(10767032);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_49_c0_ddr4_bg = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_49->c0_ddr4_bg.bind(*p_49_c0_ddr4_bg);
        p_49_c0_ddr4_bg->set_sv_netview_offsetfromdp(10767088);
        xsim_sc_channel<0, bool > *p_49_c0_ddr4_reset_n = new xsim_sc_channel<0, bool >();
        sc_inst_49->c0_ddr4_reset_n.bind(*p_49_c0_ddr4_reset_n);
        p_49_c0_ddr4_reset_n->set_sv_netview_offsetfromdp(10767144);
        xsim_sc_channel<0, bool > *p_49_c0_ddr4_act_n = new xsim_sc_channel<0, bool >();
        sc_inst_49->c0_ddr4_act_n.bind(*p_49_c0_ddr4_act_n);
        p_49_c0_ddr4_act_n->set_sv_netview_offsetfromdp(10767200);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_49_c0_ddr4_ck_c = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_49->c0_ddr4_ck_c.bind(*p_49_c0_ddr4_ck_c);
        p_49_c0_ddr4_ck_c->set_sv_netview_offsetfromdp(10767256);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_49_c0_ddr4_ck_t = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_49->c0_ddr4_ck_t.bind(*p_49_c0_ddr4_ck_t);
        p_49_c0_ddr4_ck_t->set_sv_netview_offsetfromdp(10767312);
        xsim_sc_channel<0, bool > *p_49_c0_ddr4_ui_clk = new xsim_sc_channel<0, bool >();
        sc_inst_49->c0_ddr4_ui_clk.bind(*p_49_c0_ddr4_ui_clk);
        p_49_c0_ddr4_ui_clk->set_sv_netview_offsetfromdp(10767368);
        xsim_sc_channel<0, bool > *p_49_c0_ddr4_ui_clk_sync_rst = new xsim_sc_channel<0, bool >();
        sc_inst_49->c0_ddr4_ui_clk_sync_rst.bind(*p_49_c0_ddr4_ui_clk_sync_rst);
        p_49_c0_ddr4_ui_clk_sync_rst->set_sv_netview_offsetfromdp(10767424);
        xsim_sc_channel<0, bool > *p_49_c0_ddr4_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_49->c0_ddr4_aresetn.bind(*p_49_c0_ddr4_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_49_c0_ddr4_aresetn);
        xsim_sc_channel<0, bool > *p_49_c0_ddr4_s_axi_ctrl_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_49->c0_ddr4_s_axi_ctrl_awvalid.bind(*p_49_c0_ddr4_s_axi_ctrl_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_49_c0_ddr4_s_axi_ctrl_awvalid);
        xsim_sc_channel<0, bool > *p_49_c0_ddr4_s_axi_ctrl_awready = new xsim_sc_channel<0, bool >();
        sc_inst_49->c0_ddr4_s_axi_ctrl_awready.bind(*p_49_c0_ddr4_s_axi_ctrl_awready);
        p_49_c0_ddr4_s_axi_ctrl_awready->set_sv_netview_offsetfromdp(10767592);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_49_c0_ddr4_s_axi_ctrl_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_49->c0_ddr4_s_axi_ctrl_awaddr.bind(*p_49_c0_ddr4_s_axi_ctrl_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_49_c0_ddr4_s_axi_ctrl_awaddr);
        xsim_sc_channel<0, bool > *p_49_c0_ddr4_s_axi_ctrl_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_49->c0_ddr4_s_axi_ctrl_wvalid.bind(*p_49_c0_ddr4_s_axi_ctrl_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_49_c0_ddr4_s_axi_ctrl_wvalid);
        xsim_sc_channel<0, bool > *p_49_c0_ddr4_s_axi_ctrl_wready = new xsim_sc_channel<0, bool >();
        sc_inst_49->c0_ddr4_s_axi_ctrl_wready.bind(*p_49_c0_ddr4_s_axi_ctrl_wready);
        p_49_c0_ddr4_s_axi_ctrl_wready->set_sv_netview_offsetfromdp(10767760);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_49_c0_ddr4_s_axi_ctrl_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_49->c0_ddr4_s_axi_ctrl_wdata.bind(*p_49_c0_ddr4_s_axi_ctrl_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_49_c0_ddr4_s_axi_ctrl_wdata);
        xsim_sc_channel<0, bool > *p_49_c0_ddr4_s_axi_ctrl_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_49->c0_ddr4_s_axi_ctrl_bvalid.bind(*p_49_c0_ddr4_s_axi_ctrl_bvalid);
        p_49_c0_ddr4_s_axi_ctrl_bvalid->set_sv_netview_offsetfromdp(10767872);
        xsim_sc_channel<0, bool > *p_49_c0_ddr4_s_axi_ctrl_bready = new xsim_sc_channel<0, bool >();
        sc_inst_49->c0_ddr4_s_axi_ctrl_bready.bind(*p_49_c0_ddr4_s_axi_ctrl_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_49_c0_ddr4_s_axi_ctrl_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_49_c0_ddr4_s_axi_ctrl_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_49->c0_ddr4_s_axi_ctrl_bresp.bind(*p_49_c0_ddr4_s_axi_ctrl_bresp);
        p_49_c0_ddr4_s_axi_ctrl_bresp->set_sv_netview_offsetfromdp(10767984);
        xsim_sc_channel<0, bool > *p_49_c0_ddr4_s_axi_ctrl_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_49->c0_ddr4_s_axi_ctrl_arvalid.bind(*p_49_c0_ddr4_s_axi_ctrl_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_49_c0_ddr4_s_axi_ctrl_arvalid);
        xsim_sc_channel<0, bool > *p_49_c0_ddr4_s_axi_ctrl_arready = new xsim_sc_channel<0, bool >();
        sc_inst_49->c0_ddr4_s_axi_ctrl_arready.bind(*p_49_c0_ddr4_s_axi_ctrl_arready);
        p_49_c0_ddr4_s_axi_ctrl_arready->set_sv_netview_offsetfromdp(10768096);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_49_c0_ddr4_s_axi_ctrl_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_49->c0_ddr4_s_axi_ctrl_araddr.bind(*p_49_c0_ddr4_s_axi_ctrl_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_49_c0_ddr4_s_axi_ctrl_araddr);
        xsim_sc_channel<0, bool > *p_49_c0_ddr4_s_axi_ctrl_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_49->c0_ddr4_s_axi_ctrl_rvalid.bind(*p_49_c0_ddr4_s_axi_ctrl_rvalid);
        p_49_c0_ddr4_s_axi_ctrl_rvalid->set_sv_netview_offsetfromdp(10768208);
        xsim_sc_channel<0, bool > *p_49_c0_ddr4_s_axi_ctrl_rready = new xsim_sc_channel<0, bool >();
        sc_inst_49->c0_ddr4_s_axi_ctrl_rready.bind(*p_49_c0_ddr4_s_axi_ctrl_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_49_c0_ddr4_s_axi_ctrl_rready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_49_c0_ddr4_s_axi_ctrl_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_49->c0_ddr4_s_axi_ctrl_rdata.bind(*p_49_c0_ddr4_s_axi_ctrl_rdata);
        p_49_c0_ddr4_s_axi_ctrl_rdata->set_sv_netview_offsetfromdp(10768320);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_49_c0_ddr4_s_axi_ctrl_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_49->c0_ddr4_s_axi_ctrl_rresp.bind(*p_49_c0_ddr4_s_axi_ctrl_rresp);
        p_49_c0_ddr4_s_axi_ctrl_rresp->set_sv_netview_offsetfromdp(10768376);
        xsim_sc_channel<0, bool > *p_49_c0_ddr4_interrupt = new xsim_sc_channel<0, bool >();
        sc_inst_49->c0_ddr4_interrupt.bind(*p_49_c0_ddr4_interrupt);
        p_49_c0_ddr4_interrupt->set_sv_netview_offsetfromdp(10768432);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_49_c0_ddr4_s_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_49->c0_ddr4_s_axi_awid.bind(*p_49_c0_ddr4_s_axi_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_49_c0_ddr4_s_axi_awid);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_49_c0_ddr4_s_axi_awaddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_49->c0_ddr4_s_axi_awaddr.bind(*p_49_c0_ddr4_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_49_c0_ddr4_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_49_c0_ddr4_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_49->c0_ddr4_s_axi_awlen.bind(*p_49_c0_ddr4_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_49_c0_ddr4_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_49_c0_ddr4_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_49->c0_ddr4_s_axi_awsize.bind(*p_49_c0_ddr4_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_49_c0_ddr4_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_49_c0_ddr4_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_49->c0_ddr4_s_axi_awburst.bind(*p_49_c0_ddr4_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_49_c0_ddr4_s_axi_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_49_c0_ddr4_s_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_49->c0_ddr4_s_axi_awlock.bind(*p_49_c0_ddr4_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_49_c0_ddr4_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_49_c0_ddr4_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_49->c0_ddr4_s_axi_awcache.bind(*p_49_c0_ddr4_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_49_c0_ddr4_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_49_c0_ddr4_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_49->c0_ddr4_s_axi_awprot.bind(*p_49_c0_ddr4_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_49_c0_ddr4_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_49_c0_ddr4_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_49->c0_ddr4_s_axi_awqos.bind(*p_49_c0_ddr4_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_49_c0_ddr4_s_axi_awqos);
        xsim_sc_channel<0, bool > *p_49_c0_ddr4_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_49->c0_ddr4_s_axi_awvalid.bind(*p_49_c0_ddr4_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_49_c0_ddr4_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_49_c0_ddr4_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_49->c0_ddr4_s_axi_awready.bind(*p_49_c0_ddr4_s_axi_awready);
        p_49_c0_ddr4_s_axi_awready->set_sv_netview_offsetfromdp(10769048);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_49_c0_ddr4_s_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_49->c0_ddr4_s_axi_wdata.bind(*p_49_c0_ddr4_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_49_c0_ddr4_s_axi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_49_c0_ddr4_s_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_49->c0_ddr4_s_axi_wstrb.bind(*p_49_c0_ddr4_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_49_c0_ddr4_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_49_c0_ddr4_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_49->c0_ddr4_s_axi_wlast.bind(*p_49_c0_ddr4_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_49_c0_ddr4_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_49_c0_ddr4_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_49->c0_ddr4_s_axi_wvalid.bind(*p_49_c0_ddr4_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_49_c0_ddr4_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_49_c0_ddr4_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_49->c0_ddr4_s_axi_wready.bind(*p_49_c0_ddr4_s_axi_wready);
        p_49_c0_ddr4_s_axi_wready->set_sv_netview_offsetfromdp(10769328);
        xsim_sc_channel<0, bool > *p_49_c0_ddr4_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_49->c0_ddr4_s_axi_bready.bind(*p_49_c0_ddr4_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_49_c0_ddr4_s_axi_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_49_c0_ddr4_s_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_49->c0_ddr4_s_axi_bid.bind(*p_49_c0_ddr4_s_axi_bid);
        p_49_c0_ddr4_s_axi_bid->set_sv_netview_offsetfromdp(10769440);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_49_c0_ddr4_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_49->c0_ddr4_s_axi_bresp.bind(*p_49_c0_ddr4_s_axi_bresp);
        p_49_c0_ddr4_s_axi_bresp->set_sv_netview_offsetfromdp(10769496);
        xsim_sc_channel<0, bool > *p_49_c0_ddr4_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_49->c0_ddr4_s_axi_bvalid.bind(*p_49_c0_ddr4_s_axi_bvalid);
        p_49_c0_ddr4_s_axi_bvalid->set_sv_netview_offsetfromdp(10769552);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_49_c0_ddr4_s_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_49->c0_ddr4_s_axi_arid.bind(*p_49_c0_ddr4_s_axi_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_49_c0_ddr4_s_axi_arid);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_49_c0_ddr4_s_axi_araddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_49->c0_ddr4_s_axi_araddr.bind(*p_49_c0_ddr4_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_49_c0_ddr4_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_49_c0_ddr4_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_49->c0_ddr4_s_axi_arlen.bind(*p_49_c0_ddr4_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_49_c0_ddr4_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_49_c0_ddr4_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_49->c0_ddr4_s_axi_arsize.bind(*p_49_c0_ddr4_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_49_c0_ddr4_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_49_c0_ddr4_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_49->c0_ddr4_s_axi_arburst.bind(*p_49_c0_ddr4_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_49_c0_ddr4_s_axi_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_49_c0_ddr4_s_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_49->c0_ddr4_s_axi_arlock.bind(*p_49_c0_ddr4_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_49_c0_ddr4_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_49_c0_ddr4_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_49->c0_ddr4_s_axi_arcache.bind(*p_49_c0_ddr4_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_49_c0_ddr4_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_49_c0_ddr4_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_49->c0_ddr4_s_axi_arprot.bind(*p_49_c0_ddr4_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_49_c0_ddr4_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_49_c0_ddr4_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_49->c0_ddr4_s_axi_arqos.bind(*p_49_c0_ddr4_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_49_c0_ddr4_s_axi_arqos);
        xsim_sc_channel<0, bool > *p_49_c0_ddr4_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_49->c0_ddr4_s_axi_arvalid.bind(*p_49_c0_ddr4_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_49_c0_ddr4_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_49_c0_ddr4_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_49->c0_ddr4_s_axi_arready.bind(*p_49_c0_ddr4_s_axi_arready);
        p_49_c0_ddr4_s_axi_arready->set_sv_netview_offsetfromdp(10770168);
        xsim_sc_channel<0, bool > *p_49_c0_ddr4_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_49->c0_ddr4_s_axi_rready.bind(*p_49_c0_ddr4_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_49_c0_ddr4_s_axi_rready);
        xsim_sc_channel<0, bool > *p_49_c0_ddr4_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_49->c0_ddr4_s_axi_rlast.bind(*p_49_c0_ddr4_s_axi_rlast);
        p_49_c0_ddr4_s_axi_rlast->set_sv_netview_offsetfromdp(10770280);
        xsim_sc_channel<0, bool > *p_49_c0_ddr4_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_49->c0_ddr4_s_axi_rvalid.bind(*p_49_c0_ddr4_s_axi_rvalid);
        p_49_c0_ddr4_s_axi_rvalid->set_sv_netview_offsetfromdp(10770336);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_49_c0_ddr4_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_49->c0_ddr4_s_axi_rresp.bind(*p_49_c0_ddr4_s_axi_rresp);
        p_49_c0_ddr4_s_axi_rresp->set_sv_netview_offsetfromdp(10770392);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_49_c0_ddr4_s_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_49->c0_ddr4_s_axi_rid.bind(*p_49_c0_ddr4_s_axi_rid);
        p_49_c0_ddr4_s_axi_rid->set_sv_netview_offsetfromdp(10770448);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_49_c0_ddr4_s_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_49->c0_ddr4_s_axi_rdata.bind(*p_49_c0_ddr4_s_axi_rdata);
        p_49_c0_ddr4_s_axi_rdata->set_sv_netview_offsetfromdp(10770504);
        xsim_sc_channel<0, bool > *p_49_addn_ui_clkout1 = new xsim_sc_channel<0, bool >();
        sc_inst_49->addn_ui_clkout1.bind(*p_49_addn_ui_clkout1);
        p_49_addn_ui_clkout1->set_sv_netview_offsetfromdp(10770560);
        xsim_sc_channel<0, bool > *p_49_sys_rst = new xsim_sc_channel<0, bool >();
        sc_inst_49->sys_rst.bind(*p_49_sys_rst);
        (*_glb_hdl_sc_channel_map).push_back(p_49_sys_rst);
        sc_inst_50 = new bd_d216_ddr4_mem01_ctrl_cc_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.memory.ddr4_mem01_ctrl_cc");
        sc_inst_50->xsim_set_dbg_index(3064);
        xsim_sc_channel<0, bool > *p_50_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_50->s_axi_aclk.bind(*p_50_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_50_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_50->s_axi_aresetn.bind(*p_50_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_aresetn);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_50_s_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_50->s_axi_awaddr.bind(*p_50_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_50_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_50->s_axi_awprot.bind(*p_50_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_50_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_50->s_axi_awvalid.bind(*p_50_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_50_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_50->s_axi_awready.bind(*p_50_s_axi_awready);
        p_50_s_axi_awready->set_sv_netview_offsetfromdp(10771000);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_50_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_50->s_axi_wdata.bind(*p_50_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_50_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_50->s_axi_wstrb.bind(*p_50_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_50_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_50->s_axi_wvalid.bind(*p_50_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_50_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_50->s_axi_wready.bind(*p_50_s_axi_wready);
        p_50_s_axi_wready->set_sv_netview_offsetfromdp(10771224);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_50_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_50->s_axi_bresp.bind(*p_50_s_axi_bresp);
        p_50_s_axi_bresp->set_sv_netview_offsetfromdp(10771280);
        xsim_sc_channel<0, bool > *p_50_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_50->s_axi_bvalid.bind(*p_50_s_axi_bvalid);
        p_50_s_axi_bvalid->set_sv_netview_offsetfromdp(10771336);
        xsim_sc_channel<0, bool > *p_50_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_50->s_axi_bready.bind(*p_50_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_bready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_50_s_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_50->s_axi_araddr.bind(*p_50_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_50_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_50->s_axi_arprot.bind(*p_50_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_50_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_50->s_axi_arvalid.bind(*p_50_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_50_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_50->s_axi_arready.bind(*p_50_s_axi_arready);
        p_50_s_axi_arready->set_sv_netview_offsetfromdp(10771616);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_50_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_50->s_axi_rdata.bind(*p_50_s_axi_rdata);
        p_50_s_axi_rdata->set_sv_netview_offsetfromdp(10771672);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_50_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_50->s_axi_rresp.bind(*p_50_s_axi_rresp);
        p_50_s_axi_rresp->set_sv_netview_offsetfromdp(10771728);
        xsim_sc_channel<0, bool > *p_50_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_50->s_axi_rvalid.bind(*p_50_s_axi_rvalid);
        p_50_s_axi_rvalid->set_sv_netview_offsetfromdp(10771784);
        xsim_sc_channel<0, bool > *p_50_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_50->s_axi_rready.bind(*p_50_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_rready);
        xsim_sc_channel<0, bool > *p_50_m_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_50->m_axi_aclk.bind(*p_50_m_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_50_m_axi_aclk);
        xsim_sc_channel<0, bool > *p_50_m_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_50->m_axi_aresetn.bind(*p_50_m_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_50_m_axi_aresetn);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_50_m_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_50->m_axi_awaddr.bind(*p_50_m_axi_awaddr);
        p_50_m_axi_awaddr->set_sv_netview_offsetfromdp(10772008);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_50_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_50->m_axi_awprot.bind(*p_50_m_axi_awprot);
        p_50_m_axi_awprot->set_sv_netview_offsetfromdp(10772064);
        xsim_sc_channel<0, bool > *p_50_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_50->m_axi_awvalid.bind(*p_50_m_axi_awvalid);
        p_50_m_axi_awvalid->set_sv_netview_offsetfromdp(10772120);
        xsim_sc_channel<0, bool > *p_50_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_50->m_axi_awready.bind(*p_50_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_50_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_50_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_50->m_axi_wdata.bind(*p_50_m_axi_wdata);
        p_50_m_axi_wdata->set_sv_netview_offsetfromdp(10772232);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_50_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_50->m_axi_wstrb.bind(*p_50_m_axi_wstrb);
        p_50_m_axi_wstrb->set_sv_netview_offsetfromdp(10772288);
        xsim_sc_channel<0, bool > *p_50_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_50->m_axi_wvalid.bind(*p_50_m_axi_wvalid);
        p_50_m_axi_wvalid->set_sv_netview_offsetfromdp(10772344);
        xsim_sc_channel<0, bool > *p_50_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_50->m_axi_wready.bind(*p_50_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_50_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_50_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_50->m_axi_bresp.bind(*p_50_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_50_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_50_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_50->m_axi_bvalid.bind(*p_50_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_50_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_50_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_50->m_axi_bready.bind(*p_50_m_axi_bready);
        p_50_m_axi_bready->set_sv_netview_offsetfromdp(10772568);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_50_m_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_50->m_axi_araddr.bind(*p_50_m_axi_araddr);
        p_50_m_axi_araddr->set_sv_netview_offsetfromdp(10772624);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_50_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_50->m_axi_arprot.bind(*p_50_m_axi_arprot);
        p_50_m_axi_arprot->set_sv_netview_offsetfromdp(10772680);
        xsim_sc_channel<0, bool > *p_50_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_50->m_axi_arvalid.bind(*p_50_m_axi_arvalid);
        p_50_m_axi_arvalid->set_sv_netview_offsetfromdp(10772736);
        xsim_sc_channel<0, bool > *p_50_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_50->m_axi_arready.bind(*p_50_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_50_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_50_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_50->m_axi_rdata.bind(*p_50_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_50_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_50_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_50->m_axi_rresp.bind(*p_50_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_50_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_50_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_50->m_axi_rvalid.bind(*p_50_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_50_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_50_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_50->m_axi_rready.bind(*p_50_m_axi_rready);
        p_50_m_axi_rready->set_sv_netview_offsetfromdp(10773016);
        sc_inst_51 = new bd_d216_interconnect_ddrmem_ctrl_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.memory.interconnect_ddrmem_ctrl");
        sc_inst_51->xsim_set_dbg_index(3065);
        xsim_sc_channel<0, bool > *p_51_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_51->aclk.bind(*p_51_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_51_aclk);
        xsim_sc_channel<0, bool > *p_51_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_51->aresetn.bind(*p_51_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_51_aresetn);
        xsim_sc_channel<31, sc_dt::sc_bv<31> > *p_51_s_axi_awaddr = new xsim_sc_channel<31, sc_dt::sc_bv<31> >();
        sc_inst_51->s_axi_awaddr.bind(*p_51_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_51_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_51->s_axi_awprot.bind(*p_51_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_awprot);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_51_s_axi_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_51->s_axi_awvalid.bind(*p_51_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_awvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_51_s_axi_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_51->s_axi_awready.bind(*p_51_s_axi_awready);
        p_51_s_axi_awready->set_sv_netview_offsetfromdp(10773400);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_51_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_51->s_axi_wdata.bind(*p_51_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_51_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_51->s_axi_wstrb.bind(*p_51_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_wstrb);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_51_s_axi_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_51->s_axi_wvalid.bind(*p_51_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_wvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_51_s_axi_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_51->s_axi_wready.bind(*p_51_s_axi_wready);
        p_51_s_axi_wready->set_sv_netview_offsetfromdp(10773624);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_51_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_51->s_axi_bresp.bind(*p_51_s_axi_bresp);
        p_51_s_axi_bresp->set_sv_netview_offsetfromdp(10773680);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_51_s_axi_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_51->s_axi_bvalid.bind(*p_51_s_axi_bvalid);
        p_51_s_axi_bvalid->set_sv_netview_offsetfromdp(10773736);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_51_s_axi_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_51->s_axi_bready.bind(*p_51_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_bready);
        xsim_sc_channel<31, sc_dt::sc_bv<31> > *p_51_s_axi_araddr = new xsim_sc_channel<31, sc_dt::sc_bv<31> >();
        sc_inst_51->s_axi_araddr.bind(*p_51_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_51_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_51->s_axi_arprot.bind(*p_51_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_arprot);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_51_s_axi_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_51->s_axi_arvalid.bind(*p_51_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_arvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_51_s_axi_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_51->s_axi_arready.bind(*p_51_s_axi_arready);
        p_51_s_axi_arready->set_sv_netview_offsetfromdp(10774016);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_51_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_51->s_axi_rdata.bind(*p_51_s_axi_rdata);
        p_51_s_axi_rdata->set_sv_netview_offsetfromdp(10774072);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_51_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_51->s_axi_rresp.bind(*p_51_s_axi_rresp);
        p_51_s_axi_rresp->set_sv_netview_offsetfromdp(10774128);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_51_s_axi_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_51->s_axi_rvalid.bind(*p_51_s_axi_rvalid);
        p_51_s_axi_rvalid->set_sv_netview_offsetfromdp(10774184);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_51_s_axi_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_51->s_axi_rready.bind(*p_51_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_rready);
        xsim_sc_channel<62, sc_dt::sc_bv<62> > *p_51_m_axi_awaddr = new xsim_sc_channel<62, sc_dt::sc_bv<62> >();
        sc_inst_51->m_axi_awaddr.bind(*p_51_m_axi_awaddr);
        p_51_m_axi_awaddr->set_sv_netview_offsetfromdp(10774296);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_51_m_axi_awprot = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_51->m_axi_awprot.bind(*p_51_m_axi_awprot);
        p_51_m_axi_awprot->set_sv_netview_offsetfromdp(10774352);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_51_m_axi_awvalid = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_51->m_axi_awvalid.bind(*p_51_m_axi_awvalid);
        p_51_m_axi_awvalid->set_sv_netview_offsetfromdp(10774408);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_51_m_axi_awready = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_51->m_axi_awready.bind(*p_51_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_51_m_axi_awready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_51_m_axi_wdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_51->m_axi_wdata.bind(*p_51_m_axi_wdata);
        p_51_m_axi_wdata->set_sv_netview_offsetfromdp(10774520);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_51_m_axi_wstrb = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_51->m_axi_wstrb.bind(*p_51_m_axi_wstrb);
        p_51_m_axi_wstrb->set_sv_netview_offsetfromdp(10774576);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_51_m_axi_wvalid = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_51->m_axi_wvalid.bind(*p_51_m_axi_wvalid);
        p_51_m_axi_wvalid->set_sv_netview_offsetfromdp(10774632);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_51_m_axi_wready = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_51->m_axi_wready.bind(*p_51_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_51_m_axi_wready);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_51_m_axi_bresp = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_51->m_axi_bresp.bind(*p_51_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_51_m_axi_bresp);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_51_m_axi_bvalid = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_51->m_axi_bvalid.bind(*p_51_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_51_m_axi_bvalid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_51_m_axi_bready = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_51->m_axi_bready.bind(*p_51_m_axi_bready);
        p_51_m_axi_bready->set_sv_netview_offsetfromdp(10774856);
        xsim_sc_channel<62, sc_dt::sc_bv<62> > *p_51_m_axi_araddr = new xsim_sc_channel<62, sc_dt::sc_bv<62> >();
        sc_inst_51->m_axi_araddr.bind(*p_51_m_axi_araddr);
        p_51_m_axi_araddr->set_sv_netview_offsetfromdp(10774912);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_51_m_axi_arprot = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_51->m_axi_arprot.bind(*p_51_m_axi_arprot);
        p_51_m_axi_arprot->set_sv_netview_offsetfromdp(10774968);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_51_m_axi_arvalid = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_51->m_axi_arvalid.bind(*p_51_m_axi_arvalid);
        p_51_m_axi_arvalid->set_sv_netview_offsetfromdp(10775024);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_51_m_axi_arready = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_51->m_axi_arready.bind(*p_51_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_51_m_axi_arready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_51_m_axi_rdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_51->m_axi_rdata.bind(*p_51_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_51_m_axi_rdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_51_m_axi_rresp = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_51->m_axi_rresp.bind(*p_51_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_51_m_axi_rresp);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_51_m_axi_rvalid = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_51->m_axi_rvalid.bind(*p_51_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_51_m_axi_rvalid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_51_m_axi_rready = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_51->m_axi_rready.bind(*p_51_m_axi_rready);
        p_51_m_axi_rready->set_sv_netview_offsetfromdp(10775304);
        sc_inst_52 = new bd_d216_plram_mem00_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.memory.plram_mem00");
        sc_inst_52->xsim_set_dbg_index(3066);
        xsim_sc_channel<0, bool > *p_52_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_52->s_axi_aclk.bind(*p_52_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_52_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_52_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_52->s_axi_aresetn.bind(*p_52_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_52_s_axi_aresetn);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_52_s_axi_awaddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_52->s_axi_awaddr.bind(*p_52_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_52_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_52_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_52->s_axi_awlen.bind(*p_52_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_52_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_52_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_52->s_axi_awsize.bind(*p_52_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_52_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_52_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_52->s_axi_awburst.bind(*p_52_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_52_s_axi_awburst);
        xsim_sc_channel<0, bool > *p_52_s_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_52->s_axi_awlock.bind(*p_52_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_52_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_52_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_52->s_axi_awcache.bind(*p_52_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_52_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_52_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_52->s_axi_awprot.bind(*p_52_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_52_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_52_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_52->s_axi_awvalid.bind(*p_52_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_52_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_52_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_52->s_axi_awready.bind(*p_52_s_axi_awready);
        p_52_s_axi_awready->set_sv_netview_offsetfromdp(10775968);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_52_s_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_52->s_axi_wdata.bind(*p_52_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_52_s_axi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_52_s_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_52->s_axi_wstrb.bind(*p_52_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_52_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_52_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_52->s_axi_wlast.bind(*p_52_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_52_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_52_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_52->s_axi_wvalid.bind(*p_52_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_52_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_52_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_52->s_axi_wready.bind(*p_52_s_axi_wready);
        p_52_s_axi_wready->set_sv_netview_offsetfromdp(10776248);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_52_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_52->s_axi_bresp.bind(*p_52_s_axi_bresp);
        p_52_s_axi_bresp->set_sv_netview_offsetfromdp(10776304);
        xsim_sc_channel<0, bool > *p_52_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_52->s_axi_bvalid.bind(*p_52_s_axi_bvalid);
        p_52_s_axi_bvalid->set_sv_netview_offsetfromdp(10776360);
        xsim_sc_channel<0, bool > *p_52_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_52->s_axi_bready.bind(*p_52_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_52_s_axi_bready);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_52_s_axi_araddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_52->s_axi_araddr.bind(*p_52_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_52_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_52_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_52->s_axi_arlen.bind(*p_52_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_52_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_52_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_52->s_axi_arsize.bind(*p_52_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_52_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_52_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_52->s_axi_arburst.bind(*p_52_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_52_s_axi_arburst);
        xsim_sc_channel<0, bool > *p_52_s_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_52->s_axi_arlock.bind(*p_52_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_52_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_52_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_52->s_axi_arcache.bind(*p_52_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_52_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_52_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_52->s_axi_arprot.bind(*p_52_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_52_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_52_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_52->s_axi_arvalid.bind(*p_52_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_52_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_52_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_52->s_axi_arready.bind(*p_52_s_axi_arready);
        p_52_s_axi_arready->set_sv_netview_offsetfromdp(10776920);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_52_s_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_52->s_axi_rdata.bind(*p_52_s_axi_rdata);
        p_52_s_axi_rdata->set_sv_netview_offsetfromdp(10776976);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_52_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_52->s_axi_rresp.bind(*p_52_s_axi_rresp);
        p_52_s_axi_rresp->set_sv_netview_offsetfromdp(10777032);
        xsim_sc_channel<0, bool > *p_52_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_52->s_axi_rlast.bind(*p_52_s_axi_rlast);
        p_52_s_axi_rlast->set_sv_netview_offsetfromdp(10777088);
        xsim_sc_channel<0, bool > *p_52_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_52->s_axi_rvalid.bind(*p_52_s_axi_rvalid);
        p_52_s_axi_rvalid->set_sv_netview_offsetfromdp(10777144);
        xsim_sc_channel<0, bool > *p_52_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_52->s_axi_rready.bind(*p_52_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_52_s_axi_rready);
        xsim_sc_channel<0, bool > *p_52_bram_rst_a = new xsim_sc_channel<0, bool >();
        sc_inst_52->bram_rst_a.bind(*p_52_bram_rst_a);
        p_52_bram_rst_a->set_sv_netview_offsetfromdp(10777256);
        xsim_sc_channel<0, bool > *p_52_bram_clk_a = new xsim_sc_channel<0, bool >();
        sc_inst_52->bram_clk_a.bind(*p_52_bram_clk_a);
        p_52_bram_clk_a->set_sv_netview_offsetfromdp(10777312);
        xsim_sc_channel<0, bool > *p_52_bram_en_a = new xsim_sc_channel<0, bool >();
        sc_inst_52->bram_en_a.bind(*p_52_bram_en_a);
        p_52_bram_en_a->set_sv_netview_offsetfromdp(10777368);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_52_bram_we_a = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_52->bram_we_a.bind(*p_52_bram_we_a);
        p_52_bram_we_a->set_sv_netview_offsetfromdp(10777424);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_52_bram_addr_a = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_52->bram_addr_a.bind(*p_52_bram_addr_a);
        p_52_bram_addr_a->set_sv_netview_offsetfromdp(10777480);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_52_bram_wrdata_a = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_52->bram_wrdata_a.bind(*p_52_bram_wrdata_a);
        p_52_bram_wrdata_a->set_sv_netview_offsetfromdp(10777536);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_52_bram_rddata_a = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_52->bram_rddata_a.bind(*p_52_bram_rddata_a);
        (*_glb_hdl_sc_channel_map).push_back(p_52_bram_rddata_a);
        xsim_sc_channel<0, bool > *p_52_bram_rst_b = new xsim_sc_channel<0, bool >();
        sc_inst_52->bram_rst_b.bind(*p_52_bram_rst_b);
        p_52_bram_rst_b->set_sv_netview_offsetfromdp(10777648);
        xsim_sc_channel<0, bool > *p_52_bram_clk_b = new xsim_sc_channel<0, bool >();
        sc_inst_52->bram_clk_b.bind(*p_52_bram_clk_b);
        p_52_bram_clk_b->set_sv_netview_offsetfromdp(10777704);
        xsim_sc_channel<0, bool > *p_52_bram_en_b = new xsim_sc_channel<0, bool >();
        sc_inst_52->bram_en_b.bind(*p_52_bram_en_b);
        p_52_bram_en_b->set_sv_netview_offsetfromdp(10777760);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_52_bram_we_b = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_52->bram_we_b.bind(*p_52_bram_we_b);
        p_52_bram_we_b->set_sv_netview_offsetfromdp(10777816);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_52_bram_addr_b = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_52->bram_addr_b.bind(*p_52_bram_addr_b);
        p_52_bram_addr_b->set_sv_netview_offsetfromdp(10777872);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_52_bram_wrdata_b = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_52->bram_wrdata_b.bind(*p_52_bram_wrdata_b);
        p_52_bram_wrdata_b->set_sv_netview_offsetfromdp(10777928);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_52_bram_rddata_b = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_52->bram_rddata_b.bind(*p_52_bram_rddata_b);
        (*_glb_hdl_sc_channel_map).push_back(p_52_bram_rddata_b);
        sc_inst_53 = new bd_d216_plram_mem01_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.memory.plram_mem01");
        sc_inst_53->xsim_set_dbg_index(3068);
        xsim_sc_channel<0, bool > *p_53_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_53->s_axi_aclk.bind(*p_53_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_53_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_53->s_axi_aresetn.bind(*p_53_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_aresetn);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_53_s_axi_awaddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_53->s_axi_awaddr.bind(*p_53_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_53_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_53->s_axi_awlen.bind(*p_53_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_53_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_53->s_axi_awsize.bind(*p_53_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_53_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_53->s_axi_awburst.bind(*p_53_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_awburst);
        xsim_sc_channel<0, bool > *p_53_s_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_53->s_axi_awlock.bind(*p_53_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_53_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_53->s_axi_awcache.bind(*p_53_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_53_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_53->s_axi_awprot.bind(*p_53_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_53_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_53->s_axi_awvalid.bind(*p_53_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_53_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_53->s_axi_awready.bind(*p_53_s_axi_awready);
        p_53_s_axi_awready->set_sv_netview_offsetfromdp(10839768);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_53_s_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_53->s_axi_wdata.bind(*p_53_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_53_s_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_53->s_axi_wstrb.bind(*p_53_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_53_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_53->s_axi_wlast.bind(*p_53_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_53_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_53->s_axi_wvalid.bind(*p_53_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_53_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_53->s_axi_wready.bind(*p_53_s_axi_wready);
        p_53_s_axi_wready->set_sv_netview_offsetfromdp(10840048);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_53_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_53->s_axi_bresp.bind(*p_53_s_axi_bresp);
        p_53_s_axi_bresp->set_sv_netview_offsetfromdp(10840104);
        xsim_sc_channel<0, bool > *p_53_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_53->s_axi_bvalid.bind(*p_53_s_axi_bvalid);
        p_53_s_axi_bvalid->set_sv_netview_offsetfromdp(10840160);
        xsim_sc_channel<0, bool > *p_53_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_53->s_axi_bready.bind(*p_53_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_bready);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_53_s_axi_araddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_53->s_axi_araddr.bind(*p_53_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_53_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_53->s_axi_arlen.bind(*p_53_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_53_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_53->s_axi_arsize.bind(*p_53_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_53_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_53->s_axi_arburst.bind(*p_53_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_arburst);
        xsim_sc_channel<0, bool > *p_53_s_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_53->s_axi_arlock.bind(*p_53_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_53_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_53->s_axi_arcache.bind(*p_53_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_53_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_53->s_axi_arprot.bind(*p_53_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_53_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_53->s_axi_arvalid.bind(*p_53_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_53_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_53->s_axi_arready.bind(*p_53_s_axi_arready);
        p_53_s_axi_arready->set_sv_netview_offsetfromdp(10840720);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_53_s_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_53->s_axi_rdata.bind(*p_53_s_axi_rdata);
        p_53_s_axi_rdata->set_sv_netview_offsetfromdp(10840776);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_53_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_53->s_axi_rresp.bind(*p_53_s_axi_rresp);
        p_53_s_axi_rresp->set_sv_netview_offsetfromdp(10840832);
        xsim_sc_channel<0, bool > *p_53_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_53->s_axi_rlast.bind(*p_53_s_axi_rlast);
        p_53_s_axi_rlast->set_sv_netview_offsetfromdp(10840888);
        xsim_sc_channel<0, bool > *p_53_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_53->s_axi_rvalid.bind(*p_53_s_axi_rvalid);
        p_53_s_axi_rvalid->set_sv_netview_offsetfromdp(10840944);
        xsim_sc_channel<0, bool > *p_53_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_53->s_axi_rready.bind(*p_53_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_rready);
        xsim_sc_channel<0, bool > *p_53_bram_rst_a = new xsim_sc_channel<0, bool >();
        sc_inst_53->bram_rst_a.bind(*p_53_bram_rst_a);
        p_53_bram_rst_a->set_sv_netview_offsetfromdp(10841056);
        xsim_sc_channel<0, bool > *p_53_bram_clk_a = new xsim_sc_channel<0, bool >();
        sc_inst_53->bram_clk_a.bind(*p_53_bram_clk_a);
        p_53_bram_clk_a->set_sv_netview_offsetfromdp(10841112);
        xsim_sc_channel<0, bool > *p_53_bram_en_a = new xsim_sc_channel<0, bool >();
        sc_inst_53->bram_en_a.bind(*p_53_bram_en_a);
        p_53_bram_en_a->set_sv_netview_offsetfromdp(10841168);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_53_bram_we_a = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_53->bram_we_a.bind(*p_53_bram_we_a);
        p_53_bram_we_a->set_sv_netview_offsetfromdp(10841224);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_53_bram_addr_a = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_53->bram_addr_a.bind(*p_53_bram_addr_a);
        p_53_bram_addr_a->set_sv_netview_offsetfromdp(10841280);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_53_bram_wrdata_a = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_53->bram_wrdata_a.bind(*p_53_bram_wrdata_a);
        p_53_bram_wrdata_a->set_sv_netview_offsetfromdp(10841336);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_53_bram_rddata_a = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_53->bram_rddata_a.bind(*p_53_bram_rddata_a);
        (*_glb_hdl_sc_channel_map).push_back(p_53_bram_rddata_a);
        xsim_sc_channel<0, bool > *p_53_bram_rst_b = new xsim_sc_channel<0, bool >();
        sc_inst_53->bram_rst_b.bind(*p_53_bram_rst_b);
        p_53_bram_rst_b->set_sv_netview_offsetfromdp(10841448);
        xsim_sc_channel<0, bool > *p_53_bram_clk_b = new xsim_sc_channel<0, bool >();
        sc_inst_53->bram_clk_b.bind(*p_53_bram_clk_b);
        p_53_bram_clk_b->set_sv_netview_offsetfromdp(10841504);
        xsim_sc_channel<0, bool > *p_53_bram_en_b = new xsim_sc_channel<0, bool >();
        sc_inst_53->bram_en_b.bind(*p_53_bram_en_b);
        p_53_bram_en_b->set_sv_netview_offsetfromdp(10841560);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_53_bram_we_b = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_53->bram_we_b.bind(*p_53_bram_we_b);
        p_53_bram_we_b->set_sv_netview_offsetfromdp(10841616);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_53_bram_addr_b = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_53->bram_addr_b.bind(*p_53_bram_addr_b);
        p_53_bram_addr_b->set_sv_netview_offsetfromdp(10841672);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_53_bram_wrdata_b = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_53->bram_wrdata_b.bind(*p_53_bram_wrdata_b);
        p_53_bram_wrdata_b->set_sv_netview_offsetfromdp(10841728);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_53_bram_rddata_b = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_53->bram_rddata_b.bind(*p_53_bram_rddata_b);
        (*_glb_hdl_sc_channel_map).push_back(p_53_bram_rddata_b);
        sc_inst_54 = new bd_d216_plram_mem02_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.memory.plram_mem02");
        sc_inst_54->xsim_set_dbg_index(3070);
        xsim_sc_channel<0, bool > *p_54_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_54->s_axi_aclk.bind(*p_54_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_54_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_54->s_axi_aresetn.bind(*p_54_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_aresetn);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_54_s_axi_awaddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_54->s_axi_awaddr.bind(*p_54_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_54_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_54->s_axi_awlen.bind(*p_54_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_54_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_54->s_axi_awsize.bind(*p_54_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_54_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_54->s_axi_awburst.bind(*p_54_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_awburst);
        xsim_sc_channel<0, bool > *p_54_s_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_54->s_axi_awlock.bind(*p_54_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_54_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_54->s_axi_awcache.bind(*p_54_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_54_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_54->s_axi_awprot.bind(*p_54_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_54_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_54->s_axi_awvalid.bind(*p_54_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_54_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_54->s_axi_awready.bind(*p_54_s_axi_awready);
        p_54_s_axi_awready->set_sv_netview_offsetfromdp(10903568);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_54_s_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_54->s_axi_wdata.bind(*p_54_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_54_s_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_54->s_axi_wstrb.bind(*p_54_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_54_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_54->s_axi_wlast.bind(*p_54_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_54_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_54->s_axi_wvalid.bind(*p_54_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_54_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_54->s_axi_wready.bind(*p_54_s_axi_wready);
        p_54_s_axi_wready->set_sv_netview_offsetfromdp(10903848);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_54_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_54->s_axi_bresp.bind(*p_54_s_axi_bresp);
        p_54_s_axi_bresp->set_sv_netview_offsetfromdp(10903904);
        xsim_sc_channel<0, bool > *p_54_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_54->s_axi_bvalid.bind(*p_54_s_axi_bvalid);
        p_54_s_axi_bvalid->set_sv_netview_offsetfromdp(10903960);
        xsim_sc_channel<0, bool > *p_54_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_54->s_axi_bready.bind(*p_54_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_bready);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_54_s_axi_araddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_54->s_axi_araddr.bind(*p_54_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_54_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_54->s_axi_arlen.bind(*p_54_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_54_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_54->s_axi_arsize.bind(*p_54_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_54_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_54->s_axi_arburst.bind(*p_54_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_arburst);
        xsim_sc_channel<0, bool > *p_54_s_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_54->s_axi_arlock.bind(*p_54_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_54_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_54->s_axi_arcache.bind(*p_54_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_54_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_54->s_axi_arprot.bind(*p_54_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_54_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_54->s_axi_arvalid.bind(*p_54_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_54_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_54->s_axi_arready.bind(*p_54_s_axi_arready);
        p_54_s_axi_arready->set_sv_netview_offsetfromdp(10904520);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_54_s_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_54->s_axi_rdata.bind(*p_54_s_axi_rdata);
        p_54_s_axi_rdata->set_sv_netview_offsetfromdp(10904576);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_54_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_54->s_axi_rresp.bind(*p_54_s_axi_rresp);
        p_54_s_axi_rresp->set_sv_netview_offsetfromdp(10904632);
        xsim_sc_channel<0, bool > *p_54_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_54->s_axi_rlast.bind(*p_54_s_axi_rlast);
        p_54_s_axi_rlast->set_sv_netview_offsetfromdp(10904688);
        xsim_sc_channel<0, bool > *p_54_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_54->s_axi_rvalid.bind(*p_54_s_axi_rvalid);
        p_54_s_axi_rvalid->set_sv_netview_offsetfromdp(10904744);
        xsim_sc_channel<0, bool > *p_54_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_54->s_axi_rready.bind(*p_54_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_rready);
        xsim_sc_channel<0, bool > *p_54_bram_rst_a = new xsim_sc_channel<0, bool >();
        sc_inst_54->bram_rst_a.bind(*p_54_bram_rst_a);
        p_54_bram_rst_a->set_sv_netview_offsetfromdp(10904856);
        xsim_sc_channel<0, bool > *p_54_bram_clk_a = new xsim_sc_channel<0, bool >();
        sc_inst_54->bram_clk_a.bind(*p_54_bram_clk_a);
        p_54_bram_clk_a->set_sv_netview_offsetfromdp(10904912);
        xsim_sc_channel<0, bool > *p_54_bram_en_a = new xsim_sc_channel<0, bool >();
        sc_inst_54->bram_en_a.bind(*p_54_bram_en_a);
        p_54_bram_en_a->set_sv_netview_offsetfromdp(10904968);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_54_bram_we_a = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_54->bram_we_a.bind(*p_54_bram_we_a);
        p_54_bram_we_a->set_sv_netview_offsetfromdp(10905024);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_54_bram_addr_a = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_54->bram_addr_a.bind(*p_54_bram_addr_a);
        p_54_bram_addr_a->set_sv_netview_offsetfromdp(10905080);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_54_bram_wrdata_a = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_54->bram_wrdata_a.bind(*p_54_bram_wrdata_a);
        p_54_bram_wrdata_a->set_sv_netview_offsetfromdp(10905136);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_54_bram_rddata_a = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_54->bram_rddata_a.bind(*p_54_bram_rddata_a);
        (*_glb_hdl_sc_channel_map).push_back(p_54_bram_rddata_a);
        xsim_sc_channel<0, bool > *p_54_bram_rst_b = new xsim_sc_channel<0, bool >();
        sc_inst_54->bram_rst_b.bind(*p_54_bram_rst_b);
        p_54_bram_rst_b->set_sv_netview_offsetfromdp(10905248);
        xsim_sc_channel<0, bool > *p_54_bram_clk_b = new xsim_sc_channel<0, bool >();
        sc_inst_54->bram_clk_b.bind(*p_54_bram_clk_b);
        p_54_bram_clk_b->set_sv_netview_offsetfromdp(10905304);
        xsim_sc_channel<0, bool > *p_54_bram_en_b = new xsim_sc_channel<0, bool >();
        sc_inst_54->bram_en_b.bind(*p_54_bram_en_b);
        p_54_bram_en_b->set_sv_netview_offsetfromdp(10905360);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_54_bram_we_b = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_54->bram_we_b.bind(*p_54_bram_we_b);
        p_54_bram_we_b->set_sv_netview_offsetfromdp(10905416);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_54_bram_addr_b = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_54->bram_addr_b.bind(*p_54_bram_addr_b);
        p_54_bram_addr_b->set_sv_netview_offsetfromdp(10905472);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_54_bram_wrdata_b = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_54->bram_wrdata_b.bind(*p_54_bram_wrdata_b);
        p_54_bram_wrdata_b->set_sv_netview_offsetfromdp(10905528);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_54_bram_rddata_b = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_54->bram_rddata_b.bind(*p_54_bram_rddata_b);
        (*_glb_hdl_sc_channel_map).push_back(p_54_bram_rddata_b);
        sc_inst_55 = new bd_d216_plram_mem03_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.memory.plram_mem03");
        sc_inst_55->xsim_set_dbg_index(3072);
        xsim_sc_channel<0, bool > *p_55_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_55->s_axi_aclk.bind(*p_55_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_55_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_55->s_axi_aresetn.bind(*p_55_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_aresetn);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_55_s_axi_awaddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_55->s_axi_awaddr.bind(*p_55_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_55_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_55->s_axi_awlen.bind(*p_55_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_55_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_55->s_axi_awsize.bind(*p_55_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_55_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_55->s_axi_awburst.bind(*p_55_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_awburst);
        xsim_sc_channel<0, bool > *p_55_s_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_55->s_axi_awlock.bind(*p_55_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_55_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_55->s_axi_awcache.bind(*p_55_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_55_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_55->s_axi_awprot.bind(*p_55_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_55_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_55->s_axi_awvalid.bind(*p_55_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_55_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_55->s_axi_awready.bind(*p_55_s_axi_awready);
        p_55_s_axi_awready->set_sv_netview_offsetfromdp(10967368);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_55_s_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_55->s_axi_wdata.bind(*p_55_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_55_s_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_55->s_axi_wstrb.bind(*p_55_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_55_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_55->s_axi_wlast.bind(*p_55_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_55_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_55->s_axi_wvalid.bind(*p_55_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_55_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_55->s_axi_wready.bind(*p_55_s_axi_wready);
        p_55_s_axi_wready->set_sv_netview_offsetfromdp(10967648);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_55_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_55->s_axi_bresp.bind(*p_55_s_axi_bresp);
        p_55_s_axi_bresp->set_sv_netview_offsetfromdp(10967704);
        xsim_sc_channel<0, bool > *p_55_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_55->s_axi_bvalid.bind(*p_55_s_axi_bvalid);
        p_55_s_axi_bvalid->set_sv_netview_offsetfromdp(10967760);
        xsim_sc_channel<0, bool > *p_55_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_55->s_axi_bready.bind(*p_55_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_bready);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_55_s_axi_araddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_55->s_axi_araddr.bind(*p_55_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_55_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_55->s_axi_arlen.bind(*p_55_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_55_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_55->s_axi_arsize.bind(*p_55_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_55_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_55->s_axi_arburst.bind(*p_55_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_arburst);
        xsim_sc_channel<0, bool > *p_55_s_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_55->s_axi_arlock.bind(*p_55_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_55_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_55->s_axi_arcache.bind(*p_55_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_55_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_55->s_axi_arprot.bind(*p_55_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_55_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_55->s_axi_arvalid.bind(*p_55_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_55_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_55->s_axi_arready.bind(*p_55_s_axi_arready);
        p_55_s_axi_arready->set_sv_netview_offsetfromdp(10968320);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_55_s_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_55->s_axi_rdata.bind(*p_55_s_axi_rdata);
        p_55_s_axi_rdata->set_sv_netview_offsetfromdp(10968376);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_55_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_55->s_axi_rresp.bind(*p_55_s_axi_rresp);
        p_55_s_axi_rresp->set_sv_netview_offsetfromdp(10968432);
        xsim_sc_channel<0, bool > *p_55_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_55->s_axi_rlast.bind(*p_55_s_axi_rlast);
        p_55_s_axi_rlast->set_sv_netview_offsetfromdp(10968488);
        xsim_sc_channel<0, bool > *p_55_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_55->s_axi_rvalid.bind(*p_55_s_axi_rvalid);
        p_55_s_axi_rvalid->set_sv_netview_offsetfromdp(10968544);
        xsim_sc_channel<0, bool > *p_55_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_55->s_axi_rready.bind(*p_55_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_rready);
        xsim_sc_channel<0, bool > *p_55_bram_rst_a = new xsim_sc_channel<0, bool >();
        sc_inst_55->bram_rst_a.bind(*p_55_bram_rst_a);
        p_55_bram_rst_a->set_sv_netview_offsetfromdp(10968656);
        xsim_sc_channel<0, bool > *p_55_bram_clk_a = new xsim_sc_channel<0, bool >();
        sc_inst_55->bram_clk_a.bind(*p_55_bram_clk_a);
        p_55_bram_clk_a->set_sv_netview_offsetfromdp(10968712);
        xsim_sc_channel<0, bool > *p_55_bram_en_a = new xsim_sc_channel<0, bool >();
        sc_inst_55->bram_en_a.bind(*p_55_bram_en_a);
        p_55_bram_en_a->set_sv_netview_offsetfromdp(10968768);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_55_bram_we_a = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_55->bram_we_a.bind(*p_55_bram_we_a);
        p_55_bram_we_a->set_sv_netview_offsetfromdp(10968824);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_55_bram_addr_a = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_55->bram_addr_a.bind(*p_55_bram_addr_a);
        p_55_bram_addr_a->set_sv_netview_offsetfromdp(10968880);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_55_bram_wrdata_a = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_55->bram_wrdata_a.bind(*p_55_bram_wrdata_a);
        p_55_bram_wrdata_a->set_sv_netview_offsetfromdp(10968936);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_55_bram_rddata_a = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_55->bram_rddata_a.bind(*p_55_bram_rddata_a);
        (*_glb_hdl_sc_channel_map).push_back(p_55_bram_rddata_a);
        xsim_sc_channel<0, bool > *p_55_bram_rst_b = new xsim_sc_channel<0, bool >();
        sc_inst_55->bram_rst_b.bind(*p_55_bram_rst_b);
        p_55_bram_rst_b->set_sv_netview_offsetfromdp(10969048);
        xsim_sc_channel<0, bool > *p_55_bram_clk_b = new xsim_sc_channel<0, bool >();
        sc_inst_55->bram_clk_b.bind(*p_55_bram_clk_b);
        p_55_bram_clk_b->set_sv_netview_offsetfromdp(10969104);
        xsim_sc_channel<0, bool > *p_55_bram_en_b = new xsim_sc_channel<0, bool >();
        sc_inst_55->bram_en_b.bind(*p_55_bram_en_b);
        p_55_bram_en_b->set_sv_netview_offsetfromdp(10969160);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_55_bram_we_b = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_55->bram_we_b.bind(*p_55_bram_we_b);
        p_55_bram_we_b->set_sv_netview_offsetfromdp(10969216);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_55_bram_addr_b = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_55->bram_addr_b.bind(*p_55_bram_addr_b);
        p_55_bram_addr_b->set_sv_netview_offsetfromdp(10969272);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_55_bram_wrdata_b = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_55->bram_wrdata_b.bind(*p_55_bram_wrdata_b);
        p_55_bram_wrdata_b->set_sv_netview_offsetfromdp(10969328);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_55_bram_rddata_b = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_55->bram_rddata_b.bind(*p_55_bram_rddata_b);
        (*_glb_hdl_sc_channel_map).push_back(p_55_bram_rddata_b);
        sc_inst_56 = new bd_d216_plram_mem04_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.memory.plram_mem04");
        sc_inst_56->xsim_set_dbg_index(3074);
        xsim_sc_channel<0, bool > *p_56_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_56->s_axi_aclk.bind(*p_56_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_56_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_56->s_axi_aresetn.bind(*p_56_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_aresetn);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_56_s_axi_awaddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_56->s_axi_awaddr.bind(*p_56_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_56_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_56->s_axi_awlen.bind(*p_56_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_56_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_56->s_axi_awsize.bind(*p_56_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_56_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_56->s_axi_awburst.bind(*p_56_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_awburst);
        xsim_sc_channel<0, bool > *p_56_s_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_56->s_axi_awlock.bind(*p_56_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_56_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_56->s_axi_awcache.bind(*p_56_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_56_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_56->s_axi_awprot.bind(*p_56_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_56_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_56->s_axi_awvalid.bind(*p_56_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_56_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_56->s_axi_awready.bind(*p_56_s_axi_awready);
        p_56_s_axi_awready->set_sv_netview_offsetfromdp(11031168);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_56_s_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_56->s_axi_wdata.bind(*p_56_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_56_s_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_56->s_axi_wstrb.bind(*p_56_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_56_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_56->s_axi_wlast.bind(*p_56_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_56_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_56->s_axi_wvalid.bind(*p_56_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_56_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_56->s_axi_wready.bind(*p_56_s_axi_wready);
        p_56_s_axi_wready->set_sv_netview_offsetfromdp(11031448);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_56_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_56->s_axi_bresp.bind(*p_56_s_axi_bresp);
        p_56_s_axi_bresp->set_sv_netview_offsetfromdp(11031504);
        xsim_sc_channel<0, bool > *p_56_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_56->s_axi_bvalid.bind(*p_56_s_axi_bvalid);
        p_56_s_axi_bvalid->set_sv_netview_offsetfromdp(11031560);
        xsim_sc_channel<0, bool > *p_56_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_56->s_axi_bready.bind(*p_56_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_bready);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_56_s_axi_araddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_56->s_axi_araddr.bind(*p_56_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_56_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_56->s_axi_arlen.bind(*p_56_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_56_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_56->s_axi_arsize.bind(*p_56_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_56_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_56->s_axi_arburst.bind(*p_56_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_arburst);
        xsim_sc_channel<0, bool > *p_56_s_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_56->s_axi_arlock.bind(*p_56_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_56_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_56->s_axi_arcache.bind(*p_56_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_56_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_56->s_axi_arprot.bind(*p_56_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_56_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_56->s_axi_arvalid.bind(*p_56_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_56_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_56->s_axi_arready.bind(*p_56_s_axi_arready);
        p_56_s_axi_arready->set_sv_netview_offsetfromdp(11032120);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_56_s_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_56->s_axi_rdata.bind(*p_56_s_axi_rdata);
        p_56_s_axi_rdata->set_sv_netview_offsetfromdp(11032176);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_56_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_56->s_axi_rresp.bind(*p_56_s_axi_rresp);
        p_56_s_axi_rresp->set_sv_netview_offsetfromdp(11032232);
        xsim_sc_channel<0, bool > *p_56_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_56->s_axi_rlast.bind(*p_56_s_axi_rlast);
        p_56_s_axi_rlast->set_sv_netview_offsetfromdp(11032288);
        xsim_sc_channel<0, bool > *p_56_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_56->s_axi_rvalid.bind(*p_56_s_axi_rvalid);
        p_56_s_axi_rvalid->set_sv_netview_offsetfromdp(11032344);
        xsim_sc_channel<0, bool > *p_56_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_56->s_axi_rready.bind(*p_56_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_rready);
        xsim_sc_channel<0, bool > *p_56_bram_rst_a = new xsim_sc_channel<0, bool >();
        sc_inst_56->bram_rst_a.bind(*p_56_bram_rst_a);
        p_56_bram_rst_a->set_sv_netview_offsetfromdp(11032456);
        xsim_sc_channel<0, bool > *p_56_bram_clk_a = new xsim_sc_channel<0, bool >();
        sc_inst_56->bram_clk_a.bind(*p_56_bram_clk_a);
        p_56_bram_clk_a->set_sv_netview_offsetfromdp(11032512);
        xsim_sc_channel<0, bool > *p_56_bram_en_a = new xsim_sc_channel<0, bool >();
        sc_inst_56->bram_en_a.bind(*p_56_bram_en_a);
        p_56_bram_en_a->set_sv_netview_offsetfromdp(11032568);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_56_bram_we_a = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_56->bram_we_a.bind(*p_56_bram_we_a);
        p_56_bram_we_a->set_sv_netview_offsetfromdp(11032624);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_56_bram_addr_a = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_56->bram_addr_a.bind(*p_56_bram_addr_a);
        p_56_bram_addr_a->set_sv_netview_offsetfromdp(11032680);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_56_bram_wrdata_a = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_56->bram_wrdata_a.bind(*p_56_bram_wrdata_a);
        p_56_bram_wrdata_a->set_sv_netview_offsetfromdp(11032736);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_56_bram_rddata_a = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_56->bram_rddata_a.bind(*p_56_bram_rddata_a);
        (*_glb_hdl_sc_channel_map).push_back(p_56_bram_rddata_a);
        xsim_sc_channel<0, bool > *p_56_bram_rst_b = new xsim_sc_channel<0, bool >();
        sc_inst_56->bram_rst_b.bind(*p_56_bram_rst_b);
        p_56_bram_rst_b->set_sv_netview_offsetfromdp(11032848);
        xsim_sc_channel<0, bool > *p_56_bram_clk_b = new xsim_sc_channel<0, bool >();
        sc_inst_56->bram_clk_b.bind(*p_56_bram_clk_b);
        p_56_bram_clk_b->set_sv_netview_offsetfromdp(11032904);
        xsim_sc_channel<0, bool > *p_56_bram_en_b = new xsim_sc_channel<0, bool >();
        sc_inst_56->bram_en_b.bind(*p_56_bram_en_b);
        p_56_bram_en_b->set_sv_netview_offsetfromdp(11032960);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_56_bram_we_b = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_56->bram_we_b.bind(*p_56_bram_we_b);
        p_56_bram_we_b->set_sv_netview_offsetfromdp(11033016);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_56_bram_addr_b = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_56->bram_addr_b.bind(*p_56_bram_addr_b);
        p_56_bram_addr_b->set_sv_netview_offsetfromdp(11033072);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_56_bram_wrdata_b = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_56->bram_wrdata_b.bind(*p_56_bram_wrdata_b);
        p_56_bram_wrdata_b->set_sv_netview_offsetfromdp(11033128);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_56_bram_rddata_b = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_56->bram_rddata_b.bind(*p_56_bram_rddata_b);
        (*_glb_hdl_sc_channel_map).push_back(p_56_bram_rddata_b);
        sc_inst_57 = new bd_d216_plram_mem05_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.memory.plram_mem05");
        sc_inst_57->xsim_set_dbg_index(3076);
        xsim_sc_channel<0, bool > *p_57_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_57->s_axi_aclk.bind(*p_57_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_57_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_57->s_axi_aresetn.bind(*p_57_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_aresetn);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_57_s_axi_awaddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_57->s_axi_awaddr.bind(*p_57_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_57_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_57->s_axi_awlen.bind(*p_57_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_57_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_57->s_axi_awsize.bind(*p_57_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_57_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_57->s_axi_awburst.bind(*p_57_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_awburst);
        xsim_sc_channel<0, bool > *p_57_s_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_57->s_axi_awlock.bind(*p_57_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_57_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_57->s_axi_awcache.bind(*p_57_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_57_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_57->s_axi_awprot.bind(*p_57_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_57_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_57->s_axi_awvalid.bind(*p_57_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_57_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_57->s_axi_awready.bind(*p_57_s_axi_awready);
        p_57_s_axi_awready->set_sv_netview_offsetfromdp(11094968);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_57_s_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_57->s_axi_wdata.bind(*p_57_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_57_s_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_57->s_axi_wstrb.bind(*p_57_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_57_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_57->s_axi_wlast.bind(*p_57_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_57_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_57->s_axi_wvalid.bind(*p_57_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_57_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_57->s_axi_wready.bind(*p_57_s_axi_wready);
        p_57_s_axi_wready->set_sv_netview_offsetfromdp(11095248);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_57_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_57->s_axi_bresp.bind(*p_57_s_axi_bresp);
        p_57_s_axi_bresp->set_sv_netview_offsetfromdp(11095304);
        xsim_sc_channel<0, bool > *p_57_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_57->s_axi_bvalid.bind(*p_57_s_axi_bvalid);
        p_57_s_axi_bvalid->set_sv_netview_offsetfromdp(11095360);
        xsim_sc_channel<0, bool > *p_57_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_57->s_axi_bready.bind(*p_57_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_bready);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_57_s_axi_araddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_57->s_axi_araddr.bind(*p_57_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_57_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_57->s_axi_arlen.bind(*p_57_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_57_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_57->s_axi_arsize.bind(*p_57_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_57_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_57->s_axi_arburst.bind(*p_57_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_arburst);
        xsim_sc_channel<0, bool > *p_57_s_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_57->s_axi_arlock.bind(*p_57_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_57_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_57->s_axi_arcache.bind(*p_57_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_57_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_57->s_axi_arprot.bind(*p_57_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_57_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_57->s_axi_arvalid.bind(*p_57_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_57_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_57->s_axi_arready.bind(*p_57_s_axi_arready);
        p_57_s_axi_arready->set_sv_netview_offsetfromdp(11095920);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_57_s_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_57->s_axi_rdata.bind(*p_57_s_axi_rdata);
        p_57_s_axi_rdata->set_sv_netview_offsetfromdp(11095976);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_57_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_57->s_axi_rresp.bind(*p_57_s_axi_rresp);
        p_57_s_axi_rresp->set_sv_netview_offsetfromdp(11096032);
        xsim_sc_channel<0, bool > *p_57_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_57->s_axi_rlast.bind(*p_57_s_axi_rlast);
        p_57_s_axi_rlast->set_sv_netview_offsetfromdp(11096088);
        xsim_sc_channel<0, bool > *p_57_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_57->s_axi_rvalid.bind(*p_57_s_axi_rvalid);
        p_57_s_axi_rvalid->set_sv_netview_offsetfromdp(11096144);
        xsim_sc_channel<0, bool > *p_57_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_57->s_axi_rready.bind(*p_57_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_rready);
        xsim_sc_channel<0, bool > *p_57_bram_rst_a = new xsim_sc_channel<0, bool >();
        sc_inst_57->bram_rst_a.bind(*p_57_bram_rst_a);
        p_57_bram_rst_a->set_sv_netview_offsetfromdp(11096256);
        xsim_sc_channel<0, bool > *p_57_bram_clk_a = new xsim_sc_channel<0, bool >();
        sc_inst_57->bram_clk_a.bind(*p_57_bram_clk_a);
        p_57_bram_clk_a->set_sv_netview_offsetfromdp(11096312);
        xsim_sc_channel<0, bool > *p_57_bram_en_a = new xsim_sc_channel<0, bool >();
        sc_inst_57->bram_en_a.bind(*p_57_bram_en_a);
        p_57_bram_en_a->set_sv_netview_offsetfromdp(11096368);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_57_bram_we_a = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_57->bram_we_a.bind(*p_57_bram_we_a);
        p_57_bram_we_a->set_sv_netview_offsetfromdp(11096424);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_57_bram_addr_a = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_57->bram_addr_a.bind(*p_57_bram_addr_a);
        p_57_bram_addr_a->set_sv_netview_offsetfromdp(11096480);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_57_bram_wrdata_a = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_57->bram_wrdata_a.bind(*p_57_bram_wrdata_a);
        p_57_bram_wrdata_a->set_sv_netview_offsetfromdp(11096536);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_57_bram_rddata_a = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_57->bram_rddata_a.bind(*p_57_bram_rddata_a);
        (*_glb_hdl_sc_channel_map).push_back(p_57_bram_rddata_a);
        xsim_sc_channel<0, bool > *p_57_bram_rst_b = new xsim_sc_channel<0, bool >();
        sc_inst_57->bram_rst_b.bind(*p_57_bram_rst_b);
        p_57_bram_rst_b->set_sv_netview_offsetfromdp(11096648);
        xsim_sc_channel<0, bool > *p_57_bram_clk_b = new xsim_sc_channel<0, bool >();
        sc_inst_57->bram_clk_b.bind(*p_57_bram_clk_b);
        p_57_bram_clk_b->set_sv_netview_offsetfromdp(11096704);
        xsim_sc_channel<0, bool > *p_57_bram_en_b = new xsim_sc_channel<0, bool >();
        sc_inst_57->bram_en_b.bind(*p_57_bram_en_b);
        p_57_bram_en_b->set_sv_netview_offsetfromdp(11096760);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_57_bram_we_b = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_57->bram_we_b.bind(*p_57_bram_we_b);
        p_57_bram_we_b->set_sv_netview_offsetfromdp(11096816);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_57_bram_addr_b = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_57->bram_addr_b.bind(*p_57_bram_addr_b);
        p_57_bram_addr_b->set_sv_netview_offsetfromdp(11096872);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_57_bram_wrdata_b = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_57->bram_wrdata_b.bind(*p_57_bram_wrdata_b);
        p_57_bram_wrdata_b->set_sv_netview_offsetfromdp(11096928);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_57_bram_rddata_b = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_57->bram_rddata_b.bind(*p_57_bram_rddata_b);
        (*_glb_hdl_sc_channel_map).push_back(p_57_bram_rddata_b);
        sc_inst_58 = new pfm_dynamic_sci(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.pfm_dynamic_sci_inst");
        sc_inst_58->xsim_set_dbg_index(63);
        sc_inst_59 = new pfm_dynamic_profile_vip_0_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.profile_vip_0");
        sc_inst_59->xsim_set_dbg_index(64);
        xsim_sc_channel<0, bool > *p_59_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_59->aclk.bind(*p_59_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_59_aclk);
        xsim_sc_channel<0, bool > *p_59_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_59->aresetn.bind(*p_59_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_59_aresetn);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_59_s_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_59->s_axi_awaddr.bind(*p_59_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_59_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_59_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_59->s_axi_awlen.bind(*p_59_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_59_s_axi_awlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_59_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_59->s_axi_awburst.bind(*p_59_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_59_s_axi_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_59_s_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_59->s_axi_awlock.bind(*p_59_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_59_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_59_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_59->s_axi_awcache.bind(*p_59_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_59_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_59_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_59->s_axi_awprot.bind(*p_59_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_59_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_59_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_59->s_axi_awqos.bind(*p_59_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_59_s_axi_awqos);
        xsim_sc_channel<0, bool > *p_59_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_59->s_axi_awvalid.bind(*p_59_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_59_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_59_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_59->s_axi_awready.bind(*p_59_s_axi_awready);
        p_59_s_axi_awready->set_sv_netview_offsetfromdp(11442896);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_59_s_axi_wdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_59->s_axi_wdata.bind(*p_59_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_59_s_axi_wdata);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_59_s_axi_wstrb = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_59->s_axi_wstrb.bind(*p_59_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_59_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_59_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_59->s_axi_wlast.bind(*p_59_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_59_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_59_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_59->s_axi_wvalid.bind(*p_59_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_59_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_59_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_59->s_axi_wready.bind(*p_59_s_axi_wready);
        p_59_s_axi_wready->set_sv_netview_offsetfromdp(11443176);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_59_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_59->s_axi_bresp.bind(*p_59_s_axi_bresp);
        p_59_s_axi_bresp->set_sv_netview_offsetfromdp(11443232);
        xsim_sc_channel<0, bool > *p_59_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_59->s_axi_bvalid.bind(*p_59_s_axi_bvalid);
        p_59_s_axi_bvalid->set_sv_netview_offsetfromdp(11443288);
        xsim_sc_channel<0, bool > *p_59_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_59->s_axi_bready.bind(*p_59_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_59_s_axi_bready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_59_s_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_59->s_axi_araddr.bind(*p_59_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_59_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_59_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_59->s_axi_arlen.bind(*p_59_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_59_s_axi_arlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_59_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_59->s_axi_arburst.bind(*p_59_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_59_s_axi_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_59_s_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_59->s_axi_arlock.bind(*p_59_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_59_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_59_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_59->s_axi_arcache.bind(*p_59_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_59_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_59_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_59->s_axi_arprot.bind(*p_59_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_59_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_59_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_59->s_axi_arqos.bind(*p_59_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_59_s_axi_arqos);
        xsim_sc_channel<0, bool > *p_59_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_59->s_axi_arvalid.bind(*p_59_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_59_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_59_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_59->s_axi_arready.bind(*p_59_s_axi_arready);
        p_59_s_axi_arready->set_sv_netview_offsetfromdp(11443848);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_59_s_axi_rdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_59->s_axi_rdata.bind(*p_59_s_axi_rdata);
        p_59_s_axi_rdata->set_sv_netview_offsetfromdp(11443904);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_59_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_59->s_axi_rresp.bind(*p_59_s_axi_rresp);
        p_59_s_axi_rresp->set_sv_netview_offsetfromdp(11443960);
        xsim_sc_channel<0, bool > *p_59_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_59->s_axi_rlast.bind(*p_59_s_axi_rlast);
        p_59_s_axi_rlast->set_sv_netview_offsetfromdp(11444016);
        xsim_sc_channel<0, bool > *p_59_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_59->s_axi_rvalid.bind(*p_59_s_axi_rvalid);
        p_59_s_axi_rvalid->set_sv_netview_offsetfromdp(11444072);
        xsim_sc_channel<0, bool > *p_59_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_59->s_axi_rready.bind(*p_59_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_59_s_axi_rready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_59_m_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_59->m_axi_awaddr.bind(*p_59_m_axi_awaddr);
        p_59_m_axi_awaddr->set_sv_netview_offsetfromdp(11444184);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_59_m_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_59->m_axi_awlen.bind(*p_59_m_axi_awlen);
        p_59_m_axi_awlen->set_sv_netview_offsetfromdp(11444240);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_59_m_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_59->m_axi_awburst.bind(*p_59_m_axi_awburst);
        p_59_m_axi_awburst->set_sv_netview_offsetfromdp(11444296);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_59_m_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_59->m_axi_awlock.bind(*p_59_m_axi_awlock);
        p_59_m_axi_awlock->set_sv_netview_offsetfromdp(11444352);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_59_m_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_59->m_axi_awcache.bind(*p_59_m_axi_awcache);
        p_59_m_axi_awcache->set_sv_netview_offsetfromdp(11444408);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_59_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_59->m_axi_awprot.bind(*p_59_m_axi_awprot);
        p_59_m_axi_awprot->set_sv_netview_offsetfromdp(11444464);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_59_m_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_59->m_axi_awqos.bind(*p_59_m_axi_awqos);
        p_59_m_axi_awqos->set_sv_netview_offsetfromdp(11444520);
        xsim_sc_channel<0, bool > *p_59_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_59->m_axi_awvalid.bind(*p_59_m_axi_awvalid);
        p_59_m_axi_awvalid->set_sv_netview_offsetfromdp(11444576);
        xsim_sc_channel<0, bool > *p_59_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_59->m_axi_awready.bind(*p_59_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_59_m_axi_awready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_59_m_axi_wdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_59->m_axi_wdata.bind(*p_59_m_axi_wdata);
        p_59_m_axi_wdata->set_sv_netview_offsetfromdp(11444688);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_59_m_axi_wstrb = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_59->m_axi_wstrb.bind(*p_59_m_axi_wstrb);
        p_59_m_axi_wstrb->set_sv_netview_offsetfromdp(11444744);
        xsim_sc_channel<0, bool > *p_59_m_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_59->m_axi_wlast.bind(*p_59_m_axi_wlast);
        p_59_m_axi_wlast->set_sv_netview_offsetfromdp(11444800);
        xsim_sc_channel<0, bool > *p_59_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_59->m_axi_wvalid.bind(*p_59_m_axi_wvalid);
        p_59_m_axi_wvalid->set_sv_netview_offsetfromdp(11444856);
        xsim_sc_channel<0, bool > *p_59_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_59->m_axi_wready.bind(*p_59_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_59_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_59_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_59->m_axi_bresp.bind(*p_59_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_59_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_59_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_59->m_axi_bvalid.bind(*p_59_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_59_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_59_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_59->m_axi_bready.bind(*p_59_m_axi_bready);
        p_59_m_axi_bready->set_sv_netview_offsetfromdp(11445080);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_59_m_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_59->m_axi_araddr.bind(*p_59_m_axi_araddr);
        p_59_m_axi_araddr->set_sv_netview_offsetfromdp(11445136);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_59_m_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_59->m_axi_arlen.bind(*p_59_m_axi_arlen);
        p_59_m_axi_arlen->set_sv_netview_offsetfromdp(11445192);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_59_m_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_59->m_axi_arburst.bind(*p_59_m_axi_arburst);
        p_59_m_axi_arburst->set_sv_netview_offsetfromdp(11445248);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_59_m_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_59->m_axi_arlock.bind(*p_59_m_axi_arlock);
        p_59_m_axi_arlock->set_sv_netview_offsetfromdp(11445304);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_59_m_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_59->m_axi_arcache.bind(*p_59_m_axi_arcache);
        p_59_m_axi_arcache->set_sv_netview_offsetfromdp(11445360);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_59_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_59->m_axi_arprot.bind(*p_59_m_axi_arprot);
        p_59_m_axi_arprot->set_sv_netview_offsetfromdp(11445416);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_59_m_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_59->m_axi_arqos.bind(*p_59_m_axi_arqos);
        p_59_m_axi_arqos->set_sv_netview_offsetfromdp(11445472);
        xsim_sc_channel<0, bool > *p_59_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_59->m_axi_arvalid.bind(*p_59_m_axi_arvalid);
        p_59_m_axi_arvalid->set_sv_netview_offsetfromdp(11445528);
        xsim_sc_channel<0, bool > *p_59_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_59->m_axi_arready.bind(*p_59_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_59_m_axi_arready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_59_m_axi_rdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_59->m_axi_rdata.bind(*p_59_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_59_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_59_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_59->m_axi_rresp.bind(*p_59_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_59_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_59_m_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_59->m_axi_rlast.bind(*p_59_m_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_59_m_axi_rlast);
        xsim_sc_channel<0, bool > *p_59_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_59->m_axi_rvalid.bind(*p_59_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_59_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_59_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_59->m_axi_rready.bind(*p_59_m_axi_rready);
        p_59_m_axi_rready->set_sv_netview_offsetfromdp(11445864);
        sc_inst_60 = new pfm_dynamic_m01_regslice_4(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.slr0.interconnect_axilite_user_0.m01_couplers.m01_regslice");
        sc_inst_60->xsim_set_dbg_index(3555);
        xsim_sc_channel<0, bool > *p_60_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_60->aclk.bind(*p_60_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_60_aclk);
        xsim_sc_channel<0, bool > *p_60_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_60->aresetn.bind(*p_60_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_60_aresetn);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_60_s_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_60->s_axi_awaddr.bind(*p_60_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_60_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_60_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_60->s_axi_awprot.bind(*p_60_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_60_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_60_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_60->s_axi_awvalid.bind(*p_60_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_60_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_60_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_60->s_axi_awready.bind(*p_60_s_axi_awready);
        p_60_s_axi_awready->set_sv_netview_offsetfromdp(11722400);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_60_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_60->s_axi_wdata.bind(*p_60_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_60_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_60_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_60->s_axi_wstrb.bind(*p_60_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_60_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_60_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_60->s_axi_wvalid.bind(*p_60_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_60_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_60_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_60->s_axi_wready.bind(*p_60_s_axi_wready);
        p_60_s_axi_wready->set_sv_netview_offsetfromdp(11722624);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_60_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_60->s_axi_bresp.bind(*p_60_s_axi_bresp);
        p_60_s_axi_bresp->set_sv_netview_offsetfromdp(11722680);
        xsim_sc_channel<0, bool > *p_60_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_60->s_axi_bvalid.bind(*p_60_s_axi_bvalid);
        p_60_s_axi_bvalid->set_sv_netview_offsetfromdp(11722736);
        xsim_sc_channel<0, bool > *p_60_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_60->s_axi_bready.bind(*p_60_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_60_s_axi_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_60_s_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_60->s_axi_araddr.bind(*p_60_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_60_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_60_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_60->s_axi_arprot.bind(*p_60_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_60_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_60_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_60->s_axi_arvalid.bind(*p_60_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_60_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_60_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_60->s_axi_arready.bind(*p_60_s_axi_arready);
        p_60_s_axi_arready->set_sv_netview_offsetfromdp(11723016);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_60_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_60->s_axi_rdata.bind(*p_60_s_axi_rdata);
        p_60_s_axi_rdata->set_sv_netview_offsetfromdp(11723072);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_60_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_60->s_axi_rresp.bind(*p_60_s_axi_rresp);
        p_60_s_axi_rresp->set_sv_netview_offsetfromdp(11723128);
        xsim_sc_channel<0, bool > *p_60_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_60->s_axi_rvalid.bind(*p_60_s_axi_rvalid);
        p_60_s_axi_rvalid->set_sv_netview_offsetfromdp(11723184);
        xsim_sc_channel<0, bool > *p_60_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_60->s_axi_rready.bind(*p_60_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_60_s_axi_rready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_60_m_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_60->m_axi_awaddr.bind(*p_60_m_axi_awaddr);
        p_60_m_axi_awaddr->set_sv_netview_offsetfromdp(11723296);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_60_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_60->m_axi_awprot.bind(*p_60_m_axi_awprot);
        p_60_m_axi_awprot->set_sv_netview_offsetfromdp(11723352);
        xsim_sc_channel<0, bool > *p_60_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_60->m_axi_awvalid.bind(*p_60_m_axi_awvalid);
        p_60_m_axi_awvalid->set_sv_netview_offsetfromdp(11723408);
        xsim_sc_channel<0, bool > *p_60_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_60->m_axi_awready.bind(*p_60_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_60_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_60_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_60->m_axi_wdata.bind(*p_60_m_axi_wdata);
        p_60_m_axi_wdata->set_sv_netview_offsetfromdp(11723520);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_60_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_60->m_axi_wstrb.bind(*p_60_m_axi_wstrb);
        p_60_m_axi_wstrb->set_sv_netview_offsetfromdp(11723576);
        xsim_sc_channel<0, bool > *p_60_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_60->m_axi_wvalid.bind(*p_60_m_axi_wvalid);
        p_60_m_axi_wvalid->set_sv_netview_offsetfromdp(11723632);
        xsim_sc_channel<0, bool > *p_60_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_60->m_axi_wready.bind(*p_60_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_60_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_60_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_60->m_axi_bresp.bind(*p_60_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_60_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_60_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_60->m_axi_bvalid.bind(*p_60_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_60_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_60_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_60->m_axi_bready.bind(*p_60_m_axi_bready);
        p_60_m_axi_bready->set_sv_netview_offsetfromdp(11723856);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_60_m_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_60->m_axi_araddr.bind(*p_60_m_axi_araddr);
        p_60_m_axi_araddr->set_sv_netview_offsetfromdp(11723912);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_60_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_60->m_axi_arprot.bind(*p_60_m_axi_arprot);
        p_60_m_axi_arprot->set_sv_netview_offsetfromdp(11723968);
        xsim_sc_channel<0, bool > *p_60_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_60->m_axi_arvalid.bind(*p_60_m_axi_arvalid);
        p_60_m_axi_arvalid->set_sv_netview_offsetfromdp(11724024);
        xsim_sc_channel<0, bool > *p_60_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_60->m_axi_arready.bind(*p_60_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_60_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_60_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_60->m_axi_rdata.bind(*p_60_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_60_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_60_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_60->m_axi_rresp.bind(*p_60_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_60_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_60_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_60->m_axi_rvalid.bind(*p_60_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_60_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_60_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_60->m_axi_rready.bind(*p_60_m_axi_rready);
        p_60_m_axi_rready->set_sv_netview_offsetfromdp(11724304);
        sc_inst_61 = new pfm_dynamic_auto_cc_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.slr0.interconnect_axilite_user_0.m02_couplers.auto_cc");
        sc_inst_61->xsim_set_dbg_index(3596);
        xsim_sc_channel<0, bool > *p_61_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_61->s_axi_aclk.bind(*p_61_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_61_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_61_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_61->s_axi_aresetn.bind(*p_61_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_61_s_axi_aresetn);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_61_s_axi_awaddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_61->s_axi_awaddr.bind(*p_61_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_61_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_61_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_61->s_axi_awprot.bind(*p_61_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_61_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_61_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_61->s_axi_awvalid.bind(*p_61_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_61_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_61_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_61->s_axi_awready.bind(*p_61_s_axi_awready);
        p_61_s_axi_awready->set_sv_netview_offsetfromdp(11761328);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_61_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_61->s_axi_wdata.bind(*p_61_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_61_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_61_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_61->s_axi_wstrb.bind(*p_61_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_61_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_61_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_61->s_axi_wvalid.bind(*p_61_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_61_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_61_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_61->s_axi_wready.bind(*p_61_s_axi_wready);
        p_61_s_axi_wready->set_sv_netview_offsetfromdp(11761552);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_61_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_61->s_axi_bresp.bind(*p_61_s_axi_bresp);
        p_61_s_axi_bresp->set_sv_netview_offsetfromdp(11761608);
        xsim_sc_channel<0, bool > *p_61_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_61->s_axi_bvalid.bind(*p_61_s_axi_bvalid);
        p_61_s_axi_bvalid->set_sv_netview_offsetfromdp(11761664);
        xsim_sc_channel<0, bool > *p_61_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_61->s_axi_bready.bind(*p_61_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_61_s_axi_bready);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_61_s_axi_araddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_61->s_axi_araddr.bind(*p_61_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_61_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_61_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_61->s_axi_arprot.bind(*p_61_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_61_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_61_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_61->s_axi_arvalid.bind(*p_61_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_61_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_61_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_61->s_axi_arready.bind(*p_61_s_axi_arready);
        p_61_s_axi_arready->set_sv_netview_offsetfromdp(11761944);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_61_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_61->s_axi_rdata.bind(*p_61_s_axi_rdata);
        p_61_s_axi_rdata->set_sv_netview_offsetfromdp(11762000);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_61_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_61->s_axi_rresp.bind(*p_61_s_axi_rresp);
        p_61_s_axi_rresp->set_sv_netview_offsetfromdp(11762056);
        xsim_sc_channel<0, bool > *p_61_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_61->s_axi_rvalid.bind(*p_61_s_axi_rvalid);
        p_61_s_axi_rvalid->set_sv_netview_offsetfromdp(11762112);
        xsim_sc_channel<0, bool > *p_61_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_61->s_axi_rready.bind(*p_61_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_61_s_axi_rready);
        xsim_sc_channel<0, bool > *p_61_m_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_61->m_axi_aclk.bind(*p_61_m_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_61_m_axi_aclk);
        xsim_sc_channel<0, bool > *p_61_m_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_61->m_axi_aresetn.bind(*p_61_m_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_61_m_axi_aresetn);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_61_m_axi_awaddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_61->m_axi_awaddr.bind(*p_61_m_axi_awaddr);
        p_61_m_axi_awaddr->set_sv_netview_offsetfromdp(11762336);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_61_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_61->m_axi_awprot.bind(*p_61_m_axi_awprot);
        p_61_m_axi_awprot->set_sv_netview_offsetfromdp(11762392);
        xsim_sc_channel<0, bool > *p_61_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_61->m_axi_awvalid.bind(*p_61_m_axi_awvalid);
        p_61_m_axi_awvalid->set_sv_netview_offsetfromdp(11762448);
        xsim_sc_channel<0, bool > *p_61_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_61->m_axi_awready.bind(*p_61_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_61_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_61_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_61->m_axi_wdata.bind(*p_61_m_axi_wdata);
        p_61_m_axi_wdata->set_sv_netview_offsetfromdp(11762560);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_61_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_61->m_axi_wstrb.bind(*p_61_m_axi_wstrb);
        p_61_m_axi_wstrb->set_sv_netview_offsetfromdp(11762616);
        xsim_sc_channel<0, bool > *p_61_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_61->m_axi_wvalid.bind(*p_61_m_axi_wvalid);
        p_61_m_axi_wvalid->set_sv_netview_offsetfromdp(11762672);
        xsim_sc_channel<0, bool > *p_61_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_61->m_axi_wready.bind(*p_61_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_61_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_61_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_61->m_axi_bresp.bind(*p_61_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_61_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_61_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_61->m_axi_bvalid.bind(*p_61_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_61_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_61_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_61->m_axi_bready.bind(*p_61_m_axi_bready);
        p_61_m_axi_bready->set_sv_netview_offsetfromdp(11762896);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_61_m_axi_araddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_61->m_axi_araddr.bind(*p_61_m_axi_araddr);
        p_61_m_axi_araddr->set_sv_netview_offsetfromdp(11762952);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_61_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_61->m_axi_arprot.bind(*p_61_m_axi_arprot);
        p_61_m_axi_arprot->set_sv_netview_offsetfromdp(11763008);
        xsim_sc_channel<0, bool > *p_61_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_61->m_axi_arvalid.bind(*p_61_m_axi_arvalid);
        p_61_m_axi_arvalid->set_sv_netview_offsetfromdp(11763064);
        xsim_sc_channel<0, bool > *p_61_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_61->m_axi_arready.bind(*p_61_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_61_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_61_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_61->m_axi_rdata.bind(*p_61_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_61_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_61_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_61->m_axi_rresp.bind(*p_61_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_61_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_61_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_61->m_axi_rvalid.bind(*p_61_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_61_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_61_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_61->m_axi_rready.bind(*p_61_m_axi_rready);
        p_61_m_axi_rready->set_sv_netview_offsetfromdp(11763344);
        sc_inst_62 = new pfm_dynamic_m02_regslice_4(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.slr0.interconnect_axilite_user_0.m02_couplers.m02_regslice");
        sc_inst_62->xsim_set_dbg_index(3597);
        xsim_sc_channel<0, bool > *p_62_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_62->aclk.bind(*p_62_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_62_aclk);
        xsim_sc_channel<0, bool > *p_62_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_62->aresetn.bind(*p_62_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_62_aresetn);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_62_s_axi_awaddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_62->s_axi_awaddr.bind(*p_62_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_62_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_62_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_62->s_axi_awprot.bind(*p_62_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_62_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_62_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_62->s_axi_awvalid.bind(*p_62_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_62_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_62_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_62->s_axi_awready.bind(*p_62_s_axi_awready);
        p_62_s_axi_awready->set_sv_netview_offsetfromdp(11763728);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_62_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_62->s_axi_wdata.bind(*p_62_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_62_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_62_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_62->s_axi_wstrb.bind(*p_62_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_62_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_62_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_62->s_axi_wvalid.bind(*p_62_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_62_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_62_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_62->s_axi_wready.bind(*p_62_s_axi_wready);
        p_62_s_axi_wready->set_sv_netview_offsetfromdp(11763952);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_62_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_62->s_axi_bresp.bind(*p_62_s_axi_bresp);
        p_62_s_axi_bresp->set_sv_netview_offsetfromdp(11764008);
        xsim_sc_channel<0, bool > *p_62_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_62->s_axi_bvalid.bind(*p_62_s_axi_bvalid);
        p_62_s_axi_bvalid->set_sv_netview_offsetfromdp(11764064);
        xsim_sc_channel<0, bool > *p_62_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_62->s_axi_bready.bind(*p_62_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_62_s_axi_bready);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_62_s_axi_araddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_62->s_axi_araddr.bind(*p_62_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_62_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_62_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_62->s_axi_arprot.bind(*p_62_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_62_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_62_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_62->s_axi_arvalid.bind(*p_62_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_62_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_62_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_62->s_axi_arready.bind(*p_62_s_axi_arready);
        p_62_s_axi_arready->set_sv_netview_offsetfromdp(11764344);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_62_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_62->s_axi_rdata.bind(*p_62_s_axi_rdata);
        p_62_s_axi_rdata->set_sv_netview_offsetfromdp(11764400);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_62_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_62->s_axi_rresp.bind(*p_62_s_axi_rresp);
        p_62_s_axi_rresp->set_sv_netview_offsetfromdp(11764456);
        xsim_sc_channel<0, bool > *p_62_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_62->s_axi_rvalid.bind(*p_62_s_axi_rvalid);
        p_62_s_axi_rvalid->set_sv_netview_offsetfromdp(11764512);
        xsim_sc_channel<0, bool > *p_62_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_62->s_axi_rready.bind(*p_62_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_62_s_axi_rready);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_62_m_axi_awaddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_62->m_axi_awaddr.bind(*p_62_m_axi_awaddr);
        p_62_m_axi_awaddr->set_sv_netview_offsetfromdp(11764624);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_62_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_62->m_axi_awprot.bind(*p_62_m_axi_awprot);
        p_62_m_axi_awprot->set_sv_netview_offsetfromdp(11764680);
        xsim_sc_channel<0, bool > *p_62_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_62->m_axi_awvalid.bind(*p_62_m_axi_awvalid);
        p_62_m_axi_awvalid->set_sv_netview_offsetfromdp(11764736);
        xsim_sc_channel<0, bool > *p_62_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_62->m_axi_awready.bind(*p_62_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_62_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_62_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_62->m_axi_wdata.bind(*p_62_m_axi_wdata);
        p_62_m_axi_wdata->set_sv_netview_offsetfromdp(11764848);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_62_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_62->m_axi_wstrb.bind(*p_62_m_axi_wstrb);
        p_62_m_axi_wstrb->set_sv_netview_offsetfromdp(11764904);
        xsim_sc_channel<0, bool > *p_62_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_62->m_axi_wvalid.bind(*p_62_m_axi_wvalid);
        p_62_m_axi_wvalid->set_sv_netview_offsetfromdp(11764960);
        xsim_sc_channel<0, bool > *p_62_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_62->m_axi_wready.bind(*p_62_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_62_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_62_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_62->m_axi_bresp.bind(*p_62_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_62_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_62_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_62->m_axi_bvalid.bind(*p_62_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_62_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_62_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_62->m_axi_bready.bind(*p_62_m_axi_bready);
        p_62_m_axi_bready->set_sv_netview_offsetfromdp(11765184);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_62_m_axi_araddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_62->m_axi_araddr.bind(*p_62_m_axi_araddr);
        p_62_m_axi_araddr->set_sv_netview_offsetfromdp(11765240);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_62_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_62->m_axi_arprot.bind(*p_62_m_axi_arprot);
        p_62_m_axi_arprot->set_sv_netview_offsetfromdp(11765296);
        xsim_sc_channel<0, bool > *p_62_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_62->m_axi_arvalid.bind(*p_62_m_axi_arvalid);
        p_62_m_axi_arvalid->set_sv_netview_offsetfromdp(11765352);
        xsim_sc_channel<0, bool > *p_62_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_62->m_axi_arready.bind(*p_62_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_62_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_62_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_62->m_axi_rdata.bind(*p_62_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_62_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_62_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_62->m_axi_rresp.bind(*p_62_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_62_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_62_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_62->m_axi_rvalid.bind(*p_62_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_62_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_62_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_62->m_axi_rready.bind(*p_62_m_axi_rready);
        p_62_m_axi_rready->set_sv_netview_offsetfromdp(11765632);
        sc_inst_63 = new pfm_dynamic_xbar_3(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.slr0.interconnect_axilite_user_0.xbar");
        sc_inst_63->xsim_set_dbg_index(1532);
        xsim_sc_channel<0, bool > *p_63_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_63->aclk.bind(*p_63_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_63_aclk);
        xsim_sc_channel<0, bool > *p_63_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_63->aresetn.bind(*p_63_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_63_aresetn);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_63_s_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_63->s_axi_awaddr.bind(*p_63_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_63_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_63_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_63->s_axi_awprot.bind(*p_63_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_63_s_axi_awprot);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_63_s_axi_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_63->s_axi_awvalid.bind(*p_63_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_63_s_axi_awvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_63_s_axi_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_63->s_axi_awready.bind(*p_63_s_axi_awready);
        p_63_s_axi_awready->set_sv_netview_offsetfromdp(11776192);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_63_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_63->s_axi_wdata.bind(*p_63_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_63_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_63_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_63->s_axi_wstrb.bind(*p_63_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_63_s_axi_wstrb);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_63_s_axi_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_63->s_axi_wvalid.bind(*p_63_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_63_s_axi_wvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_63_s_axi_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_63->s_axi_wready.bind(*p_63_s_axi_wready);
        p_63_s_axi_wready->set_sv_netview_offsetfromdp(11776416);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_63_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_63->s_axi_bresp.bind(*p_63_s_axi_bresp);
        p_63_s_axi_bresp->set_sv_netview_offsetfromdp(11776472);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_63_s_axi_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_63->s_axi_bvalid.bind(*p_63_s_axi_bvalid);
        p_63_s_axi_bvalid->set_sv_netview_offsetfromdp(11776528);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_63_s_axi_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_63->s_axi_bready.bind(*p_63_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_63_s_axi_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_63_s_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_63->s_axi_araddr.bind(*p_63_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_63_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_63_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_63->s_axi_arprot.bind(*p_63_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_63_s_axi_arprot);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_63_s_axi_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_63->s_axi_arvalid.bind(*p_63_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_63_s_axi_arvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_63_s_axi_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_63->s_axi_arready.bind(*p_63_s_axi_arready);
        p_63_s_axi_arready->set_sv_netview_offsetfromdp(11776808);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_63_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_63->s_axi_rdata.bind(*p_63_s_axi_rdata);
        p_63_s_axi_rdata->set_sv_netview_offsetfromdp(11776864);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_63_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_63->s_axi_rresp.bind(*p_63_s_axi_rresp);
        p_63_s_axi_rresp->set_sv_netview_offsetfromdp(11776920);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_63_s_axi_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_63->s_axi_rvalid.bind(*p_63_s_axi_rvalid);
        p_63_s_axi_rvalid->set_sv_netview_offsetfromdp(11776976);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_63_s_axi_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_63->s_axi_rready.bind(*p_63_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_63_s_axi_rready);
        xsim_sc_channel<192, sc_dt::sc_bv<192> > *p_63_m_axi_awaddr = new xsim_sc_channel<192, sc_dt::sc_bv<192> >();
        sc_inst_63->m_axi_awaddr.bind(*p_63_m_axi_awaddr);
        p_63_m_axi_awaddr->set_sv_netview_offsetfromdp(11777088);
        xsim_sc_channel<9, sc_dt::sc_bv<9> > *p_63_m_axi_awprot = new xsim_sc_channel<9, sc_dt::sc_bv<9> >();
        sc_inst_63->m_axi_awprot.bind(*p_63_m_axi_awprot);
        p_63_m_axi_awprot->set_sv_netview_offsetfromdp(11777144);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_63_m_axi_awvalid = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_63->m_axi_awvalid.bind(*p_63_m_axi_awvalid);
        p_63_m_axi_awvalid->set_sv_netview_offsetfromdp(11777200);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_63_m_axi_awready = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_63->m_axi_awready.bind(*p_63_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_63_m_axi_awready);
        xsim_sc_channel<96, sc_dt::sc_bv<96> > *p_63_m_axi_wdata = new xsim_sc_channel<96, sc_dt::sc_bv<96> >();
        sc_inst_63->m_axi_wdata.bind(*p_63_m_axi_wdata);
        p_63_m_axi_wdata->set_sv_netview_offsetfromdp(11777312);
        xsim_sc_channel<12, sc_dt::sc_bv<12> > *p_63_m_axi_wstrb = new xsim_sc_channel<12, sc_dt::sc_bv<12> >();
        sc_inst_63->m_axi_wstrb.bind(*p_63_m_axi_wstrb);
        p_63_m_axi_wstrb->set_sv_netview_offsetfromdp(11777368);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_63_m_axi_wvalid = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_63->m_axi_wvalid.bind(*p_63_m_axi_wvalid);
        p_63_m_axi_wvalid->set_sv_netview_offsetfromdp(11777424);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_63_m_axi_wready = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_63->m_axi_wready.bind(*p_63_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_63_m_axi_wready);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_63_m_axi_bresp = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_63->m_axi_bresp.bind(*p_63_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_63_m_axi_bresp);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_63_m_axi_bvalid = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_63->m_axi_bvalid.bind(*p_63_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_63_m_axi_bvalid);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_63_m_axi_bready = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_63->m_axi_bready.bind(*p_63_m_axi_bready);
        p_63_m_axi_bready->set_sv_netview_offsetfromdp(11777648);
        xsim_sc_channel<192, sc_dt::sc_bv<192> > *p_63_m_axi_araddr = new xsim_sc_channel<192, sc_dt::sc_bv<192> >();
        sc_inst_63->m_axi_araddr.bind(*p_63_m_axi_araddr);
        p_63_m_axi_araddr->set_sv_netview_offsetfromdp(11777704);
        xsim_sc_channel<9, sc_dt::sc_bv<9> > *p_63_m_axi_arprot = new xsim_sc_channel<9, sc_dt::sc_bv<9> >();
        sc_inst_63->m_axi_arprot.bind(*p_63_m_axi_arprot);
        p_63_m_axi_arprot->set_sv_netview_offsetfromdp(11777760);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_63_m_axi_arvalid = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_63->m_axi_arvalid.bind(*p_63_m_axi_arvalid);
        p_63_m_axi_arvalid->set_sv_netview_offsetfromdp(11777816);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_63_m_axi_arready = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_63->m_axi_arready.bind(*p_63_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_63_m_axi_arready);
        xsim_sc_channel<96, sc_dt::sc_bv<96> > *p_63_m_axi_rdata = new xsim_sc_channel<96, sc_dt::sc_bv<96> >();
        sc_inst_63->m_axi_rdata.bind(*p_63_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_63_m_axi_rdata);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_63_m_axi_rresp = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_63->m_axi_rresp.bind(*p_63_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_63_m_axi_rresp);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_63_m_axi_rvalid = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_63->m_axi_rvalid.bind(*p_63_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_63_m_axi_rvalid);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_63_m_axi_rready = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_63->m_axi_rready.bind(*p_63_m_axi_rready);
        p_63_m_axi_rready->set_sv_netview_offsetfromdp(11778096);
        sc_inst_64 = new pfm_dynamic_smartconn_data_0_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.smartconn_data_0");
        sc_inst_64->xsim_set_dbg_index(72);
        xsim_sc_channel<0, bool > *p_64_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_64->aclk.bind(*p_64_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_64_aclk);
        xsim_sc_channel<0, bool > *p_64_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_64->aresetn.bind(*p_64_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_64_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_64_S00_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_64->S00_AXI_awid.bind(*p_64_S00_AXI_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_64_S00_AXI_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_64_S00_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_64->S00_AXI_awaddr.bind(*p_64_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_64_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_64_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_64->S00_AXI_awlen.bind(*p_64_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_64_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_64_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_64->S00_AXI_awsize.bind(*p_64_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_64_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_64_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_64->S00_AXI_awburst.bind(*p_64_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_64_S00_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_64_S00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_64->S00_AXI_awlock.bind(*p_64_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_64_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_64_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_64->S00_AXI_awcache.bind(*p_64_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_64_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_64_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_64->S00_AXI_awprot.bind(*p_64_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_64_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_64_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_64->S00_AXI_awqos.bind(*p_64_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_64_S00_AXI_awqos);
        xsim_sc_channel<0, bool > *p_64_S00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_64->S00_AXI_awvalid.bind(*p_64_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_64_S00_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_64_S00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_64->S00_AXI_awready.bind(*p_64_S00_AXI_awready);
        p_64_S00_AXI_awready->set_sv_netview_offsetfromdp(13034800);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_64_S00_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_64->S00_AXI_wdata.bind(*p_64_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_64_S00_AXI_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_64_S00_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_64->S00_AXI_wstrb.bind(*p_64_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_64_S00_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_64_S00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_64->S00_AXI_wlast.bind(*p_64_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_64_S00_AXI_wlast);
        xsim_sc_channel<0, bool > *p_64_S00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_64->S00_AXI_wvalid.bind(*p_64_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_64_S00_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_64_S00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_64->S00_AXI_wready.bind(*p_64_S00_AXI_wready);
        p_64_S00_AXI_wready->set_sv_netview_offsetfromdp(13035080);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_64_S00_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_64->S00_AXI_bid.bind(*p_64_S00_AXI_bid);
        p_64_S00_AXI_bid->set_sv_netview_offsetfromdp(13035136);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_64_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_64->S00_AXI_bresp.bind(*p_64_S00_AXI_bresp);
        p_64_S00_AXI_bresp->set_sv_netview_offsetfromdp(13035192);
        xsim_sc_channel<0, bool > *p_64_S00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_64->S00_AXI_bvalid.bind(*p_64_S00_AXI_bvalid);
        p_64_S00_AXI_bvalid->set_sv_netview_offsetfromdp(13035248);
        xsim_sc_channel<0, bool > *p_64_S00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_64->S00_AXI_bready.bind(*p_64_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_64_S00_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_64_S00_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_64->S00_AXI_arid.bind(*p_64_S00_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_64_S00_AXI_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_64_S00_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_64->S00_AXI_araddr.bind(*p_64_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_64_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_64_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_64->S00_AXI_arlen.bind(*p_64_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_64_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_64_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_64->S00_AXI_arsize.bind(*p_64_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_64_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_64_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_64->S00_AXI_arburst.bind(*p_64_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_64_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_64_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_64->S00_AXI_arlock.bind(*p_64_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_64_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_64_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_64->S00_AXI_arcache.bind(*p_64_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_64_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_64_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_64->S00_AXI_arprot.bind(*p_64_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_64_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_64_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_64->S00_AXI_arqos.bind(*p_64_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_64_S00_AXI_arqos);
        xsim_sc_channel<0, bool > *p_64_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_64->S00_AXI_arvalid.bind(*p_64_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_64_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_64_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_64->S00_AXI_arready.bind(*p_64_S00_AXI_arready);
        p_64_S00_AXI_arready->set_sv_netview_offsetfromdp(13035920);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_64_S00_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_64->S00_AXI_rid.bind(*p_64_S00_AXI_rid);
        p_64_S00_AXI_rid->set_sv_netview_offsetfromdp(13035976);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_64_S00_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_64->S00_AXI_rdata.bind(*p_64_S00_AXI_rdata);
        p_64_S00_AXI_rdata->set_sv_netview_offsetfromdp(13036032);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_64_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_64->S00_AXI_rresp.bind(*p_64_S00_AXI_rresp);
        p_64_S00_AXI_rresp->set_sv_netview_offsetfromdp(13036088);
        xsim_sc_channel<0, bool > *p_64_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_64->S00_AXI_rlast.bind(*p_64_S00_AXI_rlast);
        p_64_S00_AXI_rlast->set_sv_netview_offsetfromdp(13036144);
        xsim_sc_channel<0, bool > *p_64_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_64->S00_AXI_rvalid.bind(*p_64_S00_AXI_rvalid);
        p_64_S00_AXI_rvalid->set_sv_netview_offsetfromdp(13036200);
        xsim_sc_channel<0, bool > *p_64_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_64->S00_AXI_rready.bind(*p_64_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_64_S00_AXI_rready);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_64_M00_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_64->M00_AXI_awaddr.bind(*p_64_M00_AXI_awaddr);
        p_64_M00_AXI_awaddr->set_sv_netview_offsetfromdp(13036312);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_64_M00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_64->M00_AXI_awlen.bind(*p_64_M00_AXI_awlen);
        p_64_M00_AXI_awlen->set_sv_netview_offsetfromdp(13036368);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_64_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_64->M00_AXI_awsize.bind(*p_64_M00_AXI_awsize);
        p_64_M00_AXI_awsize->set_sv_netview_offsetfromdp(13036424);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_64_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_64->M00_AXI_awburst.bind(*p_64_M00_AXI_awburst);
        p_64_M00_AXI_awburst->set_sv_netview_offsetfromdp(13036480);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_64_M00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_64->M00_AXI_awlock.bind(*p_64_M00_AXI_awlock);
        p_64_M00_AXI_awlock->set_sv_netview_offsetfromdp(13036536);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_64_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_64->M00_AXI_awcache.bind(*p_64_M00_AXI_awcache);
        p_64_M00_AXI_awcache->set_sv_netview_offsetfromdp(13036592);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_64_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_64->M00_AXI_awprot.bind(*p_64_M00_AXI_awprot);
        p_64_M00_AXI_awprot->set_sv_netview_offsetfromdp(13036648);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_64_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_64->M00_AXI_awqos.bind(*p_64_M00_AXI_awqos);
        p_64_M00_AXI_awqos->set_sv_netview_offsetfromdp(13036704);
        xsim_sc_channel<0, bool > *p_64_M00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_64->M00_AXI_awvalid.bind(*p_64_M00_AXI_awvalid);
        p_64_M00_AXI_awvalid->set_sv_netview_offsetfromdp(13036760);
        xsim_sc_channel<0, bool > *p_64_M00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_64->M00_AXI_awready.bind(*p_64_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_64_M00_AXI_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_64_M00_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_64->M00_AXI_wdata.bind(*p_64_M00_AXI_wdata);
        p_64_M00_AXI_wdata->set_sv_netview_offsetfromdp(13036872);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_64_M00_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_64->M00_AXI_wstrb.bind(*p_64_M00_AXI_wstrb);
        p_64_M00_AXI_wstrb->set_sv_netview_offsetfromdp(13036928);
        xsim_sc_channel<0, bool > *p_64_M00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_64->M00_AXI_wlast.bind(*p_64_M00_AXI_wlast);
        p_64_M00_AXI_wlast->set_sv_netview_offsetfromdp(13036984);
        xsim_sc_channel<0, bool > *p_64_M00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_64->M00_AXI_wvalid.bind(*p_64_M00_AXI_wvalid);
        p_64_M00_AXI_wvalid->set_sv_netview_offsetfromdp(13037040);
        xsim_sc_channel<0, bool > *p_64_M00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_64->M00_AXI_wready.bind(*p_64_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_64_M00_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_64_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_64->M00_AXI_bresp.bind(*p_64_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_64_M00_AXI_bresp);
        xsim_sc_channel<0, bool > *p_64_M00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_64->M00_AXI_bvalid.bind(*p_64_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_64_M00_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_64_M00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_64->M00_AXI_bready.bind(*p_64_M00_AXI_bready);
        p_64_M00_AXI_bready->set_sv_netview_offsetfromdp(13037264);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_64_M00_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_64->M00_AXI_araddr.bind(*p_64_M00_AXI_araddr);
        p_64_M00_AXI_araddr->set_sv_netview_offsetfromdp(13037320);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_64_M00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_64->M00_AXI_arlen.bind(*p_64_M00_AXI_arlen);
        p_64_M00_AXI_arlen->set_sv_netview_offsetfromdp(13037376);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_64_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_64->M00_AXI_arsize.bind(*p_64_M00_AXI_arsize);
        p_64_M00_AXI_arsize->set_sv_netview_offsetfromdp(13037432);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_64_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_64->M00_AXI_arburst.bind(*p_64_M00_AXI_arburst);
        p_64_M00_AXI_arburst->set_sv_netview_offsetfromdp(13037488);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_64_M00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_64->M00_AXI_arlock.bind(*p_64_M00_AXI_arlock);
        p_64_M00_AXI_arlock->set_sv_netview_offsetfromdp(13037544);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_64_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_64->M00_AXI_arcache.bind(*p_64_M00_AXI_arcache);
        p_64_M00_AXI_arcache->set_sv_netview_offsetfromdp(13037600);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_64_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_64->M00_AXI_arprot.bind(*p_64_M00_AXI_arprot);
        p_64_M00_AXI_arprot->set_sv_netview_offsetfromdp(13037656);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_64_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_64->M00_AXI_arqos.bind(*p_64_M00_AXI_arqos);
        p_64_M00_AXI_arqos->set_sv_netview_offsetfromdp(13037712);
        xsim_sc_channel<0, bool > *p_64_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_64->M00_AXI_arvalid.bind(*p_64_M00_AXI_arvalid);
        p_64_M00_AXI_arvalid->set_sv_netview_offsetfromdp(13037768);
        xsim_sc_channel<0, bool > *p_64_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_64->M00_AXI_arready.bind(*p_64_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_64_M00_AXI_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_64_M00_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_64->M00_AXI_rdata.bind(*p_64_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_64_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_64_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_64->M00_AXI_rresp.bind(*p_64_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_64_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_64_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_64->M00_AXI_rlast.bind(*p_64_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_64_M00_AXI_rlast);
        xsim_sc_channel<0, bool > *p_64_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_64->M00_AXI_rvalid.bind(*p_64_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_64_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_64_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_64->M00_AXI_rready.bind(*p_64_M00_AXI_rready);
        p_64_M00_AXI_rready->set_sv_netview_offsetfromdp(13038104);
        xsim_sc_channel<37, sc_dt::sc_bv<37> > *p_64_M01_AXI_awaddr = new xsim_sc_channel<37, sc_dt::sc_bv<37> >();
        sc_inst_64->M01_AXI_awaddr.bind(*p_64_M01_AXI_awaddr);
        p_64_M01_AXI_awaddr->set_sv_netview_offsetfromdp(13038160);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_64_M01_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_64->M01_AXI_awlen.bind(*p_64_M01_AXI_awlen);
        p_64_M01_AXI_awlen->set_sv_netview_offsetfromdp(13038216);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_64_M01_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_64->M01_AXI_awsize.bind(*p_64_M01_AXI_awsize);
        p_64_M01_AXI_awsize->set_sv_netview_offsetfromdp(13038272);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_64_M01_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_64->M01_AXI_awburst.bind(*p_64_M01_AXI_awburst);
        p_64_M01_AXI_awburst->set_sv_netview_offsetfromdp(13038328);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_64_M01_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_64->M01_AXI_awlock.bind(*p_64_M01_AXI_awlock);
        p_64_M01_AXI_awlock->set_sv_netview_offsetfromdp(13038384);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_64_M01_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_64->M01_AXI_awcache.bind(*p_64_M01_AXI_awcache);
        p_64_M01_AXI_awcache->set_sv_netview_offsetfromdp(13038440);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_64_M01_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_64->M01_AXI_awprot.bind(*p_64_M01_AXI_awprot);
        p_64_M01_AXI_awprot->set_sv_netview_offsetfromdp(13038496);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_64_M01_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_64->M01_AXI_awqos.bind(*p_64_M01_AXI_awqos);
        p_64_M01_AXI_awqos->set_sv_netview_offsetfromdp(13038552);
        xsim_sc_channel<0, bool > *p_64_M01_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_64->M01_AXI_awvalid.bind(*p_64_M01_AXI_awvalid);
        p_64_M01_AXI_awvalid->set_sv_netview_offsetfromdp(13038608);
        xsim_sc_channel<0, bool > *p_64_M01_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_64->M01_AXI_awready.bind(*p_64_M01_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_64_M01_AXI_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_64_M01_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_64->M01_AXI_wdata.bind(*p_64_M01_AXI_wdata);
        p_64_M01_AXI_wdata->set_sv_netview_offsetfromdp(13038720);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_64_M01_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_64->M01_AXI_wstrb.bind(*p_64_M01_AXI_wstrb);
        p_64_M01_AXI_wstrb->set_sv_netview_offsetfromdp(13038776);
        xsim_sc_channel<0, bool > *p_64_M01_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_64->M01_AXI_wlast.bind(*p_64_M01_AXI_wlast);
        p_64_M01_AXI_wlast->set_sv_netview_offsetfromdp(13038832);
        xsim_sc_channel<0, bool > *p_64_M01_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_64->M01_AXI_wvalid.bind(*p_64_M01_AXI_wvalid);
        p_64_M01_AXI_wvalid->set_sv_netview_offsetfromdp(13038888);
        xsim_sc_channel<0, bool > *p_64_M01_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_64->M01_AXI_wready.bind(*p_64_M01_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_64_M01_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_64_M01_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_64->M01_AXI_bresp.bind(*p_64_M01_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_64_M01_AXI_bresp);
        xsim_sc_channel<0, bool > *p_64_M01_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_64->M01_AXI_bvalid.bind(*p_64_M01_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_64_M01_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_64_M01_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_64->M01_AXI_bready.bind(*p_64_M01_AXI_bready);
        p_64_M01_AXI_bready->set_sv_netview_offsetfromdp(13039112);
        xsim_sc_channel<37, sc_dt::sc_bv<37> > *p_64_M01_AXI_araddr = new xsim_sc_channel<37, sc_dt::sc_bv<37> >();
        sc_inst_64->M01_AXI_araddr.bind(*p_64_M01_AXI_araddr);
        p_64_M01_AXI_araddr->set_sv_netview_offsetfromdp(13039168);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_64_M01_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_64->M01_AXI_arlen.bind(*p_64_M01_AXI_arlen);
        p_64_M01_AXI_arlen->set_sv_netview_offsetfromdp(13039224);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_64_M01_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_64->M01_AXI_arsize.bind(*p_64_M01_AXI_arsize);
        p_64_M01_AXI_arsize->set_sv_netview_offsetfromdp(13039280);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_64_M01_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_64->M01_AXI_arburst.bind(*p_64_M01_AXI_arburst);
        p_64_M01_AXI_arburst->set_sv_netview_offsetfromdp(13039336);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_64_M01_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_64->M01_AXI_arlock.bind(*p_64_M01_AXI_arlock);
        p_64_M01_AXI_arlock->set_sv_netview_offsetfromdp(13039392);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_64_M01_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_64->M01_AXI_arcache.bind(*p_64_M01_AXI_arcache);
        p_64_M01_AXI_arcache->set_sv_netview_offsetfromdp(13039448);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_64_M01_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_64->M01_AXI_arprot.bind(*p_64_M01_AXI_arprot);
        p_64_M01_AXI_arprot->set_sv_netview_offsetfromdp(13039504);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_64_M01_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_64->M01_AXI_arqos.bind(*p_64_M01_AXI_arqos);
        p_64_M01_AXI_arqos->set_sv_netview_offsetfromdp(13039560);
        xsim_sc_channel<0, bool > *p_64_M01_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_64->M01_AXI_arvalid.bind(*p_64_M01_AXI_arvalid);
        p_64_M01_AXI_arvalid->set_sv_netview_offsetfromdp(13039616);
        xsim_sc_channel<0, bool > *p_64_M01_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_64->M01_AXI_arready.bind(*p_64_M01_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_64_M01_AXI_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_64_M01_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_64->M01_AXI_rdata.bind(*p_64_M01_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_64_M01_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_64_M01_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_64->M01_AXI_rresp.bind(*p_64_M01_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_64_M01_AXI_rresp);
        xsim_sc_channel<0, bool > *p_64_M01_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_64->M01_AXI_rlast.bind(*p_64_M01_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_64_M01_AXI_rlast);
        xsim_sc_channel<0, bool > *p_64_M01_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_64->M01_AXI_rvalid.bind(*p_64_M01_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_64_M01_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_64_M01_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_64->M01_AXI_rready.bind(*p_64_M01_AXI_rready);
        p_64_M01_AXI_rready->set_sv_netview_offsetfromdp(13039952);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_64_M02_AXI_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_64->M02_AXI_awaddr.bind(*p_64_M02_AXI_awaddr);
        p_64_M02_AXI_awaddr->set_sv_netview_offsetfromdp(13040008);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_64_M02_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_64->M02_AXI_awlen.bind(*p_64_M02_AXI_awlen);
        p_64_M02_AXI_awlen->set_sv_netview_offsetfromdp(13040064);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_64_M02_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_64->M02_AXI_awsize.bind(*p_64_M02_AXI_awsize);
        p_64_M02_AXI_awsize->set_sv_netview_offsetfromdp(13040120);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_64_M02_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_64->M02_AXI_awburst.bind(*p_64_M02_AXI_awburst);
        p_64_M02_AXI_awburst->set_sv_netview_offsetfromdp(13040176);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_64_M02_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_64->M02_AXI_awlock.bind(*p_64_M02_AXI_awlock);
        p_64_M02_AXI_awlock->set_sv_netview_offsetfromdp(13040232);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_64_M02_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_64->M02_AXI_awcache.bind(*p_64_M02_AXI_awcache);
        p_64_M02_AXI_awcache->set_sv_netview_offsetfromdp(13040288);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_64_M02_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_64->M02_AXI_awprot.bind(*p_64_M02_AXI_awprot);
        p_64_M02_AXI_awprot->set_sv_netview_offsetfromdp(13040344);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_64_M02_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_64->M02_AXI_awqos.bind(*p_64_M02_AXI_awqos);
        p_64_M02_AXI_awqos->set_sv_netview_offsetfromdp(13040400);
        xsim_sc_channel<0, bool > *p_64_M02_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_64->M02_AXI_awvalid.bind(*p_64_M02_AXI_awvalid);
        p_64_M02_AXI_awvalid->set_sv_netview_offsetfromdp(13040456);
        xsim_sc_channel<0, bool > *p_64_M02_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_64->M02_AXI_awready.bind(*p_64_M02_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_64_M02_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_64_M02_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_64->M02_AXI_wdata.bind(*p_64_M02_AXI_wdata);
        p_64_M02_AXI_wdata->set_sv_netview_offsetfromdp(13040568);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_64_M02_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_64->M02_AXI_wstrb.bind(*p_64_M02_AXI_wstrb);
        p_64_M02_AXI_wstrb->set_sv_netview_offsetfromdp(13040624);
        xsim_sc_channel<0, bool > *p_64_M02_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_64->M02_AXI_wlast.bind(*p_64_M02_AXI_wlast);
        p_64_M02_AXI_wlast->set_sv_netview_offsetfromdp(13040680);
        xsim_sc_channel<0, bool > *p_64_M02_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_64->M02_AXI_wvalid.bind(*p_64_M02_AXI_wvalid);
        p_64_M02_AXI_wvalid->set_sv_netview_offsetfromdp(13040736);
        xsim_sc_channel<0, bool > *p_64_M02_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_64->M02_AXI_wready.bind(*p_64_M02_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_64_M02_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_64_M02_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_64->M02_AXI_bresp.bind(*p_64_M02_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_64_M02_AXI_bresp);
        xsim_sc_channel<0, bool > *p_64_M02_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_64->M02_AXI_bvalid.bind(*p_64_M02_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_64_M02_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_64_M02_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_64->M02_AXI_bready.bind(*p_64_M02_AXI_bready);
        p_64_M02_AXI_bready->set_sv_netview_offsetfromdp(13040960);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_64_M02_AXI_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_64->M02_AXI_araddr.bind(*p_64_M02_AXI_araddr);
        p_64_M02_AXI_araddr->set_sv_netview_offsetfromdp(13041016);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_64_M02_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_64->M02_AXI_arlen.bind(*p_64_M02_AXI_arlen);
        p_64_M02_AXI_arlen->set_sv_netview_offsetfromdp(13041072);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_64_M02_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_64->M02_AXI_arsize.bind(*p_64_M02_AXI_arsize);
        p_64_M02_AXI_arsize->set_sv_netview_offsetfromdp(13041128);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_64_M02_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_64->M02_AXI_arburst.bind(*p_64_M02_AXI_arburst);
        p_64_M02_AXI_arburst->set_sv_netview_offsetfromdp(13041184);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_64_M02_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_64->M02_AXI_arlock.bind(*p_64_M02_AXI_arlock);
        p_64_M02_AXI_arlock->set_sv_netview_offsetfromdp(13041240);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_64_M02_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_64->M02_AXI_arcache.bind(*p_64_M02_AXI_arcache);
        p_64_M02_AXI_arcache->set_sv_netview_offsetfromdp(13041296);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_64_M02_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_64->M02_AXI_arprot.bind(*p_64_M02_AXI_arprot);
        p_64_M02_AXI_arprot->set_sv_netview_offsetfromdp(13041352);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_64_M02_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_64->M02_AXI_arqos.bind(*p_64_M02_AXI_arqos);
        p_64_M02_AXI_arqos->set_sv_netview_offsetfromdp(13041408);
        xsim_sc_channel<0, bool > *p_64_M02_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_64->M02_AXI_arvalid.bind(*p_64_M02_AXI_arvalid);
        p_64_M02_AXI_arvalid->set_sv_netview_offsetfromdp(13041464);
        xsim_sc_channel<0, bool > *p_64_M02_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_64->M02_AXI_arready.bind(*p_64_M02_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_64_M02_AXI_arready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_64_M02_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_64->M02_AXI_rdata.bind(*p_64_M02_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_64_M02_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_64_M02_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_64->M02_AXI_rresp.bind(*p_64_M02_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_64_M02_AXI_rresp);
        xsim_sc_channel<0, bool > *p_64_M02_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_64->M02_AXI_rlast.bind(*p_64_M02_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_64_M02_AXI_rlast);
        xsim_sc_channel<0, bool > *p_64_M02_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_64->M02_AXI_rvalid.bind(*p_64_M02_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_64_M02_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_64_M02_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_64->M02_AXI_rready.bind(*p_64_M02_AXI_rready);
        p_64_M02_AXI_rready->set_sv_netview_offsetfromdp(13041800);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_64_M03_AXI_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_64->M03_AXI_awaddr.bind(*p_64_M03_AXI_awaddr);
        p_64_M03_AXI_awaddr->set_sv_netview_offsetfromdp(13041856);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_64_M03_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_64->M03_AXI_awlen.bind(*p_64_M03_AXI_awlen);
        p_64_M03_AXI_awlen->set_sv_netview_offsetfromdp(13041912);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_64_M03_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_64->M03_AXI_awsize.bind(*p_64_M03_AXI_awsize);
        p_64_M03_AXI_awsize->set_sv_netview_offsetfromdp(13041968);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_64_M03_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_64->M03_AXI_awburst.bind(*p_64_M03_AXI_awburst);
        p_64_M03_AXI_awburst->set_sv_netview_offsetfromdp(13042024);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_64_M03_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_64->M03_AXI_awlock.bind(*p_64_M03_AXI_awlock);
        p_64_M03_AXI_awlock->set_sv_netview_offsetfromdp(13042080);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_64_M03_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_64->M03_AXI_awcache.bind(*p_64_M03_AXI_awcache);
        p_64_M03_AXI_awcache->set_sv_netview_offsetfromdp(13042136);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_64_M03_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_64->M03_AXI_awprot.bind(*p_64_M03_AXI_awprot);
        p_64_M03_AXI_awprot->set_sv_netview_offsetfromdp(13042192);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_64_M03_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_64->M03_AXI_awqos.bind(*p_64_M03_AXI_awqos);
        p_64_M03_AXI_awqos->set_sv_netview_offsetfromdp(13042248);
        xsim_sc_channel<0, bool > *p_64_M03_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_64->M03_AXI_awvalid.bind(*p_64_M03_AXI_awvalid);
        p_64_M03_AXI_awvalid->set_sv_netview_offsetfromdp(13042304);
        xsim_sc_channel<0, bool > *p_64_M03_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_64->M03_AXI_awready.bind(*p_64_M03_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_64_M03_AXI_awready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_64_M03_AXI_wdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_64->M03_AXI_wdata.bind(*p_64_M03_AXI_wdata);
        p_64_M03_AXI_wdata->set_sv_netview_offsetfromdp(13042416);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_64_M03_AXI_wstrb = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_64->M03_AXI_wstrb.bind(*p_64_M03_AXI_wstrb);
        p_64_M03_AXI_wstrb->set_sv_netview_offsetfromdp(13042472);
        xsim_sc_channel<0, bool > *p_64_M03_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_64->M03_AXI_wlast.bind(*p_64_M03_AXI_wlast);
        p_64_M03_AXI_wlast->set_sv_netview_offsetfromdp(13042528);
        xsim_sc_channel<0, bool > *p_64_M03_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_64->M03_AXI_wvalid.bind(*p_64_M03_AXI_wvalid);
        p_64_M03_AXI_wvalid->set_sv_netview_offsetfromdp(13042584);
        xsim_sc_channel<0, bool > *p_64_M03_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_64->M03_AXI_wready.bind(*p_64_M03_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_64_M03_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_64_M03_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_64->M03_AXI_bresp.bind(*p_64_M03_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_64_M03_AXI_bresp);
        xsim_sc_channel<0, bool > *p_64_M03_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_64->M03_AXI_bvalid.bind(*p_64_M03_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_64_M03_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_64_M03_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_64->M03_AXI_bready.bind(*p_64_M03_AXI_bready);
        p_64_M03_AXI_bready->set_sv_netview_offsetfromdp(13042808);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_64_M03_AXI_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_64->M03_AXI_araddr.bind(*p_64_M03_AXI_araddr);
        p_64_M03_AXI_araddr->set_sv_netview_offsetfromdp(13042864);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_64_M03_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_64->M03_AXI_arlen.bind(*p_64_M03_AXI_arlen);
        p_64_M03_AXI_arlen->set_sv_netview_offsetfromdp(13042920);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_64_M03_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_64->M03_AXI_arsize.bind(*p_64_M03_AXI_arsize);
        p_64_M03_AXI_arsize->set_sv_netview_offsetfromdp(13042976);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_64_M03_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_64->M03_AXI_arburst.bind(*p_64_M03_AXI_arburst);
        p_64_M03_AXI_arburst->set_sv_netview_offsetfromdp(13043032);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_64_M03_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_64->M03_AXI_arlock.bind(*p_64_M03_AXI_arlock);
        p_64_M03_AXI_arlock->set_sv_netview_offsetfromdp(13043088);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_64_M03_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_64->M03_AXI_arcache.bind(*p_64_M03_AXI_arcache);
        p_64_M03_AXI_arcache->set_sv_netview_offsetfromdp(13043144);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_64_M03_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_64->M03_AXI_arprot.bind(*p_64_M03_AXI_arprot);
        p_64_M03_AXI_arprot->set_sv_netview_offsetfromdp(13043200);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_64_M03_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_64->M03_AXI_arqos.bind(*p_64_M03_AXI_arqos);
        p_64_M03_AXI_arqos->set_sv_netview_offsetfromdp(13043256);
        xsim_sc_channel<0, bool > *p_64_M03_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_64->M03_AXI_arvalid.bind(*p_64_M03_AXI_arvalid);
        p_64_M03_AXI_arvalid->set_sv_netview_offsetfromdp(13043312);
        xsim_sc_channel<0, bool > *p_64_M03_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_64->M03_AXI_arready.bind(*p_64_M03_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_64_M03_AXI_arready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_64_M03_AXI_rdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_64->M03_AXI_rdata.bind(*p_64_M03_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_64_M03_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_64_M03_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_64->M03_AXI_rresp.bind(*p_64_M03_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_64_M03_AXI_rresp);
        xsim_sc_channel<0, bool > *p_64_M03_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_64->M03_AXI_rlast.bind(*p_64_M03_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_64_M03_AXI_rlast);
        xsim_sc_channel<0, bool > *p_64_M03_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_64->M03_AXI_rvalid.bind(*p_64_M03_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_64_M03_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_64_M03_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_64->M03_AXI_rready.bind(*p_64_M03_AXI_rready);
        p_64_M03_AXI_rready->set_sv_netview_offsetfromdp(13043648);
        sc_inst_65 = new pfm_top_sci(".pfm_top_wrapper.pfm_top_i.pfm_top_sci_inst");
        sc_inst_65->xsim_set_dbg_index(46);
        sc_inst_66 = new pfm_top_axi_vip_0_0(".pfm_top_wrapper.pfm_top_i.static_region.axi_vip_0");
        sc_inst_66->xsim_set_dbg_index(258);
        xsim_sc_channel<0, bool > *p_66_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_66->aclk.bind(*p_66_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_66_aclk);
        xsim_sc_channel<0, bool > *p_66_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_66->aresetn.bind(*p_66_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_66_aresetn);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_66_s_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_66->s_axi_awaddr.bind(*p_66_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_66_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_66_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_66->s_axi_awlen.bind(*p_66_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_66_s_axi_awlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_66_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_66->s_axi_awburst.bind(*p_66_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_66_s_axi_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_66_s_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_66->s_axi_awlock.bind(*p_66_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_66_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_66_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_66->s_axi_awcache.bind(*p_66_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_66_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_66_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_66->s_axi_awprot.bind(*p_66_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_66_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_66_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_66->s_axi_awqos.bind(*p_66_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_66_s_axi_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_66_s_axi_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_66->s_axi_awuser.bind(*p_66_s_axi_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_66_s_axi_awuser);
        xsim_sc_channel<0, bool > *p_66_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_66->s_axi_awvalid.bind(*p_66_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_66_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_66_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_66->s_axi_awready.bind(*p_66_s_axi_awready);
        p_66_s_axi_awready->set_sv_netview_offsetfromdp(13223504);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_66_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_66->s_axi_wdata.bind(*p_66_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_66_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_66_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_66->s_axi_wstrb.bind(*p_66_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_66_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_66_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_66->s_axi_wlast.bind(*p_66_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_66_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_66_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_66->s_axi_wvalid.bind(*p_66_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_66_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_66_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_66->s_axi_wready.bind(*p_66_s_axi_wready);
        p_66_s_axi_wready->set_sv_netview_offsetfromdp(13223784);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_66_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_66->s_axi_bresp.bind(*p_66_s_axi_bresp);
        p_66_s_axi_bresp->set_sv_netview_offsetfromdp(13223840);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_66_s_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_66->s_axi_buser.bind(*p_66_s_axi_buser);
        p_66_s_axi_buser->set_sv_netview_offsetfromdp(13223896);
        xsim_sc_channel<0, bool > *p_66_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_66->s_axi_bvalid.bind(*p_66_s_axi_bvalid);
        p_66_s_axi_bvalid->set_sv_netview_offsetfromdp(13223952);
        xsim_sc_channel<0, bool > *p_66_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_66->s_axi_bready.bind(*p_66_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_66_s_axi_bready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_66_s_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_66->s_axi_araddr.bind(*p_66_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_66_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_66_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_66->s_axi_arlen.bind(*p_66_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_66_s_axi_arlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_66_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_66->s_axi_arburst.bind(*p_66_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_66_s_axi_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_66_s_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_66->s_axi_arlock.bind(*p_66_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_66_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_66_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_66->s_axi_arcache.bind(*p_66_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_66_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_66_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_66->s_axi_arprot.bind(*p_66_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_66_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_66_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_66->s_axi_arqos.bind(*p_66_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_66_s_axi_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_66_s_axi_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_66->s_axi_aruser.bind(*p_66_s_axi_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_66_s_axi_aruser);
        xsim_sc_channel<0, bool > *p_66_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_66->s_axi_arvalid.bind(*p_66_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_66_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_66_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_66->s_axi_arready.bind(*p_66_s_axi_arready);
        p_66_s_axi_arready->set_sv_netview_offsetfromdp(13224568);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_66_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_66->s_axi_rdata.bind(*p_66_s_axi_rdata);
        p_66_s_axi_rdata->set_sv_netview_offsetfromdp(13224624);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_66_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_66->s_axi_rresp.bind(*p_66_s_axi_rresp);
        p_66_s_axi_rresp->set_sv_netview_offsetfromdp(13224680);
        xsim_sc_channel<0, bool > *p_66_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_66->s_axi_rlast.bind(*p_66_s_axi_rlast);
        p_66_s_axi_rlast->set_sv_netview_offsetfromdp(13224736);
        xsim_sc_channel<0, bool > *p_66_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_66->s_axi_rvalid.bind(*p_66_s_axi_rvalid);
        p_66_s_axi_rvalid->set_sv_netview_offsetfromdp(13224792);
        xsim_sc_channel<0, bool > *p_66_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_66->s_axi_rready.bind(*p_66_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_66_s_axi_rready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_66_m_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_66->m_axi_awaddr.bind(*p_66_m_axi_awaddr);
        p_66_m_axi_awaddr->set_sv_netview_offsetfromdp(13224904);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_66_m_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_66->m_axi_awlen.bind(*p_66_m_axi_awlen);
        p_66_m_axi_awlen->set_sv_netview_offsetfromdp(13224960);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_66_m_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_66->m_axi_awburst.bind(*p_66_m_axi_awburst);
        p_66_m_axi_awburst->set_sv_netview_offsetfromdp(13225016);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_66_m_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_66->m_axi_awlock.bind(*p_66_m_axi_awlock);
        p_66_m_axi_awlock->set_sv_netview_offsetfromdp(13225072);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_66_m_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_66->m_axi_awcache.bind(*p_66_m_axi_awcache);
        p_66_m_axi_awcache->set_sv_netview_offsetfromdp(13225128);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_66_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_66->m_axi_awprot.bind(*p_66_m_axi_awprot);
        p_66_m_axi_awprot->set_sv_netview_offsetfromdp(13225184);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_66_m_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_66->m_axi_awqos.bind(*p_66_m_axi_awqos);
        p_66_m_axi_awqos->set_sv_netview_offsetfromdp(13225240);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_66_m_axi_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_66->m_axi_awuser.bind(*p_66_m_axi_awuser);
        p_66_m_axi_awuser->set_sv_netview_offsetfromdp(13225296);
        xsim_sc_channel<0, bool > *p_66_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_66->m_axi_awvalid.bind(*p_66_m_axi_awvalid);
        p_66_m_axi_awvalid->set_sv_netview_offsetfromdp(13225352);
        xsim_sc_channel<0, bool > *p_66_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_66->m_axi_awready.bind(*p_66_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_66_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_66_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_66->m_axi_wdata.bind(*p_66_m_axi_wdata);
        p_66_m_axi_wdata->set_sv_netview_offsetfromdp(13225464);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_66_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_66->m_axi_wstrb.bind(*p_66_m_axi_wstrb);
        p_66_m_axi_wstrb->set_sv_netview_offsetfromdp(13225520);
        xsim_sc_channel<0, bool > *p_66_m_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_66->m_axi_wlast.bind(*p_66_m_axi_wlast);
        p_66_m_axi_wlast->set_sv_netview_offsetfromdp(13225576);
        xsim_sc_channel<0, bool > *p_66_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_66->m_axi_wvalid.bind(*p_66_m_axi_wvalid);
        p_66_m_axi_wvalid->set_sv_netview_offsetfromdp(13225632);
        xsim_sc_channel<0, bool > *p_66_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_66->m_axi_wready.bind(*p_66_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_66_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_66_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_66->m_axi_bresp.bind(*p_66_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_66_m_axi_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_66_m_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_66->m_axi_buser.bind(*p_66_m_axi_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_66_m_axi_buser);
        xsim_sc_channel<0, bool > *p_66_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_66->m_axi_bvalid.bind(*p_66_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_66_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_66_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_66->m_axi_bready.bind(*p_66_m_axi_bready);
        p_66_m_axi_bready->set_sv_netview_offsetfromdp(13225912);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_66_m_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_66->m_axi_araddr.bind(*p_66_m_axi_araddr);
        p_66_m_axi_araddr->set_sv_netview_offsetfromdp(13225968);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_66_m_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_66->m_axi_arlen.bind(*p_66_m_axi_arlen);
        p_66_m_axi_arlen->set_sv_netview_offsetfromdp(13226024);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_66_m_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_66->m_axi_arburst.bind(*p_66_m_axi_arburst);
        p_66_m_axi_arburst->set_sv_netview_offsetfromdp(13226080);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_66_m_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_66->m_axi_arlock.bind(*p_66_m_axi_arlock);
        p_66_m_axi_arlock->set_sv_netview_offsetfromdp(13226136);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_66_m_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_66->m_axi_arcache.bind(*p_66_m_axi_arcache);
        p_66_m_axi_arcache->set_sv_netview_offsetfromdp(13226192);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_66_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_66->m_axi_arprot.bind(*p_66_m_axi_arprot);
        p_66_m_axi_arprot->set_sv_netview_offsetfromdp(13226248);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_66_m_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_66->m_axi_arqos.bind(*p_66_m_axi_arqos);
        p_66_m_axi_arqos->set_sv_netview_offsetfromdp(13226304);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_66_m_axi_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_66->m_axi_aruser.bind(*p_66_m_axi_aruser);
        p_66_m_axi_aruser->set_sv_netview_offsetfromdp(13226360);
        xsim_sc_channel<0, bool > *p_66_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_66->m_axi_arvalid.bind(*p_66_m_axi_arvalid);
        p_66_m_axi_arvalid->set_sv_netview_offsetfromdp(13226416);
        xsim_sc_channel<0, bool > *p_66_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_66->m_axi_arready.bind(*p_66_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_66_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_66_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_66->m_axi_rdata.bind(*p_66_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_66_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_66_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_66->m_axi_rresp.bind(*p_66_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_66_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_66_m_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_66->m_axi_rlast.bind(*p_66_m_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_66_m_axi_rlast);
        xsim_sc_channel<0, bool > *p_66_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_66->m_axi_rvalid.bind(*p_66_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_66_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_66_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_66->m_axi_rready.bind(*p_66_m_axi_rready);
        p_66_m_axi_rready->set_sv_netview_offsetfromdp(13226752);
        sc_inst_67 = new pfm_top_xbar_0(".pfm_top_wrapper.pfm_top_i.static_region.connect_to_es_cu.xbar");
        sc_inst_67->xsim_set_dbg_index(667);
        xsim_sc_channel<0, bool > *p_67_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_67->aclk.bind(*p_67_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_67_aclk);
        xsim_sc_channel<0, bool > *p_67_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_67->aresetn.bind(*p_67_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_67_aresetn);
        xsim_sc_channel<128, sc_dt::sc_bv<128> > *p_67_s_axi_awaddr = new xsim_sc_channel<128, sc_dt::sc_bv<128> >();
        sc_inst_67->s_axi_awaddr.bind(*p_67_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_67_s_axi_awaddr);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_67_s_axi_awprot = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_67->s_axi_awprot.bind(*p_67_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_67_s_axi_awprot);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_67_s_axi_awvalid = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_67->s_axi_awvalid.bind(*p_67_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_67_s_axi_awvalid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_67_s_axi_awready = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_67->s_axi_awready.bind(*p_67_s_axi_awready);
        p_67_s_axi_awready->set_sv_netview_offsetfromdp(13341888);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_67_s_axi_wdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_67->s_axi_wdata.bind(*p_67_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_67_s_axi_wdata);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_67_s_axi_wstrb = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_67->s_axi_wstrb.bind(*p_67_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_67_s_axi_wstrb);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_67_s_axi_wvalid = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_67->s_axi_wvalid.bind(*p_67_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_67_s_axi_wvalid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_67_s_axi_wready = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_67->s_axi_wready.bind(*p_67_s_axi_wready);
        p_67_s_axi_wready->set_sv_netview_offsetfromdp(13342112);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_67_s_axi_bresp = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_67->s_axi_bresp.bind(*p_67_s_axi_bresp);
        p_67_s_axi_bresp->set_sv_netview_offsetfromdp(13342168);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_67_s_axi_bvalid = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_67->s_axi_bvalid.bind(*p_67_s_axi_bvalid);
        p_67_s_axi_bvalid->set_sv_netview_offsetfromdp(13342224);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_67_s_axi_bready = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_67->s_axi_bready.bind(*p_67_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_67_s_axi_bready);
        xsim_sc_channel<128, sc_dt::sc_bv<128> > *p_67_s_axi_araddr = new xsim_sc_channel<128, sc_dt::sc_bv<128> >();
        sc_inst_67->s_axi_araddr.bind(*p_67_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_67_s_axi_araddr);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_67_s_axi_arprot = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_67->s_axi_arprot.bind(*p_67_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_67_s_axi_arprot);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_67_s_axi_arvalid = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_67->s_axi_arvalid.bind(*p_67_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_67_s_axi_arvalid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_67_s_axi_arready = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_67->s_axi_arready.bind(*p_67_s_axi_arready);
        p_67_s_axi_arready->set_sv_netview_offsetfromdp(13342504);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_67_s_axi_rdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_67->s_axi_rdata.bind(*p_67_s_axi_rdata);
        p_67_s_axi_rdata->set_sv_netview_offsetfromdp(13342560);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_67_s_axi_rresp = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_67->s_axi_rresp.bind(*p_67_s_axi_rresp);
        p_67_s_axi_rresp->set_sv_netview_offsetfromdp(13342616);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_67_s_axi_rvalid = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_67->s_axi_rvalid.bind(*p_67_s_axi_rvalid);
        p_67_s_axi_rvalid->set_sv_netview_offsetfromdp(13342672);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_67_s_axi_rready = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_67->s_axi_rready.bind(*p_67_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_67_s_axi_rready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_67_m_axi_awaddr = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_67->m_axi_awaddr.bind(*p_67_m_axi_awaddr);
        p_67_m_axi_awaddr->set_sv_netview_offsetfromdp(13342784);
        xsim_sc_channel<12, sc_dt::sc_bv<12> > *p_67_m_axi_awprot = new xsim_sc_channel<12, sc_dt::sc_bv<12> >();
        sc_inst_67->m_axi_awprot.bind(*p_67_m_axi_awprot);
        p_67_m_axi_awprot->set_sv_netview_offsetfromdp(13342840);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_67_m_axi_awvalid = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_67->m_axi_awvalid.bind(*p_67_m_axi_awvalid);
        p_67_m_axi_awvalid->set_sv_netview_offsetfromdp(13342896);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_67_m_axi_awready = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_67->m_axi_awready.bind(*p_67_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_67_m_axi_awready);
        xsim_sc_channel<128, sc_dt::sc_bv<128> > *p_67_m_axi_wdata = new xsim_sc_channel<128, sc_dt::sc_bv<128> >();
        sc_inst_67->m_axi_wdata.bind(*p_67_m_axi_wdata);
        p_67_m_axi_wdata->set_sv_netview_offsetfromdp(13343008);
        xsim_sc_channel<16, sc_dt::sc_bv<16> > *p_67_m_axi_wstrb = new xsim_sc_channel<16, sc_dt::sc_bv<16> >();
        sc_inst_67->m_axi_wstrb.bind(*p_67_m_axi_wstrb);
        p_67_m_axi_wstrb->set_sv_netview_offsetfromdp(13343064);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_67_m_axi_wvalid = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_67->m_axi_wvalid.bind(*p_67_m_axi_wvalid);
        p_67_m_axi_wvalid->set_sv_netview_offsetfromdp(13343120);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_67_m_axi_wready = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_67->m_axi_wready.bind(*p_67_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_67_m_axi_wready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_67_m_axi_bresp = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_67->m_axi_bresp.bind(*p_67_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_67_m_axi_bresp);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_67_m_axi_bvalid = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_67->m_axi_bvalid.bind(*p_67_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_67_m_axi_bvalid);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_67_m_axi_bready = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_67->m_axi_bready.bind(*p_67_m_axi_bready);
        p_67_m_axi_bready->set_sv_netview_offsetfromdp(13343344);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_67_m_axi_araddr = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_67->m_axi_araddr.bind(*p_67_m_axi_araddr);
        p_67_m_axi_araddr->set_sv_netview_offsetfromdp(13343400);
        xsim_sc_channel<12, sc_dt::sc_bv<12> > *p_67_m_axi_arprot = new xsim_sc_channel<12, sc_dt::sc_bv<12> >();
        sc_inst_67->m_axi_arprot.bind(*p_67_m_axi_arprot);
        p_67_m_axi_arprot->set_sv_netview_offsetfromdp(13343456);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_67_m_axi_arvalid = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_67->m_axi_arvalid.bind(*p_67_m_axi_arvalid);
        p_67_m_axi_arvalid->set_sv_netview_offsetfromdp(13343512);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_67_m_axi_arready = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_67->m_axi_arready.bind(*p_67_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_67_m_axi_arready);
        xsim_sc_channel<128, sc_dt::sc_bv<128> > *p_67_m_axi_rdata = new xsim_sc_channel<128, sc_dt::sc_bv<128> >();
        sc_inst_67->m_axi_rdata.bind(*p_67_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_67_m_axi_rdata);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_67_m_axi_rresp = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_67->m_axi_rresp.bind(*p_67_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_67_m_axi_rresp);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_67_m_axi_rvalid = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_67->m_axi_rvalid.bind(*p_67_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_67_m_axi_rvalid);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_67_m_axi_rready = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_67->m_axi_rready.bind(*p_67_m_axi_rready);
        p_67_m_axi_rready->set_sv_netview_offsetfromdp(13343792);
        sc_inst_68 = new pfm_top_embedded_schedular_0(".pfm_top_wrapper.pfm_top_i.static_region.embedded_schedular");
        sc_inst_68->xsim_set_dbg_index(262);
        xsim_sc_channel<128, sc_dt::sc_bv<128> > *p_68_interrupt_cu = new xsim_sc_channel<128, sc_dt::sc_bv<128> >();
        sc_inst_68->interrupt_cu.bind(*p_68_interrupt_cu);
        (*_glb_hdl_sc_channel_map).push_back(p_68_interrupt_cu);
        xsim_sc_channel<0, bool > *p_68_interrupt_m2m = new xsim_sc_channel<0, bool >();
        sc_inst_68->interrupt_m2m.bind(*p_68_interrupt_m2m);
        p_68_interrupt_m2m->set_sv_netview_offsetfromdp(13345680);
        xsim_sc_channel<0, bool > *p_68_s_axi_ctrl_user_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_68->s_axi_ctrl_user_aresetn.bind(*p_68_s_axi_ctrl_user_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_68_s_axi_ctrl_user_aresetn);
        xsim_sc_channel<0, bool > *p_68_s_axi_data_p2p_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_68->s_axi_data_p2p_aresetn.bind(*p_68_s_axi_data_p2p_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_68_s_axi_data_p2p_aresetn);
        xsim_sc_channel<0, bool > *p_68_maxi_lite_mb_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_68->maxi_lite_mb_aresetn.bind(*p_68_maxi_lite_mb_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_68_maxi_lite_mb_aresetn);
        xsim_sc_channel<0, bool > *p_68_m_axi_data_m2m_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_68->m_axi_data_m2m_aresetn.bind(*p_68_m_axi_data_m2m_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_68_m_axi_data_m2m_aresetn);
        xsim_sc_channel<0, bool > *p_68_s_axi_ctrl_user_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_68->s_axi_ctrl_user_aclk.bind(*p_68_s_axi_ctrl_user_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_68_s_axi_ctrl_user_aclk);
        xsim_sc_channel<0, bool > *p_68_s_axi_data_p2p_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_68->s_axi_data_p2p_aclk.bind(*p_68_s_axi_data_p2p_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_68_s_axi_data_p2p_aclk);
        xsim_sc_channel<0, bool > *p_68_maxi_lite_mb_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_68->maxi_lite_mb_aclk.bind(*p_68_maxi_lite_mb_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_68_maxi_lite_mb_aclk);
        xsim_sc_channel<0, bool > *p_68_m_axi_data_m2m_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_68->m_axi_data_m2m_aclk.bind(*p_68_m_axi_data_m2m_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_68_m_axi_data_m2m_aclk);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_68_s_axi_data_p2p_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_68->s_axi_data_p2p_awaddr.bind(*p_68_s_axi_data_p2p_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_68_s_axi_data_p2p_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_68_s_axi_data_p2p_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_68->s_axi_data_p2p_awlen.bind(*p_68_s_axi_data_p2p_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_68_s_axi_data_p2p_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_68_s_axi_data_p2p_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_68->s_axi_data_p2p_awsize.bind(*p_68_s_axi_data_p2p_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_68_s_axi_data_p2p_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_68_s_axi_data_p2p_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_68->s_axi_data_p2p_awburst.bind(*p_68_s_axi_data_p2p_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_68_s_axi_data_p2p_awburst);
        xsim_sc_channel<0, bool > *p_68_s_axi_data_p2p_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_68->s_axi_data_p2p_awlock.bind(*p_68_s_axi_data_p2p_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_68_s_axi_data_p2p_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_68_s_axi_data_p2p_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_68->s_axi_data_p2p_awcache.bind(*p_68_s_axi_data_p2p_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_68_s_axi_data_p2p_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_68_s_axi_data_p2p_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_68->s_axi_data_p2p_awprot.bind(*p_68_s_axi_data_p2p_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_68_s_axi_data_p2p_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_68_s_axi_data_p2p_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_68->s_axi_data_p2p_awregion.bind(*p_68_s_axi_data_p2p_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_68_s_axi_data_p2p_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_68_s_axi_data_p2p_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_68->s_axi_data_p2p_awqos.bind(*p_68_s_axi_data_p2p_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_68_s_axi_data_p2p_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_68_s_axi_data_p2p_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_68->s_axi_data_p2p_awuser.bind(*p_68_s_axi_data_p2p_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_68_s_axi_data_p2p_awuser);
        xsim_sc_channel<0, bool > *p_68_s_axi_data_p2p_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_68->s_axi_data_p2p_awvalid.bind(*p_68_s_axi_data_p2p_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_68_s_axi_data_p2p_awvalid);
        xsim_sc_channel<0, bool > *p_68_s_axi_data_p2p_awready = new xsim_sc_channel<0, bool >();
        sc_inst_68->s_axi_data_p2p_awready.bind(*p_68_s_axi_data_p2p_awready);
        p_68_s_axi_data_p2p_awready->set_sv_netview_offsetfromdp(13346800);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_68_s_axi_data_p2p_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_68->s_axi_data_p2p_wdata.bind(*p_68_s_axi_data_p2p_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_68_s_axi_data_p2p_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_68_s_axi_data_p2p_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_68->s_axi_data_p2p_wstrb.bind(*p_68_s_axi_data_p2p_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_68_s_axi_data_p2p_wstrb);
        xsim_sc_channel<0, bool > *p_68_s_axi_data_p2p_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_68->s_axi_data_p2p_wlast.bind(*p_68_s_axi_data_p2p_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_68_s_axi_data_p2p_wlast);
        xsim_sc_channel<0, bool > *p_68_s_axi_data_p2p_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_68->s_axi_data_p2p_wvalid.bind(*p_68_s_axi_data_p2p_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_68_s_axi_data_p2p_wvalid);
        xsim_sc_channel<0, bool > *p_68_s_axi_data_p2p_wready = new xsim_sc_channel<0, bool >();
        sc_inst_68->s_axi_data_p2p_wready.bind(*p_68_s_axi_data_p2p_wready);
        p_68_s_axi_data_p2p_wready->set_sv_netview_offsetfromdp(13347080);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_68_s_axi_data_p2p_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_68->s_axi_data_p2p_bresp.bind(*p_68_s_axi_data_p2p_bresp);
        p_68_s_axi_data_p2p_bresp->set_sv_netview_offsetfromdp(13347136);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_68_s_axi_data_p2p_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_68->s_axi_data_p2p_buser.bind(*p_68_s_axi_data_p2p_buser);
        p_68_s_axi_data_p2p_buser->set_sv_netview_offsetfromdp(13347192);
        xsim_sc_channel<0, bool > *p_68_s_axi_data_p2p_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_68->s_axi_data_p2p_bvalid.bind(*p_68_s_axi_data_p2p_bvalid);
        p_68_s_axi_data_p2p_bvalid->set_sv_netview_offsetfromdp(13347248);
        xsim_sc_channel<0, bool > *p_68_s_axi_data_p2p_bready = new xsim_sc_channel<0, bool >();
        sc_inst_68->s_axi_data_p2p_bready.bind(*p_68_s_axi_data_p2p_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_68_s_axi_data_p2p_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_68_s_axi_data_p2p_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_68->s_axi_data_p2p_araddr.bind(*p_68_s_axi_data_p2p_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_68_s_axi_data_p2p_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_68_s_axi_data_p2p_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_68->s_axi_data_p2p_arlen.bind(*p_68_s_axi_data_p2p_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_68_s_axi_data_p2p_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_68_s_axi_data_p2p_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_68->s_axi_data_p2p_arsize.bind(*p_68_s_axi_data_p2p_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_68_s_axi_data_p2p_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_68_s_axi_data_p2p_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_68->s_axi_data_p2p_arburst.bind(*p_68_s_axi_data_p2p_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_68_s_axi_data_p2p_arburst);
        xsim_sc_channel<0, bool > *p_68_s_axi_data_p2p_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_68->s_axi_data_p2p_arlock.bind(*p_68_s_axi_data_p2p_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_68_s_axi_data_p2p_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_68_s_axi_data_p2p_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_68->s_axi_data_p2p_arcache.bind(*p_68_s_axi_data_p2p_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_68_s_axi_data_p2p_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_68_s_axi_data_p2p_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_68->s_axi_data_p2p_arprot.bind(*p_68_s_axi_data_p2p_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_68_s_axi_data_p2p_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_68_s_axi_data_p2p_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_68->s_axi_data_p2p_arregion.bind(*p_68_s_axi_data_p2p_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_68_s_axi_data_p2p_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_68_s_axi_data_p2p_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_68->s_axi_data_p2p_arqos.bind(*p_68_s_axi_data_p2p_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_68_s_axi_data_p2p_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_68_s_axi_data_p2p_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_68->s_axi_data_p2p_aruser.bind(*p_68_s_axi_data_p2p_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_68_s_axi_data_p2p_aruser);
        xsim_sc_channel<0, bool > *p_68_s_axi_data_p2p_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_68->s_axi_data_p2p_arvalid.bind(*p_68_s_axi_data_p2p_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_68_s_axi_data_p2p_arvalid);
        xsim_sc_channel<0, bool > *p_68_s_axi_data_p2p_arready = new xsim_sc_channel<0, bool >();
        sc_inst_68->s_axi_data_p2p_arready.bind(*p_68_s_axi_data_p2p_arready);
        p_68_s_axi_data_p2p_arready->set_sv_netview_offsetfromdp(13347976);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_68_s_axi_data_p2p_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_68->s_axi_data_p2p_rdata.bind(*p_68_s_axi_data_p2p_rdata);
        p_68_s_axi_data_p2p_rdata->set_sv_netview_offsetfromdp(13348032);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_68_s_axi_data_p2p_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_68->s_axi_data_p2p_rresp.bind(*p_68_s_axi_data_p2p_rresp);
        p_68_s_axi_data_p2p_rresp->set_sv_netview_offsetfromdp(13348088);
        xsim_sc_channel<0, bool > *p_68_s_axi_data_p2p_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_68->s_axi_data_p2p_rlast.bind(*p_68_s_axi_data_p2p_rlast);
        p_68_s_axi_data_p2p_rlast->set_sv_netview_offsetfromdp(13348144);
        xsim_sc_channel<0, bool > *p_68_s_axi_data_p2p_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_68->s_axi_data_p2p_rvalid.bind(*p_68_s_axi_data_p2p_rvalid);
        p_68_s_axi_data_p2p_rvalid->set_sv_netview_offsetfromdp(13348200);
        xsim_sc_channel<0, bool > *p_68_s_axi_data_p2p_rready = new xsim_sc_channel<0, bool >();
        sc_inst_68->s_axi_data_p2p_rready.bind(*p_68_s_axi_data_p2p_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_68_s_axi_data_p2p_rready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_68_maxi_lite_mb_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_68->maxi_lite_mb_awaddr.bind(*p_68_maxi_lite_mb_awaddr);
        p_68_maxi_lite_mb_awaddr->set_sv_netview_offsetfromdp(13348312);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_68_maxi_lite_mb_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_68->maxi_lite_mb_awprot.bind(*p_68_maxi_lite_mb_awprot);
        p_68_maxi_lite_mb_awprot->set_sv_netview_offsetfromdp(13348368);
        xsim_sc_channel<0, bool > *p_68_maxi_lite_mb_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_68->maxi_lite_mb_awvalid.bind(*p_68_maxi_lite_mb_awvalid);
        p_68_maxi_lite_mb_awvalid->set_sv_netview_offsetfromdp(13348424);
        xsim_sc_channel<0, bool > *p_68_maxi_lite_mb_awready = new xsim_sc_channel<0, bool >();
        sc_inst_68->maxi_lite_mb_awready.bind(*p_68_maxi_lite_mb_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_68_maxi_lite_mb_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_68_maxi_lite_mb_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_68->maxi_lite_mb_wdata.bind(*p_68_maxi_lite_mb_wdata);
        p_68_maxi_lite_mb_wdata->set_sv_netview_offsetfromdp(13348536);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_68_maxi_lite_mb_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_68->maxi_lite_mb_wstrb.bind(*p_68_maxi_lite_mb_wstrb);
        p_68_maxi_lite_mb_wstrb->set_sv_netview_offsetfromdp(13348592);
        xsim_sc_channel<0, bool > *p_68_maxi_lite_mb_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_68->maxi_lite_mb_wvalid.bind(*p_68_maxi_lite_mb_wvalid);
        p_68_maxi_lite_mb_wvalid->set_sv_netview_offsetfromdp(13348648);
        xsim_sc_channel<0, bool > *p_68_maxi_lite_mb_wready = new xsim_sc_channel<0, bool >();
        sc_inst_68->maxi_lite_mb_wready.bind(*p_68_maxi_lite_mb_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_68_maxi_lite_mb_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_68_maxi_lite_mb_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_68->maxi_lite_mb_bresp.bind(*p_68_maxi_lite_mb_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_68_maxi_lite_mb_bresp);
        xsim_sc_channel<0, bool > *p_68_maxi_lite_mb_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_68->maxi_lite_mb_bvalid.bind(*p_68_maxi_lite_mb_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_68_maxi_lite_mb_bvalid);
        xsim_sc_channel<0, bool > *p_68_maxi_lite_mb_bready = new xsim_sc_channel<0, bool >();
        sc_inst_68->maxi_lite_mb_bready.bind(*p_68_maxi_lite_mb_bready);
        p_68_maxi_lite_mb_bready->set_sv_netview_offsetfromdp(13348872);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_68_maxi_lite_mb_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_68->maxi_lite_mb_araddr.bind(*p_68_maxi_lite_mb_araddr);
        p_68_maxi_lite_mb_araddr->set_sv_netview_offsetfromdp(13348928);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_68_maxi_lite_mb_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_68->maxi_lite_mb_arprot.bind(*p_68_maxi_lite_mb_arprot);
        p_68_maxi_lite_mb_arprot->set_sv_netview_offsetfromdp(13348984);
        xsim_sc_channel<0, bool > *p_68_maxi_lite_mb_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_68->maxi_lite_mb_arvalid.bind(*p_68_maxi_lite_mb_arvalid);
        p_68_maxi_lite_mb_arvalid->set_sv_netview_offsetfromdp(13349040);
        xsim_sc_channel<0, bool > *p_68_maxi_lite_mb_arready = new xsim_sc_channel<0, bool >();
        sc_inst_68->maxi_lite_mb_arready.bind(*p_68_maxi_lite_mb_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_68_maxi_lite_mb_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_68_maxi_lite_mb_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_68->maxi_lite_mb_rdata.bind(*p_68_maxi_lite_mb_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_68_maxi_lite_mb_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_68_maxi_lite_mb_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_68->maxi_lite_mb_rresp.bind(*p_68_maxi_lite_mb_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_68_maxi_lite_mb_rresp);
        xsim_sc_channel<0, bool > *p_68_maxi_lite_mb_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_68->maxi_lite_mb_rvalid.bind(*p_68_maxi_lite_mb_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_68_maxi_lite_mb_rvalid);
        xsim_sc_channel<0, bool > *p_68_maxi_lite_mb_rready = new xsim_sc_channel<0, bool >();
        sc_inst_68->maxi_lite_mb_rready.bind(*p_68_maxi_lite_mb_rready);
        p_68_maxi_lite_mb_rready->set_sv_netview_offsetfromdp(13349320);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_68_s_axi_ctrl_user_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_68->s_axi_ctrl_user_awaddr.bind(*p_68_s_axi_ctrl_user_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_68_s_axi_ctrl_user_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_68_s_axi_ctrl_user_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_68->s_axi_ctrl_user_awprot.bind(*p_68_s_axi_ctrl_user_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_68_s_axi_ctrl_user_awprot);
        xsim_sc_channel<0, bool > *p_68_s_axi_ctrl_user_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_68->s_axi_ctrl_user_awvalid.bind(*p_68_s_axi_ctrl_user_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_68_s_axi_ctrl_user_awvalid);
        xsim_sc_channel<0, bool > *p_68_s_axi_ctrl_user_awready = new xsim_sc_channel<0, bool >();
        sc_inst_68->s_axi_ctrl_user_awready.bind(*p_68_s_axi_ctrl_user_awready);
        p_68_s_axi_ctrl_user_awready->set_sv_netview_offsetfromdp(13349544);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_68_s_axi_ctrl_user_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_68->s_axi_ctrl_user_wdata.bind(*p_68_s_axi_ctrl_user_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_68_s_axi_ctrl_user_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_68_s_axi_ctrl_user_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_68->s_axi_ctrl_user_wstrb.bind(*p_68_s_axi_ctrl_user_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_68_s_axi_ctrl_user_wstrb);
        xsim_sc_channel<0, bool > *p_68_s_axi_ctrl_user_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_68->s_axi_ctrl_user_wvalid.bind(*p_68_s_axi_ctrl_user_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_68_s_axi_ctrl_user_wvalid);
        xsim_sc_channel<0, bool > *p_68_s_axi_ctrl_user_wready = new xsim_sc_channel<0, bool >();
        sc_inst_68->s_axi_ctrl_user_wready.bind(*p_68_s_axi_ctrl_user_wready);
        p_68_s_axi_ctrl_user_wready->set_sv_netview_offsetfromdp(13349768);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_68_s_axi_ctrl_user_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_68->s_axi_ctrl_user_bresp.bind(*p_68_s_axi_ctrl_user_bresp);
        p_68_s_axi_ctrl_user_bresp->set_sv_netview_offsetfromdp(13349824);
        xsim_sc_channel<0, bool > *p_68_s_axi_ctrl_user_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_68->s_axi_ctrl_user_bvalid.bind(*p_68_s_axi_ctrl_user_bvalid);
        p_68_s_axi_ctrl_user_bvalid->set_sv_netview_offsetfromdp(13349880);
        xsim_sc_channel<0, bool > *p_68_s_axi_ctrl_user_bready = new xsim_sc_channel<0, bool >();
        sc_inst_68->s_axi_ctrl_user_bready.bind(*p_68_s_axi_ctrl_user_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_68_s_axi_ctrl_user_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_68_s_axi_ctrl_user_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_68->s_axi_ctrl_user_araddr.bind(*p_68_s_axi_ctrl_user_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_68_s_axi_ctrl_user_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_68_s_axi_ctrl_user_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_68->s_axi_ctrl_user_arprot.bind(*p_68_s_axi_ctrl_user_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_68_s_axi_ctrl_user_arprot);
        xsim_sc_channel<0, bool > *p_68_s_axi_ctrl_user_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_68->s_axi_ctrl_user_arvalid.bind(*p_68_s_axi_ctrl_user_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_68_s_axi_ctrl_user_arvalid);
        xsim_sc_channel<0, bool > *p_68_s_axi_ctrl_user_arready = new xsim_sc_channel<0, bool >();
        sc_inst_68->s_axi_ctrl_user_arready.bind(*p_68_s_axi_ctrl_user_arready);
        p_68_s_axi_ctrl_user_arready->set_sv_netview_offsetfromdp(13350160);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_68_s_axi_ctrl_user_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_68->s_axi_ctrl_user_rdata.bind(*p_68_s_axi_ctrl_user_rdata);
        p_68_s_axi_ctrl_user_rdata->set_sv_netview_offsetfromdp(13350216);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_68_s_axi_ctrl_user_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_68->s_axi_ctrl_user_rresp.bind(*p_68_s_axi_ctrl_user_rresp);
        p_68_s_axi_ctrl_user_rresp->set_sv_netview_offsetfromdp(13350272);
        xsim_sc_channel<0, bool > *p_68_s_axi_ctrl_user_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_68->s_axi_ctrl_user_rvalid.bind(*p_68_s_axi_ctrl_user_rvalid);
        p_68_s_axi_ctrl_user_rvalid->set_sv_netview_offsetfromdp(13350328);
        xsim_sc_channel<0, bool > *p_68_s_axi_ctrl_user_rready = new xsim_sc_channel<0, bool >();
        sc_inst_68->s_axi_ctrl_user_rready.bind(*p_68_s_axi_ctrl_user_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_68_s_axi_ctrl_user_rready);
        sc_inst_69 = new pfm_top_sim_address_0_0(".pfm_top_wrapper.pfm_top_i.static_region.sim_address_0");
        sc_inst_69->xsim_set_dbg_index(263);
        xsim_sc_channel<0, bool > *p_69_m_aximm_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_69->m_aximm_aclk.bind(*p_69_m_aximm_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_69_m_aximm_aclk);
        xsim_sc_channel<0, bool > *p_69_m_aximm_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_69->m_aximm_aresetn.bind(*p_69_m_aximm_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_69_m_aximm_aresetn);
        xsim_sc_channel<0, bool > *p_69_s_aximm_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_69->s_aximm_aclk.bind(*p_69_s_aximm_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_69_s_aximm_aclk);
        xsim_sc_channel<0, bool > *p_69_s_aximm_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_69->s_aximm_aresetn.bind(*p_69_s_aximm_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_69_s_aximm_aresetn);
        xsim_sc_channel<0, bool > *p_69_m_aximm_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_69->m_aximm_AWVALID.bind(*p_69_m_aximm_AWVALID);
        p_69_m_aximm_AWVALID->set_sv_netview_offsetfromdp(13350712);
        xsim_sc_channel<0, bool > *p_69_m_aximm_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_69->m_aximm_AWREADY.bind(*p_69_m_aximm_AWREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_69_m_aximm_AWREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_69_m_aximm_AWADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_69->m_aximm_AWADDR.bind(*p_69_m_aximm_AWADDR);
        p_69_m_aximm_AWADDR->set_sv_netview_offsetfromdp(13350824);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_69_m_aximm_AWID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_69->m_aximm_AWID.bind(*p_69_m_aximm_AWID);
        p_69_m_aximm_AWID->set_sv_netview_offsetfromdp(13350880);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_69_m_aximm_AWLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_69->m_aximm_AWLEN.bind(*p_69_m_aximm_AWLEN);
        p_69_m_aximm_AWLEN->set_sv_netview_offsetfromdp(13350936);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_69_m_aximm_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_69->m_aximm_AWSIZE.bind(*p_69_m_aximm_AWSIZE);
        p_69_m_aximm_AWSIZE->set_sv_netview_offsetfromdp(13350992);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_69_m_aximm_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_69->m_aximm_AWBURST.bind(*p_69_m_aximm_AWBURST);
        p_69_m_aximm_AWBURST->set_sv_netview_offsetfromdp(13351048);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_69_m_aximm_AWLOCK = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_69->m_aximm_AWLOCK.bind(*p_69_m_aximm_AWLOCK);
        p_69_m_aximm_AWLOCK->set_sv_netview_offsetfromdp(13351104);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_69_m_aximm_AWCACHE = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_69->m_aximm_AWCACHE.bind(*p_69_m_aximm_AWCACHE);
        p_69_m_aximm_AWCACHE->set_sv_netview_offsetfromdp(13351160);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_69_m_aximm_AWPROT = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_69->m_aximm_AWPROT.bind(*p_69_m_aximm_AWPROT);
        p_69_m_aximm_AWPROT->set_sv_netview_offsetfromdp(13351216);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_69_m_aximm_AWREGION = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_69->m_aximm_AWREGION.bind(*p_69_m_aximm_AWREGION);
        p_69_m_aximm_AWREGION->set_sv_netview_offsetfromdp(13351272);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_69_m_aximm_AWQOS = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_69->m_aximm_AWQOS.bind(*p_69_m_aximm_AWQOS);
        p_69_m_aximm_AWQOS->set_sv_netview_offsetfromdp(13351328);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_69_m_aximm_AWUSER = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_69->m_aximm_AWUSER.bind(*p_69_m_aximm_AWUSER);
        p_69_m_aximm_AWUSER->set_sv_netview_offsetfromdp(13351384);
        xsim_sc_channel<0, bool > *p_69_m_aximm_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_69->m_aximm_WVALID.bind(*p_69_m_aximm_WVALID);
        p_69_m_aximm_WVALID->set_sv_netview_offsetfromdp(13351440);
        xsim_sc_channel<0, bool > *p_69_m_aximm_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_69->m_aximm_WREADY.bind(*p_69_m_aximm_WREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_69_m_aximm_WREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_69_m_aximm_WDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_69->m_aximm_WDATA.bind(*p_69_m_aximm_WDATA);
        p_69_m_aximm_WDATA->set_sv_netview_offsetfromdp(13351552);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_69_m_aximm_WSTRB = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_69->m_aximm_WSTRB.bind(*p_69_m_aximm_WSTRB);
        p_69_m_aximm_WSTRB->set_sv_netview_offsetfromdp(13351608);
        xsim_sc_channel<0, bool > *p_69_m_aximm_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_69->m_aximm_WLAST.bind(*p_69_m_aximm_WLAST);
        p_69_m_aximm_WLAST->set_sv_netview_offsetfromdp(13351664);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_69_m_aximm_WUSER = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_69->m_aximm_WUSER.bind(*p_69_m_aximm_WUSER);
        p_69_m_aximm_WUSER->set_sv_netview_offsetfromdp(13351720);
        xsim_sc_channel<0, bool > *p_69_m_aximm_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_69->m_aximm_ARVALID.bind(*p_69_m_aximm_ARVALID);
        p_69_m_aximm_ARVALID->set_sv_netview_offsetfromdp(13351776);
        xsim_sc_channel<0, bool > *p_69_m_aximm_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_69->m_aximm_ARREADY.bind(*p_69_m_aximm_ARREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_69_m_aximm_ARREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_69_m_aximm_ARADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_69->m_aximm_ARADDR.bind(*p_69_m_aximm_ARADDR);
        p_69_m_aximm_ARADDR->set_sv_netview_offsetfromdp(13351888);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_69_m_aximm_ARID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_69->m_aximm_ARID.bind(*p_69_m_aximm_ARID);
        p_69_m_aximm_ARID->set_sv_netview_offsetfromdp(13351944);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_69_m_aximm_ARLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_69->m_aximm_ARLEN.bind(*p_69_m_aximm_ARLEN);
        p_69_m_aximm_ARLEN->set_sv_netview_offsetfromdp(13352000);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_69_m_aximm_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_69->m_aximm_ARSIZE.bind(*p_69_m_aximm_ARSIZE);
        p_69_m_aximm_ARSIZE->set_sv_netview_offsetfromdp(13352056);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_69_m_aximm_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_69->m_aximm_ARBURST.bind(*p_69_m_aximm_ARBURST);
        p_69_m_aximm_ARBURST->set_sv_netview_offsetfromdp(13352112);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_69_m_aximm_ARLOCK = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_69->m_aximm_ARLOCK.bind(*p_69_m_aximm_ARLOCK);
        p_69_m_aximm_ARLOCK->set_sv_netview_offsetfromdp(13352168);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_69_m_aximm_ARCACHE = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_69->m_aximm_ARCACHE.bind(*p_69_m_aximm_ARCACHE);
        p_69_m_aximm_ARCACHE->set_sv_netview_offsetfromdp(13352224);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_69_m_aximm_ARPROT = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_69->m_aximm_ARPROT.bind(*p_69_m_aximm_ARPROT);
        p_69_m_aximm_ARPROT->set_sv_netview_offsetfromdp(13352280);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_69_m_aximm_ARREGION = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_69->m_aximm_ARREGION.bind(*p_69_m_aximm_ARREGION);
        p_69_m_aximm_ARREGION->set_sv_netview_offsetfromdp(13352336);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_69_m_aximm_ARQOS = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_69->m_aximm_ARQOS.bind(*p_69_m_aximm_ARQOS);
        p_69_m_aximm_ARQOS->set_sv_netview_offsetfromdp(13352392);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_69_m_aximm_ARUSER = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_69->m_aximm_ARUSER.bind(*p_69_m_aximm_ARUSER);
        p_69_m_aximm_ARUSER->set_sv_netview_offsetfromdp(13352448);
        xsim_sc_channel<0, bool > *p_69_m_aximm_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_69->m_aximm_RVALID.bind(*p_69_m_aximm_RVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_69_m_aximm_RVALID);
        xsim_sc_channel<0, bool > *p_69_m_aximm_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_69->m_aximm_RREADY.bind(*p_69_m_aximm_RREADY);
        p_69_m_aximm_RREADY->set_sv_netview_offsetfromdp(13352560);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_69_m_aximm_RDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_69->m_aximm_RDATA.bind(*p_69_m_aximm_RDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_69_m_aximm_RDATA);
        xsim_sc_channel<0, bool > *p_69_m_aximm_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_69->m_aximm_RLAST.bind(*p_69_m_aximm_RLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_69_m_aximm_RLAST);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_69_m_aximm_RID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_69->m_aximm_RID.bind(*p_69_m_aximm_RID);
        (*_glb_hdl_sc_channel_map).push_back(p_69_m_aximm_RID);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_69_m_aximm_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_69->m_aximm_RRESP.bind(*p_69_m_aximm_RRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_69_m_aximm_RRESP);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_69_m_aximm_RUSER = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_69->m_aximm_RUSER.bind(*p_69_m_aximm_RUSER);
        (*_glb_hdl_sc_channel_map).push_back(p_69_m_aximm_RUSER);
        xsim_sc_channel<0, bool > *p_69_m_aximm_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_69->m_aximm_BVALID.bind(*p_69_m_aximm_BVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_69_m_aximm_BVALID);
        xsim_sc_channel<0, bool > *p_69_m_aximm_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_69->m_aximm_BREADY.bind(*p_69_m_aximm_BREADY);
        p_69_m_aximm_BREADY->set_sv_netview_offsetfromdp(13352952);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_69_m_aximm_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_69->m_aximm_BRESP.bind(*p_69_m_aximm_BRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_69_m_aximm_BRESP);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_69_m_aximm_BID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_69->m_aximm_BID.bind(*p_69_m_aximm_BID);
        (*_glb_hdl_sc_channel_map).push_back(p_69_m_aximm_BID);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_69_m_aximm_BUSER = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_69->m_aximm_BUSER.bind(*p_69_m_aximm_BUSER);
        (*_glb_hdl_sc_channel_map).push_back(p_69_m_aximm_BUSER);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_69_s_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_69->s_axi_awaddr.bind(*p_69_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_69_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_69_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_69->s_axi_awlen.bind(*p_69_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_69_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_69_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_69->s_axi_awsize.bind(*p_69_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_69_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_69_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_69->s_axi_awburst.bind(*p_69_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_69_s_axi_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_69_s_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_69->s_axi_awlock.bind(*p_69_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_69_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_69_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_69->s_axi_awcache.bind(*p_69_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_69_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_69_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_69->s_axi_awprot.bind(*p_69_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_69_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_69_s_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_69->s_axi_awregion.bind(*p_69_s_axi_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_69_s_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_69_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_69->s_axi_awqos.bind(*p_69_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_69_s_axi_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_69_s_axi_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_69->s_axi_awuser.bind(*p_69_s_axi_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_69_s_axi_awuser);
        xsim_sc_channel<0, bool > *p_69_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_69->s_axi_awvalid.bind(*p_69_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_69_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_69_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_69->s_axi_awready.bind(*p_69_s_axi_awready);
        p_69_s_axi_awready->set_sv_netview_offsetfromdp(13353792);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_69_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_69->s_axi_wdata.bind(*p_69_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_69_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_69_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_69->s_axi_wstrb.bind(*p_69_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_69_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_69_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_69->s_axi_wlast.bind(*p_69_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_69_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_69_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_69->s_axi_wvalid.bind(*p_69_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_69_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_69_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_69->s_axi_wready.bind(*p_69_s_axi_wready);
        p_69_s_axi_wready->set_sv_netview_offsetfromdp(13354072);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_69_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_69->s_axi_bresp.bind(*p_69_s_axi_bresp);
        p_69_s_axi_bresp->set_sv_netview_offsetfromdp(13354128);
        xsim_sc_channel<0, bool > *p_69_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_69->s_axi_bvalid.bind(*p_69_s_axi_bvalid);
        p_69_s_axi_bvalid->set_sv_netview_offsetfromdp(13354184);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_69_s_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_69->s_axi_buser.bind(*p_69_s_axi_buser);
        p_69_s_axi_buser->set_sv_netview_offsetfromdp(13354240);
        xsim_sc_channel<0, bool > *p_69_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_69->s_axi_bready.bind(*p_69_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_69_s_axi_bready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_69_s_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_69->s_axi_araddr.bind(*p_69_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_69_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_69_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_69->s_axi_arlen.bind(*p_69_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_69_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_69_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_69->s_axi_arsize.bind(*p_69_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_69_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_69_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_69->s_axi_arburst.bind(*p_69_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_69_s_axi_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_69_s_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_69->s_axi_arlock.bind(*p_69_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_69_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_69_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_69->s_axi_arcache.bind(*p_69_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_69_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_69_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_69->s_axi_arprot.bind(*p_69_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_69_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_69_s_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_69->s_axi_arregion.bind(*p_69_s_axi_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_69_s_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_69_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_69->s_axi_arqos.bind(*p_69_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_69_s_axi_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_69_s_axi_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_69->s_axi_aruser.bind(*p_69_s_axi_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_69_s_axi_aruser);
        xsim_sc_channel<0, bool > *p_69_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_69->s_axi_arvalid.bind(*p_69_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_69_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_69_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_69->s_axi_arready.bind(*p_69_s_axi_arready);
        p_69_s_axi_arready->set_sv_netview_offsetfromdp(13354968);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_69_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_69->s_axi_rdata.bind(*p_69_s_axi_rdata);
        p_69_s_axi_rdata->set_sv_netview_offsetfromdp(13355024);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_69_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_69->s_axi_rresp.bind(*p_69_s_axi_rresp);
        p_69_s_axi_rresp->set_sv_netview_offsetfromdp(13355080);
        xsim_sc_channel<0, bool > *p_69_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_69->s_axi_rlast.bind(*p_69_s_axi_rlast);
        p_69_s_axi_rlast->set_sv_netview_offsetfromdp(13355136);
        xsim_sc_channel<0, bool > *p_69_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_69->s_axi_rvalid.bind(*p_69_s_axi_rvalid);
        p_69_s_axi_rvalid->set_sv_netview_offsetfromdp(13355192);
        xsim_sc_channel<0, bool > *p_69_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_69->s_axi_rready.bind(*p_69_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_69_s_axi_rready);
        sc_inst_70 = new pfm_top_sim_qdma_0_0(".pfm_top_wrapper.pfm_top_i.static_region.sim_qdma_0");
        sc_inst_70->xsim_set_dbg_index(264);
        xsim_sc_channel<0, bool > *p_70_m_aximm_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_70->m_aximm_aclk.bind(*p_70_m_aximm_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_70_m_aximm_aclk);
        xsim_sc_channel<0, bool > *p_70_m_aximm_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_70->m_aximm_aresetn.bind(*p_70_m_aximm_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_70_m_aximm_aresetn);
        xsim_sc_channel<0, bool > *p_70_m_axictrl_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_70->m_axictrl_aclk.bind(*p_70_m_axictrl_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_70_m_axictrl_aclk);
        xsim_sc_channel<0, bool > *p_70_m_axictrl_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_70->m_axictrl_aresetn.bind(*p_70_m_axictrl_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_70_m_axictrl_aresetn);
        xsim_sc_channel<0, bool > *p_70_s_aximm_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_70->s_aximm_aclk.bind(*p_70_s_aximm_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_70_s_aximm_aclk);
        xsim_sc_channel<0, bool > *p_70_s_aximm_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_70->s_aximm_aresetn.bind(*p_70_s_aximm_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_70_s_aximm_aresetn);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_70_m_axictrl_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_70->m_axictrl_awaddr.bind(*p_70_m_axictrl_awaddr);
        p_70_m_axictrl_awaddr->set_sv_netview_offsetfromdp(13355688);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_70_m_axictrl_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_70->m_axictrl_awprot.bind(*p_70_m_axictrl_awprot);
        p_70_m_axictrl_awprot->set_sv_netview_offsetfromdp(13355744);
        xsim_sc_channel<0, bool > *p_70_m_axictrl_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_70->m_axictrl_awvalid.bind(*p_70_m_axictrl_awvalid);
        p_70_m_axictrl_awvalid->set_sv_netview_offsetfromdp(13355800);
        xsim_sc_channel<0, bool > *p_70_m_axictrl_awready = new xsim_sc_channel<0, bool >();
        sc_inst_70->m_axictrl_awready.bind(*p_70_m_axictrl_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_70_m_axictrl_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_70_m_axictrl_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_70->m_axictrl_wdata.bind(*p_70_m_axictrl_wdata);
        p_70_m_axictrl_wdata->set_sv_netview_offsetfromdp(13355912);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_70_m_axictrl_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_70->m_axictrl_wstrb.bind(*p_70_m_axictrl_wstrb);
        p_70_m_axictrl_wstrb->set_sv_netview_offsetfromdp(13355968);
        xsim_sc_channel<0, bool > *p_70_m_axictrl_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_70->m_axictrl_wvalid.bind(*p_70_m_axictrl_wvalid);
        p_70_m_axictrl_wvalid->set_sv_netview_offsetfromdp(13356024);
        xsim_sc_channel<0, bool > *p_70_m_axictrl_wready = new xsim_sc_channel<0, bool >();
        sc_inst_70->m_axictrl_wready.bind(*p_70_m_axictrl_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_70_m_axictrl_wready);
        xsim_sc_channel<0, bool > *p_70_m_axictrl_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_70->m_axictrl_bvalid.bind(*p_70_m_axictrl_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_70_m_axictrl_bvalid);
        xsim_sc_channel<0, bool > *p_70_m_axictrl_bready = new xsim_sc_channel<0, bool >();
        sc_inst_70->m_axictrl_bready.bind(*p_70_m_axictrl_bready);
        p_70_m_axictrl_bready->set_sv_netview_offsetfromdp(13356192);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_70_m_axictrl_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_70->m_axictrl_bresp.bind(*p_70_m_axictrl_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_70_m_axictrl_bresp);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_70_m_axictrl_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_70->m_axictrl_araddr.bind(*p_70_m_axictrl_araddr);
        p_70_m_axictrl_araddr->set_sv_netview_offsetfromdp(13356304);
        xsim_sc_channel<0, bool > *p_70_m_axictrl_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_70->m_axictrl_arvalid.bind(*p_70_m_axictrl_arvalid);
        p_70_m_axictrl_arvalid->set_sv_netview_offsetfromdp(13356360);
        xsim_sc_channel<0, bool > *p_70_m_axictrl_arready = new xsim_sc_channel<0, bool >();
        sc_inst_70->m_axictrl_arready.bind(*p_70_m_axictrl_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_70_m_axictrl_arready);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_70_m_axictrl_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_70->m_axictrl_arprot.bind(*p_70_m_axictrl_arprot);
        p_70_m_axictrl_arprot->set_sv_netview_offsetfromdp(13356472);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_70_m_axictrl_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_70->m_axictrl_rdata.bind(*p_70_m_axictrl_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_70_m_axictrl_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_70_m_axictrl_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_70->m_axictrl_rresp.bind(*p_70_m_axictrl_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_70_m_axictrl_rresp);
        xsim_sc_channel<0, bool > *p_70_m_axictrl_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_70->m_axictrl_rvalid.bind(*p_70_m_axictrl_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_70_m_axictrl_rvalid);
        xsim_sc_channel<0, bool > *p_70_m_axictrl_rready = new xsim_sc_channel<0, bool >();
        sc_inst_70->m_axictrl_rready.bind(*p_70_m_axictrl_rready);
        p_70_m_axictrl_rready->set_sv_netview_offsetfromdp(13356696);
        xsim_sc_channel<0, bool > *p_70_m_aximm_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_70->m_aximm_AWVALID.bind(*p_70_m_aximm_AWVALID);
        p_70_m_aximm_AWVALID->set_sv_netview_offsetfromdp(13356752);
        xsim_sc_channel<0, bool > *p_70_m_aximm_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_70->m_aximm_AWREADY.bind(*p_70_m_aximm_AWREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_70_m_aximm_AWREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_70_m_aximm_AWADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_70->m_aximm_AWADDR.bind(*p_70_m_aximm_AWADDR);
        p_70_m_aximm_AWADDR->set_sv_netview_offsetfromdp(13356864);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_70_m_aximm_AWID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_70->m_aximm_AWID.bind(*p_70_m_aximm_AWID);
        p_70_m_aximm_AWID->set_sv_netview_offsetfromdp(13356920);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_70_m_aximm_AWLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_70->m_aximm_AWLEN.bind(*p_70_m_aximm_AWLEN);
        p_70_m_aximm_AWLEN->set_sv_netview_offsetfromdp(13356976);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_70_m_aximm_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_70->m_aximm_AWSIZE.bind(*p_70_m_aximm_AWSIZE);
        p_70_m_aximm_AWSIZE->set_sv_netview_offsetfromdp(13357032);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_70_m_aximm_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_70->m_aximm_AWBURST.bind(*p_70_m_aximm_AWBURST);
        p_70_m_aximm_AWBURST->set_sv_netview_offsetfromdp(13357088);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_70_m_aximm_AWLOCK = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_70->m_aximm_AWLOCK.bind(*p_70_m_aximm_AWLOCK);
        p_70_m_aximm_AWLOCK->set_sv_netview_offsetfromdp(13357144);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_70_m_aximm_AWCACHE = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_70->m_aximm_AWCACHE.bind(*p_70_m_aximm_AWCACHE);
        p_70_m_aximm_AWCACHE->set_sv_netview_offsetfromdp(13357200);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_70_m_aximm_AWPROT = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_70->m_aximm_AWPROT.bind(*p_70_m_aximm_AWPROT);
        p_70_m_aximm_AWPROT->set_sv_netview_offsetfromdp(13357256);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_70_m_aximm_AWREGION = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_70->m_aximm_AWREGION.bind(*p_70_m_aximm_AWREGION);
        p_70_m_aximm_AWREGION->set_sv_netview_offsetfromdp(13357312);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_70_m_aximm_AWQOS = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_70->m_aximm_AWQOS.bind(*p_70_m_aximm_AWQOS);
        p_70_m_aximm_AWQOS->set_sv_netview_offsetfromdp(13357368);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_70_m_aximm_AWUSER = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_70->m_aximm_AWUSER.bind(*p_70_m_aximm_AWUSER);
        p_70_m_aximm_AWUSER->set_sv_netview_offsetfromdp(13357424);
        xsim_sc_channel<0, bool > *p_70_m_aximm_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_70->m_aximm_WVALID.bind(*p_70_m_aximm_WVALID);
        p_70_m_aximm_WVALID->set_sv_netview_offsetfromdp(13357480);
        xsim_sc_channel<0, bool > *p_70_m_aximm_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_70->m_aximm_WREADY.bind(*p_70_m_aximm_WREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_70_m_aximm_WREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_70_m_aximm_WDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_70->m_aximm_WDATA.bind(*p_70_m_aximm_WDATA);
        p_70_m_aximm_WDATA->set_sv_netview_offsetfromdp(13357592);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_70_m_aximm_WSTRB = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_70->m_aximm_WSTRB.bind(*p_70_m_aximm_WSTRB);
        p_70_m_aximm_WSTRB->set_sv_netview_offsetfromdp(13357648);
        xsim_sc_channel<0, bool > *p_70_m_aximm_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_70->m_aximm_WLAST.bind(*p_70_m_aximm_WLAST);
        p_70_m_aximm_WLAST->set_sv_netview_offsetfromdp(13357704);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_70_m_aximm_WUSER = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_70->m_aximm_WUSER.bind(*p_70_m_aximm_WUSER);
        p_70_m_aximm_WUSER->set_sv_netview_offsetfromdp(13357760);
        xsim_sc_channel<0, bool > *p_70_m_aximm_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_70->m_aximm_ARVALID.bind(*p_70_m_aximm_ARVALID);
        p_70_m_aximm_ARVALID->set_sv_netview_offsetfromdp(13357816);
        xsim_sc_channel<0, bool > *p_70_m_aximm_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_70->m_aximm_ARREADY.bind(*p_70_m_aximm_ARREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_70_m_aximm_ARREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_70_m_aximm_ARADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_70->m_aximm_ARADDR.bind(*p_70_m_aximm_ARADDR);
        p_70_m_aximm_ARADDR->set_sv_netview_offsetfromdp(13357928);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_70_m_aximm_ARID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_70->m_aximm_ARID.bind(*p_70_m_aximm_ARID);
        p_70_m_aximm_ARID->set_sv_netview_offsetfromdp(13357984);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_70_m_aximm_ARLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_70->m_aximm_ARLEN.bind(*p_70_m_aximm_ARLEN);
        p_70_m_aximm_ARLEN->set_sv_netview_offsetfromdp(13358040);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_70_m_aximm_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_70->m_aximm_ARSIZE.bind(*p_70_m_aximm_ARSIZE);
        p_70_m_aximm_ARSIZE->set_sv_netview_offsetfromdp(13358096);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_70_m_aximm_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_70->m_aximm_ARBURST.bind(*p_70_m_aximm_ARBURST);
        p_70_m_aximm_ARBURST->set_sv_netview_offsetfromdp(13358152);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_70_m_aximm_ARLOCK = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_70->m_aximm_ARLOCK.bind(*p_70_m_aximm_ARLOCK);
        p_70_m_aximm_ARLOCK->set_sv_netview_offsetfromdp(13358208);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_70_m_aximm_ARCACHE = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_70->m_aximm_ARCACHE.bind(*p_70_m_aximm_ARCACHE);
        p_70_m_aximm_ARCACHE->set_sv_netview_offsetfromdp(13358264);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_70_m_aximm_ARPROT = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_70->m_aximm_ARPROT.bind(*p_70_m_aximm_ARPROT);
        p_70_m_aximm_ARPROT->set_sv_netview_offsetfromdp(13358320);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_70_m_aximm_ARREGION = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_70->m_aximm_ARREGION.bind(*p_70_m_aximm_ARREGION);
        p_70_m_aximm_ARREGION->set_sv_netview_offsetfromdp(13358376);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_70_m_aximm_ARQOS = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_70->m_aximm_ARQOS.bind(*p_70_m_aximm_ARQOS);
        p_70_m_aximm_ARQOS->set_sv_netview_offsetfromdp(13358432);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_70_m_aximm_ARUSER = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_70->m_aximm_ARUSER.bind(*p_70_m_aximm_ARUSER);
        p_70_m_aximm_ARUSER->set_sv_netview_offsetfromdp(13358488);
        xsim_sc_channel<0, bool > *p_70_m_aximm_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_70->m_aximm_RVALID.bind(*p_70_m_aximm_RVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_70_m_aximm_RVALID);
        xsim_sc_channel<0, bool > *p_70_m_aximm_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_70->m_aximm_RREADY.bind(*p_70_m_aximm_RREADY);
        p_70_m_aximm_RREADY->set_sv_netview_offsetfromdp(13358600);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_70_m_aximm_RDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_70->m_aximm_RDATA.bind(*p_70_m_aximm_RDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_70_m_aximm_RDATA);
        xsim_sc_channel<0, bool > *p_70_m_aximm_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_70->m_aximm_RLAST.bind(*p_70_m_aximm_RLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_70_m_aximm_RLAST);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_70_m_aximm_RID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_70->m_aximm_RID.bind(*p_70_m_aximm_RID);
        (*_glb_hdl_sc_channel_map).push_back(p_70_m_aximm_RID);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_70_m_aximm_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_70->m_aximm_RRESP.bind(*p_70_m_aximm_RRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_70_m_aximm_RRESP);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_70_m_aximm_RUSER = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_70->m_aximm_RUSER.bind(*p_70_m_aximm_RUSER);
        (*_glb_hdl_sc_channel_map).push_back(p_70_m_aximm_RUSER);
        xsim_sc_channel<0, bool > *p_70_m_aximm_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_70->m_aximm_BVALID.bind(*p_70_m_aximm_BVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_70_m_aximm_BVALID);
        xsim_sc_channel<0, bool > *p_70_m_aximm_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_70->m_aximm_BREADY.bind(*p_70_m_aximm_BREADY);
        p_70_m_aximm_BREADY->set_sv_netview_offsetfromdp(13358992);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_70_m_aximm_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_70->m_aximm_BRESP.bind(*p_70_m_aximm_BRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_70_m_aximm_BRESP);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_70_m_aximm_BID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_70->m_aximm_BID.bind(*p_70_m_aximm_BID);
        (*_glb_hdl_sc_channel_map).push_back(p_70_m_aximm_BID);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_70_m_aximm_BUSER = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_70->m_aximm_BUSER.bind(*p_70_m_aximm_BUSER);
        (*_glb_hdl_sc_channel_map).push_back(p_70_m_aximm_BUSER);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_70_s_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_70->s_axi_awaddr.bind(*p_70_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_70_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_70_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_70->s_axi_awlen.bind(*p_70_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_70_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_70_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_70->s_axi_awsize.bind(*p_70_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_70_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_70_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_70->s_axi_awburst.bind(*p_70_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_70_s_axi_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_70_s_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_70->s_axi_awlock.bind(*p_70_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_70_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_70_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_70->s_axi_awcache.bind(*p_70_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_70_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_70_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_70->s_axi_awprot.bind(*p_70_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_70_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_70_s_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_70->s_axi_awregion.bind(*p_70_s_axi_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_70_s_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_70_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_70->s_axi_awqos.bind(*p_70_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_70_s_axi_awqos);
        xsim_sc_channel<0, bool > *p_70_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_70->s_axi_awvalid.bind(*p_70_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_70_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_70_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_70->s_axi_awready.bind(*p_70_s_axi_awready);
        p_70_s_axi_awready->set_sv_netview_offsetfromdp(13359776);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_70_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_70->s_axi_wdata.bind(*p_70_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_70_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_70_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_70->s_axi_wstrb.bind(*p_70_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_70_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_70_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_70->s_axi_wlast.bind(*p_70_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_70_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_70_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_70->s_axi_wvalid.bind(*p_70_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_70_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_70_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_70->s_axi_wready.bind(*p_70_s_axi_wready);
        p_70_s_axi_wready->set_sv_netview_offsetfromdp(13360056);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_70_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_70->s_axi_bresp.bind(*p_70_s_axi_bresp);
        p_70_s_axi_bresp->set_sv_netview_offsetfromdp(13360112);
        xsim_sc_channel<0, bool > *p_70_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_70->s_axi_bvalid.bind(*p_70_s_axi_bvalid);
        p_70_s_axi_bvalid->set_sv_netview_offsetfromdp(13360168);
        xsim_sc_channel<0, bool > *p_70_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_70->s_axi_bready.bind(*p_70_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_70_s_axi_bready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_70_s_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_70->s_axi_araddr.bind(*p_70_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_70_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_70_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_70->s_axi_arlen.bind(*p_70_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_70_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_70_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_70->s_axi_arsize.bind(*p_70_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_70_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_70_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_70->s_axi_arburst.bind(*p_70_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_70_s_axi_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_70_s_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_70->s_axi_arlock.bind(*p_70_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_70_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_70_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_70->s_axi_arcache.bind(*p_70_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_70_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_70_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_70->s_axi_arprot.bind(*p_70_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_70_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_70_s_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_70->s_axi_arregion.bind(*p_70_s_axi_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_70_s_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_70_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_70->s_axi_arqos.bind(*p_70_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_70_s_axi_arqos);
        xsim_sc_channel<0, bool > *p_70_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_70->s_axi_arvalid.bind(*p_70_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_70_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_70_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_70->s_axi_arready.bind(*p_70_s_axi_arready);
        p_70_s_axi_arready->set_sv_netview_offsetfromdp(13360840);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_70_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_70->s_axi_rdata.bind(*p_70_s_axi_rdata);
        p_70_s_axi_rdata->set_sv_netview_offsetfromdp(13360896);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_70_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_70->s_axi_rresp.bind(*p_70_s_axi_rresp);
        p_70_s_axi_rresp->set_sv_netview_offsetfromdp(13360952);
        xsim_sc_channel<0, bool > *p_70_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_70->s_axi_rlast.bind(*p_70_s_axi_rlast);
        p_70_s_axi_rlast->set_sv_netview_offsetfromdp(13361008);
        xsim_sc_channel<0, bool > *p_70_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_70->s_axi_rvalid.bind(*p_70_s_axi_rvalid);
        p_70_s_axi_rvalid->set_sv_netview_offsetfromdp(13361064);
        xsim_sc_channel<0, bool > *p_70_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_70->s_axi_rready.bind(*p_70_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_70_s_axi_rready);
        xsim_sc_channel<16, sc_dt::sc_bv<16> > *p_70_usr_irq_req = new xsim_sc_channel<16, sc_dt::sc_bv<16> >();
        sc_inst_70->usr_irq_req.bind(*p_70_usr_irq_req);
        (*_glb_hdl_sc_channel_map).push_back(p_70_usr_irq_req);
        xsim_sc_channel<16, sc_dt::sc_bv<16> > *p_70_usr_irq_ack = new xsim_sc_channel<16, sc_dt::sc_bv<16> >();
        sc_inst_70->usr_irq_ack.bind(*p_70_usr_irq_ack);
        p_70_usr_irq_ack->set_sv_netview_offsetfromdp(13361232);
        sc_inst_71 = new pfm_top_smartconnect_0_0(".pfm_top_wrapper.pfm_top_i.static_region.smartconnect_0");
        sc_inst_71->xsim_set_dbg_index(265);
        xsim_sc_channel<0, bool > *p_71_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_71->aclk.bind(*p_71_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_71_aclk);
        xsim_sc_channel<0, bool > *p_71_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_71->aresetn.bind(*p_71_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_71_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_71_S00_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_71->S00_AXI_awid.bind(*p_71_S00_AXI_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_71_S00_AXI_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_71_S00_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_71->S00_AXI_awaddr.bind(*p_71_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_71_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_71_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_71->S00_AXI_awlen.bind(*p_71_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_71_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_71_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_71->S00_AXI_awsize.bind(*p_71_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_71_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_71_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_71->S00_AXI_awburst.bind(*p_71_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_71_S00_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_71_S00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_71->S00_AXI_awlock.bind(*p_71_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_71_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_71_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_71->S00_AXI_awcache.bind(*p_71_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_71_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_71_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_71->S00_AXI_awprot.bind(*p_71_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_71_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_71_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_71->S00_AXI_awqos.bind(*p_71_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_71_S00_AXI_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_71_S00_AXI_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_71->S00_AXI_awuser.bind(*p_71_S00_AXI_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_71_S00_AXI_awuser);
        xsim_sc_channel<0, bool > *p_71_S00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_71->S00_AXI_awvalid.bind(*p_71_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_71_S00_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_71_S00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_71->S00_AXI_awready.bind(*p_71_S00_AXI_awready);
        p_71_S00_AXI_awready->set_sv_netview_offsetfromdp(13362064);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_71_S00_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_71->S00_AXI_wdata.bind(*p_71_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_71_S00_AXI_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_71_S00_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_71->S00_AXI_wstrb.bind(*p_71_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_71_S00_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_71_S00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_71->S00_AXI_wlast.bind(*p_71_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_71_S00_AXI_wlast);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_71_S00_AXI_wuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_71->S00_AXI_wuser.bind(*p_71_S00_AXI_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_71_S00_AXI_wuser);
        xsim_sc_channel<0, bool > *p_71_S00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_71->S00_AXI_wvalid.bind(*p_71_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_71_S00_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_71_S00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_71->S00_AXI_wready.bind(*p_71_S00_AXI_wready);
        p_71_S00_AXI_wready->set_sv_netview_offsetfromdp(13362400);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_71_S00_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_71->S00_AXI_bid.bind(*p_71_S00_AXI_bid);
        p_71_S00_AXI_bid->set_sv_netview_offsetfromdp(13362456);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_71_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_71->S00_AXI_bresp.bind(*p_71_S00_AXI_bresp);
        p_71_S00_AXI_bresp->set_sv_netview_offsetfromdp(13362512);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_71_S00_AXI_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_71->S00_AXI_buser.bind(*p_71_S00_AXI_buser);
        p_71_S00_AXI_buser->set_sv_netview_offsetfromdp(13362568);
        xsim_sc_channel<0, bool > *p_71_S00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_71->S00_AXI_bvalid.bind(*p_71_S00_AXI_bvalid);
        p_71_S00_AXI_bvalid->set_sv_netview_offsetfromdp(13362624);
        xsim_sc_channel<0, bool > *p_71_S00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_71->S00_AXI_bready.bind(*p_71_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_71_S00_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_71_S00_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_71->S00_AXI_arid.bind(*p_71_S00_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_71_S00_AXI_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_71_S00_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_71->S00_AXI_araddr.bind(*p_71_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_71_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_71_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_71->S00_AXI_arlen.bind(*p_71_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_71_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_71_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_71->S00_AXI_arsize.bind(*p_71_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_71_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_71_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_71->S00_AXI_arburst.bind(*p_71_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_71_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_71_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_71->S00_AXI_arlock.bind(*p_71_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_71_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_71_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_71->S00_AXI_arcache.bind(*p_71_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_71_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_71_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_71->S00_AXI_arprot.bind(*p_71_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_71_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_71_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_71->S00_AXI_arqos.bind(*p_71_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_71_S00_AXI_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_71_S00_AXI_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_71->S00_AXI_aruser.bind(*p_71_S00_AXI_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_71_S00_AXI_aruser);
        xsim_sc_channel<0, bool > *p_71_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_71->S00_AXI_arvalid.bind(*p_71_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_71_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_71_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_71->S00_AXI_arready.bind(*p_71_S00_AXI_arready);
        p_71_S00_AXI_arready->set_sv_netview_offsetfromdp(13363352);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_71_S00_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_71->S00_AXI_rid.bind(*p_71_S00_AXI_rid);
        p_71_S00_AXI_rid->set_sv_netview_offsetfromdp(13363408);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_71_S00_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_71->S00_AXI_rdata.bind(*p_71_S00_AXI_rdata);
        p_71_S00_AXI_rdata->set_sv_netview_offsetfromdp(13363464);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_71_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_71->S00_AXI_rresp.bind(*p_71_S00_AXI_rresp);
        p_71_S00_AXI_rresp->set_sv_netview_offsetfromdp(13363520);
        xsim_sc_channel<0, bool > *p_71_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_71->S00_AXI_rlast.bind(*p_71_S00_AXI_rlast);
        p_71_S00_AXI_rlast->set_sv_netview_offsetfromdp(13363576);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_71_S00_AXI_ruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_71->S00_AXI_ruser.bind(*p_71_S00_AXI_ruser);
        p_71_S00_AXI_ruser->set_sv_netview_offsetfromdp(13363632);
        xsim_sc_channel<0, bool > *p_71_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_71->S00_AXI_rvalid.bind(*p_71_S00_AXI_rvalid);
        p_71_S00_AXI_rvalid->set_sv_netview_offsetfromdp(13363688);
        xsim_sc_channel<0, bool > *p_71_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_71->S00_AXI_rready.bind(*p_71_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_71_S00_AXI_rready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_71_M00_AXI_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_71->M00_AXI_awaddr.bind(*p_71_M00_AXI_awaddr);
        p_71_M00_AXI_awaddr->set_sv_netview_offsetfromdp(13363800);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_71_M00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_71->M00_AXI_awlen.bind(*p_71_M00_AXI_awlen);
        p_71_M00_AXI_awlen->set_sv_netview_offsetfromdp(13363856);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_71_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_71->M00_AXI_awsize.bind(*p_71_M00_AXI_awsize);
        p_71_M00_AXI_awsize->set_sv_netview_offsetfromdp(13363912);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_71_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_71->M00_AXI_awburst.bind(*p_71_M00_AXI_awburst);
        p_71_M00_AXI_awburst->set_sv_netview_offsetfromdp(13363968);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_71_M00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_71->M00_AXI_awlock.bind(*p_71_M00_AXI_awlock);
        p_71_M00_AXI_awlock->set_sv_netview_offsetfromdp(13364024);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_71_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_71->M00_AXI_awcache.bind(*p_71_M00_AXI_awcache);
        p_71_M00_AXI_awcache->set_sv_netview_offsetfromdp(13364080);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_71_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_71->M00_AXI_awprot.bind(*p_71_M00_AXI_awprot);
        p_71_M00_AXI_awprot->set_sv_netview_offsetfromdp(13364136);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_71_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_71->M00_AXI_awqos.bind(*p_71_M00_AXI_awqos);
        p_71_M00_AXI_awqos->set_sv_netview_offsetfromdp(13364192);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_71_M00_AXI_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_71->M00_AXI_awuser.bind(*p_71_M00_AXI_awuser);
        p_71_M00_AXI_awuser->set_sv_netview_offsetfromdp(13364248);
        xsim_sc_channel<0, bool > *p_71_M00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_71->M00_AXI_awvalid.bind(*p_71_M00_AXI_awvalid);
        p_71_M00_AXI_awvalid->set_sv_netview_offsetfromdp(13364304);
        xsim_sc_channel<0, bool > *p_71_M00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_71->M00_AXI_awready.bind(*p_71_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_71_M00_AXI_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_71_M00_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_71->M00_AXI_wdata.bind(*p_71_M00_AXI_wdata);
        p_71_M00_AXI_wdata->set_sv_netview_offsetfromdp(13364416);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_71_M00_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_71->M00_AXI_wstrb.bind(*p_71_M00_AXI_wstrb);
        p_71_M00_AXI_wstrb->set_sv_netview_offsetfromdp(13364472);
        xsim_sc_channel<0, bool > *p_71_M00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_71->M00_AXI_wlast.bind(*p_71_M00_AXI_wlast);
        p_71_M00_AXI_wlast->set_sv_netview_offsetfromdp(13364528);
        xsim_sc_channel<0, bool > *p_71_M00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_71->M00_AXI_wvalid.bind(*p_71_M00_AXI_wvalid);
        p_71_M00_AXI_wvalid->set_sv_netview_offsetfromdp(13364584);
        xsim_sc_channel<0, bool > *p_71_M00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_71->M00_AXI_wready.bind(*p_71_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_71_M00_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_71_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_71->M00_AXI_bresp.bind(*p_71_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_71_M00_AXI_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_71_M00_AXI_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_71->M00_AXI_buser.bind(*p_71_M00_AXI_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_71_M00_AXI_buser);
        xsim_sc_channel<0, bool > *p_71_M00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_71->M00_AXI_bvalid.bind(*p_71_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_71_M00_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_71_M00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_71->M00_AXI_bready.bind(*p_71_M00_AXI_bready);
        p_71_M00_AXI_bready->set_sv_netview_offsetfromdp(13364864);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_71_M00_AXI_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_71->M00_AXI_araddr.bind(*p_71_M00_AXI_araddr);
        p_71_M00_AXI_araddr->set_sv_netview_offsetfromdp(13364920);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_71_M00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_71->M00_AXI_arlen.bind(*p_71_M00_AXI_arlen);
        p_71_M00_AXI_arlen->set_sv_netview_offsetfromdp(13364976);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_71_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_71->M00_AXI_arsize.bind(*p_71_M00_AXI_arsize);
        p_71_M00_AXI_arsize->set_sv_netview_offsetfromdp(13365032);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_71_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_71->M00_AXI_arburst.bind(*p_71_M00_AXI_arburst);
        p_71_M00_AXI_arburst->set_sv_netview_offsetfromdp(13365088);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_71_M00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_71->M00_AXI_arlock.bind(*p_71_M00_AXI_arlock);
        p_71_M00_AXI_arlock->set_sv_netview_offsetfromdp(13365144);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_71_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_71->M00_AXI_arcache.bind(*p_71_M00_AXI_arcache);
        p_71_M00_AXI_arcache->set_sv_netview_offsetfromdp(13365200);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_71_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_71->M00_AXI_arprot.bind(*p_71_M00_AXI_arprot);
        p_71_M00_AXI_arprot->set_sv_netview_offsetfromdp(13365256);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_71_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_71->M00_AXI_arqos.bind(*p_71_M00_AXI_arqos);
        p_71_M00_AXI_arqos->set_sv_netview_offsetfromdp(13365312);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_71_M00_AXI_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_71->M00_AXI_aruser.bind(*p_71_M00_AXI_aruser);
        p_71_M00_AXI_aruser->set_sv_netview_offsetfromdp(13365368);
        xsim_sc_channel<0, bool > *p_71_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_71->M00_AXI_arvalid.bind(*p_71_M00_AXI_arvalid);
        p_71_M00_AXI_arvalid->set_sv_netview_offsetfromdp(13365424);
        xsim_sc_channel<0, bool > *p_71_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_71->M00_AXI_arready.bind(*p_71_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_71_M00_AXI_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_71_M00_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_71->M00_AXI_rdata.bind(*p_71_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_71_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_71_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_71->M00_AXI_rresp.bind(*p_71_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_71_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_71_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_71->M00_AXI_rlast.bind(*p_71_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_71_M00_AXI_rlast);
        xsim_sc_channel<0, bool > *p_71_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_71->M00_AXI_rvalid.bind(*p_71_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_71_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_71_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_71->M00_AXI_rready.bind(*p_71_M00_AXI_rready);
        p_71_M00_AXI_rready->set_sv_netview_offsetfromdp(13365760);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_71_M01_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_71->M01_AXI_awaddr.bind(*p_71_M01_AXI_awaddr);
        p_71_M01_AXI_awaddr->set_sv_netview_offsetfromdp(13365816);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_71_M01_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_71->M01_AXI_awlen.bind(*p_71_M01_AXI_awlen);
        p_71_M01_AXI_awlen->set_sv_netview_offsetfromdp(13365872);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_71_M01_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_71->M01_AXI_awsize.bind(*p_71_M01_AXI_awsize);
        p_71_M01_AXI_awsize->set_sv_netview_offsetfromdp(13365928);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_71_M01_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_71->M01_AXI_awburst.bind(*p_71_M01_AXI_awburst);
        p_71_M01_AXI_awburst->set_sv_netview_offsetfromdp(13365984);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_71_M01_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_71->M01_AXI_awlock.bind(*p_71_M01_AXI_awlock);
        p_71_M01_AXI_awlock->set_sv_netview_offsetfromdp(13366040);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_71_M01_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_71->M01_AXI_awcache.bind(*p_71_M01_AXI_awcache);
        p_71_M01_AXI_awcache->set_sv_netview_offsetfromdp(13366096);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_71_M01_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_71->M01_AXI_awprot.bind(*p_71_M01_AXI_awprot);
        p_71_M01_AXI_awprot->set_sv_netview_offsetfromdp(13366152);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_71_M01_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_71->M01_AXI_awqos.bind(*p_71_M01_AXI_awqos);
        p_71_M01_AXI_awqos->set_sv_netview_offsetfromdp(13366208);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_71_M01_AXI_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_71->M01_AXI_awuser.bind(*p_71_M01_AXI_awuser);
        p_71_M01_AXI_awuser->set_sv_netview_offsetfromdp(13366264);
        xsim_sc_channel<0, bool > *p_71_M01_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_71->M01_AXI_awvalid.bind(*p_71_M01_AXI_awvalid);
        p_71_M01_AXI_awvalid->set_sv_netview_offsetfromdp(13366320);
        xsim_sc_channel<0, bool > *p_71_M01_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_71->M01_AXI_awready.bind(*p_71_M01_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_71_M01_AXI_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_71_M01_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_71->M01_AXI_wdata.bind(*p_71_M01_AXI_wdata);
        p_71_M01_AXI_wdata->set_sv_netview_offsetfromdp(13366432);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_71_M01_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_71->M01_AXI_wstrb.bind(*p_71_M01_AXI_wstrb);
        p_71_M01_AXI_wstrb->set_sv_netview_offsetfromdp(13366488);
        xsim_sc_channel<0, bool > *p_71_M01_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_71->M01_AXI_wlast.bind(*p_71_M01_AXI_wlast);
        p_71_M01_AXI_wlast->set_sv_netview_offsetfromdp(13366544);
        xsim_sc_channel<0, bool > *p_71_M01_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_71->M01_AXI_wvalid.bind(*p_71_M01_AXI_wvalid);
        p_71_M01_AXI_wvalid->set_sv_netview_offsetfromdp(13366600);
        xsim_sc_channel<0, bool > *p_71_M01_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_71->M01_AXI_wready.bind(*p_71_M01_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_71_M01_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_71_M01_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_71->M01_AXI_bresp.bind(*p_71_M01_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_71_M01_AXI_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_71_M01_AXI_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_71->M01_AXI_buser.bind(*p_71_M01_AXI_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_71_M01_AXI_buser);
        xsim_sc_channel<0, bool > *p_71_M01_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_71->M01_AXI_bvalid.bind(*p_71_M01_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_71_M01_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_71_M01_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_71->M01_AXI_bready.bind(*p_71_M01_AXI_bready);
        p_71_M01_AXI_bready->set_sv_netview_offsetfromdp(13366880);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_71_M01_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_71->M01_AXI_araddr.bind(*p_71_M01_AXI_araddr);
        p_71_M01_AXI_araddr->set_sv_netview_offsetfromdp(13366936);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_71_M01_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_71->M01_AXI_arlen.bind(*p_71_M01_AXI_arlen);
        p_71_M01_AXI_arlen->set_sv_netview_offsetfromdp(13366992);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_71_M01_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_71->M01_AXI_arsize.bind(*p_71_M01_AXI_arsize);
        p_71_M01_AXI_arsize->set_sv_netview_offsetfromdp(13367048);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_71_M01_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_71->M01_AXI_arburst.bind(*p_71_M01_AXI_arburst);
        p_71_M01_AXI_arburst->set_sv_netview_offsetfromdp(13367104);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_71_M01_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_71->M01_AXI_arlock.bind(*p_71_M01_AXI_arlock);
        p_71_M01_AXI_arlock->set_sv_netview_offsetfromdp(13367160);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_71_M01_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_71->M01_AXI_arcache.bind(*p_71_M01_AXI_arcache);
        p_71_M01_AXI_arcache->set_sv_netview_offsetfromdp(13367216);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_71_M01_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_71->M01_AXI_arprot.bind(*p_71_M01_AXI_arprot);
        p_71_M01_AXI_arprot->set_sv_netview_offsetfromdp(13367272);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_71_M01_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_71->M01_AXI_arqos.bind(*p_71_M01_AXI_arqos);
        p_71_M01_AXI_arqos->set_sv_netview_offsetfromdp(13367328);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_71_M01_AXI_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_71->M01_AXI_aruser.bind(*p_71_M01_AXI_aruser);
        p_71_M01_AXI_aruser->set_sv_netview_offsetfromdp(13367384);
        xsim_sc_channel<0, bool > *p_71_M01_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_71->M01_AXI_arvalid.bind(*p_71_M01_AXI_arvalid);
        p_71_M01_AXI_arvalid->set_sv_netview_offsetfromdp(13367440);
        xsim_sc_channel<0, bool > *p_71_M01_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_71->M01_AXI_arready.bind(*p_71_M01_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_71_M01_AXI_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_71_M01_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_71->M01_AXI_rdata.bind(*p_71_M01_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_71_M01_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_71_M01_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_71->M01_AXI_rresp.bind(*p_71_M01_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_71_M01_AXI_rresp);
        xsim_sc_channel<0, bool > *p_71_M01_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_71->M01_AXI_rlast.bind(*p_71_M01_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_71_M01_AXI_rlast);
        xsim_sc_channel<0, bool > *p_71_M01_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_71->M01_AXI_rvalid.bind(*p_71_M01_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_71_M01_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_71_M01_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_71->M01_AXI_rready.bind(*p_71_M01_AXI_rready);
        p_71_M01_AXI_rready->set_sv_netview_offsetfromdp(13367776);
    }


extern "C"
    void implicit_HDL_SCcleanup()
    {
        delete sc_inst_1;
        delete sc_inst_2;
        delete sc_inst_3;
        delete sc_inst_4;
        delete sc_inst_5;
        delete sc_inst_6;
        delete sc_inst_7;
        delete sc_inst_8;
        delete sc_inst_9;
        delete sc_inst_10;
        delete sc_inst_11;
        delete sc_inst_12;
        delete sc_inst_13;
        delete sc_inst_14;
        delete sc_inst_15;
        delete sc_inst_16;
        delete sc_inst_17;
        delete sc_inst_18;
        delete sc_inst_19;
        delete sc_inst_20;
        delete sc_inst_21;
        delete sc_inst_22;
        delete sc_inst_23;
        delete sc_inst_24;
        delete sc_inst_25;
        delete sc_inst_26;
        delete sc_inst_27;
        delete sc_inst_28;
        delete sc_inst_29;
        delete sc_inst_30;
        delete sc_inst_31;
        delete sc_inst_32;
        delete sc_inst_33;
        delete sc_inst_34;
        delete sc_inst_35;
        delete sc_inst_36;
        delete sc_inst_37;
        delete sc_inst_38;
        delete sc_inst_39;
        delete sc_inst_40;
        delete sc_inst_41;
        delete sc_inst_42;
        delete sc_inst_43;
        delete sc_inst_44;
        delete sc_inst_45;
        delete sc_inst_46;
        delete sc_inst_47;
        delete sc_inst_48;
        delete sc_inst_49;
        delete sc_inst_50;
        delete sc_inst_51;
        delete sc_inst_52;
        delete sc_inst_53;
        delete sc_inst_54;
        delete sc_inst_55;
        delete sc_inst_56;
        delete sc_inst_57;
        delete sc_inst_58;
        delete sc_inst_59;
        delete sc_inst_60;
        delete sc_inst_61;
        delete sc_inst_62;
        delete sc_inst_63;
        delete sc_inst_64;
        delete sc_inst_65;
        delete sc_inst_66;
        delete sc_inst_67;
        delete sc_inst_68;
        delete sc_inst_69;
        delete sc_inst_70;
        delete sc_inst_71;
    }
