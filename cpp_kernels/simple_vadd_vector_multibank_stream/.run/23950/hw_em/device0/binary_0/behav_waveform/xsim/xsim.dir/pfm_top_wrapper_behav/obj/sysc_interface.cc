#pragma GCC diagnostic ignored "-Wdeprecated-declarations" 
#include "xsim.dir/pfm_top_wrapper_behav/obj/sysc_interface.h"
#include <map>
#include <list>


extern "C" { std::vector<void*> *_glb_hdl_sc_channel_map; } 



extern "C"
    void call_HDL_SC_WRITE_bv_1(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<1, sc_dt::sc_bv<1> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_2(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<2, sc_dt::sc_bv<2> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_3(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<3, sc_dt::sc_bv<3> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_4(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<4, sc_dt::sc_bv<4> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_6(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<6, sc_dt::sc_bv<6> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_7(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<7, sc_dt::sc_bv<7> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_8(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<8, sc_dt::sc_bv<8> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_9(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<9, sc_dt::sc_bv<9> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_12(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<12, sc_dt::sc_bv<12> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_14(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<14, sc_dt::sc_bv<14> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_16(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<16, sc_dt::sc_bv<16> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_17(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<17, sc_dt::sc_bv<17> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_18(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<18, sc_dt::sc_bv<18> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_22(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<22, sc_dt::sc_bv<22> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_31(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<31, sc_dt::sc_bv<31> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_32(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<32, sc_dt::sc_bv<32> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_33(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<33, sc_dt::sc_bv<33> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_34(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<34, sc_dt::sc_bv<34> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_37(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<37, sc_dt::sc_bv<37> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_38(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<38, sc_dt::sc_bv<38> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_62(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<62, sc_dt::sc_bv<62> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_64(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<64, sc_dt::sc_bv<64> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_72(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<72, sc_dt::sc_bv<72> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_96(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<96, sc_dt::sc_bv<96> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_114(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<114, sc_dt::sc_bv<114> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_128(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<128, sc_dt::sc_bv<128> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_192(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<192, sc_dt::sc_bv<192> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_256(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<256, sc_dt::sc_bv<256> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_512(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<512, sc_dt::sc_bv<512> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_int(unsigned int sc_net_index, char* pval)
    {
          int val = *((int*)(pval));
          ((xsim_sc_channel<0, int>*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(val);
    } 



extern "C"
    void call_HDL_SC_WRITE_bit(unsigned int sc_net_index, char* pval)
    {
            sc_dt::sc_bit val  =  (sc_dt::sc_bit)((*((int*)(pval)) & 0x1));
          ((xsim_sc_channel<0, sc_dt::sc_bit>*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(val);
    } 



extern "C"
    void call_HDL_SC_WRITE_logic(unsigned int sc_net_index, char* pval)
    {
          sc_dt::sc_logic val  =  (sc_dt::sc_logic_value_t) (((*((int*)(pval)+1) & 0x1) << 1) | (*((int*)(pval)) & 0x1));
          ((xsim_sc_channel<0, sc_dt::sc_logic>*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(val);
    } 



extern "C"
    void call_HDL_SC_WRITE_bool(unsigned int sc_net_index, char* pval)
    {
          bool val = *((bool*)(pval));
          ((xsim_sc_channel<0, bool>*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(val);
    } 



extern "C"
    void implicit_HDL_SCinstantiate()
    {
        _glb_hdl_sc_channel_map = new std::vector<void*> ();
        sc_inst_1 = new pfm_dynamic_auto_cc_1(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.m00_couplers.auto_cc");
        sc_inst_1->xsim_set_dbg_index(1864);
        xsim_sc_channel<0, bool > *p_1_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_aclk.bind(*p_1_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_1_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_aresetn.bind(*p_1_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->s_axi_awaddr.bind(*p_1_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_1_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_1->s_axi_awprot.bind(*p_1_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_1_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_awvalid.bind(*p_1_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_1_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_awready.bind(*p_1_s_axi_awready);
        p_1_s_axi_awready->set_sv_netview_offsetfromdp(7951704);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_1_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_1->s_axi_wdata.bind(*p_1_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_1_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_1->s_axi_wstrb.bind(*p_1_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_1_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_wvalid.bind(*p_1_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_1_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_wready.bind(*p_1_s_axi_wready);
        p_1_s_axi_wready->set_sv_netview_offsetfromdp(7951928);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->s_axi_bresp.bind(*p_1_s_axi_bresp);
        p_1_s_axi_bresp->set_sv_netview_offsetfromdp(7951984);
        xsim_sc_channel<0, bool > *p_1_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_bvalid.bind(*p_1_s_axi_bvalid);
        p_1_s_axi_bvalid->set_sv_netview_offsetfromdp(7952040);
        xsim_sc_channel<0, bool > *p_1_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_bready.bind(*p_1_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_bready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->s_axi_araddr.bind(*p_1_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_1_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_1->s_axi_arprot.bind(*p_1_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_1_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_arvalid.bind(*p_1_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_1_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_arready.bind(*p_1_s_axi_arready);
        p_1_s_axi_arready->set_sv_netview_offsetfromdp(7952320);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_1_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_1->s_axi_rdata.bind(*p_1_s_axi_rdata);
        p_1_s_axi_rdata->set_sv_netview_offsetfromdp(7952376);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->s_axi_rresp.bind(*p_1_s_axi_rresp);
        p_1_s_axi_rresp->set_sv_netview_offsetfromdp(7952432);
        xsim_sc_channel<0, bool > *p_1_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_rvalid.bind(*p_1_s_axi_rvalid);
        p_1_s_axi_rvalid->set_sv_netview_offsetfromdp(7952488);
        xsim_sc_channel<0, bool > *p_1_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_rready.bind(*p_1_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_rready);
        xsim_sc_channel<0, bool > *p_1_m_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_aclk.bind(*p_1_m_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_1_m_axi_aclk);
        xsim_sc_channel<0, bool > *p_1_m_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_aresetn.bind(*p_1_m_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_1_m_axi_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_m_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->m_axi_awaddr.bind(*p_1_m_axi_awaddr);
        p_1_m_axi_awaddr->set_sv_netview_offsetfromdp(7952712);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_1_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_1->m_axi_awprot.bind(*p_1_m_axi_awprot);
        p_1_m_axi_awprot->set_sv_netview_offsetfromdp(7952768);
        xsim_sc_channel<0, bool > *p_1_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_awvalid.bind(*p_1_m_axi_awvalid);
        p_1_m_axi_awvalid->set_sv_netview_offsetfromdp(7952824);
        xsim_sc_channel<0, bool > *p_1_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_awready.bind(*p_1_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_1_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_1_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_1->m_axi_wdata.bind(*p_1_m_axi_wdata);
        p_1_m_axi_wdata->set_sv_netview_offsetfromdp(7952936);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_1_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_1->m_axi_wstrb.bind(*p_1_m_axi_wstrb);
        p_1_m_axi_wstrb->set_sv_netview_offsetfromdp(7952992);
        xsim_sc_channel<0, bool > *p_1_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_wvalid.bind(*p_1_m_axi_wvalid);
        p_1_m_axi_wvalid->set_sv_netview_offsetfromdp(7953048);
        xsim_sc_channel<0, bool > *p_1_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_wready.bind(*p_1_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_1_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->m_axi_bresp.bind(*p_1_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_1_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_1_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_bvalid.bind(*p_1_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_1_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_1_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_bready.bind(*p_1_m_axi_bready);
        p_1_m_axi_bready->set_sv_netview_offsetfromdp(7953272);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_m_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->m_axi_araddr.bind(*p_1_m_axi_araddr);
        p_1_m_axi_araddr->set_sv_netview_offsetfromdp(7953328);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_1_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_1->m_axi_arprot.bind(*p_1_m_axi_arprot);
        p_1_m_axi_arprot->set_sv_netview_offsetfromdp(7953384);
        xsim_sc_channel<0, bool > *p_1_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_arvalid.bind(*p_1_m_axi_arvalid);
        p_1_m_axi_arvalid->set_sv_netview_offsetfromdp(7953440);
        xsim_sc_channel<0, bool > *p_1_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_arready.bind(*p_1_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_1_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_1_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_1->m_axi_rdata.bind(*p_1_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_1_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->m_axi_rresp.bind(*p_1_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_1_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_1_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_rvalid.bind(*p_1_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_1_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_1_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_rready.bind(*p_1_m_axi_rready);
        p_1_m_axi_rready->set_sv_netview_offsetfromdp(7953720);
        sc_inst_2 = new pfm_dynamic_m00_regslice_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.m00_couplers.m00_regslice");
        sc_inst_2->xsim_set_dbg_index(1865);
        xsim_sc_channel<0, bool > *p_2_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_2->aclk.bind(*p_2_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_2_aclk);
        xsim_sc_channel<0, bool > *p_2_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_2->aresetn.bind(*p_2_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_2_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_2_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_2->s_axi_awaddr.bind(*p_2_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_2_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_2->s_axi_awprot.bind(*p_2_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_2_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_awvalid.bind(*p_2_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_2_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_awready.bind(*p_2_s_axi_awready);
        p_2_s_axi_awready->set_sv_netview_offsetfromdp(7954104);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_2_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_2->s_axi_wdata.bind(*p_2_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_2_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_2->s_axi_wstrb.bind(*p_2_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_2_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_wvalid.bind(*p_2_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_2_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_wready.bind(*p_2_s_axi_wready);
        p_2_s_axi_wready->set_sv_netview_offsetfromdp(7954328);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_2_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_2->s_axi_bresp.bind(*p_2_s_axi_bresp);
        p_2_s_axi_bresp->set_sv_netview_offsetfromdp(7954384);
        xsim_sc_channel<0, bool > *p_2_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_bvalid.bind(*p_2_s_axi_bvalid);
        p_2_s_axi_bvalid->set_sv_netview_offsetfromdp(7954440);
        xsim_sc_channel<0, bool > *p_2_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_bready.bind(*p_2_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_bready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_2_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_2->s_axi_araddr.bind(*p_2_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_2_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_2->s_axi_arprot.bind(*p_2_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_2_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_arvalid.bind(*p_2_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_2_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_arready.bind(*p_2_s_axi_arready);
        p_2_s_axi_arready->set_sv_netview_offsetfromdp(7954720);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_2_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_2->s_axi_rdata.bind(*p_2_s_axi_rdata);
        p_2_s_axi_rdata->set_sv_netview_offsetfromdp(7954776);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_2_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_2->s_axi_rresp.bind(*p_2_s_axi_rresp);
        p_2_s_axi_rresp->set_sv_netview_offsetfromdp(7954832);
        xsim_sc_channel<0, bool > *p_2_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_rvalid.bind(*p_2_s_axi_rvalid);
        p_2_s_axi_rvalid->set_sv_netview_offsetfromdp(7954888);
        xsim_sc_channel<0, bool > *p_2_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_rready.bind(*p_2_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_rready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_2_m_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_2->m_axi_awaddr.bind(*p_2_m_axi_awaddr);
        p_2_m_axi_awaddr->set_sv_netview_offsetfromdp(7955000);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_2_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_2->m_axi_awprot.bind(*p_2_m_axi_awprot);
        p_2_m_axi_awprot->set_sv_netview_offsetfromdp(7955056);
        xsim_sc_channel<0, bool > *p_2_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axi_awvalid.bind(*p_2_m_axi_awvalid);
        p_2_m_axi_awvalid->set_sv_netview_offsetfromdp(7955112);
        xsim_sc_channel<0, bool > *p_2_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axi_awready.bind(*p_2_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_2_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_2_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_2->m_axi_wdata.bind(*p_2_m_axi_wdata);
        p_2_m_axi_wdata->set_sv_netview_offsetfromdp(7955224);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_2_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_2->m_axi_wstrb.bind(*p_2_m_axi_wstrb);
        p_2_m_axi_wstrb->set_sv_netview_offsetfromdp(7955280);
        xsim_sc_channel<0, bool > *p_2_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axi_wvalid.bind(*p_2_m_axi_wvalid);
        p_2_m_axi_wvalid->set_sv_netview_offsetfromdp(7955336);
        xsim_sc_channel<0, bool > *p_2_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axi_wready.bind(*p_2_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_2_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_2_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_2->m_axi_bresp.bind(*p_2_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_2_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_2_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axi_bvalid.bind(*p_2_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_2_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_2_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axi_bready.bind(*p_2_m_axi_bready);
        p_2_m_axi_bready->set_sv_netview_offsetfromdp(7955560);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_2_m_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_2->m_axi_araddr.bind(*p_2_m_axi_araddr);
        p_2_m_axi_araddr->set_sv_netview_offsetfromdp(7955616);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_2_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_2->m_axi_arprot.bind(*p_2_m_axi_arprot);
        p_2_m_axi_arprot->set_sv_netview_offsetfromdp(7955672);
        xsim_sc_channel<0, bool > *p_2_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axi_arvalid.bind(*p_2_m_axi_arvalid);
        p_2_m_axi_arvalid->set_sv_netview_offsetfromdp(7955728);
        xsim_sc_channel<0, bool > *p_2_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axi_arready.bind(*p_2_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_2_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_2_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_2->m_axi_rdata.bind(*p_2_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_2_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_2_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_2->m_axi_rresp.bind(*p_2_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_2_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_2_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axi_rvalid.bind(*p_2_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_2_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_2_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axi_rready.bind(*p_2_m_axi_rready);
        p_2_m_axi_rready->set_sv_netview_offsetfromdp(7956008);
        sc_inst_3 = new pfm_dynamic_auto_cc_2(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.m01_couplers.auto_cc");
        sc_inst_3->xsim_set_dbg_index(1906);
        xsim_sc_channel<0, bool > *p_3_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_aclk.bind(*p_3_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_3_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_aresetn.bind(*p_3_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->s_axi_awaddr.bind(*p_3_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_3_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_3->s_axi_awprot.bind(*p_3_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_3_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_awvalid.bind(*p_3_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_3_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_awready.bind(*p_3_s_axi_awready);
        p_3_s_axi_awready->set_sv_netview_offsetfromdp(7991880);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_3_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_3->s_axi_wdata.bind(*p_3_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_3_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_3->s_axi_wstrb.bind(*p_3_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_3_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_wvalid.bind(*p_3_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_3_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_wready.bind(*p_3_s_axi_wready);
        p_3_s_axi_wready->set_sv_netview_offsetfromdp(7992104);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->s_axi_bresp.bind(*p_3_s_axi_bresp);
        p_3_s_axi_bresp->set_sv_netview_offsetfromdp(7992160);
        xsim_sc_channel<0, bool > *p_3_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_bvalid.bind(*p_3_s_axi_bvalid);
        p_3_s_axi_bvalid->set_sv_netview_offsetfromdp(7992216);
        xsim_sc_channel<0, bool > *p_3_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_bready.bind(*p_3_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_bready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->s_axi_araddr.bind(*p_3_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_3_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_3->s_axi_arprot.bind(*p_3_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_3_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_arvalid.bind(*p_3_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_3_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_arready.bind(*p_3_s_axi_arready);
        p_3_s_axi_arready->set_sv_netview_offsetfromdp(7992496);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_3_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_3->s_axi_rdata.bind(*p_3_s_axi_rdata);
        p_3_s_axi_rdata->set_sv_netview_offsetfromdp(7992552);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->s_axi_rresp.bind(*p_3_s_axi_rresp);
        p_3_s_axi_rresp->set_sv_netview_offsetfromdp(7992608);
        xsim_sc_channel<0, bool > *p_3_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_rvalid.bind(*p_3_s_axi_rvalid);
        p_3_s_axi_rvalid->set_sv_netview_offsetfromdp(7992664);
        xsim_sc_channel<0, bool > *p_3_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_rready.bind(*p_3_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_rready);
        xsim_sc_channel<0, bool > *p_3_m_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_aclk.bind(*p_3_m_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_3_m_axi_aclk);
        xsim_sc_channel<0, bool > *p_3_m_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_aresetn.bind(*p_3_m_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_3_m_axi_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_m_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->m_axi_awaddr.bind(*p_3_m_axi_awaddr);
        p_3_m_axi_awaddr->set_sv_netview_offsetfromdp(7992888);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_3_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_3->m_axi_awprot.bind(*p_3_m_axi_awprot);
        p_3_m_axi_awprot->set_sv_netview_offsetfromdp(7992944);
        xsim_sc_channel<0, bool > *p_3_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_awvalid.bind(*p_3_m_axi_awvalid);
        p_3_m_axi_awvalid->set_sv_netview_offsetfromdp(7993000);
        xsim_sc_channel<0, bool > *p_3_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_awready.bind(*p_3_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_3_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_3_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_3->m_axi_wdata.bind(*p_3_m_axi_wdata);
        p_3_m_axi_wdata->set_sv_netview_offsetfromdp(7993112);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_3_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_3->m_axi_wstrb.bind(*p_3_m_axi_wstrb);
        p_3_m_axi_wstrb->set_sv_netview_offsetfromdp(7993168);
        xsim_sc_channel<0, bool > *p_3_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_wvalid.bind(*p_3_m_axi_wvalid);
        p_3_m_axi_wvalid->set_sv_netview_offsetfromdp(7993224);
        xsim_sc_channel<0, bool > *p_3_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_wready.bind(*p_3_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_3_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->m_axi_bresp.bind(*p_3_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_3_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_3_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_bvalid.bind(*p_3_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_3_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_3_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_bready.bind(*p_3_m_axi_bready);
        p_3_m_axi_bready->set_sv_netview_offsetfromdp(7993448);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_m_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->m_axi_araddr.bind(*p_3_m_axi_araddr);
        p_3_m_axi_araddr->set_sv_netview_offsetfromdp(7993504);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_3_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_3->m_axi_arprot.bind(*p_3_m_axi_arprot);
        p_3_m_axi_arprot->set_sv_netview_offsetfromdp(7993560);
        xsim_sc_channel<0, bool > *p_3_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_arvalid.bind(*p_3_m_axi_arvalid);
        p_3_m_axi_arvalid->set_sv_netview_offsetfromdp(7993616);
        xsim_sc_channel<0, bool > *p_3_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_arready.bind(*p_3_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_3_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_3_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_3->m_axi_rdata.bind(*p_3_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_3_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->m_axi_rresp.bind(*p_3_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_3_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_3_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_rvalid.bind(*p_3_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_3_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_3_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_rready.bind(*p_3_m_axi_rready);
        p_3_m_axi_rready->set_sv_netview_offsetfromdp(7993896);
        sc_inst_4 = new pfm_dynamic_m01_regslice_5(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.m01_couplers.m01_regslice");
        sc_inst_4->xsim_set_dbg_index(1907);
        xsim_sc_channel<0, bool > *p_4_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_4->aclk.bind(*p_4_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_4_aclk);
        xsim_sc_channel<0, bool > *p_4_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_4->aresetn.bind(*p_4_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_4_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->s_axi_awaddr.bind(*p_4_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->s_axi_awprot.bind(*p_4_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_4_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_awvalid.bind(*p_4_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_4_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_awready.bind(*p_4_s_axi_awready);
        p_4_s_axi_awready->set_sv_netview_offsetfromdp(7994280);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_4_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_4->s_axi_wdata.bind(*p_4_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_4_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_4->s_axi_wstrb.bind(*p_4_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_4_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_wvalid.bind(*p_4_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_4_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_wready.bind(*p_4_s_axi_wready);
        p_4_s_axi_wready->set_sv_netview_offsetfromdp(7994504);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->s_axi_bresp.bind(*p_4_s_axi_bresp);
        p_4_s_axi_bresp->set_sv_netview_offsetfromdp(7994560);
        xsim_sc_channel<0, bool > *p_4_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_bvalid.bind(*p_4_s_axi_bvalid);
        p_4_s_axi_bvalid->set_sv_netview_offsetfromdp(7994616);
        xsim_sc_channel<0, bool > *p_4_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_bready.bind(*p_4_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_bready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->s_axi_araddr.bind(*p_4_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->s_axi_arprot.bind(*p_4_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_4_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_arvalid.bind(*p_4_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_4_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_arready.bind(*p_4_s_axi_arready);
        p_4_s_axi_arready->set_sv_netview_offsetfromdp(7994896);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_4_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_4->s_axi_rdata.bind(*p_4_s_axi_rdata);
        p_4_s_axi_rdata->set_sv_netview_offsetfromdp(7994952);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->s_axi_rresp.bind(*p_4_s_axi_rresp);
        p_4_s_axi_rresp->set_sv_netview_offsetfromdp(7995008);
        xsim_sc_channel<0, bool > *p_4_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_rvalid.bind(*p_4_s_axi_rvalid);
        p_4_s_axi_rvalid->set_sv_netview_offsetfromdp(7995064);
        xsim_sc_channel<0, bool > *p_4_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_rready.bind(*p_4_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_rready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_m_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->m_axi_awaddr.bind(*p_4_m_axi_awaddr);
        p_4_m_axi_awaddr->set_sv_netview_offsetfromdp(7995176);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->m_axi_awprot.bind(*p_4_m_axi_awprot);
        p_4_m_axi_awprot->set_sv_netview_offsetfromdp(7995232);
        xsim_sc_channel<0, bool > *p_4_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axi_awvalid.bind(*p_4_m_axi_awvalid);
        p_4_m_axi_awvalid->set_sv_netview_offsetfromdp(7995288);
        xsim_sc_channel<0, bool > *p_4_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axi_awready.bind(*p_4_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_4_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_4_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_4->m_axi_wdata.bind(*p_4_m_axi_wdata);
        p_4_m_axi_wdata->set_sv_netview_offsetfromdp(7995400);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_4_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_4->m_axi_wstrb.bind(*p_4_m_axi_wstrb);
        p_4_m_axi_wstrb->set_sv_netview_offsetfromdp(7995456);
        xsim_sc_channel<0, bool > *p_4_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axi_wvalid.bind(*p_4_m_axi_wvalid);
        p_4_m_axi_wvalid->set_sv_netview_offsetfromdp(7995512);
        xsim_sc_channel<0, bool > *p_4_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axi_wready.bind(*p_4_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_4_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->m_axi_bresp.bind(*p_4_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_4_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_4_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axi_bvalid.bind(*p_4_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_4_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_4_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axi_bready.bind(*p_4_m_axi_bready);
        p_4_m_axi_bready->set_sv_netview_offsetfromdp(7995736);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_m_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->m_axi_araddr.bind(*p_4_m_axi_araddr);
        p_4_m_axi_araddr->set_sv_netview_offsetfromdp(7995792);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->m_axi_arprot.bind(*p_4_m_axi_arprot);
        p_4_m_axi_arprot->set_sv_netview_offsetfromdp(7995848);
        xsim_sc_channel<0, bool > *p_4_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axi_arvalid.bind(*p_4_m_axi_arvalid);
        p_4_m_axi_arvalid->set_sv_netview_offsetfromdp(7995904);
        xsim_sc_channel<0, bool > *p_4_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axi_arready.bind(*p_4_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_4_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_4_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_4->m_axi_rdata.bind(*p_4_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_4_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->m_axi_rresp.bind(*p_4_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_4_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_4_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axi_rvalid.bind(*p_4_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_4_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_4_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axi_rready.bind(*p_4_m_axi_rready);
        p_4_m_axi_rready->set_sv_netview_offsetfromdp(7996184);
        sc_inst_5 = new pfm_dynamic_auto_cc_3(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.m02_couplers.auto_cc");
        sc_inst_5->xsim_set_dbg_index(1948);
        xsim_sc_channel<0, bool > *p_5_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_aclk.bind(*p_5_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_5_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_aresetn.bind(*p_5_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->s_axi_awaddr.bind(*p_5_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->s_axi_awprot.bind(*p_5_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_5_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_awvalid.bind(*p_5_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_5_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_awready.bind(*p_5_s_axi_awready);
        p_5_s_axi_awready->set_sv_netview_offsetfromdp(8032056);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_5_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_5->s_axi_wdata.bind(*p_5_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->s_axi_wstrb.bind(*p_5_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_5_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_wvalid.bind(*p_5_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_5_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_wready.bind(*p_5_s_axi_wready);
        p_5_s_axi_wready->set_sv_netview_offsetfromdp(8032280);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->s_axi_bresp.bind(*p_5_s_axi_bresp);
        p_5_s_axi_bresp->set_sv_netview_offsetfromdp(8032336);
        xsim_sc_channel<0, bool > *p_5_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_bvalid.bind(*p_5_s_axi_bvalid);
        p_5_s_axi_bvalid->set_sv_netview_offsetfromdp(8032392);
        xsim_sc_channel<0, bool > *p_5_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_bready.bind(*p_5_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_bready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->s_axi_araddr.bind(*p_5_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->s_axi_arprot.bind(*p_5_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_5_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_arvalid.bind(*p_5_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_5_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_arready.bind(*p_5_s_axi_arready);
        p_5_s_axi_arready->set_sv_netview_offsetfromdp(8032672);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_5_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_5->s_axi_rdata.bind(*p_5_s_axi_rdata);
        p_5_s_axi_rdata->set_sv_netview_offsetfromdp(8032728);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->s_axi_rresp.bind(*p_5_s_axi_rresp);
        p_5_s_axi_rresp->set_sv_netview_offsetfromdp(8032784);
        xsim_sc_channel<0, bool > *p_5_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_rvalid.bind(*p_5_s_axi_rvalid);
        p_5_s_axi_rvalid->set_sv_netview_offsetfromdp(8032840);
        xsim_sc_channel<0, bool > *p_5_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_rready.bind(*p_5_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_rready);
        xsim_sc_channel<0, bool > *p_5_m_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_aclk.bind(*p_5_m_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_5_m_axi_aclk);
        xsim_sc_channel<0, bool > *p_5_m_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_aresetn.bind(*p_5_m_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_5_m_axi_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_m_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->m_axi_awaddr.bind(*p_5_m_axi_awaddr);
        p_5_m_axi_awaddr->set_sv_netview_offsetfromdp(8033064);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->m_axi_awprot.bind(*p_5_m_axi_awprot);
        p_5_m_axi_awprot->set_sv_netview_offsetfromdp(8033120);
        xsim_sc_channel<0, bool > *p_5_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_awvalid.bind(*p_5_m_axi_awvalid);
        p_5_m_axi_awvalid->set_sv_netview_offsetfromdp(8033176);
        xsim_sc_channel<0, bool > *p_5_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_awready.bind(*p_5_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_5_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_5_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_5->m_axi_wdata.bind(*p_5_m_axi_wdata);
        p_5_m_axi_wdata->set_sv_netview_offsetfromdp(8033288);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->m_axi_wstrb.bind(*p_5_m_axi_wstrb);
        p_5_m_axi_wstrb->set_sv_netview_offsetfromdp(8033344);
        xsim_sc_channel<0, bool > *p_5_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_wvalid.bind(*p_5_m_axi_wvalid);
        p_5_m_axi_wvalid->set_sv_netview_offsetfromdp(8033400);
        xsim_sc_channel<0, bool > *p_5_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_wready.bind(*p_5_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_5_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->m_axi_bresp.bind(*p_5_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_5_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_5_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_bvalid.bind(*p_5_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_5_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_bready.bind(*p_5_m_axi_bready);
        p_5_m_axi_bready->set_sv_netview_offsetfromdp(8033624);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_m_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->m_axi_araddr.bind(*p_5_m_axi_araddr);
        p_5_m_axi_araddr->set_sv_netview_offsetfromdp(8033680);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->m_axi_arprot.bind(*p_5_m_axi_arprot);
        p_5_m_axi_arprot->set_sv_netview_offsetfromdp(8033736);
        xsim_sc_channel<0, bool > *p_5_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_arvalid.bind(*p_5_m_axi_arvalid);
        p_5_m_axi_arvalid->set_sv_netview_offsetfromdp(8033792);
        xsim_sc_channel<0, bool > *p_5_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_arready.bind(*p_5_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_5_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_5_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_5->m_axi_rdata.bind(*p_5_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_5_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->m_axi_rresp.bind(*p_5_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_5_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_5_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_rvalid.bind(*p_5_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_5_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_rready.bind(*p_5_m_axi_rready);
        p_5_m_axi_rready->set_sv_netview_offsetfromdp(8034072);
        sc_inst_6 = new pfm_dynamic_m02_regslice_5(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.m02_couplers.m02_regslice");
        sc_inst_6->xsim_set_dbg_index(1949);
        xsim_sc_channel<0, bool > *p_6_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_6->aclk.bind(*p_6_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_6_aclk);
        xsim_sc_channel<0, bool > *p_6_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_6->aresetn.bind(*p_6_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_6_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->s_axi_awaddr.bind(*p_6_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->s_axi_awprot.bind(*p_6_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_6_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_awvalid.bind(*p_6_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_6_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_awready.bind(*p_6_s_axi_awready);
        p_6_s_axi_awready->set_sv_netview_offsetfromdp(8034456);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->s_axi_wdata.bind(*p_6_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->s_axi_wstrb.bind(*p_6_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_6_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_wvalid.bind(*p_6_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_6_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_wready.bind(*p_6_s_axi_wready);
        p_6_s_axi_wready->set_sv_netview_offsetfromdp(8034680);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->s_axi_bresp.bind(*p_6_s_axi_bresp);
        p_6_s_axi_bresp->set_sv_netview_offsetfromdp(8034736);
        xsim_sc_channel<0, bool > *p_6_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_bvalid.bind(*p_6_s_axi_bvalid);
        p_6_s_axi_bvalid->set_sv_netview_offsetfromdp(8034792);
        xsim_sc_channel<0, bool > *p_6_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_bready.bind(*p_6_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_bready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->s_axi_araddr.bind(*p_6_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->s_axi_arprot.bind(*p_6_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_6_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_arvalid.bind(*p_6_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_6_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_arready.bind(*p_6_s_axi_arready);
        p_6_s_axi_arready->set_sv_netview_offsetfromdp(8035072);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->s_axi_rdata.bind(*p_6_s_axi_rdata);
        p_6_s_axi_rdata->set_sv_netview_offsetfromdp(8035128);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->s_axi_rresp.bind(*p_6_s_axi_rresp);
        p_6_s_axi_rresp->set_sv_netview_offsetfromdp(8035184);
        xsim_sc_channel<0, bool > *p_6_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_rvalid.bind(*p_6_s_axi_rvalid);
        p_6_s_axi_rvalid->set_sv_netview_offsetfromdp(8035240);
        xsim_sc_channel<0, bool > *p_6_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_rready.bind(*p_6_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_rready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_m_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->m_axi_awaddr.bind(*p_6_m_axi_awaddr);
        p_6_m_axi_awaddr->set_sv_netview_offsetfromdp(8035352);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->m_axi_awprot.bind(*p_6_m_axi_awprot);
        p_6_m_axi_awprot->set_sv_netview_offsetfromdp(8035408);
        xsim_sc_channel<0, bool > *p_6_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axi_awvalid.bind(*p_6_m_axi_awvalid);
        p_6_m_axi_awvalid->set_sv_netview_offsetfromdp(8035464);
        xsim_sc_channel<0, bool > *p_6_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axi_awready.bind(*p_6_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_6_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->m_axi_wdata.bind(*p_6_m_axi_wdata);
        p_6_m_axi_wdata->set_sv_netview_offsetfromdp(8035576);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->m_axi_wstrb.bind(*p_6_m_axi_wstrb);
        p_6_m_axi_wstrb->set_sv_netview_offsetfromdp(8035632);
        xsim_sc_channel<0, bool > *p_6_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axi_wvalid.bind(*p_6_m_axi_wvalid);
        p_6_m_axi_wvalid->set_sv_netview_offsetfromdp(8035688);
        xsim_sc_channel<0, bool > *p_6_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axi_wready.bind(*p_6_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_6_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->m_axi_bresp.bind(*p_6_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_6_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_6_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axi_bvalid.bind(*p_6_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_6_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_6_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axi_bready.bind(*p_6_m_axi_bready);
        p_6_m_axi_bready->set_sv_netview_offsetfromdp(8035912);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_m_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->m_axi_araddr.bind(*p_6_m_axi_araddr);
        p_6_m_axi_araddr->set_sv_netview_offsetfromdp(8035968);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->m_axi_arprot.bind(*p_6_m_axi_arprot);
        p_6_m_axi_arprot->set_sv_netview_offsetfromdp(8036024);
        xsim_sc_channel<0, bool > *p_6_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axi_arvalid.bind(*p_6_m_axi_arvalid);
        p_6_m_axi_arvalid->set_sv_netview_offsetfromdp(8036080);
        xsim_sc_channel<0, bool > *p_6_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axi_arready.bind(*p_6_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_6_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->m_axi_rdata.bind(*p_6_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_6_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->m_axi_rresp.bind(*p_6_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_6_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_6_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axi_rvalid.bind(*p_6_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_6_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_6_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axi_rready.bind(*p_6_m_axi_rready);
        p_6_m_axi_rready->set_sv_netview_offsetfromdp(8036360);
        sc_inst_7 = new pfm_dynamic_auto_cc_4(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.m03_couplers.auto_cc");
        sc_inst_7->xsim_set_dbg_index(1990);
        xsim_sc_channel<0, bool > *p_7_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_aclk.bind(*p_7_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_7_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_aresetn.bind(*p_7_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_7_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_7->s_axi_awaddr.bind(*p_7_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->s_axi_awprot.bind(*p_7_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_7_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_awvalid.bind(*p_7_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_7_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_awready.bind(*p_7_s_axi_awready);
        p_7_s_axi_awready->set_sv_netview_offsetfromdp(8072232);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_7_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_7->s_axi_wdata.bind(*p_7_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->s_axi_wstrb.bind(*p_7_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_7_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_wvalid.bind(*p_7_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_7_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_wready.bind(*p_7_s_axi_wready);
        p_7_s_axi_wready->set_sv_netview_offsetfromdp(8072456);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->s_axi_bresp.bind(*p_7_s_axi_bresp);
        p_7_s_axi_bresp->set_sv_netview_offsetfromdp(8072512);
        xsim_sc_channel<0, bool > *p_7_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_bvalid.bind(*p_7_s_axi_bvalid);
        p_7_s_axi_bvalid->set_sv_netview_offsetfromdp(8072568);
        xsim_sc_channel<0, bool > *p_7_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_bready.bind(*p_7_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_bready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_7_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_7->s_axi_araddr.bind(*p_7_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->s_axi_arprot.bind(*p_7_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_7_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_arvalid.bind(*p_7_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_7_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_arready.bind(*p_7_s_axi_arready);
        p_7_s_axi_arready->set_sv_netview_offsetfromdp(8072848);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_7_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_7->s_axi_rdata.bind(*p_7_s_axi_rdata);
        p_7_s_axi_rdata->set_sv_netview_offsetfromdp(8072904);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->s_axi_rresp.bind(*p_7_s_axi_rresp);
        p_7_s_axi_rresp->set_sv_netview_offsetfromdp(8072960);
        xsim_sc_channel<0, bool > *p_7_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_rvalid.bind(*p_7_s_axi_rvalid);
        p_7_s_axi_rvalid->set_sv_netview_offsetfromdp(8073016);
        xsim_sc_channel<0, bool > *p_7_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_rready.bind(*p_7_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_rready);
        xsim_sc_channel<0, bool > *p_7_m_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_aclk.bind(*p_7_m_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_axi_aclk);
        xsim_sc_channel<0, bool > *p_7_m_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_aresetn.bind(*p_7_m_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_axi_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_7_m_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_7->m_axi_awaddr.bind(*p_7_m_axi_awaddr);
        p_7_m_axi_awaddr->set_sv_netview_offsetfromdp(8073240);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->m_axi_awprot.bind(*p_7_m_axi_awprot);
        p_7_m_axi_awprot->set_sv_netview_offsetfromdp(8073296);
        xsim_sc_channel<0, bool > *p_7_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_awvalid.bind(*p_7_m_axi_awvalid);
        p_7_m_axi_awvalid->set_sv_netview_offsetfromdp(8073352);
        xsim_sc_channel<0, bool > *p_7_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_awready.bind(*p_7_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_7_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_7->m_axi_wdata.bind(*p_7_m_axi_wdata);
        p_7_m_axi_wdata->set_sv_netview_offsetfromdp(8073464);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->m_axi_wstrb.bind(*p_7_m_axi_wstrb);
        p_7_m_axi_wstrb->set_sv_netview_offsetfromdp(8073520);
        xsim_sc_channel<0, bool > *p_7_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_wvalid.bind(*p_7_m_axi_wvalid);
        p_7_m_axi_wvalid->set_sv_netview_offsetfromdp(8073576);
        xsim_sc_channel<0, bool > *p_7_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_wready.bind(*p_7_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->m_axi_bresp.bind(*p_7_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_7_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_bvalid.bind(*p_7_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_7_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_bready.bind(*p_7_m_axi_bready);
        p_7_m_axi_bready->set_sv_netview_offsetfromdp(8073800);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_7_m_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_7->m_axi_araddr.bind(*p_7_m_axi_araddr);
        p_7_m_axi_araddr->set_sv_netview_offsetfromdp(8073856);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->m_axi_arprot.bind(*p_7_m_axi_arprot);
        p_7_m_axi_arprot->set_sv_netview_offsetfromdp(8073912);
        xsim_sc_channel<0, bool > *p_7_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_arvalid.bind(*p_7_m_axi_arvalid);
        p_7_m_axi_arvalid->set_sv_netview_offsetfromdp(8073968);
        xsim_sc_channel<0, bool > *p_7_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_arready.bind(*p_7_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_7_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_7->m_axi_rdata.bind(*p_7_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->m_axi_rresp.bind(*p_7_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_7_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_rvalid.bind(*p_7_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_7_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_rready.bind(*p_7_m_axi_rready);
        p_7_m_axi_rready->set_sv_netview_offsetfromdp(8074248);
        sc_inst_8 = new pfm_dynamic_m03_regslice_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.m03_couplers.m03_regslice");
        sc_inst_8->xsim_set_dbg_index(1991);
        xsim_sc_channel<0, bool > *p_8_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_8->aclk.bind(*p_8_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_8_aclk);
        xsim_sc_channel<0, bool > *p_8_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_8->aresetn.bind(*p_8_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_8_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_8_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_8->s_axi_awaddr.bind(*p_8_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->s_axi_awprot.bind(*p_8_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_8_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_axi_awvalid.bind(*p_8_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_8_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_axi_awready.bind(*p_8_s_axi_awready);
        p_8_s_axi_awready->set_sv_netview_offsetfromdp(8074632);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->s_axi_wdata.bind(*p_8_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->s_axi_wstrb.bind(*p_8_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_8_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_axi_wvalid.bind(*p_8_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_8_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_axi_wready.bind(*p_8_s_axi_wready);
        p_8_s_axi_wready->set_sv_netview_offsetfromdp(8074856);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->s_axi_bresp.bind(*p_8_s_axi_bresp);
        p_8_s_axi_bresp->set_sv_netview_offsetfromdp(8074912);
        xsim_sc_channel<0, bool > *p_8_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_axi_bvalid.bind(*p_8_s_axi_bvalid);
        p_8_s_axi_bvalid->set_sv_netview_offsetfromdp(8074968);
        xsim_sc_channel<0, bool > *p_8_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_axi_bready.bind(*p_8_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_axi_bready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_8_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_8->s_axi_araddr.bind(*p_8_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->s_axi_arprot.bind(*p_8_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_8_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_axi_arvalid.bind(*p_8_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_8_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_axi_arready.bind(*p_8_s_axi_arready);
        p_8_s_axi_arready->set_sv_netview_offsetfromdp(8075248);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->s_axi_rdata.bind(*p_8_s_axi_rdata);
        p_8_s_axi_rdata->set_sv_netview_offsetfromdp(8075304);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->s_axi_rresp.bind(*p_8_s_axi_rresp);
        p_8_s_axi_rresp->set_sv_netview_offsetfromdp(8075360);
        xsim_sc_channel<0, bool > *p_8_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_axi_rvalid.bind(*p_8_s_axi_rvalid);
        p_8_s_axi_rvalid->set_sv_netview_offsetfromdp(8075416);
        xsim_sc_channel<0, bool > *p_8_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_axi_rready.bind(*p_8_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_axi_rready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_8_m_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_8->m_axi_awaddr.bind(*p_8_m_axi_awaddr);
        p_8_m_axi_awaddr->set_sv_netview_offsetfromdp(8075528);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->m_axi_awprot.bind(*p_8_m_axi_awprot);
        p_8_m_axi_awprot->set_sv_netview_offsetfromdp(8075584);
        xsim_sc_channel<0, bool > *p_8_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->m_axi_awvalid.bind(*p_8_m_axi_awvalid);
        p_8_m_axi_awvalid->set_sv_netview_offsetfromdp(8075640);
        xsim_sc_channel<0, bool > *p_8_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_8->m_axi_awready.bind(*p_8_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->m_axi_wdata.bind(*p_8_m_axi_wdata);
        p_8_m_axi_wdata->set_sv_netview_offsetfromdp(8075752);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->m_axi_wstrb.bind(*p_8_m_axi_wstrb);
        p_8_m_axi_wstrb->set_sv_netview_offsetfromdp(8075808);
        xsim_sc_channel<0, bool > *p_8_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->m_axi_wvalid.bind(*p_8_m_axi_wvalid);
        p_8_m_axi_wvalid->set_sv_netview_offsetfromdp(8075864);
        xsim_sc_channel<0, bool > *p_8_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_8->m_axi_wready.bind(*p_8_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->m_axi_bresp.bind(*p_8_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_8_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->m_axi_bvalid.bind(*p_8_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_8_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_8->m_axi_bready.bind(*p_8_m_axi_bready);
        p_8_m_axi_bready->set_sv_netview_offsetfromdp(8076088);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_8_m_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_8->m_axi_araddr.bind(*p_8_m_axi_araddr);
        p_8_m_axi_araddr->set_sv_netview_offsetfromdp(8076144);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->m_axi_arprot.bind(*p_8_m_axi_arprot);
        p_8_m_axi_arprot->set_sv_netview_offsetfromdp(8076200);
        xsim_sc_channel<0, bool > *p_8_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->m_axi_arvalid.bind(*p_8_m_axi_arvalid);
        p_8_m_axi_arvalid->set_sv_netview_offsetfromdp(8076256);
        xsim_sc_channel<0, bool > *p_8_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_8->m_axi_arready.bind(*p_8_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->m_axi_rdata.bind(*p_8_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->m_axi_rresp.bind(*p_8_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_8_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->m_axi_rvalid.bind(*p_8_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_8_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_8->m_axi_rready.bind(*p_8_m_axi_rready);
        p_8_m_axi_rready->set_sv_netview_offsetfromdp(8076536);
        sc_inst_9 = new pfm_dynamic_s00_regslice_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.s00_couplers.s00_regslice");
        sc_inst_9->xsim_set_dbg_index(2032);
        xsim_sc_channel<0, bool > *p_9_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_9->aclk.bind(*p_9_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_9_aclk);
        xsim_sc_channel<0, bool > *p_9_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_9->aresetn.bind(*p_9_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_9_aresetn);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_9_s_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_9->s_axi_awaddr.bind(*p_9_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->s_axi_awprot.bind(*p_9_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_9_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_awvalid.bind(*p_9_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_9_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_awready.bind(*p_9_s_axi_awready);
        p_9_s_axi_awready->set_sv_netview_offsetfromdp(8100176);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->s_axi_wdata.bind(*p_9_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->s_axi_wstrb.bind(*p_9_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_9_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_wvalid.bind(*p_9_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_9_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_wready.bind(*p_9_s_axi_wready);
        p_9_s_axi_wready->set_sv_netview_offsetfromdp(8100400);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->s_axi_bresp.bind(*p_9_s_axi_bresp);
        p_9_s_axi_bresp->set_sv_netview_offsetfromdp(8100456);
        xsim_sc_channel<0, bool > *p_9_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_bvalid.bind(*p_9_s_axi_bvalid);
        p_9_s_axi_bvalid->set_sv_netview_offsetfromdp(8100512);
        xsim_sc_channel<0, bool > *p_9_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_bready.bind(*p_9_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_9_s_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_9->s_axi_araddr.bind(*p_9_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->s_axi_arprot.bind(*p_9_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_9_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_arvalid.bind(*p_9_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_9_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_arready.bind(*p_9_s_axi_arready);
        p_9_s_axi_arready->set_sv_netview_offsetfromdp(8100792);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->s_axi_rdata.bind(*p_9_s_axi_rdata);
        p_9_s_axi_rdata->set_sv_netview_offsetfromdp(8100848);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->s_axi_rresp.bind(*p_9_s_axi_rresp);
        p_9_s_axi_rresp->set_sv_netview_offsetfromdp(8100904);
        xsim_sc_channel<0, bool > *p_9_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_rvalid.bind(*p_9_s_axi_rvalid);
        p_9_s_axi_rvalid->set_sv_netview_offsetfromdp(8100960);
        xsim_sc_channel<0, bool > *p_9_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_rready.bind(*p_9_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_rready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_9_m_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_9->m_axi_awaddr.bind(*p_9_m_axi_awaddr);
        p_9_m_axi_awaddr->set_sv_netview_offsetfromdp(8101072);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->m_axi_awprot.bind(*p_9_m_axi_awprot);
        p_9_m_axi_awprot->set_sv_netview_offsetfromdp(8101128);
        xsim_sc_channel<0, bool > *p_9_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->m_axi_awvalid.bind(*p_9_m_axi_awvalid);
        p_9_m_axi_awvalid->set_sv_netview_offsetfromdp(8101184);
        xsim_sc_channel<0, bool > *p_9_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_9->m_axi_awready.bind(*p_9_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_9_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->m_axi_wdata.bind(*p_9_m_axi_wdata);
        p_9_m_axi_wdata->set_sv_netview_offsetfromdp(8101296);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->m_axi_wstrb.bind(*p_9_m_axi_wstrb);
        p_9_m_axi_wstrb->set_sv_netview_offsetfromdp(8101352);
        xsim_sc_channel<0, bool > *p_9_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->m_axi_wvalid.bind(*p_9_m_axi_wvalid);
        p_9_m_axi_wvalid->set_sv_netview_offsetfromdp(8101408);
        xsim_sc_channel<0, bool > *p_9_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_9->m_axi_wready.bind(*p_9_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_9_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->m_axi_bresp.bind(*p_9_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_9_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_9_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->m_axi_bvalid.bind(*p_9_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_9_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_9->m_axi_bready.bind(*p_9_m_axi_bready);
        p_9_m_axi_bready->set_sv_netview_offsetfromdp(8101632);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_9_m_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_9->m_axi_araddr.bind(*p_9_m_axi_araddr);
        p_9_m_axi_araddr->set_sv_netview_offsetfromdp(8101688);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->m_axi_arprot.bind(*p_9_m_axi_arprot);
        p_9_m_axi_arprot->set_sv_netview_offsetfromdp(8101744);
        xsim_sc_channel<0, bool > *p_9_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->m_axi_arvalid.bind(*p_9_m_axi_arvalid);
        p_9_m_axi_arvalid->set_sv_netview_offsetfromdp(8101800);
        xsim_sc_channel<0, bool > *p_9_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_9->m_axi_arready.bind(*p_9_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_9_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->m_axi_rdata.bind(*p_9_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_9_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->m_axi_rresp.bind(*p_9_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_9_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_9_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->m_axi_rvalid.bind(*p_9_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_9_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_9->m_axi_rready.bind(*p_9_m_axi_rready);
        p_9_m_axi_rready->set_sv_netview_offsetfromdp(8102080);
        sc_inst_10 = new pfm_dynamic_xbar_4(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.xbar");
        sc_inst_10->xsim_set_dbg_index(772);
        xsim_sc_channel<0, bool > *p_10_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_10->aclk.bind(*p_10_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_10_aclk);
        xsim_sc_channel<0, bool > *p_10_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_10->aresetn.bind(*p_10_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_10_aresetn);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_10_s_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_10->s_axi_awaddr.bind(*p_10_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->s_axi_awprot.bind(*p_10_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_awprot);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_s_axi_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->s_axi_awvalid.bind(*p_10_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_awvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_s_axi_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->s_axi_awready.bind(*p_10_s_axi_awready);
        p_10_s_axi_awready->set_sv_netview_offsetfromdp(8102464);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_10_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_10->s_axi_wdata.bind(*p_10_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->s_axi_wstrb.bind(*p_10_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_wstrb);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_s_axi_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->s_axi_wvalid.bind(*p_10_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_wvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_s_axi_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->s_axi_wready.bind(*p_10_s_axi_wready);
        p_10_s_axi_wready->set_sv_netview_offsetfromdp(8102688);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->s_axi_bresp.bind(*p_10_s_axi_bresp);
        p_10_s_axi_bresp->set_sv_netview_offsetfromdp(8102744);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_s_axi_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->s_axi_bvalid.bind(*p_10_s_axi_bvalid);
        p_10_s_axi_bvalid->set_sv_netview_offsetfromdp(8102800);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_s_axi_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->s_axi_bready.bind(*p_10_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_10_s_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_10->s_axi_araddr.bind(*p_10_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->s_axi_arprot.bind(*p_10_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_arprot);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_s_axi_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->s_axi_arvalid.bind(*p_10_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_arvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_s_axi_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->s_axi_arready.bind(*p_10_s_axi_arready);
        p_10_s_axi_arready->set_sv_netview_offsetfromdp(8103080);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_10_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_10->s_axi_rdata.bind(*p_10_s_axi_rdata);
        p_10_s_axi_rdata->set_sv_netview_offsetfromdp(8103136);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->s_axi_rresp.bind(*p_10_s_axi_rresp);
        p_10_s_axi_rresp->set_sv_netview_offsetfromdp(8103192);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_s_axi_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->s_axi_rvalid.bind(*p_10_s_axi_rvalid);
        p_10_s_axi_rvalid->set_sv_netview_offsetfromdp(8103248);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_s_axi_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->s_axi_rready.bind(*p_10_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_rready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_10_m_axi_awaddr = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_10->m_axi_awaddr.bind(*p_10_m_axi_awaddr);
        p_10_m_axi_awaddr->set_sv_netview_offsetfromdp(8103360);
        xsim_sc_channel<12, sc_dt::sc_bv<12> > *p_10_m_axi_awprot = new xsim_sc_channel<12, sc_dt::sc_bv<12> >();
        sc_inst_10->m_axi_awprot.bind(*p_10_m_axi_awprot);
        p_10_m_axi_awprot->set_sv_netview_offsetfromdp(8103416);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_m_axi_awvalid = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->m_axi_awvalid.bind(*p_10_m_axi_awvalid);
        p_10_m_axi_awvalid->set_sv_netview_offsetfromdp(8103472);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_m_axi_awready = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->m_axi_awready.bind(*p_10_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m_axi_awready);
        xsim_sc_channel<128, sc_dt::sc_bv<128> > *p_10_m_axi_wdata = new xsim_sc_channel<128, sc_dt::sc_bv<128> >();
        sc_inst_10->m_axi_wdata.bind(*p_10_m_axi_wdata);
        p_10_m_axi_wdata->set_sv_netview_offsetfromdp(8103584);
        xsim_sc_channel<16, sc_dt::sc_bv<16> > *p_10_m_axi_wstrb = new xsim_sc_channel<16, sc_dt::sc_bv<16> >();
        sc_inst_10->m_axi_wstrb.bind(*p_10_m_axi_wstrb);
        p_10_m_axi_wstrb->set_sv_netview_offsetfromdp(8103640);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_m_axi_wvalid = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->m_axi_wvalid.bind(*p_10_m_axi_wvalid);
        p_10_m_axi_wvalid->set_sv_netview_offsetfromdp(8103696);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_m_axi_wready = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->m_axi_wready.bind(*p_10_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m_axi_wready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_10_m_axi_bresp = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_10->m_axi_bresp.bind(*p_10_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m_axi_bresp);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_m_axi_bvalid = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->m_axi_bvalid.bind(*p_10_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m_axi_bvalid);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_m_axi_bready = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->m_axi_bready.bind(*p_10_m_axi_bready);
        p_10_m_axi_bready->set_sv_netview_offsetfromdp(8103920);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_10_m_axi_araddr = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_10->m_axi_araddr.bind(*p_10_m_axi_araddr);
        p_10_m_axi_araddr->set_sv_netview_offsetfromdp(8103976);
        xsim_sc_channel<12, sc_dt::sc_bv<12> > *p_10_m_axi_arprot = new xsim_sc_channel<12, sc_dt::sc_bv<12> >();
        sc_inst_10->m_axi_arprot.bind(*p_10_m_axi_arprot);
        p_10_m_axi_arprot->set_sv_netview_offsetfromdp(8104032);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_m_axi_arvalid = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->m_axi_arvalid.bind(*p_10_m_axi_arvalid);
        p_10_m_axi_arvalid->set_sv_netview_offsetfromdp(8104088);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_m_axi_arready = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->m_axi_arready.bind(*p_10_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m_axi_arready);
        xsim_sc_channel<128, sc_dt::sc_bv<128> > *p_10_m_axi_rdata = new xsim_sc_channel<128, sc_dt::sc_bv<128> >();
        sc_inst_10->m_axi_rdata.bind(*p_10_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m_axi_rdata);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_10_m_axi_rresp = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_10->m_axi_rresp.bind(*p_10_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m_axi_rresp);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_m_axi_rvalid = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->m_axi_rvalid.bind(*p_10_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m_axi_rvalid);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_m_axi_rready = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->m_axi_rready.bind(*p_10_m_axi_rready);
        p_10_m_axi_rready->set_sv_netview_offsetfromdp(8104368);
        sc_inst_11 = new pfm_dynamic_dpa_hub_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_hub");
        sc_inst_11->xsim_set_dbg_index(398);
        xsim_sc_channel<0, bool > *p_11_s_aximm_clk = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_aximm_clk.bind(*p_11_s_aximm_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_aximm_clk);
        xsim_sc_channel<0, bool > *p_11_s_aximm_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_aximm_aresetn.bind(*p_11_s_aximm_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_aximm_aresetn);
        xsim_sc_channel<0, bool > *p_11_trace_clk = new xsim_sc_channel<0, bool >();
        sc_inst_11->trace_clk.bind(*p_11_trace_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_11_trace_clk);
        xsim_sc_channel<0, bool > *p_11_trace_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_11->trace_aresetn.bind(*p_11_trace_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_11_trace_aresetn);
        xsim_sc_channel<0, bool > *p_11_axilite_clk = new xsim_sc_channel<0, bool >();
        sc_inst_11->axilite_clk.bind(*p_11_axilite_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_11_axilite_clk);
        xsim_sc_channel<0, bool > *p_11_axilite_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_11->axilite_aresetn.bind(*p_11_axilite_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_11_axilite_aresetn);
        xsim_sc_channel<0, bool > *p_11_trace_tready0 = new xsim_sc_channel<0, bool >();
        sc_inst_11->trace_tready0.bind(*p_11_trace_tready0);
        p_11_trace_tready0->set_sv_netview_offsetfromdp(8104808);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_11_trace_tdata0 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_11->trace_tdata0.bind(*p_11_trace_tdata0);
        (*_glb_hdl_sc_channel_map).push_back(p_11_trace_tdata0);
        xsim_sc_channel<0, bool > *p_11_trace_tlast0 = new xsim_sc_channel<0, bool >();
        sc_inst_11->trace_tlast0.bind(*p_11_trace_tlast0);
        (*_glb_hdl_sc_channel_map).push_back(p_11_trace_tlast0);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_11_trace_tid0 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_11->trace_tid0.bind(*p_11_trace_tid0);
        (*_glb_hdl_sc_channel_map).push_back(p_11_trace_tid0);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_11_trace_tdest0 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_11->trace_tdest0.bind(*p_11_trace_tdest0);
        (*_glb_hdl_sc_channel_map).push_back(p_11_trace_tdest0);
        xsim_sc_channel<0, bool > *p_11_trace_tvalid0 = new xsim_sc_channel<0, bool >();
        sc_inst_11->trace_tvalid0.bind(*p_11_trace_tvalid0);
        (*_glb_hdl_sc_channel_map).push_back(p_11_trace_tvalid0);
        xsim_sc_channel<0, bool > *p_11_trace_tready1 = new xsim_sc_channel<0, bool >();
        sc_inst_11->trace_tready1.bind(*p_11_trace_tready1);
        p_11_trace_tready1->set_sv_netview_offsetfromdp(8105144);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_11_trace_tdata1 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_11->trace_tdata1.bind(*p_11_trace_tdata1);
        p_11_trace_tdata1->set_sv_netview_offsetfromdp(8105200);
        xsim_sc_channel<0, bool > *p_11_trace_tlast1 = new xsim_sc_channel<0, bool >();
        sc_inst_11->trace_tlast1.bind(*p_11_trace_tlast1);
        (*_glb_hdl_sc_channel_map).push_back(p_11_trace_tlast1);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_11_trace_tid1 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_11->trace_tid1.bind(*p_11_trace_tid1);
        (*_glb_hdl_sc_channel_map).push_back(p_11_trace_tid1);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_11_trace_tdest1 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_11->trace_tdest1.bind(*p_11_trace_tdest1);
        (*_glb_hdl_sc_channel_map).push_back(p_11_trace_tdest1);
        xsim_sc_channel<0, bool > *p_11_trace_tvalid1 = new xsim_sc_channel<0, bool >();
        sc_inst_11->trace_tvalid1.bind(*p_11_trace_tvalid1);
        (*_glb_hdl_sc_channel_map).push_back(p_11_trace_tvalid1);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_11_trace_tdata2 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_11->trace_tdata2.bind(*p_11_trace_tdata2);
        (*_glb_hdl_sc_channel_map).push_back(p_11_trace_tdata2);
        xsim_sc_channel<0, bool > *p_11_trace_tready2 = new xsim_sc_channel<0, bool >();
        sc_inst_11->trace_tready2.bind(*p_11_trace_tready2);
        p_11_trace_tready2->set_sv_netview_offsetfromdp(8105536);
        xsim_sc_channel<0, bool > *p_11_trace_tlast2 = new xsim_sc_channel<0, bool >();
        sc_inst_11->trace_tlast2.bind(*p_11_trace_tlast2);
        (*_glb_hdl_sc_channel_map).push_back(p_11_trace_tlast2);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_11_trace_tid2 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_11->trace_tid2.bind(*p_11_trace_tid2);
        (*_glb_hdl_sc_channel_map).push_back(p_11_trace_tid2);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_11_trace_tdest2 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_11->trace_tdest2.bind(*p_11_trace_tdest2);
        (*_glb_hdl_sc_channel_map).push_back(p_11_trace_tdest2);
        xsim_sc_channel<0, bool > *p_11_trace_tvalid2 = new xsim_sc_channel<0, bool >();
        sc_inst_11->trace_tvalid2.bind(*p_11_trace_tvalid2);
        (*_glb_hdl_sc_channel_map).push_back(p_11_trace_tvalid2);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_11_trace_tdata3 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_11->trace_tdata3.bind(*p_11_trace_tdata3);
        (*_glb_hdl_sc_channel_map).push_back(p_11_trace_tdata3);
        xsim_sc_channel<0, bool > *p_11_trace_tready3 = new xsim_sc_channel<0, bool >();
        sc_inst_11->trace_tready3.bind(*p_11_trace_tready3);
        p_11_trace_tready3->set_sv_netview_offsetfromdp(8105872);
        xsim_sc_channel<0, bool > *p_11_trace_tlast3 = new xsim_sc_channel<0, bool >();
        sc_inst_11->trace_tlast3.bind(*p_11_trace_tlast3);
        (*_glb_hdl_sc_channel_map).push_back(p_11_trace_tlast3);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_11_trace_tid3 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_11->trace_tid3.bind(*p_11_trace_tid3);
        (*_glb_hdl_sc_channel_map).push_back(p_11_trace_tid3);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_11_trace_tdest3 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_11->trace_tdest3.bind(*p_11_trace_tdest3);
        (*_glb_hdl_sc_channel_map).push_back(p_11_trace_tdest3);
        xsim_sc_channel<0, bool > *p_11_trace_tvalid3 = new xsim_sc_channel<0, bool >();
        sc_inst_11->trace_tvalid3.bind(*p_11_trace_tvalid3);
        (*_glb_hdl_sc_channel_map).push_back(p_11_trace_tvalid3);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_11_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_11->s_axi_awaddr.bind(*p_11_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axi_awaddr);
        xsim_sc_channel<0, bool > *p_11_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axi_awvalid.bind(*p_11_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_11_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axi_awready.bind(*p_11_s_axi_awready);
        p_11_s_axi_awready->set_sv_netview_offsetfromdp(8106264);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_11_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_11->s_axi_wdata.bind(*p_11_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->s_axi_wstrb.bind(*p_11_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_11_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axi_wvalid.bind(*p_11_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_11_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axi_wready.bind(*p_11_s_axi_wready);
        p_11_s_axi_wready->set_sv_netview_offsetfromdp(8106488);
        xsim_sc_channel<0, bool > *p_11_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axi_bvalid.bind(*p_11_s_axi_bvalid);
        p_11_s_axi_bvalid->set_sv_netview_offsetfromdp(8106544);
        xsim_sc_channel<0, bool > *p_11_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axi_bready.bind(*p_11_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axi_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->s_axi_bresp.bind(*p_11_s_axi_bresp);
        p_11_s_axi_bresp->set_sv_netview_offsetfromdp(8106656);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_11_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_11->s_axi_araddr.bind(*p_11_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axi_araddr);
        xsim_sc_channel<0, bool > *p_11_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axi_arvalid.bind(*p_11_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_11_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axi_arready.bind(*p_11_s_axi_arready);
        p_11_s_axi_arready->set_sv_netview_offsetfromdp(8106824);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_11_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_11->s_axi_rdata.bind(*p_11_s_axi_rdata);
        p_11_s_axi_rdata->set_sv_netview_offsetfromdp(8106880);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->s_axi_rresp.bind(*p_11_s_axi_rresp);
        p_11_s_axi_rresp->set_sv_netview_offsetfromdp(8106936);
        xsim_sc_channel<0, bool > *p_11_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axi_rvalid.bind(*p_11_s_axi_rvalid);
        p_11_s_axi_rvalid->set_sv_netview_offsetfromdp(8106992);
        xsim_sc_channel<0, bool > *p_11_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axi_rready.bind(*p_11_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axi_rready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_11_s_axihub_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_11->s_axihub_awaddr.bind(*p_11_s_axihub_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axihub_awaddr);
        xsim_sc_channel<0, bool > *p_11_s_axihub_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axihub_awvalid.bind(*p_11_s_axihub_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axihub_awvalid);
        xsim_sc_channel<0, bool > *p_11_s_axihub_awready = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axihub_awready.bind(*p_11_s_axihub_awready);
        p_11_s_axihub_awready->set_sv_netview_offsetfromdp(8107216);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_11_s_axihub_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_11->s_axihub_wdata.bind(*p_11_s_axihub_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axihub_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_s_axihub_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->s_axihub_wstrb.bind(*p_11_s_axihub_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axihub_wstrb);
        xsim_sc_channel<0, bool > *p_11_s_axihub_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axihub_wvalid.bind(*p_11_s_axihub_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axihub_wvalid);
        xsim_sc_channel<0, bool > *p_11_s_axihub_wready = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axihub_wready.bind(*p_11_s_axihub_wready);
        p_11_s_axihub_wready->set_sv_netview_offsetfromdp(8107440);
        xsim_sc_channel<0, bool > *p_11_s_axihub_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axihub_bvalid.bind(*p_11_s_axihub_bvalid);
        p_11_s_axihub_bvalid->set_sv_netview_offsetfromdp(8107496);
        xsim_sc_channel<0, bool > *p_11_s_axihub_bready = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axihub_bready.bind(*p_11_s_axihub_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axihub_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_s_axihub_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->s_axihub_bresp.bind(*p_11_s_axihub_bresp);
        p_11_s_axihub_bresp->set_sv_netview_offsetfromdp(8107608);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_11_s_axihub_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_11->s_axihub_araddr.bind(*p_11_s_axihub_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axihub_araddr);
        xsim_sc_channel<0, bool > *p_11_s_axihub_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axihub_arvalid.bind(*p_11_s_axihub_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axihub_arvalid);
        xsim_sc_channel<0, bool > *p_11_s_axihub_arready = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axihub_arready.bind(*p_11_s_axihub_arready);
        p_11_s_axihub_arready->set_sv_netview_offsetfromdp(8107776);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_11_s_axihub_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_11->s_axihub_rdata.bind(*p_11_s_axihub_rdata);
        p_11_s_axihub_rdata->set_sv_netview_offsetfromdp(8107832);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_s_axihub_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->s_axihub_rresp.bind(*p_11_s_axihub_rresp);
        p_11_s_axihub_rresp->set_sv_netview_offsetfromdp(8107888);
        xsim_sc_channel<0, bool > *p_11_s_axihub_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axihub_rvalid.bind(*p_11_s_axihub_rvalid);
        p_11_s_axihub_rvalid->set_sv_netview_offsetfromdp(8107944);
        xsim_sc_channel<0, bool > *p_11_s_axihub_rready = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axihub_rready.bind(*p_11_s_axihub_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axihub_rready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_11_s_aximm_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_11->s_aximm_awaddr.bind(*p_11_s_aximm_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_aximm_awaddr);
        xsim_sc_channel<0, bool > *p_11_s_aximm_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_aximm_awvalid.bind(*p_11_s_aximm_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_aximm_awvalid);
        xsim_sc_channel<0, bool > *p_11_s_aximm_awready = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_aximm_awready.bind(*p_11_s_aximm_awready);
        p_11_s_aximm_awready->set_sv_netview_offsetfromdp(8108168);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_11_s_aximm_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_11->s_aximm_awlen.bind(*p_11_s_aximm_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_aximm_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_11_s_aximm_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_11->s_aximm_awsize.bind(*p_11_s_aximm_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_aximm_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_s_aximm_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->s_aximm_awburst.bind(*p_11_s_aximm_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_aximm_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_s_aximm_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->s_aximm_awid.bind(*p_11_s_aximm_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_aximm_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_11_s_aximm_wdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_11->s_aximm_wdata.bind(*p_11_s_aximm_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_aximm_wdata);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_11_s_aximm_wstrb = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_11->s_aximm_wstrb.bind(*p_11_s_aximm_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_aximm_wstrb);
        xsim_sc_channel<0, bool > *p_11_s_aximm_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_aximm_wvalid.bind(*p_11_s_aximm_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_aximm_wvalid);
        xsim_sc_channel<0, bool > *p_11_s_aximm_wready = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_aximm_wready.bind(*p_11_s_aximm_wready);
        p_11_s_aximm_wready->set_sv_netview_offsetfromdp(8108616);
        xsim_sc_channel<0, bool > *p_11_s_aximm_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_aximm_bvalid.bind(*p_11_s_aximm_bvalid);
        p_11_s_aximm_bvalid->set_sv_netview_offsetfromdp(8108672);
        xsim_sc_channel<0, bool > *p_11_s_aximm_bready = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_aximm_bready.bind(*p_11_s_aximm_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_aximm_bready);
        xsim_sc_channel<0, bool > *p_11_s_aximm_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_aximm_wlast.bind(*p_11_s_aximm_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_aximm_wlast);
        xsim_sc_channel<0, bool > *p_11_s_aximm_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_aximm_rlast.bind(*p_11_s_aximm_rlast);
        p_11_s_aximm_rlast->set_sv_netview_offsetfromdp(8108840);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_s_aximm_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->s_aximm_bresp.bind(*p_11_s_aximm_bresp);
        p_11_s_aximm_bresp->set_sv_netview_offsetfromdp(8108896);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_s_aximm_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->s_aximm_bid.bind(*p_11_s_aximm_bid);
        p_11_s_aximm_bid->set_sv_netview_offsetfromdp(8108952);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_11_s_aximm_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_11->s_aximm_araddr.bind(*p_11_s_aximm_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_aximm_araddr);
        xsim_sc_channel<0, bool > *p_11_s_aximm_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_aximm_arvalid.bind(*p_11_s_aximm_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_aximm_arvalid);
        xsim_sc_channel<0, bool > *p_11_s_aximm_arready = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_aximm_arready.bind(*p_11_s_aximm_arready);
        p_11_s_aximm_arready->set_sv_netview_offsetfromdp(8109120);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_11_s_aximm_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_11->s_aximm_arlen.bind(*p_11_s_aximm_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_aximm_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_11_s_aximm_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_11->s_aximm_arsize.bind(*p_11_s_aximm_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_aximm_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_s_aximm_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->s_aximm_arburst.bind(*p_11_s_aximm_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_aximm_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_s_aximm_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->s_aximm_arid.bind(*p_11_s_aximm_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_aximm_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_11_s_aximm_rdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_11->s_aximm_rdata.bind(*p_11_s_aximm_rdata);
        p_11_s_aximm_rdata->set_sv_netview_offsetfromdp(8109400);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_s_aximm_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->s_aximm_rid.bind(*p_11_s_aximm_rid);
        p_11_s_aximm_rid->set_sv_netview_offsetfromdp(8109456);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_s_aximm_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->s_aximm_rresp.bind(*p_11_s_aximm_rresp);
        p_11_s_aximm_rresp->set_sv_netview_offsetfromdp(8109512);
        xsim_sc_channel<0, bool > *p_11_s_aximm_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_aximm_rvalid.bind(*p_11_s_aximm_rvalid);
        p_11_s_aximm_rvalid->set_sv_netview_offsetfromdp(8109568);
        xsim_sc_channel<0, bool > *p_11_s_aximm_rready = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_aximm_rready.bind(*p_11_s_aximm_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_aximm_rready);
        sc_inst_12 = new pfm_dynamic_dpa_mon0_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_mon0");
        sc_inst_12->xsim_set_dbg_index(399);
        xsim_sc_channel<0, bool > *p_12_mon_clk = new xsim_sc_channel<0, bool >();
        sc_inst_12->mon_clk.bind(*p_12_mon_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_12_mon_clk);
        xsim_sc_channel<0, bool > *p_12_mon_resetn = new xsim_sc_channel<0, bool >();
        sc_inst_12->mon_resetn.bind(*p_12_mon_resetn);
        (*_glb_hdl_sc_channel_map).push_back(p_12_mon_resetn);
        xsim_sc_channel<0, bool > *p_12_trace_clk = new xsim_sc_channel<0, bool >();
        sc_inst_12->trace_clk.bind(*p_12_trace_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_12_trace_clk);
        xsim_sc_channel<0, bool > *p_12_trace_rst = new xsim_sc_channel<0, bool >();
        sc_inst_12->trace_rst.bind(*p_12_trace_rst);
        (*_glb_hdl_sc_channel_map).push_back(p_12_trace_rst);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_12_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_12->s_axi_awaddr.bind(*p_12_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_axi_awaddr);
        xsim_sc_channel<0, bool > *p_12_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->s_axi_awvalid.bind(*p_12_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_12_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_12->s_axi_awready.bind(*p_12_s_axi_awready);
        p_12_s_axi_awready->set_sv_netview_offsetfromdp(8110064);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_12_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_12->s_axi_wdata.bind(*p_12_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->s_axi_wstrb.bind(*p_12_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_12_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->s_axi_wvalid.bind(*p_12_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_12_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_12->s_axi_wready.bind(*p_12_s_axi_wready);
        p_12_s_axi_wready->set_sv_netview_offsetfromdp(8110288);
        xsim_sc_channel<0, bool > *p_12_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->s_axi_bvalid.bind(*p_12_s_axi_bvalid);
        p_12_s_axi_bvalid->set_sv_netview_offsetfromdp(8110344);
        xsim_sc_channel<0, bool > *p_12_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_12->s_axi_bready.bind(*p_12_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_axi_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->s_axi_bresp.bind(*p_12_s_axi_bresp);
        p_12_s_axi_bresp->set_sv_netview_offsetfromdp(8110456);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_12_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_12->s_axi_araddr.bind(*p_12_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_axi_araddr);
        xsim_sc_channel<0, bool > *p_12_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->s_axi_arvalid.bind(*p_12_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_12_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_12->s_axi_arready.bind(*p_12_s_axi_arready);
        p_12_s_axi_arready->set_sv_netview_offsetfromdp(8110624);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_12_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_12->s_axi_rdata.bind(*p_12_s_axi_rdata);
        p_12_s_axi_rdata->set_sv_netview_offsetfromdp(8110680);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->s_axi_rresp.bind(*p_12_s_axi_rresp);
        p_12_s_axi_rresp->set_sv_netview_offsetfromdp(8110736);
        xsim_sc_channel<0, bool > *p_12_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->s_axi_rvalid.bind(*p_12_s_axi_rvalid);
        p_12_s_axi_rvalid->set_sv_netview_offsetfromdp(8110792);
        xsim_sc_channel<0, bool > *p_12_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_12->s_axi_rready.bind(*p_12_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_axi_rready);
        xsim_sc_channel<0, bool > *p_12_mon_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_12->mon_AWVALID.bind(*p_12_mon_AWVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_12_mon_AWVALID);
        xsim_sc_channel<0, bool > *p_12_mon_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_12->mon_AWREADY.bind(*p_12_mon_AWREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_12_mon_AWREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_12_mon_AWADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_12->mon_AWADDR.bind(*p_12_mon_AWADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_12_mon_AWADDR);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_mon_AWID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->mon_AWID.bind(*p_12_mon_AWID);
        (*_glb_hdl_sc_channel_map).push_back(p_12_mon_AWID);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_12_mon_AWLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_12->mon_AWLEN.bind(*p_12_mon_AWLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_12_mon_AWLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_mon_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->mon_AWSIZE.bind(*p_12_mon_AWSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_12_mon_AWSIZE);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_mon_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->mon_AWBURST.bind(*p_12_mon_AWBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_12_mon_AWBURST);
        xsim_sc_channel<0, bool > *p_12_mon_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_12->mon_WVALID.bind(*p_12_mon_WVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_12_mon_WVALID);
        xsim_sc_channel<0, bool > *p_12_mon_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_12->mon_WREADY.bind(*p_12_mon_WREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_12_mon_WREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_12_mon_WDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_12->mon_WDATA.bind(*p_12_mon_WDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_12_mon_WDATA);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_12_mon_WSTRB = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_12->mon_WSTRB.bind(*p_12_mon_WSTRB);
        (*_glb_hdl_sc_channel_map).push_back(p_12_mon_WSTRB);
        xsim_sc_channel<0, bool > *p_12_mon_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_12->mon_WLAST.bind(*p_12_mon_WLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_12_mon_WLAST);
        xsim_sc_channel<0, bool > *p_12_mon_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_12->mon_ARVALID.bind(*p_12_mon_ARVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_12_mon_ARVALID);
        xsim_sc_channel<0, bool > *p_12_mon_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_12->mon_ARREADY.bind(*p_12_mon_ARREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_12_mon_ARREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_12_mon_ARADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_12->mon_ARADDR.bind(*p_12_mon_ARADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_12_mon_ARADDR);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_mon_ARID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->mon_ARID.bind(*p_12_mon_ARID);
        (*_glb_hdl_sc_channel_map).push_back(p_12_mon_ARID);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_12_mon_ARLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_12->mon_ARLEN.bind(*p_12_mon_ARLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_12_mon_ARLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_mon_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->mon_ARSIZE.bind(*p_12_mon_ARSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_12_mon_ARSIZE);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_mon_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->mon_ARBURST.bind(*p_12_mon_ARBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_12_mon_ARBURST);
        xsim_sc_channel<0, bool > *p_12_mon_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_12->mon_RVALID.bind(*p_12_mon_RVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_12_mon_RVALID);
        xsim_sc_channel<0, bool > *p_12_mon_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_12->mon_RREADY.bind(*p_12_mon_RREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_12_mon_RREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_12_mon_RDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_12->mon_RDATA.bind(*p_12_mon_RDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_12_mon_RDATA);
        xsim_sc_channel<0, bool > *p_12_mon_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_12->mon_RLAST.bind(*p_12_mon_RLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_12_mon_RLAST);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_mon_RID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->mon_RID.bind(*p_12_mon_RID);
        (*_glb_hdl_sc_channel_map).push_back(p_12_mon_RID);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_mon_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->mon_RRESP.bind(*p_12_mon_RRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_12_mon_RRESP);
        xsim_sc_channel<0, bool > *p_12_mon_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_12->mon_BVALID.bind(*p_12_mon_BVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_12_mon_BVALID);
        xsim_sc_channel<0, bool > *p_12_mon_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_12->mon_BREADY.bind(*p_12_mon_BREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_12_mon_BREADY);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_mon_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->mon_BRESP.bind(*p_12_mon_BRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_12_mon_BRESP);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_mon_BID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->mon_BID.bind(*p_12_mon_BID);
        (*_glb_hdl_sc_channel_map).push_back(p_12_mon_BID);
        xsim_sc_channel<0, bool > *p_12_m_axis_rd_tready = new xsim_sc_channel<0, bool >();
        sc_inst_12->m_axis_rd_tready.bind(*p_12_m_axis_rd_tready);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m_axis_rd_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_12_m_axis_rd_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_12->m_axis_rd_tdata.bind(*p_12_m_axis_rd_tdata);
        p_12_m_axis_rd_tdata->set_sv_netview_offsetfromdp(8112584);
        xsim_sc_channel<0, bool > *p_12_m_axis_rd_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_12->m_axis_rd_tlast.bind(*p_12_m_axis_rd_tlast);
        p_12_m_axis_rd_tlast->set_sv_netview_offsetfromdp(8112640);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_12_m_axis_rd_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_12->m_axis_rd_tid.bind(*p_12_m_axis_rd_tid);
        p_12_m_axis_rd_tid->set_sv_netview_offsetfromdp(8112696);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_12_m_axis_rd_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_12->m_axis_rd_tdest.bind(*p_12_m_axis_rd_tdest);
        p_12_m_axis_rd_tdest->set_sv_netview_offsetfromdp(8112752);
        xsim_sc_channel<0, bool > *p_12_m_axis_wr_tready = new xsim_sc_channel<0, bool >();
        sc_inst_12->m_axis_wr_tready.bind(*p_12_m_axis_wr_tready);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m_axis_wr_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_12_m_axis_wr_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_12->m_axis_wr_tdata.bind(*p_12_m_axis_wr_tdata);
        p_12_m_axis_wr_tdata->set_sv_netview_offsetfromdp(8112864);
        xsim_sc_channel<0, bool > *p_12_m_axis_wr_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_12->m_axis_wr_tlast.bind(*p_12_m_axis_wr_tlast);
        p_12_m_axis_wr_tlast->set_sv_netview_offsetfromdp(8112920);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_12_m_axis_wr_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_12->m_axis_wr_tid.bind(*p_12_m_axis_wr_tid);
        p_12_m_axis_wr_tid->set_sv_netview_offsetfromdp(8112976);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_12_m_axis_wr_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_12->m_axis_wr_tdest.bind(*p_12_m_axis_wr_tdest);
        p_12_m_axis_wr_tdest->set_sv_netview_offsetfromdp(8113032);
        xsim_sc_channel<0, bool > *p_12_m_axis_wr_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->m_axis_wr_tvalid.bind(*p_12_m_axis_wr_tvalid);
        p_12_m_axis_wr_tvalid->set_sv_netview_offsetfromdp(8113088);
        xsim_sc_channel<0, bool > *p_12_m_axis_rd_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->m_axis_rd_tvalid.bind(*p_12_m_axis_rd_tvalid);
        p_12_m_axis_rd_tvalid->set_sv_netview_offsetfromdp(8113144);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_12_s_axi_awaddr_mon = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_12->s_axi_awaddr_mon.bind(*p_12_s_axi_awaddr_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_axi_awaddr_mon);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_s_axi_awprot_mon = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->s_axi_awprot_mon.bind(*p_12_s_axi_awprot_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_axi_awprot_mon);
        xsim_sc_channel<0, bool > *p_12_s_axi_awvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_12->s_axi_awvalid_mon.bind(*p_12_s_axi_awvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_axi_awvalid_mon);
        xsim_sc_channel<0, bool > *p_12_s_axi_awready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_12->s_axi_awready_mon.bind(*p_12_s_axi_awready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_axi_awready_mon);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_12_s_axi_wdata_mon = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_12->s_axi_wdata_mon.bind(*p_12_s_axi_wdata_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_axi_wdata_mon);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_s_axi_wstrb_mon = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->s_axi_wstrb_mon.bind(*p_12_s_axi_wstrb_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_axi_wstrb_mon);
        xsim_sc_channel<0, bool > *p_12_s_axi_wvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_12->s_axi_wvalid_mon.bind(*p_12_s_axi_wvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_axi_wvalid_mon);
        xsim_sc_channel<0, bool > *p_12_s_axi_wready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_12->s_axi_wready_mon.bind(*p_12_s_axi_wready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_axi_wready_mon);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_s_axi_bresp_mon = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->s_axi_bresp_mon.bind(*p_12_s_axi_bresp_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_axi_bresp_mon);
        xsim_sc_channel<0, bool > *p_12_s_axi_bvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_12->s_axi_bvalid_mon.bind(*p_12_s_axi_bvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_axi_bvalid_mon);
        xsim_sc_channel<0, bool > *p_12_s_axi_bready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_12->s_axi_bready_mon.bind(*p_12_s_axi_bready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_axi_bready_mon);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_12_s_axi_araddr_mon = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_12->s_axi_araddr_mon.bind(*p_12_s_axi_araddr_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_axi_araddr_mon);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_s_axi_arprot_mon = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->s_axi_arprot_mon.bind(*p_12_s_axi_arprot_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_axi_arprot_mon);
        xsim_sc_channel<0, bool > *p_12_s_axi_arvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_12->s_axi_arvalid_mon.bind(*p_12_s_axi_arvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_axi_arvalid_mon);
        xsim_sc_channel<0, bool > *p_12_s_axi_arready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_12->s_axi_arready_mon.bind(*p_12_s_axi_arready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_axi_arready_mon);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_12_s_axi_rdata_mon = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_12->s_axi_rdata_mon.bind(*p_12_s_axi_rdata_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_axi_rdata_mon);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_s_axi_rresp_mon = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->s_axi_rresp_mon.bind(*p_12_s_axi_rresp_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_axi_rresp_mon);
        xsim_sc_channel<0, bool > *p_12_s_axi_rvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_12->s_axi_rvalid_mon.bind(*p_12_s_axi_rvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_axi_rvalid_mon);
        xsim_sc_channel<0, bool > *p_12_s_axi_rready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_12->s_axi_rready_mon.bind(*p_12_s_axi_rready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_axi_rready_mon);
        sc_inst_13 = new pfm_dynamic_dpa_mon1_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_mon1");
        sc_inst_13->xsim_set_dbg_index(400);
        xsim_sc_channel<0, bool > *p_13_mon_clk = new xsim_sc_channel<0, bool >();
        sc_inst_13->mon_clk.bind(*p_13_mon_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_13_mon_clk);
        xsim_sc_channel<0, bool > *p_13_mon_resetn = new xsim_sc_channel<0, bool >();
        sc_inst_13->mon_resetn.bind(*p_13_mon_resetn);
        (*_glb_hdl_sc_channel_map).push_back(p_13_mon_resetn);
        xsim_sc_channel<0, bool > *p_13_trace_clk = new xsim_sc_channel<0, bool >();
        sc_inst_13->trace_clk.bind(*p_13_trace_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_13_trace_clk);
        xsim_sc_channel<0, bool > *p_13_trace_rst = new xsim_sc_channel<0, bool >();
        sc_inst_13->trace_rst.bind(*p_13_trace_rst);
        (*_glb_hdl_sc_channel_map).push_back(p_13_trace_rst);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->s_axi_awaddr.bind(*p_13_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_awaddr);
        xsim_sc_channel<0, bool > *p_13_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axi_awvalid.bind(*p_13_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_13_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axi_awready.bind(*p_13_s_axi_awready);
        p_13_s_axi_awready->set_sv_netview_offsetfromdp(8114648);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_13_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_13->s_axi_wdata.bind(*p_13_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->s_axi_wstrb.bind(*p_13_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_13_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axi_wvalid.bind(*p_13_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_13_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axi_wready.bind(*p_13_s_axi_wready);
        p_13_s_axi_wready->set_sv_netview_offsetfromdp(8114872);
        xsim_sc_channel<0, bool > *p_13_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axi_bvalid.bind(*p_13_s_axi_bvalid);
        p_13_s_axi_bvalid->set_sv_netview_offsetfromdp(8114928);
        xsim_sc_channel<0, bool > *p_13_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axi_bready.bind(*p_13_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->s_axi_bresp.bind(*p_13_s_axi_bresp);
        p_13_s_axi_bresp->set_sv_netview_offsetfromdp(8115040);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->s_axi_araddr.bind(*p_13_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_araddr);
        xsim_sc_channel<0, bool > *p_13_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axi_arvalid.bind(*p_13_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_13_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axi_arready.bind(*p_13_s_axi_arready);
        p_13_s_axi_arready->set_sv_netview_offsetfromdp(8115208);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_13_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_13->s_axi_rdata.bind(*p_13_s_axi_rdata);
        p_13_s_axi_rdata->set_sv_netview_offsetfromdp(8115264);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->s_axi_rresp.bind(*p_13_s_axi_rresp);
        p_13_s_axi_rresp->set_sv_netview_offsetfromdp(8115320);
        xsim_sc_channel<0, bool > *p_13_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axi_rvalid.bind(*p_13_s_axi_rvalid);
        p_13_s_axi_rvalid->set_sv_netview_offsetfromdp(8115376);
        xsim_sc_channel<0, bool > *p_13_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axi_rready.bind(*p_13_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_rready);
        xsim_sc_channel<0, bool > *p_13_mon_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_13->mon_AWVALID.bind(*p_13_mon_AWVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_13_mon_AWVALID);
        xsim_sc_channel<0, bool > *p_13_mon_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_13->mon_AWREADY.bind(*p_13_mon_AWREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_13_mon_AWREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_13_mon_AWADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_13->mon_AWADDR.bind(*p_13_mon_AWADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_13_mon_AWADDR);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_mon_AWID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->mon_AWID.bind(*p_13_mon_AWID);
        (*_glb_hdl_sc_channel_map).push_back(p_13_mon_AWID);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_mon_AWLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->mon_AWLEN.bind(*p_13_mon_AWLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_13_mon_AWLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_mon_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->mon_AWSIZE.bind(*p_13_mon_AWSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_13_mon_AWSIZE);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_mon_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->mon_AWBURST.bind(*p_13_mon_AWBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_13_mon_AWBURST);
        xsim_sc_channel<0, bool > *p_13_mon_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_13->mon_WVALID.bind(*p_13_mon_WVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_13_mon_WVALID);
        xsim_sc_channel<0, bool > *p_13_mon_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_13->mon_WREADY.bind(*p_13_mon_WREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_13_mon_WREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_13_mon_WDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_13->mon_WDATA.bind(*p_13_mon_WDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_13_mon_WDATA);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_13_mon_WSTRB = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_13->mon_WSTRB.bind(*p_13_mon_WSTRB);
        (*_glb_hdl_sc_channel_map).push_back(p_13_mon_WSTRB);
        xsim_sc_channel<0, bool > *p_13_mon_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_13->mon_WLAST.bind(*p_13_mon_WLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_13_mon_WLAST);
        xsim_sc_channel<0, bool > *p_13_mon_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_13->mon_ARVALID.bind(*p_13_mon_ARVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_13_mon_ARVALID);
        xsim_sc_channel<0, bool > *p_13_mon_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_13->mon_ARREADY.bind(*p_13_mon_ARREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_13_mon_ARREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_13_mon_ARADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_13->mon_ARADDR.bind(*p_13_mon_ARADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_13_mon_ARADDR);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_mon_ARID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->mon_ARID.bind(*p_13_mon_ARID);
        (*_glb_hdl_sc_channel_map).push_back(p_13_mon_ARID);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_mon_ARLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->mon_ARLEN.bind(*p_13_mon_ARLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_13_mon_ARLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_mon_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->mon_ARSIZE.bind(*p_13_mon_ARSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_13_mon_ARSIZE);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_mon_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->mon_ARBURST.bind(*p_13_mon_ARBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_13_mon_ARBURST);
        xsim_sc_channel<0, bool > *p_13_mon_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_13->mon_RVALID.bind(*p_13_mon_RVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_13_mon_RVALID);
        xsim_sc_channel<0, bool > *p_13_mon_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_13->mon_RREADY.bind(*p_13_mon_RREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_13_mon_RREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_13_mon_RDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_13->mon_RDATA.bind(*p_13_mon_RDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_13_mon_RDATA);
        xsim_sc_channel<0, bool > *p_13_mon_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_13->mon_RLAST.bind(*p_13_mon_RLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_13_mon_RLAST);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_mon_RID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->mon_RID.bind(*p_13_mon_RID);
        (*_glb_hdl_sc_channel_map).push_back(p_13_mon_RID);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_mon_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->mon_RRESP.bind(*p_13_mon_RRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_13_mon_RRESP);
        xsim_sc_channel<0, bool > *p_13_mon_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_13->mon_BVALID.bind(*p_13_mon_BVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_13_mon_BVALID);
        xsim_sc_channel<0, bool > *p_13_mon_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_13->mon_BREADY.bind(*p_13_mon_BREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_13_mon_BREADY);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_mon_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->mon_BRESP.bind(*p_13_mon_BRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_13_mon_BRESP);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_mon_BID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->mon_BID.bind(*p_13_mon_BID);
        (*_glb_hdl_sc_channel_map).push_back(p_13_mon_BID);
        xsim_sc_channel<0, bool > *p_13_m_axis_rd_tready = new xsim_sc_channel<0, bool >();
        sc_inst_13->m_axis_rd_tready.bind(*p_13_m_axis_rd_tready);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m_axis_rd_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_13_m_axis_rd_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_13->m_axis_rd_tdata.bind(*p_13_m_axis_rd_tdata);
        p_13_m_axis_rd_tdata->set_sv_netview_offsetfromdp(8117168);
        xsim_sc_channel<0, bool > *p_13_m_axis_rd_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_13->m_axis_rd_tlast.bind(*p_13_m_axis_rd_tlast);
        p_13_m_axis_rd_tlast->set_sv_netview_offsetfromdp(8117224);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_m_axis_rd_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->m_axis_rd_tid.bind(*p_13_m_axis_rd_tid);
        p_13_m_axis_rd_tid->set_sv_netview_offsetfromdp(8117280);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_m_axis_rd_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->m_axis_rd_tdest.bind(*p_13_m_axis_rd_tdest);
        p_13_m_axis_rd_tdest->set_sv_netview_offsetfromdp(8117336);
        xsim_sc_channel<0, bool > *p_13_m_axis_wr_tready = new xsim_sc_channel<0, bool >();
        sc_inst_13->m_axis_wr_tready.bind(*p_13_m_axis_wr_tready);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m_axis_wr_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_13_m_axis_wr_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_13->m_axis_wr_tdata.bind(*p_13_m_axis_wr_tdata);
        p_13_m_axis_wr_tdata->set_sv_netview_offsetfromdp(8117448);
        xsim_sc_channel<0, bool > *p_13_m_axis_wr_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_13->m_axis_wr_tlast.bind(*p_13_m_axis_wr_tlast);
        p_13_m_axis_wr_tlast->set_sv_netview_offsetfromdp(8117504);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_m_axis_wr_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->m_axis_wr_tid.bind(*p_13_m_axis_wr_tid);
        p_13_m_axis_wr_tid->set_sv_netview_offsetfromdp(8117560);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_m_axis_wr_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->m_axis_wr_tdest.bind(*p_13_m_axis_wr_tdest);
        p_13_m_axis_wr_tdest->set_sv_netview_offsetfromdp(8117616);
        xsim_sc_channel<0, bool > *p_13_m_axis_wr_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->m_axis_wr_tvalid.bind(*p_13_m_axis_wr_tvalid);
        p_13_m_axis_wr_tvalid->set_sv_netview_offsetfromdp(8117672);
        xsim_sc_channel<0, bool > *p_13_m_axis_rd_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->m_axis_rd_tvalid.bind(*p_13_m_axis_rd_tvalid);
        p_13_m_axis_rd_tvalid->set_sv_netview_offsetfromdp(8117728);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_s_axi_awaddr_mon = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->s_axi_awaddr_mon.bind(*p_13_s_axi_awaddr_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_awaddr_mon);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_s_axi_awprot_mon = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->s_axi_awprot_mon.bind(*p_13_s_axi_awprot_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_awprot_mon);
        xsim_sc_channel<0, bool > *p_13_s_axi_awvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axi_awvalid_mon.bind(*p_13_s_axi_awvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_awvalid_mon);
        xsim_sc_channel<0, bool > *p_13_s_axi_awready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axi_awready_mon.bind(*p_13_s_axi_awready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_awready_mon);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_13_s_axi_wdata_mon = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_13->s_axi_wdata_mon.bind(*p_13_s_axi_wdata_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_wdata_mon);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_s_axi_wstrb_mon = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->s_axi_wstrb_mon.bind(*p_13_s_axi_wstrb_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_wstrb_mon);
        xsim_sc_channel<0, bool > *p_13_s_axi_wvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axi_wvalid_mon.bind(*p_13_s_axi_wvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_wvalid_mon);
        xsim_sc_channel<0, bool > *p_13_s_axi_wready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axi_wready_mon.bind(*p_13_s_axi_wready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_wready_mon);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_s_axi_bresp_mon = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->s_axi_bresp_mon.bind(*p_13_s_axi_bresp_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_bresp_mon);
        xsim_sc_channel<0, bool > *p_13_s_axi_bvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axi_bvalid_mon.bind(*p_13_s_axi_bvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_bvalid_mon);
        xsim_sc_channel<0, bool > *p_13_s_axi_bready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axi_bready_mon.bind(*p_13_s_axi_bready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_bready_mon);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_s_axi_araddr_mon = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->s_axi_araddr_mon.bind(*p_13_s_axi_araddr_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_araddr_mon);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_s_axi_arprot_mon = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->s_axi_arprot_mon.bind(*p_13_s_axi_arprot_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_arprot_mon);
        xsim_sc_channel<0, bool > *p_13_s_axi_arvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axi_arvalid_mon.bind(*p_13_s_axi_arvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_arvalid_mon);
        xsim_sc_channel<0, bool > *p_13_s_axi_arready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axi_arready_mon.bind(*p_13_s_axi_arready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_arready_mon);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_13_s_axi_rdata_mon = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_13->s_axi_rdata_mon.bind(*p_13_s_axi_rdata_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_rdata_mon);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_s_axi_rresp_mon = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->s_axi_rresp_mon.bind(*p_13_s_axi_rresp_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_rresp_mon);
        xsim_sc_channel<0, bool > *p_13_s_axi_rvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axi_rvalid_mon.bind(*p_13_s_axi_rvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_rvalid_mon);
        xsim_sc_channel<0, bool > *p_13_s_axi_rready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axi_rready_mon.bind(*p_13_s_axi_rready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_rready_mon);
        sc_inst_14 = new bd_5dca_sci(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.hmss_0.inst.bd_5dca_sci_inst");
        sc_inst_14->xsim_set_dbg_index(893);
        sc_inst_15 = new bd_5dca_hbm_inst_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.hmss_0.inst.hbm_inst");
        sc_inst_15->xsim_set_dbg_index(894);
        xsim_sc_channel<0, bool > *p_15_HBM_REF_CLK_0 = new xsim_sc_channel<0, bool >();
        sc_inst_15->HBM_REF_CLK_0.bind(*p_15_HBM_REF_CLK_0);
        (*_glb_hdl_sc_channel_map).push_back(p_15_HBM_REF_CLK_0);
        xsim_sc_channel<0, bool > *p_15_AXI_00_ACLK = new xsim_sc_channel<0, bool >();
        sc_inst_15->AXI_00_ACLK.bind(*p_15_AXI_00_ACLK);
        (*_glb_hdl_sc_channel_map).push_back(p_15_AXI_00_ACLK);
        xsim_sc_channel<0, bool > *p_15_AXI_00_ARESET_N = new xsim_sc_channel<0, bool >();
        sc_inst_15->AXI_00_ARESET_N.bind(*p_15_AXI_00_ARESET_N);
        (*_glb_hdl_sc_channel_map).push_back(p_15_AXI_00_ARESET_N);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_15_AXI_00_ARADDR = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_15->AXI_00_ARADDR.bind(*p_15_AXI_00_ARADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_15_AXI_00_ARADDR);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_AXI_00_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->AXI_00_ARBURST.bind(*p_15_AXI_00_ARBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_15_AXI_00_ARBURST);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_15_AXI_00_ARID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_15->AXI_00_ARID.bind(*p_15_AXI_00_ARID);
        (*_glb_hdl_sc_channel_map).push_back(p_15_AXI_00_ARID);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_AXI_00_ARLEN = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->AXI_00_ARLEN.bind(*p_15_AXI_00_ARLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_15_AXI_00_ARLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_AXI_00_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->AXI_00_ARSIZE.bind(*p_15_AXI_00_ARSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_15_AXI_00_ARSIZE);
        xsim_sc_channel<0, bool > *p_15_AXI_00_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_15->AXI_00_ARVALID.bind(*p_15_AXI_00_ARVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_15_AXI_00_ARVALID);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_15_AXI_00_AWADDR = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_15->AXI_00_AWADDR.bind(*p_15_AXI_00_AWADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_15_AXI_00_AWADDR);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_AXI_00_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->AXI_00_AWBURST.bind(*p_15_AXI_00_AWBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_15_AXI_00_AWBURST);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_15_AXI_00_AWID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_15->AXI_00_AWID.bind(*p_15_AXI_00_AWID);
        (*_glb_hdl_sc_channel_map).push_back(p_15_AXI_00_AWID);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_AXI_00_AWLEN = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->AXI_00_AWLEN.bind(*p_15_AXI_00_AWLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_15_AXI_00_AWLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_AXI_00_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->AXI_00_AWSIZE.bind(*p_15_AXI_00_AWSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_15_AXI_00_AWSIZE);
        xsim_sc_channel<0, bool > *p_15_AXI_00_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_15->AXI_00_AWVALID.bind(*p_15_AXI_00_AWVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_15_AXI_00_AWVALID);
        xsim_sc_channel<0, bool > *p_15_AXI_00_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_15->AXI_00_RREADY.bind(*p_15_AXI_00_RREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_15_AXI_00_RREADY);
        xsim_sc_channel<0, bool > *p_15_AXI_00_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_15->AXI_00_BREADY.bind(*p_15_AXI_00_BREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_15_AXI_00_BREADY);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_15_AXI_00_WDATA = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_15->AXI_00_WDATA.bind(*p_15_AXI_00_WDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_15_AXI_00_WDATA);
        xsim_sc_channel<0, bool > *p_15_AXI_00_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_15->AXI_00_WLAST.bind(*p_15_AXI_00_WLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_15_AXI_00_WLAST);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_15_AXI_00_WSTRB = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_15->AXI_00_WSTRB.bind(*p_15_AXI_00_WSTRB);
        (*_glb_hdl_sc_channel_map).push_back(p_15_AXI_00_WSTRB);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_15_AXI_00_WDATA_PARITY = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_15->AXI_00_WDATA_PARITY.bind(*p_15_AXI_00_WDATA_PARITY);
        (*_glb_hdl_sc_channel_map).push_back(p_15_AXI_00_WDATA_PARITY);
        xsim_sc_channel<0, bool > *p_15_AXI_00_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_15->AXI_00_WVALID.bind(*p_15_AXI_00_WVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_15_AXI_00_WVALID);
        xsim_sc_channel<0, bool > *p_15_AXI_01_ACLK = new xsim_sc_channel<0, bool >();
        sc_inst_15->AXI_01_ACLK.bind(*p_15_AXI_01_ACLK);
        (*_glb_hdl_sc_channel_map).push_back(p_15_AXI_01_ACLK);
        xsim_sc_channel<0, bool > *p_15_AXI_01_ARESET_N = new xsim_sc_channel<0, bool >();
        sc_inst_15->AXI_01_ARESET_N.bind(*p_15_AXI_01_ARESET_N);
        (*_glb_hdl_sc_channel_map).push_back(p_15_AXI_01_ARESET_N);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_15_AXI_01_ARADDR = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_15->AXI_01_ARADDR.bind(*p_15_AXI_01_ARADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_15_AXI_01_ARADDR);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_AXI_01_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->AXI_01_ARBURST.bind(*p_15_AXI_01_ARBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_15_AXI_01_ARBURST);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_15_AXI_01_ARID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_15->AXI_01_ARID.bind(*p_15_AXI_01_ARID);
        (*_glb_hdl_sc_channel_map).push_back(p_15_AXI_01_ARID);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_AXI_01_ARLEN = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->AXI_01_ARLEN.bind(*p_15_AXI_01_ARLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_15_AXI_01_ARLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_AXI_01_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->AXI_01_ARSIZE.bind(*p_15_AXI_01_ARSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_15_AXI_01_ARSIZE);
        xsim_sc_channel<0, bool > *p_15_AXI_01_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_15->AXI_01_ARVALID.bind(*p_15_AXI_01_ARVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_15_AXI_01_ARVALID);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_15_AXI_01_AWADDR = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_15->AXI_01_AWADDR.bind(*p_15_AXI_01_AWADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_15_AXI_01_AWADDR);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_AXI_01_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->AXI_01_AWBURST.bind(*p_15_AXI_01_AWBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_15_AXI_01_AWBURST);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_15_AXI_01_AWID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_15->AXI_01_AWID.bind(*p_15_AXI_01_AWID);
        (*_glb_hdl_sc_channel_map).push_back(p_15_AXI_01_AWID);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_AXI_01_AWLEN = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->AXI_01_AWLEN.bind(*p_15_AXI_01_AWLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_15_AXI_01_AWLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_AXI_01_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->AXI_01_AWSIZE.bind(*p_15_AXI_01_AWSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_15_AXI_01_AWSIZE);
        xsim_sc_channel<0, bool > *p_15_AXI_01_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_15->AXI_01_AWVALID.bind(*p_15_AXI_01_AWVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_15_AXI_01_AWVALID);
        xsim_sc_channel<0, bool > *p_15_AXI_01_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_15->AXI_01_RREADY.bind(*p_15_AXI_01_RREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_15_AXI_01_RREADY);
        xsim_sc_channel<0, bool > *p_15_AXI_01_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_15->AXI_01_BREADY.bind(*p_15_AXI_01_BREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_15_AXI_01_BREADY);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_15_AXI_01_WDATA = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_15->AXI_01_WDATA.bind(*p_15_AXI_01_WDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_15_AXI_01_WDATA);
        xsim_sc_channel<0, bool > *p_15_AXI_01_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_15->AXI_01_WLAST.bind(*p_15_AXI_01_WLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_15_AXI_01_WLAST);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_15_AXI_01_WSTRB = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_15->AXI_01_WSTRB.bind(*p_15_AXI_01_WSTRB);
        (*_glb_hdl_sc_channel_map).push_back(p_15_AXI_01_WSTRB);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_15_AXI_01_WDATA_PARITY = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_15->AXI_01_WDATA_PARITY.bind(*p_15_AXI_01_WDATA_PARITY);
        (*_glb_hdl_sc_channel_map).push_back(p_15_AXI_01_WDATA_PARITY);
        xsim_sc_channel<0, bool > *p_15_AXI_01_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_15->AXI_01_WVALID.bind(*p_15_AXI_01_WVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_15_AXI_01_WVALID);
        xsim_sc_channel<0, bool > *p_15_AXI_02_ACLK = new xsim_sc_channel<0, bool >();
        sc_inst_15->AXI_02_ACLK.bind(*p_15_AXI_02_ACLK);
        (*_glb_hdl_sc_channel_map).push_back(p_15_AXI_02_ACLK);
        xsim_sc_channel<0, bool > *p_15_AXI_02_ARESET_N = new xsim_sc_channel<0, bool >();
        sc_inst_15->AXI_02_ARESET_N.bind(*p_15_AXI_02_ARESET_N);
        (*_glb_hdl_sc_channel_map).push_back(p_15_AXI_02_ARESET_N);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_15_AXI_02_ARADDR = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_15->AXI_02_ARADDR.bind(*p_15_AXI_02_ARADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_15_AXI_02_ARADDR);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_AXI_02_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->AXI_02_ARBURST.bind(*p_15_AXI_02_ARBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_15_AXI_02_ARBURST);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_15_AXI_02_ARID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_15->AXI_02_ARID.bind(*p_15_AXI_02_ARID);
        (*_glb_hdl_sc_channel_map).push_back(p_15_AXI_02_ARID);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_AXI_02_ARLEN = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->AXI_02_ARLEN.bind(*p_15_AXI_02_ARLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_15_AXI_02_ARLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_AXI_02_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->AXI_02_ARSIZE.bind(*p_15_AXI_02_ARSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_15_AXI_02_ARSIZE);
        xsim_sc_channel<0, bool > *p_15_AXI_02_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_15->AXI_02_ARVALID.bind(*p_15_AXI_02_ARVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_15_AXI_02_ARVALID);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_15_AXI_02_AWADDR = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_15->AXI_02_AWADDR.bind(*p_15_AXI_02_AWADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_15_AXI_02_AWADDR);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_AXI_02_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->AXI_02_AWBURST.bind(*p_15_AXI_02_AWBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_15_AXI_02_AWBURST);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_15_AXI_02_AWID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_15->AXI_02_AWID.bind(*p_15_AXI_02_AWID);
        (*_glb_hdl_sc_channel_map).push_back(p_15_AXI_02_AWID);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_AXI_02_AWLEN = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->AXI_02_AWLEN.bind(*p_15_AXI_02_AWLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_15_AXI_02_AWLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_AXI_02_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->AXI_02_AWSIZE.bind(*p_15_AXI_02_AWSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_15_AXI_02_AWSIZE);
        xsim_sc_channel<0, bool > *p_15_AXI_02_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_15->AXI_02_AWVALID.bind(*p_15_AXI_02_AWVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_15_AXI_02_AWVALID);
        xsim_sc_channel<0, bool > *p_15_AXI_02_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_15->AXI_02_RREADY.bind(*p_15_AXI_02_RREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_15_AXI_02_RREADY);
        xsim_sc_channel<0, bool > *p_15_AXI_02_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_15->AXI_02_BREADY.bind(*p_15_AXI_02_BREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_15_AXI_02_BREADY);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_15_AXI_02_WDATA = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_15->AXI_02_WDATA.bind(*p_15_AXI_02_WDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_15_AXI_02_WDATA);
        xsim_sc_channel<0, bool > *p_15_AXI_02_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_15->AXI_02_WLAST.bind(*p_15_AXI_02_WLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_15_AXI_02_WLAST);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_15_AXI_02_WSTRB = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_15->AXI_02_WSTRB.bind(*p_15_AXI_02_WSTRB);
        (*_glb_hdl_sc_channel_map).push_back(p_15_AXI_02_WSTRB);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_15_AXI_02_WDATA_PARITY = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_15->AXI_02_WDATA_PARITY.bind(*p_15_AXI_02_WDATA_PARITY);
        (*_glb_hdl_sc_channel_map).push_back(p_15_AXI_02_WDATA_PARITY);
        xsim_sc_channel<0, bool > *p_15_AXI_02_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_15->AXI_02_WVALID.bind(*p_15_AXI_02_WVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_15_AXI_02_WVALID);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_15_APB_0_PWDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_15->APB_0_PWDATA.bind(*p_15_APB_0_PWDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_15_APB_0_PWDATA);
        xsim_sc_channel<22, sc_dt::sc_bv<22> > *p_15_APB_0_PADDR = new xsim_sc_channel<22, sc_dt::sc_bv<22> >();
        sc_inst_15->APB_0_PADDR.bind(*p_15_APB_0_PADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_15_APB_0_PADDR);
        xsim_sc_channel<0, bool > *p_15_APB_0_PCLK = new xsim_sc_channel<0, bool >();
        sc_inst_15->APB_0_PCLK.bind(*p_15_APB_0_PCLK);
        (*_glb_hdl_sc_channel_map).push_back(p_15_APB_0_PCLK);
        xsim_sc_channel<0, bool > *p_15_APB_0_PENABLE = new xsim_sc_channel<0, bool >();
        sc_inst_15->APB_0_PENABLE.bind(*p_15_APB_0_PENABLE);
        (*_glb_hdl_sc_channel_map).push_back(p_15_APB_0_PENABLE);
        xsim_sc_channel<0, bool > *p_15_APB_0_PRESET_N = new xsim_sc_channel<0, bool >();
        sc_inst_15->APB_0_PRESET_N.bind(*p_15_APB_0_PRESET_N);
        (*_glb_hdl_sc_channel_map).push_back(p_15_APB_0_PRESET_N);
        xsim_sc_channel<0, bool > *p_15_APB_0_PSEL = new xsim_sc_channel<0, bool >();
        sc_inst_15->APB_0_PSEL.bind(*p_15_APB_0_PSEL);
        (*_glb_hdl_sc_channel_map).push_back(p_15_APB_0_PSEL);
        xsim_sc_channel<0, bool > *p_15_APB_0_PWRITE = new xsim_sc_channel<0, bool >();
        sc_inst_15->APB_0_PWRITE.bind(*p_15_APB_0_PWRITE);
        (*_glb_hdl_sc_channel_map).push_back(p_15_APB_0_PWRITE);
        xsim_sc_channel<0, bool > *p_15_AXI_00_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_15->AXI_00_ARREADY.bind(*p_15_AXI_00_ARREADY);
        p_15_AXI_00_ARREADY->set_sv_netview_offsetfromdp(8285856);
        xsim_sc_channel<0, bool > *p_15_AXI_00_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_15->AXI_00_AWREADY.bind(*p_15_AXI_00_AWREADY);
        p_15_AXI_00_AWREADY->set_sv_netview_offsetfromdp(8285912);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_15_AXI_00_RDATA_PARITY = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_15->AXI_00_RDATA_PARITY.bind(*p_15_AXI_00_RDATA_PARITY);
        p_15_AXI_00_RDATA_PARITY->set_sv_netview_offsetfromdp(8285968);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_15_AXI_00_RDATA = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_15->AXI_00_RDATA.bind(*p_15_AXI_00_RDATA);
        p_15_AXI_00_RDATA->set_sv_netview_offsetfromdp(8286024);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_15_AXI_00_RID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_15->AXI_00_RID.bind(*p_15_AXI_00_RID);
        p_15_AXI_00_RID->set_sv_netview_offsetfromdp(8286080);
        xsim_sc_channel<0, bool > *p_15_AXI_00_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_15->AXI_00_RLAST.bind(*p_15_AXI_00_RLAST);
        p_15_AXI_00_RLAST->set_sv_netview_offsetfromdp(8286136);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_AXI_00_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->AXI_00_RRESP.bind(*p_15_AXI_00_RRESP);
        p_15_AXI_00_RRESP->set_sv_netview_offsetfromdp(8286192);
        xsim_sc_channel<0, bool > *p_15_AXI_00_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_15->AXI_00_RVALID.bind(*p_15_AXI_00_RVALID);
        p_15_AXI_00_RVALID->set_sv_netview_offsetfromdp(8286248);
        xsim_sc_channel<0, bool > *p_15_AXI_00_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_15->AXI_00_WREADY.bind(*p_15_AXI_00_WREADY);
        p_15_AXI_00_WREADY->set_sv_netview_offsetfromdp(8286304);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_15_AXI_00_BID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_15->AXI_00_BID.bind(*p_15_AXI_00_BID);
        p_15_AXI_00_BID->set_sv_netview_offsetfromdp(8286360);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_AXI_00_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->AXI_00_BRESP.bind(*p_15_AXI_00_BRESP);
        p_15_AXI_00_BRESP->set_sv_netview_offsetfromdp(8286416);
        xsim_sc_channel<0, bool > *p_15_AXI_00_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_15->AXI_00_BVALID.bind(*p_15_AXI_00_BVALID);
        p_15_AXI_00_BVALID->set_sv_netview_offsetfromdp(8286472);
        xsim_sc_channel<0, bool > *p_15_AXI_01_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_15->AXI_01_ARREADY.bind(*p_15_AXI_01_ARREADY);
        p_15_AXI_01_ARREADY->set_sv_netview_offsetfromdp(8286528);
        xsim_sc_channel<0, bool > *p_15_AXI_01_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_15->AXI_01_AWREADY.bind(*p_15_AXI_01_AWREADY);
        p_15_AXI_01_AWREADY->set_sv_netview_offsetfromdp(8286584);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_15_AXI_01_RDATA_PARITY = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_15->AXI_01_RDATA_PARITY.bind(*p_15_AXI_01_RDATA_PARITY);
        p_15_AXI_01_RDATA_PARITY->set_sv_netview_offsetfromdp(8286640);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_15_AXI_01_RDATA = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_15->AXI_01_RDATA.bind(*p_15_AXI_01_RDATA);
        p_15_AXI_01_RDATA->set_sv_netview_offsetfromdp(8286696);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_15_AXI_01_RID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_15->AXI_01_RID.bind(*p_15_AXI_01_RID);
        p_15_AXI_01_RID->set_sv_netview_offsetfromdp(8286752);
        xsim_sc_channel<0, bool > *p_15_AXI_01_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_15->AXI_01_RLAST.bind(*p_15_AXI_01_RLAST);
        p_15_AXI_01_RLAST->set_sv_netview_offsetfromdp(8286808);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_AXI_01_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->AXI_01_RRESP.bind(*p_15_AXI_01_RRESP);
        p_15_AXI_01_RRESP->set_sv_netview_offsetfromdp(8286864);
        xsim_sc_channel<0, bool > *p_15_AXI_01_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_15->AXI_01_RVALID.bind(*p_15_AXI_01_RVALID);
        p_15_AXI_01_RVALID->set_sv_netview_offsetfromdp(8286920);
        xsim_sc_channel<0, bool > *p_15_AXI_01_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_15->AXI_01_WREADY.bind(*p_15_AXI_01_WREADY);
        p_15_AXI_01_WREADY->set_sv_netview_offsetfromdp(8286976);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_15_AXI_01_BID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_15->AXI_01_BID.bind(*p_15_AXI_01_BID);
        p_15_AXI_01_BID->set_sv_netview_offsetfromdp(8287032);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_AXI_01_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->AXI_01_BRESP.bind(*p_15_AXI_01_BRESP);
        p_15_AXI_01_BRESP->set_sv_netview_offsetfromdp(8287088);
        xsim_sc_channel<0, bool > *p_15_AXI_01_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_15->AXI_01_BVALID.bind(*p_15_AXI_01_BVALID);
        p_15_AXI_01_BVALID->set_sv_netview_offsetfromdp(8287144);
        xsim_sc_channel<0, bool > *p_15_AXI_02_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_15->AXI_02_ARREADY.bind(*p_15_AXI_02_ARREADY);
        p_15_AXI_02_ARREADY->set_sv_netview_offsetfromdp(8287200);
        xsim_sc_channel<0, bool > *p_15_AXI_02_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_15->AXI_02_AWREADY.bind(*p_15_AXI_02_AWREADY);
        p_15_AXI_02_AWREADY->set_sv_netview_offsetfromdp(8287256);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_15_AXI_02_RDATA_PARITY = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_15->AXI_02_RDATA_PARITY.bind(*p_15_AXI_02_RDATA_PARITY);
        p_15_AXI_02_RDATA_PARITY->set_sv_netview_offsetfromdp(8287312);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_15_AXI_02_RDATA = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_15->AXI_02_RDATA.bind(*p_15_AXI_02_RDATA);
        p_15_AXI_02_RDATA->set_sv_netview_offsetfromdp(8287368);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_15_AXI_02_RID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_15->AXI_02_RID.bind(*p_15_AXI_02_RID);
        p_15_AXI_02_RID->set_sv_netview_offsetfromdp(8287424);
        xsim_sc_channel<0, bool > *p_15_AXI_02_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_15->AXI_02_RLAST.bind(*p_15_AXI_02_RLAST);
        p_15_AXI_02_RLAST->set_sv_netview_offsetfromdp(8287480);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_AXI_02_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->AXI_02_RRESP.bind(*p_15_AXI_02_RRESP);
        p_15_AXI_02_RRESP->set_sv_netview_offsetfromdp(8287536);
        xsim_sc_channel<0, bool > *p_15_AXI_02_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_15->AXI_02_RVALID.bind(*p_15_AXI_02_RVALID);
        p_15_AXI_02_RVALID->set_sv_netview_offsetfromdp(8287592);
        xsim_sc_channel<0, bool > *p_15_AXI_02_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_15->AXI_02_WREADY.bind(*p_15_AXI_02_WREADY);
        p_15_AXI_02_WREADY->set_sv_netview_offsetfromdp(8287648);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_15_AXI_02_BID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_15->AXI_02_BID.bind(*p_15_AXI_02_BID);
        p_15_AXI_02_BID->set_sv_netview_offsetfromdp(8287704);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_AXI_02_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->AXI_02_BRESP.bind(*p_15_AXI_02_BRESP);
        p_15_AXI_02_BRESP->set_sv_netview_offsetfromdp(8287760);
        xsim_sc_channel<0, bool > *p_15_AXI_02_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_15->AXI_02_BVALID.bind(*p_15_AXI_02_BVALID);
        p_15_AXI_02_BVALID->set_sv_netview_offsetfromdp(8287816);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_15_APB_0_PRDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_15->APB_0_PRDATA.bind(*p_15_APB_0_PRDATA);
        p_15_APB_0_PRDATA->set_sv_netview_offsetfromdp(8287872);
        xsim_sc_channel<0, bool > *p_15_APB_0_PREADY = new xsim_sc_channel<0, bool >();
        sc_inst_15->APB_0_PREADY.bind(*p_15_APB_0_PREADY);
        p_15_APB_0_PREADY->set_sv_netview_offsetfromdp(8287928);
        xsim_sc_channel<0, bool > *p_15_APB_0_PSLVERR = new xsim_sc_channel<0, bool >();
        sc_inst_15->APB_0_PSLVERR.bind(*p_15_APB_0_PSLVERR);
        p_15_APB_0_PSLVERR->set_sv_netview_offsetfromdp(8287984);
        xsim_sc_channel<0, bool > *p_15_apb_complete_0 = new xsim_sc_channel<0, bool >();
        sc_inst_15->apb_complete_0.bind(*p_15_apb_complete_0);
        p_15_apb_complete_0->set_sv_netview_offsetfromdp(8288040);
        xsim_sc_channel<0, bool > *p_15_DRAM_0_STAT_CATTRIP = new xsim_sc_channel<0, bool >();
        sc_inst_15->DRAM_0_STAT_CATTRIP.bind(*p_15_DRAM_0_STAT_CATTRIP);
        p_15_DRAM_0_STAT_CATTRIP->set_sv_netview_offsetfromdp(8288096);
        xsim_sc_channel<7, sc_dt::sc_bv<7> > *p_15_DRAM_0_STAT_TEMP = new xsim_sc_channel<7, sc_dt::sc_bv<7> >();
        sc_inst_15->DRAM_0_STAT_TEMP.bind(*p_15_DRAM_0_STAT_TEMP);
        p_15_DRAM_0_STAT_TEMP->set_sv_netview_offsetfromdp(8288152);
        sc_inst_16 = new bd_5dca_interconnect1_0_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.hmss_0.inst.path_0.interconnect1_0");
        sc_inst_16->xsim_set_dbg_index(2080);
        xsim_sc_channel<0, bool > *p_16_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_16->aclk.bind(*p_16_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_16_aclk);
        xsim_sc_channel<0, bool > *p_16_aclk1 = new xsim_sc_channel<0, bool >();
        sc_inst_16->aclk1.bind(*p_16_aclk1);
        (*_glb_hdl_sc_channel_map).push_back(p_16_aclk1);
        xsim_sc_channel<0, bool > *p_16_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_16->aresetn.bind(*p_16_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_16_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_S00_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->S00_AXI_awid.bind(*p_16_S00_AXI_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_16_S00_AXI_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_16_S00_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_16->S00_AXI_awaddr.bind(*p_16_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_16_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_16_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_16->S00_AXI_awlen.bind(*p_16_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_16_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_16_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_16->S00_AXI_awsize.bind(*p_16_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_16_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->S00_AXI_awburst.bind(*p_16_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_16_S00_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_S00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->S00_AXI_awlock.bind(*p_16_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_16_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->S00_AXI_awcache.bind(*p_16_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_16_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_16_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_16->S00_AXI_awprot.bind(*p_16_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_16_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->S00_AXI_awqos.bind(*p_16_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_16_S00_AXI_awqos);
        xsim_sc_channel<0, bool > *p_16_S00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->S00_AXI_awvalid.bind(*p_16_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_16_S00_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_16_S00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_16->S00_AXI_awready.bind(*p_16_S00_AXI_awready);
        p_16_S00_AXI_awready->set_sv_netview_offsetfromdp(8484552);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_16_S00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_16->S00_AXI_wdata.bind(*p_16_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_16_S00_AXI_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_16_S00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_16->S00_AXI_wstrb.bind(*p_16_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_16_S00_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_16_S00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_16->S00_AXI_wlast.bind(*p_16_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_16_S00_AXI_wlast);
        xsim_sc_channel<0, bool > *p_16_S00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->S00_AXI_wvalid.bind(*p_16_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_16_S00_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_16_S00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_16->S00_AXI_wready.bind(*p_16_S00_AXI_wready);
        p_16_S00_AXI_wready->set_sv_netview_offsetfromdp(8484832);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_S00_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->S00_AXI_bid.bind(*p_16_S00_AXI_bid);
        p_16_S00_AXI_bid->set_sv_netview_offsetfromdp(8484888);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->S00_AXI_bresp.bind(*p_16_S00_AXI_bresp);
        p_16_S00_AXI_bresp->set_sv_netview_offsetfromdp(8484944);
        xsim_sc_channel<0, bool > *p_16_S00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->S00_AXI_bvalid.bind(*p_16_S00_AXI_bvalid);
        p_16_S00_AXI_bvalid->set_sv_netview_offsetfromdp(8485000);
        xsim_sc_channel<0, bool > *p_16_S00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_16->S00_AXI_bready.bind(*p_16_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_16_S00_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_S00_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->S00_AXI_arid.bind(*p_16_S00_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_16_S00_AXI_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_16_S00_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_16->S00_AXI_araddr.bind(*p_16_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_16_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_16_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_16->S00_AXI_arlen.bind(*p_16_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_16_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_16_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_16->S00_AXI_arsize.bind(*p_16_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_16_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->S00_AXI_arburst.bind(*p_16_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_16_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->S00_AXI_arlock.bind(*p_16_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_16_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->S00_AXI_arcache.bind(*p_16_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_16_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_16_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_16->S00_AXI_arprot.bind(*p_16_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_16_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->S00_AXI_arqos.bind(*p_16_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_16_S00_AXI_arqos);
        xsim_sc_channel<0, bool > *p_16_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->S00_AXI_arvalid.bind(*p_16_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_16_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_16_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_16->S00_AXI_arready.bind(*p_16_S00_AXI_arready);
        p_16_S00_AXI_arready->set_sv_netview_offsetfromdp(8485672);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_S00_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->S00_AXI_rid.bind(*p_16_S00_AXI_rid);
        p_16_S00_AXI_rid->set_sv_netview_offsetfromdp(8485728);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_16_S00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_16->S00_AXI_rdata.bind(*p_16_S00_AXI_rdata);
        p_16_S00_AXI_rdata->set_sv_netview_offsetfromdp(8485784);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->S00_AXI_rresp.bind(*p_16_S00_AXI_rresp);
        p_16_S00_AXI_rresp->set_sv_netview_offsetfromdp(8485840);
        xsim_sc_channel<0, bool > *p_16_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_16->S00_AXI_rlast.bind(*p_16_S00_AXI_rlast);
        p_16_S00_AXI_rlast->set_sv_netview_offsetfromdp(8485896);
        xsim_sc_channel<0, bool > *p_16_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->S00_AXI_rvalid.bind(*p_16_S00_AXI_rvalid);
        p_16_S00_AXI_rvalid->set_sv_netview_offsetfromdp(8485952);
        xsim_sc_channel<0, bool > *p_16_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_16->S00_AXI_rready.bind(*p_16_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_16_S00_AXI_rready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_16_M00_AXI_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_16->M00_AXI_awaddr.bind(*p_16_M00_AXI_awaddr);
        p_16_M00_AXI_awaddr->set_sv_netview_offsetfromdp(8486064);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_M00_AXI_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->M00_AXI_awlen.bind(*p_16_M00_AXI_awlen);
        p_16_M00_AXI_awlen->set_sv_netview_offsetfromdp(8486120);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_16_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_16->M00_AXI_awsize.bind(*p_16_M00_AXI_awsize);
        p_16_M00_AXI_awsize->set_sv_netview_offsetfromdp(8486176);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->M00_AXI_awburst.bind(*p_16_M00_AXI_awburst);
        p_16_M00_AXI_awburst->set_sv_netview_offsetfromdp(8486232);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_M00_AXI_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->M00_AXI_awlock.bind(*p_16_M00_AXI_awlock);
        p_16_M00_AXI_awlock->set_sv_netview_offsetfromdp(8486288);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->M00_AXI_awcache.bind(*p_16_M00_AXI_awcache);
        p_16_M00_AXI_awcache->set_sv_netview_offsetfromdp(8486344);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_16_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_16->M00_AXI_awprot.bind(*p_16_M00_AXI_awprot);
        p_16_M00_AXI_awprot->set_sv_netview_offsetfromdp(8486400);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->M00_AXI_awqos.bind(*p_16_M00_AXI_awqos);
        p_16_M00_AXI_awqos->set_sv_netview_offsetfromdp(8486456);
        xsim_sc_channel<0, bool > *p_16_M00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->M00_AXI_awvalid.bind(*p_16_M00_AXI_awvalid);
        p_16_M00_AXI_awvalid->set_sv_netview_offsetfromdp(8486512);
        xsim_sc_channel<0, bool > *p_16_M00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_16->M00_AXI_awready.bind(*p_16_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_16_M00_AXI_awready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_16_M00_AXI_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_16->M00_AXI_wdata.bind(*p_16_M00_AXI_wdata);
        p_16_M00_AXI_wdata->set_sv_netview_offsetfromdp(8486624);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_16_M00_AXI_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_16->M00_AXI_wstrb.bind(*p_16_M00_AXI_wstrb);
        p_16_M00_AXI_wstrb->set_sv_netview_offsetfromdp(8486680);
        xsim_sc_channel<0, bool > *p_16_M00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_16->M00_AXI_wlast.bind(*p_16_M00_AXI_wlast);
        p_16_M00_AXI_wlast->set_sv_netview_offsetfromdp(8486736);
        xsim_sc_channel<0, bool > *p_16_M00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->M00_AXI_wvalid.bind(*p_16_M00_AXI_wvalid);
        p_16_M00_AXI_wvalid->set_sv_netview_offsetfromdp(8486792);
        xsim_sc_channel<0, bool > *p_16_M00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_16->M00_AXI_wready.bind(*p_16_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_16_M00_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->M00_AXI_bresp.bind(*p_16_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_16_M00_AXI_bresp);
        xsim_sc_channel<0, bool > *p_16_M00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->M00_AXI_bvalid.bind(*p_16_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_16_M00_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_16_M00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_16->M00_AXI_bready.bind(*p_16_M00_AXI_bready);
        p_16_M00_AXI_bready->set_sv_netview_offsetfromdp(8487016);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_16_M00_AXI_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_16->M00_AXI_araddr.bind(*p_16_M00_AXI_araddr);
        p_16_M00_AXI_araddr->set_sv_netview_offsetfromdp(8487072);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_M00_AXI_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->M00_AXI_arlen.bind(*p_16_M00_AXI_arlen);
        p_16_M00_AXI_arlen->set_sv_netview_offsetfromdp(8487128);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_16_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_16->M00_AXI_arsize.bind(*p_16_M00_AXI_arsize);
        p_16_M00_AXI_arsize->set_sv_netview_offsetfromdp(8487184);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->M00_AXI_arburst.bind(*p_16_M00_AXI_arburst);
        p_16_M00_AXI_arburst->set_sv_netview_offsetfromdp(8487240);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_M00_AXI_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->M00_AXI_arlock.bind(*p_16_M00_AXI_arlock);
        p_16_M00_AXI_arlock->set_sv_netview_offsetfromdp(8487296);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->M00_AXI_arcache.bind(*p_16_M00_AXI_arcache);
        p_16_M00_AXI_arcache->set_sv_netview_offsetfromdp(8487352);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_16_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_16->M00_AXI_arprot.bind(*p_16_M00_AXI_arprot);
        p_16_M00_AXI_arprot->set_sv_netview_offsetfromdp(8487408);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->M00_AXI_arqos.bind(*p_16_M00_AXI_arqos);
        p_16_M00_AXI_arqos->set_sv_netview_offsetfromdp(8487464);
        xsim_sc_channel<0, bool > *p_16_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->M00_AXI_arvalid.bind(*p_16_M00_AXI_arvalid);
        p_16_M00_AXI_arvalid->set_sv_netview_offsetfromdp(8487520);
        xsim_sc_channel<0, bool > *p_16_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_16->M00_AXI_arready.bind(*p_16_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_16_M00_AXI_arready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_16_M00_AXI_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_16->M00_AXI_rdata.bind(*p_16_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_16_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->M00_AXI_rresp.bind(*p_16_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_16_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_16_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_16->M00_AXI_rlast.bind(*p_16_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_16_M00_AXI_rlast);
        xsim_sc_channel<0, bool > *p_16_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->M00_AXI_rvalid.bind(*p_16_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_16_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_16_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_16->M00_AXI_rready.bind(*p_16_M00_AXI_rready);
        p_16_M00_AXI_rready->set_sv_netview_offsetfromdp(8487856);
        sc_inst_17 = new bd_5dca_slice1_0_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.hmss_0.inst.path_0.slice1_0");
        sc_inst_17->xsim_set_dbg_index(2081);
        xsim_sc_channel<0, bool > *p_17_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_17->aclk.bind(*p_17_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_17_aclk);
        xsim_sc_channel<0, bool > *p_17_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_17->aresetn.bind(*p_17_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_17_aresetn);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_17_s_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_17->s_axi_awaddr.bind(*p_17_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_awaddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_s_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->s_axi_awlen.bind(*p_17_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_17_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_17->s_axi_awsize.bind(*p_17_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->s_axi_awburst.bind(*p_17_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_awburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_s_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->s_axi_awlock.bind(*p_17_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->s_axi_awcache.bind(*p_17_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_17_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_17->s_axi_awprot.bind(*p_17_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->s_axi_awqos.bind(*p_17_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_awqos);
        xsim_sc_channel<0, bool > *p_17_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_awvalid.bind(*p_17_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_17_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_awready.bind(*p_17_s_axi_awready);
        p_17_s_axi_awready->set_sv_netview_offsetfromdp(8488576);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_17_s_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_17->s_axi_wdata.bind(*p_17_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_wdata);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_17_s_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_17->s_axi_wstrb.bind(*p_17_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_17_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_wlast.bind(*p_17_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_17_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_wvalid.bind(*p_17_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_17_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_wready.bind(*p_17_s_axi_wready);
        p_17_s_axi_wready->set_sv_netview_offsetfromdp(8488856);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->s_axi_bresp.bind(*p_17_s_axi_bresp);
        p_17_s_axi_bresp->set_sv_netview_offsetfromdp(8488912);
        xsim_sc_channel<0, bool > *p_17_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_bvalid.bind(*p_17_s_axi_bvalid);
        p_17_s_axi_bvalid->set_sv_netview_offsetfromdp(8488968);
        xsim_sc_channel<0, bool > *p_17_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_bready.bind(*p_17_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_bready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_17_s_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_17->s_axi_araddr.bind(*p_17_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_araddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_s_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->s_axi_arlen.bind(*p_17_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_17_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_17->s_axi_arsize.bind(*p_17_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->s_axi_arburst.bind(*p_17_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_arburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_s_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->s_axi_arlock.bind(*p_17_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->s_axi_arcache.bind(*p_17_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_17_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_17->s_axi_arprot.bind(*p_17_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->s_axi_arqos.bind(*p_17_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_arqos);
        xsim_sc_channel<0, bool > *p_17_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_arvalid.bind(*p_17_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_17_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_arready.bind(*p_17_s_axi_arready);
        p_17_s_axi_arready->set_sv_netview_offsetfromdp(8489584);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_17_s_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_17->s_axi_rdata.bind(*p_17_s_axi_rdata);
        p_17_s_axi_rdata->set_sv_netview_offsetfromdp(8489640);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->s_axi_rresp.bind(*p_17_s_axi_rresp);
        p_17_s_axi_rresp->set_sv_netview_offsetfromdp(8489696);
        xsim_sc_channel<0, bool > *p_17_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_rlast.bind(*p_17_s_axi_rlast);
        p_17_s_axi_rlast->set_sv_netview_offsetfromdp(8489752);
        xsim_sc_channel<0, bool > *p_17_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_rvalid.bind(*p_17_s_axi_rvalid);
        p_17_s_axi_rvalid->set_sv_netview_offsetfromdp(8489808);
        xsim_sc_channel<0, bool > *p_17_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_rready.bind(*p_17_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_rready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_17_m_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_17->m_axi_awaddr.bind(*p_17_m_axi_awaddr);
        p_17_m_axi_awaddr->set_sv_netview_offsetfromdp(8489920);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_m_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->m_axi_awlen.bind(*p_17_m_axi_awlen);
        p_17_m_axi_awlen->set_sv_netview_offsetfromdp(8489976);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_17_m_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_17->m_axi_awsize.bind(*p_17_m_axi_awsize);
        p_17_m_axi_awsize->set_sv_netview_offsetfromdp(8490032);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_m_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->m_axi_awburst.bind(*p_17_m_axi_awburst);
        p_17_m_axi_awburst->set_sv_netview_offsetfromdp(8490088);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_m_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->m_axi_awlock.bind(*p_17_m_axi_awlock);
        p_17_m_axi_awlock->set_sv_netview_offsetfromdp(8490144);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_m_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->m_axi_awcache.bind(*p_17_m_axi_awcache);
        p_17_m_axi_awcache->set_sv_netview_offsetfromdp(8490200);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_17_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_17->m_axi_awprot.bind(*p_17_m_axi_awprot);
        p_17_m_axi_awprot->set_sv_netview_offsetfromdp(8490256);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_m_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->m_axi_awqos.bind(*p_17_m_axi_awqos);
        p_17_m_axi_awqos->set_sv_netview_offsetfromdp(8490312);
        xsim_sc_channel<0, bool > *p_17_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->m_axi_awvalid.bind(*p_17_m_axi_awvalid);
        p_17_m_axi_awvalid->set_sv_netview_offsetfromdp(8490368);
        xsim_sc_channel<0, bool > *p_17_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_17->m_axi_awready.bind(*p_17_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m_axi_awready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_17_m_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_17->m_axi_wdata.bind(*p_17_m_axi_wdata);
        p_17_m_axi_wdata->set_sv_netview_offsetfromdp(8490480);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_17_m_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_17->m_axi_wstrb.bind(*p_17_m_axi_wstrb);
        p_17_m_axi_wstrb->set_sv_netview_offsetfromdp(8490536);
        xsim_sc_channel<0, bool > *p_17_m_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_17->m_axi_wlast.bind(*p_17_m_axi_wlast);
        p_17_m_axi_wlast->set_sv_netview_offsetfromdp(8490592);
        xsim_sc_channel<0, bool > *p_17_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->m_axi_wvalid.bind(*p_17_m_axi_wvalid);
        p_17_m_axi_wvalid->set_sv_netview_offsetfromdp(8490648);
        xsim_sc_channel<0, bool > *p_17_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_17->m_axi_wready.bind(*p_17_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->m_axi_bresp.bind(*p_17_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_17_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->m_axi_bvalid.bind(*p_17_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_17_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_17->m_axi_bready.bind(*p_17_m_axi_bready);
        p_17_m_axi_bready->set_sv_netview_offsetfromdp(8490872);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_17_m_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_17->m_axi_araddr.bind(*p_17_m_axi_araddr);
        p_17_m_axi_araddr->set_sv_netview_offsetfromdp(8490928);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_m_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->m_axi_arlen.bind(*p_17_m_axi_arlen);
        p_17_m_axi_arlen->set_sv_netview_offsetfromdp(8490984);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_17_m_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_17->m_axi_arsize.bind(*p_17_m_axi_arsize);
        p_17_m_axi_arsize->set_sv_netview_offsetfromdp(8491040);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_m_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->m_axi_arburst.bind(*p_17_m_axi_arburst);
        p_17_m_axi_arburst->set_sv_netview_offsetfromdp(8491096);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_m_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->m_axi_arlock.bind(*p_17_m_axi_arlock);
        p_17_m_axi_arlock->set_sv_netview_offsetfromdp(8491152);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_m_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->m_axi_arcache.bind(*p_17_m_axi_arcache);
        p_17_m_axi_arcache->set_sv_netview_offsetfromdp(8491208);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_17_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_17->m_axi_arprot.bind(*p_17_m_axi_arprot);
        p_17_m_axi_arprot->set_sv_netview_offsetfromdp(8491264);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_m_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->m_axi_arqos.bind(*p_17_m_axi_arqos);
        p_17_m_axi_arqos->set_sv_netview_offsetfromdp(8491320);
        xsim_sc_channel<0, bool > *p_17_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->m_axi_arvalid.bind(*p_17_m_axi_arvalid);
        p_17_m_axi_arvalid->set_sv_netview_offsetfromdp(8491376);
        xsim_sc_channel<0, bool > *p_17_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_17->m_axi_arready.bind(*p_17_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m_axi_arready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_17_m_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_17->m_axi_rdata.bind(*p_17_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->m_axi_rresp.bind(*p_17_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_17_m_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_17->m_axi_rlast.bind(*p_17_m_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m_axi_rlast);
        xsim_sc_channel<0, bool > *p_17_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->m_axi_rvalid.bind(*p_17_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_17_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_17->m_axi_rready.bind(*p_17_m_axi_rready);
        p_17_m_axi_rready->set_sv_netview_offsetfromdp(8491712);
        sc_inst_18 = new bd_5dca_interconnect2_1_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.hmss_0.inst.path_1.interconnect2_1");
        sc_inst_18->xsim_set_dbg_index(2154);
        xsim_sc_channel<0, bool > *p_18_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_18->aclk.bind(*p_18_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_18_aclk);
        xsim_sc_channel<0, bool > *p_18_aclk1 = new xsim_sc_channel<0, bool >();
        sc_inst_18->aclk1.bind(*p_18_aclk1);
        (*_glb_hdl_sc_channel_map).push_back(p_18_aclk1);
        xsim_sc_channel<0, bool > *p_18_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_18->aresetn.bind(*p_18_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_18_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_18_S00_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_18->S00_AXI_arid.bind(*p_18_S00_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_18_S00_AXI_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_18_S00_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_18->S00_AXI_araddr.bind(*p_18_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_18_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_18_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_18->S00_AXI_arlen.bind(*p_18_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_18_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_18_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_18->S00_AXI_arsize.bind(*p_18_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_18_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->S00_AXI_arburst.bind(*p_18_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_18_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_18_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_18->S00_AXI_arlock.bind(*p_18_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_18_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->S00_AXI_arcache.bind(*p_18_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_18_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_18_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_18->S00_AXI_arprot.bind(*p_18_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_18_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->S00_AXI_arqos.bind(*p_18_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_18_S00_AXI_arqos);
        xsim_sc_channel<0, bool > *p_18_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_18->S00_AXI_arvalid.bind(*p_18_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_18_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_18_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_18->S00_AXI_arready.bind(*p_18_S00_AXI_arready);
        p_18_S00_AXI_arready->set_sv_netview_offsetfromdp(8535632);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_18_S00_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_18->S00_AXI_rid.bind(*p_18_S00_AXI_rid);
        p_18_S00_AXI_rid->set_sv_netview_offsetfromdp(8535688);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_18_S00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_18->S00_AXI_rdata.bind(*p_18_S00_AXI_rdata);
        p_18_S00_AXI_rdata->set_sv_netview_offsetfromdp(8535744);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->S00_AXI_rresp.bind(*p_18_S00_AXI_rresp);
        p_18_S00_AXI_rresp->set_sv_netview_offsetfromdp(8535800);
        xsim_sc_channel<0, bool > *p_18_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_18->S00_AXI_rlast.bind(*p_18_S00_AXI_rlast);
        p_18_S00_AXI_rlast->set_sv_netview_offsetfromdp(8535856);
        xsim_sc_channel<0, bool > *p_18_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_18->S00_AXI_rvalid.bind(*p_18_S00_AXI_rvalid);
        p_18_S00_AXI_rvalid->set_sv_netview_offsetfromdp(8535912);
        xsim_sc_channel<0, bool > *p_18_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_18->S00_AXI_rready.bind(*p_18_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_18_S00_AXI_rready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_18_M00_AXI_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_18->M00_AXI_araddr.bind(*p_18_M00_AXI_araddr);
        p_18_M00_AXI_araddr->set_sv_netview_offsetfromdp(8536024);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_M00_AXI_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->M00_AXI_arlen.bind(*p_18_M00_AXI_arlen);
        p_18_M00_AXI_arlen->set_sv_netview_offsetfromdp(8536080);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_18_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_18->M00_AXI_arsize.bind(*p_18_M00_AXI_arsize);
        p_18_M00_AXI_arsize->set_sv_netview_offsetfromdp(8536136);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->M00_AXI_arburst.bind(*p_18_M00_AXI_arburst);
        p_18_M00_AXI_arburst->set_sv_netview_offsetfromdp(8536192);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_M00_AXI_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->M00_AXI_arlock.bind(*p_18_M00_AXI_arlock);
        p_18_M00_AXI_arlock->set_sv_netview_offsetfromdp(8536248);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->M00_AXI_arcache.bind(*p_18_M00_AXI_arcache);
        p_18_M00_AXI_arcache->set_sv_netview_offsetfromdp(8536304);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_18_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_18->M00_AXI_arprot.bind(*p_18_M00_AXI_arprot);
        p_18_M00_AXI_arprot->set_sv_netview_offsetfromdp(8536360);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->M00_AXI_arqos.bind(*p_18_M00_AXI_arqos);
        p_18_M00_AXI_arqos->set_sv_netview_offsetfromdp(8536416);
        xsim_sc_channel<0, bool > *p_18_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_18->M00_AXI_arvalid.bind(*p_18_M00_AXI_arvalid);
        p_18_M00_AXI_arvalid->set_sv_netview_offsetfromdp(8536472);
        xsim_sc_channel<0, bool > *p_18_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_18->M00_AXI_arready.bind(*p_18_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_18_M00_AXI_arready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_18_M00_AXI_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_18->M00_AXI_rdata.bind(*p_18_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_18_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->M00_AXI_rresp.bind(*p_18_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_18_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_18_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_18->M00_AXI_rlast.bind(*p_18_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_18_M00_AXI_rlast);
        xsim_sc_channel<0, bool > *p_18_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_18->M00_AXI_rvalid.bind(*p_18_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_18_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_18_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_18->M00_AXI_rready.bind(*p_18_M00_AXI_rready);
        p_18_M00_AXI_rready->set_sv_netview_offsetfromdp(8536808);
        sc_inst_19 = new bd_5dca_slice2_1_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.hmss_0.inst.path_1.slice2_1");
        sc_inst_19->xsim_set_dbg_index(2155);
        xsim_sc_channel<0, bool > *p_19_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_19->aclk.bind(*p_19_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_19_aclk);
        xsim_sc_channel<0, bool > *p_19_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_19->aresetn.bind(*p_19_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_19_aresetn);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_19_s_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_19->s_axi_awaddr.bind(*p_19_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_awaddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_s_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->s_axi_awlen.bind(*p_19_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_19_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_19->s_axi_awsize.bind(*p_19_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->s_axi_awburst.bind(*p_19_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_awburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_s_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->s_axi_awlock.bind(*p_19_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->s_axi_awcache.bind(*p_19_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_19_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_19->s_axi_awprot.bind(*p_19_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->s_axi_awqos.bind(*p_19_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_awqos);
        xsim_sc_channel<0, bool > *p_19_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_awvalid.bind(*p_19_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_19_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_awready.bind(*p_19_s_axi_awready);
        p_19_s_axi_awready->set_sv_netview_offsetfromdp(8537528);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_19_s_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_19->s_axi_wdata.bind(*p_19_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_wdata);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_19_s_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_19->s_axi_wstrb.bind(*p_19_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_19_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_wlast.bind(*p_19_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_19_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_wvalid.bind(*p_19_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_19_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_wready.bind(*p_19_s_axi_wready);
        p_19_s_axi_wready->set_sv_netview_offsetfromdp(8537808);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->s_axi_bresp.bind(*p_19_s_axi_bresp);
        p_19_s_axi_bresp->set_sv_netview_offsetfromdp(8537864);
        xsim_sc_channel<0, bool > *p_19_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_bvalid.bind(*p_19_s_axi_bvalid);
        p_19_s_axi_bvalid->set_sv_netview_offsetfromdp(8537920);
        xsim_sc_channel<0, bool > *p_19_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_bready.bind(*p_19_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_bready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_19_s_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_19->s_axi_araddr.bind(*p_19_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_araddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_s_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->s_axi_arlen.bind(*p_19_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_19_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_19->s_axi_arsize.bind(*p_19_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->s_axi_arburst.bind(*p_19_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_arburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_s_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->s_axi_arlock.bind(*p_19_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->s_axi_arcache.bind(*p_19_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_19_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_19->s_axi_arprot.bind(*p_19_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->s_axi_arqos.bind(*p_19_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_arqos);
        xsim_sc_channel<0, bool > *p_19_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_arvalid.bind(*p_19_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_19_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_arready.bind(*p_19_s_axi_arready);
        p_19_s_axi_arready->set_sv_netview_offsetfromdp(8538536);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_19_s_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_19->s_axi_rdata.bind(*p_19_s_axi_rdata);
        p_19_s_axi_rdata->set_sv_netview_offsetfromdp(8538592);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->s_axi_rresp.bind(*p_19_s_axi_rresp);
        p_19_s_axi_rresp->set_sv_netview_offsetfromdp(8538648);
        xsim_sc_channel<0, bool > *p_19_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_rlast.bind(*p_19_s_axi_rlast);
        p_19_s_axi_rlast->set_sv_netview_offsetfromdp(8538704);
        xsim_sc_channel<0, bool > *p_19_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_rvalid.bind(*p_19_s_axi_rvalid);
        p_19_s_axi_rvalid->set_sv_netview_offsetfromdp(8538760);
        xsim_sc_channel<0, bool > *p_19_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_rready.bind(*p_19_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_rready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_19_m_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_19->m_axi_awaddr.bind(*p_19_m_axi_awaddr);
        p_19_m_axi_awaddr->set_sv_netview_offsetfromdp(8538872);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_m_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->m_axi_awlen.bind(*p_19_m_axi_awlen);
        p_19_m_axi_awlen->set_sv_netview_offsetfromdp(8538928);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_19_m_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_19->m_axi_awsize.bind(*p_19_m_axi_awsize);
        p_19_m_axi_awsize->set_sv_netview_offsetfromdp(8538984);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_m_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->m_axi_awburst.bind(*p_19_m_axi_awburst);
        p_19_m_axi_awburst->set_sv_netview_offsetfromdp(8539040);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_m_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->m_axi_awlock.bind(*p_19_m_axi_awlock);
        p_19_m_axi_awlock->set_sv_netview_offsetfromdp(8539096);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_m_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->m_axi_awcache.bind(*p_19_m_axi_awcache);
        p_19_m_axi_awcache->set_sv_netview_offsetfromdp(8539152);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_19_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_19->m_axi_awprot.bind(*p_19_m_axi_awprot);
        p_19_m_axi_awprot->set_sv_netview_offsetfromdp(8539208);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_m_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->m_axi_awqos.bind(*p_19_m_axi_awqos);
        p_19_m_axi_awqos->set_sv_netview_offsetfromdp(8539264);
        xsim_sc_channel<0, bool > *p_19_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axi_awvalid.bind(*p_19_m_axi_awvalid);
        p_19_m_axi_awvalid->set_sv_netview_offsetfromdp(8539320);
        xsim_sc_channel<0, bool > *p_19_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axi_awready.bind(*p_19_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_19_m_axi_awready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_19_m_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_19->m_axi_wdata.bind(*p_19_m_axi_wdata);
        p_19_m_axi_wdata->set_sv_netview_offsetfromdp(8539432);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_19_m_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_19->m_axi_wstrb.bind(*p_19_m_axi_wstrb);
        p_19_m_axi_wstrb->set_sv_netview_offsetfromdp(8539488);
        xsim_sc_channel<0, bool > *p_19_m_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axi_wlast.bind(*p_19_m_axi_wlast);
        p_19_m_axi_wlast->set_sv_netview_offsetfromdp(8539544);
        xsim_sc_channel<0, bool > *p_19_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axi_wvalid.bind(*p_19_m_axi_wvalid);
        p_19_m_axi_wvalid->set_sv_netview_offsetfromdp(8539600);
        xsim_sc_channel<0, bool > *p_19_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axi_wready.bind(*p_19_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_19_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->m_axi_bresp.bind(*p_19_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_19_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_19_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axi_bvalid.bind(*p_19_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_19_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_19_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axi_bready.bind(*p_19_m_axi_bready);
        p_19_m_axi_bready->set_sv_netview_offsetfromdp(8539824);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_19_m_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_19->m_axi_araddr.bind(*p_19_m_axi_araddr);
        p_19_m_axi_araddr->set_sv_netview_offsetfromdp(8539880);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_m_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->m_axi_arlen.bind(*p_19_m_axi_arlen);
        p_19_m_axi_arlen->set_sv_netview_offsetfromdp(8539936);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_19_m_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_19->m_axi_arsize.bind(*p_19_m_axi_arsize);
        p_19_m_axi_arsize->set_sv_netview_offsetfromdp(8539992);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_m_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->m_axi_arburst.bind(*p_19_m_axi_arburst);
        p_19_m_axi_arburst->set_sv_netview_offsetfromdp(8540048);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_m_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->m_axi_arlock.bind(*p_19_m_axi_arlock);
        p_19_m_axi_arlock->set_sv_netview_offsetfromdp(8540104);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_m_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->m_axi_arcache.bind(*p_19_m_axi_arcache);
        p_19_m_axi_arcache->set_sv_netview_offsetfromdp(8540160);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_19_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_19->m_axi_arprot.bind(*p_19_m_axi_arprot);
        p_19_m_axi_arprot->set_sv_netview_offsetfromdp(8540216);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_m_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->m_axi_arqos.bind(*p_19_m_axi_arqos);
        p_19_m_axi_arqos->set_sv_netview_offsetfromdp(8540272);
        xsim_sc_channel<0, bool > *p_19_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axi_arvalid.bind(*p_19_m_axi_arvalid);
        p_19_m_axi_arvalid->set_sv_netview_offsetfromdp(8540328);
        xsim_sc_channel<0, bool > *p_19_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axi_arready.bind(*p_19_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_19_m_axi_arready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_19_m_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_19->m_axi_rdata.bind(*p_19_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_19_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->m_axi_rresp.bind(*p_19_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_19_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_19_m_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axi_rlast.bind(*p_19_m_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_19_m_axi_rlast);
        xsim_sc_channel<0, bool > *p_19_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axi_rvalid.bind(*p_19_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_19_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_19_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axi_rready.bind(*p_19_m_axi_rready);
        p_19_m_axi_rready->set_sv_netview_offsetfromdp(8540664);
        sc_inst_20 = new bd_5dca_interconnect0_2_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.hmss_0.inst.path_2.interconnect0_2");
        sc_inst_20->xsim_set_dbg_index(2208);
        xsim_sc_channel<0, bool > *p_20_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_20->aclk.bind(*p_20_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_20_aclk);
        xsim_sc_channel<0, bool > *p_20_aclk1 = new xsim_sc_channel<0, bool >();
        sc_inst_20->aclk1.bind(*p_20_aclk1);
        (*_glb_hdl_sc_channel_map).push_back(p_20_aclk1);
        xsim_sc_channel<0, bool > *p_20_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_20->aresetn.bind(*p_20_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_20_aresetn);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_20_S00_AXI_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_20->S00_AXI_awaddr.bind(*p_20_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_20_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_20_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_20->S00_AXI_awlen.bind(*p_20_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_20_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_20_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_20->S00_AXI_awsize.bind(*p_20_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_20_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->S00_AXI_awburst.bind(*p_20_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_20_S00_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_20_S00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_20->S00_AXI_awlock.bind(*p_20_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_20_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->S00_AXI_awcache.bind(*p_20_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_20_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_20_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_20->S00_AXI_awprot.bind(*p_20_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_20_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->S00_AXI_awqos.bind(*p_20_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_20_S00_AXI_awqos);
        xsim_sc_channel<0, bool > *p_20_S00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_20->S00_AXI_awvalid.bind(*p_20_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_20_S00_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_20_S00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_20->S00_AXI_awready.bind(*p_20_S00_AXI_awready);
        p_20_S00_AXI_awready->set_sv_netview_offsetfromdp(8602832);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_20_S00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_20->S00_AXI_wdata.bind(*p_20_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_20_S00_AXI_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_20_S00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_20->S00_AXI_wstrb.bind(*p_20_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_20_S00_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_20_S00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_20->S00_AXI_wlast.bind(*p_20_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_20_S00_AXI_wlast);
        xsim_sc_channel<0, bool > *p_20_S00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_20->S00_AXI_wvalid.bind(*p_20_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_20_S00_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_20_S00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_20->S00_AXI_wready.bind(*p_20_S00_AXI_wready);
        p_20_S00_AXI_wready->set_sv_netview_offsetfromdp(8603112);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->S00_AXI_bresp.bind(*p_20_S00_AXI_bresp);
        p_20_S00_AXI_bresp->set_sv_netview_offsetfromdp(8603168);
        xsim_sc_channel<0, bool > *p_20_S00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_20->S00_AXI_bvalid.bind(*p_20_S00_AXI_bvalid);
        p_20_S00_AXI_bvalid->set_sv_netview_offsetfromdp(8603224);
        xsim_sc_channel<0, bool > *p_20_S00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_20->S00_AXI_bready.bind(*p_20_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_20_S00_AXI_bready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_20_S00_AXI_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_20->S00_AXI_araddr.bind(*p_20_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_20_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_20_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_20->S00_AXI_arlen.bind(*p_20_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_20_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_20_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_20->S00_AXI_arsize.bind(*p_20_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_20_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->S00_AXI_arburst.bind(*p_20_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_20_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_20_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_20->S00_AXI_arlock.bind(*p_20_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_20_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->S00_AXI_arcache.bind(*p_20_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_20_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_20_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_20->S00_AXI_arprot.bind(*p_20_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_20_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->S00_AXI_arqos.bind(*p_20_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_20_S00_AXI_arqos);
        xsim_sc_channel<0, bool > *p_20_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_20->S00_AXI_arvalid.bind(*p_20_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_20_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_20_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_20->S00_AXI_arready.bind(*p_20_S00_AXI_arready);
        p_20_S00_AXI_arready->set_sv_netview_offsetfromdp(8603840);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_20_S00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_20->S00_AXI_rdata.bind(*p_20_S00_AXI_rdata);
        p_20_S00_AXI_rdata->set_sv_netview_offsetfromdp(8603896);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->S00_AXI_rresp.bind(*p_20_S00_AXI_rresp);
        p_20_S00_AXI_rresp->set_sv_netview_offsetfromdp(8603952);
        xsim_sc_channel<0, bool > *p_20_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_20->S00_AXI_rlast.bind(*p_20_S00_AXI_rlast);
        p_20_S00_AXI_rlast->set_sv_netview_offsetfromdp(8604008);
        xsim_sc_channel<0, bool > *p_20_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_20->S00_AXI_rvalid.bind(*p_20_S00_AXI_rvalid);
        p_20_S00_AXI_rvalid->set_sv_netview_offsetfromdp(8604064);
        xsim_sc_channel<0, bool > *p_20_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_20->S00_AXI_rready.bind(*p_20_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_20_S00_AXI_rready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_20_M00_AXI_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_20->M00_AXI_awaddr.bind(*p_20_M00_AXI_awaddr);
        p_20_M00_AXI_awaddr->set_sv_netview_offsetfromdp(8604176);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_M00_AXI_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->M00_AXI_awlen.bind(*p_20_M00_AXI_awlen);
        p_20_M00_AXI_awlen->set_sv_netview_offsetfromdp(8604232);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_20_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_20->M00_AXI_awsize.bind(*p_20_M00_AXI_awsize);
        p_20_M00_AXI_awsize->set_sv_netview_offsetfromdp(8604288);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->M00_AXI_awburst.bind(*p_20_M00_AXI_awburst);
        p_20_M00_AXI_awburst->set_sv_netview_offsetfromdp(8604344);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_M00_AXI_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->M00_AXI_awlock.bind(*p_20_M00_AXI_awlock);
        p_20_M00_AXI_awlock->set_sv_netview_offsetfromdp(8604400);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->M00_AXI_awcache.bind(*p_20_M00_AXI_awcache);
        p_20_M00_AXI_awcache->set_sv_netview_offsetfromdp(8604456);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_20_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_20->M00_AXI_awprot.bind(*p_20_M00_AXI_awprot);
        p_20_M00_AXI_awprot->set_sv_netview_offsetfromdp(8604512);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->M00_AXI_awqos.bind(*p_20_M00_AXI_awqos);
        p_20_M00_AXI_awqos->set_sv_netview_offsetfromdp(8604568);
        xsim_sc_channel<0, bool > *p_20_M00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_20->M00_AXI_awvalid.bind(*p_20_M00_AXI_awvalid);
        p_20_M00_AXI_awvalid->set_sv_netview_offsetfromdp(8604624);
        xsim_sc_channel<0, bool > *p_20_M00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_20->M00_AXI_awready.bind(*p_20_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_20_M00_AXI_awready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_20_M00_AXI_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_20->M00_AXI_wdata.bind(*p_20_M00_AXI_wdata);
        p_20_M00_AXI_wdata->set_sv_netview_offsetfromdp(8604736);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_20_M00_AXI_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_20->M00_AXI_wstrb.bind(*p_20_M00_AXI_wstrb);
        p_20_M00_AXI_wstrb->set_sv_netview_offsetfromdp(8604792);
        xsim_sc_channel<0, bool > *p_20_M00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_20->M00_AXI_wlast.bind(*p_20_M00_AXI_wlast);
        p_20_M00_AXI_wlast->set_sv_netview_offsetfromdp(8604848);
        xsim_sc_channel<0, bool > *p_20_M00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_20->M00_AXI_wvalid.bind(*p_20_M00_AXI_wvalid);
        p_20_M00_AXI_wvalid->set_sv_netview_offsetfromdp(8604904);
        xsim_sc_channel<0, bool > *p_20_M00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_20->M00_AXI_wready.bind(*p_20_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_20_M00_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->M00_AXI_bresp.bind(*p_20_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_20_M00_AXI_bresp);
        xsim_sc_channel<0, bool > *p_20_M00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_20->M00_AXI_bvalid.bind(*p_20_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_20_M00_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_20_M00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_20->M00_AXI_bready.bind(*p_20_M00_AXI_bready);
        p_20_M00_AXI_bready->set_sv_netview_offsetfromdp(8605128);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_20_M00_AXI_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_20->M00_AXI_araddr.bind(*p_20_M00_AXI_araddr);
        p_20_M00_AXI_araddr->set_sv_netview_offsetfromdp(8605184);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_M00_AXI_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->M00_AXI_arlen.bind(*p_20_M00_AXI_arlen);
        p_20_M00_AXI_arlen->set_sv_netview_offsetfromdp(8605240);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_20_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_20->M00_AXI_arsize.bind(*p_20_M00_AXI_arsize);
        p_20_M00_AXI_arsize->set_sv_netview_offsetfromdp(8605296);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->M00_AXI_arburst.bind(*p_20_M00_AXI_arburst);
        p_20_M00_AXI_arburst->set_sv_netview_offsetfromdp(8605352);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_M00_AXI_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->M00_AXI_arlock.bind(*p_20_M00_AXI_arlock);
        p_20_M00_AXI_arlock->set_sv_netview_offsetfromdp(8605408);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->M00_AXI_arcache.bind(*p_20_M00_AXI_arcache);
        p_20_M00_AXI_arcache->set_sv_netview_offsetfromdp(8605464);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_20_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_20->M00_AXI_arprot.bind(*p_20_M00_AXI_arprot);
        p_20_M00_AXI_arprot->set_sv_netview_offsetfromdp(8605520);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->M00_AXI_arqos.bind(*p_20_M00_AXI_arqos);
        p_20_M00_AXI_arqos->set_sv_netview_offsetfromdp(8605576);
        xsim_sc_channel<0, bool > *p_20_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_20->M00_AXI_arvalid.bind(*p_20_M00_AXI_arvalid);
        p_20_M00_AXI_arvalid->set_sv_netview_offsetfromdp(8605632);
        xsim_sc_channel<0, bool > *p_20_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_20->M00_AXI_arready.bind(*p_20_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_20_M00_AXI_arready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_20_M00_AXI_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_20->M00_AXI_rdata.bind(*p_20_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_20_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->M00_AXI_rresp.bind(*p_20_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_20_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_20_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_20->M00_AXI_rlast.bind(*p_20_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_20_M00_AXI_rlast);
        xsim_sc_channel<0, bool > *p_20_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_20->M00_AXI_rvalid.bind(*p_20_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_20_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_20_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_20->M00_AXI_rready.bind(*p_20_M00_AXI_rready);
        p_20_M00_AXI_rready->set_sv_netview_offsetfromdp(8605968);
        sc_inst_21 = new bd_5dca_slice0_2_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.hmss_0.inst.path_2.slice0_2");
        sc_inst_21->xsim_set_dbg_index(2209);
        xsim_sc_channel<0, bool > *p_21_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_21->aclk.bind(*p_21_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_21_aclk);
        xsim_sc_channel<0, bool > *p_21_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_21->aresetn.bind(*p_21_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_21_aresetn);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_21_s_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_21->s_axi_awaddr.bind(*p_21_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_21_s_axi_awaddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_s_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->s_axi_awlen.bind(*p_21_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_21_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_21_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_21->s_axi_awsize.bind(*p_21_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_21_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->s_axi_awburst.bind(*p_21_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_21_s_axi_awburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_s_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->s_axi_awlock.bind(*p_21_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_21_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->s_axi_awcache.bind(*p_21_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_21_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_21_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_21->s_axi_awprot.bind(*p_21_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_21_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->s_axi_awqos.bind(*p_21_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_21_s_axi_awqos);
        xsim_sc_channel<0, bool > *p_21_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_axi_awvalid.bind(*p_21_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_21_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_21_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_axi_awready.bind(*p_21_s_axi_awready);
        p_21_s_axi_awready->set_sv_netview_offsetfromdp(8606688);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_21_s_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_21->s_axi_wdata.bind(*p_21_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_21_s_axi_wdata);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_21_s_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_21->s_axi_wstrb.bind(*p_21_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_21_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_21_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_axi_wlast.bind(*p_21_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_21_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_21_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_axi_wvalid.bind(*p_21_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_21_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_21_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_axi_wready.bind(*p_21_s_axi_wready);
        p_21_s_axi_wready->set_sv_netview_offsetfromdp(8606968);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->s_axi_bresp.bind(*p_21_s_axi_bresp);
        p_21_s_axi_bresp->set_sv_netview_offsetfromdp(8607024);
        xsim_sc_channel<0, bool > *p_21_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_axi_bvalid.bind(*p_21_s_axi_bvalid);
        p_21_s_axi_bvalid->set_sv_netview_offsetfromdp(8607080);
        xsim_sc_channel<0, bool > *p_21_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_axi_bready.bind(*p_21_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_21_s_axi_bready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_21_s_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_21->s_axi_araddr.bind(*p_21_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_21_s_axi_araddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_s_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->s_axi_arlen.bind(*p_21_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_21_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_21_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_21->s_axi_arsize.bind(*p_21_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_21_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->s_axi_arburst.bind(*p_21_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_21_s_axi_arburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_s_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->s_axi_arlock.bind(*p_21_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_21_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->s_axi_arcache.bind(*p_21_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_21_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_21_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_21->s_axi_arprot.bind(*p_21_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_21_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->s_axi_arqos.bind(*p_21_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_21_s_axi_arqos);
        xsim_sc_channel<0, bool > *p_21_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_axi_arvalid.bind(*p_21_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_21_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_21_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_axi_arready.bind(*p_21_s_axi_arready);
        p_21_s_axi_arready->set_sv_netview_offsetfromdp(8607696);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_21_s_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_21->s_axi_rdata.bind(*p_21_s_axi_rdata);
        p_21_s_axi_rdata->set_sv_netview_offsetfromdp(8607752);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->s_axi_rresp.bind(*p_21_s_axi_rresp);
        p_21_s_axi_rresp->set_sv_netview_offsetfromdp(8607808);
        xsim_sc_channel<0, bool > *p_21_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_axi_rlast.bind(*p_21_s_axi_rlast);
        p_21_s_axi_rlast->set_sv_netview_offsetfromdp(8607864);
        xsim_sc_channel<0, bool > *p_21_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_axi_rvalid.bind(*p_21_s_axi_rvalid);
        p_21_s_axi_rvalid->set_sv_netview_offsetfromdp(8607920);
        xsim_sc_channel<0, bool > *p_21_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_axi_rready.bind(*p_21_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_21_s_axi_rready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_21_m_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_21->m_axi_awaddr.bind(*p_21_m_axi_awaddr);
        p_21_m_axi_awaddr->set_sv_netview_offsetfromdp(8608032);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_m_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->m_axi_awlen.bind(*p_21_m_axi_awlen);
        p_21_m_axi_awlen->set_sv_netview_offsetfromdp(8608088);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_21_m_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_21->m_axi_awsize.bind(*p_21_m_axi_awsize);
        p_21_m_axi_awsize->set_sv_netview_offsetfromdp(8608144);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_m_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->m_axi_awburst.bind(*p_21_m_axi_awburst);
        p_21_m_axi_awburst->set_sv_netview_offsetfromdp(8608200);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_m_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->m_axi_awlock.bind(*p_21_m_axi_awlock);
        p_21_m_axi_awlock->set_sv_netview_offsetfromdp(8608256);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_m_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->m_axi_awcache.bind(*p_21_m_axi_awcache);
        p_21_m_axi_awcache->set_sv_netview_offsetfromdp(8608312);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_21_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_21->m_axi_awprot.bind(*p_21_m_axi_awprot);
        p_21_m_axi_awprot->set_sv_netview_offsetfromdp(8608368);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_m_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->m_axi_awqos.bind(*p_21_m_axi_awqos);
        p_21_m_axi_awqos->set_sv_netview_offsetfromdp(8608424);
        xsim_sc_channel<0, bool > *p_21_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_awvalid.bind(*p_21_m_axi_awvalid);
        p_21_m_axi_awvalid->set_sv_netview_offsetfromdp(8608480);
        xsim_sc_channel<0, bool > *p_21_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_awready.bind(*p_21_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_21_m_axi_awready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_21_m_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_21->m_axi_wdata.bind(*p_21_m_axi_wdata);
        p_21_m_axi_wdata->set_sv_netview_offsetfromdp(8608592);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_21_m_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_21->m_axi_wstrb.bind(*p_21_m_axi_wstrb);
        p_21_m_axi_wstrb->set_sv_netview_offsetfromdp(8608648);
        xsim_sc_channel<0, bool > *p_21_m_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_wlast.bind(*p_21_m_axi_wlast);
        p_21_m_axi_wlast->set_sv_netview_offsetfromdp(8608704);
        xsim_sc_channel<0, bool > *p_21_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_wvalid.bind(*p_21_m_axi_wvalid);
        p_21_m_axi_wvalid->set_sv_netview_offsetfromdp(8608760);
        xsim_sc_channel<0, bool > *p_21_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_wready.bind(*p_21_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_21_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->m_axi_bresp.bind(*p_21_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_21_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_21_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_bvalid.bind(*p_21_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_21_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_21_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_bready.bind(*p_21_m_axi_bready);
        p_21_m_axi_bready->set_sv_netview_offsetfromdp(8608984);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_21_m_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_21->m_axi_araddr.bind(*p_21_m_axi_araddr);
        p_21_m_axi_araddr->set_sv_netview_offsetfromdp(8609040);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_m_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->m_axi_arlen.bind(*p_21_m_axi_arlen);
        p_21_m_axi_arlen->set_sv_netview_offsetfromdp(8609096);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_21_m_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_21->m_axi_arsize.bind(*p_21_m_axi_arsize);
        p_21_m_axi_arsize->set_sv_netview_offsetfromdp(8609152);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_m_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->m_axi_arburst.bind(*p_21_m_axi_arburst);
        p_21_m_axi_arburst->set_sv_netview_offsetfromdp(8609208);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_m_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->m_axi_arlock.bind(*p_21_m_axi_arlock);
        p_21_m_axi_arlock->set_sv_netview_offsetfromdp(8609264);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_m_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->m_axi_arcache.bind(*p_21_m_axi_arcache);
        p_21_m_axi_arcache->set_sv_netview_offsetfromdp(8609320);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_21_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_21->m_axi_arprot.bind(*p_21_m_axi_arprot);
        p_21_m_axi_arprot->set_sv_netview_offsetfromdp(8609376);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_m_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->m_axi_arqos.bind(*p_21_m_axi_arqos);
        p_21_m_axi_arqos->set_sv_netview_offsetfromdp(8609432);
        xsim_sc_channel<0, bool > *p_21_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_arvalid.bind(*p_21_m_axi_arvalid);
        p_21_m_axi_arvalid->set_sv_netview_offsetfromdp(8609488);
        xsim_sc_channel<0, bool > *p_21_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_arready.bind(*p_21_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_21_m_axi_arready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_21_m_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_21->m_axi_rdata.bind(*p_21_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_21_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->m_axi_rresp.bind(*p_21_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_21_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_21_m_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_rlast.bind(*p_21_m_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_21_m_axi_rlast);
        xsim_sc_channel<0, bool > *p_21_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_rvalid.bind(*p_21_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_21_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_21_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_rready.bind(*p_21_m_axi_rready);
        p_21_m_axi_rready->set_sv_netview_offsetfromdp(8609824);
        sc_inst_22 = new bd_5dca_vip_S00_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.hmss_0.inst.vip_S00");
        sc_inst_22->xsim_set_dbg_index(901);
        xsim_sc_channel<0, bool > *p_22_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_22->aclk.bind(*p_22_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_22_aclk);
        xsim_sc_channel<0, bool > *p_22_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_22->aresetn.bind(*p_22_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_22_aresetn);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_22_s_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_22->s_axi_awaddr.bind(*p_22_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_awaddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_s_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->s_axi_awlen.bind(*p_22_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_awlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->s_axi_awburst.bind(*p_22_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_awburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_s_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->s_axi_awlock.bind(*p_22_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->s_axi_awcache.bind(*p_22_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_22_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_22->s_axi_awprot.bind(*p_22_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->s_axi_awqos.bind(*p_22_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_awqos);
        xsim_sc_channel<0, bool > *p_22_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_awvalid.bind(*p_22_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_22_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_awready.bind(*p_22_s_axi_awready);
        p_22_s_axi_awready->set_sv_netview_offsetfromdp(8610488);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_22_s_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_22->s_axi_wdata.bind(*p_22_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_wdata);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_22_s_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_22->s_axi_wstrb.bind(*p_22_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_22_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_wlast.bind(*p_22_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_22_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_wvalid.bind(*p_22_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_22_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_wready.bind(*p_22_s_axi_wready);
        p_22_s_axi_wready->set_sv_netview_offsetfromdp(8610768);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->s_axi_bresp.bind(*p_22_s_axi_bresp);
        p_22_s_axi_bresp->set_sv_netview_offsetfromdp(8610824);
        xsim_sc_channel<0, bool > *p_22_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_bvalid.bind(*p_22_s_axi_bvalid);
        p_22_s_axi_bvalid->set_sv_netview_offsetfromdp(8610880);
        xsim_sc_channel<0, bool > *p_22_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_bready.bind(*p_22_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_bready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_22_s_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_22->s_axi_araddr.bind(*p_22_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_araddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_s_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->s_axi_arlen.bind(*p_22_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_arlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->s_axi_arburst.bind(*p_22_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_arburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_s_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->s_axi_arlock.bind(*p_22_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->s_axi_arcache.bind(*p_22_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_22_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_22->s_axi_arprot.bind(*p_22_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->s_axi_arqos.bind(*p_22_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_arqos);
        xsim_sc_channel<0, bool > *p_22_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_arvalid.bind(*p_22_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_22_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_arready.bind(*p_22_s_axi_arready);
        p_22_s_axi_arready->set_sv_netview_offsetfromdp(8611440);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_22_s_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_22->s_axi_rdata.bind(*p_22_s_axi_rdata);
        p_22_s_axi_rdata->set_sv_netview_offsetfromdp(8611496);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->s_axi_rresp.bind(*p_22_s_axi_rresp);
        p_22_s_axi_rresp->set_sv_netview_offsetfromdp(8611552);
        xsim_sc_channel<0, bool > *p_22_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_rlast.bind(*p_22_s_axi_rlast);
        p_22_s_axi_rlast->set_sv_netview_offsetfromdp(8611608);
        xsim_sc_channel<0, bool > *p_22_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_rvalid.bind(*p_22_s_axi_rvalid);
        p_22_s_axi_rvalid->set_sv_netview_offsetfromdp(8611664);
        xsim_sc_channel<0, bool > *p_22_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_rready.bind(*p_22_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_rready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_22_m_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_22->m_axi_awaddr.bind(*p_22_m_axi_awaddr);
        p_22_m_axi_awaddr->set_sv_netview_offsetfromdp(8611776);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_m_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->m_axi_awlen.bind(*p_22_m_axi_awlen);
        p_22_m_axi_awlen->set_sv_netview_offsetfromdp(8611832);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_m_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->m_axi_awburst.bind(*p_22_m_axi_awburst);
        p_22_m_axi_awburst->set_sv_netview_offsetfromdp(8611888);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_m_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->m_axi_awlock.bind(*p_22_m_axi_awlock);
        p_22_m_axi_awlock->set_sv_netview_offsetfromdp(8611944);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_m_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->m_axi_awcache.bind(*p_22_m_axi_awcache);
        p_22_m_axi_awcache->set_sv_netview_offsetfromdp(8612000);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_22_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_22->m_axi_awprot.bind(*p_22_m_axi_awprot);
        p_22_m_axi_awprot->set_sv_netview_offsetfromdp(8612056);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_m_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->m_axi_awqos.bind(*p_22_m_axi_awqos);
        p_22_m_axi_awqos->set_sv_netview_offsetfromdp(8612112);
        xsim_sc_channel<0, bool > *p_22_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axi_awvalid.bind(*p_22_m_axi_awvalid);
        p_22_m_axi_awvalid->set_sv_netview_offsetfromdp(8612168);
        xsim_sc_channel<0, bool > *p_22_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axi_awready.bind(*p_22_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_22_m_axi_awready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_22_m_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_22->m_axi_wdata.bind(*p_22_m_axi_wdata);
        p_22_m_axi_wdata->set_sv_netview_offsetfromdp(8612280);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_22_m_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_22->m_axi_wstrb.bind(*p_22_m_axi_wstrb);
        p_22_m_axi_wstrb->set_sv_netview_offsetfromdp(8612336);
        xsim_sc_channel<0, bool > *p_22_m_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axi_wlast.bind(*p_22_m_axi_wlast);
        p_22_m_axi_wlast->set_sv_netview_offsetfromdp(8612392);
        xsim_sc_channel<0, bool > *p_22_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axi_wvalid.bind(*p_22_m_axi_wvalid);
        p_22_m_axi_wvalid->set_sv_netview_offsetfromdp(8612448);
        xsim_sc_channel<0, bool > *p_22_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axi_wready.bind(*p_22_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_22_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->m_axi_bresp.bind(*p_22_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_22_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_22_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axi_bvalid.bind(*p_22_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_22_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_22_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axi_bready.bind(*p_22_m_axi_bready);
        p_22_m_axi_bready->set_sv_netview_offsetfromdp(8612672);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_22_m_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_22->m_axi_araddr.bind(*p_22_m_axi_araddr);
        p_22_m_axi_araddr->set_sv_netview_offsetfromdp(8612728);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_m_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->m_axi_arlen.bind(*p_22_m_axi_arlen);
        p_22_m_axi_arlen->set_sv_netview_offsetfromdp(8612784);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_m_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->m_axi_arburst.bind(*p_22_m_axi_arburst);
        p_22_m_axi_arburst->set_sv_netview_offsetfromdp(8612840);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_m_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->m_axi_arlock.bind(*p_22_m_axi_arlock);
        p_22_m_axi_arlock->set_sv_netview_offsetfromdp(8612896);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_m_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->m_axi_arcache.bind(*p_22_m_axi_arcache);
        p_22_m_axi_arcache->set_sv_netview_offsetfromdp(8612952);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_22_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_22->m_axi_arprot.bind(*p_22_m_axi_arprot);
        p_22_m_axi_arprot->set_sv_netview_offsetfromdp(8613008);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_m_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->m_axi_arqos.bind(*p_22_m_axi_arqos);
        p_22_m_axi_arqos->set_sv_netview_offsetfromdp(8613064);
        xsim_sc_channel<0, bool > *p_22_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axi_arvalid.bind(*p_22_m_axi_arvalid);
        p_22_m_axi_arvalid->set_sv_netview_offsetfromdp(8613120);
        xsim_sc_channel<0, bool > *p_22_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axi_arready.bind(*p_22_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_22_m_axi_arready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_22_m_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_22->m_axi_rdata.bind(*p_22_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_22_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->m_axi_rresp.bind(*p_22_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_22_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_22_m_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axi_rlast.bind(*p_22_m_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_22_m_axi_rlast);
        xsim_sc_channel<0, bool > *p_22_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axi_rvalid.bind(*p_22_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_22_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_22_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axi_rready.bind(*p_22_m_axi_rready);
        p_22_m_axi_rready->set_sv_netview_offsetfromdp(8613456);
        sc_inst_23 = new bd_5dca_vip_S01_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.hmss_0.inst.vip_S01");
        sc_inst_23->xsim_set_dbg_index(902);
        xsim_sc_channel<0, bool > *p_23_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_23->aclk.bind(*p_23_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_23_aclk);
        xsim_sc_channel<0, bool > *p_23_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_23->aresetn.bind(*p_23_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_23_aresetn);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_23_s_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_23->s_axi_awaddr.bind(*p_23_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_23_s_axi_awaddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_s_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->s_axi_awlen.bind(*p_23_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_23_s_axi_awlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->s_axi_awburst.bind(*p_23_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_23_s_axi_awburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_s_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->s_axi_awlock.bind(*p_23_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_23_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->s_axi_awcache.bind(*p_23_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_23_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->s_axi_awprot.bind(*p_23_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_23_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->s_axi_awqos.bind(*p_23_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_23_s_axi_awqos);
        xsim_sc_channel<0, bool > *p_23_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_axi_awvalid.bind(*p_23_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_23_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_23_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_axi_awready.bind(*p_23_s_axi_awready);
        p_23_s_axi_awready->set_sv_netview_offsetfromdp(8614120);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_23_s_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_23->s_axi_wdata.bind(*p_23_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_23_s_axi_wdata);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_23_s_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_23->s_axi_wstrb.bind(*p_23_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_23_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_23_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_axi_wlast.bind(*p_23_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_23_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_23_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_axi_wvalid.bind(*p_23_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_23_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_23_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_axi_wready.bind(*p_23_s_axi_wready);
        p_23_s_axi_wready->set_sv_netview_offsetfromdp(8614400);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->s_axi_bresp.bind(*p_23_s_axi_bresp);
        p_23_s_axi_bresp->set_sv_netview_offsetfromdp(8614456);
        xsim_sc_channel<0, bool > *p_23_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_axi_bvalid.bind(*p_23_s_axi_bvalid);
        p_23_s_axi_bvalid->set_sv_netview_offsetfromdp(8614512);
        xsim_sc_channel<0, bool > *p_23_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_axi_bready.bind(*p_23_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_23_s_axi_bready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_23_s_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_23->s_axi_araddr.bind(*p_23_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_23_s_axi_araddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_s_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->s_axi_arlen.bind(*p_23_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_23_s_axi_arlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->s_axi_arburst.bind(*p_23_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_23_s_axi_arburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_s_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->s_axi_arlock.bind(*p_23_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_23_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->s_axi_arcache.bind(*p_23_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_23_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->s_axi_arprot.bind(*p_23_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_23_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->s_axi_arqos.bind(*p_23_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_23_s_axi_arqos);
        xsim_sc_channel<0, bool > *p_23_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_axi_arvalid.bind(*p_23_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_23_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_23_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_axi_arready.bind(*p_23_s_axi_arready);
        p_23_s_axi_arready->set_sv_netview_offsetfromdp(8615072);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_23_s_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_23->s_axi_rdata.bind(*p_23_s_axi_rdata);
        p_23_s_axi_rdata->set_sv_netview_offsetfromdp(8615128);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->s_axi_rresp.bind(*p_23_s_axi_rresp);
        p_23_s_axi_rresp->set_sv_netview_offsetfromdp(8615184);
        xsim_sc_channel<0, bool > *p_23_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_axi_rlast.bind(*p_23_s_axi_rlast);
        p_23_s_axi_rlast->set_sv_netview_offsetfromdp(8615240);
        xsim_sc_channel<0, bool > *p_23_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_axi_rvalid.bind(*p_23_s_axi_rvalid);
        p_23_s_axi_rvalid->set_sv_netview_offsetfromdp(8615296);
        xsim_sc_channel<0, bool > *p_23_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_axi_rready.bind(*p_23_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_23_s_axi_rready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_23_m_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_23->m_axi_awaddr.bind(*p_23_m_axi_awaddr);
        p_23_m_axi_awaddr->set_sv_netview_offsetfromdp(8615408);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_m_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->m_axi_awlen.bind(*p_23_m_axi_awlen);
        p_23_m_axi_awlen->set_sv_netview_offsetfromdp(8615464);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_m_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->m_axi_awburst.bind(*p_23_m_axi_awburst);
        p_23_m_axi_awburst->set_sv_netview_offsetfromdp(8615520);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_m_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->m_axi_awlock.bind(*p_23_m_axi_awlock);
        p_23_m_axi_awlock->set_sv_netview_offsetfromdp(8615576);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_m_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->m_axi_awcache.bind(*p_23_m_axi_awcache);
        p_23_m_axi_awcache->set_sv_netview_offsetfromdp(8615632);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->m_axi_awprot.bind(*p_23_m_axi_awprot);
        p_23_m_axi_awprot->set_sv_netview_offsetfromdp(8615688);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_m_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->m_axi_awqos.bind(*p_23_m_axi_awqos);
        p_23_m_axi_awqos->set_sv_netview_offsetfromdp(8615744);
        xsim_sc_channel<0, bool > *p_23_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_axi_awvalid.bind(*p_23_m_axi_awvalid);
        p_23_m_axi_awvalid->set_sv_netview_offsetfromdp(8615800);
        xsim_sc_channel<0, bool > *p_23_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_axi_awready.bind(*p_23_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_23_m_axi_awready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_23_m_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_23->m_axi_wdata.bind(*p_23_m_axi_wdata);
        p_23_m_axi_wdata->set_sv_netview_offsetfromdp(8615912);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_23_m_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_23->m_axi_wstrb.bind(*p_23_m_axi_wstrb);
        p_23_m_axi_wstrb->set_sv_netview_offsetfromdp(8615968);
        xsim_sc_channel<0, bool > *p_23_m_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_axi_wlast.bind(*p_23_m_axi_wlast);
        p_23_m_axi_wlast->set_sv_netview_offsetfromdp(8616024);
        xsim_sc_channel<0, bool > *p_23_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_axi_wvalid.bind(*p_23_m_axi_wvalid);
        p_23_m_axi_wvalid->set_sv_netview_offsetfromdp(8616080);
        xsim_sc_channel<0, bool > *p_23_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_axi_wready.bind(*p_23_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_23_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->m_axi_bresp.bind(*p_23_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_23_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_23_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_axi_bvalid.bind(*p_23_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_23_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_23_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_axi_bready.bind(*p_23_m_axi_bready);
        p_23_m_axi_bready->set_sv_netview_offsetfromdp(8616304);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_23_m_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_23->m_axi_araddr.bind(*p_23_m_axi_araddr);
        p_23_m_axi_araddr->set_sv_netview_offsetfromdp(8616360);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_m_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->m_axi_arlen.bind(*p_23_m_axi_arlen);
        p_23_m_axi_arlen->set_sv_netview_offsetfromdp(8616416);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_m_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->m_axi_arburst.bind(*p_23_m_axi_arburst);
        p_23_m_axi_arburst->set_sv_netview_offsetfromdp(8616472);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_m_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->m_axi_arlock.bind(*p_23_m_axi_arlock);
        p_23_m_axi_arlock->set_sv_netview_offsetfromdp(8616528);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_m_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->m_axi_arcache.bind(*p_23_m_axi_arcache);
        p_23_m_axi_arcache->set_sv_netview_offsetfromdp(8616584);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->m_axi_arprot.bind(*p_23_m_axi_arprot);
        p_23_m_axi_arprot->set_sv_netview_offsetfromdp(8616640);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_m_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->m_axi_arqos.bind(*p_23_m_axi_arqos);
        p_23_m_axi_arqos->set_sv_netview_offsetfromdp(8616696);
        xsim_sc_channel<0, bool > *p_23_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_axi_arvalid.bind(*p_23_m_axi_arvalid);
        p_23_m_axi_arvalid->set_sv_netview_offsetfromdp(8616752);
        xsim_sc_channel<0, bool > *p_23_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_axi_arready.bind(*p_23_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_23_m_axi_arready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_23_m_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_23->m_axi_rdata.bind(*p_23_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_23_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->m_axi_rresp.bind(*p_23_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_23_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_23_m_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_axi_rlast.bind(*p_23_m_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_23_m_axi_rlast);
        xsim_sc_channel<0, bool > *p_23_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_axi_rvalid.bind(*p_23_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_23_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_23_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_axi_rready.bind(*p_23_m_axi_rready);
        p_23_m_axi_rready->set_sv_netview_offsetfromdp(8617088);
        sc_inst_24 = new bd_5dca_vip_S02_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.hmss_0.inst.vip_S02");
        sc_inst_24->xsim_set_dbg_index(903);
        xsim_sc_channel<0, bool > *p_24_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_24->aclk.bind(*p_24_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_24_aclk);
        xsim_sc_channel<0, bool > *p_24_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_24->aresetn.bind(*p_24_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_24_aresetn);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_24_s_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_24->s_axi_awaddr.bind(*p_24_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_awaddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_24_s_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_24->s_axi_awlen.bind(*p_24_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_awlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_24_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_24->s_axi_awburst.bind(*p_24_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_awburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_24_s_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_24->s_axi_awlock.bind(*p_24_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_24_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_24->s_axi_awcache.bind(*p_24_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_24_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_24->s_axi_awprot.bind(*p_24_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_24_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_24->s_axi_awqos.bind(*p_24_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_awqos);
        xsim_sc_channel<0, bool > *p_24_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_24->s_axi_awvalid.bind(*p_24_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_24_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_24->s_axi_awready.bind(*p_24_s_axi_awready);
        p_24_s_axi_awready->set_sv_netview_offsetfromdp(8617752);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_24_s_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_24->s_axi_wdata.bind(*p_24_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_wdata);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_24_s_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_24->s_axi_wstrb.bind(*p_24_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_24_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_24->s_axi_wlast.bind(*p_24_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_24_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_24->s_axi_wvalid.bind(*p_24_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_24_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_24->s_axi_wready.bind(*p_24_s_axi_wready);
        p_24_s_axi_wready->set_sv_netview_offsetfromdp(8618032);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_24_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_24->s_axi_bresp.bind(*p_24_s_axi_bresp);
        p_24_s_axi_bresp->set_sv_netview_offsetfromdp(8618088);
        xsim_sc_channel<0, bool > *p_24_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_24->s_axi_bvalid.bind(*p_24_s_axi_bvalid);
        p_24_s_axi_bvalid->set_sv_netview_offsetfromdp(8618144);
        xsim_sc_channel<0, bool > *p_24_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_24->s_axi_bready.bind(*p_24_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_bready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_24_s_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_24->s_axi_araddr.bind(*p_24_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_araddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_24_s_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_24->s_axi_arlen.bind(*p_24_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_arlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_24_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_24->s_axi_arburst.bind(*p_24_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_arburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_24_s_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_24->s_axi_arlock.bind(*p_24_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_24_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_24->s_axi_arcache.bind(*p_24_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_24_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_24->s_axi_arprot.bind(*p_24_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_24_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_24->s_axi_arqos.bind(*p_24_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_arqos);
        xsim_sc_channel<0, bool > *p_24_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_24->s_axi_arvalid.bind(*p_24_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_24_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_24->s_axi_arready.bind(*p_24_s_axi_arready);
        p_24_s_axi_arready->set_sv_netview_offsetfromdp(8618704);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_24_s_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_24->s_axi_rdata.bind(*p_24_s_axi_rdata);
        p_24_s_axi_rdata->set_sv_netview_offsetfromdp(8618760);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_24_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_24->s_axi_rresp.bind(*p_24_s_axi_rresp);
        p_24_s_axi_rresp->set_sv_netview_offsetfromdp(8618816);
        xsim_sc_channel<0, bool > *p_24_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_24->s_axi_rlast.bind(*p_24_s_axi_rlast);
        p_24_s_axi_rlast->set_sv_netview_offsetfromdp(8618872);
        xsim_sc_channel<0, bool > *p_24_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_24->s_axi_rvalid.bind(*p_24_s_axi_rvalid);
        p_24_s_axi_rvalid->set_sv_netview_offsetfromdp(8618928);
        xsim_sc_channel<0, bool > *p_24_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_24->s_axi_rready.bind(*p_24_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_rready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_24_m_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_24->m_axi_awaddr.bind(*p_24_m_axi_awaddr);
        p_24_m_axi_awaddr->set_sv_netview_offsetfromdp(8619040);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_24_m_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_24->m_axi_awlen.bind(*p_24_m_axi_awlen);
        p_24_m_axi_awlen->set_sv_netview_offsetfromdp(8619096);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_24_m_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_24->m_axi_awburst.bind(*p_24_m_axi_awburst);
        p_24_m_axi_awburst->set_sv_netview_offsetfromdp(8619152);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_24_m_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_24->m_axi_awlock.bind(*p_24_m_axi_awlock);
        p_24_m_axi_awlock->set_sv_netview_offsetfromdp(8619208);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_24_m_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_24->m_axi_awcache.bind(*p_24_m_axi_awcache);
        p_24_m_axi_awcache->set_sv_netview_offsetfromdp(8619264);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_24_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_24->m_axi_awprot.bind(*p_24_m_axi_awprot);
        p_24_m_axi_awprot->set_sv_netview_offsetfromdp(8619320);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_24_m_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_24->m_axi_awqos.bind(*p_24_m_axi_awqos);
        p_24_m_axi_awqos->set_sv_netview_offsetfromdp(8619376);
        xsim_sc_channel<0, bool > *p_24_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_axi_awvalid.bind(*p_24_m_axi_awvalid);
        p_24_m_axi_awvalid->set_sv_netview_offsetfromdp(8619432);
        xsim_sc_channel<0, bool > *p_24_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_axi_awready.bind(*p_24_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_24_m_axi_awready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_24_m_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_24->m_axi_wdata.bind(*p_24_m_axi_wdata);
        p_24_m_axi_wdata->set_sv_netview_offsetfromdp(8619544);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_24_m_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_24->m_axi_wstrb.bind(*p_24_m_axi_wstrb);
        p_24_m_axi_wstrb->set_sv_netview_offsetfromdp(8619600);
        xsim_sc_channel<0, bool > *p_24_m_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_axi_wlast.bind(*p_24_m_axi_wlast);
        p_24_m_axi_wlast->set_sv_netview_offsetfromdp(8619656);
        xsim_sc_channel<0, bool > *p_24_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_axi_wvalid.bind(*p_24_m_axi_wvalid);
        p_24_m_axi_wvalid->set_sv_netview_offsetfromdp(8619712);
        xsim_sc_channel<0, bool > *p_24_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_axi_wready.bind(*p_24_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_24_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_24_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_24->m_axi_bresp.bind(*p_24_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_24_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_24_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_axi_bvalid.bind(*p_24_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_24_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_24_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_axi_bready.bind(*p_24_m_axi_bready);
        p_24_m_axi_bready->set_sv_netview_offsetfromdp(8619936);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_24_m_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_24->m_axi_araddr.bind(*p_24_m_axi_araddr);
        p_24_m_axi_araddr->set_sv_netview_offsetfromdp(8619992);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_24_m_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_24->m_axi_arlen.bind(*p_24_m_axi_arlen);
        p_24_m_axi_arlen->set_sv_netview_offsetfromdp(8620048);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_24_m_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_24->m_axi_arburst.bind(*p_24_m_axi_arburst);
        p_24_m_axi_arburst->set_sv_netview_offsetfromdp(8620104);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_24_m_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_24->m_axi_arlock.bind(*p_24_m_axi_arlock);
        p_24_m_axi_arlock->set_sv_netview_offsetfromdp(8620160);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_24_m_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_24->m_axi_arcache.bind(*p_24_m_axi_arcache);
        p_24_m_axi_arcache->set_sv_netview_offsetfromdp(8620216);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_24_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_24->m_axi_arprot.bind(*p_24_m_axi_arprot);
        p_24_m_axi_arprot->set_sv_netview_offsetfromdp(8620272);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_24_m_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_24->m_axi_arqos.bind(*p_24_m_axi_arqos);
        p_24_m_axi_arqos->set_sv_netview_offsetfromdp(8620328);
        xsim_sc_channel<0, bool > *p_24_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_axi_arvalid.bind(*p_24_m_axi_arvalid);
        p_24_m_axi_arvalid->set_sv_netview_offsetfromdp(8620384);
        xsim_sc_channel<0, bool > *p_24_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_axi_arready.bind(*p_24_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_24_m_axi_arready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_24_m_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_24->m_axi_rdata.bind(*p_24_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_24_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_24_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_24->m_axi_rresp.bind(*p_24_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_24_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_24_m_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_axi_rlast.bind(*p_24_m_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_24_m_axi_rlast);
        xsim_sc_channel<0, bool > *p_24_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_axi_rvalid.bind(*p_24_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_24_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_24_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_axi_rready.bind(*p_24_m_axi_rready);
        p_24_m_axi_rready->set_sv_netview_offsetfromdp(8620720);
        sc_inst_25 = new pfm_dynamic_irq_const_tieoff_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.irq_const_tieoff");
        sc_inst_25->xsim_set_dbg_index(55);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_25_dout = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_25->dout.bind(*p_25_dout);
        p_25_dout->set_sv_netview_offsetfromdp(8789872);
        sc_inst_26 = new bd_d216_sci(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.bd_d216_sci_inst");
        sc_inst_26->xsim_set_dbg_index(1254);
        sc_inst_27 = new bd_d216_interconnect_DDR4_MEM00_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.interconnect.interconnect_ddr4_mem00");
        sc_inst_27->xsim_set_dbg_index(2467);
        xsim_sc_channel<0, bool > *p_27_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_27->aclk.bind(*p_27_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_27_aclk);
        xsim_sc_channel<0, bool > *p_27_aclk1 = new xsim_sc_channel<0, bool >();
        sc_inst_27->aclk1.bind(*p_27_aclk1);
        (*_glb_hdl_sc_channel_map).push_back(p_27_aclk1);
        xsim_sc_channel<0, bool > *p_27_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_27->aresetn.bind(*p_27_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_27_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_27_S00_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_27->S00_AXI_awid.bind(*p_27_S00_AXI_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_27_S00_AXI_awid);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_27_S00_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_27->S00_AXI_awaddr.bind(*p_27_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_27_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_27_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_27->S00_AXI_awlen.bind(*p_27_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_27_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_27_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_27->S00_AXI_awsize.bind(*p_27_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_27_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_27_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_27->S00_AXI_awburst.bind(*p_27_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_27_S00_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_27_S00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_27->S00_AXI_awlock.bind(*p_27_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_27_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_27_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_27->S00_AXI_awcache.bind(*p_27_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_27_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_27_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_27->S00_AXI_awprot.bind(*p_27_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_27_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_27_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_27->S00_AXI_awqos.bind(*p_27_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_27_S00_AXI_awqos);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_27_S00_AXI_awuser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_27->S00_AXI_awuser.bind(*p_27_S00_AXI_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_27_S00_AXI_awuser);
        xsim_sc_channel<0, bool > *p_27_S00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_27->S00_AXI_awvalid.bind(*p_27_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_27_S00_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_27_S00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_27->S00_AXI_awready.bind(*p_27_S00_AXI_awready);
        p_27_S00_AXI_awready->set_sv_netview_offsetfromdp(9684384);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_27_S00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_27->S00_AXI_wdata.bind(*p_27_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_27_S00_AXI_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_27_S00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_27->S00_AXI_wstrb.bind(*p_27_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_27_S00_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_27_S00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_27->S00_AXI_wlast.bind(*p_27_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_27_S00_AXI_wlast);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_27_S00_AXI_wuser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_27->S00_AXI_wuser.bind(*p_27_S00_AXI_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_27_S00_AXI_wuser);
        xsim_sc_channel<0, bool > *p_27_S00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_27->S00_AXI_wvalid.bind(*p_27_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_27_S00_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_27_S00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_27->S00_AXI_wready.bind(*p_27_S00_AXI_wready);
        p_27_S00_AXI_wready->set_sv_netview_offsetfromdp(9684720);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_27_S00_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_27->S00_AXI_bid.bind(*p_27_S00_AXI_bid);
        p_27_S00_AXI_bid->set_sv_netview_offsetfromdp(9684776);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_27_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_27->S00_AXI_bresp.bind(*p_27_S00_AXI_bresp);
        p_27_S00_AXI_bresp->set_sv_netview_offsetfromdp(9684832);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_27_S00_AXI_buser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_27->S00_AXI_buser.bind(*p_27_S00_AXI_buser);
        p_27_S00_AXI_buser->set_sv_netview_offsetfromdp(9684888);
        xsim_sc_channel<0, bool > *p_27_S00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_27->S00_AXI_bvalid.bind(*p_27_S00_AXI_bvalid);
        p_27_S00_AXI_bvalid->set_sv_netview_offsetfromdp(9684944);
        xsim_sc_channel<0, bool > *p_27_S00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_27->S00_AXI_bready.bind(*p_27_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_27_S00_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_27_S00_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_27->S00_AXI_arid.bind(*p_27_S00_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_27_S00_AXI_arid);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_27_S00_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_27->S00_AXI_araddr.bind(*p_27_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_27_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_27_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_27->S00_AXI_arlen.bind(*p_27_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_27_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_27_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_27->S00_AXI_arsize.bind(*p_27_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_27_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_27_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_27->S00_AXI_arburst.bind(*p_27_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_27_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_27_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_27->S00_AXI_arlock.bind(*p_27_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_27_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_27_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_27->S00_AXI_arcache.bind(*p_27_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_27_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_27_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_27->S00_AXI_arprot.bind(*p_27_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_27_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_27_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_27->S00_AXI_arqos.bind(*p_27_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_27_S00_AXI_arqos);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_27_S00_AXI_aruser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_27->S00_AXI_aruser.bind(*p_27_S00_AXI_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_27_S00_AXI_aruser);
        xsim_sc_channel<0, bool > *p_27_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_27->S00_AXI_arvalid.bind(*p_27_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_27_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_27_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_27->S00_AXI_arready.bind(*p_27_S00_AXI_arready);
        p_27_S00_AXI_arready->set_sv_netview_offsetfromdp(9685672);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_27_S00_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_27->S00_AXI_rid.bind(*p_27_S00_AXI_rid);
        p_27_S00_AXI_rid->set_sv_netview_offsetfromdp(9685728);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_27_S00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_27->S00_AXI_rdata.bind(*p_27_S00_AXI_rdata);
        p_27_S00_AXI_rdata->set_sv_netview_offsetfromdp(9685784);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_27_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_27->S00_AXI_rresp.bind(*p_27_S00_AXI_rresp);
        p_27_S00_AXI_rresp->set_sv_netview_offsetfromdp(9685840);
        xsim_sc_channel<0, bool > *p_27_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_27->S00_AXI_rlast.bind(*p_27_S00_AXI_rlast);
        p_27_S00_AXI_rlast->set_sv_netview_offsetfromdp(9685896);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_27_S00_AXI_ruser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_27->S00_AXI_ruser.bind(*p_27_S00_AXI_ruser);
        p_27_S00_AXI_ruser->set_sv_netview_offsetfromdp(9685952);
        xsim_sc_channel<0, bool > *p_27_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_27->S00_AXI_rvalid.bind(*p_27_S00_AXI_rvalid);
        p_27_S00_AXI_rvalid->set_sv_netview_offsetfromdp(9686008);
        xsim_sc_channel<0, bool > *p_27_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_27->S00_AXI_rready.bind(*p_27_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_27_S00_AXI_rready);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_27_M00_AXI_awaddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_27->M00_AXI_awaddr.bind(*p_27_M00_AXI_awaddr);
        p_27_M00_AXI_awaddr->set_sv_netview_offsetfromdp(9686120);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_27_M00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_27->M00_AXI_awlen.bind(*p_27_M00_AXI_awlen);
        p_27_M00_AXI_awlen->set_sv_netview_offsetfromdp(9686176);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_27_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_27->M00_AXI_awsize.bind(*p_27_M00_AXI_awsize);
        p_27_M00_AXI_awsize->set_sv_netview_offsetfromdp(9686232);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_27_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_27->M00_AXI_awburst.bind(*p_27_M00_AXI_awburst);
        p_27_M00_AXI_awburst->set_sv_netview_offsetfromdp(9686288);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_27_M00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_27->M00_AXI_awlock.bind(*p_27_M00_AXI_awlock);
        p_27_M00_AXI_awlock->set_sv_netview_offsetfromdp(9686344);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_27_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_27->M00_AXI_awcache.bind(*p_27_M00_AXI_awcache);
        p_27_M00_AXI_awcache->set_sv_netview_offsetfromdp(9686400);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_27_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_27->M00_AXI_awprot.bind(*p_27_M00_AXI_awprot);
        p_27_M00_AXI_awprot->set_sv_netview_offsetfromdp(9686456);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_27_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_27->M00_AXI_awqos.bind(*p_27_M00_AXI_awqos);
        p_27_M00_AXI_awqos->set_sv_netview_offsetfromdp(9686512);
        xsim_sc_channel<0, bool > *p_27_M00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_27->M00_AXI_awvalid.bind(*p_27_M00_AXI_awvalid);
        p_27_M00_AXI_awvalid->set_sv_netview_offsetfromdp(9686568);
        xsim_sc_channel<0, bool > *p_27_M00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_27->M00_AXI_awready.bind(*p_27_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_27_M00_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_27_M00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_27->M00_AXI_wdata.bind(*p_27_M00_AXI_wdata);
        p_27_M00_AXI_wdata->set_sv_netview_offsetfromdp(9686680);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_27_M00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_27->M00_AXI_wstrb.bind(*p_27_M00_AXI_wstrb);
        p_27_M00_AXI_wstrb->set_sv_netview_offsetfromdp(9686736);
        xsim_sc_channel<0, bool > *p_27_M00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_27->M00_AXI_wlast.bind(*p_27_M00_AXI_wlast);
        p_27_M00_AXI_wlast->set_sv_netview_offsetfromdp(9686792);
        xsim_sc_channel<0, bool > *p_27_M00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_27->M00_AXI_wvalid.bind(*p_27_M00_AXI_wvalid);
        p_27_M00_AXI_wvalid->set_sv_netview_offsetfromdp(9686848);
        xsim_sc_channel<0, bool > *p_27_M00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_27->M00_AXI_wready.bind(*p_27_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_27_M00_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_27_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_27->M00_AXI_bresp.bind(*p_27_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_27_M00_AXI_bresp);
        xsim_sc_channel<0, bool > *p_27_M00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_27->M00_AXI_bvalid.bind(*p_27_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_27_M00_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_27_M00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_27->M00_AXI_bready.bind(*p_27_M00_AXI_bready);
        p_27_M00_AXI_bready->set_sv_netview_offsetfromdp(9687072);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_27_M00_AXI_araddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_27->M00_AXI_araddr.bind(*p_27_M00_AXI_araddr);
        p_27_M00_AXI_araddr->set_sv_netview_offsetfromdp(9687128);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_27_M00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_27->M00_AXI_arlen.bind(*p_27_M00_AXI_arlen);
        p_27_M00_AXI_arlen->set_sv_netview_offsetfromdp(9687184);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_27_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_27->M00_AXI_arsize.bind(*p_27_M00_AXI_arsize);
        p_27_M00_AXI_arsize->set_sv_netview_offsetfromdp(9687240);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_27_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_27->M00_AXI_arburst.bind(*p_27_M00_AXI_arburst);
        p_27_M00_AXI_arburst->set_sv_netview_offsetfromdp(9687296);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_27_M00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_27->M00_AXI_arlock.bind(*p_27_M00_AXI_arlock);
        p_27_M00_AXI_arlock->set_sv_netview_offsetfromdp(9687352);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_27_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_27->M00_AXI_arcache.bind(*p_27_M00_AXI_arcache);
        p_27_M00_AXI_arcache->set_sv_netview_offsetfromdp(9687408);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_27_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_27->M00_AXI_arprot.bind(*p_27_M00_AXI_arprot);
        p_27_M00_AXI_arprot->set_sv_netview_offsetfromdp(9687464);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_27_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_27->M00_AXI_arqos.bind(*p_27_M00_AXI_arqos);
        p_27_M00_AXI_arqos->set_sv_netview_offsetfromdp(9687520);
        xsim_sc_channel<0, bool > *p_27_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_27->M00_AXI_arvalid.bind(*p_27_M00_AXI_arvalid);
        p_27_M00_AXI_arvalid->set_sv_netview_offsetfromdp(9687576);
        xsim_sc_channel<0, bool > *p_27_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_27->M00_AXI_arready.bind(*p_27_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_27_M00_AXI_arready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_27_M00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_27->M00_AXI_rdata.bind(*p_27_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_27_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_27_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_27->M00_AXI_rresp.bind(*p_27_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_27_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_27_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_27->M00_AXI_rlast.bind(*p_27_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_27_M00_AXI_rlast);
        xsim_sc_channel<0, bool > *p_27_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_27->M00_AXI_rvalid.bind(*p_27_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_27_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_27_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_27->M00_AXI_rready.bind(*p_27_M00_AXI_rready);
        p_27_M00_AXI_rready->set_sv_netview_offsetfromdp(9687912);
        sc_inst_28 = new bd_d216_interconnect_DDR4_MEM01_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.interconnect.interconnect_ddr4_mem01");
        sc_inst_28->xsim_set_dbg_index(2468);
        xsim_sc_channel<0, bool > *p_28_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_28->aclk.bind(*p_28_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_28_aclk);
        xsim_sc_channel<0, bool > *p_28_aclk1 = new xsim_sc_channel<0, bool >();
        sc_inst_28->aclk1.bind(*p_28_aclk1);
        (*_glb_hdl_sc_channel_map).push_back(p_28_aclk1);
        xsim_sc_channel<0, bool > *p_28_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_28->aresetn.bind(*p_28_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_28_aresetn);
        xsim_sc_channel<37, sc_dt::sc_bv<37> > *p_28_S00_AXI_awaddr = new xsim_sc_channel<37, sc_dt::sc_bv<37> >();
        sc_inst_28->S00_AXI_awaddr.bind(*p_28_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_28_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_28_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_28->S00_AXI_awlen.bind(*p_28_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_28_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_28_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_28->S00_AXI_awsize.bind(*p_28_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_28_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_28_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_28->S00_AXI_awburst.bind(*p_28_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_28_S00_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_28_S00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_28->S00_AXI_awlock.bind(*p_28_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_28_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_28_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_28->S00_AXI_awcache.bind(*p_28_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_28_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_28_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_28->S00_AXI_awprot.bind(*p_28_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_28_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_28_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_28->S00_AXI_awqos.bind(*p_28_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_28_S00_AXI_awqos);
        xsim_sc_channel<0, bool > *p_28_S00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_28->S00_AXI_awvalid.bind(*p_28_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_28_S00_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_28_S00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_28->S00_AXI_awready.bind(*p_28_S00_AXI_awready);
        p_28_S00_AXI_awready->set_sv_netview_offsetfromdp(9688688);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_28_S00_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_28->S00_AXI_wdata.bind(*p_28_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_28_S00_AXI_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_28_S00_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_28->S00_AXI_wstrb.bind(*p_28_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_28_S00_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_28_S00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_28->S00_AXI_wlast.bind(*p_28_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_28_S00_AXI_wlast);
        xsim_sc_channel<0, bool > *p_28_S00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_28->S00_AXI_wvalid.bind(*p_28_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_28_S00_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_28_S00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_28->S00_AXI_wready.bind(*p_28_S00_AXI_wready);
        p_28_S00_AXI_wready->set_sv_netview_offsetfromdp(9688968);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_28_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_28->S00_AXI_bresp.bind(*p_28_S00_AXI_bresp);
        p_28_S00_AXI_bresp->set_sv_netview_offsetfromdp(9689024);
        xsim_sc_channel<0, bool > *p_28_S00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_28->S00_AXI_bvalid.bind(*p_28_S00_AXI_bvalid);
        p_28_S00_AXI_bvalid->set_sv_netview_offsetfromdp(9689080);
        xsim_sc_channel<0, bool > *p_28_S00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_28->S00_AXI_bready.bind(*p_28_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_28_S00_AXI_bready);
        xsim_sc_channel<37, sc_dt::sc_bv<37> > *p_28_S00_AXI_araddr = new xsim_sc_channel<37, sc_dt::sc_bv<37> >();
        sc_inst_28->S00_AXI_araddr.bind(*p_28_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_28_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_28_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_28->S00_AXI_arlen.bind(*p_28_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_28_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_28_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_28->S00_AXI_arsize.bind(*p_28_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_28_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_28_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_28->S00_AXI_arburst.bind(*p_28_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_28_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_28_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_28->S00_AXI_arlock.bind(*p_28_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_28_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_28_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_28->S00_AXI_arcache.bind(*p_28_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_28_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_28_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_28->S00_AXI_arprot.bind(*p_28_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_28_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_28_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_28->S00_AXI_arqos.bind(*p_28_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_28_S00_AXI_arqos);
        xsim_sc_channel<0, bool > *p_28_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_28->S00_AXI_arvalid.bind(*p_28_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_28_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_28_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_28->S00_AXI_arready.bind(*p_28_S00_AXI_arready);
        p_28_S00_AXI_arready->set_sv_netview_offsetfromdp(9689696);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_28_S00_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_28->S00_AXI_rdata.bind(*p_28_S00_AXI_rdata);
        p_28_S00_AXI_rdata->set_sv_netview_offsetfromdp(9689752);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_28_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_28->S00_AXI_rresp.bind(*p_28_S00_AXI_rresp);
        p_28_S00_AXI_rresp->set_sv_netview_offsetfromdp(9689808);
        xsim_sc_channel<0, bool > *p_28_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_28->S00_AXI_rlast.bind(*p_28_S00_AXI_rlast);
        p_28_S00_AXI_rlast->set_sv_netview_offsetfromdp(9689864);
        xsim_sc_channel<0, bool > *p_28_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_28->S00_AXI_rvalid.bind(*p_28_S00_AXI_rvalid);
        p_28_S00_AXI_rvalid->set_sv_netview_offsetfromdp(9689920);
        xsim_sc_channel<0, bool > *p_28_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_28->S00_AXI_rready.bind(*p_28_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_28_S00_AXI_rready);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_28_M00_AXI_awaddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_28->M00_AXI_awaddr.bind(*p_28_M00_AXI_awaddr);
        p_28_M00_AXI_awaddr->set_sv_netview_offsetfromdp(9690032);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_28_M00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_28->M00_AXI_awlen.bind(*p_28_M00_AXI_awlen);
        p_28_M00_AXI_awlen->set_sv_netview_offsetfromdp(9690088);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_28_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_28->M00_AXI_awsize.bind(*p_28_M00_AXI_awsize);
        p_28_M00_AXI_awsize->set_sv_netview_offsetfromdp(9690144);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_28_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_28->M00_AXI_awburst.bind(*p_28_M00_AXI_awburst);
        p_28_M00_AXI_awburst->set_sv_netview_offsetfromdp(9690200);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_28_M00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_28->M00_AXI_awlock.bind(*p_28_M00_AXI_awlock);
        p_28_M00_AXI_awlock->set_sv_netview_offsetfromdp(9690256);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_28_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_28->M00_AXI_awcache.bind(*p_28_M00_AXI_awcache);
        p_28_M00_AXI_awcache->set_sv_netview_offsetfromdp(9690312);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_28_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_28->M00_AXI_awprot.bind(*p_28_M00_AXI_awprot);
        p_28_M00_AXI_awprot->set_sv_netview_offsetfromdp(9690368);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_28_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_28->M00_AXI_awqos.bind(*p_28_M00_AXI_awqos);
        p_28_M00_AXI_awqos->set_sv_netview_offsetfromdp(9690424);
        xsim_sc_channel<0, bool > *p_28_M00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_28->M00_AXI_awvalid.bind(*p_28_M00_AXI_awvalid);
        p_28_M00_AXI_awvalid->set_sv_netview_offsetfromdp(9690480);
        xsim_sc_channel<0, bool > *p_28_M00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_28->M00_AXI_awready.bind(*p_28_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_28_M00_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_28_M00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_28->M00_AXI_wdata.bind(*p_28_M00_AXI_wdata);
        p_28_M00_AXI_wdata->set_sv_netview_offsetfromdp(9690592);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_28_M00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_28->M00_AXI_wstrb.bind(*p_28_M00_AXI_wstrb);
        p_28_M00_AXI_wstrb->set_sv_netview_offsetfromdp(9690648);
        xsim_sc_channel<0, bool > *p_28_M00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_28->M00_AXI_wlast.bind(*p_28_M00_AXI_wlast);
        p_28_M00_AXI_wlast->set_sv_netview_offsetfromdp(9690704);
        xsim_sc_channel<0, bool > *p_28_M00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_28->M00_AXI_wvalid.bind(*p_28_M00_AXI_wvalid);
        p_28_M00_AXI_wvalid->set_sv_netview_offsetfromdp(9690760);
        xsim_sc_channel<0, bool > *p_28_M00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_28->M00_AXI_wready.bind(*p_28_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_28_M00_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_28_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_28->M00_AXI_bresp.bind(*p_28_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_28_M00_AXI_bresp);
        xsim_sc_channel<0, bool > *p_28_M00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_28->M00_AXI_bvalid.bind(*p_28_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_28_M00_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_28_M00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_28->M00_AXI_bready.bind(*p_28_M00_AXI_bready);
        p_28_M00_AXI_bready->set_sv_netview_offsetfromdp(9690984);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_28_M00_AXI_araddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_28->M00_AXI_araddr.bind(*p_28_M00_AXI_araddr);
        p_28_M00_AXI_araddr->set_sv_netview_offsetfromdp(9691040);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_28_M00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_28->M00_AXI_arlen.bind(*p_28_M00_AXI_arlen);
        p_28_M00_AXI_arlen->set_sv_netview_offsetfromdp(9691096);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_28_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_28->M00_AXI_arsize.bind(*p_28_M00_AXI_arsize);
        p_28_M00_AXI_arsize->set_sv_netview_offsetfromdp(9691152);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_28_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_28->M00_AXI_arburst.bind(*p_28_M00_AXI_arburst);
        p_28_M00_AXI_arburst->set_sv_netview_offsetfromdp(9691208);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_28_M00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_28->M00_AXI_arlock.bind(*p_28_M00_AXI_arlock);
        p_28_M00_AXI_arlock->set_sv_netview_offsetfromdp(9691264);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_28_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_28->M00_AXI_arcache.bind(*p_28_M00_AXI_arcache);
        p_28_M00_AXI_arcache->set_sv_netview_offsetfromdp(9691320);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_28_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_28->M00_AXI_arprot.bind(*p_28_M00_AXI_arprot);
        p_28_M00_AXI_arprot->set_sv_netview_offsetfromdp(9691376);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_28_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_28->M00_AXI_arqos.bind(*p_28_M00_AXI_arqos);
        p_28_M00_AXI_arqos->set_sv_netview_offsetfromdp(9691432);
        xsim_sc_channel<0, bool > *p_28_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_28->M00_AXI_arvalid.bind(*p_28_M00_AXI_arvalid);
        p_28_M00_AXI_arvalid->set_sv_netview_offsetfromdp(9691488);
        xsim_sc_channel<0, bool > *p_28_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_28->M00_AXI_arready.bind(*p_28_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_28_M00_AXI_arready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_28_M00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_28->M00_AXI_rdata.bind(*p_28_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_28_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_28_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_28->M00_AXI_rresp.bind(*p_28_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_28_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_28_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_28->M00_AXI_rlast.bind(*p_28_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_28_M00_AXI_rlast);
        xsim_sc_channel<0, bool > *p_28_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_28->M00_AXI_rvalid.bind(*p_28_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_28_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_28_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_28->M00_AXI_rready.bind(*p_28_M00_AXI_rready);
        p_28_M00_AXI_rready->set_sv_netview_offsetfromdp(9691824);
        sc_inst_29 = new bd_d216_interconnect_M00_AXI_MEM00_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.interconnect.interconnect_m00_axi_mem00");
        sc_inst_29->xsim_set_dbg_index(2469);
        xsim_sc_channel<0, bool > *p_29_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_29->aclk.bind(*p_29_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_29_aclk);
        xsim_sc_channel<0, bool > *p_29_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_29->aresetn.bind(*p_29_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_29_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_29_S00_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_29->S00_AXI_awid.bind(*p_29_S00_AXI_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_29_S00_AXI_awid);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_29_S00_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_29->S00_AXI_awaddr.bind(*p_29_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_29_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_29_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_29->S00_AXI_awlen.bind(*p_29_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_29_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_29_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_29->S00_AXI_awsize.bind(*p_29_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_29_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_29_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_29->S00_AXI_awburst.bind(*p_29_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_29_S00_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_29_S00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_29->S00_AXI_awlock.bind(*p_29_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_29_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_29_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_29->S00_AXI_awcache.bind(*p_29_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_29_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_29_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_29->S00_AXI_awprot.bind(*p_29_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_29_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_29_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_29->S00_AXI_awqos.bind(*p_29_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_29_S00_AXI_awqos);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_29_S00_AXI_awuser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_29->S00_AXI_awuser.bind(*p_29_S00_AXI_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_29_S00_AXI_awuser);
        xsim_sc_channel<0, bool > *p_29_S00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_29->S00_AXI_awvalid.bind(*p_29_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_29_S00_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_29_S00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_29->S00_AXI_awready.bind(*p_29_S00_AXI_awready);
        p_29_S00_AXI_awready->set_sv_netview_offsetfromdp(9692656);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_29_S00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_29->S00_AXI_wdata.bind(*p_29_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_29_S00_AXI_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_29_S00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_29->S00_AXI_wstrb.bind(*p_29_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_29_S00_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_29_S00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_29->S00_AXI_wlast.bind(*p_29_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_29_S00_AXI_wlast);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_29_S00_AXI_wuser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_29->S00_AXI_wuser.bind(*p_29_S00_AXI_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_29_S00_AXI_wuser);
        xsim_sc_channel<0, bool > *p_29_S00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_29->S00_AXI_wvalid.bind(*p_29_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_29_S00_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_29_S00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_29->S00_AXI_wready.bind(*p_29_S00_AXI_wready);
        p_29_S00_AXI_wready->set_sv_netview_offsetfromdp(9692992);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_29_S00_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_29->S00_AXI_bid.bind(*p_29_S00_AXI_bid);
        p_29_S00_AXI_bid->set_sv_netview_offsetfromdp(9693048);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_29_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_29->S00_AXI_bresp.bind(*p_29_S00_AXI_bresp);
        p_29_S00_AXI_bresp->set_sv_netview_offsetfromdp(9693104);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_29_S00_AXI_buser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_29->S00_AXI_buser.bind(*p_29_S00_AXI_buser);
        p_29_S00_AXI_buser->set_sv_netview_offsetfromdp(9693160);
        xsim_sc_channel<0, bool > *p_29_S00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_29->S00_AXI_bvalid.bind(*p_29_S00_AXI_bvalid);
        p_29_S00_AXI_bvalid->set_sv_netview_offsetfromdp(9693216);
        xsim_sc_channel<0, bool > *p_29_S00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_29->S00_AXI_bready.bind(*p_29_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_29_S00_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_29_S00_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_29->S00_AXI_arid.bind(*p_29_S00_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_29_S00_AXI_arid);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_29_S00_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_29->S00_AXI_araddr.bind(*p_29_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_29_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_29_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_29->S00_AXI_arlen.bind(*p_29_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_29_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_29_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_29->S00_AXI_arsize.bind(*p_29_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_29_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_29_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_29->S00_AXI_arburst.bind(*p_29_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_29_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_29_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_29->S00_AXI_arlock.bind(*p_29_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_29_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_29_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_29->S00_AXI_arcache.bind(*p_29_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_29_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_29_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_29->S00_AXI_arprot.bind(*p_29_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_29_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_29_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_29->S00_AXI_arqos.bind(*p_29_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_29_S00_AXI_arqos);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_29_S00_AXI_aruser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_29->S00_AXI_aruser.bind(*p_29_S00_AXI_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_29_S00_AXI_aruser);
        xsim_sc_channel<0, bool > *p_29_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_29->S00_AXI_arvalid.bind(*p_29_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_29_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_29_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_29->S00_AXI_arready.bind(*p_29_S00_AXI_arready);
        p_29_S00_AXI_arready->set_sv_netview_offsetfromdp(9693944);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_29_S00_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_29->S00_AXI_rid.bind(*p_29_S00_AXI_rid);
        p_29_S00_AXI_rid->set_sv_netview_offsetfromdp(9694000);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_29_S00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_29->S00_AXI_rdata.bind(*p_29_S00_AXI_rdata);
        p_29_S00_AXI_rdata->set_sv_netview_offsetfromdp(9694056);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_29_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_29->S00_AXI_rresp.bind(*p_29_S00_AXI_rresp);
        p_29_S00_AXI_rresp->set_sv_netview_offsetfromdp(9694112);
        xsim_sc_channel<0, bool > *p_29_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_29->S00_AXI_rlast.bind(*p_29_S00_AXI_rlast);
        p_29_S00_AXI_rlast->set_sv_netview_offsetfromdp(9694168);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_29_S00_AXI_ruser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_29->S00_AXI_ruser.bind(*p_29_S00_AXI_ruser);
        p_29_S00_AXI_ruser->set_sv_netview_offsetfromdp(9694224);
        xsim_sc_channel<0, bool > *p_29_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_29->S00_AXI_rvalid.bind(*p_29_S00_AXI_rvalid);
        p_29_S00_AXI_rvalid->set_sv_netview_offsetfromdp(9694280);
        xsim_sc_channel<0, bool > *p_29_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_29->S00_AXI_rready.bind(*p_29_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_29_S00_AXI_rready);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_29_M00_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_29->M00_AXI_awaddr.bind(*p_29_M00_AXI_awaddr);
        p_29_M00_AXI_awaddr->set_sv_netview_offsetfromdp(9694392);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_29_M00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_29->M00_AXI_awlen.bind(*p_29_M00_AXI_awlen);
        p_29_M00_AXI_awlen->set_sv_netview_offsetfromdp(9694448);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_29_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_29->M00_AXI_awsize.bind(*p_29_M00_AXI_awsize);
        p_29_M00_AXI_awsize->set_sv_netview_offsetfromdp(9694504);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_29_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_29->M00_AXI_awburst.bind(*p_29_M00_AXI_awburst);
        p_29_M00_AXI_awburst->set_sv_netview_offsetfromdp(9694560);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_29_M00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_29->M00_AXI_awlock.bind(*p_29_M00_AXI_awlock);
        p_29_M00_AXI_awlock->set_sv_netview_offsetfromdp(9694616);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_29_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_29->M00_AXI_awcache.bind(*p_29_M00_AXI_awcache);
        p_29_M00_AXI_awcache->set_sv_netview_offsetfromdp(9694672);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_29_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_29->M00_AXI_awprot.bind(*p_29_M00_AXI_awprot);
        p_29_M00_AXI_awprot->set_sv_netview_offsetfromdp(9694728);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_29_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_29->M00_AXI_awqos.bind(*p_29_M00_AXI_awqos);
        p_29_M00_AXI_awqos->set_sv_netview_offsetfromdp(9694784);
        xsim_sc_channel<0, bool > *p_29_M00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_29->M00_AXI_awvalid.bind(*p_29_M00_AXI_awvalid);
        p_29_M00_AXI_awvalid->set_sv_netview_offsetfromdp(9694840);
        xsim_sc_channel<0, bool > *p_29_M00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_29->M00_AXI_awready.bind(*p_29_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_29_M00_AXI_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_29_M00_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_29->M00_AXI_wdata.bind(*p_29_M00_AXI_wdata);
        p_29_M00_AXI_wdata->set_sv_netview_offsetfromdp(9694952);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_29_M00_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_29->M00_AXI_wstrb.bind(*p_29_M00_AXI_wstrb);
        p_29_M00_AXI_wstrb->set_sv_netview_offsetfromdp(9695008);
        xsim_sc_channel<0, bool > *p_29_M00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_29->M00_AXI_wlast.bind(*p_29_M00_AXI_wlast);
        p_29_M00_AXI_wlast->set_sv_netview_offsetfromdp(9695064);
        xsim_sc_channel<0, bool > *p_29_M00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_29->M00_AXI_wvalid.bind(*p_29_M00_AXI_wvalid);
        p_29_M00_AXI_wvalid->set_sv_netview_offsetfromdp(9695120);
        xsim_sc_channel<0, bool > *p_29_M00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_29->M00_AXI_wready.bind(*p_29_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_29_M00_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_29_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_29->M00_AXI_bresp.bind(*p_29_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_29_M00_AXI_bresp);
        xsim_sc_channel<0, bool > *p_29_M00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_29->M00_AXI_bvalid.bind(*p_29_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_29_M00_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_29_M00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_29->M00_AXI_bready.bind(*p_29_M00_AXI_bready);
        p_29_M00_AXI_bready->set_sv_netview_offsetfromdp(9695344);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_29_M00_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_29->M00_AXI_araddr.bind(*p_29_M00_AXI_araddr);
        p_29_M00_AXI_araddr->set_sv_netview_offsetfromdp(9695400);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_29_M00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_29->M00_AXI_arlen.bind(*p_29_M00_AXI_arlen);
        p_29_M00_AXI_arlen->set_sv_netview_offsetfromdp(9695456);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_29_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_29->M00_AXI_arsize.bind(*p_29_M00_AXI_arsize);
        p_29_M00_AXI_arsize->set_sv_netview_offsetfromdp(9695512);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_29_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_29->M00_AXI_arburst.bind(*p_29_M00_AXI_arburst);
        p_29_M00_AXI_arburst->set_sv_netview_offsetfromdp(9695568);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_29_M00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_29->M00_AXI_arlock.bind(*p_29_M00_AXI_arlock);
        p_29_M00_AXI_arlock->set_sv_netview_offsetfromdp(9695624);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_29_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_29->M00_AXI_arcache.bind(*p_29_M00_AXI_arcache);
        p_29_M00_AXI_arcache->set_sv_netview_offsetfromdp(9695680);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_29_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_29->M00_AXI_arprot.bind(*p_29_M00_AXI_arprot);
        p_29_M00_AXI_arprot->set_sv_netview_offsetfromdp(9695736);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_29_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_29->M00_AXI_arqos.bind(*p_29_M00_AXI_arqos);
        p_29_M00_AXI_arqos->set_sv_netview_offsetfromdp(9695792);
        xsim_sc_channel<0, bool > *p_29_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_29->M00_AXI_arvalid.bind(*p_29_M00_AXI_arvalid);
        p_29_M00_AXI_arvalid->set_sv_netview_offsetfromdp(9695848);
        xsim_sc_channel<0, bool > *p_29_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_29->M00_AXI_arready.bind(*p_29_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_29_M00_AXI_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_29_M00_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_29->M00_AXI_rdata.bind(*p_29_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_29_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_29_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_29->M00_AXI_rresp.bind(*p_29_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_29_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_29_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_29->M00_AXI_rlast.bind(*p_29_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_29_M00_AXI_rlast);
        xsim_sc_channel<0, bool > *p_29_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_29->M00_AXI_rvalid.bind(*p_29_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_29_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_29_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_29->M00_AXI_rready.bind(*p_29_M00_AXI_rready);
        p_29_M00_AXI_rready->set_sv_netview_offsetfromdp(9696184);
        sc_inst_30 = new bd_d216_interconnect_PLRAM_MEM00_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.interconnect.interconnect_plram_mem00");
        sc_inst_30->xsim_set_dbg_index(2470);
        xsim_sc_channel<0, bool > *p_30_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_30->aclk.bind(*p_30_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_30_aclk);
        xsim_sc_channel<0, bool > *p_30_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_30->aresetn.bind(*p_30_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_30_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_30_S00_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_30->S00_AXI_awid.bind(*p_30_S00_AXI_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_30_S00_AXI_awid);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_30_S00_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_30->S00_AXI_awaddr.bind(*p_30_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_30_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_30_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_30->S00_AXI_awlen.bind(*p_30_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_30_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_30_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_30->S00_AXI_awsize.bind(*p_30_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_30_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_30_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_30->S00_AXI_awburst.bind(*p_30_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_30_S00_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_30_S00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_30->S00_AXI_awlock.bind(*p_30_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_30_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_30_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_30->S00_AXI_awcache.bind(*p_30_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_30_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_30_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_30->S00_AXI_awprot.bind(*p_30_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_30_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_30_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_30->S00_AXI_awqos.bind(*p_30_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_30_S00_AXI_awqos);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_30_S00_AXI_awuser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_30->S00_AXI_awuser.bind(*p_30_S00_AXI_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_30_S00_AXI_awuser);
        xsim_sc_channel<0, bool > *p_30_S00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_30->S00_AXI_awvalid.bind(*p_30_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_30_S00_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_30_S00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_30->S00_AXI_awready.bind(*p_30_S00_AXI_awready);
        p_30_S00_AXI_awready->set_sv_netview_offsetfromdp(9697016);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_30_S00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_30->S00_AXI_wdata.bind(*p_30_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_30_S00_AXI_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_30_S00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_30->S00_AXI_wstrb.bind(*p_30_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_30_S00_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_30_S00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_30->S00_AXI_wlast.bind(*p_30_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_30_S00_AXI_wlast);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_30_S00_AXI_wuser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_30->S00_AXI_wuser.bind(*p_30_S00_AXI_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_30_S00_AXI_wuser);
        xsim_sc_channel<0, bool > *p_30_S00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_30->S00_AXI_wvalid.bind(*p_30_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_30_S00_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_30_S00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_30->S00_AXI_wready.bind(*p_30_S00_AXI_wready);
        p_30_S00_AXI_wready->set_sv_netview_offsetfromdp(9697352);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_30_S00_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_30->S00_AXI_bid.bind(*p_30_S00_AXI_bid);
        p_30_S00_AXI_bid->set_sv_netview_offsetfromdp(9697408);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_30_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_30->S00_AXI_bresp.bind(*p_30_S00_AXI_bresp);
        p_30_S00_AXI_bresp->set_sv_netview_offsetfromdp(9697464);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_30_S00_AXI_buser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_30->S00_AXI_buser.bind(*p_30_S00_AXI_buser);
        p_30_S00_AXI_buser->set_sv_netview_offsetfromdp(9697520);
        xsim_sc_channel<0, bool > *p_30_S00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_30->S00_AXI_bvalid.bind(*p_30_S00_AXI_bvalid);
        p_30_S00_AXI_bvalid->set_sv_netview_offsetfromdp(9697576);
        xsim_sc_channel<0, bool > *p_30_S00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_30->S00_AXI_bready.bind(*p_30_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_30_S00_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_30_S00_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_30->S00_AXI_arid.bind(*p_30_S00_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_30_S00_AXI_arid);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_30_S00_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_30->S00_AXI_araddr.bind(*p_30_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_30_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_30_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_30->S00_AXI_arlen.bind(*p_30_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_30_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_30_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_30->S00_AXI_arsize.bind(*p_30_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_30_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_30_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_30->S00_AXI_arburst.bind(*p_30_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_30_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_30_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_30->S00_AXI_arlock.bind(*p_30_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_30_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_30_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_30->S00_AXI_arcache.bind(*p_30_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_30_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_30_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_30->S00_AXI_arprot.bind(*p_30_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_30_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_30_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_30->S00_AXI_arqos.bind(*p_30_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_30_S00_AXI_arqos);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_30_S00_AXI_aruser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_30->S00_AXI_aruser.bind(*p_30_S00_AXI_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_30_S00_AXI_aruser);
        xsim_sc_channel<0, bool > *p_30_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_30->S00_AXI_arvalid.bind(*p_30_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_30_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_30_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_30->S00_AXI_arready.bind(*p_30_S00_AXI_arready);
        p_30_S00_AXI_arready->set_sv_netview_offsetfromdp(9698304);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_30_S00_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_30->S00_AXI_rid.bind(*p_30_S00_AXI_rid);
        p_30_S00_AXI_rid->set_sv_netview_offsetfromdp(9698360);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_30_S00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_30->S00_AXI_rdata.bind(*p_30_S00_AXI_rdata);
        p_30_S00_AXI_rdata->set_sv_netview_offsetfromdp(9698416);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_30_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_30->S00_AXI_rresp.bind(*p_30_S00_AXI_rresp);
        p_30_S00_AXI_rresp->set_sv_netview_offsetfromdp(9698472);
        xsim_sc_channel<0, bool > *p_30_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_30->S00_AXI_rlast.bind(*p_30_S00_AXI_rlast);
        p_30_S00_AXI_rlast->set_sv_netview_offsetfromdp(9698528);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_30_S00_AXI_ruser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_30->S00_AXI_ruser.bind(*p_30_S00_AXI_ruser);
        p_30_S00_AXI_ruser->set_sv_netview_offsetfromdp(9698584);
        xsim_sc_channel<0, bool > *p_30_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_30->S00_AXI_rvalid.bind(*p_30_S00_AXI_rvalid);
        p_30_S00_AXI_rvalid->set_sv_netview_offsetfromdp(9698640);
        xsim_sc_channel<0, bool > *p_30_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_30->S00_AXI_rready.bind(*p_30_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_30_S00_AXI_rready);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_30_M00_AXI_awaddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_30->M00_AXI_awaddr.bind(*p_30_M00_AXI_awaddr);
        p_30_M00_AXI_awaddr->set_sv_netview_offsetfromdp(9698752);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_30_M00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_30->M00_AXI_awlen.bind(*p_30_M00_AXI_awlen);
        p_30_M00_AXI_awlen->set_sv_netview_offsetfromdp(9698808);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_30_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_30->M00_AXI_awsize.bind(*p_30_M00_AXI_awsize);
        p_30_M00_AXI_awsize->set_sv_netview_offsetfromdp(9698864);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_30_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_30->M00_AXI_awburst.bind(*p_30_M00_AXI_awburst);
        p_30_M00_AXI_awburst->set_sv_netview_offsetfromdp(9698920);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_30_M00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_30->M00_AXI_awlock.bind(*p_30_M00_AXI_awlock);
        p_30_M00_AXI_awlock->set_sv_netview_offsetfromdp(9698976);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_30_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_30->M00_AXI_awcache.bind(*p_30_M00_AXI_awcache);
        p_30_M00_AXI_awcache->set_sv_netview_offsetfromdp(9699032);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_30_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_30->M00_AXI_awprot.bind(*p_30_M00_AXI_awprot);
        p_30_M00_AXI_awprot->set_sv_netview_offsetfromdp(9699088);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_30_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_30->M00_AXI_awqos.bind(*p_30_M00_AXI_awqos);
        p_30_M00_AXI_awqos->set_sv_netview_offsetfromdp(9699144);
        xsim_sc_channel<0, bool > *p_30_M00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_30->M00_AXI_awvalid.bind(*p_30_M00_AXI_awvalid);
        p_30_M00_AXI_awvalid->set_sv_netview_offsetfromdp(9699200);
        xsim_sc_channel<0, bool > *p_30_M00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_30->M00_AXI_awready.bind(*p_30_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_30_M00_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_30_M00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_30->M00_AXI_wdata.bind(*p_30_M00_AXI_wdata);
        p_30_M00_AXI_wdata->set_sv_netview_offsetfromdp(9699312);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_30_M00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_30->M00_AXI_wstrb.bind(*p_30_M00_AXI_wstrb);
        p_30_M00_AXI_wstrb->set_sv_netview_offsetfromdp(9699368);
        xsim_sc_channel<0, bool > *p_30_M00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_30->M00_AXI_wlast.bind(*p_30_M00_AXI_wlast);
        p_30_M00_AXI_wlast->set_sv_netview_offsetfromdp(9699424);
        xsim_sc_channel<0, bool > *p_30_M00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_30->M00_AXI_wvalid.bind(*p_30_M00_AXI_wvalid);
        p_30_M00_AXI_wvalid->set_sv_netview_offsetfromdp(9699480);
        xsim_sc_channel<0, bool > *p_30_M00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_30->M00_AXI_wready.bind(*p_30_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_30_M00_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_30_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_30->M00_AXI_bresp.bind(*p_30_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_30_M00_AXI_bresp);
        xsim_sc_channel<0, bool > *p_30_M00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_30->M00_AXI_bvalid.bind(*p_30_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_30_M00_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_30_M00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_30->M00_AXI_bready.bind(*p_30_M00_AXI_bready);
        p_30_M00_AXI_bready->set_sv_netview_offsetfromdp(9699704);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_30_M00_AXI_araddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_30->M00_AXI_araddr.bind(*p_30_M00_AXI_araddr);
        p_30_M00_AXI_araddr->set_sv_netview_offsetfromdp(9699760);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_30_M00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_30->M00_AXI_arlen.bind(*p_30_M00_AXI_arlen);
        p_30_M00_AXI_arlen->set_sv_netview_offsetfromdp(9699816);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_30_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_30->M00_AXI_arsize.bind(*p_30_M00_AXI_arsize);
        p_30_M00_AXI_arsize->set_sv_netview_offsetfromdp(9699872);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_30_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_30->M00_AXI_arburst.bind(*p_30_M00_AXI_arburst);
        p_30_M00_AXI_arburst->set_sv_netview_offsetfromdp(9699928);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_30_M00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_30->M00_AXI_arlock.bind(*p_30_M00_AXI_arlock);
        p_30_M00_AXI_arlock->set_sv_netview_offsetfromdp(9699984);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_30_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_30->M00_AXI_arcache.bind(*p_30_M00_AXI_arcache);
        p_30_M00_AXI_arcache->set_sv_netview_offsetfromdp(9700040);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_30_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_30->M00_AXI_arprot.bind(*p_30_M00_AXI_arprot);
        p_30_M00_AXI_arprot->set_sv_netview_offsetfromdp(9700096);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_30_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_30->M00_AXI_arqos.bind(*p_30_M00_AXI_arqos);
        p_30_M00_AXI_arqos->set_sv_netview_offsetfromdp(9700152);
        xsim_sc_channel<0, bool > *p_30_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_30->M00_AXI_arvalid.bind(*p_30_M00_AXI_arvalid);
        p_30_M00_AXI_arvalid->set_sv_netview_offsetfromdp(9700208);
        xsim_sc_channel<0, bool > *p_30_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_30->M00_AXI_arready.bind(*p_30_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_30_M00_AXI_arready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_30_M00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_30->M00_AXI_rdata.bind(*p_30_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_30_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_30_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_30->M00_AXI_rresp.bind(*p_30_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_30_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_30_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_30->M00_AXI_rlast.bind(*p_30_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_30_M00_AXI_rlast);
        xsim_sc_channel<0, bool > *p_30_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_30->M00_AXI_rvalid.bind(*p_30_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_30_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_30_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_30->M00_AXI_rready.bind(*p_30_M00_AXI_rready);
        p_30_M00_AXI_rready->set_sv_netview_offsetfromdp(9700544);
        sc_inst_31 = new bd_d216_interconnect_PLRAM_MEM01_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.interconnect.interconnect_plram_mem01");
        sc_inst_31->xsim_set_dbg_index(2471);
        xsim_sc_channel<0, bool > *p_31_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_31->aclk.bind(*p_31_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_31_aclk);
        xsim_sc_channel<0, bool > *p_31_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_31->aresetn.bind(*p_31_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_31_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_31_S00_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_31->S00_AXI_awid.bind(*p_31_S00_AXI_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_31_S00_AXI_awid);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_31_S00_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_31->S00_AXI_awaddr.bind(*p_31_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_31_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_31_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_31->S00_AXI_awlen.bind(*p_31_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_31_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_31_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_31->S00_AXI_awsize.bind(*p_31_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_31_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_31_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_31->S00_AXI_awburst.bind(*p_31_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_31_S00_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_31_S00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_31->S00_AXI_awlock.bind(*p_31_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_31_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_31_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_31->S00_AXI_awcache.bind(*p_31_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_31_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_31_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_31->S00_AXI_awprot.bind(*p_31_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_31_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_31_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_31->S00_AXI_awqos.bind(*p_31_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_31_S00_AXI_awqos);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_31_S00_AXI_awuser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_31->S00_AXI_awuser.bind(*p_31_S00_AXI_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_31_S00_AXI_awuser);
        xsim_sc_channel<0, bool > *p_31_S00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_31->S00_AXI_awvalid.bind(*p_31_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_31_S00_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_31_S00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_31->S00_AXI_awready.bind(*p_31_S00_AXI_awready);
        p_31_S00_AXI_awready->set_sv_netview_offsetfromdp(9701376);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_31_S00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_31->S00_AXI_wdata.bind(*p_31_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_31_S00_AXI_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_31_S00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_31->S00_AXI_wstrb.bind(*p_31_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_31_S00_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_31_S00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_31->S00_AXI_wlast.bind(*p_31_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_31_S00_AXI_wlast);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_31_S00_AXI_wuser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_31->S00_AXI_wuser.bind(*p_31_S00_AXI_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_31_S00_AXI_wuser);
        xsim_sc_channel<0, bool > *p_31_S00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_31->S00_AXI_wvalid.bind(*p_31_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_31_S00_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_31_S00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_31->S00_AXI_wready.bind(*p_31_S00_AXI_wready);
        p_31_S00_AXI_wready->set_sv_netview_offsetfromdp(9701712);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_31_S00_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_31->S00_AXI_bid.bind(*p_31_S00_AXI_bid);
        p_31_S00_AXI_bid->set_sv_netview_offsetfromdp(9701768);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_31_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_31->S00_AXI_bresp.bind(*p_31_S00_AXI_bresp);
        p_31_S00_AXI_bresp->set_sv_netview_offsetfromdp(9701824);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_31_S00_AXI_buser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_31->S00_AXI_buser.bind(*p_31_S00_AXI_buser);
        p_31_S00_AXI_buser->set_sv_netview_offsetfromdp(9701880);
        xsim_sc_channel<0, bool > *p_31_S00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_31->S00_AXI_bvalid.bind(*p_31_S00_AXI_bvalid);
        p_31_S00_AXI_bvalid->set_sv_netview_offsetfromdp(9701936);
        xsim_sc_channel<0, bool > *p_31_S00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_31->S00_AXI_bready.bind(*p_31_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_31_S00_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_31_S00_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_31->S00_AXI_arid.bind(*p_31_S00_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_31_S00_AXI_arid);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_31_S00_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_31->S00_AXI_araddr.bind(*p_31_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_31_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_31_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_31->S00_AXI_arlen.bind(*p_31_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_31_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_31_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_31->S00_AXI_arsize.bind(*p_31_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_31_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_31_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_31->S00_AXI_arburst.bind(*p_31_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_31_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_31_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_31->S00_AXI_arlock.bind(*p_31_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_31_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_31_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_31->S00_AXI_arcache.bind(*p_31_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_31_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_31_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_31->S00_AXI_arprot.bind(*p_31_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_31_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_31_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_31->S00_AXI_arqos.bind(*p_31_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_31_S00_AXI_arqos);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_31_S00_AXI_aruser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_31->S00_AXI_aruser.bind(*p_31_S00_AXI_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_31_S00_AXI_aruser);
        xsim_sc_channel<0, bool > *p_31_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_31->S00_AXI_arvalid.bind(*p_31_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_31_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_31_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_31->S00_AXI_arready.bind(*p_31_S00_AXI_arready);
        p_31_S00_AXI_arready->set_sv_netview_offsetfromdp(9702664);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_31_S00_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_31->S00_AXI_rid.bind(*p_31_S00_AXI_rid);
        p_31_S00_AXI_rid->set_sv_netview_offsetfromdp(9702720);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_31_S00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_31->S00_AXI_rdata.bind(*p_31_S00_AXI_rdata);
        p_31_S00_AXI_rdata->set_sv_netview_offsetfromdp(9702776);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_31_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_31->S00_AXI_rresp.bind(*p_31_S00_AXI_rresp);
        p_31_S00_AXI_rresp->set_sv_netview_offsetfromdp(9702832);
        xsim_sc_channel<0, bool > *p_31_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_31->S00_AXI_rlast.bind(*p_31_S00_AXI_rlast);
        p_31_S00_AXI_rlast->set_sv_netview_offsetfromdp(9702888);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_31_S00_AXI_ruser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_31->S00_AXI_ruser.bind(*p_31_S00_AXI_ruser);
        p_31_S00_AXI_ruser->set_sv_netview_offsetfromdp(9702944);
        xsim_sc_channel<0, bool > *p_31_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_31->S00_AXI_rvalid.bind(*p_31_S00_AXI_rvalid);
        p_31_S00_AXI_rvalid->set_sv_netview_offsetfromdp(9703000);
        xsim_sc_channel<0, bool > *p_31_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_31->S00_AXI_rready.bind(*p_31_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_31_S00_AXI_rready);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_31_M00_AXI_awaddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_31->M00_AXI_awaddr.bind(*p_31_M00_AXI_awaddr);
        p_31_M00_AXI_awaddr->set_sv_netview_offsetfromdp(9703112);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_31_M00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_31->M00_AXI_awlen.bind(*p_31_M00_AXI_awlen);
        p_31_M00_AXI_awlen->set_sv_netview_offsetfromdp(9703168);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_31_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_31->M00_AXI_awsize.bind(*p_31_M00_AXI_awsize);
        p_31_M00_AXI_awsize->set_sv_netview_offsetfromdp(9703224);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_31_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_31->M00_AXI_awburst.bind(*p_31_M00_AXI_awburst);
        p_31_M00_AXI_awburst->set_sv_netview_offsetfromdp(9703280);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_31_M00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_31->M00_AXI_awlock.bind(*p_31_M00_AXI_awlock);
        p_31_M00_AXI_awlock->set_sv_netview_offsetfromdp(9703336);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_31_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_31->M00_AXI_awcache.bind(*p_31_M00_AXI_awcache);
        p_31_M00_AXI_awcache->set_sv_netview_offsetfromdp(9703392);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_31_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_31->M00_AXI_awprot.bind(*p_31_M00_AXI_awprot);
        p_31_M00_AXI_awprot->set_sv_netview_offsetfromdp(9703448);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_31_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_31->M00_AXI_awqos.bind(*p_31_M00_AXI_awqos);
        p_31_M00_AXI_awqos->set_sv_netview_offsetfromdp(9703504);
        xsim_sc_channel<0, bool > *p_31_M00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_31->M00_AXI_awvalid.bind(*p_31_M00_AXI_awvalid);
        p_31_M00_AXI_awvalid->set_sv_netview_offsetfromdp(9703560);
        xsim_sc_channel<0, bool > *p_31_M00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_31->M00_AXI_awready.bind(*p_31_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_31_M00_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_31_M00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_31->M00_AXI_wdata.bind(*p_31_M00_AXI_wdata);
        p_31_M00_AXI_wdata->set_sv_netview_offsetfromdp(9703672);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_31_M00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_31->M00_AXI_wstrb.bind(*p_31_M00_AXI_wstrb);
        p_31_M00_AXI_wstrb->set_sv_netview_offsetfromdp(9703728);
        xsim_sc_channel<0, bool > *p_31_M00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_31->M00_AXI_wlast.bind(*p_31_M00_AXI_wlast);
        p_31_M00_AXI_wlast->set_sv_netview_offsetfromdp(9703784);
        xsim_sc_channel<0, bool > *p_31_M00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_31->M00_AXI_wvalid.bind(*p_31_M00_AXI_wvalid);
        p_31_M00_AXI_wvalid->set_sv_netview_offsetfromdp(9703840);
        xsim_sc_channel<0, bool > *p_31_M00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_31->M00_AXI_wready.bind(*p_31_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_31_M00_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_31_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_31->M00_AXI_bresp.bind(*p_31_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_31_M00_AXI_bresp);
        xsim_sc_channel<0, bool > *p_31_M00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_31->M00_AXI_bvalid.bind(*p_31_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_31_M00_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_31_M00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_31->M00_AXI_bready.bind(*p_31_M00_AXI_bready);
        p_31_M00_AXI_bready->set_sv_netview_offsetfromdp(9704064);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_31_M00_AXI_araddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_31->M00_AXI_araddr.bind(*p_31_M00_AXI_araddr);
        p_31_M00_AXI_araddr->set_sv_netview_offsetfromdp(9704120);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_31_M00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_31->M00_AXI_arlen.bind(*p_31_M00_AXI_arlen);
        p_31_M00_AXI_arlen->set_sv_netview_offsetfromdp(9704176);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_31_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_31->M00_AXI_arsize.bind(*p_31_M00_AXI_arsize);
        p_31_M00_AXI_arsize->set_sv_netview_offsetfromdp(9704232);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_31_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_31->M00_AXI_arburst.bind(*p_31_M00_AXI_arburst);
        p_31_M00_AXI_arburst->set_sv_netview_offsetfromdp(9704288);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_31_M00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_31->M00_AXI_arlock.bind(*p_31_M00_AXI_arlock);
        p_31_M00_AXI_arlock->set_sv_netview_offsetfromdp(9704344);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_31_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_31->M00_AXI_arcache.bind(*p_31_M00_AXI_arcache);
        p_31_M00_AXI_arcache->set_sv_netview_offsetfromdp(9704400);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_31_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_31->M00_AXI_arprot.bind(*p_31_M00_AXI_arprot);
        p_31_M00_AXI_arprot->set_sv_netview_offsetfromdp(9704456);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_31_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_31->M00_AXI_arqos.bind(*p_31_M00_AXI_arqos);
        p_31_M00_AXI_arqos->set_sv_netview_offsetfromdp(9704512);
        xsim_sc_channel<0, bool > *p_31_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_31->M00_AXI_arvalid.bind(*p_31_M00_AXI_arvalid);
        p_31_M00_AXI_arvalid->set_sv_netview_offsetfromdp(9704568);
        xsim_sc_channel<0, bool > *p_31_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_31->M00_AXI_arready.bind(*p_31_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_31_M00_AXI_arready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_31_M00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_31->M00_AXI_rdata.bind(*p_31_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_31_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_31_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_31->M00_AXI_rresp.bind(*p_31_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_31_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_31_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_31->M00_AXI_rlast.bind(*p_31_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_31_M00_AXI_rlast);
        xsim_sc_channel<0, bool > *p_31_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_31->M00_AXI_rvalid.bind(*p_31_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_31_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_31_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_31->M00_AXI_rready.bind(*p_31_M00_AXI_rready);
        p_31_M00_AXI_rready->set_sv_netview_offsetfromdp(9704904);
        sc_inst_32 = new bd_d216_interconnect_PLRAM_MEM02_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.interconnect.interconnect_plram_mem02");
        sc_inst_32->xsim_set_dbg_index(2472);
        xsim_sc_channel<0, bool > *p_32_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_32->aclk.bind(*p_32_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_32_aclk);
        xsim_sc_channel<0, bool > *p_32_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_32->aresetn.bind(*p_32_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_32_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_32_S00_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_32->S00_AXI_awid.bind(*p_32_S00_AXI_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_32_S00_AXI_awid);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_32_S00_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_32->S00_AXI_awaddr.bind(*p_32_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_32_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_32_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_32->S00_AXI_awlen.bind(*p_32_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_32_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_32_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_32->S00_AXI_awsize.bind(*p_32_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_32_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_32_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_32->S00_AXI_awburst.bind(*p_32_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_32_S00_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_32_S00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_32->S00_AXI_awlock.bind(*p_32_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_32_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_32_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_32->S00_AXI_awcache.bind(*p_32_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_32_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_32_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_32->S00_AXI_awprot.bind(*p_32_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_32_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_32_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_32->S00_AXI_awqos.bind(*p_32_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_32_S00_AXI_awqos);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_32_S00_AXI_awuser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_32->S00_AXI_awuser.bind(*p_32_S00_AXI_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_32_S00_AXI_awuser);
        xsim_sc_channel<0, bool > *p_32_S00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_32->S00_AXI_awvalid.bind(*p_32_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_32_S00_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_32_S00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_32->S00_AXI_awready.bind(*p_32_S00_AXI_awready);
        p_32_S00_AXI_awready->set_sv_netview_offsetfromdp(9705736);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_32_S00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_32->S00_AXI_wdata.bind(*p_32_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_32_S00_AXI_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_32_S00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_32->S00_AXI_wstrb.bind(*p_32_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_32_S00_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_32_S00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_32->S00_AXI_wlast.bind(*p_32_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_32_S00_AXI_wlast);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_32_S00_AXI_wuser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_32->S00_AXI_wuser.bind(*p_32_S00_AXI_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_32_S00_AXI_wuser);
        xsim_sc_channel<0, bool > *p_32_S00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_32->S00_AXI_wvalid.bind(*p_32_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_32_S00_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_32_S00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_32->S00_AXI_wready.bind(*p_32_S00_AXI_wready);
        p_32_S00_AXI_wready->set_sv_netview_offsetfromdp(9706072);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_32_S00_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_32->S00_AXI_bid.bind(*p_32_S00_AXI_bid);
        p_32_S00_AXI_bid->set_sv_netview_offsetfromdp(9706128);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_32_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_32->S00_AXI_bresp.bind(*p_32_S00_AXI_bresp);
        p_32_S00_AXI_bresp->set_sv_netview_offsetfromdp(9706184);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_32_S00_AXI_buser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_32->S00_AXI_buser.bind(*p_32_S00_AXI_buser);
        p_32_S00_AXI_buser->set_sv_netview_offsetfromdp(9706240);
        xsim_sc_channel<0, bool > *p_32_S00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_32->S00_AXI_bvalid.bind(*p_32_S00_AXI_bvalid);
        p_32_S00_AXI_bvalid->set_sv_netview_offsetfromdp(9706296);
        xsim_sc_channel<0, bool > *p_32_S00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_32->S00_AXI_bready.bind(*p_32_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_32_S00_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_32_S00_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_32->S00_AXI_arid.bind(*p_32_S00_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_32_S00_AXI_arid);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_32_S00_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_32->S00_AXI_araddr.bind(*p_32_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_32_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_32_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_32->S00_AXI_arlen.bind(*p_32_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_32_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_32_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_32->S00_AXI_arsize.bind(*p_32_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_32_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_32_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_32->S00_AXI_arburst.bind(*p_32_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_32_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_32_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_32->S00_AXI_arlock.bind(*p_32_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_32_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_32_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_32->S00_AXI_arcache.bind(*p_32_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_32_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_32_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_32->S00_AXI_arprot.bind(*p_32_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_32_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_32_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_32->S00_AXI_arqos.bind(*p_32_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_32_S00_AXI_arqos);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_32_S00_AXI_aruser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_32->S00_AXI_aruser.bind(*p_32_S00_AXI_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_32_S00_AXI_aruser);
        xsim_sc_channel<0, bool > *p_32_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_32->S00_AXI_arvalid.bind(*p_32_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_32_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_32_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_32->S00_AXI_arready.bind(*p_32_S00_AXI_arready);
        p_32_S00_AXI_arready->set_sv_netview_offsetfromdp(9707024);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_32_S00_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_32->S00_AXI_rid.bind(*p_32_S00_AXI_rid);
        p_32_S00_AXI_rid->set_sv_netview_offsetfromdp(9707080);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_32_S00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_32->S00_AXI_rdata.bind(*p_32_S00_AXI_rdata);
        p_32_S00_AXI_rdata->set_sv_netview_offsetfromdp(9707136);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_32_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_32->S00_AXI_rresp.bind(*p_32_S00_AXI_rresp);
        p_32_S00_AXI_rresp->set_sv_netview_offsetfromdp(9707192);
        xsim_sc_channel<0, bool > *p_32_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_32->S00_AXI_rlast.bind(*p_32_S00_AXI_rlast);
        p_32_S00_AXI_rlast->set_sv_netview_offsetfromdp(9707248);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_32_S00_AXI_ruser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_32->S00_AXI_ruser.bind(*p_32_S00_AXI_ruser);
        p_32_S00_AXI_ruser->set_sv_netview_offsetfromdp(9707304);
        xsim_sc_channel<0, bool > *p_32_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_32->S00_AXI_rvalid.bind(*p_32_S00_AXI_rvalid);
        p_32_S00_AXI_rvalid->set_sv_netview_offsetfromdp(9707360);
        xsim_sc_channel<0, bool > *p_32_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_32->S00_AXI_rready.bind(*p_32_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_32_S00_AXI_rready);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_32_M00_AXI_awaddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_32->M00_AXI_awaddr.bind(*p_32_M00_AXI_awaddr);
        p_32_M00_AXI_awaddr->set_sv_netview_offsetfromdp(9707472);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_32_M00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_32->M00_AXI_awlen.bind(*p_32_M00_AXI_awlen);
        p_32_M00_AXI_awlen->set_sv_netview_offsetfromdp(9707528);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_32_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_32->M00_AXI_awsize.bind(*p_32_M00_AXI_awsize);
        p_32_M00_AXI_awsize->set_sv_netview_offsetfromdp(9707584);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_32_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_32->M00_AXI_awburst.bind(*p_32_M00_AXI_awburst);
        p_32_M00_AXI_awburst->set_sv_netview_offsetfromdp(9707640);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_32_M00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_32->M00_AXI_awlock.bind(*p_32_M00_AXI_awlock);
        p_32_M00_AXI_awlock->set_sv_netview_offsetfromdp(9707696);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_32_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_32->M00_AXI_awcache.bind(*p_32_M00_AXI_awcache);
        p_32_M00_AXI_awcache->set_sv_netview_offsetfromdp(9707752);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_32_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_32->M00_AXI_awprot.bind(*p_32_M00_AXI_awprot);
        p_32_M00_AXI_awprot->set_sv_netview_offsetfromdp(9707808);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_32_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_32->M00_AXI_awqos.bind(*p_32_M00_AXI_awqos);
        p_32_M00_AXI_awqos->set_sv_netview_offsetfromdp(9707864);
        xsim_sc_channel<0, bool > *p_32_M00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_32->M00_AXI_awvalid.bind(*p_32_M00_AXI_awvalid);
        p_32_M00_AXI_awvalid->set_sv_netview_offsetfromdp(9707920);
        xsim_sc_channel<0, bool > *p_32_M00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_32->M00_AXI_awready.bind(*p_32_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_32_M00_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_32_M00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_32->M00_AXI_wdata.bind(*p_32_M00_AXI_wdata);
        p_32_M00_AXI_wdata->set_sv_netview_offsetfromdp(9708032);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_32_M00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_32->M00_AXI_wstrb.bind(*p_32_M00_AXI_wstrb);
        p_32_M00_AXI_wstrb->set_sv_netview_offsetfromdp(9708088);
        xsim_sc_channel<0, bool > *p_32_M00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_32->M00_AXI_wlast.bind(*p_32_M00_AXI_wlast);
        p_32_M00_AXI_wlast->set_sv_netview_offsetfromdp(9708144);
        xsim_sc_channel<0, bool > *p_32_M00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_32->M00_AXI_wvalid.bind(*p_32_M00_AXI_wvalid);
        p_32_M00_AXI_wvalid->set_sv_netview_offsetfromdp(9708200);
        xsim_sc_channel<0, bool > *p_32_M00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_32->M00_AXI_wready.bind(*p_32_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_32_M00_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_32_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_32->M00_AXI_bresp.bind(*p_32_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_32_M00_AXI_bresp);
        xsim_sc_channel<0, bool > *p_32_M00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_32->M00_AXI_bvalid.bind(*p_32_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_32_M00_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_32_M00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_32->M00_AXI_bready.bind(*p_32_M00_AXI_bready);
        p_32_M00_AXI_bready->set_sv_netview_offsetfromdp(9708424);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_32_M00_AXI_araddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_32->M00_AXI_araddr.bind(*p_32_M00_AXI_araddr);
        p_32_M00_AXI_araddr->set_sv_netview_offsetfromdp(9708480);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_32_M00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_32->M00_AXI_arlen.bind(*p_32_M00_AXI_arlen);
        p_32_M00_AXI_arlen->set_sv_netview_offsetfromdp(9708536);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_32_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_32->M00_AXI_arsize.bind(*p_32_M00_AXI_arsize);
        p_32_M00_AXI_arsize->set_sv_netview_offsetfromdp(9708592);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_32_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_32->M00_AXI_arburst.bind(*p_32_M00_AXI_arburst);
        p_32_M00_AXI_arburst->set_sv_netview_offsetfromdp(9708648);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_32_M00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_32->M00_AXI_arlock.bind(*p_32_M00_AXI_arlock);
        p_32_M00_AXI_arlock->set_sv_netview_offsetfromdp(9708704);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_32_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_32->M00_AXI_arcache.bind(*p_32_M00_AXI_arcache);
        p_32_M00_AXI_arcache->set_sv_netview_offsetfromdp(9708760);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_32_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_32->M00_AXI_arprot.bind(*p_32_M00_AXI_arprot);
        p_32_M00_AXI_arprot->set_sv_netview_offsetfromdp(9708816);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_32_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_32->M00_AXI_arqos.bind(*p_32_M00_AXI_arqos);
        p_32_M00_AXI_arqos->set_sv_netview_offsetfromdp(9708872);
        xsim_sc_channel<0, bool > *p_32_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_32->M00_AXI_arvalid.bind(*p_32_M00_AXI_arvalid);
        p_32_M00_AXI_arvalid->set_sv_netview_offsetfromdp(9708928);
        xsim_sc_channel<0, bool > *p_32_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_32->M00_AXI_arready.bind(*p_32_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_32_M00_AXI_arready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_32_M00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_32->M00_AXI_rdata.bind(*p_32_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_32_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_32_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_32->M00_AXI_rresp.bind(*p_32_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_32_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_32_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_32->M00_AXI_rlast.bind(*p_32_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_32_M00_AXI_rlast);
        xsim_sc_channel<0, bool > *p_32_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_32->M00_AXI_rvalid.bind(*p_32_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_32_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_32_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_32->M00_AXI_rready.bind(*p_32_M00_AXI_rready);
        p_32_M00_AXI_rready->set_sv_netview_offsetfromdp(9709264);
        sc_inst_33 = new bd_d216_interconnect_PLRAM_MEM03_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.interconnect.interconnect_plram_mem03");
        sc_inst_33->xsim_set_dbg_index(2473);
        xsim_sc_channel<0, bool > *p_33_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_33->aclk.bind(*p_33_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_33_aclk);
        xsim_sc_channel<0, bool > *p_33_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_33->aresetn.bind(*p_33_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_33_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_33_S00_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_33->S00_AXI_awid.bind(*p_33_S00_AXI_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_awid);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_33_S00_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_33->S00_AXI_awaddr.bind(*p_33_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_33_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_33->S00_AXI_awlen.bind(*p_33_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_33_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_33->S00_AXI_awsize.bind(*p_33_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_33_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_33->S00_AXI_awburst.bind(*p_33_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_33_S00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_33->S00_AXI_awlock.bind(*p_33_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_33_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_33->S00_AXI_awcache.bind(*p_33_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_33_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_33->S00_AXI_awprot.bind(*p_33_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_33_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_33->S00_AXI_awqos.bind(*p_33_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_awqos);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_33_S00_AXI_awuser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_33->S00_AXI_awuser.bind(*p_33_S00_AXI_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_awuser);
        xsim_sc_channel<0, bool > *p_33_S00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_33->S00_AXI_awvalid.bind(*p_33_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_33_S00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_33->S00_AXI_awready.bind(*p_33_S00_AXI_awready);
        p_33_S00_AXI_awready->set_sv_netview_offsetfromdp(9710096);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_33_S00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_33->S00_AXI_wdata.bind(*p_33_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_33_S00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_33->S00_AXI_wstrb.bind(*p_33_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_33_S00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_33->S00_AXI_wlast.bind(*p_33_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_wlast);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_33_S00_AXI_wuser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_33->S00_AXI_wuser.bind(*p_33_S00_AXI_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_wuser);
        xsim_sc_channel<0, bool > *p_33_S00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_33->S00_AXI_wvalid.bind(*p_33_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_33_S00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_33->S00_AXI_wready.bind(*p_33_S00_AXI_wready);
        p_33_S00_AXI_wready->set_sv_netview_offsetfromdp(9710432);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_33_S00_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_33->S00_AXI_bid.bind(*p_33_S00_AXI_bid);
        p_33_S00_AXI_bid->set_sv_netview_offsetfromdp(9710488);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_33_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_33->S00_AXI_bresp.bind(*p_33_S00_AXI_bresp);
        p_33_S00_AXI_bresp->set_sv_netview_offsetfromdp(9710544);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_33_S00_AXI_buser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_33->S00_AXI_buser.bind(*p_33_S00_AXI_buser);
        p_33_S00_AXI_buser->set_sv_netview_offsetfromdp(9710600);
        xsim_sc_channel<0, bool > *p_33_S00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_33->S00_AXI_bvalid.bind(*p_33_S00_AXI_bvalid);
        p_33_S00_AXI_bvalid->set_sv_netview_offsetfromdp(9710656);
        xsim_sc_channel<0, bool > *p_33_S00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_33->S00_AXI_bready.bind(*p_33_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_33_S00_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_33->S00_AXI_arid.bind(*p_33_S00_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_arid);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_33_S00_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_33->S00_AXI_araddr.bind(*p_33_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_33_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_33->S00_AXI_arlen.bind(*p_33_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_33_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_33->S00_AXI_arsize.bind(*p_33_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_33_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_33->S00_AXI_arburst.bind(*p_33_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_33_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_33->S00_AXI_arlock.bind(*p_33_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_33_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_33->S00_AXI_arcache.bind(*p_33_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_33_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_33->S00_AXI_arprot.bind(*p_33_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_33_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_33->S00_AXI_arqos.bind(*p_33_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_arqos);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_33_S00_AXI_aruser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_33->S00_AXI_aruser.bind(*p_33_S00_AXI_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_aruser);
        xsim_sc_channel<0, bool > *p_33_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_33->S00_AXI_arvalid.bind(*p_33_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_33_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_33->S00_AXI_arready.bind(*p_33_S00_AXI_arready);
        p_33_S00_AXI_arready->set_sv_netview_offsetfromdp(9711384);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_33_S00_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_33->S00_AXI_rid.bind(*p_33_S00_AXI_rid);
        p_33_S00_AXI_rid->set_sv_netview_offsetfromdp(9711440);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_33_S00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_33->S00_AXI_rdata.bind(*p_33_S00_AXI_rdata);
        p_33_S00_AXI_rdata->set_sv_netview_offsetfromdp(9711496);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_33_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_33->S00_AXI_rresp.bind(*p_33_S00_AXI_rresp);
        p_33_S00_AXI_rresp->set_sv_netview_offsetfromdp(9711552);
        xsim_sc_channel<0, bool > *p_33_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_33->S00_AXI_rlast.bind(*p_33_S00_AXI_rlast);
        p_33_S00_AXI_rlast->set_sv_netview_offsetfromdp(9711608);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_33_S00_AXI_ruser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_33->S00_AXI_ruser.bind(*p_33_S00_AXI_ruser);
        p_33_S00_AXI_ruser->set_sv_netview_offsetfromdp(9711664);
        xsim_sc_channel<0, bool > *p_33_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_33->S00_AXI_rvalid.bind(*p_33_S00_AXI_rvalid);
        p_33_S00_AXI_rvalid->set_sv_netview_offsetfromdp(9711720);
        xsim_sc_channel<0, bool > *p_33_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_33->S00_AXI_rready.bind(*p_33_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_rready);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_33_M00_AXI_awaddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_33->M00_AXI_awaddr.bind(*p_33_M00_AXI_awaddr);
        p_33_M00_AXI_awaddr->set_sv_netview_offsetfromdp(9711832);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_33_M00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_33->M00_AXI_awlen.bind(*p_33_M00_AXI_awlen);
        p_33_M00_AXI_awlen->set_sv_netview_offsetfromdp(9711888);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_33_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_33->M00_AXI_awsize.bind(*p_33_M00_AXI_awsize);
        p_33_M00_AXI_awsize->set_sv_netview_offsetfromdp(9711944);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_33_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_33->M00_AXI_awburst.bind(*p_33_M00_AXI_awburst);
        p_33_M00_AXI_awburst->set_sv_netview_offsetfromdp(9712000);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_33_M00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_33->M00_AXI_awlock.bind(*p_33_M00_AXI_awlock);
        p_33_M00_AXI_awlock->set_sv_netview_offsetfromdp(9712056);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_33_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_33->M00_AXI_awcache.bind(*p_33_M00_AXI_awcache);
        p_33_M00_AXI_awcache->set_sv_netview_offsetfromdp(9712112);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_33_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_33->M00_AXI_awprot.bind(*p_33_M00_AXI_awprot);
        p_33_M00_AXI_awprot->set_sv_netview_offsetfromdp(9712168);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_33_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_33->M00_AXI_awqos.bind(*p_33_M00_AXI_awqos);
        p_33_M00_AXI_awqos->set_sv_netview_offsetfromdp(9712224);
        xsim_sc_channel<0, bool > *p_33_M00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_33->M00_AXI_awvalid.bind(*p_33_M00_AXI_awvalid);
        p_33_M00_AXI_awvalid->set_sv_netview_offsetfromdp(9712280);
        xsim_sc_channel<0, bool > *p_33_M00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_33->M00_AXI_awready.bind(*p_33_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_33_M00_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_33_M00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_33->M00_AXI_wdata.bind(*p_33_M00_AXI_wdata);
        p_33_M00_AXI_wdata->set_sv_netview_offsetfromdp(9712392);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_33_M00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_33->M00_AXI_wstrb.bind(*p_33_M00_AXI_wstrb);
        p_33_M00_AXI_wstrb->set_sv_netview_offsetfromdp(9712448);
        xsim_sc_channel<0, bool > *p_33_M00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_33->M00_AXI_wlast.bind(*p_33_M00_AXI_wlast);
        p_33_M00_AXI_wlast->set_sv_netview_offsetfromdp(9712504);
        xsim_sc_channel<0, bool > *p_33_M00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_33->M00_AXI_wvalid.bind(*p_33_M00_AXI_wvalid);
        p_33_M00_AXI_wvalid->set_sv_netview_offsetfromdp(9712560);
        xsim_sc_channel<0, bool > *p_33_M00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_33->M00_AXI_wready.bind(*p_33_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_33_M00_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_33_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_33->M00_AXI_bresp.bind(*p_33_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_33_M00_AXI_bresp);
        xsim_sc_channel<0, bool > *p_33_M00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_33->M00_AXI_bvalid.bind(*p_33_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_33_M00_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_33_M00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_33->M00_AXI_bready.bind(*p_33_M00_AXI_bready);
        p_33_M00_AXI_bready->set_sv_netview_offsetfromdp(9712784);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_33_M00_AXI_araddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_33->M00_AXI_araddr.bind(*p_33_M00_AXI_araddr);
        p_33_M00_AXI_araddr->set_sv_netview_offsetfromdp(9712840);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_33_M00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_33->M00_AXI_arlen.bind(*p_33_M00_AXI_arlen);
        p_33_M00_AXI_arlen->set_sv_netview_offsetfromdp(9712896);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_33_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_33->M00_AXI_arsize.bind(*p_33_M00_AXI_arsize);
        p_33_M00_AXI_arsize->set_sv_netview_offsetfromdp(9712952);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_33_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_33->M00_AXI_arburst.bind(*p_33_M00_AXI_arburst);
        p_33_M00_AXI_arburst->set_sv_netview_offsetfromdp(9713008);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_33_M00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_33->M00_AXI_arlock.bind(*p_33_M00_AXI_arlock);
        p_33_M00_AXI_arlock->set_sv_netview_offsetfromdp(9713064);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_33_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_33->M00_AXI_arcache.bind(*p_33_M00_AXI_arcache);
        p_33_M00_AXI_arcache->set_sv_netview_offsetfromdp(9713120);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_33_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_33->M00_AXI_arprot.bind(*p_33_M00_AXI_arprot);
        p_33_M00_AXI_arprot->set_sv_netview_offsetfromdp(9713176);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_33_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_33->M00_AXI_arqos.bind(*p_33_M00_AXI_arqos);
        p_33_M00_AXI_arqos->set_sv_netview_offsetfromdp(9713232);
        xsim_sc_channel<0, bool > *p_33_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_33->M00_AXI_arvalid.bind(*p_33_M00_AXI_arvalid);
        p_33_M00_AXI_arvalid->set_sv_netview_offsetfromdp(9713288);
        xsim_sc_channel<0, bool > *p_33_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_33->M00_AXI_arready.bind(*p_33_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_33_M00_AXI_arready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_33_M00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_33->M00_AXI_rdata.bind(*p_33_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_33_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_33_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_33->M00_AXI_rresp.bind(*p_33_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_33_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_33_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_33->M00_AXI_rlast.bind(*p_33_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_33_M00_AXI_rlast);
        xsim_sc_channel<0, bool > *p_33_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_33->M00_AXI_rvalid.bind(*p_33_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_33_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_33_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_33->M00_AXI_rready.bind(*p_33_M00_AXI_rready);
        p_33_M00_AXI_rready->set_sv_netview_offsetfromdp(9713624);
        sc_inst_34 = new bd_d216_interconnect_PLRAM_MEM04_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.interconnect.interconnect_plram_mem04");
        sc_inst_34->xsim_set_dbg_index(2474);
        xsim_sc_channel<0, bool > *p_34_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_34->aclk.bind(*p_34_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_34_aclk);
        xsim_sc_channel<0, bool > *p_34_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_34->aresetn.bind(*p_34_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_34_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_34_S00_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_34->S00_AXI_awid.bind(*p_34_S00_AXI_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_awid);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_34_S00_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_34->S00_AXI_awaddr.bind(*p_34_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_34_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_34->S00_AXI_awlen.bind(*p_34_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_34_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_34->S00_AXI_awsize.bind(*p_34_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_34_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_34->S00_AXI_awburst.bind(*p_34_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_34_S00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_34->S00_AXI_awlock.bind(*p_34_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_34_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_34->S00_AXI_awcache.bind(*p_34_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_34_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_34->S00_AXI_awprot.bind(*p_34_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_34_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_34->S00_AXI_awqos.bind(*p_34_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_awqos);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_34_S00_AXI_awuser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_34->S00_AXI_awuser.bind(*p_34_S00_AXI_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_awuser);
        xsim_sc_channel<0, bool > *p_34_S00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_34->S00_AXI_awvalid.bind(*p_34_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_34_S00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_34->S00_AXI_awready.bind(*p_34_S00_AXI_awready);
        p_34_S00_AXI_awready->set_sv_netview_offsetfromdp(9714456);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_34_S00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_34->S00_AXI_wdata.bind(*p_34_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_34_S00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_34->S00_AXI_wstrb.bind(*p_34_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_34_S00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_34->S00_AXI_wlast.bind(*p_34_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_wlast);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_34_S00_AXI_wuser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_34->S00_AXI_wuser.bind(*p_34_S00_AXI_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_wuser);
        xsim_sc_channel<0, bool > *p_34_S00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_34->S00_AXI_wvalid.bind(*p_34_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_34_S00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_34->S00_AXI_wready.bind(*p_34_S00_AXI_wready);
        p_34_S00_AXI_wready->set_sv_netview_offsetfromdp(9714792);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_34_S00_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_34->S00_AXI_bid.bind(*p_34_S00_AXI_bid);
        p_34_S00_AXI_bid->set_sv_netview_offsetfromdp(9714848);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_34_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_34->S00_AXI_bresp.bind(*p_34_S00_AXI_bresp);
        p_34_S00_AXI_bresp->set_sv_netview_offsetfromdp(9714904);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_34_S00_AXI_buser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_34->S00_AXI_buser.bind(*p_34_S00_AXI_buser);
        p_34_S00_AXI_buser->set_sv_netview_offsetfromdp(9714960);
        xsim_sc_channel<0, bool > *p_34_S00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_34->S00_AXI_bvalid.bind(*p_34_S00_AXI_bvalid);
        p_34_S00_AXI_bvalid->set_sv_netview_offsetfromdp(9715016);
        xsim_sc_channel<0, bool > *p_34_S00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_34->S00_AXI_bready.bind(*p_34_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_34_S00_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_34->S00_AXI_arid.bind(*p_34_S00_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_arid);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_34_S00_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_34->S00_AXI_araddr.bind(*p_34_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_34_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_34->S00_AXI_arlen.bind(*p_34_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_34_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_34->S00_AXI_arsize.bind(*p_34_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_34_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_34->S00_AXI_arburst.bind(*p_34_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_34_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_34->S00_AXI_arlock.bind(*p_34_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_34_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_34->S00_AXI_arcache.bind(*p_34_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_34_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_34->S00_AXI_arprot.bind(*p_34_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_34_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_34->S00_AXI_arqos.bind(*p_34_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_arqos);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_34_S00_AXI_aruser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_34->S00_AXI_aruser.bind(*p_34_S00_AXI_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_aruser);
        xsim_sc_channel<0, bool > *p_34_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_34->S00_AXI_arvalid.bind(*p_34_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_34_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_34->S00_AXI_arready.bind(*p_34_S00_AXI_arready);
        p_34_S00_AXI_arready->set_sv_netview_offsetfromdp(9715744);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_34_S00_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_34->S00_AXI_rid.bind(*p_34_S00_AXI_rid);
        p_34_S00_AXI_rid->set_sv_netview_offsetfromdp(9715800);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_34_S00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_34->S00_AXI_rdata.bind(*p_34_S00_AXI_rdata);
        p_34_S00_AXI_rdata->set_sv_netview_offsetfromdp(9715856);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_34_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_34->S00_AXI_rresp.bind(*p_34_S00_AXI_rresp);
        p_34_S00_AXI_rresp->set_sv_netview_offsetfromdp(9715912);
        xsim_sc_channel<0, bool > *p_34_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_34->S00_AXI_rlast.bind(*p_34_S00_AXI_rlast);
        p_34_S00_AXI_rlast->set_sv_netview_offsetfromdp(9715968);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_34_S00_AXI_ruser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_34->S00_AXI_ruser.bind(*p_34_S00_AXI_ruser);
        p_34_S00_AXI_ruser->set_sv_netview_offsetfromdp(9716024);
        xsim_sc_channel<0, bool > *p_34_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_34->S00_AXI_rvalid.bind(*p_34_S00_AXI_rvalid);
        p_34_S00_AXI_rvalid->set_sv_netview_offsetfromdp(9716080);
        xsim_sc_channel<0, bool > *p_34_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_34->S00_AXI_rready.bind(*p_34_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_rready);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_34_M00_AXI_awaddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_34->M00_AXI_awaddr.bind(*p_34_M00_AXI_awaddr);
        p_34_M00_AXI_awaddr->set_sv_netview_offsetfromdp(9716192);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_34_M00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_34->M00_AXI_awlen.bind(*p_34_M00_AXI_awlen);
        p_34_M00_AXI_awlen->set_sv_netview_offsetfromdp(9716248);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_34_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_34->M00_AXI_awsize.bind(*p_34_M00_AXI_awsize);
        p_34_M00_AXI_awsize->set_sv_netview_offsetfromdp(9716304);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_34_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_34->M00_AXI_awburst.bind(*p_34_M00_AXI_awburst);
        p_34_M00_AXI_awburst->set_sv_netview_offsetfromdp(9716360);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_34_M00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_34->M00_AXI_awlock.bind(*p_34_M00_AXI_awlock);
        p_34_M00_AXI_awlock->set_sv_netview_offsetfromdp(9716416);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_34_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_34->M00_AXI_awcache.bind(*p_34_M00_AXI_awcache);
        p_34_M00_AXI_awcache->set_sv_netview_offsetfromdp(9716472);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_34_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_34->M00_AXI_awprot.bind(*p_34_M00_AXI_awprot);
        p_34_M00_AXI_awprot->set_sv_netview_offsetfromdp(9716528);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_34_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_34->M00_AXI_awqos.bind(*p_34_M00_AXI_awqos);
        p_34_M00_AXI_awqos->set_sv_netview_offsetfromdp(9716584);
        xsim_sc_channel<0, bool > *p_34_M00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_34->M00_AXI_awvalid.bind(*p_34_M00_AXI_awvalid);
        p_34_M00_AXI_awvalid->set_sv_netview_offsetfromdp(9716640);
        xsim_sc_channel<0, bool > *p_34_M00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_34->M00_AXI_awready.bind(*p_34_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_34_M00_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_34_M00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_34->M00_AXI_wdata.bind(*p_34_M00_AXI_wdata);
        p_34_M00_AXI_wdata->set_sv_netview_offsetfromdp(9716752);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_34_M00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_34->M00_AXI_wstrb.bind(*p_34_M00_AXI_wstrb);
        p_34_M00_AXI_wstrb->set_sv_netview_offsetfromdp(9716808);
        xsim_sc_channel<0, bool > *p_34_M00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_34->M00_AXI_wlast.bind(*p_34_M00_AXI_wlast);
        p_34_M00_AXI_wlast->set_sv_netview_offsetfromdp(9716864);
        xsim_sc_channel<0, bool > *p_34_M00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_34->M00_AXI_wvalid.bind(*p_34_M00_AXI_wvalid);
        p_34_M00_AXI_wvalid->set_sv_netview_offsetfromdp(9716920);
        xsim_sc_channel<0, bool > *p_34_M00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_34->M00_AXI_wready.bind(*p_34_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_34_M00_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_34_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_34->M00_AXI_bresp.bind(*p_34_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_34_M00_AXI_bresp);
        xsim_sc_channel<0, bool > *p_34_M00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_34->M00_AXI_bvalid.bind(*p_34_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_34_M00_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_34_M00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_34->M00_AXI_bready.bind(*p_34_M00_AXI_bready);
        p_34_M00_AXI_bready->set_sv_netview_offsetfromdp(9717144);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_34_M00_AXI_araddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_34->M00_AXI_araddr.bind(*p_34_M00_AXI_araddr);
        p_34_M00_AXI_araddr->set_sv_netview_offsetfromdp(9717200);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_34_M00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_34->M00_AXI_arlen.bind(*p_34_M00_AXI_arlen);
        p_34_M00_AXI_arlen->set_sv_netview_offsetfromdp(9717256);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_34_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_34->M00_AXI_arsize.bind(*p_34_M00_AXI_arsize);
        p_34_M00_AXI_arsize->set_sv_netview_offsetfromdp(9717312);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_34_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_34->M00_AXI_arburst.bind(*p_34_M00_AXI_arburst);
        p_34_M00_AXI_arburst->set_sv_netview_offsetfromdp(9717368);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_34_M00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_34->M00_AXI_arlock.bind(*p_34_M00_AXI_arlock);
        p_34_M00_AXI_arlock->set_sv_netview_offsetfromdp(9717424);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_34_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_34->M00_AXI_arcache.bind(*p_34_M00_AXI_arcache);
        p_34_M00_AXI_arcache->set_sv_netview_offsetfromdp(9717480);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_34_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_34->M00_AXI_arprot.bind(*p_34_M00_AXI_arprot);
        p_34_M00_AXI_arprot->set_sv_netview_offsetfromdp(9717536);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_34_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_34->M00_AXI_arqos.bind(*p_34_M00_AXI_arqos);
        p_34_M00_AXI_arqos->set_sv_netview_offsetfromdp(9717592);
        xsim_sc_channel<0, bool > *p_34_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_34->M00_AXI_arvalid.bind(*p_34_M00_AXI_arvalid);
        p_34_M00_AXI_arvalid->set_sv_netview_offsetfromdp(9717648);
        xsim_sc_channel<0, bool > *p_34_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_34->M00_AXI_arready.bind(*p_34_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_34_M00_AXI_arready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_34_M00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_34->M00_AXI_rdata.bind(*p_34_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_34_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_34_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_34->M00_AXI_rresp.bind(*p_34_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_34_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_34_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_34->M00_AXI_rlast.bind(*p_34_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_34_M00_AXI_rlast);
        xsim_sc_channel<0, bool > *p_34_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_34->M00_AXI_rvalid.bind(*p_34_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_34_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_34_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_34->M00_AXI_rready.bind(*p_34_M00_AXI_rready);
        p_34_M00_AXI_rready->set_sv_netview_offsetfromdp(9717984);
        sc_inst_35 = new bd_d216_interconnect_PLRAM_MEM05_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.interconnect.interconnect_plram_mem05");
        sc_inst_35->xsim_set_dbg_index(2475);
        xsim_sc_channel<0, bool > *p_35_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_35->aclk.bind(*p_35_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_35_aclk);
        xsim_sc_channel<0, bool > *p_35_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_35->aresetn.bind(*p_35_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_35_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_35_S00_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_35->S00_AXI_awid.bind(*p_35_S00_AXI_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_awid);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_35_S00_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_35->S00_AXI_awaddr.bind(*p_35_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_35_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_35->S00_AXI_awlen.bind(*p_35_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_35_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_35->S00_AXI_awsize.bind(*p_35_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_35_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_35->S00_AXI_awburst.bind(*p_35_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_35_S00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_35->S00_AXI_awlock.bind(*p_35_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->S00_AXI_awcache.bind(*p_35_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_35_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_35->S00_AXI_awprot.bind(*p_35_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->S00_AXI_awqos.bind(*p_35_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_awqos);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_35_S00_AXI_awuser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_35->S00_AXI_awuser.bind(*p_35_S00_AXI_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_awuser);
        xsim_sc_channel<0, bool > *p_35_S00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_35->S00_AXI_awvalid.bind(*p_35_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_35_S00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_35->S00_AXI_awready.bind(*p_35_S00_AXI_awready);
        p_35_S00_AXI_awready->set_sv_netview_offsetfromdp(9718816);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_35_S00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_35->S00_AXI_wdata.bind(*p_35_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_35_S00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_35->S00_AXI_wstrb.bind(*p_35_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_35_S00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_35->S00_AXI_wlast.bind(*p_35_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_wlast);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_35_S00_AXI_wuser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_35->S00_AXI_wuser.bind(*p_35_S00_AXI_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_wuser);
        xsim_sc_channel<0, bool > *p_35_S00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_35->S00_AXI_wvalid.bind(*p_35_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_35_S00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_35->S00_AXI_wready.bind(*p_35_S00_AXI_wready);
        p_35_S00_AXI_wready->set_sv_netview_offsetfromdp(9719152);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_35_S00_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_35->S00_AXI_bid.bind(*p_35_S00_AXI_bid);
        p_35_S00_AXI_bid->set_sv_netview_offsetfromdp(9719208);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_35_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_35->S00_AXI_bresp.bind(*p_35_S00_AXI_bresp);
        p_35_S00_AXI_bresp->set_sv_netview_offsetfromdp(9719264);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_35_S00_AXI_buser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_35->S00_AXI_buser.bind(*p_35_S00_AXI_buser);
        p_35_S00_AXI_buser->set_sv_netview_offsetfromdp(9719320);
        xsim_sc_channel<0, bool > *p_35_S00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_35->S00_AXI_bvalid.bind(*p_35_S00_AXI_bvalid);
        p_35_S00_AXI_bvalid->set_sv_netview_offsetfromdp(9719376);
        xsim_sc_channel<0, bool > *p_35_S00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_35->S00_AXI_bready.bind(*p_35_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_35_S00_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_35->S00_AXI_arid.bind(*p_35_S00_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_arid);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_35_S00_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_35->S00_AXI_araddr.bind(*p_35_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_35_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_35->S00_AXI_arlen.bind(*p_35_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_35_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_35->S00_AXI_arsize.bind(*p_35_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_35_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_35->S00_AXI_arburst.bind(*p_35_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_35_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_35->S00_AXI_arlock.bind(*p_35_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->S00_AXI_arcache.bind(*p_35_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_35_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_35->S00_AXI_arprot.bind(*p_35_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->S00_AXI_arqos.bind(*p_35_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_arqos);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_35_S00_AXI_aruser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_35->S00_AXI_aruser.bind(*p_35_S00_AXI_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_aruser);
        xsim_sc_channel<0, bool > *p_35_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_35->S00_AXI_arvalid.bind(*p_35_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_35_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_35->S00_AXI_arready.bind(*p_35_S00_AXI_arready);
        p_35_S00_AXI_arready->set_sv_netview_offsetfromdp(9720104);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_35_S00_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_35->S00_AXI_rid.bind(*p_35_S00_AXI_rid);
        p_35_S00_AXI_rid->set_sv_netview_offsetfromdp(9720160);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_35_S00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_35->S00_AXI_rdata.bind(*p_35_S00_AXI_rdata);
        p_35_S00_AXI_rdata->set_sv_netview_offsetfromdp(9720216);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_35_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_35->S00_AXI_rresp.bind(*p_35_S00_AXI_rresp);
        p_35_S00_AXI_rresp->set_sv_netview_offsetfromdp(9720272);
        xsim_sc_channel<0, bool > *p_35_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_35->S00_AXI_rlast.bind(*p_35_S00_AXI_rlast);
        p_35_S00_AXI_rlast->set_sv_netview_offsetfromdp(9720328);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_35_S00_AXI_ruser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_35->S00_AXI_ruser.bind(*p_35_S00_AXI_ruser);
        p_35_S00_AXI_ruser->set_sv_netview_offsetfromdp(9720384);
        xsim_sc_channel<0, bool > *p_35_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_35->S00_AXI_rvalid.bind(*p_35_S00_AXI_rvalid);
        p_35_S00_AXI_rvalid->set_sv_netview_offsetfromdp(9720440);
        xsim_sc_channel<0, bool > *p_35_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_35->S00_AXI_rready.bind(*p_35_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_rready);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_35_M00_AXI_awaddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_35->M00_AXI_awaddr.bind(*p_35_M00_AXI_awaddr);
        p_35_M00_AXI_awaddr->set_sv_netview_offsetfromdp(9720552);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_35_M00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_35->M00_AXI_awlen.bind(*p_35_M00_AXI_awlen);
        p_35_M00_AXI_awlen->set_sv_netview_offsetfromdp(9720608);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_35_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_35->M00_AXI_awsize.bind(*p_35_M00_AXI_awsize);
        p_35_M00_AXI_awsize->set_sv_netview_offsetfromdp(9720664);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_35_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_35->M00_AXI_awburst.bind(*p_35_M00_AXI_awburst);
        p_35_M00_AXI_awburst->set_sv_netview_offsetfromdp(9720720);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_35_M00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_35->M00_AXI_awlock.bind(*p_35_M00_AXI_awlock);
        p_35_M00_AXI_awlock->set_sv_netview_offsetfromdp(9720776);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->M00_AXI_awcache.bind(*p_35_M00_AXI_awcache);
        p_35_M00_AXI_awcache->set_sv_netview_offsetfromdp(9720832);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_35_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_35->M00_AXI_awprot.bind(*p_35_M00_AXI_awprot);
        p_35_M00_AXI_awprot->set_sv_netview_offsetfromdp(9720888);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->M00_AXI_awqos.bind(*p_35_M00_AXI_awqos);
        p_35_M00_AXI_awqos->set_sv_netview_offsetfromdp(9720944);
        xsim_sc_channel<0, bool > *p_35_M00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_35->M00_AXI_awvalid.bind(*p_35_M00_AXI_awvalid);
        p_35_M00_AXI_awvalid->set_sv_netview_offsetfromdp(9721000);
        xsim_sc_channel<0, bool > *p_35_M00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_35->M00_AXI_awready.bind(*p_35_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M00_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_35_M00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_35->M00_AXI_wdata.bind(*p_35_M00_AXI_wdata);
        p_35_M00_AXI_wdata->set_sv_netview_offsetfromdp(9721112);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_35_M00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_35->M00_AXI_wstrb.bind(*p_35_M00_AXI_wstrb);
        p_35_M00_AXI_wstrb->set_sv_netview_offsetfromdp(9721168);
        xsim_sc_channel<0, bool > *p_35_M00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_35->M00_AXI_wlast.bind(*p_35_M00_AXI_wlast);
        p_35_M00_AXI_wlast->set_sv_netview_offsetfromdp(9721224);
        xsim_sc_channel<0, bool > *p_35_M00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_35->M00_AXI_wvalid.bind(*p_35_M00_AXI_wvalid);
        p_35_M00_AXI_wvalid->set_sv_netview_offsetfromdp(9721280);
        xsim_sc_channel<0, bool > *p_35_M00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_35->M00_AXI_wready.bind(*p_35_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M00_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_35_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_35->M00_AXI_bresp.bind(*p_35_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M00_AXI_bresp);
        xsim_sc_channel<0, bool > *p_35_M00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_35->M00_AXI_bvalid.bind(*p_35_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M00_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_35_M00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_35->M00_AXI_bready.bind(*p_35_M00_AXI_bready);
        p_35_M00_AXI_bready->set_sv_netview_offsetfromdp(9721504);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_35_M00_AXI_araddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_35->M00_AXI_araddr.bind(*p_35_M00_AXI_araddr);
        p_35_M00_AXI_araddr->set_sv_netview_offsetfromdp(9721560);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_35_M00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_35->M00_AXI_arlen.bind(*p_35_M00_AXI_arlen);
        p_35_M00_AXI_arlen->set_sv_netview_offsetfromdp(9721616);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_35_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_35->M00_AXI_arsize.bind(*p_35_M00_AXI_arsize);
        p_35_M00_AXI_arsize->set_sv_netview_offsetfromdp(9721672);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_35_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_35->M00_AXI_arburst.bind(*p_35_M00_AXI_arburst);
        p_35_M00_AXI_arburst->set_sv_netview_offsetfromdp(9721728);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_35_M00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_35->M00_AXI_arlock.bind(*p_35_M00_AXI_arlock);
        p_35_M00_AXI_arlock->set_sv_netview_offsetfromdp(9721784);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->M00_AXI_arcache.bind(*p_35_M00_AXI_arcache);
        p_35_M00_AXI_arcache->set_sv_netview_offsetfromdp(9721840);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_35_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_35->M00_AXI_arprot.bind(*p_35_M00_AXI_arprot);
        p_35_M00_AXI_arprot->set_sv_netview_offsetfromdp(9721896);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->M00_AXI_arqos.bind(*p_35_M00_AXI_arqos);
        p_35_M00_AXI_arqos->set_sv_netview_offsetfromdp(9721952);
        xsim_sc_channel<0, bool > *p_35_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_35->M00_AXI_arvalid.bind(*p_35_M00_AXI_arvalid);
        p_35_M00_AXI_arvalid->set_sv_netview_offsetfromdp(9722008);
        xsim_sc_channel<0, bool > *p_35_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_35->M00_AXI_arready.bind(*p_35_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M00_AXI_arready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_35_M00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_35->M00_AXI_rdata.bind(*p_35_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_35_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_35->M00_AXI_rresp.bind(*p_35_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_35_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_35->M00_AXI_rlast.bind(*p_35_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M00_AXI_rlast);
        xsim_sc_channel<0, bool > *p_35_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_35->M00_AXI_rvalid.bind(*p_35_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_35_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_35->M00_AXI_rready.bind(*p_35_M00_AXI_rready);
        p_35_M00_AXI_rready->set_sv_netview_offsetfromdp(9722344);
        sc_inst_36 = new bd_d216_interconnect_S00_AXI_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.interconnect.interconnect_s00_axi");
        sc_inst_36->xsim_set_dbg_index(2476);
        xsim_sc_channel<0, bool > *p_36_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_36->aclk.bind(*p_36_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_36_aclk);
        xsim_sc_channel<0, bool > *p_36_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_36->aresetn.bind(*p_36_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_36_aresetn);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_36_S00_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_36->S00_AXI_awaddr.bind(*p_36_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_36_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_36->S00_AXI_awlen.bind(*p_36_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_36_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_36->S00_AXI_awsize.bind(*p_36_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_36_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_36->S00_AXI_awburst.bind(*p_36_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_36_S00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_36->S00_AXI_awlock.bind(*p_36_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_36_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_36->S00_AXI_awcache.bind(*p_36_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_36_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_36->S00_AXI_awprot.bind(*p_36_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_36_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_36->S00_AXI_awqos.bind(*p_36_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_awqos);
        xsim_sc_channel<0, bool > *p_36_S00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_36->S00_AXI_awvalid.bind(*p_36_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_36_S00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_36->S00_AXI_awready.bind(*p_36_S00_AXI_awready);
        p_36_S00_AXI_awready->set_sv_netview_offsetfromdp(9723064);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_36_S00_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_36->S00_AXI_wdata.bind(*p_36_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_36_S00_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_36->S00_AXI_wstrb.bind(*p_36_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_36_S00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_36->S00_AXI_wlast.bind(*p_36_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_wlast);
        xsim_sc_channel<0, bool > *p_36_S00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_36->S00_AXI_wvalid.bind(*p_36_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_36_S00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_36->S00_AXI_wready.bind(*p_36_S00_AXI_wready);
        p_36_S00_AXI_wready->set_sv_netview_offsetfromdp(9723344);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_36_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_36->S00_AXI_bresp.bind(*p_36_S00_AXI_bresp);
        p_36_S00_AXI_bresp->set_sv_netview_offsetfromdp(9723400);
        xsim_sc_channel<0, bool > *p_36_S00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_36->S00_AXI_bvalid.bind(*p_36_S00_AXI_bvalid);
        p_36_S00_AXI_bvalid->set_sv_netview_offsetfromdp(9723456);
        xsim_sc_channel<0, bool > *p_36_S00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_36->S00_AXI_bready.bind(*p_36_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_bready);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_36_S00_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_36->S00_AXI_araddr.bind(*p_36_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_36_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_36->S00_AXI_arlen.bind(*p_36_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_36_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_36->S00_AXI_arsize.bind(*p_36_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_36_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_36->S00_AXI_arburst.bind(*p_36_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_36_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_36->S00_AXI_arlock.bind(*p_36_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_36_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_36->S00_AXI_arcache.bind(*p_36_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_36_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_36->S00_AXI_arprot.bind(*p_36_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_36_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_36->S00_AXI_arqos.bind(*p_36_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_arqos);
        xsim_sc_channel<0, bool > *p_36_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_36->S00_AXI_arvalid.bind(*p_36_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_36_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_36->S00_AXI_arready.bind(*p_36_S00_AXI_arready);
        p_36_S00_AXI_arready->set_sv_netview_offsetfromdp(9724072);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_36_S00_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_36->S00_AXI_rdata.bind(*p_36_S00_AXI_rdata);
        p_36_S00_AXI_rdata->set_sv_netview_offsetfromdp(9724128);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_36_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_36->S00_AXI_rresp.bind(*p_36_S00_AXI_rresp);
        p_36_S00_AXI_rresp->set_sv_netview_offsetfromdp(9724184);
        xsim_sc_channel<0, bool > *p_36_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_36->S00_AXI_rlast.bind(*p_36_S00_AXI_rlast);
        p_36_S00_AXI_rlast->set_sv_netview_offsetfromdp(9724240);
        xsim_sc_channel<0, bool > *p_36_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_36->S00_AXI_rvalid.bind(*p_36_S00_AXI_rvalid);
        p_36_S00_AXI_rvalid->set_sv_netview_offsetfromdp(9724296);
        xsim_sc_channel<0, bool > *p_36_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_36->S00_AXI_rready.bind(*p_36_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_rready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_36_M00_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_36->M00_AXI_awid.bind(*p_36_M00_AXI_awid);
        p_36_M00_AXI_awid->set_sv_netview_offsetfromdp(9724408);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_36_M00_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_36->M00_AXI_awaddr.bind(*p_36_M00_AXI_awaddr);
        p_36_M00_AXI_awaddr->set_sv_netview_offsetfromdp(9724464);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_36_M00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_36->M00_AXI_awlen.bind(*p_36_M00_AXI_awlen);
        p_36_M00_AXI_awlen->set_sv_netview_offsetfromdp(9724520);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_36_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_36->M00_AXI_awsize.bind(*p_36_M00_AXI_awsize);
        p_36_M00_AXI_awsize->set_sv_netview_offsetfromdp(9724576);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_36_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_36->M00_AXI_awburst.bind(*p_36_M00_AXI_awburst);
        p_36_M00_AXI_awburst->set_sv_netview_offsetfromdp(9724632);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_36_M00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_36->M00_AXI_awlock.bind(*p_36_M00_AXI_awlock);
        p_36_M00_AXI_awlock->set_sv_netview_offsetfromdp(9724688);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_36_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_36->M00_AXI_awcache.bind(*p_36_M00_AXI_awcache);
        p_36_M00_AXI_awcache->set_sv_netview_offsetfromdp(9724744);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_36_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_36->M00_AXI_awprot.bind(*p_36_M00_AXI_awprot);
        p_36_M00_AXI_awprot->set_sv_netview_offsetfromdp(9724800);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_36_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_36->M00_AXI_awqos.bind(*p_36_M00_AXI_awqos);
        p_36_M00_AXI_awqos->set_sv_netview_offsetfromdp(9724856);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_36_M00_AXI_awuser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_36->M00_AXI_awuser.bind(*p_36_M00_AXI_awuser);
        p_36_M00_AXI_awuser->set_sv_netview_offsetfromdp(9724912);
        xsim_sc_channel<0, bool > *p_36_M00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_36->M00_AXI_awvalid.bind(*p_36_M00_AXI_awvalid);
        p_36_M00_AXI_awvalid->set_sv_netview_offsetfromdp(9724968);
        xsim_sc_channel<0, bool > *p_36_M00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_36->M00_AXI_awready.bind(*p_36_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M00_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_36_M00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_36->M00_AXI_wdata.bind(*p_36_M00_AXI_wdata);
        p_36_M00_AXI_wdata->set_sv_netview_offsetfromdp(9725080);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_36_M00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_36->M00_AXI_wstrb.bind(*p_36_M00_AXI_wstrb);
        p_36_M00_AXI_wstrb->set_sv_netview_offsetfromdp(9725136);
        xsim_sc_channel<0, bool > *p_36_M00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_36->M00_AXI_wlast.bind(*p_36_M00_AXI_wlast);
        p_36_M00_AXI_wlast->set_sv_netview_offsetfromdp(9725192);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_36_M00_AXI_wuser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_36->M00_AXI_wuser.bind(*p_36_M00_AXI_wuser);
        p_36_M00_AXI_wuser->set_sv_netview_offsetfromdp(9725248);
        xsim_sc_channel<0, bool > *p_36_M00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_36->M00_AXI_wvalid.bind(*p_36_M00_AXI_wvalid);
        p_36_M00_AXI_wvalid->set_sv_netview_offsetfromdp(9725304);
        xsim_sc_channel<0, bool > *p_36_M00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_36->M00_AXI_wready.bind(*p_36_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M00_AXI_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_36_M00_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_36->M00_AXI_bid.bind(*p_36_M00_AXI_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M00_AXI_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_36_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_36->M00_AXI_bresp.bind(*p_36_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M00_AXI_bresp);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_36_M00_AXI_buser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_36->M00_AXI_buser.bind(*p_36_M00_AXI_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M00_AXI_buser);
        xsim_sc_channel<0, bool > *p_36_M00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_36->M00_AXI_bvalid.bind(*p_36_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M00_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_36_M00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_36->M00_AXI_bready.bind(*p_36_M00_AXI_bready);
        p_36_M00_AXI_bready->set_sv_netview_offsetfromdp(9725640);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_36_M00_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_36->M00_AXI_arid.bind(*p_36_M00_AXI_arid);
        p_36_M00_AXI_arid->set_sv_netview_offsetfromdp(9725696);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_36_M00_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_36->M00_AXI_araddr.bind(*p_36_M00_AXI_araddr);
        p_36_M00_AXI_araddr->set_sv_netview_offsetfromdp(9725752);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_36_M00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_36->M00_AXI_arlen.bind(*p_36_M00_AXI_arlen);
        p_36_M00_AXI_arlen->set_sv_netview_offsetfromdp(9725808);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_36_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_36->M00_AXI_arsize.bind(*p_36_M00_AXI_arsize);
        p_36_M00_AXI_arsize->set_sv_netview_offsetfromdp(9725864);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_36_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_36->M00_AXI_arburst.bind(*p_36_M00_AXI_arburst);
        p_36_M00_AXI_arburst->set_sv_netview_offsetfromdp(9725920);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_36_M00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_36->M00_AXI_arlock.bind(*p_36_M00_AXI_arlock);
        p_36_M00_AXI_arlock->set_sv_netview_offsetfromdp(9725976);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_36_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_36->M00_AXI_arcache.bind(*p_36_M00_AXI_arcache);
        p_36_M00_AXI_arcache->set_sv_netview_offsetfromdp(9726032);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_36_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_36->M00_AXI_arprot.bind(*p_36_M00_AXI_arprot);
        p_36_M00_AXI_arprot->set_sv_netview_offsetfromdp(9726088);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_36_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_36->M00_AXI_arqos.bind(*p_36_M00_AXI_arqos);
        p_36_M00_AXI_arqos->set_sv_netview_offsetfromdp(9726144);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_36_M00_AXI_aruser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_36->M00_AXI_aruser.bind(*p_36_M00_AXI_aruser);
        p_36_M00_AXI_aruser->set_sv_netview_offsetfromdp(9726200);
        xsim_sc_channel<0, bool > *p_36_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_36->M00_AXI_arvalid.bind(*p_36_M00_AXI_arvalid);
        p_36_M00_AXI_arvalid->set_sv_netview_offsetfromdp(9726256);
        xsim_sc_channel<0, bool > *p_36_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_36->M00_AXI_arready.bind(*p_36_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M00_AXI_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_36_M00_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_36->M00_AXI_rid.bind(*p_36_M00_AXI_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M00_AXI_rid);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_36_M00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_36->M00_AXI_rdata.bind(*p_36_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_36_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_36->M00_AXI_rresp.bind(*p_36_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_36_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_36->M00_AXI_rlast.bind(*p_36_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M00_AXI_rlast);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_36_M00_AXI_ruser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_36->M00_AXI_ruser.bind(*p_36_M00_AXI_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M00_AXI_ruser);
        xsim_sc_channel<0, bool > *p_36_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_36->M00_AXI_rvalid.bind(*p_36_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_36_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_36->M00_AXI_rready.bind(*p_36_M00_AXI_rready);
        p_36_M00_AXI_rready->set_sv_netview_offsetfromdp(9726704);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_36_M01_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_36->M01_AXI_awid.bind(*p_36_M01_AXI_awid);
        p_36_M01_AXI_awid->set_sv_netview_offsetfromdp(9726760);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_36_M01_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_36->M01_AXI_awaddr.bind(*p_36_M01_AXI_awaddr);
        p_36_M01_AXI_awaddr->set_sv_netview_offsetfromdp(9726816);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_36_M01_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_36->M01_AXI_awlen.bind(*p_36_M01_AXI_awlen);
        p_36_M01_AXI_awlen->set_sv_netview_offsetfromdp(9726872);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_36_M01_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_36->M01_AXI_awsize.bind(*p_36_M01_AXI_awsize);
        p_36_M01_AXI_awsize->set_sv_netview_offsetfromdp(9726928);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_36_M01_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_36->M01_AXI_awburst.bind(*p_36_M01_AXI_awburst);
        p_36_M01_AXI_awburst->set_sv_netview_offsetfromdp(9726984);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_36_M01_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_36->M01_AXI_awlock.bind(*p_36_M01_AXI_awlock);
        p_36_M01_AXI_awlock->set_sv_netview_offsetfromdp(9727040);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_36_M01_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_36->M01_AXI_awcache.bind(*p_36_M01_AXI_awcache);
        p_36_M01_AXI_awcache->set_sv_netview_offsetfromdp(9727096);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_36_M01_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_36->M01_AXI_awprot.bind(*p_36_M01_AXI_awprot);
        p_36_M01_AXI_awprot->set_sv_netview_offsetfromdp(9727152);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_36_M01_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_36->M01_AXI_awqos.bind(*p_36_M01_AXI_awqos);
        p_36_M01_AXI_awqos->set_sv_netview_offsetfromdp(9727208);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_36_M01_AXI_awuser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_36->M01_AXI_awuser.bind(*p_36_M01_AXI_awuser);
        p_36_M01_AXI_awuser->set_sv_netview_offsetfromdp(9727264);
        xsim_sc_channel<0, bool > *p_36_M01_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_36->M01_AXI_awvalid.bind(*p_36_M01_AXI_awvalid);
        p_36_M01_AXI_awvalid->set_sv_netview_offsetfromdp(9727320);
        xsim_sc_channel<0, bool > *p_36_M01_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_36->M01_AXI_awready.bind(*p_36_M01_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M01_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_36_M01_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_36->M01_AXI_wdata.bind(*p_36_M01_AXI_wdata);
        p_36_M01_AXI_wdata->set_sv_netview_offsetfromdp(9727432);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_36_M01_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_36->M01_AXI_wstrb.bind(*p_36_M01_AXI_wstrb);
        p_36_M01_AXI_wstrb->set_sv_netview_offsetfromdp(9727488);
        xsim_sc_channel<0, bool > *p_36_M01_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_36->M01_AXI_wlast.bind(*p_36_M01_AXI_wlast);
        p_36_M01_AXI_wlast->set_sv_netview_offsetfromdp(9727544);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_36_M01_AXI_wuser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_36->M01_AXI_wuser.bind(*p_36_M01_AXI_wuser);
        p_36_M01_AXI_wuser->set_sv_netview_offsetfromdp(9727600);
        xsim_sc_channel<0, bool > *p_36_M01_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_36->M01_AXI_wvalid.bind(*p_36_M01_AXI_wvalid);
        p_36_M01_AXI_wvalid->set_sv_netview_offsetfromdp(9727656);
        xsim_sc_channel<0, bool > *p_36_M01_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_36->M01_AXI_wready.bind(*p_36_M01_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M01_AXI_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_36_M01_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_36->M01_AXI_bid.bind(*p_36_M01_AXI_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M01_AXI_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_36_M01_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_36->M01_AXI_bresp.bind(*p_36_M01_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M01_AXI_bresp);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_36_M01_AXI_buser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_36->M01_AXI_buser.bind(*p_36_M01_AXI_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M01_AXI_buser);
        xsim_sc_channel<0, bool > *p_36_M01_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_36->M01_AXI_bvalid.bind(*p_36_M01_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M01_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_36_M01_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_36->M01_AXI_bready.bind(*p_36_M01_AXI_bready);
        p_36_M01_AXI_bready->set_sv_netview_offsetfromdp(9727992);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_36_M01_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_36->M01_AXI_arid.bind(*p_36_M01_AXI_arid);
        p_36_M01_AXI_arid->set_sv_netview_offsetfromdp(9728048);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_36_M01_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_36->M01_AXI_araddr.bind(*p_36_M01_AXI_araddr);
        p_36_M01_AXI_araddr->set_sv_netview_offsetfromdp(9728104);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_36_M01_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_36->M01_AXI_arlen.bind(*p_36_M01_AXI_arlen);
        p_36_M01_AXI_arlen->set_sv_netview_offsetfromdp(9728160);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_36_M01_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_36->M01_AXI_arsize.bind(*p_36_M01_AXI_arsize);
        p_36_M01_AXI_arsize->set_sv_netview_offsetfromdp(9728216);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_36_M01_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_36->M01_AXI_arburst.bind(*p_36_M01_AXI_arburst);
        p_36_M01_AXI_arburst->set_sv_netview_offsetfromdp(9728272);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_36_M01_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_36->M01_AXI_arlock.bind(*p_36_M01_AXI_arlock);
        p_36_M01_AXI_arlock->set_sv_netview_offsetfromdp(9728328);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_36_M01_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_36->M01_AXI_arcache.bind(*p_36_M01_AXI_arcache);
        p_36_M01_AXI_arcache->set_sv_netview_offsetfromdp(9728384);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_36_M01_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_36->M01_AXI_arprot.bind(*p_36_M01_AXI_arprot);
        p_36_M01_AXI_arprot->set_sv_netview_offsetfromdp(9728440);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_36_M01_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_36->M01_AXI_arqos.bind(*p_36_M01_AXI_arqos);
        p_36_M01_AXI_arqos->set_sv_netview_offsetfromdp(9728496);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_36_M01_AXI_aruser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_36->M01_AXI_aruser.bind(*p_36_M01_AXI_aruser);
        p_36_M01_AXI_aruser->set_sv_netview_offsetfromdp(9728552);
        xsim_sc_channel<0, bool > *p_36_M01_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_36->M01_AXI_arvalid.bind(*p_36_M01_AXI_arvalid);
        p_36_M01_AXI_arvalid->set_sv_netview_offsetfromdp(9728608);
        xsim_sc_channel<0, bool > *p_36_M01_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_36->M01_AXI_arready.bind(*p_36_M01_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M01_AXI_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_36_M01_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_36->M01_AXI_rid.bind(*p_36_M01_AXI_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M01_AXI_rid);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_36_M01_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_36->M01_AXI_rdata.bind(*p_36_M01_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M01_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_36_M01_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_36->M01_AXI_rresp.bind(*p_36_M01_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M01_AXI_rresp);
        xsim_sc_channel<0, bool > *p_36_M01_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_36->M01_AXI_rlast.bind(*p_36_M01_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M01_AXI_rlast);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_36_M01_AXI_ruser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_36->M01_AXI_ruser.bind(*p_36_M01_AXI_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M01_AXI_ruser);
        xsim_sc_channel<0, bool > *p_36_M01_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_36->M01_AXI_rvalid.bind(*p_36_M01_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M01_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_36_M01_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_36->M01_AXI_rready.bind(*p_36_M01_AXI_rready);
        p_36_M01_AXI_rready->set_sv_netview_offsetfromdp(9729056);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_36_M02_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_36->M02_AXI_awid.bind(*p_36_M02_AXI_awid);
        p_36_M02_AXI_awid->set_sv_netview_offsetfromdp(9729112);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_36_M02_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_36->M02_AXI_awaddr.bind(*p_36_M02_AXI_awaddr);
        p_36_M02_AXI_awaddr->set_sv_netview_offsetfromdp(9729168);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_36_M02_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_36->M02_AXI_awlen.bind(*p_36_M02_AXI_awlen);
        p_36_M02_AXI_awlen->set_sv_netview_offsetfromdp(9729224);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_36_M02_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_36->M02_AXI_awsize.bind(*p_36_M02_AXI_awsize);
        p_36_M02_AXI_awsize->set_sv_netview_offsetfromdp(9729280);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_36_M02_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_36->M02_AXI_awburst.bind(*p_36_M02_AXI_awburst);
        p_36_M02_AXI_awburst->set_sv_netview_offsetfromdp(9729336);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_36_M02_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_36->M02_AXI_awlock.bind(*p_36_M02_AXI_awlock);
        p_36_M02_AXI_awlock->set_sv_netview_offsetfromdp(9729392);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_36_M02_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_36->M02_AXI_awcache.bind(*p_36_M02_AXI_awcache);
        p_36_M02_AXI_awcache->set_sv_netview_offsetfromdp(9729448);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_36_M02_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_36->M02_AXI_awprot.bind(*p_36_M02_AXI_awprot);
        p_36_M02_AXI_awprot->set_sv_netview_offsetfromdp(9729504);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_36_M02_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_36->M02_AXI_awqos.bind(*p_36_M02_AXI_awqos);
        p_36_M02_AXI_awqos->set_sv_netview_offsetfromdp(9729560);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_36_M02_AXI_awuser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_36->M02_AXI_awuser.bind(*p_36_M02_AXI_awuser);
        p_36_M02_AXI_awuser->set_sv_netview_offsetfromdp(9729616);
        xsim_sc_channel<0, bool > *p_36_M02_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_36->M02_AXI_awvalid.bind(*p_36_M02_AXI_awvalid);
        p_36_M02_AXI_awvalid->set_sv_netview_offsetfromdp(9729672);
        xsim_sc_channel<0, bool > *p_36_M02_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_36->M02_AXI_awready.bind(*p_36_M02_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M02_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_36_M02_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_36->M02_AXI_wdata.bind(*p_36_M02_AXI_wdata);
        p_36_M02_AXI_wdata->set_sv_netview_offsetfromdp(9729784);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_36_M02_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_36->M02_AXI_wstrb.bind(*p_36_M02_AXI_wstrb);
        p_36_M02_AXI_wstrb->set_sv_netview_offsetfromdp(9729840);
        xsim_sc_channel<0, bool > *p_36_M02_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_36->M02_AXI_wlast.bind(*p_36_M02_AXI_wlast);
        p_36_M02_AXI_wlast->set_sv_netview_offsetfromdp(9729896);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_36_M02_AXI_wuser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_36->M02_AXI_wuser.bind(*p_36_M02_AXI_wuser);
        p_36_M02_AXI_wuser->set_sv_netview_offsetfromdp(9729952);
        xsim_sc_channel<0, bool > *p_36_M02_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_36->M02_AXI_wvalid.bind(*p_36_M02_AXI_wvalid);
        p_36_M02_AXI_wvalid->set_sv_netview_offsetfromdp(9730008);
        xsim_sc_channel<0, bool > *p_36_M02_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_36->M02_AXI_wready.bind(*p_36_M02_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M02_AXI_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_36_M02_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_36->M02_AXI_bid.bind(*p_36_M02_AXI_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M02_AXI_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_36_M02_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_36->M02_AXI_bresp.bind(*p_36_M02_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M02_AXI_bresp);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_36_M02_AXI_buser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_36->M02_AXI_buser.bind(*p_36_M02_AXI_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M02_AXI_buser);
        xsim_sc_channel<0, bool > *p_36_M02_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_36->M02_AXI_bvalid.bind(*p_36_M02_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M02_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_36_M02_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_36->M02_AXI_bready.bind(*p_36_M02_AXI_bready);
        p_36_M02_AXI_bready->set_sv_netview_offsetfromdp(9730344);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_36_M02_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_36->M02_AXI_arid.bind(*p_36_M02_AXI_arid);
        p_36_M02_AXI_arid->set_sv_netview_offsetfromdp(9730400);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_36_M02_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_36->M02_AXI_araddr.bind(*p_36_M02_AXI_araddr);
        p_36_M02_AXI_araddr->set_sv_netview_offsetfromdp(9730456);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_36_M02_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_36->M02_AXI_arlen.bind(*p_36_M02_AXI_arlen);
        p_36_M02_AXI_arlen->set_sv_netview_offsetfromdp(9730512);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_36_M02_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_36->M02_AXI_arsize.bind(*p_36_M02_AXI_arsize);
        p_36_M02_AXI_arsize->set_sv_netview_offsetfromdp(9730568);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_36_M02_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_36->M02_AXI_arburst.bind(*p_36_M02_AXI_arburst);
        p_36_M02_AXI_arburst->set_sv_netview_offsetfromdp(9730624);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_36_M02_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_36->M02_AXI_arlock.bind(*p_36_M02_AXI_arlock);
        p_36_M02_AXI_arlock->set_sv_netview_offsetfromdp(9730680);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_36_M02_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_36->M02_AXI_arcache.bind(*p_36_M02_AXI_arcache);
        p_36_M02_AXI_arcache->set_sv_netview_offsetfromdp(9730736);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_36_M02_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_36->M02_AXI_arprot.bind(*p_36_M02_AXI_arprot);
        p_36_M02_AXI_arprot->set_sv_netview_offsetfromdp(9730792);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_36_M02_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_36->M02_AXI_arqos.bind(*p_36_M02_AXI_arqos);
        p_36_M02_AXI_arqos->set_sv_netview_offsetfromdp(9730848);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_36_M02_AXI_aruser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_36->M02_AXI_aruser.bind(*p_36_M02_AXI_aruser);
        p_36_M02_AXI_aruser->set_sv_netview_offsetfromdp(9730904);
        xsim_sc_channel<0, bool > *p_36_M02_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_36->M02_AXI_arvalid.bind(*p_36_M02_AXI_arvalid);
        p_36_M02_AXI_arvalid->set_sv_netview_offsetfromdp(9730960);
        xsim_sc_channel<0, bool > *p_36_M02_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_36->M02_AXI_arready.bind(*p_36_M02_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M02_AXI_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_36_M02_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_36->M02_AXI_rid.bind(*p_36_M02_AXI_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M02_AXI_rid);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_36_M02_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_36->M02_AXI_rdata.bind(*p_36_M02_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M02_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_36_M02_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_36->M02_AXI_rresp.bind(*p_36_M02_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M02_AXI_rresp);
        xsim_sc_channel<0, bool > *p_36_M02_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_36->M02_AXI_rlast.bind(*p_36_M02_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M02_AXI_rlast);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_36_M02_AXI_ruser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_36->M02_AXI_ruser.bind(*p_36_M02_AXI_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M02_AXI_ruser);
        xsim_sc_channel<0, bool > *p_36_M02_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_36->M02_AXI_rvalid.bind(*p_36_M02_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M02_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_36_M02_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_36->M02_AXI_rready.bind(*p_36_M02_AXI_rready);
        p_36_M02_AXI_rready->set_sv_netview_offsetfromdp(9731408);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_36_M03_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_36->M03_AXI_awid.bind(*p_36_M03_AXI_awid);
        p_36_M03_AXI_awid->set_sv_netview_offsetfromdp(9731464);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_36_M03_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_36->M03_AXI_awaddr.bind(*p_36_M03_AXI_awaddr);
        p_36_M03_AXI_awaddr->set_sv_netview_offsetfromdp(9731520);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_36_M03_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_36->M03_AXI_awlen.bind(*p_36_M03_AXI_awlen);
        p_36_M03_AXI_awlen->set_sv_netview_offsetfromdp(9731576);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_36_M03_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_36->M03_AXI_awsize.bind(*p_36_M03_AXI_awsize);
        p_36_M03_AXI_awsize->set_sv_netview_offsetfromdp(9731632);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_36_M03_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_36->M03_AXI_awburst.bind(*p_36_M03_AXI_awburst);
        p_36_M03_AXI_awburst->set_sv_netview_offsetfromdp(9731688);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_36_M03_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_36->M03_AXI_awlock.bind(*p_36_M03_AXI_awlock);
        p_36_M03_AXI_awlock->set_sv_netview_offsetfromdp(9731744);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_36_M03_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_36->M03_AXI_awcache.bind(*p_36_M03_AXI_awcache);
        p_36_M03_AXI_awcache->set_sv_netview_offsetfromdp(9731800);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_36_M03_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_36->M03_AXI_awprot.bind(*p_36_M03_AXI_awprot);
        p_36_M03_AXI_awprot->set_sv_netview_offsetfromdp(9731856);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_36_M03_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_36->M03_AXI_awqos.bind(*p_36_M03_AXI_awqos);
        p_36_M03_AXI_awqos->set_sv_netview_offsetfromdp(9731912);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_36_M03_AXI_awuser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_36->M03_AXI_awuser.bind(*p_36_M03_AXI_awuser);
        p_36_M03_AXI_awuser->set_sv_netview_offsetfromdp(9731968);
        xsim_sc_channel<0, bool > *p_36_M03_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_36->M03_AXI_awvalid.bind(*p_36_M03_AXI_awvalid);
        p_36_M03_AXI_awvalid->set_sv_netview_offsetfromdp(9732024);
        xsim_sc_channel<0, bool > *p_36_M03_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_36->M03_AXI_awready.bind(*p_36_M03_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M03_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_36_M03_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_36->M03_AXI_wdata.bind(*p_36_M03_AXI_wdata);
        p_36_M03_AXI_wdata->set_sv_netview_offsetfromdp(9732136);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_36_M03_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_36->M03_AXI_wstrb.bind(*p_36_M03_AXI_wstrb);
        p_36_M03_AXI_wstrb->set_sv_netview_offsetfromdp(9732192);
        xsim_sc_channel<0, bool > *p_36_M03_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_36->M03_AXI_wlast.bind(*p_36_M03_AXI_wlast);
        p_36_M03_AXI_wlast->set_sv_netview_offsetfromdp(9732248);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_36_M03_AXI_wuser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_36->M03_AXI_wuser.bind(*p_36_M03_AXI_wuser);
        p_36_M03_AXI_wuser->set_sv_netview_offsetfromdp(9732304);
        xsim_sc_channel<0, bool > *p_36_M03_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_36->M03_AXI_wvalid.bind(*p_36_M03_AXI_wvalid);
        p_36_M03_AXI_wvalid->set_sv_netview_offsetfromdp(9732360);
        xsim_sc_channel<0, bool > *p_36_M03_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_36->M03_AXI_wready.bind(*p_36_M03_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M03_AXI_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_36_M03_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_36->M03_AXI_bid.bind(*p_36_M03_AXI_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M03_AXI_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_36_M03_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_36->M03_AXI_bresp.bind(*p_36_M03_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M03_AXI_bresp);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_36_M03_AXI_buser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_36->M03_AXI_buser.bind(*p_36_M03_AXI_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M03_AXI_buser);
        xsim_sc_channel<0, bool > *p_36_M03_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_36->M03_AXI_bvalid.bind(*p_36_M03_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M03_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_36_M03_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_36->M03_AXI_bready.bind(*p_36_M03_AXI_bready);
        p_36_M03_AXI_bready->set_sv_netview_offsetfromdp(9732696);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_36_M03_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_36->M03_AXI_arid.bind(*p_36_M03_AXI_arid);
        p_36_M03_AXI_arid->set_sv_netview_offsetfromdp(9732752);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_36_M03_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_36->M03_AXI_araddr.bind(*p_36_M03_AXI_araddr);
        p_36_M03_AXI_araddr->set_sv_netview_offsetfromdp(9732808);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_36_M03_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_36->M03_AXI_arlen.bind(*p_36_M03_AXI_arlen);
        p_36_M03_AXI_arlen->set_sv_netview_offsetfromdp(9732864);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_36_M03_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_36->M03_AXI_arsize.bind(*p_36_M03_AXI_arsize);
        p_36_M03_AXI_arsize->set_sv_netview_offsetfromdp(9732920);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_36_M03_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_36->M03_AXI_arburst.bind(*p_36_M03_AXI_arburst);
        p_36_M03_AXI_arburst->set_sv_netview_offsetfromdp(9732976);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_36_M03_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_36->M03_AXI_arlock.bind(*p_36_M03_AXI_arlock);
        p_36_M03_AXI_arlock->set_sv_netview_offsetfromdp(9733032);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_36_M03_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_36->M03_AXI_arcache.bind(*p_36_M03_AXI_arcache);
        p_36_M03_AXI_arcache->set_sv_netview_offsetfromdp(9733088);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_36_M03_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_36->M03_AXI_arprot.bind(*p_36_M03_AXI_arprot);
        p_36_M03_AXI_arprot->set_sv_netview_offsetfromdp(9733144);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_36_M03_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_36->M03_AXI_arqos.bind(*p_36_M03_AXI_arqos);
        p_36_M03_AXI_arqos->set_sv_netview_offsetfromdp(9733200);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_36_M03_AXI_aruser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_36->M03_AXI_aruser.bind(*p_36_M03_AXI_aruser);
        p_36_M03_AXI_aruser->set_sv_netview_offsetfromdp(9733256);
        xsim_sc_channel<0, bool > *p_36_M03_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_36->M03_AXI_arvalid.bind(*p_36_M03_AXI_arvalid);
        p_36_M03_AXI_arvalid->set_sv_netview_offsetfromdp(9733312);
        xsim_sc_channel<0, bool > *p_36_M03_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_36->M03_AXI_arready.bind(*p_36_M03_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M03_AXI_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_36_M03_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_36->M03_AXI_rid.bind(*p_36_M03_AXI_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M03_AXI_rid);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_36_M03_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_36->M03_AXI_rdata.bind(*p_36_M03_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M03_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_36_M03_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_36->M03_AXI_rresp.bind(*p_36_M03_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M03_AXI_rresp);
        xsim_sc_channel<0, bool > *p_36_M03_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_36->M03_AXI_rlast.bind(*p_36_M03_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M03_AXI_rlast);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_36_M03_AXI_ruser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_36->M03_AXI_ruser.bind(*p_36_M03_AXI_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M03_AXI_ruser);
        xsim_sc_channel<0, bool > *p_36_M03_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_36->M03_AXI_rvalid.bind(*p_36_M03_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M03_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_36_M03_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_36->M03_AXI_rready.bind(*p_36_M03_AXI_rready);
        p_36_M03_AXI_rready->set_sv_netview_offsetfromdp(9733760);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_36_M04_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_36->M04_AXI_awid.bind(*p_36_M04_AXI_awid);
        p_36_M04_AXI_awid->set_sv_netview_offsetfromdp(9733816);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_36_M04_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_36->M04_AXI_awaddr.bind(*p_36_M04_AXI_awaddr);
        p_36_M04_AXI_awaddr->set_sv_netview_offsetfromdp(9733872);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_36_M04_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_36->M04_AXI_awlen.bind(*p_36_M04_AXI_awlen);
        p_36_M04_AXI_awlen->set_sv_netview_offsetfromdp(9733928);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_36_M04_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_36->M04_AXI_awsize.bind(*p_36_M04_AXI_awsize);
        p_36_M04_AXI_awsize->set_sv_netview_offsetfromdp(9733984);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_36_M04_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_36->M04_AXI_awburst.bind(*p_36_M04_AXI_awburst);
        p_36_M04_AXI_awburst->set_sv_netview_offsetfromdp(9734040);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_36_M04_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_36->M04_AXI_awlock.bind(*p_36_M04_AXI_awlock);
        p_36_M04_AXI_awlock->set_sv_netview_offsetfromdp(9734096);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_36_M04_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_36->M04_AXI_awcache.bind(*p_36_M04_AXI_awcache);
        p_36_M04_AXI_awcache->set_sv_netview_offsetfromdp(9734152);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_36_M04_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_36->M04_AXI_awprot.bind(*p_36_M04_AXI_awprot);
        p_36_M04_AXI_awprot->set_sv_netview_offsetfromdp(9734208);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_36_M04_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_36->M04_AXI_awqos.bind(*p_36_M04_AXI_awqos);
        p_36_M04_AXI_awqos->set_sv_netview_offsetfromdp(9734264);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_36_M04_AXI_awuser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_36->M04_AXI_awuser.bind(*p_36_M04_AXI_awuser);
        p_36_M04_AXI_awuser->set_sv_netview_offsetfromdp(9734320);
        xsim_sc_channel<0, bool > *p_36_M04_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_36->M04_AXI_awvalid.bind(*p_36_M04_AXI_awvalid);
        p_36_M04_AXI_awvalid->set_sv_netview_offsetfromdp(9734376);
        xsim_sc_channel<0, bool > *p_36_M04_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_36->M04_AXI_awready.bind(*p_36_M04_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M04_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_36_M04_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_36->M04_AXI_wdata.bind(*p_36_M04_AXI_wdata);
        p_36_M04_AXI_wdata->set_sv_netview_offsetfromdp(9734488);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_36_M04_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_36->M04_AXI_wstrb.bind(*p_36_M04_AXI_wstrb);
        p_36_M04_AXI_wstrb->set_sv_netview_offsetfromdp(9734544);
        xsim_sc_channel<0, bool > *p_36_M04_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_36->M04_AXI_wlast.bind(*p_36_M04_AXI_wlast);
        p_36_M04_AXI_wlast->set_sv_netview_offsetfromdp(9734600);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_36_M04_AXI_wuser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_36->M04_AXI_wuser.bind(*p_36_M04_AXI_wuser);
        p_36_M04_AXI_wuser->set_sv_netview_offsetfromdp(9734656);
        xsim_sc_channel<0, bool > *p_36_M04_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_36->M04_AXI_wvalid.bind(*p_36_M04_AXI_wvalid);
        p_36_M04_AXI_wvalid->set_sv_netview_offsetfromdp(9734712);
        xsim_sc_channel<0, bool > *p_36_M04_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_36->M04_AXI_wready.bind(*p_36_M04_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M04_AXI_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_36_M04_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_36->M04_AXI_bid.bind(*p_36_M04_AXI_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M04_AXI_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_36_M04_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_36->M04_AXI_bresp.bind(*p_36_M04_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M04_AXI_bresp);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_36_M04_AXI_buser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_36->M04_AXI_buser.bind(*p_36_M04_AXI_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M04_AXI_buser);
        xsim_sc_channel<0, bool > *p_36_M04_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_36->M04_AXI_bvalid.bind(*p_36_M04_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M04_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_36_M04_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_36->M04_AXI_bready.bind(*p_36_M04_AXI_bready);
        p_36_M04_AXI_bready->set_sv_netview_offsetfromdp(9735048);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_36_M04_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_36->M04_AXI_arid.bind(*p_36_M04_AXI_arid);
        p_36_M04_AXI_arid->set_sv_netview_offsetfromdp(9735104);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_36_M04_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_36->M04_AXI_araddr.bind(*p_36_M04_AXI_araddr);
        p_36_M04_AXI_araddr->set_sv_netview_offsetfromdp(9735160);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_36_M04_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_36->M04_AXI_arlen.bind(*p_36_M04_AXI_arlen);
        p_36_M04_AXI_arlen->set_sv_netview_offsetfromdp(9735216);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_36_M04_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_36->M04_AXI_arsize.bind(*p_36_M04_AXI_arsize);
        p_36_M04_AXI_arsize->set_sv_netview_offsetfromdp(9735272);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_36_M04_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_36->M04_AXI_arburst.bind(*p_36_M04_AXI_arburst);
        p_36_M04_AXI_arburst->set_sv_netview_offsetfromdp(9735328);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_36_M04_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_36->M04_AXI_arlock.bind(*p_36_M04_AXI_arlock);
        p_36_M04_AXI_arlock->set_sv_netview_offsetfromdp(9735384);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_36_M04_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_36->M04_AXI_arcache.bind(*p_36_M04_AXI_arcache);
        p_36_M04_AXI_arcache->set_sv_netview_offsetfromdp(9735440);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_36_M04_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_36->M04_AXI_arprot.bind(*p_36_M04_AXI_arprot);
        p_36_M04_AXI_arprot->set_sv_netview_offsetfromdp(9735496);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_36_M04_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_36->M04_AXI_arqos.bind(*p_36_M04_AXI_arqos);
        p_36_M04_AXI_arqos->set_sv_netview_offsetfromdp(9735552);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_36_M04_AXI_aruser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_36->M04_AXI_aruser.bind(*p_36_M04_AXI_aruser);
        p_36_M04_AXI_aruser->set_sv_netview_offsetfromdp(9735608);
        xsim_sc_channel<0, bool > *p_36_M04_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_36->M04_AXI_arvalid.bind(*p_36_M04_AXI_arvalid);
        p_36_M04_AXI_arvalid->set_sv_netview_offsetfromdp(9735664);
        xsim_sc_channel<0, bool > *p_36_M04_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_36->M04_AXI_arready.bind(*p_36_M04_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M04_AXI_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_36_M04_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_36->M04_AXI_rid.bind(*p_36_M04_AXI_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M04_AXI_rid);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_36_M04_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_36->M04_AXI_rdata.bind(*p_36_M04_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M04_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_36_M04_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_36->M04_AXI_rresp.bind(*p_36_M04_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M04_AXI_rresp);
        xsim_sc_channel<0, bool > *p_36_M04_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_36->M04_AXI_rlast.bind(*p_36_M04_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M04_AXI_rlast);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_36_M04_AXI_ruser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_36->M04_AXI_ruser.bind(*p_36_M04_AXI_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M04_AXI_ruser);
        xsim_sc_channel<0, bool > *p_36_M04_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_36->M04_AXI_rvalid.bind(*p_36_M04_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M04_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_36_M04_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_36->M04_AXI_rready.bind(*p_36_M04_AXI_rready);
        p_36_M04_AXI_rready->set_sv_netview_offsetfromdp(9736112);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_36_M05_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_36->M05_AXI_awid.bind(*p_36_M05_AXI_awid);
        p_36_M05_AXI_awid->set_sv_netview_offsetfromdp(9736168);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_36_M05_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_36->M05_AXI_awaddr.bind(*p_36_M05_AXI_awaddr);
        p_36_M05_AXI_awaddr->set_sv_netview_offsetfromdp(9736224);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_36_M05_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_36->M05_AXI_awlen.bind(*p_36_M05_AXI_awlen);
        p_36_M05_AXI_awlen->set_sv_netview_offsetfromdp(9736280);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_36_M05_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_36->M05_AXI_awsize.bind(*p_36_M05_AXI_awsize);
        p_36_M05_AXI_awsize->set_sv_netview_offsetfromdp(9736336);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_36_M05_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_36->M05_AXI_awburst.bind(*p_36_M05_AXI_awburst);
        p_36_M05_AXI_awburst->set_sv_netview_offsetfromdp(9736392);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_36_M05_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_36->M05_AXI_awlock.bind(*p_36_M05_AXI_awlock);
        p_36_M05_AXI_awlock->set_sv_netview_offsetfromdp(9736448);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_36_M05_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_36->M05_AXI_awcache.bind(*p_36_M05_AXI_awcache);
        p_36_M05_AXI_awcache->set_sv_netview_offsetfromdp(9736504);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_36_M05_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_36->M05_AXI_awprot.bind(*p_36_M05_AXI_awprot);
        p_36_M05_AXI_awprot->set_sv_netview_offsetfromdp(9736560);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_36_M05_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_36->M05_AXI_awqos.bind(*p_36_M05_AXI_awqos);
        p_36_M05_AXI_awqos->set_sv_netview_offsetfromdp(9736616);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_36_M05_AXI_awuser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_36->M05_AXI_awuser.bind(*p_36_M05_AXI_awuser);
        p_36_M05_AXI_awuser->set_sv_netview_offsetfromdp(9736672);
        xsim_sc_channel<0, bool > *p_36_M05_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_36->M05_AXI_awvalid.bind(*p_36_M05_AXI_awvalid);
        p_36_M05_AXI_awvalid->set_sv_netview_offsetfromdp(9736728);
        xsim_sc_channel<0, bool > *p_36_M05_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_36->M05_AXI_awready.bind(*p_36_M05_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M05_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_36_M05_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_36->M05_AXI_wdata.bind(*p_36_M05_AXI_wdata);
        p_36_M05_AXI_wdata->set_sv_netview_offsetfromdp(9736840);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_36_M05_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_36->M05_AXI_wstrb.bind(*p_36_M05_AXI_wstrb);
        p_36_M05_AXI_wstrb->set_sv_netview_offsetfromdp(9736896);
        xsim_sc_channel<0, bool > *p_36_M05_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_36->M05_AXI_wlast.bind(*p_36_M05_AXI_wlast);
        p_36_M05_AXI_wlast->set_sv_netview_offsetfromdp(9736952);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_36_M05_AXI_wuser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_36->M05_AXI_wuser.bind(*p_36_M05_AXI_wuser);
        p_36_M05_AXI_wuser->set_sv_netview_offsetfromdp(9737008);
        xsim_sc_channel<0, bool > *p_36_M05_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_36->M05_AXI_wvalid.bind(*p_36_M05_AXI_wvalid);
        p_36_M05_AXI_wvalid->set_sv_netview_offsetfromdp(9737064);
        xsim_sc_channel<0, bool > *p_36_M05_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_36->M05_AXI_wready.bind(*p_36_M05_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M05_AXI_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_36_M05_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_36->M05_AXI_bid.bind(*p_36_M05_AXI_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M05_AXI_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_36_M05_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_36->M05_AXI_bresp.bind(*p_36_M05_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M05_AXI_bresp);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_36_M05_AXI_buser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_36->M05_AXI_buser.bind(*p_36_M05_AXI_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M05_AXI_buser);
        xsim_sc_channel<0, bool > *p_36_M05_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_36->M05_AXI_bvalid.bind(*p_36_M05_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M05_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_36_M05_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_36->M05_AXI_bready.bind(*p_36_M05_AXI_bready);
        p_36_M05_AXI_bready->set_sv_netview_offsetfromdp(9737400);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_36_M05_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_36->M05_AXI_arid.bind(*p_36_M05_AXI_arid);
        p_36_M05_AXI_arid->set_sv_netview_offsetfromdp(9737456);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_36_M05_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_36->M05_AXI_araddr.bind(*p_36_M05_AXI_araddr);
        p_36_M05_AXI_araddr->set_sv_netview_offsetfromdp(9737512);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_36_M05_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_36->M05_AXI_arlen.bind(*p_36_M05_AXI_arlen);
        p_36_M05_AXI_arlen->set_sv_netview_offsetfromdp(9737568);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_36_M05_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_36->M05_AXI_arsize.bind(*p_36_M05_AXI_arsize);
        p_36_M05_AXI_arsize->set_sv_netview_offsetfromdp(9737624);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_36_M05_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_36->M05_AXI_arburst.bind(*p_36_M05_AXI_arburst);
        p_36_M05_AXI_arburst->set_sv_netview_offsetfromdp(9737680);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_36_M05_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_36->M05_AXI_arlock.bind(*p_36_M05_AXI_arlock);
        p_36_M05_AXI_arlock->set_sv_netview_offsetfromdp(9737736);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_36_M05_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_36->M05_AXI_arcache.bind(*p_36_M05_AXI_arcache);
        p_36_M05_AXI_arcache->set_sv_netview_offsetfromdp(9737792);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_36_M05_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_36->M05_AXI_arprot.bind(*p_36_M05_AXI_arprot);
        p_36_M05_AXI_arprot->set_sv_netview_offsetfromdp(9737848);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_36_M05_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_36->M05_AXI_arqos.bind(*p_36_M05_AXI_arqos);
        p_36_M05_AXI_arqos->set_sv_netview_offsetfromdp(9737904);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_36_M05_AXI_aruser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_36->M05_AXI_aruser.bind(*p_36_M05_AXI_aruser);
        p_36_M05_AXI_aruser->set_sv_netview_offsetfromdp(9737960);
        xsim_sc_channel<0, bool > *p_36_M05_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_36->M05_AXI_arvalid.bind(*p_36_M05_AXI_arvalid);
        p_36_M05_AXI_arvalid->set_sv_netview_offsetfromdp(9738016);
        xsim_sc_channel<0, bool > *p_36_M05_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_36->M05_AXI_arready.bind(*p_36_M05_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M05_AXI_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_36_M05_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_36->M05_AXI_rid.bind(*p_36_M05_AXI_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M05_AXI_rid);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_36_M05_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_36->M05_AXI_rdata.bind(*p_36_M05_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M05_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_36_M05_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_36->M05_AXI_rresp.bind(*p_36_M05_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M05_AXI_rresp);
        xsim_sc_channel<0, bool > *p_36_M05_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_36->M05_AXI_rlast.bind(*p_36_M05_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M05_AXI_rlast);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_36_M05_AXI_ruser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_36->M05_AXI_ruser.bind(*p_36_M05_AXI_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M05_AXI_ruser);
        xsim_sc_channel<0, bool > *p_36_M05_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_36->M05_AXI_rvalid.bind(*p_36_M05_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M05_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_36_M05_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_36->M05_AXI_rready.bind(*p_36_M05_AXI_rready);
        p_36_M05_AXI_rready->set_sv_netview_offsetfromdp(9738464);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_36_M06_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_36->M06_AXI_awid.bind(*p_36_M06_AXI_awid);
        p_36_M06_AXI_awid->set_sv_netview_offsetfromdp(9738520);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_36_M06_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_36->M06_AXI_awaddr.bind(*p_36_M06_AXI_awaddr);
        p_36_M06_AXI_awaddr->set_sv_netview_offsetfromdp(9738576);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_36_M06_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_36->M06_AXI_awlen.bind(*p_36_M06_AXI_awlen);
        p_36_M06_AXI_awlen->set_sv_netview_offsetfromdp(9738632);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_36_M06_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_36->M06_AXI_awsize.bind(*p_36_M06_AXI_awsize);
        p_36_M06_AXI_awsize->set_sv_netview_offsetfromdp(9738688);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_36_M06_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_36->M06_AXI_awburst.bind(*p_36_M06_AXI_awburst);
        p_36_M06_AXI_awburst->set_sv_netview_offsetfromdp(9738744);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_36_M06_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_36->M06_AXI_awlock.bind(*p_36_M06_AXI_awlock);
        p_36_M06_AXI_awlock->set_sv_netview_offsetfromdp(9738800);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_36_M06_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_36->M06_AXI_awcache.bind(*p_36_M06_AXI_awcache);
        p_36_M06_AXI_awcache->set_sv_netview_offsetfromdp(9738856);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_36_M06_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_36->M06_AXI_awprot.bind(*p_36_M06_AXI_awprot);
        p_36_M06_AXI_awprot->set_sv_netview_offsetfromdp(9738912);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_36_M06_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_36->M06_AXI_awqos.bind(*p_36_M06_AXI_awqos);
        p_36_M06_AXI_awqos->set_sv_netview_offsetfromdp(9738968);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_36_M06_AXI_awuser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_36->M06_AXI_awuser.bind(*p_36_M06_AXI_awuser);
        p_36_M06_AXI_awuser->set_sv_netview_offsetfromdp(9739024);
        xsim_sc_channel<0, bool > *p_36_M06_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_36->M06_AXI_awvalid.bind(*p_36_M06_AXI_awvalid);
        p_36_M06_AXI_awvalid->set_sv_netview_offsetfromdp(9739080);
        xsim_sc_channel<0, bool > *p_36_M06_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_36->M06_AXI_awready.bind(*p_36_M06_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M06_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_36_M06_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_36->M06_AXI_wdata.bind(*p_36_M06_AXI_wdata);
        p_36_M06_AXI_wdata->set_sv_netview_offsetfromdp(9739192);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_36_M06_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_36->M06_AXI_wstrb.bind(*p_36_M06_AXI_wstrb);
        p_36_M06_AXI_wstrb->set_sv_netview_offsetfromdp(9739248);
        xsim_sc_channel<0, bool > *p_36_M06_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_36->M06_AXI_wlast.bind(*p_36_M06_AXI_wlast);
        p_36_M06_AXI_wlast->set_sv_netview_offsetfromdp(9739304);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_36_M06_AXI_wuser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_36->M06_AXI_wuser.bind(*p_36_M06_AXI_wuser);
        p_36_M06_AXI_wuser->set_sv_netview_offsetfromdp(9739360);
        xsim_sc_channel<0, bool > *p_36_M06_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_36->M06_AXI_wvalid.bind(*p_36_M06_AXI_wvalid);
        p_36_M06_AXI_wvalid->set_sv_netview_offsetfromdp(9739416);
        xsim_sc_channel<0, bool > *p_36_M06_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_36->M06_AXI_wready.bind(*p_36_M06_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M06_AXI_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_36_M06_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_36->M06_AXI_bid.bind(*p_36_M06_AXI_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M06_AXI_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_36_M06_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_36->M06_AXI_bresp.bind(*p_36_M06_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M06_AXI_bresp);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_36_M06_AXI_buser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_36->M06_AXI_buser.bind(*p_36_M06_AXI_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M06_AXI_buser);
        xsim_sc_channel<0, bool > *p_36_M06_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_36->M06_AXI_bvalid.bind(*p_36_M06_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M06_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_36_M06_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_36->M06_AXI_bready.bind(*p_36_M06_AXI_bready);
        p_36_M06_AXI_bready->set_sv_netview_offsetfromdp(9739752);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_36_M06_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_36->M06_AXI_arid.bind(*p_36_M06_AXI_arid);
        p_36_M06_AXI_arid->set_sv_netview_offsetfromdp(9739808);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_36_M06_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_36->M06_AXI_araddr.bind(*p_36_M06_AXI_araddr);
        p_36_M06_AXI_araddr->set_sv_netview_offsetfromdp(9739864);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_36_M06_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_36->M06_AXI_arlen.bind(*p_36_M06_AXI_arlen);
        p_36_M06_AXI_arlen->set_sv_netview_offsetfromdp(9739920);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_36_M06_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_36->M06_AXI_arsize.bind(*p_36_M06_AXI_arsize);
        p_36_M06_AXI_arsize->set_sv_netview_offsetfromdp(9739976);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_36_M06_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_36->M06_AXI_arburst.bind(*p_36_M06_AXI_arburst);
        p_36_M06_AXI_arburst->set_sv_netview_offsetfromdp(9740032);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_36_M06_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_36->M06_AXI_arlock.bind(*p_36_M06_AXI_arlock);
        p_36_M06_AXI_arlock->set_sv_netview_offsetfromdp(9740088);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_36_M06_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_36->M06_AXI_arcache.bind(*p_36_M06_AXI_arcache);
        p_36_M06_AXI_arcache->set_sv_netview_offsetfromdp(9740144);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_36_M06_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_36->M06_AXI_arprot.bind(*p_36_M06_AXI_arprot);
        p_36_M06_AXI_arprot->set_sv_netview_offsetfromdp(9740200);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_36_M06_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_36->M06_AXI_arqos.bind(*p_36_M06_AXI_arqos);
        p_36_M06_AXI_arqos->set_sv_netview_offsetfromdp(9740256);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_36_M06_AXI_aruser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_36->M06_AXI_aruser.bind(*p_36_M06_AXI_aruser);
        p_36_M06_AXI_aruser->set_sv_netview_offsetfromdp(9740312);
        xsim_sc_channel<0, bool > *p_36_M06_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_36->M06_AXI_arvalid.bind(*p_36_M06_AXI_arvalid);
        p_36_M06_AXI_arvalid->set_sv_netview_offsetfromdp(9740368);
        xsim_sc_channel<0, bool > *p_36_M06_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_36->M06_AXI_arready.bind(*p_36_M06_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M06_AXI_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_36_M06_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_36->M06_AXI_rid.bind(*p_36_M06_AXI_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M06_AXI_rid);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_36_M06_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_36->M06_AXI_rdata.bind(*p_36_M06_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M06_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_36_M06_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_36->M06_AXI_rresp.bind(*p_36_M06_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M06_AXI_rresp);
        xsim_sc_channel<0, bool > *p_36_M06_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_36->M06_AXI_rlast.bind(*p_36_M06_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M06_AXI_rlast);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_36_M06_AXI_ruser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_36->M06_AXI_ruser.bind(*p_36_M06_AXI_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M06_AXI_ruser);
        xsim_sc_channel<0, bool > *p_36_M06_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_36->M06_AXI_rvalid.bind(*p_36_M06_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M06_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_36_M06_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_36->M06_AXI_rready.bind(*p_36_M06_AXI_rready);
        p_36_M06_AXI_rready->set_sv_netview_offsetfromdp(9740816);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_36_M07_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_36->M07_AXI_awid.bind(*p_36_M07_AXI_awid);
        p_36_M07_AXI_awid->set_sv_netview_offsetfromdp(9740872);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_36_M07_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_36->M07_AXI_awaddr.bind(*p_36_M07_AXI_awaddr);
        p_36_M07_AXI_awaddr->set_sv_netview_offsetfromdp(9740928);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_36_M07_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_36->M07_AXI_awlen.bind(*p_36_M07_AXI_awlen);
        p_36_M07_AXI_awlen->set_sv_netview_offsetfromdp(9740984);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_36_M07_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_36->M07_AXI_awsize.bind(*p_36_M07_AXI_awsize);
        p_36_M07_AXI_awsize->set_sv_netview_offsetfromdp(9741040);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_36_M07_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_36->M07_AXI_awburst.bind(*p_36_M07_AXI_awburst);
        p_36_M07_AXI_awburst->set_sv_netview_offsetfromdp(9741096);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_36_M07_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_36->M07_AXI_awlock.bind(*p_36_M07_AXI_awlock);
        p_36_M07_AXI_awlock->set_sv_netview_offsetfromdp(9741152);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_36_M07_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_36->M07_AXI_awcache.bind(*p_36_M07_AXI_awcache);
        p_36_M07_AXI_awcache->set_sv_netview_offsetfromdp(9741208);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_36_M07_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_36->M07_AXI_awprot.bind(*p_36_M07_AXI_awprot);
        p_36_M07_AXI_awprot->set_sv_netview_offsetfromdp(9741264);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_36_M07_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_36->M07_AXI_awqos.bind(*p_36_M07_AXI_awqos);
        p_36_M07_AXI_awqos->set_sv_netview_offsetfromdp(9741320);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_36_M07_AXI_awuser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_36->M07_AXI_awuser.bind(*p_36_M07_AXI_awuser);
        p_36_M07_AXI_awuser->set_sv_netview_offsetfromdp(9741376);
        xsim_sc_channel<0, bool > *p_36_M07_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_36->M07_AXI_awvalid.bind(*p_36_M07_AXI_awvalid);
        p_36_M07_AXI_awvalid->set_sv_netview_offsetfromdp(9741432);
        xsim_sc_channel<0, bool > *p_36_M07_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_36->M07_AXI_awready.bind(*p_36_M07_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M07_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_36_M07_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_36->M07_AXI_wdata.bind(*p_36_M07_AXI_wdata);
        p_36_M07_AXI_wdata->set_sv_netview_offsetfromdp(9741544);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_36_M07_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_36->M07_AXI_wstrb.bind(*p_36_M07_AXI_wstrb);
        p_36_M07_AXI_wstrb->set_sv_netview_offsetfromdp(9741600);
        xsim_sc_channel<0, bool > *p_36_M07_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_36->M07_AXI_wlast.bind(*p_36_M07_AXI_wlast);
        p_36_M07_AXI_wlast->set_sv_netview_offsetfromdp(9741656);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_36_M07_AXI_wuser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_36->M07_AXI_wuser.bind(*p_36_M07_AXI_wuser);
        p_36_M07_AXI_wuser->set_sv_netview_offsetfromdp(9741712);
        xsim_sc_channel<0, bool > *p_36_M07_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_36->M07_AXI_wvalid.bind(*p_36_M07_AXI_wvalid);
        p_36_M07_AXI_wvalid->set_sv_netview_offsetfromdp(9741768);
        xsim_sc_channel<0, bool > *p_36_M07_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_36->M07_AXI_wready.bind(*p_36_M07_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M07_AXI_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_36_M07_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_36->M07_AXI_bid.bind(*p_36_M07_AXI_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M07_AXI_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_36_M07_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_36->M07_AXI_bresp.bind(*p_36_M07_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M07_AXI_bresp);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_36_M07_AXI_buser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_36->M07_AXI_buser.bind(*p_36_M07_AXI_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M07_AXI_buser);
        xsim_sc_channel<0, bool > *p_36_M07_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_36->M07_AXI_bvalid.bind(*p_36_M07_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M07_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_36_M07_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_36->M07_AXI_bready.bind(*p_36_M07_AXI_bready);
        p_36_M07_AXI_bready->set_sv_netview_offsetfromdp(9742104);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_36_M07_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_36->M07_AXI_arid.bind(*p_36_M07_AXI_arid);
        p_36_M07_AXI_arid->set_sv_netview_offsetfromdp(9742160);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_36_M07_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_36->M07_AXI_araddr.bind(*p_36_M07_AXI_araddr);
        p_36_M07_AXI_araddr->set_sv_netview_offsetfromdp(9742216);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_36_M07_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_36->M07_AXI_arlen.bind(*p_36_M07_AXI_arlen);
        p_36_M07_AXI_arlen->set_sv_netview_offsetfromdp(9742272);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_36_M07_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_36->M07_AXI_arsize.bind(*p_36_M07_AXI_arsize);
        p_36_M07_AXI_arsize->set_sv_netview_offsetfromdp(9742328);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_36_M07_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_36->M07_AXI_arburst.bind(*p_36_M07_AXI_arburst);
        p_36_M07_AXI_arburst->set_sv_netview_offsetfromdp(9742384);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_36_M07_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_36->M07_AXI_arlock.bind(*p_36_M07_AXI_arlock);
        p_36_M07_AXI_arlock->set_sv_netview_offsetfromdp(9742440);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_36_M07_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_36->M07_AXI_arcache.bind(*p_36_M07_AXI_arcache);
        p_36_M07_AXI_arcache->set_sv_netview_offsetfromdp(9742496);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_36_M07_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_36->M07_AXI_arprot.bind(*p_36_M07_AXI_arprot);
        p_36_M07_AXI_arprot->set_sv_netview_offsetfromdp(9742552);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_36_M07_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_36->M07_AXI_arqos.bind(*p_36_M07_AXI_arqos);
        p_36_M07_AXI_arqos->set_sv_netview_offsetfromdp(9742608);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_36_M07_AXI_aruser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_36->M07_AXI_aruser.bind(*p_36_M07_AXI_aruser);
        p_36_M07_AXI_aruser->set_sv_netview_offsetfromdp(9742664);
        xsim_sc_channel<0, bool > *p_36_M07_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_36->M07_AXI_arvalid.bind(*p_36_M07_AXI_arvalid);
        p_36_M07_AXI_arvalid->set_sv_netview_offsetfromdp(9742720);
        xsim_sc_channel<0, bool > *p_36_M07_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_36->M07_AXI_arready.bind(*p_36_M07_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M07_AXI_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_36_M07_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_36->M07_AXI_rid.bind(*p_36_M07_AXI_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M07_AXI_rid);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_36_M07_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_36->M07_AXI_rdata.bind(*p_36_M07_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M07_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_36_M07_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_36->M07_AXI_rresp.bind(*p_36_M07_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M07_AXI_rresp);
        xsim_sc_channel<0, bool > *p_36_M07_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_36->M07_AXI_rlast.bind(*p_36_M07_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M07_AXI_rlast);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_36_M07_AXI_ruser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_36->M07_AXI_ruser.bind(*p_36_M07_AXI_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M07_AXI_ruser);
        xsim_sc_channel<0, bool > *p_36_M07_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_36->M07_AXI_rvalid.bind(*p_36_M07_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M07_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_36_M07_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_36->M07_AXI_rready.bind(*p_36_M07_AXI_rready);
        p_36_M07_AXI_rready->set_sv_netview_offsetfromdp(9743168);
        sc_inst_37 = new bd_d216_rs_M00_AXI_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.interconnect.rs_m00_axi");
        sc_inst_37->xsim_set_dbg_index(2477);
        xsim_sc_channel<0, bool > *p_37_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_37->aclk.bind(*p_37_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_37_aclk);
        xsim_sc_channel<0, bool > *p_37_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_37->aresetn.bind(*p_37_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_37_aresetn);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_37_s_axi_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_37->s_axi_awaddr.bind(*p_37_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_37_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_37_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_37->s_axi_awlen.bind(*p_37_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_37_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_37_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_37->s_axi_awsize.bind(*p_37_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_37_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_37_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_37->s_axi_awburst.bind(*p_37_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_37_s_axi_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_37_s_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_37->s_axi_awlock.bind(*p_37_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_37_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_37_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_37->s_axi_awcache.bind(*p_37_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_37_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_37_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_37->s_axi_awprot.bind(*p_37_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_37_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_37_s_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_37->s_axi_awregion.bind(*p_37_s_axi_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_37_s_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_37_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_37->s_axi_awqos.bind(*p_37_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_37_s_axi_awqos);
        xsim_sc_channel<0, bool > *p_37_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_37->s_axi_awvalid.bind(*p_37_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_37_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_37_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_37->s_axi_awready.bind(*p_37_s_axi_awready);
        p_37_s_axi_awready->set_sv_netview_offsetfromdp(9743944);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_37_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_37->s_axi_wdata.bind(*p_37_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_37_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_37_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_37->s_axi_wstrb.bind(*p_37_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_37_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_37_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_37->s_axi_wlast.bind(*p_37_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_37_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_37_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_37->s_axi_wvalid.bind(*p_37_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_37_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_37_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_37->s_axi_wready.bind(*p_37_s_axi_wready);
        p_37_s_axi_wready->set_sv_netview_offsetfromdp(9744224);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_37_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_37->s_axi_bresp.bind(*p_37_s_axi_bresp);
        p_37_s_axi_bresp->set_sv_netview_offsetfromdp(9744280);
        xsim_sc_channel<0, bool > *p_37_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_37->s_axi_bvalid.bind(*p_37_s_axi_bvalid);
        p_37_s_axi_bvalid->set_sv_netview_offsetfromdp(9744336);
        xsim_sc_channel<0, bool > *p_37_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_37->s_axi_bready.bind(*p_37_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_37_s_axi_bready);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_37_s_axi_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_37->s_axi_araddr.bind(*p_37_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_37_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_37_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_37->s_axi_arlen.bind(*p_37_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_37_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_37_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_37->s_axi_arsize.bind(*p_37_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_37_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_37_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_37->s_axi_arburst.bind(*p_37_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_37_s_axi_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_37_s_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_37->s_axi_arlock.bind(*p_37_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_37_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_37_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_37->s_axi_arcache.bind(*p_37_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_37_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_37_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_37->s_axi_arprot.bind(*p_37_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_37_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_37_s_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_37->s_axi_arregion.bind(*p_37_s_axi_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_37_s_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_37_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_37->s_axi_arqos.bind(*p_37_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_37_s_axi_arqos);
        xsim_sc_channel<0, bool > *p_37_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_37->s_axi_arvalid.bind(*p_37_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_37_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_37_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_37->s_axi_arready.bind(*p_37_s_axi_arready);
        p_37_s_axi_arready->set_sv_netview_offsetfromdp(9745008);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_37_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_37->s_axi_rdata.bind(*p_37_s_axi_rdata);
        p_37_s_axi_rdata->set_sv_netview_offsetfromdp(9745064);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_37_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_37->s_axi_rresp.bind(*p_37_s_axi_rresp);
        p_37_s_axi_rresp->set_sv_netview_offsetfromdp(9745120);
        xsim_sc_channel<0, bool > *p_37_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_37->s_axi_rlast.bind(*p_37_s_axi_rlast);
        p_37_s_axi_rlast->set_sv_netview_offsetfromdp(9745176);
        xsim_sc_channel<0, bool > *p_37_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_37->s_axi_rvalid.bind(*p_37_s_axi_rvalid);
        p_37_s_axi_rvalid->set_sv_netview_offsetfromdp(9745232);
        xsim_sc_channel<0, bool > *p_37_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_37->s_axi_rready.bind(*p_37_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_37_s_axi_rready);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_37_m_axi_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_37->m_axi_awaddr.bind(*p_37_m_axi_awaddr);
        p_37_m_axi_awaddr->set_sv_netview_offsetfromdp(9745344);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_37_m_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_37->m_axi_awlen.bind(*p_37_m_axi_awlen);
        p_37_m_axi_awlen->set_sv_netview_offsetfromdp(9745400);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_37_m_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_37->m_axi_awsize.bind(*p_37_m_axi_awsize);
        p_37_m_axi_awsize->set_sv_netview_offsetfromdp(9745456);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_37_m_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_37->m_axi_awburst.bind(*p_37_m_axi_awburst);
        p_37_m_axi_awburst->set_sv_netview_offsetfromdp(9745512);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_37_m_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_37->m_axi_awlock.bind(*p_37_m_axi_awlock);
        p_37_m_axi_awlock->set_sv_netview_offsetfromdp(9745568);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_37_m_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_37->m_axi_awcache.bind(*p_37_m_axi_awcache);
        p_37_m_axi_awcache->set_sv_netview_offsetfromdp(9745624);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_37_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_37->m_axi_awprot.bind(*p_37_m_axi_awprot);
        p_37_m_axi_awprot->set_sv_netview_offsetfromdp(9745680);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_37_m_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_37->m_axi_awregion.bind(*p_37_m_axi_awregion);
        p_37_m_axi_awregion->set_sv_netview_offsetfromdp(9745736);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_37_m_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_37->m_axi_awqos.bind(*p_37_m_axi_awqos);
        p_37_m_axi_awqos->set_sv_netview_offsetfromdp(9745792);
        xsim_sc_channel<0, bool > *p_37_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_37->m_axi_awvalid.bind(*p_37_m_axi_awvalid);
        p_37_m_axi_awvalid->set_sv_netview_offsetfromdp(9745848);
        xsim_sc_channel<0, bool > *p_37_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_37->m_axi_awready.bind(*p_37_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_37_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_37_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_37->m_axi_wdata.bind(*p_37_m_axi_wdata);
        p_37_m_axi_wdata->set_sv_netview_offsetfromdp(9745960);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_37_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_37->m_axi_wstrb.bind(*p_37_m_axi_wstrb);
        p_37_m_axi_wstrb->set_sv_netview_offsetfromdp(9746016);
        xsim_sc_channel<0, bool > *p_37_m_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_37->m_axi_wlast.bind(*p_37_m_axi_wlast);
        p_37_m_axi_wlast->set_sv_netview_offsetfromdp(9746072);
        xsim_sc_channel<0, bool > *p_37_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_37->m_axi_wvalid.bind(*p_37_m_axi_wvalid);
        p_37_m_axi_wvalid->set_sv_netview_offsetfromdp(9746128);
        xsim_sc_channel<0, bool > *p_37_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_37->m_axi_wready.bind(*p_37_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_37_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_37_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_37->m_axi_bresp.bind(*p_37_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_37_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_37_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_37->m_axi_bvalid.bind(*p_37_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_37_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_37_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_37->m_axi_bready.bind(*p_37_m_axi_bready);
        p_37_m_axi_bready->set_sv_netview_offsetfromdp(9746352);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_37_m_axi_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_37->m_axi_araddr.bind(*p_37_m_axi_araddr);
        p_37_m_axi_araddr->set_sv_netview_offsetfromdp(9746408);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_37_m_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_37->m_axi_arlen.bind(*p_37_m_axi_arlen);
        p_37_m_axi_arlen->set_sv_netview_offsetfromdp(9746464);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_37_m_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_37->m_axi_arsize.bind(*p_37_m_axi_arsize);
        p_37_m_axi_arsize->set_sv_netview_offsetfromdp(9746520);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_37_m_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_37->m_axi_arburst.bind(*p_37_m_axi_arburst);
        p_37_m_axi_arburst->set_sv_netview_offsetfromdp(9746576);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_37_m_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_37->m_axi_arlock.bind(*p_37_m_axi_arlock);
        p_37_m_axi_arlock->set_sv_netview_offsetfromdp(9746632);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_37_m_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_37->m_axi_arcache.bind(*p_37_m_axi_arcache);
        p_37_m_axi_arcache->set_sv_netview_offsetfromdp(9746688);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_37_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_37->m_axi_arprot.bind(*p_37_m_axi_arprot);
        p_37_m_axi_arprot->set_sv_netview_offsetfromdp(9746744);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_37_m_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_37->m_axi_arregion.bind(*p_37_m_axi_arregion);
        p_37_m_axi_arregion->set_sv_netview_offsetfromdp(9746800);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_37_m_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_37->m_axi_arqos.bind(*p_37_m_axi_arqos);
        p_37_m_axi_arqos->set_sv_netview_offsetfromdp(9746856);
        xsim_sc_channel<0, bool > *p_37_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_37->m_axi_arvalid.bind(*p_37_m_axi_arvalid);
        p_37_m_axi_arvalid->set_sv_netview_offsetfromdp(9746912);
        xsim_sc_channel<0, bool > *p_37_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_37->m_axi_arready.bind(*p_37_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_37_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_37_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_37->m_axi_rdata.bind(*p_37_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_37_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_37_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_37->m_axi_rresp.bind(*p_37_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_37_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_37_m_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_37->m_axi_rlast.bind(*p_37_m_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_37_m_axi_rlast);
        xsim_sc_channel<0, bool > *p_37_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_37->m_axi_rvalid.bind(*p_37_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_37_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_37_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_37->m_axi_rready.bind(*p_37_m_axi_rready);
        p_37_m_axi_rready->set_sv_netview_offsetfromdp(9747248);
        sc_inst_38 = new bd_d216_ddr4_mem00_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.memory.ddr4_mem00");
        sc_inst_38->xsim_set_dbg_index(2840);
        xsim_sc_channel<0, bool > *p_38_c0_init_calib_complete = new xsim_sc_channel<0, bool >();
        sc_inst_38->c0_init_calib_complete.bind(*p_38_c0_init_calib_complete);
        p_38_c0_init_calib_complete->set_sv_netview_offsetfromdp(10089944);
        xsim_sc_channel<0, bool > *p_38_dbg_clk = new xsim_sc_channel<0, bool >();
        sc_inst_38->dbg_clk.bind(*p_38_dbg_clk);
        p_38_dbg_clk->set_sv_netview_offsetfromdp(10090000);
        xsim_sc_channel<0, bool > *p_38_c0_sys_clk_p = new xsim_sc_channel<0, bool >();
        sc_inst_38->c0_sys_clk_p.bind(*p_38_c0_sys_clk_p);
        (*_glb_hdl_sc_channel_map).push_back(p_38_c0_sys_clk_p);
        xsim_sc_channel<0, bool > *p_38_c0_sys_clk_n = new xsim_sc_channel<0, bool >();
        sc_inst_38->c0_sys_clk_n.bind(*p_38_c0_sys_clk_n);
        (*_glb_hdl_sc_channel_map).push_back(p_38_c0_sys_clk_n);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_38_dbg_bus = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_38->dbg_bus.bind(*p_38_dbg_bus);
        p_38_dbg_bus->set_sv_netview_offsetfromdp(10090168);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_38_c0_ddr4_adr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_38->c0_ddr4_adr.bind(*p_38_c0_ddr4_adr);
        p_38_c0_ddr4_adr->set_sv_netview_offsetfromdp(10090224);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_38_c0_ddr4_ba = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_38->c0_ddr4_ba.bind(*p_38_c0_ddr4_ba);
        p_38_c0_ddr4_ba->set_sv_netview_offsetfromdp(10090280);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_38_c0_ddr4_cke = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_38->c0_ddr4_cke.bind(*p_38_c0_ddr4_cke);
        p_38_c0_ddr4_cke->set_sv_netview_offsetfromdp(10090336);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_38_c0_ddr4_cs_n = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_38->c0_ddr4_cs_n.bind(*p_38_c0_ddr4_cs_n);
        p_38_c0_ddr4_cs_n->set_sv_netview_offsetfromdp(10090392);
        xsim_sc_channel<72, sc_dt::sc_bv<72> > *p_38_c0_ddr4_dq = new xsim_sc_channel<72, sc_dt::sc_bv<72> >();
        sc_inst_38->c0_ddr4_dq.bind(*p_38_c0_ddr4_dq);
        p_38_c0_ddr4_dq->set_sv_netview_offsetfromdp(10090448);
        xsim_sc_channel<18, sc_dt::sc_bv<18> > *p_38_c0_ddr4_dqs_c = new xsim_sc_channel<18, sc_dt::sc_bv<18> >();
        sc_inst_38->c0_ddr4_dqs_c.bind(*p_38_c0_ddr4_dqs_c);
        p_38_c0_ddr4_dqs_c->set_sv_netview_offsetfromdp(10090504);
        xsim_sc_channel<18, sc_dt::sc_bv<18> > *p_38_c0_ddr4_dqs_t = new xsim_sc_channel<18, sc_dt::sc_bv<18> >();
        sc_inst_38->c0_ddr4_dqs_t.bind(*p_38_c0_ddr4_dqs_t);
        p_38_c0_ddr4_dqs_t->set_sv_netview_offsetfromdp(10090560);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_38_c0_ddr4_odt = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_38->c0_ddr4_odt.bind(*p_38_c0_ddr4_odt);
        p_38_c0_ddr4_odt->set_sv_netview_offsetfromdp(10090616);
        xsim_sc_channel<0, bool > *p_38_c0_ddr4_parity = new xsim_sc_channel<0, bool >();
        sc_inst_38->c0_ddr4_parity.bind(*p_38_c0_ddr4_parity);
        p_38_c0_ddr4_parity->set_sv_netview_offsetfromdp(10090672);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_38_c0_ddr4_bg = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_38->c0_ddr4_bg.bind(*p_38_c0_ddr4_bg);
        p_38_c0_ddr4_bg->set_sv_netview_offsetfromdp(10090728);
        xsim_sc_channel<0, bool > *p_38_c0_ddr4_reset_n = new xsim_sc_channel<0, bool >();
        sc_inst_38->c0_ddr4_reset_n.bind(*p_38_c0_ddr4_reset_n);
        p_38_c0_ddr4_reset_n->set_sv_netview_offsetfromdp(10090784);
        xsim_sc_channel<0, bool > *p_38_c0_ddr4_act_n = new xsim_sc_channel<0, bool >();
        sc_inst_38->c0_ddr4_act_n.bind(*p_38_c0_ddr4_act_n);
        p_38_c0_ddr4_act_n->set_sv_netview_offsetfromdp(10090840);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_38_c0_ddr4_ck_c = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_38->c0_ddr4_ck_c.bind(*p_38_c0_ddr4_ck_c);
        p_38_c0_ddr4_ck_c->set_sv_netview_offsetfromdp(10090896);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_38_c0_ddr4_ck_t = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_38->c0_ddr4_ck_t.bind(*p_38_c0_ddr4_ck_t);
        p_38_c0_ddr4_ck_t->set_sv_netview_offsetfromdp(10090952);
        xsim_sc_channel<0, bool > *p_38_c0_ddr4_ui_clk = new xsim_sc_channel<0, bool >();
        sc_inst_38->c0_ddr4_ui_clk.bind(*p_38_c0_ddr4_ui_clk);
        p_38_c0_ddr4_ui_clk->set_sv_netview_offsetfromdp(10091008);
        xsim_sc_channel<0, bool > *p_38_c0_ddr4_ui_clk_sync_rst = new xsim_sc_channel<0, bool >();
        sc_inst_38->c0_ddr4_ui_clk_sync_rst.bind(*p_38_c0_ddr4_ui_clk_sync_rst);
        p_38_c0_ddr4_ui_clk_sync_rst->set_sv_netview_offsetfromdp(10091064);
        xsim_sc_channel<0, bool > *p_38_c0_ddr4_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_38->c0_ddr4_aresetn.bind(*p_38_c0_ddr4_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_38_c0_ddr4_aresetn);
        xsim_sc_channel<0, bool > *p_38_c0_ddr4_s_axi_ctrl_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_38->c0_ddr4_s_axi_ctrl_awvalid.bind(*p_38_c0_ddr4_s_axi_ctrl_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_38_c0_ddr4_s_axi_ctrl_awvalid);
        xsim_sc_channel<0, bool > *p_38_c0_ddr4_s_axi_ctrl_awready = new xsim_sc_channel<0, bool >();
        sc_inst_38->c0_ddr4_s_axi_ctrl_awready.bind(*p_38_c0_ddr4_s_axi_ctrl_awready);
        p_38_c0_ddr4_s_axi_ctrl_awready->set_sv_netview_offsetfromdp(10091232);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_38_c0_ddr4_s_axi_ctrl_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_38->c0_ddr4_s_axi_ctrl_awaddr.bind(*p_38_c0_ddr4_s_axi_ctrl_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_38_c0_ddr4_s_axi_ctrl_awaddr);
        xsim_sc_channel<0, bool > *p_38_c0_ddr4_s_axi_ctrl_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_38->c0_ddr4_s_axi_ctrl_wvalid.bind(*p_38_c0_ddr4_s_axi_ctrl_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_38_c0_ddr4_s_axi_ctrl_wvalid);
        xsim_sc_channel<0, bool > *p_38_c0_ddr4_s_axi_ctrl_wready = new xsim_sc_channel<0, bool >();
        sc_inst_38->c0_ddr4_s_axi_ctrl_wready.bind(*p_38_c0_ddr4_s_axi_ctrl_wready);
        p_38_c0_ddr4_s_axi_ctrl_wready->set_sv_netview_offsetfromdp(10091400);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_38_c0_ddr4_s_axi_ctrl_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_38->c0_ddr4_s_axi_ctrl_wdata.bind(*p_38_c0_ddr4_s_axi_ctrl_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_38_c0_ddr4_s_axi_ctrl_wdata);
        xsim_sc_channel<0, bool > *p_38_c0_ddr4_s_axi_ctrl_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_38->c0_ddr4_s_axi_ctrl_bvalid.bind(*p_38_c0_ddr4_s_axi_ctrl_bvalid);
        p_38_c0_ddr4_s_axi_ctrl_bvalid->set_sv_netview_offsetfromdp(10091512);
        xsim_sc_channel<0, bool > *p_38_c0_ddr4_s_axi_ctrl_bready = new xsim_sc_channel<0, bool >();
        sc_inst_38->c0_ddr4_s_axi_ctrl_bready.bind(*p_38_c0_ddr4_s_axi_ctrl_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_38_c0_ddr4_s_axi_ctrl_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_38_c0_ddr4_s_axi_ctrl_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_38->c0_ddr4_s_axi_ctrl_bresp.bind(*p_38_c0_ddr4_s_axi_ctrl_bresp);
        p_38_c0_ddr4_s_axi_ctrl_bresp->set_sv_netview_offsetfromdp(10091624);
        xsim_sc_channel<0, bool > *p_38_c0_ddr4_s_axi_ctrl_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_38->c0_ddr4_s_axi_ctrl_arvalid.bind(*p_38_c0_ddr4_s_axi_ctrl_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_38_c0_ddr4_s_axi_ctrl_arvalid);
        xsim_sc_channel<0, bool > *p_38_c0_ddr4_s_axi_ctrl_arready = new xsim_sc_channel<0, bool >();
        sc_inst_38->c0_ddr4_s_axi_ctrl_arready.bind(*p_38_c0_ddr4_s_axi_ctrl_arready);
        p_38_c0_ddr4_s_axi_ctrl_arready->set_sv_netview_offsetfromdp(10091736);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_38_c0_ddr4_s_axi_ctrl_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_38->c0_ddr4_s_axi_ctrl_araddr.bind(*p_38_c0_ddr4_s_axi_ctrl_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_38_c0_ddr4_s_axi_ctrl_araddr);
        xsim_sc_channel<0, bool > *p_38_c0_ddr4_s_axi_ctrl_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_38->c0_ddr4_s_axi_ctrl_rvalid.bind(*p_38_c0_ddr4_s_axi_ctrl_rvalid);
        p_38_c0_ddr4_s_axi_ctrl_rvalid->set_sv_netview_offsetfromdp(10091848);
        xsim_sc_channel<0, bool > *p_38_c0_ddr4_s_axi_ctrl_rready = new xsim_sc_channel<0, bool >();
        sc_inst_38->c0_ddr4_s_axi_ctrl_rready.bind(*p_38_c0_ddr4_s_axi_ctrl_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_38_c0_ddr4_s_axi_ctrl_rready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_38_c0_ddr4_s_axi_ctrl_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_38->c0_ddr4_s_axi_ctrl_rdata.bind(*p_38_c0_ddr4_s_axi_ctrl_rdata);
        p_38_c0_ddr4_s_axi_ctrl_rdata->set_sv_netview_offsetfromdp(10091960);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_38_c0_ddr4_s_axi_ctrl_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_38->c0_ddr4_s_axi_ctrl_rresp.bind(*p_38_c0_ddr4_s_axi_ctrl_rresp);
        p_38_c0_ddr4_s_axi_ctrl_rresp->set_sv_netview_offsetfromdp(10092016);
        xsim_sc_channel<0, bool > *p_38_c0_ddr4_interrupt = new xsim_sc_channel<0, bool >();
        sc_inst_38->c0_ddr4_interrupt.bind(*p_38_c0_ddr4_interrupt);
        p_38_c0_ddr4_interrupt->set_sv_netview_offsetfromdp(10092072);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_38_c0_ddr4_s_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_38->c0_ddr4_s_axi_awid.bind(*p_38_c0_ddr4_s_axi_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_38_c0_ddr4_s_axi_awid);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_38_c0_ddr4_s_axi_awaddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_38->c0_ddr4_s_axi_awaddr.bind(*p_38_c0_ddr4_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_38_c0_ddr4_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_38_c0_ddr4_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_38->c0_ddr4_s_axi_awlen.bind(*p_38_c0_ddr4_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_38_c0_ddr4_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_38_c0_ddr4_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_38->c0_ddr4_s_axi_awsize.bind(*p_38_c0_ddr4_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_38_c0_ddr4_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_38_c0_ddr4_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_38->c0_ddr4_s_axi_awburst.bind(*p_38_c0_ddr4_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_38_c0_ddr4_s_axi_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_38_c0_ddr4_s_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_38->c0_ddr4_s_axi_awlock.bind(*p_38_c0_ddr4_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_38_c0_ddr4_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_38_c0_ddr4_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_38->c0_ddr4_s_axi_awcache.bind(*p_38_c0_ddr4_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_38_c0_ddr4_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_38_c0_ddr4_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_38->c0_ddr4_s_axi_awprot.bind(*p_38_c0_ddr4_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_38_c0_ddr4_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_38_c0_ddr4_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_38->c0_ddr4_s_axi_awqos.bind(*p_38_c0_ddr4_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_38_c0_ddr4_s_axi_awqos);
        xsim_sc_channel<0, bool > *p_38_c0_ddr4_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_38->c0_ddr4_s_axi_awvalid.bind(*p_38_c0_ddr4_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_38_c0_ddr4_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_38_c0_ddr4_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_38->c0_ddr4_s_axi_awready.bind(*p_38_c0_ddr4_s_axi_awready);
        p_38_c0_ddr4_s_axi_awready->set_sv_netview_offsetfromdp(10092688);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_38_c0_ddr4_s_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_38->c0_ddr4_s_axi_wdata.bind(*p_38_c0_ddr4_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_38_c0_ddr4_s_axi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_38_c0_ddr4_s_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_38->c0_ddr4_s_axi_wstrb.bind(*p_38_c0_ddr4_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_38_c0_ddr4_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_38_c0_ddr4_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_38->c0_ddr4_s_axi_wlast.bind(*p_38_c0_ddr4_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_38_c0_ddr4_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_38_c0_ddr4_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_38->c0_ddr4_s_axi_wvalid.bind(*p_38_c0_ddr4_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_38_c0_ddr4_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_38_c0_ddr4_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_38->c0_ddr4_s_axi_wready.bind(*p_38_c0_ddr4_s_axi_wready);
        p_38_c0_ddr4_s_axi_wready->set_sv_netview_offsetfromdp(10092968);
        xsim_sc_channel<0, bool > *p_38_c0_ddr4_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_38->c0_ddr4_s_axi_bready.bind(*p_38_c0_ddr4_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_38_c0_ddr4_s_axi_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_38_c0_ddr4_s_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_38->c0_ddr4_s_axi_bid.bind(*p_38_c0_ddr4_s_axi_bid);
        p_38_c0_ddr4_s_axi_bid->set_sv_netview_offsetfromdp(10093080);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_38_c0_ddr4_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_38->c0_ddr4_s_axi_bresp.bind(*p_38_c0_ddr4_s_axi_bresp);
        p_38_c0_ddr4_s_axi_bresp->set_sv_netview_offsetfromdp(10093136);
        xsim_sc_channel<0, bool > *p_38_c0_ddr4_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_38->c0_ddr4_s_axi_bvalid.bind(*p_38_c0_ddr4_s_axi_bvalid);
        p_38_c0_ddr4_s_axi_bvalid->set_sv_netview_offsetfromdp(10093192);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_38_c0_ddr4_s_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_38->c0_ddr4_s_axi_arid.bind(*p_38_c0_ddr4_s_axi_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_38_c0_ddr4_s_axi_arid);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_38_c0_ddr4_s_axi_araddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_38->c0_ddr4_s_axi_araddr.bind(*p_38_c0_ddr4_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_38_c0_ddr4_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_38_c0_ddr4_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_38->c0_ddr4_s_axi_arlen.bind(*p_38_c0_ddr4_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_38_c0_ddr4_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_38_c0_ddr4_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_38->c0_ddr4_s_axi_arsize.bind(*p_38_c0_ddr4_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_38_c0_ddr4_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_38_c0_ddr4_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_38->c0_ddr4_s_axi_arburst.bind(*p_38_c0_ddr4_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_38_c0_ddr4_s_axi_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_38_c0_ddr4_s_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_38->c0_ddr4_s_axi_arlock.bind(*p_38_c0_ddr4_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_38_c0_ddr4_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_38_c0_ddr4_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_38->c0_ddr4_s_axi_arcache.bind(*p_38_c0_ddr4_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_38_c0_ddr4_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_38_c0_ddr4_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_38->c0_ddr4_s_axi_arprot.bind(*p_38_c0_ddr4_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_38_c0_ddr4_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_38_c0_ddr4_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_38->c0_ddr4_s_axi_arqos.bind(*p_38_c0_ddr4_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_38_c0_ddr4_s_axi_arqos);
        xsim_sc_channel<0, bool > *p_38_c0_ddr4_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_38->c0_ddr4_s_axi_arvalid.bind(*p_38_c0_ddr4_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_38_c0_ddr4_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_38_c0_ddr4_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_38->c0_ddr4_s_axi_arready.bind(*p_38_c0_ddr4_s_axi_arready);
        p_38_c0_ddr4_s_axi_arready->set_sv_netview_offsetfromdp(10093808);
        xsim_sc_channel<0, bool > *p_38_c0_ddr4_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_38->c0_ddr4_s_axi_rready.bind(*p_38_c0_ddr4_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_38_c0_ddr4_s_axi_rready);
        xsim_sc_channel<0, bool > *p_38_c0_ddr4_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_38->c0_ddr4_s_axi_rlast.bind(*p_38_c0_ddr4_s_axi_rlast);
        p_38_c0_ddr4_s_axi_rlast->set_sv_netview_offsetfromdp(10093920);
        xsim_sc_channel<0, bool > *p_38_c0_ddr4_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_38->c0_ddr4_s_axi_rvalid.bind(*p_38_c0_ddr4_s_axi_rvalid);
        p_38_c0_ddr4_s_axi_rvalid->set_sv_netview_offsetfromdp(10093976);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_38_c0_ddr4_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_38->c0_ddr4_s_axi_rresp.bind(*p_38_c0_ddr4_s_axi_rresp);
        p_38_c0_ddr4_s_axi_rresp->set_sv_netview_offsetfromdp(10094032);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_38_c0_ddr4_s_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_38->c0_ddr4_s_axi_rid.bind(*p_38_c0_ddr4_s_axi_rid);
        p_38_c0_ddr4_s_axi_rid->set_sv_netview_offsetfromdp(10094088);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_38_c0_ddr4_s_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_38->c0_ddr4_s_axi_rdata.bind(*p_38_c0_ddr4_s_axi_rdata);
        p_38_c0_ddr4_s_axi_rdata->set_sv_netview_offsetfromdp(10094144);
        xsim_sc_channel<0, bool > *p_38_addn_ui_clkout1 = new xsim_sc_channel<0, bool >();
        sc_inst_38->addn_ui_clkout1.bind(*p_38_addn_ui_clkout1);
        p_38_addn_ui_clkout1->set_sv_netview_offsetfromdp(10094200);
        xsim_sc_channel<0, bool > *p_38_sys_rst = new xsim_sc_channel<0, bool >();
        sc_inst_38->sys_rst.bind(*p_38_sys_rst);
        (*_glb_hdl_sc_channel_map).push_back(p_38_sys_rst);
        sc_inst_39 = new bd_d216_ddr4_mem00_ctrl_cc_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.memory.ddr4_mem00_ctrl_cc");
        sc_inst_39->xsim_set_dbg_index(2841);
        xsim_sc_channel<0, bool > *p_39_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_39->s_axi_aclk.bind(*p_39_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_39_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_39_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_39->s_axi_aresetn.bind(*p_39_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_39_s_axi_aresetn);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_39_s_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_39->s_axi_awaddr.bind(*p_39_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_39_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_39_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_39->s_axi_awprot.bind(*p_39_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_39_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_39_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->s_axi_awvalid.bind(*p_39_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_39_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_39_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_39->s_axi_awready.bind(*p_39_s_axi_awready);
        p_39_s_axi_awready->set_sv_netview_offsetfromdp(10094640);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_39_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_39->s_axi_wdata.bind(*p_39_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_39_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_39_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_39->s_axi_wstrb.bind(*p_39_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_39_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_39_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->s_axi_wvalid.bind(*p_39_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_39_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_39_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_39->s_axi_wready.bind(*p_39_s_axi_wready);
        p_39_s_axi_wready->set_sv_netview_offsetfromdp(10094864);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_39_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_39->s_axi_bresp.bind(*p_39_s_axi_bresp);
        p_39_s_axi_bresp->set_sv_netview_offsetfromdp(10094920);
        xsim_sc_channel<0, bool > *p_39_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->s_axi_bvalid.bind(*p_39_s_axi_bvalid);
        p_39_s_axi_bvalid->set_sv_netview_offsetfromdp(10094976);
        xsim_sc_channel<0, bool > *p_39_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_39->s_axi_bready.bind(*p_39_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_39_s_axi_bready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_39_s_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_39->s_axi_araddr.bind(*p_39_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_39_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_39_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_39->s_axi_arprot.bind(*p_39_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_39_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_39_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->s_axi_arvalid.bind(*p_39_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_39_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_39_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_39->s_axi_arready.bind(*p_39_s_axi_arready);
        p_39_s_axi_arready->set_sv_netview_offsetfromdp(10095256);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_39_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_39->s_axi_rdata.bind(*p_39_s_axi_rdata);
        p_39_s_axi_rdata->set_sv_netview_offsetfromdp(10095312);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_39_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_39->s_axi_rresp.bind(*p_39_s_axi_rresp);
        p_39_s_axi_rresp->set_sv_netview_offsetfromdp(10095368);
        xsim_sc_channel<0, bool > *p_39_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->s_axi_rvalid.bind(*p_39_s_axi_rvalid);
        p_39_s_axi_rvalid->set_sv_netview_offsetfromdp(10095424);
        xsim_sc_channel<0, bool > *p_39_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_39->s_axi_rready.bind(*p_39_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_39_s_axi_rready);
        xsim_sc_channel<0, bool > *p_39_m_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_39->m_axi_aclk.bind(*p_39_m_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_39_m_axi_aclk);
        xsim_sc_channel<0, bool > *p_39_m_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_39->m_axi_aresetn.bind(*p_39_m_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_39_m_axi_aresetn);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_39_m_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_39->m_axi_awaddr.bind(*p_39_m_axi_awaddr);
        p_39_m_axi_awaddr->set_sv_netview_offsetfromdp(10095648);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_39_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_39->m_axi_awprot.bind(*p_39_m_axi_awprot);
        p_39_m_axi_awprot->set_sv_netview_offsetfromdp(10095704);
        xsim_sc_channel<0, bool > *p_39_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->m_axi_awvalid.bind(*p_39_m_axi_awvalid);
        p_39_m_axi_awvalid->set_sv_netview_offsetfromdp(10095760);
        xsim_sc_channel<0, bool > *p_39_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_39->m_axi_awready.bind(*p_39_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_39_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_39_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_39->m_axi_wdata.bind(*p_39_m_axi_wdata);
        p_39_m_axi_wdata->set_sv_netview_offsetfromdp(10095872);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_39_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_39->m_axi_wstrb.bind(*p_39_m_axi_wstrb);
        p_39_m_axi_wstrb->set_sv_netview_offsetfromdp(10095928);
        xsim_sc_channel<0, bool > *p_39_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->m_axi_wvalid.bind(*p_39_m_axi_wvalid);
        p_39_m_axi_wvalid->set_sv_netview_offsetfromdp(10095984);
        xsim_sc_channel<0, bool > *p_39_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_39->m_axi_wready.bind(*p_39_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_39_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_39_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_39->m_axi_bresp.bind(*p_39_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_39_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_39_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->m_axi_bvalid.bind(*p_39_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_39_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_39_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_39->m_axi_bready.bind(*p_39_m_axi_bready);
        p_39_m_axi_bready->set_sv_netview_offsetfromdp(10096208);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_39_m_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_39->m_axi_araddr.bind(*p_39_m_axi_araddr);
        p_39_m_axi_araddr->set_sv_netview_offsetfromdp(10096264);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_39_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_39->m_axi_arprot.bind(*p_39_m_axi_arprot);
        p_39_m_axi_arprot->set_sv_netview_offsetfromdp(10096320);
        xsim_sc_channel<0, bool > *p_39_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->m_axi_arvalid.bind(*p_39_m_axi_arvalid);
        p_39_m_axi_arvalid->set_sv_netview_offsetfromdp(10096376);
        xsim_sc_channel<0, bool > *p_39_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_39->m_axi_arready.bind(*p_39_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_39_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_39_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_39->m_axi_rdata.bind(*p_39_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_39_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_39_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_39->m_axi_rresp.bind(*p_39_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_39_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_39_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->m_axi_rvalid.bind(*p_39_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_39_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_39_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_39->m_axi_rready.bind(*p_39_m_axi_rready);
        p_39_m_axi_rready->set_sv_netview_offsetfromdp(10096656);
        sc_inst_40 = new bd_d216_ddr4_mem01_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.memory.ddr4_mem01");
        sc_inst_40->xsim_set_dbg_index(2842);
        xsim_sc_channel<0, bool > *p_40_c0_init_calib_complete = new xsim_sc_channel<0, bool >();
        sc_inst_40->c0_init_calib_complete.bind(*p_40_c0_init_calib_complete);
        p_40_c0_init_calib_complete->set_sv_netview_offsetfromdp(10096760);
        xsim_sc_channel<0, bool > *p_40_dbg_clk = new xsim_sc_channel<0, bool >();
        sc_inst_40->dbg_clk.bind(*p_40_dbg_clk);
        p_40_dbg_clk->set_sv_netview_offsetfromdp(10096816);
        xsim_sc_channel<0, bool > *p_40_c0_sys_clk_p = new xsim_sc_channel<0, bool >();
        sc_inst_40->c0_sys_clk_p.bind(*p_40_c0_sys_clk_p);
        (*_glb_hdl_sc_channel_map).push_back(p_40_c0_sys_clk_p);
        xsim_sc_channel<0, bool > *p_40_c0_sys_clk_n = new xsim_sc_channel<0, bool >();
        sc_inst_40->c0_sys_clk_n.bind(*p_40_c0_sys_clk_n);
        (*_glb_hdl_sc_channel_map).push_back(p_40_c0_sys_clk_n);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_40_dbg_bus = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_40->dbg_bus.bind(*p_40_dbg_bus);
        p_40_dbg_bus->set_sv_netview_offsetfromdp(10096984);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_40_c0_ddr4_adr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_40->c0_ddr4_adr.bind(*p_40_c0_ddr4_adr);
        p_40_c0_ddr4_adr->set_sv_netview_offsetfromdp(10097040);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_40_c0_ddr4_ba = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_40->c0_ddr4_ba.bind(*p_40_c0_ddr4_ba);
        p_40_c0_ddr4_ba->set_sv_netview_offsetfromdp(10097096);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_40_c0_ddr4_cke = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_40->c0_ddr4_cke.bind(*p_40_c0_ddr4_cke);
        p_40_c0_ddr4_cke->set_sv_netview_offsetfromdp(10097152);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_40_c0_ddr4_cs_n = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_40->c0_ddr4_cs_n.bind(*p_40_c0_ddr4_cs_n);
        p_40_c0_ddr4_cs_n->set_sv_netview_offsetfromdp(10097208);
        xsim_sc_channel<72, sc_dt::sc_bv<72> > *p_40_c0_ddr4_dq = new xsim_sc_channel<72, sc_dt::sc_bv<72> >();
        sc_inst_40->c0_ddr4_dq.bind(*p_40_c0_ddr4_dq);
        p_40_c0_ddr4_dq->set_sv_netview_offsetfromdp(10097264);
        xsim_sc_channel<18, sc_dt::sc_bv<18> > *p_40_c0_ddr4_dqs_c = new xsim_sc_channel<18, sc_dt::sc_bv<18> >();
        sc_inst_40->c0_ddr4_dqs_c.bind(*p_40_c0_ddr4_dqs_c);
        p_40_c0_ddr4_dqs_c->set_sv_netview_offsetfromdp(10097320);
        xsim_sc_channel<18, sc_dt::sc_bv<18> > *p_40_c0_ddr4_dqs_t = new xsim_sc_channel<18, sc_dt::sc_bv<18> >();
        sc_inst_40->c0_ddr4_dqs_t.bind(*p_40_c0_ddr4_dqs_t);
        p_40_c0_ddr4_dqs_t->set_sv_netview_offsetfromdp(10097376);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_40_c0_ddr4_odt = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_40->c0_ddr4_odt.bind(*p_40_c0_ddr4_odt);
        p_40_c0_ddr4_odt->set_sv_netview_offsetfromdp(10097432);
        xsim_sc_channel<0, bool > *p_40_c0_ddr4_parity = new xsim_sc_channel<0, bool >();
        sc_inst_40->c0_ddr4_parity.bind(*p_40_c0_ddr4_parity);
        p_40_c0_ddr4_parity->set_sv_netview_offsetfromdp(10097488);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_40_c0_ddr4_bg = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_40->c0_ddr4_bg.bind(*p_40_c0_ddr4_bg);
        p_40_c0_ddr4_bg->set_sv_netview_offsetfromdp(10097544);
        xsim_sc_channel<0, bool > *p_40_c0_ddr4_reset_n = new xsim_sc_channel<0, bool >();
        sc_inst_40->c0_ddr4_reset_n.bind(*p_40_c0_ddr4_reset_n);
        p_40_c0_ddr4_reset_n->set_sv_netview_offsetfromdp(10097600);
        xsim_sc_channel<0, bool > *p_40_c0_ddr4_act_n = new xsim_sc_channel<0, bool >();
        sc_inst_40->c0_ddr4_act_n.bind(*p_40_c0_ddr4_act_n);
        p_40_c0_ddr4_act_n->set_sv_netview_offsetfromdp(10097656);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_40_c0_ddr4_ck_c = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_40->c0_ddr4_ck_c.bind(*p_40_c0_ddr4_ck_c);
        p_40_c0_ddr4_ck_c->set_sv_netview_offsetfromdp(10097712);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_40_c0_ddr4_ck_t = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_40->c0_ddr4_ck_t.bind(*p_40_c0_ddr4_ck_t);
        p_40_c0_ddr4_ck_t->set_sv_netview_offsetfromdp(10097768);
        xsim_sc_channel<0, bool > *p_40_c0_ddr4_ui_clk = new xsim_sc_channel<0, bool >();
        sc_inst_40->c0_ddr4_ui_clk.bind(*p_40_c0_ddr4_ui_clk);
        p_40_c0_ddr4_ui_clk->set_sv_netview_offsetfromdp(10097824);
        xsim_sc_channel<0, bool > *p_40_c0_ddr4_ui_clk_sync_rst = new xsim_sc_channel<0, bool >();
        sc_inst_40->c0_ddr4_ui_clk_sync_rst.bind(*p_40_c0_ddr4_ui_clk_sync_rst);
        p_40_c0_ddr4_ui_clk_sync_rst->set_sv_netview_offsetfromdp(10097880);
        xsim_sc_channel<0, bool > *p_40_c0_ddr4_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_40->c0_ddr4_aresetn.bind(*p_40_c0_ddr4_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_40_c0_ddr4_aresetn);
        xsim_sc_channel<0, bool > *p_40_c0_ddr4_s_axi_ctrl_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_40->c0_ddr4_s_axi_ctrl_awvalid.bind(*p_40_c0_ddr4_s_axi_ctrl_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_40_c0_ddr4_s_axi_ctrl_awvalid);
        xsim_sc_channel<0, bool > *p_40_c0_ddr4_s_axi_ctrl_awready = new xsim_sc_channel<0, bool >();
        sc_inst_40->c0_ddr4_s_axi_ctrl_awready.bind(*p_40_c0_ddr4_s_axi_ctrl_awready);
        p_40_c0_ddr4_s_axi_ctrl_awready->set_sv_netview_offsetfromdp(10098048);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_40_c0_ddr4_s_axi_ctrl_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_40->c0_ddr4_s_axi_ctrl_awaddr.bind(*p_40_c0_ddr4_s_axi_ctrl_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_40_c0_ddr4_s_axi_ctrl_awaddr);
        xsim_sc_channel<0, bool > *p_40_c0_ddr4_s_axi_ctrl_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_40->c0_ddr4_s_axi_ctrl_wvalid.bind(*p_40_c0_ddr4_s_axi_ctrl_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_40_c0_ddr4_s_axi_ctrl_wvalid);
        xsim_sc_channel<0, bool > *p_40_c0_ddr4_s_axi_ctrl_wready = new xsim_sc_channel<0, bool >();
        sc_inst_40->c0_ddr4_s_axi_ctrl_wready.bind(*p_40_c0_ddr4_s_axi_ctrl_wready);
        p_40_c0_ddr4_s_axi_ctrl_wready->set_sv_netview_offsetfromdp(10098216);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_40_c0_ddr4_s_axi_ctrl_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_40->c0_ddr4_s_axi_ctrl_wdata.bind(*p_40_c0_ddr4_s_axi_ctrl_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_40_c0_ddr4_s_axi_ctrl_wdata);
        xsim_sc_channel<0, bool > *p_40_c0_ddr4_s_axi_ctrl_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_40->c0_ddr4_s_axi_ctrl_bvalid.bind(*p_40_c0_ddr4_s_axi_ctrl_bvalid);
        p_40_c0_ddr4_s_axi_ctrl_bvalid->set_sv_netview_offsetfromdp(10098328);
        xsim_sc_channel<0, bool > *p_40_c0_ddr4_s_axi_ctrl_bready = new xsim_sc_channel<0, bool >();
        sc_inst_40->c0_ddr4_s_axi_ctrl_bready.bind(*p_40_c0_ddr4_s_axi_ctrl_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_40_c0_ddr4_s_axi_ctrl_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_40_c0_ddr4_s_axi_ctrl_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_40->c0_ddr4_s_axi_ctrl_bresp.bind(*p_40_c0_ddr4_s_axi_ctrl_bresp);
        p_40_c0_ddr4_s_axi_ctrl_bresp->set_sv_netview_offsetfromdp(10098440);
        xsim_sc_channel<0, bool > *p_40_c0_ddr4_s_axi_ctrl_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_40->c0_ddr4_s_axi_ctrl_arvalid.bind(*p_40_c0_ddr4_s_axi_ctrl_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_40_c0_ddr4_s_axi_ctrl_arvalid);
        xsim_sc_channel<0, bool > *p_40_c0_ddr4_s_axi_ctrl_arready = new xsim_sc_channel<0, bool >();
        sc_inst_40->c0_ddr4_s_axi_ctrl_arready.bind(*p_40_c0_ddr4_s_axi_ctrl_arready);
        p_40_c0_ddr4_s_axi_ctrl_arready->set_sv_netview_offsetfromdp(10098552);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_40_c0_ddr4_s_axi_ctrl_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_40->c0_ddr4_s_axi_ctrl_araddr.bind(*p_40_c0_ddr4_s_axi_ctrl_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_40_c0_ddr4_s_axi_ctrl_araddr);
        xsim_sc_channel<0, bool > *p_40_c0_ddr4_s_axi_ctrl_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_40->c0_ddr4_s_axi_ctrl_rvalid.bind(*p_40_c0_ddr4_s_axi_ctrl_rvalid);
        p_40_c0_ddr4_s_axi_ctrl_rvalid->set_sv_netview_offsetfromdp(10098664);
        xsim_sc_channel<0, bool > *p_40_c0_ddr4_s_axi_ctrl_rready = new xsim_sc_channel<0, bool >();
        sc_inst_40->c0_ddr4_s_axi_ctrl_rready.bind(*p_40_c0_ddr4_s_axi_ctrl_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_40_c0_ddr4_s_axi_ctrl_rready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_40_c0_ddr4_s_axi_ctrl_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_40->c0_ddr4_s_axi_ctrl_rdata.bind(*p_40_c0_ddr4_s_axi_ctrl_rdata);
        p_40_c0_ddr4_s_axi_ctrl_rdata->set_sv_netview_offsetfromdp(10098776);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_40_c0_ddr4_s_axi_ctrl_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_40->c0_ddr4_s_axi_ctrl_rresp.bind(*p_40_c0_ddr4_s_axi_ctrl_rresp);
        p_40_c0_ddr4_s_axi_ctrl_rresp->set_sv_netview_offsetfromdp(10098832);
        xsim_sc_channel<0, bool > *p_40_c0_ddr4_interrupt = new xsim_sc_channel<0, bool >();
        sc_inst_40->c0_ddr4_interrupt.bind(*p_40_c0_ddr4_interrupt);
        p_40_c0_ddr4_interrupt->set_sv_netview_offsetfromdp(10098888);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_40_c0_ddr4_s_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_40->c0_ddr4_s_axi_awid.bind(*p_40_c0_ddr4_s_axi_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_40_c0_ddr4_s_axi_awid);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_40_c0_ddr4_s_axi_awaddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_40->c0_ddr4_s_axi_awaddr.bind(*p_40_c0_ddr4_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_40_c0_ddr4_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_40_c0_ddr4_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_40->c0_ddr4_s_axi_awlen.bind(*p_40_c0_ddr4_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_40_c0_ddr4_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_40_c0_ddr4_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_40->c0_ddr4_s_axi_awsize.bind(*p_40_c0_ddr4_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_40_c0_ddr4_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_40_c0_ddr4_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_40->c0_ddr4_s_axi_awburst.bind(*p_40_c0_ddr4_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_40_c0_ddr4_s_axi_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_40_c0_ddr4_s_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_40->c0_ddr4_s_axi_awlock.bind(*p_40_c0_ddr4_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_40_c0_ddr4_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_40_c0_ddr4_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_40->c0_ddr4_s_axi_awcache.bind(*p_40_c0_ddr4_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_40_c0_ddr4_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_40_c0_ddr4_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_40->c0_ddr4_s_axi_awprot.bind(*p_40_c0_ddr4_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_40_c0_ddr4_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_40_c0_ddr4_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_40->c0_ddr4_s_axi_awqos.bind(*p_40_c0_ddr4_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_40_c0_ddr4_s_axi_awqos);
        xsim_sc_channel<0, bool > *p_40_c0_ddr4_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_40->c0_ddr4_s_axi_awvalid.bind(*p_40_c0_ddr4_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_40_c0_ddr4_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_40_c0_ddr4_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_40->c0_ddr4_s_axi_awready.bind(*p_40_c0_ddr4_s_axi_awready);
        p_40_c0_ddr4_s_axi_awready->set_sv_netview_offsetfromdp(10099504);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_40_c0_ddr4_s_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_40->c0_ddr4_s_axi_wdata.bind(*p_40_c0_ddr4_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_40_c0_ddr4_s_axi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_40_c0_ddr4_s_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_40->c0_ddr4_s_axi_wstrb.bind(*p_40_c0_ddr4_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_40_c0_ddr4_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_40_c0_ddr4_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_40->c0_ddr4_s_axi_wlast.bind(*p_40_c0_ddr4_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_40_c0_ddr4_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_40_c0_ddr4_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_40->c0_ddr4_s_axi_wvalid.bind(*p_40_c0_ddr4_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_40_c0_ddr4_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_40_c0_ddr4_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_40->c0_ddr4_s_axi_wready.bind(*p_40_c0_ddr4_s_axi_wready);
        p_40_c0_ddr4_s_axi_wready->set_sv_netview_offsetfromdp(10099784);
        xsim_sc_channel<0, bool > *p_40_c0_ddr4_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_40->c0_ddr4_s_axi_bready.bind(*p_40_c0_ddr4_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_40_c0_ddr4_s_axi_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_40_c0_ddr4_s_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_40->c0_ddr4_s_axi_bid.bind(*p_40_c0_ddr4_s_axi_bid);
        p_40_c0_ddr4_s_axi_bid->set_sv_netview_offsetfromdp(10099896);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_40_c0_ddr4_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_40->c0_ddr4_s_axi_bresp.bind(*p_40_c0_ddr4_s_axi_bresp);
        p_40_c0_ddr4_s_axi_bresp->set_sv_netview_offsetfromdp(10099952);
        xsim_sc_channel<0, bool > *p_40_c0_ddr4_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_40->c0_ddr4_s_axi_bvalid.bind(*p_40_c0_ddr4_s_axi_bvalid);
        p_40_c0_ddr4_s_axi_bvalid->set_sv_netview_offsetfromdp(10100008);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_40_c0_ddr4_s_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_40->c0_ddr4_s_axi_arid.bind(*p_40_c0_ddr4_s_axi_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_40_c0_ddr4_s_axi_arid);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_40_c0_ddr4_s_axi_araddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_40->c0_ddr4_s_axi_araddr.bind(*p_40_c0_ddr4_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_40_c0_ddr4_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_40_c0_ddr4_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_40->c0_ddr4_s_axi_arlen.bind(*p_40_c0_ddr4_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_40_c0_ddr4_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_40_c0_ddr4_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_40->c0_ddr4_s_axi_arsize.bind(*p_40_c0_ddr4_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_40_c0_ddr4_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_40_c0_ddr4_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_40->c0_ddr4_s_axi_arburst.bind(*p_40_c0_ddr4_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_40_c0_ddr4_s_axi_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_40_c0_ddr4_s_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_40->c0_ddr4_s_axi_arlock.bind(*p_40_c0_ddr4_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_40_c0_ddr4_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_40_c0_ddr4_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_40->c0_ddr4_s_axi_arcache.bind(*p_40_c0_ddr4_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_40_c0_ddr4_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_40_c0_ddr4_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_40->c0_ddr4_s_axi_arprot.bind(*p_40_c0_ddr4_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_40_c0_ddr4_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_40_c0_ddr4_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_40->c0_ddr4_s_axi_arqos.bind(*p_40_c0_ddr4_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_40_c0_ddr4_s_axi_arqos);
        xsim_sc_channel<0, bool > *p_40_c0_ddr4_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_40->c0_ddr4_s_axi_arvalid.bind(*p_40_c0_ddr4_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_40_c0_ddr4_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_40_c0_ddr4_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_40->c0_ddr4_s_axi_arready.bind(*p_40_c0_ddr4_s_axi_arready);
        p_40_c0_ddr4_s_axi_arready->set_sv_netview_offsetfromdp(10100624);
        xsim_sc_channel<0, bool > *p_40_c0_ddr4_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_40->c0_ddr4_s_axi_rready.bind(*p_40_c0_ddr4_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_40_c0_ddr4_s_axi_rready);
        xsim_sc_channel<0, bool > *p_40_c0_ddr4_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_40->c0_ddr4_s_axi_rlast.bind(*p_40_c0_ddr4_s_axi_rlast);
        p_40_c0_ddr4_s_axi_rlast->set_sv_netview_offsetfromdp(10100736);
        xsim_sc_channel<0, bool > *p_40_c0_ddr4_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_40->c0_ddr4_s_axi_rvalid.bind(*p_40_c0_ddr4_s_axi_rvalid);
        p_40_c0_ddr4_s_axi_rvalid->set_sv_netview_offsetfromdp(10100792);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_40_c0_ddr4_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_40->c0_ddr4_s_axi_rresp.bind(*p_40_c0_ddr4_s_axi_rresp);
        p_40_c0_ddr4_s_axi_rresp->set_sv_netview_offsetfromdp(10100848);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_40_c0_ddr4_s_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_40->c0_ddr4_s_axi_rid.bind(*p_40_c0_ddr4_s_axi_rid);
        p_40_c0_ddr4_s_axi_rid->set_sv_netview_offsetfromdp(10100904);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_40_c0_ddr4_s_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_40->c0_ddr4_s_axi_rdata.bind(*p_40_c0_ddr4_s_axi_rdata);
        p_40_c0_ddr4_s_axi_rdata->set_sv_netview_offsetfromdp(10100960);
        xsim_sc_channel<0, bool > *p_40_addn_ui_clkout1 = new xsim_sc_channel<0, bool >();
        sc_inst_40->addn_ui_clkout1.bind(*p_40_addn_ui_clkout1);
        p_40_addn_ui_clkout1->set_sv_netview_offsetfromdp(10101016);
        xsim_sc_channel<0, bool > *p_40_sys_rst = new xsim_sc_channel<0, bool >();
        sc_inst_40->sys_rst.bind(*p_40_sys_rst);
        (*_glb_hdl_sc_channel_map).push_back(p_40_sys_rst);
        sc_inst_41 = new bd_d216_ddr4_mem01_ctrl_cc_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.memory.ddr4_mem01_ctrl_cc");
        sc_inst_41->xsim_set_dbg_index(2843);
        xsim_sc_channel<0, bool > *p_41_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_41->s_axi_aclk.bind(*p_41_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_41_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_41_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_41->s_axi_aresetn.bind(*p_41_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_41_s_axi_aresetn);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_41_s_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_41->s_axi_awaddr.bind(*p_41_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_41_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_41_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_41->s_axi_awprot.bind(*p_41_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_41_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_41_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_41->s_axi_awvalid.bind(*p_41_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_41_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_41_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_41->s_axi_awready.bind(*p_41_s_axi_awready);
        p_41_s_axi_awready->set_sv_netview_offsetfromdp(10101456);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_41_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_41->s_axi_wdata.bind(*p_41_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_41_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_41_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_41->s_axi_wstrb.bind(*p_41_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_41_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_41_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_41->s_axi_wvalid.bind(*p_41_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_41_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_41_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_41->s_axi_wready.bind(*p_41_s_axi_wready);
        p_41_s_axi_wready->set_sv_netview_offsetfromdp(10101680);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_41_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_41->s_axi_bresp.bind(*p_41_s_axi_bresp);
        p_41_s_axi_bresp->set_sv_netview_offsetfromdp(10101736);
        xsim_sc_channel<0, bool > *p_41_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_41->s_axi_bvalid.bind(*p_41_s_axi_bvalid);
        p_41_s_axi_bvalid->set_sv_netview_offsetfromdp(10101792);
        xsim_sc_channel<0, bool > *p_41_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_41->s_axi_bready.bind(*p_41_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_41_s_axi_bready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_41_s_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_41->s_axi_araddr.bind(*p_41_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_41_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_41_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_41->s_axi_arprot.bind(*p_41_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_41_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_41_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_41->s_axi_arvalid.bind(*p_41_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_41_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_41_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_41->s_axi_arready.bind(*p_41_s_axi_arready);
        p_41_s_axi_arready->set_sv_netview_offsetfromdp(10102072);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_41_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_41->s_axi_rdata.bind(*p_41_s_axi_rdata);
        p_41_s_axi_rdata->set_sv_netview_offsetfromdp(10102128);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_41_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_41->s_axi_rresp.bind(*p_41_s_axi_rresp);
        p_41_s_axi_rresp->set_sv_netview_offsetfromdp(10102184);
        xsim_sc_channel<0, bool > *p_41_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_41->s_axi_rvalid.bind(*p_41_s_axi_rvalid);
        p_41_s_axi_rvalid->set_sv_netview_offsetfromdp(10102240);
        xsim_sc_channel<0, bool > *p_41_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_41->s_axi_rready.bind(*p_41_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_41_s_axi_rready);
        xsim_sc_channel<0, bool > *p_41_m_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_41->m_axi_aclk.bind(*p_41_m_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_41_m_axi_aclk);
        xsim_sc_channel<0, bool > *p_41_m_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_41->m_axi_aresetn.bind(*p_41_m_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_41_m_axi_aresetn);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_41_m_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_41->m_axi_awaddr.bind(*p_41_m_axi_awaddr);
        p_41_m_axi_awaddr->set_sv_netview_offsetfromdp(10102464);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_41_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_41->m_axi_awprot.bind(*p_41_m_axi_awprot);
        p_41_m_axi_awprot->set_sv_netview_offsetfromdp(10102520);
        xsim_sc_channel<0, bool > *p_41_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_41->m_axi_awvalid.bind(*p_41_m_axi_awvalid);
        p_41_m_axi_awvalid->set_sv_netview_offsetfromdp(10102576);
        xsim_sc_channel<0, bool > *p_41_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_41->m_axi_awready.bind(*p_41_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_41_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_41_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_41->m_axi_wdata.bind(*p_41_m_axi_wdata);
        p_41_m_axi_wdata->set_sv_netview_offsetfromdp(10102688);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_41_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_41->m_axi_wstrb.bind(*p_41_m_axi_wstrb);
        p_41_m_axi_wstrb->set_sv_netview_offsetfromdp(10102744);
        xsim_sc_channel<0, bool > *p_41_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_41->m_axi_wvalid.bind(*p_41_m_axi_wvalid);
        p_41_m_axi_wvalid->set_sv_netview_offsetfromdp(10102800);
        xsim_sc_channel<0, bool > *p_41_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_41->m_axi_wready.bind(*p_41_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_41_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_41_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_41->m_axi_bresp.bind(*p_41_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_41_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_41_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_41->m_axi_bvalid.bind(*p_41_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_41_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_41_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_41->m_axi_bready.bind(*p_41_m_axi_bready);
        p_41_m_axi_bready->set_sv_netview_offsetfromdp(10103024);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_41_m_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_41->m_axi_araddr.bind(*p_41_m_axi_araddr);
        p_41_m_axi_araddr->set_sv_netview_offsetfromdp(10103080);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_41_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_41->m_axi_arprot.bind(*p_41_m_axi_arprot);
        p_41_m_axi_arprot->set_sv_netview_offsetfromdp(10103136);
        xsim_sc_channel<0, bool > *p_41_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_41->m_axi_arvalid.bind(*p_41_m_axi_arvalid);
        p_41_m_axi_arvalid->set_sv_netview_offsetfromdp(10103192);
        xsim_sc_channel<0, bool > *p_41_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_41->m_axi_arready.bind(*p_41_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_41_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_41_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_41->m_axi_rdata.bind(*p_41_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_41_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_41_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_41->m_axi_rresp.bind(*p_41_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_41_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_41_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_41->m_axi_rvalid.bind(*p_41_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_41_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_41_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_41->m_axi_rready.bind(*p_41_m_axi_rready);
        p_41_m_axi_rready->set_sv_netview_offsetfromdp(10103472);
        sc_inst_42 = new bd_d216_interconnect_ddrmem_ctrl_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.memory.interconnect_ddrmem_ctrl");
        sc_inst_42->xsim_set_dbg_index(2844);
        xsim_sc_channel<0, bool > *p_42_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_42->aclk.bind(*p_42_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_42_aclk);
        xsim_sc_channel<0, bool > *p_42_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_42->aresetn.bind(*p_42_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_42_aresetn);
        xsim_sc_channel<31, sc_dt::sc_bv<31> > *p_42_s_axi_awaddr = new xsim_sc_channel<31, sc_dt::sc_bv<31> >();
        sc_inst_42->s_axi_awaddr.bind(*p_42_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_42_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_42_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_42->s_axi_awprot.bind(*p_42_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_42_s_axi_awprot);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_42_s_axi_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_42->s_axi_awvalid.bind(*p_42_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_42_s_axi_awvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_42_s_axi_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_42->s_axi_awready.bind(*p_42_s_axi_awready);
        p_42_s_axi_awready->set_sv_netview_offsetfromdp(10103856);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_42_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_42->s_axi_wdata.bind(*p_42_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_42_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_42_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_42->s_axi_wstrb.bind(*p_42_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_42_s_axi_wstrb);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_42_s_axi_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_42->s_axi_wvalid.bind(*p_42_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_42_s_axi_wvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_42_s_axi_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_42->s_axi_wready.bind(*p_42_s_axi_wready);
        p_42_s_axi_wready->set_sv_netview_offsetfromdp(10104080);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_42_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_42->s_axi_bresp.bind(*p_42_s_axi_bresp);
        p_42_s_axi_bresp->set_sv_netview_offsetfromdp(10104136);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_42_s_axi_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_42->s_axi_bvalid.bind(*p_42_s_axi_bvalid);
        p_42_s_axi_bvalid->set_sv_netview_offsetfromdp(10104192);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_42_s_axi_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_42->s_axi_bready.bind(*p_42_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_42_s_axi_bready);
        xsim_sc_channel<31, sc_dt::sc_bv<31> > *p_42_s_axi_araddr = new xsim_sc_channel<31, sc_dt::sc_bv<31> >();
        sc_inst_42->s_axi_araddr.bind(*p_42_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_42_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_42_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_42->s_axi_arprot.bind(*p_42_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_42_s_axi_arprot);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_42_s_axi_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_42->s_axi_arvalid.bind(*p_42_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_42_s_axi_arvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_42_s_axi_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_42->s_axi_arready.bind(*p_42_s_axi_arready);
        p_42_s_axi_arready->set_sv_netview_offsetfromdp(10104472);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_42_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_42->s_axi_rdata.bind(*p_42_s_axi_rdata);
        p_42_s_axi_rdata->set_sv_netview_offsetfromdp(10104528);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_42_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_42->s_axi_rresp.bind(*p_42_s_axi_rresp);
        p_42_s_axi_rresp->set_sv_netview_offsetfromdp(10104584);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_42_s_axi_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_42->s_axi_rvalid.bind(*p_42_s_axi_rvalid);
        p_42_s_axi_rvalid->set_sv_netview_offsetfromdp(10104640);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_42_s_axi_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_42->s_axi_rready.bind(*p_42_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_42_s_axi_rready);
        xsim_sc_channel<62, sc_dt::sc_bv<62> > *p_42_m_axi_awaddr = new xsim_sc_channel<62, sc_dt::sc_bv<62> >();
        sc_inst_42->m_axi_awaddr.bind(*p_42_m_axi_awaddr);
        p_42_m_axi_awaddr->set_sv_netview_offsetfromdp(10104752);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_42_m_axi_awprot = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_42->m_axi_awprot.bind(*p_42_m_axi_awprot);
        p_42_m_axi_awprot->set_sv_netview_offsetfromdp(10104808);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_42_m_axi_awvalid = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_42->m_axi_awvalid.bind(*p_42_m_axi_awvalid);
        p_42_m_axi_awvalid->set_sv_netview_offsetfromdp(10104864);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_42_m_axi_awready = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_42->m_axi_awready.bind(*p_42_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_42_m_axi_awready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_42_m_axi_wdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_42->m_axi_wdata.bind(*p_42_m_axi_wdata);
        p_42_m_axi_wdata->set_sv_netview_offsetfromdp(10104976);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_42_m_axi_wstrb = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_42->m_axi_wstrb.bind(*p_42_m_axi_wstrb);
        p_42_m_axi_wstrb->set_sv_netview_offsetfromdp(10105032);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_42_m_axi_wvalid = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_42->m_axi_wvalid.bind(*p_42_m_axi_wvalid);
        p_42_m_axi_wvalid->set_sv_netview_offsetfromdp(10105088);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_42_m_axi_wready = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_42->m_axi_wready.bind(*p_42_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_42_m_axi_wready);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_42_m_axi_bresp = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_42->m_axi_bresp.bind(*p_42_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_42_m_axi_bresp);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_42_m_axi_bvalid = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_42->m_axi_bvalid.bind(*p_42_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_42_m_axi_bvalid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_42_m_axi_bready = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_42->m_axi_bready.bind(*p_42_m_axi_bready);
        p_42_m_axi_bready->set_sv_netview_offsetfromdp(10105312);
        xsim_sc_channel<62, sc_dt::sc_bv<62> > *p_42_m_axi_araddr = new xsim_sc_channel<62, sc_dt::sc_bv<62> >();
        sc_inst_42->m_axi_araddr.bind(*p_42_m_axi_araddr);
        p_42_m_axi_araddr->set_sv_netview_offsetfromdp(10105368);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_42_m_axi_arprot = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_42->m_axi_arprot.bind(*p_42_m_axi_arprot);
        p_42_m_axi_arprot->set_sv_netview_offsetfromdp(10105424);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_42_m_axi_arvalid = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_42->m_axi_arvalid.bind(*p_42_m_axi_arvalid);
        p_42_m_axi_arvalid->set_sv_netview_offsetfromdp(10105480);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_42_m_axi_arready = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_42->m_axi_arready.bind(*p_42_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_42_m_axi_arready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_42_m_axi_rdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_42->m_axi_rdata.bind(*p_42_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_42_m_axi_rdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_42_m_axi_rresp = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_42->m_axi_rresp.bind(*p_42_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_42_m_axi_rresp);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_42_m_axi_rvalid = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_42->m_axi_rvalid.bind(*p_42_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_42_m_axi_rvalid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_42_m_axi_rready = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_42->m_axi_rready.bind(*p_42_m_axi_rready);
        p_42_m_axi_rready->set_sv_netview_offsetfromdp(10105760);
        sc_inst_43 = new bd_d216_plram_mem00_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.memory.plram_mem00");
        sc_inst_43->xsim_set_dbg_index(2845);
        xsim_sc_channel<0, bool > *p_43_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_43->s_axi_aclk.bind(*p_43_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_43_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_43_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_43->s_axi_aresetn.bind(*p_43_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_43_s_axi_aresetn);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_43_s_axi_awaddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_43->s_axi_awaddr.bind(*p_43_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_43_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_43_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_43->s_axi_awlen.bind(*p_43_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_43_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_43_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_43->s_axi_awsize.bind(*p_43_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_43_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_43_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_43->s_axi_awburst.bind(*p_43_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_43_s_axi_awburst);
        xsim_sc_channel<0, bool > *p_43_s_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_43->s_axi_awlock.bind(*p_43_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_43_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_43_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_43->s_axi_awcache.bind(*p_43_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_43_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_43_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_43->s_axi_awprot.bind(*p_43_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_43_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_43_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_43->s_axi_awvalid.bind(*p_43_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_43_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_43_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_43->s_axi_awready.bind(*p_43_s_axi_awready);
        p_43_s_axi_awready->set_sv_netview_offsetfromdp(10106424);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_43_s_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_43->s_axi_wdata.bind(*p_43_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_43_s_axi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_43_s_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_43->s_axi_wstrb.bind(*p_43_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_43_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_43_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_43->s_axi_wlast.bind(*p_43_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_43_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_43_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_43->s_axi_wvalid.bind(*p_43_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_43_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_43_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_43->s_axi_wready.bind(*p_43_s_axi_wready);
        p_43_s_axi_wready->set_sv_netview_offsetfromdp(10106704);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_43_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_43->s_axi_bresp.bind(*p_43_s_axi_bresp);
        p_43_s_axi_bresp->set_sv_netview_offsetfromdp(10106760);
        xsim_sc_channel<0, bool > *p_43_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_43->s_axi_bvalid.bind(*p_43_s_axi_bvalid);
        p_43_s_axi_bvalid->set_sv_netview_offsetfromdp(10106816);
        xsim_sc_channel<0, bool > *p_43_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_43->s_axi_bready.bind(*p_43_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_43_s_axi_bready);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_43_s_axi_araddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_43->s_axi_araddr.bind(*p_43_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_43_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_43_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_43->s_axi_arlen.bind(*p_43_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_43_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_43_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_43->s_axi_arsize.bind(*p_43_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_43_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_43_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_43->s_axi_arburst.bind(*p_43_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_43_s_axi_arburst);
        xsim_sc_channel<0, bool > *p_43_s_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_43->s_axi_arlock.bind(*p_43_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_43_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_43_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_43->s_axi_arcache.bind(*p_43_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_43_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_43_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_43->s_axi_arprot.bind(*p_43_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_43_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_43_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_43->s_axi_arvalid.bind(*p_43_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_43_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_43_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_43->s_axi_arready.bind(*p_43_s_axi_arready);
        p_43_s_axi_arready->set_sv_netview_offsetfromdp(10107376);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_43_s_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_43->s_axi_rdata.bind(*p_43_s_axi_rdata);
        p_43_s_axi_rdata->set_sv_netview_offsetfromdp(10107432);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_43_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_43->s_axi_rresp.bind(*p_43_s_axi_rresp);
        p_43_s_axi_rresp->set_sv_netview_offsetfromdp(10107488);
        xsim_sc_channel<0, bool > *p_43_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_43->s_axi_rlast.bind(*p_43_s_axi_rlast);
        p_43_s_axi_rlast->set_sv_netview_offsetfromdp(10107544);
        xsim_sc_channel<0, bool > *p_43_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_43->s_axi_rvalid.bind(*p_43_s_axi_rvalid);
        p_43_s_axi_rvalid->set_sv_netview_offsetfromdp(10107600);
        xsim_sc_channel<0, bool > *p_43_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_43->s_axi_rready.bind(*p_43_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_43_s_axi_rready);
        xsim_sc_channel<0, bool > *p_43_bram_rst_a = new xsim_sc_channel<0, bool >();
        sc_inst_43->bram_rst_a.bind(*p_43_bram_rst_a);
        p_43_bram_rst_a->set_sv_netview_offsetfromdp(10107712);
        xsim_sc_channel<0, bool > *p_43_bram_clk_a = new xsim_sc_channel<0, bool >();
        sc_inst_43->bram_clk_a.bind(*p_43_bram_clk_a);
        p_43_bram_clk_a->set_sv_netview_offsetfromdp(10107768);
        xsim_sc_channel<0, bool > *p_43_bram_en_a = new xsim_sc_channel<0, bool >();
        sc_inst_43->bram_en_a.bind(*p_43_bram_en_a);
        p_43_bram_en_a->set_sv_netview_offsetfromdp(10107824);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_43_bram_we_a = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_43->bram_we_a.bind(*p_43_bram_we_a);
        p_43_bram_we_a->set_sv_netview_offsetfromdp(10107880);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_43_bram_addr_a = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_43->bram_addr_a.bind(*p_43_bram_addr_a);
        p_43_bram_addr_a->set_sv_netview_offsetfromdp(10107936);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_43_bram_wrdata_a = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_43->bram_wrdata_a.bind(*p_43_bram_wrdata_a);
        p_43_bram_wrdata_a->set_sv_netview_offsetfromdp(10107992);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_43_bram_rddata_a = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_43->bram_rddata_a.bind(*p_43_bram_rddata_a);
        (*_glb_hdl_sc_channel_map).push_back(p_43_bram_rddata_a);
        xsim_sc_channel<0, bool > *p_43_bram_rst_b = new xsim_sc_channel<0, bool >();
        sc_inst_43->bram_rst_b.bind(*p_43_bram_rst_b);
        p_43_bram_rst_b->set_sv_netview_offsetfromdp(10108104);
        xsim_sc_channel<0, bool > *p_43_bram_clk_b = new xsim_sc_channel<0, bool >();
        sc_inst_43->bram_clk_b.bind(*p_43_bram_clk_b);
        p_43_bram_clk_b->set_sv_netview_offsetfromdp(10108160);
        xsim_sc_channel<0, bool > *p_43_bram_en_b = new xsim_sc_channel<0, bool >();
        sc_inst_43->bram_en_b.bind(*p_43_bram_en_b);
        p_43_bram_en_b->set_sv_netview_offsetfromdp(10108216);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_43_bram_we_b = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_43->bram_we_b.bind(*p_43_bram_we_b);
        p_43_bram_we_b->set_sv_netview_offsetfromdp(10108272);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_43_bram_addr_b = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_43->bram_addr_b.bind(*p_43_bram_addr_b);
        p_43_bram_addr_b->set_sv_netview_offsetfromdp(10108328);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_43_bram_wrdata_b = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_43->bram_wrdata_b.bind(*p_43_bram_wrdata_b);
        p_43_bram_wrdata_b->set_sv_netview_offsetfromdp(10108384);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_43_bram_rddata_b = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_43->bram_rddata_b.bind(*p_43_bram_rddata_b);
        (*_glb_hdl_sc_channel_map).push_back(p_43_bram_rddata_b);
        sc_inst_44 = new bd_d216_plram_mem01_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.memory.plram_mem01");
        sc_inst_44->xsim_set_dbg_index(2847);
        xsim_sc_channel<0, bool > *p_44_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_44->s_axi_aclk.bind(*p_44_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_44_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_44_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_44->s_axi_aresetn.bind(*p_44_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_44_s_axi_aresetn);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_44_s_axi_awaddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_44->s_axi_awaddr.bind(*p_44_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_44_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_44_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_44->s_axi_awlen.bind(*p_44_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_44_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_44_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_44->s_axi_awsize.bind(*p_44_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_44_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_44_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_44->s_axi_awburst.bind(*p_44_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_44_s_axi_awburst);
        xsim_sc_channel<0, bool > *p_44_s_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_44->s_axi_awlock.bind(*p_44_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_44_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_44_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_44->s_axi_awcache.bind(*p_44_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_44_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_44_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_44->s_axi_awprot.bind(*p_44_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_44_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_44_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_44->s_axi_awvalid.bind(*p_44_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_44_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_44_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_44->s_axi_awready.bind(*p_44_s_axi_awready);
        p_44_s_axi_awready->set_sv_netview_offsetfromdp(10170224);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_44_s_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_44->s_axi_wdata.bind(*p_44_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_44_s_axi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_44_s_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_44->s_axi_wstrb.bind(*p_44_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_44_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_44_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_44->s_axi_wlast.bind(*p_44_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_44_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_44_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_44->s_axi_wvalid.bind(*p_44_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_44_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_44_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_44->s_axi_wready.bind(*p_44_s_axi_wready);
        p_44_s_axi_wready->set_sv_netview_offsetfromdp(10170504);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_44_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_44->s_axi_bresp.bind(*p_44_s_axi_bresp);
        p_44_s_axi_bresp->set_sv_netview_offsetfromdp(10170560);
        xsim_sc_channel<0, bool > *p_44_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_44->s_axi_bvalid.bind(*p_44_s_axi_bvalid);
        p_44_s_axi_bvalid->set_sv_netview_offsetfromdp(10170616);
        xsim_sc_channel<0, bool > *p_44_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_44->s_axi_bready.bind(*p_44_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_44_s_axi_bready);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_44_s_axi_araddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_44->s_axi_araddr.bind(*p_44_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_44_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_44_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_44->s_axi_arlen.bind(*p_44_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_44_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_44_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_44->s_axi_arsize.bind(*p_44_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_44_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_44_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_44->s_axi_arburst.bind(*p_44_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_44_s_axi_arburst);
        xsim_sc_channel<0, bool > *p_44_s_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_44->s_axi_arlock.bind(*p_44_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_44_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_44_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_44->s_axi_arcache.bind(*p_44_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_44_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_44_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_44->s_axi_arprot.bind(*p_44_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_44_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_44_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_44->s_axi_arvalid.bind(*p_44_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_44_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_44_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_44->s_axi_arready.bind(*p_44_s_axi_arready);
        p_44_s_axi_arready->set_sv_netview_offsetfromdp(10171176);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_44_s_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_44->s_axi_rdata.bind(*p_44_s_axi_rdata);
        p_44_s_axi_rdata->set_sv_netview_offsetfromdp(10171232);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_44_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_44->s_axi_rresp.bind(*p_44_s_axi_rresp);
        p_44_s_axi_rresp->set_sv_netview_offsetfromdp(10171288);
        xsim_sc_channel<0, bool > *p_44_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_44->s_axi_rlast.bind(*p_44_s_axi_rlast);
        p_44_s_axi_rlast->set_sv_netview_offsetfromdp(10171344);
        xsim_sc_channel<0, bool > *p_44_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_44->s_axi_rvalid.bind(*p_44_s_axi_rvalid);
        p_44_s_axi_rvalid->set_sv_netview_offsetfromdp(10171400);
        xsim_sc_channel<0, bool > *p_44_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_44->s_axi_rready.bind(*p_44_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_44_s_axi_rready);
        xsim_sc_channel<0, bool > *p_44_bram_rst_a = new xsim_sc_channel<0, bool >();
        sc_inst_44->bram_rst_a.bind(*p_44_bram_rst_a);
        p_44_bram_rst_a->set_sv_netview_offsetfromdp(10171512);
        xsim_sc_channel<0, bool > *p_44_bram_clk_a = new xsim_sc_channel<0, bool >();
        sc_inst_44->bram_clk_a.bind(*p_44_bram_clk_a);
        p_44_bram_clk_a->set_sv_netview_offsetfromdp(10171568);
        xsim_sc_channel<0, bool > *p_44_bram_en_a = new xsim_sc_channel<0, bool >();
        sc_inst_44->bram_en_a.bind(*p_44_bram_en_a);
        p_44_bram_en_a->set_sv_netview_offsetfromdp(10171624);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_44_bram_we_a = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_44->bram_we_a.bind(*p_44_bram_we_a);
        p_44_bram_we_a->set_sv_netview_offsetfromdp(10171680);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_44_bram_addr_a = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_44->bram_addr_a.bind(*p_44_bram_addr_a);
        p_44_bram_addr_a->set_sv_netview_offsetfromdp(10171736);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_44_bram_wrdata_a = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_44->bram_wrdata_a.bind(*p_44_bram_wrdata_a);
        p_44_bram_wrdata_a->set_sv_netview_offsetfromdp(10171792);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_44_bram_rddata_a = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_44->bram_rddata_a.bind(*p_44_bram_rddata_a);
        (*_glb_hdl_sc_channel_map).push_back(p_44_bram_rddata_a);
        xsim_sc_channel<0, bool > *p_44_bram_rst_b = new xsim_sc_channel<0, bool >();
        sc_inst_44->bram_rst_b.bind(*p_44_bram_rst_b);
        p_44_bram_rst_b->set_sv_netview_offsetfromdp(10171904);
        xsim_sc_channel<0, bool > *p_44_bram_clk_b = new xsim_sc_channel<0, bool >();
        sc_inst_44->bram_clk_b.bind(*p_44_bram_clk_b);
        p_44_bram_clk_b->set_sv_netview_offsetfromdp(10171960);
        xsim_sc_channel<0, bool > *p_44_bram_en_b = new xsim_sc_channel<0, bool >();
        sc_inst_44->bram_en_b.bind(*p_44_bram_en_b);
        p_44_bram_en_b->set_sv_netview_offsetfromdp(10172016);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_44_bram_we_b = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_44->bram_we_b.bind(*p_44_bram_we_b);
        p_44_bram_we_b->set_sv_netview_offsetfromdp(10172072);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_44_bram_addr_b = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_44->bram_addr_b.bind(*p_44_bram_addr_b);
        p_44_bram_addr_b->set_sv_netview_offsetfromdp(10172128);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_44_bram_wrdata_b = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_44->bram_wrdata_b.bind(*p_44_bram_wrdata_b);
        p_44_bram_wrdata_b->set_sv_netview_offsetfromdp(10172184);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_44_bram_rddata_b = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_44->bram_rddata_b.bind(*p_44_bram_rddata_b);
        (*_glb_hdl_sc_channel_map).push_back(p_44_bram_rddata_b);
        sc_inst_45 = new bd_d216_plram_mem02_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.memory.plram_mem02");
        sc_inst_45->xsim_set_dbg_index(2849);
        xsim_sc_channel<0, bool > *p_45_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_45->s_axi_aclk.bind(*p_45_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_45_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_45_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_45->s_axi_aresetn.bind(*p_45_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_45_s_axi_aresetn);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_45_s_axi_awaddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_45->s_axi_awaddr.bind(*p_45_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_45_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_45_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_45->s_axi_awlen.bind(*p_45_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_45_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_45_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_45->s_axi_awsize.bind(*p_45_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_45_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_45_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_45->s_axi_awburst.bind(*p_45_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_45_s_axi_awburst);
        xsim_sc_channel<0, bool > *p_45_s_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_45->s_axi_awlock.bind(*p_45_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_45_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_45_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_45->s_axi_awcache.bind(*p_45_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_45_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_45_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_45->s_axi_awprot.bind(*p_45_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_45_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_45_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->s_axi_awvalid.bind(*p_45_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_45_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_45_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_45->s_axi_awready.bind(*p_45_s_axi_awready);
        p_45_s_axi_awready->set_sv_netview_offsetfromdp(10234024);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_45_s_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_45->s_axi_wdata.bind(*p_45_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_45_s_axi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_45_s_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_45->s_axi_wstrb.bind(*p_45_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_45_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_45_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_45->s_axi_wlast.bind(*p_45_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_45_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_45_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->s_axi_wvalid.bind(*p_45_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_45_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_45_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_45->s_axi_wready.bind(*p_45_s_axi_wready);
        p_45_s_axi_wready->set_sv_netview_offsetfromdp(10234304);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_45_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_45->s_axi_bresp.bind(*p_45_s_axi_bresp);
        p_45_s_axi_bresp->set_sv_netview_offsetfromdp(10234360);
        xsim_sc_channel<0, bool > *p_45_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->s_axi_bvalid.bind(*p_45_s_axi_bvalid);
        p_45_s_axi_bvalid->set_sv_netview_offsetfromdp(10234416);
        xsim_sc_channel<0, bool > *p_45_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_45->s_axi_bready.bind(*p_45_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_45_s_axi_bready);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_45_s_axi_araddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_45->s_axi_araddr.bind(*p_45_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_45_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_45_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_45->s_axi_arlen.bind(*p_45_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_45_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_45_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_45->s_axi_arsize.bind(*p_45_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_45_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_45_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_45->s_axi_arburst.bind(*p_45_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_45_s_axi_arburst);
        xsim_sc_channel<0, bool > *p_45_s_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_45->s_axi_arlock.bind(*p_45_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_45_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_45_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_45->s_axi_arcache.bind(*p_45_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_45_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_45_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_45->s_axi_arprot.bind(*p_45_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_45_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_45_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->s_axi_arvalid.bind(*p_45_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_45_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_45_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_45->s_axi_arready.bind(*p_45_s_axi_arready);
        p_45_s_axi_arready->set_sv_netview_offsetfromdp(10234976);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_45_s_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_45->s_axi_rdata.bind(*p_45_s_axi_rdata);
        p_45_s_axi_rdata->set_sv_netview_offsetfromdp(10235032);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_45_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_45->s_axi_rresp.bind(*p_45_s_axi_rresp);
        p_45_s_axi_rresp->set_sv_netview_offsetfromdp(10235088);
        xsim_sc_channel<0, bool > *p_45_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_45->s_axi_rlast.bind(*p_45_s_axi_rlast);
        p_45_s_axi_rlast->set_sv_netview_offsetfromdp(10235144);
        xsim_sc_channel<0, bool > *p_45_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->s_axi_rvalid.bind(*p_45_s_axi_rvalid);
        p_45_s_axi_rvalid->set_sv_netview_offsetfromdp(10235200);
        xsim_sc_channel<0, bool > *p_45_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_45->s_axi_rready.bind(*p_45_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_45_s_axi_rready);
        xsim_sc_channel<0, bool > *p_45_bram_rst_a = new xsim_sc_channel<0, bool >();
        sc_inst_45->bram_rst_a.bind(*p_45_bram_rst_a);
        p_45_bram_rst_a->set_sv_netview_offsetfromdp(10235312);
        xsim_sc_channel<0, bool > *p_45_bram_clk_a = new xsim_sc_channel<0, bool >();
        sc_inst_45->bram_clk_a.bind(*p_45_bram_clk_a);
        p_45_bram_clk_a->set_sv_netview_offsetfromdp(10235368);
        xsim_sc_channel<0, bool > *p_45_bram_en_a = new xsim_sc_channel<0, bool >();
        sc_inst_45->bram_en_a.bind(*p_45_bram_en_a);
        p_45_bram_en_a->set_sv_netview_offsetfromdp(10235424);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_45_bram_we_a = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_45->bram_we_a.bind(*p_45_bram_we_a);
        p_45_bram_we_a->set_sv_netview_offsetfromdp(10235480);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_45_bram_addr_a = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_45->bram_addr_a.bind(*p_45_bram_addr_a);
        p_45_bram_addr_a->set_sv_netview_offsetfromdp(10235536);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_45_bram_wrdata_a = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_45->bram_wrdata_a.bind(*p_45_bram_wrdata_a);
        p_45_bram_wrdata_a->set_sv_netview_offsetfromdp(10235592);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_45_bram_rddata_a = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_45->bram_rddata_a.bind(*p_45_bram_rddata_a);
        (*_glb_hdl_sc_channel_map).push_back(p_45_bram_rddata_a);
        xsim_sc_channel<0, bool > *p_45_bram_rst_b = new xsim_sc_channel<0, bool >();
        sc_inst_45->bram_rst_b.bind(*p_45_bram_rst_b);
        p_45_bram_rst_b->set_sv_netview_offsetfromdp(10235704);
        xsim_sc_channel<0, bool > *p_45_bram_clk_b = new xsim_sc_channel<0, bool >();
        sc_inst_45->bram_clk_b.bind(*p_45_bram_clk_b);
        p_45_bram_clk_b->set_sv_netview_offsetfromdp(10235760);
        xsim_sc_channel<0, bool > *p_45_bram_en_b = new xsim_sc_channel<0, bool >();
        sc_inst_45->bram_en_b.bind(*p_45_bram_en_b);
        p_45_bram_en_b->set_sv_netview_offsetfromdp(10235816);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_45_bram_we_b = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_45->bram_we_b.bind(*p_45_bram_we_b);
        p_45_bram_we_b->set_sv_netview_offsetfromdp(10235872);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_45_bram_addr_b = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_45->bram_addr_b.bind(*p_45_bram_addr_b);
        p_45_bram_addr_b->set_sv_netview_offsetfromdp(10235928);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_45_bram_wrdata_b = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_45->bram_wrdata_b.bind(*p_45_bram_wrdata_b);
        p_45_bram_wrdata_b->set_sv_netview_offsetfromdp(10235984);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_45_bram_rddata_b = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_45->bram_rddata_b.bind(*p_45_bram_rddata_b);
        (*_glb_hdl_sc_channel_map).push_back(p_45_bram_rddata_b);
        sc_inst_46 = new bd_d216_plram_mem03_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.memory.plram_mem03");
        sc_inst_46->xsim_set_dbg_index(2851);
        xsim_sc_channel<0, bool > *p_46_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_46->s_axi_aclk.bind(*p_46_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_46_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_46->s_axi_aresetn.bind(*p_46_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_aresetn);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_46_s_axi_awaddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_46->s_axi_awaddr.bind(*p_46_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_46_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_46->s_axi_awlen.bind(*p_46_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_46_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_46->s_axi_awsize.bind(*p_46_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_46_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_46->s_axi_awburst.bind(*p_46_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_awburst);
        xsim_sc_channel<0, bool > *p_46_s_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_46->s_axi_awlock.bind(*p_46_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_46_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_46->s_axi_awcache.bind(*p_46_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_46_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_46->s_axi_awprot.bind(*p_46_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_46_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_46->s_axi_awvalid.bind(*p_46_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_46_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_46->s_axi_awready.bind(*p_46_s_axi_awready);
        p_46_s_axi_awready->set_sv_netview_offsetfromdp(10297824);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_46_s_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_46->s_axi_wdata.bind(*p_46_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_46_s_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_46->s_axi_wstrb.bind(*p_46_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_46_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_46->s_axi_wlast.bind(*p_46_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_46_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_46->s_axi_wvalid.bind(*p_46_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_46_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_46->s_axi_wready.bind(*p_46_s_axi_wready);
        p_46_s_axi_wready->set_sv_netview_offsetfromdp(10298104);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_46_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_46->s_axi_bresp.bind(*p_46_s_axi_bresp);
        p_46_s_axi_bresp->set_sv_netview_offsetfromdp(10298160);
        xsim_sc_channel<0, bool > *p_46_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_46->s_axi_bvalid.bind(*p_46_s_axi_bvalid);
        p_46_s_axi_bvalid->set_sv_netview_offsetfromdp(10298216);
        xsim_sc_channel<0, bool > *p_46_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_46->s_axi_bready.bind(*p_46_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_bready);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_46_s_axi_araddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_46->s_axi_araddr.bind(*p_46_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_46_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_46->s_axi_arlen.bind(*p_46_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_46_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_46->s_axi_arsize.bind(*p_46_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_46_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_46->s_axi_arburst.bind(*p_46_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_arburst);
        xsim_sc_channel<0, bool > *p_46_s_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_46->s_axi_arlock.bind(*p_46_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_46_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_46->s_axi_arcache.bind(*p_46_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_46_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_46->s_axi_arprot.bind(*p_46_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_46_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_46->s_axi_arvalid.bind(*p_46_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_46_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_46->s_axi_arready.bind(*p_46_s_axi_arready);
        p_46_s_axi_arready->set_sv_netview_offsetfromdp(10298776);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_46_s_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_46->s_axi_rdata.bind(*p_46_s_axi_rdata);
        p_46_s_axi_rdata->set_sv_netview_offsetfromdp(10298832);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_46_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_46->s_axi_rresp.bind(*p_46_s_axi_rresp);
        p_46_s_axi_rresp->set_sv_netview_offsetfromdp(10298888);
        xsim_sc_channel<0, bool > *p_46_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_46->s_axi_rlast.bind(*p_46_s_axi_rlast);
        p_46_s_axi_rlast->set_sv_netview_offsetfromdp(10298944);
        xsim_sc_channel<0, bool > *p_46_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_46->s_axi_rvalid.bind(*p_46_s_axi_rvalid);
        p_46_s_axi_rvalid->set_sv_netview_offsetfromdp(10299000);
        xsim_sc_channel<0, bool > *p_46_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_46->s_axi_rready.bind(*p_46_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_rready);
        xsim_sc_channel<0, bool > *p_46_bram_rst_a = new xsim_sc_channel<0, bool >();
        sc_inst_46->bram_rst_a.bind(*p_46_bram_rst_a);
        p_46_bram_rst_a->set_sv_netview_offsetfromdp(10299112);
        xsim_sc_channel<0, bool > *p_46_bram_clk_a = new xsim_sc_channel<0, bool >();
        sc_inst_46->bram_clk_a.bind(*p_46_bram_clk_a);
        p_46_bram_clk_a->set_sv_netview_offsetfromdp(10299168);
        xsim_sc_channel<0, bool > *p_46_bram_en_a = new xsim_sc_channel<0, bool >();
        sc_inst_46->bram_en_a.bind(*p_46_bram_en_a);
        p_46_bram_en_a->set_sv_netview_offsetfromdp(10299224);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_46_bram_we_a = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_46->bram_we_a.bind(*p_46_bram_we_a);
        p_46_bram_we_a->set_sv_netview_offsetfromdp(10299280);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_46_bram_addr_a = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_46->bram_addr_a.bind(*p_46_bram_addr_a);
        p_46_bram_addr_a->set_sv_netview_offsetfromdp(10299336);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_46_bram_wrdata_a = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_46->bram_wrdata_a.bind(*p_46_bram_wrdata_a);
        p_46_bram_wrdata_a->set_sv_netview_offsetfromdp(10299392);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_46_bram_rddata_a = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_46->bram_rddata_a.bind(*p_46_bram_rddata_a);
        (*_glb_hdl_sc_channel_map).push_back(p_46_bram_rddata_a);
        xsim_sc_channel<0, bool > *p_46_bram_rst_b = new xsim_sc_channel<0, bool >();
        sc_inst_46->bram_rst_b.bind(*p_46_bram_rst_b);
        p_46_bram_rst_b->set_sv_netview_offsetfromdp(10299504);
        xsim_sc_channel<0, bool > *p_46_bram_clk_b = new xsim_sc_channel<0, bool >();
        sc_inst_46->bram_clk_b.bind(*p_46_bram_clk_b);
        p_46_bram_clk_b->set_sv_netview_offsetfromdp(10299560);
        xsim_sc_channel<0, bool > *p_46_bram_en_b = new xsim_sc_channel<0, bool >();
        sc_inst_46->bram_en_b.bind(*p_46_bram_en_b);
        p_46_bram_en_b->set_sv_netview_offsetfromdp(10299616);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_46_bram_we_b = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_46->bram_we_b.bind(*p_46_bram_we_b);
        p_46_bram_we_b->set_sv_netview_offsetfromdp(10299672);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_46_bram_addr_b = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_46->bram_addr_b.bind(*p_46_bram_addr_b);
        p_46_bram_addr_b->set_sv_netview_offsetfromdp(10299728);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_46_bram_wrdata_b = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_46->bram_wrdata_b.bind(*p_46_bram_wrdata_b);
        p_46_bram_wrdata_b->set_sv_netview_offsetfromdp(10299784);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_46_bram_rddata_b = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_46->bram_rddata_b.bind(*p_46_bram_rddata_b);
        (*_glb_hdl_sc_channel_map).push_back(p_46_bram_rddata_b);
        sc_inst_47 = new bd_d216_plram_mem04_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.memory.plram_mem04");
        sc_inst_47->xsim_set_dbg_index(2853);
        xsim_sc_channel<0, bool > *p_47_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_47->s_axi_aclk.bind(*p_47_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_47_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_47_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_47->s_axi_aresetn.bind(*p_47_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_47_s_axi_aresetn);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_47_s_axi_awaddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_47->s_axi_awaddr.bind(*p_47_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_47_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_47_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_47->s_axi_awlen.bind(*p_47_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_47_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_47_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_47->s_axi_awsize.bind(*p_47_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_47_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_47_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_47->s_axi_awburst.bind(*p_47_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_47_s_axi_awburst);
        xsim_sc_channel<0, bool > *p_47_s_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_47->s_axi_awlock.bind(*p_47_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_47_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_47_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_47->s_axi_awcache.bind(*p_47_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_47_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_47_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_47->s_axi_awprot.bind(*p_47_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_47_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_47_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_47->s_axi_awvalid.bind(*p_47_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_47_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_47_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_47->s_axi_awready.bind(*p_47_s_axi_awready);
        p_47_s_axi_awready->set_sv_netview_offsetfromdp(10361624);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_47_s_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_47->s_axi_wdata.bind(*p_47_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_47_s_axi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_47_s_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_47->s_axi_wstrb.bind(*p_47_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_47_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_47_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_47->s_axi_wlast.bind(*p_47_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_47_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_47_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_47->s_axi_wvalid.bind(*p_47_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_47_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_47_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_47->s_axi_wready.bind(*p_47_s_axi_wready);
        p_47_s_axi_wready->set_sv_netview_offsetfromdp(10361904);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_47_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_47->s_axi_bresp.bind(*p_47_s_axi_bresp);
        p_47_s_axi_bresp->set_sv_netview_offsetfromdp(10361960);
        xsim_sc_channel<0, bool > *p_47_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_47->s_axi_bvalid.bind(*p_47_s_axi_bvalid);
        p_47_s_axi_bvalid->set_sv_netview_offsetfromdp(10362016);
        xsim_sc_channel<0, bool > *p_47_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_47->s_axi_bready.bind(*p_47_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_47_s_axi_bready);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_47_s_axi_araddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_47->s_axi_araddr.bind(*p_47_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_47_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_47_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_47->s_axi_arlen.bind(*p_47_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_47_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_47_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_47->s_axi_arsize.bind(*p_47_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_47_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_47_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_47->s_axi_arburst.bind(*p_47_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_47_s_axi_arburst);
        xsim_sc_channel<0, bool > *p_47_s_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_47->s_axi_arlock.bind(*p_47_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_47_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_47_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_47->s_axi_arcache.bind(*p_47_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_47_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_47_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_47->s_axi_arprot.bind(*p_47_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_47_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_47_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_47->s_axi_arvalid.bind(*p_47_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_47_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_47_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_47->s_axi_arready.bind(*p_47_s_axi_arready);
        p_47_s_axi_arready->set_sv_netview_offsetfromdp(10362576);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_47_s_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_47->s_axi_rdata.bind(*p_47_s_axi_rdata);
        p_47_s_axi_rdata->set_sv_netview_offsetfromdp(10362632);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_47_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_47->s_axi_rresp.bind(*p_47_s_axi_rresp);
        p_47_s_axi_rresp->set_sv_netview_offsetfromdp(10362688);
        xsim_sc_channel<0, bool > *p_47_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_47->s_axi_rlast.bind(*p_47_s_axi_rlast);
        p_47_s_axi_rlast->set_sv_netview_offsetfromdp(10362744);
        xsim_sc_channel<0, bool > *p_47_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_47->s_axi_rvalid.bind(*p_47_s_axi_rvalid);
        p_47_s_axi_rvalid->set_sv_netview_offsetfromdp(10362800);
        xsim_sc_channel<0, bool > *p_47_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_47->s_axi_rready.bind(*p_47_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_47_s_axi_rready);
        xsim_sc_channel<0, bool > *p_47_bram_rst_a = new xsim_sc_channel<0, bool >();
        sc_inst_47->bram_rst_a.bind(*p_47_bram_rst_a);
        p_47_bram_rst_a->set_sv_netview_offsetfromdp(10362912);
        xsim_sc_channel<0, bool > *p_47_bram_clk_a = new xsim_sc_channel<0, bool >();
        sc_inst_47->bram_clk_a.bind(*p_47_bram_clk_a);
        p_47_bram_clk_a->set_sv_netview_offsetfromdp(10362968);
        xsim_sc_channel<0, bool > *p_47_bram_en_a = new xsim_sc_channel<0, bool >();
        sc_inst_47->bram_en_a.bind(*p_47_bram_en_a);
        p_47_bram_en_a->set_sv_netview_offsetfromdp(10363024);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_47_bram_we_a = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_47->bram_we_a.bind(*p_47_bram_we_a);
        p_47_bram_we_a->set_sv_netview_offsetfromdp(10363080);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_47_bram_addr_a = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_47->bram_addr_a.bind(*p_47_bram_addr_a);
        p_47_bram_addr_a->set_sv_netview_offsetfromdp(10363136);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_47_bram_wrdata_a = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_47->bram_wrdata_a.bind(*p_47_bram_wrdata_a);
        p_47_bram_wrdata_a->set_sv_netview_offsetfromdp(10363192);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_47_bram_rddata_a = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_47->bram_rddata_a.bind(*p_47_bram_rddata_a);
        (*_glb_hdl_sc_channel_map).push_back(p_47_bram_rddata_a);
        xsim_sc_channel<0, bool > *p_47_bram_rst_b = new xsim_sc_channel<0, bool >();
        sc_inst_47->bram_rst_b.bind(*p_47_bram_rst_b);
        p_47_bram_rst_b->set_sv_netview_offsetfromdp(10363304);
        xsim_sc_channel<0, bool > *p_47_bram_clk_b = new xsim_sc_channel<0, bool >();
        sc_inst_47->bram_clk_b.bind(*p_47_bram_clk_b);
        p_47_bram_clk_b->set_sv_netview_offsetfromdp(10363360);
        xsim_sc_channel<0, bool > *p_47_bram_en_b = new xsim_sc_channel<0, bool >();
        sc_inst_47->bram_en_b.bind(*p_47_bram_en_b);
        p_47_bram_en_b->set_sv_netview_offsetfromdp(10363416);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_47_bram_we_b = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_47->bram_we_b.bind(*p_47_bram_we_b);
        p_47_bram_we_b->set_sv_netview_offsetfromdp(10363472);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_47_bram_addr_b = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_47->bram_addr_b.bind(*p_47_bram_addr_b);
        p_47_bram_addr_b->set_sv_netview_offsetfromdp(10363528);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_47_bram_wrdata_b = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_47->bram_wrdata_b.bind(*p_47_bram_wrdata_b);
        p_47_bram_wrdata_b->set_sv_netview_offsetfromdp(10363584);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_47_bram_rddata_b = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_47->bram_rddata_b.bind(*p_47_bram_rddata_b);
        (*_glb_hdl_sc_channel_map).push_back(p_47_bram_rddata_b);
        sc_inst_48 = new bd_d216_plram_mem05_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.memory.plram_mem05");
        sc_inst_48->xsim_set_dbg_index(2855);
        xsim_sc_channel<0, bool > *p_48_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_48->s_axi_aclk.bind(*p_48_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_48_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_48->s_axi_aresetn.bind(*p_48_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_aresetn);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_48_s_axi_awaddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_48->s_axi_awaddr.bind(*p_48_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_48_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_48->s_axi_awlen.bind(*p_48_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_48_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_48->s_axi_awsize.bind(*p_48_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_48_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_48->s_axi_awburst.bind(*p_48_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_awburst);
        xsim_sc_channel<0, bool > *p_48_s_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_48->s_axi_awlock.bind(*p_48_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_48_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_48->s_axi_awcache.bind(*p_48_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_48_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_48->s_axi_awprot.bind(*p_48_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_48_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_48->s_axi_awvalid.bind(*p_48_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_48_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_48->s_axi_awready.bind(*p_48_s_axi_awready);
        p_48_s_axi_awready->set_sv_netview_offsetfromdp(10425424);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_48_s_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_48->s_axi_wdata.bind(*p_48_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_48_s_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_48->s_axi_wstrb.bind(*p_48_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_48_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_48->s_axi_wlast.bind(*p_48_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_48_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_48->s_axi_wvalid.bind(*p_48_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_48_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_48->s_axi_wready.bind(*p_48_s_axi_wready);
        p_48_s_axi_wready->set_sv_netview_offsetfromdp(10425704);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_48_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_48->s_axi_bresp.bind(*p_48_s_axi_bresp);
        p_48_s_axi_bresp->set_sv_netview_offsetfromdp(10425760);
        xsim_sc_channel<0, bool > *p_48_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_48->s_axi_bvalid.bind(*p_48_s_axi_bvalid);
        p_48_s_axi_bvalid->set_sv_netview_offsetfromdp(10425816);
        xsim_sc_channel<0, bool > *p_48_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_48->s_axi_bready.bind(*p_48_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_bready);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_48_s_axi_araddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_48->s_axi_araddr.bind(*p_48_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_48_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_48->s_axi_arlen.bind(*p_48_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_48_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_48->s_axi_arsize.bind(*p_48_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_48_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_48->s_axi_arburst.bind(*p_48_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_arburst);
        xsim_sc_channel<0, bool > *p_48_s_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_48->s_axi_arlock.bind(*p_48_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_48_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_48->s_axi_arcache.bind(*p_48_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_48_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_48->s_axi_arprot.bind(*p_48_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_48_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_48->s_axi_arvalid.bind(*p_48_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_48_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_48->s_axi_arready.bind(*p_48_s_axi_arready);
        p_48_s_axi_arready->set_sv_netview_offsetfromdp(10426376);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_48_s_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_48->s_axi_rdata.bind(*p_48_s_axi_rdata);
        p_48_s_axi_rdata->set_sv_netview_offsetfromdp(10426432);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_48_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_48->s_axi_rresp.bind(*p_48_s_axi_rresp);
        p_48_s_axi_rresp->set_sv_netview_offsetfromdp(10426488);
        xsim_sc_channel<0, bool > *p_48_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_48->s_axi_rlast.bind(*p_48_s_axi_rlast);
        p_48_s_axi_rlast->set_sv_netview_offsetfromdp(10426544);
        xsim_sc_channel<0, bool > *p_48_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_48->s_axi_rvalid.bind(*p_48_s_axi_rvalid);
        p_48_s_axi_rvalid->set_sv_netview_offsetfromdp(10426600);
        xsim_sc_channel<0, bool > *p_48_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_48->s_axi_rready.bind(*p_48_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_rready);
        xsim_sc_channel<0, bool > *p_48_bram_rst_a = new xsim_sc_channel<0, bool >();
        sc_inst_48->bram_rst_a.bind(*p_48_bram_rst_a);
        p_48_bram_rst_a->set_sv_netview_offsetfromdp(10426712);
        xsim_sc_channel<0, bool > *p_48_bram_clk_a = new xsim_sc_channel<0, bool >();
        sc_inst_48->bram_clk_a.bind(*p_48_bram_clk_a);
        p_48_bram_clk_a->set_sv_netview_offsetfromdp(10426768);
        xsim_sc_channel<0, bool > *p_48_bram_en_a = new xsim_sc_channel<0, bool >();
        sc_inst_48->bram_en_a.bind(*p_48_bram_en_a);
        p_48_bram_en_a->set_sv_netview_offsetfromdp(10426824);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_48_bram_we_a = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_48->bram_we_a.bind(*p_48_bram_we_a);
        p_48_bram_we_a->set_sv_netview_offsetfromdp(10426880);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_48_bram_addr_a = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_48->bram_addr_a.bind(*p_48_bram_addr_a);
        p_48_bram_addr_a->set_sv_netview_offsetfromdp(10426936);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_48_bram_wrdata_a = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_48->bram_wrdata_a.bind(*p_48_bram_wrdata_a);
        p_48_bram_wrdata_a->set_sv_netview_offsetfromdp(10426992);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_48_bram_rddata_a = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_48->bram_rddata_a.bind(*p_48_bram_rddata_a);
        (*_glb_hdl_sc_channel_map).push_back(p_48_bram_rddata_a);
        xsim_sc_channel<0, bool > *p_48_bram_rst_b = new xsim_sc_channel<0, bool >();
        sc_inst_48->bram_rst_b.bind(*p_48_bram_rst_b);
        p_48_bram_rst_b->set_sv_netview_offsetfromdp(10427104);
        xsim_sc_channel<0, bool > *p_48_bram_clk_b = new xsim_sc_channel<0, bool >();
        sc_inst_48->bram_clk_b.bind(*p_48_bram_clk_b);
        p_48_bram_clk_b->set_sv_netview_offsetfromdp(10427160);
        xsim_sc_channel<0, bool > *p_48_bram_en_b = new xsim_sc_channel<0, bool >();
        sc_inst_48->bram_en_b.bind(*p_48_bram_en_b);
        p_48_bram_en_b->set_sv_netview_offsetfromdp(10427216);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_48_bram_we_b = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_48->bram_we_b.bind(*p_48_bram_we_b);
        p_48_bram_we_b->set_sv_netview_offsetfromdp(10427272);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_48_bram_addr_b = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_48->bram_addr_b.bind(*p_48_bram_addr_b);
        p_48_bram_addr_b->set_sv_netview_offsetfromdp(10427328);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_48_bram_wrdata_b = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_48->bram_wrdata_b.bind(*p_48_bram_wrdata_b);
        p_48_bram_wrdata_b->set_sv_netview_offsetfromdp(10427384);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_48_bram_rddata_b = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_48->bram_rddata_b.bind(*p_48_bram_rddata_b);
        (*_glb_hdl_sc_channel_map).push_back(p_48_bram_rddata_b);
        sc_inst_49 = new pfm_dynamic_sci(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.pfm_dynamic_sci_inst");
        sc_inst_49->xsim_set_dbg_index(62);
        sc_inst_50 = new pfm_dynamic_profile_vip_0_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.profile_vip_0");
        sc_inst_50->xsim_set_dbg_index(63);
        xsim_sc_channel<0, bool > *p_50_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_50->aclk.bind(*p_50_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_50_aclk);
        xsim_sc_channel<0, bool > *p_50_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_50->aresetn.bind(*p_50_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_50_aresetn);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_50_s_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_50->s_axi_awaddr.bind(*p_50_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_50_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_50->s_axi_awlen.bind(*p_50_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_awlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_50_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_50->s_axi_awburst.bind(*p_50_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_50_s_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_50->s_axi_awlock.bind(*p_50_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_50_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_50->s_axi_awcache.bind(*p_50_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_50_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_50->s_axi_awprot.bind(*p_50_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_50_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_50->s_axi_awqos.bind(*p_50_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_awqos);
        xsim_sc_channel<0, bool > *p_50_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_50->s_axi_awvalid.bind(*p_50_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_50_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_50->s_axi_awready.bind(*p_50_s_axi_awready);
        p_50_s_axi_awready->set_sv_netview_offsetfromdp(10773352);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_50_s_axi_wdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_50->s_axi_wdata.bind(*p_50_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_wdata);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_50_s_axi_wstrb = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_50->s_axi_wstrb.bind(*p_50_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_50_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_50->s_axi_wlast.bind(*p_50_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_50_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_50->s_axi_wvalid.bind(*p_50_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_50_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_50->s_axi_wready.bind(*p_50_s_axi_wready);
        p_50_s_axi_wready->set_sv_netview_offsetfromdp(10773632);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_50_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_50->s_axi_bresp.bind(*p_50_s_axi_bresp);
        p_50_s_axi_bresp->set_sv_netview_offsetfromdp(10773688);
        xsim_sc_channel<0, bool > *p_50_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_50->s_axi_bvalid.bind(*p_50_s_axi_bvalid);
        p_50_s_axi_bvalid->set_sv_netview_offsetfromdp(10773744);
        xsim_sc_channel<0, bool > *p_50_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_50->s_axi_bready.bind(*p_50_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_bready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_50_s_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_50->s_axi_araddr.bind(*p_50_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_50_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_50->s_axi_arlen.bind(*p_50_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_arlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_50_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_50->s_axi_arburst.bind(*p_50_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_50_s_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_50->s_axi_arlock.bind(*p_50_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_50_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_50->s_axi_arcache.bind(*p_50_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_50_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_50->s_axi_arprot.bind(*p_50_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_50_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_50->s_axi_arqos.bind(*p_50_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_arqos);
        xsim_sc_channel<0, bool > *p_50_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_50->s_axi_arvalid.bind(*p_50_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_50_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_50->s_axi_arready.bind(*p_50_s_axi_arready);
        p_50_s_axi_arready->set_sv_netview_offsetfromdp(10774304);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_50_s_axi_rdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_50->s_axi_rdata.bind(*p_50_s_axi_rdata);
        p_50_s_axi_rdata->set_sv_netview_offsetfromdp(10774360);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_50_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_50->s_axi_rresp.bind(*p_50_s_axi_rresp);
        p_50_s_axi_rresp->set_sv_netview_offsetfromdp(10774416);
        xsim_sc_channel<0, bool > *p_50_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_50->s_axi_rlast.bind(*p_50_s_axi_rlast);
        p_50_s_axi_rlast->set_sv_netview_offsetfromdp(10774472);
        xsim_sc_channel<0, bool > *p_50_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_50->s_axi_rvalid.bind(*p_50_s_axi_rvalid);
        p_50_s_axi_rvalid->set_sv_netview_offsetfromdp(10774528);
        xsim_sc_channel<0, bool > *p_50_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_50->s_axi_rready.bind(*p_50_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_rready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_50_m_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_50->m_axi_awaddr.bind(*p_50_m_axi_awaddr);
        p_50_m_axi_awaddr->set_sv_netview_offsetfromdp(10774640);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_50_m_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_50->m_axi_awlen.bind(*p_50_m_axi_awlen);
        p_50_m_axi_awlen->set_sv_netview_offsetfromdp(10774696);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_50_m_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_50->m_axi_awburst.bind(*p_50_m_axi_awburst);
        p_50_m_axi_awburst->set_sv_netview_offsetfromdp(10774752);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_50_m_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_50->m_axi_awlock.bind(*p_50_m_axi_awlock);
        p_50_m_axi_awlock->set_sv_netview_offsetfromdp(10774808);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_50_m_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_50->m_axi_awcache.bind(*p_50_m_axi_awcache);
        p_50_m_axi_awcache->set_sv_netview_offsetfromdp(10774864);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_50_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_50->m_axi_awprot.bind(*p_50_m_axi_awprot);
        p_50_m_axi_awprot->set_sv_netview_offsetfromdp(10774920);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_50_m_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_50->m_axi_awqos.bind(*p_50_m_axi_awqos);
        p_50_m_axi_awqos->set_sv_netview_offsetfromdp(10774976);
        xsim_sc_channel<0, bool > *p_50_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_50->m_axi_awvalid.bind(*p_50_m_axi_awvalid);
        p_50_m_axi_awvalid->set_sv_netview_offsetfromdp(10775032);
        xsim_sc_channel<0, bool > *p_50_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_50->m_axi_awready.bind(*p_50_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_50_m_axi_awready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_50_m_axi_wdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_50->m_axi_wdata.bind(*p_50_m_axi_wdata);
        p_50_m_axi_wdata->set_sv_netview_offsetfromdp(10775144);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_50_m_axi_wstrb = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_50->m_axi_wstrb.bind(*p_50_m_axi_wstrb);
        p_50_m_axi_wstrb->set_sv_netview_offsetfromdp(10775200);
        xsim_sc_channel<0, bool > *p_50_m_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_50->m_axi_wlast.bind(*p_50_m_axi_wlast);
        p_50_m_axi_wlast->set_sv_netview_offsetfromdp(10775256);
        xsim_sc_channel<0, bool > *p_50_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_50->m_axi_wvalid.bind(*p_50_m_axi_wvalid);
        p_50_m_axi_wvalid->set_sv_netview_offsetfromdp(10775312);
        xsim_sc_channel<0, bool > *p_50_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_50->m_axi_wready.bind(*p_50_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_50_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_50_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_50->m_axi_bresp.bind(*p_50_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_50_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_50_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_50->m_axi_bvalid.bind(*p_50_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_50_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_50_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_50->m_axi_bready.bind(*p_50_m_axi_bready);
        p_50_m_axi_bready->set_sv_netview_offsetfromdp(10775536);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_50_m_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_50->m_axi_araddr.bind(*p_50_m_axi_araddr);
        p_50_m_axi_araddr->set_sv_netview_offsetfromdp(10775592);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_50_m_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_50->m_axi_arlen.bind(*p_50_m_axi_arlen);
        p_50_m_axi_arlen->set_sv_netview_offsetfromdp(10775648);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_50_m_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_50->m_axi_arburst.bind(*p_50_m_axi_arburst);
        p_50_m_axi_arburst->set_sv_netview_offsetfromdp(10775704);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_50_m_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_50->m_axi_arlock.bind(*p_50_m_axi_arlock);
        p_50_m_axi_arlock->set_sv_netview_offsetfromdp(10775760);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_50_m_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_50->m_axi_arcache.bind(*p_50_m_axi_arcache);
        p_50_m_axi_arcache->set_sv_netview_offsetfromdp(10775816);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_50_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_50->m_axi_arprot.bind(*p_50_m_axi_arprot);
        p_50_m_axi_arprot->set_sv_netview_offsetfromdp(10775872);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_50_m_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_50->m_axi_arqos.bind(*p_50_m_axi_arqos);
        p_50_m_axi_arqos->set_sv_netview_offsetfromdp(10775928);
        xsim_sc_channel<0, bool > *p_50_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_50->m_axi_arvalid.bind(*p_50_m_axi_arvalid);
        p_50_m_axi_arvalid->set_sv_netview_offsetfromdp(10775984);
        xsim_sc_channel<0, bool > *p_50_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_50->m_axi_arready.bind(*p_50_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_50_m_axi_arready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_50_m_axi_rdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_50->m_axi_rdata.bind(*p_50_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_50_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_50_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_50->m_axi_rresp.bind(*p_50_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_50_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_50_m_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_50->m_axi_rlast.bind(*p_50_m_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_50_m_axi_rlast);
        xsim_sc_channel<0, bool > *p_50_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_50->m_axi_rvalid.bind(*p_50_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_50_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_50_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_50->m_axi_rready.bind(*p_50_m_axi_rready);
        p_50_m_axi_rready->set_sv_netview_offsetfromdp(10776320);
        sc_inst_51 = new pfm_dynamic_m01_regslice_4(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.slr0.interconnect_axilite_user_0.m01_couplers.m01_regslice");
        sc_inst_51->xsim_set_dbg_index(3334);
        xsim_sc_channel<0, bool > *p_51_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_51->aclk.bind(*p_51_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_51_aclk);
        xsim_sc_channel<0, bool > *p_51_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_51->aresetn.bind(*p_51_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_51_aresetn);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_51_s_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_51->s_axi_awaddr.bind(*p_51_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_51_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_51->s_axi_awprot.bind(*p_51_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_51_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_51->s_axi_awvalid.bind(*p_51_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_51_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_51->s_axi_awready.bind(*p_51_s_axi_awready);
        p_51_s_axi_awready->set_sv_netview_offsetfromdp(11052856);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_51_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_51->s_axi_wdata.bind(*p_51_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_51_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_51->s_axi_wstrb.bind(*p_51_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_51_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_51->s_axi_wvalid.bind(*p_51_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_51_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_51->s_axi_wready.bind(*p_51_s_axi_wready);
        p_51_s_axi_wready->set_sv_netview_offsetfromdp(11053080);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_51_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_51->s_axi_bresp.bind(*p_51_s_axi_bresp);
        p_51_s_axi_bresp->set_sv_netview_offsetfromdp(11053136);
        xsim_sc_channel<0, bool > *p_51_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_51->s_axi_bvalid.bind(*p_51_s_axi_bvalid);
        p_51_s_axi_bvalid->set_sv_netview_offsetfromdp(11053192);
        xsim_sc_channel<0, bool > *p_51_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_51->s_axi_bready.bind(*p_51_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_51_s_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_51->s_axi_araddr.bind(*p_51_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_51_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_51->s_axi_arprot.bind(*p_51_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_51_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_51->s_axi_arvalid.bind(*p_51_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_51_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_51->s_axi_arready.bind(*p_51_s_axi_arready);
        p_51_s_axi_arready->set_sv_netview_offsetfromdp(11053472);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_51_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_51->s_axi_rdata.bind(*p_51_s_axi_rdata);
        p_51_s_axi_rdata->set_sv_netview_offsetfromdp(11053528);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_51_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_51->s_axi_rresp.bind(*p_51_s_axi_rresp);
        p_51_s_axi_rresp->set_sv_netview_offsetfromdp(11053584);
        xsim_sc_channel<0, bool > *p_51_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_51->s_axi_rvalid.bind(*p_51_s_axi_rvalid);
        p_51_s_axi_rvalid->set_sv_netview_offsetfromdp(11053640);
        xsim_sc_channel<0, bool > *p_51_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_51->s_axi_rready.bind(*p_51_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_rready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_51_m_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_51->m_axi_awaddr.bind(*p_51_m_axi_awaddr);
        p_51_m_axi_awaddr->set_sv_netview_offsetfromdp(11053752);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_51_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_51->m_axi_awprot.bind(*p_51_m_axi_awprot);
        p_51_m_axi_awprot->set_sv_netview_offsetfromdp(11053808);
        xsim_sc_channel<0, bool > *p_51_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_51->m_axi_awvalid.bind(*p_51_m_axi_awvalid);
        p_51_m_axi_awvalid->set_sv_netview_offsetfromdp(11053864);
        xsim_sc_channel<0, bool > *p_51_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_51->m_axi_awready.bind(*p_51_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_51_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_51_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_51->m_axi_wdata.bind(*p_51_m_axi_wdata);
        p_51_m_axi_wdata->set_sv_netview_offsetfromdp(11053976);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_51_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_51->m_axi_wstrb.bind(*p_51_m_axi_wstrb);
        p_51_m_axi_wstrb->set_sv_netview_offsetfromdp(11054032);
        xsim_sc_channel<0, bool > *p_51_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_51->m_axi_wvalid.bind(*p_51_m_axi_wvalid);
        p_51_m_axi_wvalid->set_sv_netview_offsetfromdp(11054088);
        xsim_sc_channel<0, bool > *p_51_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_51->m_axi_wready.bind(*p_51_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_51_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_51_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_51->m_axi_bresp.bind(*p_51_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_51_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_51_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_51->m_axi_bvalid.bind(*p_51_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_51_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_51_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_51->m_axi_bready.bind(*p_51_m_axi_bready);
        p_51_m_axi_bready->set_sv_netview_offsetfromdp(11054312);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_51_m_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_51->m_axi_araddr.bind(*p_51_m_axi_araddr);
        p_51_m_axi_araddr->set_sv_netview_offsetfromdp(11054368);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_51_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_51->m_axi_arprot.bind(*p_51_m_axi_arprot);
        p_51_m_axi_arprot->set_sv_netview_offsetfromdp(11054424);
        xsim_sc_channel<0, bool > *p_51_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_51->m_axi_arvalid.bind(*p_51_m_axi_arvalid);
        p_51_m_axi_arvalid->set_sv_netview_offsetfromdp(11054480);
        xsim_sc_channel<0, bool > *p_51_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_51->m_axi_arready.bind(*p_51_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_51_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_51_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_51->m_axi_rdata.bind(*p_51_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_51_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_51_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_51->m_axi_rresp.bind(*p_51_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_51_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_51_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_51->m_axi_rvalid.bind(*p_51_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_51_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_51_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_51->m_axi_rready.bind(*p_51_m_axi_rready);
        p_51_m_axi_rready->set_sv_netview_offsetfromdp(11054760);
        sc_inst_52 = new pfm_dynamic_auto_cc_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.slr0.interconnect_axilite_user_0.m02_couplers.auto_cc");
        sc_inst_52->xsim_set_dbg_index(3375);
        xsim_sc_channel<0, bool > *p_52_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_52->s_axi_aclk.bind(*p_52_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_52_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_52_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_52->s_axi_aresetn.bind(*p_52_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_52_s_axi_aresetn);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_52_s_axi_awaddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_52->s_axi_awaddr.bind(*p_52_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_52_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_52_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_52->s_axi_awprot.bind(*p_52_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_52_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_52_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_52->s_axi_awvalid.bind(*p_52_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_52_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_52_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_52->s_axi_awready.bind(*p_52_s_axi_awready);
        p_52_s_axi_awready->set_sv_netview_offsetfromdp(11091784);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_52_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_52->s_axi_wdata.bind(*p_52_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_52_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_52_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_52->s_axi_wstrb.bind(*p_52_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_52_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_52_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_52->s_axi_wvalid.bind(*p_52_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_52_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_52_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_52->s_axi_wready.bind(*p_52_s_axi_wready);
        p_52_s_axi_wready->set_sv_netview_offsetfromdp(11092008);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_52_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_52->s_axi_bresp.bind(*p_52_s_axi_bresp);
        p_52_s_axi_bresp->set_sv_netview_offsetfromdp(11092064);
        xsim_sc_channel<0, bool > *p_52_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_52->s_axi_bvalid.bind(*p_52_s_axi_bvalid);
        p_52_s_axi_bvalid->set_sv_netview_offsetfromdp(11092120);
        xsim_sc_channel<0, bool > *p_52_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_52->s_axi_bready.bind(*p_52_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_52_s_axi_bready);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_52_s_axi_araddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_52->s_axi_araddr.bind(*p_52_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_52_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_52_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_52->s_axi_arprot.bind(*p_52_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_52_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_52_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_52->s_axi_arvalid.bind(*p_52_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_52_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_52_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_52->s_axi_arready.bind(*p_52_s_axi_arready);
        p_52_s_axi_arready->set_sv_netview_offsetfromdp(11092400);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_52_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_52->s_axi_rdata.bind(*p_52_s_axi_rdata);
        p_52_s_axi_rdata->set_sv_netview_offsetfromdp(11092456);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_52_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_52->s_axi_rresp.bind(*p_52_s_axi_rresp);
        p_52_s_axi_rresp->set_sv_netview_offsetfromdp(11092512);
        xsim_sc_channel<0, bool > *p_52_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_52->s_axi_rvalid.bind(*p_52_s_axi_rvalid);
        p_52_s_axi_rvalid->set_sv_netview_offsetfromdp(11092568);
        xsim_sc_channel<0, bool > *p_52_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_52->s_axi_rready.bind(*p_52_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_52_s_axi_rready);
        xsim_sc_channel<0, bool > *p_52_m_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_52->m_axi_aclk.bind(*p_52_m_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_52_m_axi_aclk);
        xsim_sc_channel<0, bool > *p_52_m_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_52->m_axi_aresetn.bind(*p_52_m_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_52_m_axi_aresetn);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_52_m_axi_awaddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_52->m_axi_awaddr.bind(*p_52_m_axi_awaddr);
        p_52_m_axi_awaddr->set_sv_netview_offsetfromdp(11092792);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_52_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_52->m_axi_awprot.bind(*p_52_m_axi_awprot);
        p_52_m_axi_awprot->set_sv_netview_offsetfromdp(11092848);
        xsim_sc_channel<0, bool > *p_52_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_52->m_axi_awvalid.bind(*p_52_m_axi_awvalid);
        p_52_m_axi_awvalid->set_sv_netview_offsetfromdp(11092904);
        xsim_sc_channel<0, bool > *p_52_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_52->m_axi_awready.bind(*p_52_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_52_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_52_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_52->m_axi_wdata.bind(*p_52_m_axi_wdata);
        p_52_m_axi_wdata->set_sv_netview_offsetfromdp(11093016);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_52_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_52->m_axi_wstrb.bind(*p_52_m_axi_wstrb);
        p_52_m_axi_wstrb->set_sv_netview_offsetfromdp(11093072);
        xsim_sc_channel<0, bool > *p_52_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_52->m_axi_wvalid.bind(*p_52_m_axi_wvalid);
        p_52_m_axi_wvalid->set_sv_netview_offsetfromdp(11093128);
        xsim_sc_channel<0, bool > *p_52_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_52->m_axi_wready.bind(*p_52_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_52_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_52_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_52->m_axi_bresp.bind(*p_52_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_52_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_52_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_52->m_axi_bvalid.bind(*p_52_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_52_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_52_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_52->m_axi_bready.bind(*p_52_m_axi_bready);
        p_52_m_axi_bready->set_sv_netview_offsetfromdp(11093352);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_52_m_axi_araddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_52->m_axi_araddr.bind(*p_52_m_axi_araddr);
        p_52_m_axi_araddr->set_sv_netview_offsetfromdp(11093408);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_52_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_52->m_axi_arprot.bind(*p_52_m_axi_arprot);
        p_52_m_axi_arprot->set_sv_netview_offsetfromdp(11093464);
        xsim_sc_channel<0, bool > *p_52_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_52->m_axi_arvalid.bind(*p_52_m_axi_arvalid);
        p_52_m_axi_arvalid->set_sv_netview_offsetfromdp(11093520);
        xsim_sc_channel<0, bool > *p_52_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_52->m_axi_arready.bind(*p_52_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_52_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_52_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_52->m_axi_rdata.bind(*p_52_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_52_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_52_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_52->m_axi_rresp.bind(*p_52_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_52_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_52_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_52->m_axi_rvalid.bind(*p_52_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_52_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_52_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_52->m_axi_rready.bind(*p_52_m_axi_rready);
        p_52_m_axi_rready->set_sv_netview_offsetfromdp(11093800);
        sc_inst_53 = new pfm_dynamic_m02_regslice_4(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.slr0.interconnect_axilite_user_0.m02_couplers.m02_regslice");
        sc_inst_53->xsim_set_dbg_index(3376);
        xsim_sc_channel<0, bool > *p_53_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_53->aclk.bind(*p_53_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_53_aclk);
        xsim_sc_channel<0, bool > *p_53_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_53->aresetn.bind(*p_53_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_53_aresetn);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_53_s_axi_awaddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_53->s_axi_awaddr.bind(*p_53_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_53_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_53->s_axi_awprot.bind(*p_53_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_53_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_53->s_axi_awvalid.bind(*p_53_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_53_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_53->s_axi_awready.bind(*p_53_s_axi_awready);
        p_53_s_axi_awready->set_sv_netview_offsetfromdp(11094184);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_53_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_53->s_axi_wdata.bind(*p_53_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_53_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_53->s_axi_wstrb.bind(*p_53_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_53_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_53->s_axi_wvalid.bind(*p_53_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_53_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_53->s_axi_wready.bind(*p_53_s_axi_wready);
        p_53_s_axi_wready->set_sv_netview_offsetfromdp(11094408);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_53_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_53->s_axi_bresp.bind(*p_53_s_axi_bresp);
        p_53_s_axi_bresp->set_sv_netview_offsetfromdp(11094464);
        xsim_sc_channel<0, bool > *p_53_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_53->s_axi_bvalid.bind(*p_53_s_axi_bvalid);
        p_53_s_axi_bvalid->set_sv_netview_offsetfromdp(11094520);
        xsim_sc_channel<0, bool > *p_53_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_53->s_axi_bready.bind(*p_53_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_bready);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_53_s_axi_araddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_53->s_axi_araddr.bind(*p_53_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_53_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_53->s_axi_arprot.bind(*p_53_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_53_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_53->s_axi_arvalid.bind(*p_53_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_53_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_53->s_axi_arready.bind(*p_53_s_axi_arready);
        p_53_s_axi_arready->set_sv_netview_offsetfromdp(11094800);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_53_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_53->s_axi_rdata.bind(*p_53_s_axi_rdata);
        p_53_s_axi_rdata->set_sv_netview_offsetfromdp(11094856);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_53_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_53->s_axi_rresp.bind(*p_53_s_axi_rresp);
        p_53_s_axi_rresp->set_sv_netview_offsetfromdp(11094912);
        xsim_sc_channel<0, bool > *p_53_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_53->s_axi_rvalid.bind(*p_53_s_axi_rvalid);
        p_53_s_axi_rvalid->set_sv_netview_offsetfromdp(11094968);
        xsim_sc_channel<0, bool > *p_53_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_53->s_axi_rready.bind(*p_53_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_rready);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_53_m_axi_awaddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_53->m_axi_awaddr.bind(*p_53_m_axi_awaddr);
        p_53_m_axi_awaddr->set_sv_netview_offsetfromdp(11095080);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_53_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_53->m_axi_awprot.bind(*p_53_m_axi_awprot);
        p_53_m_axi_awprot->set_sv_netview_offsetfromdp(11095136);
        xsim_sc_channel<0, bool > *p_53_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_53->m_axi_awvalid.bind(*p_53_m_axi_awvalid);
        p_53_m_axi_awvalid->set_sv_netview_offsetfromdp(11095192);
        xsim_sc_channel<0, bool > *p_53_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_53->m_axi_awready.bind(*p_53_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_53_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_53_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_53->m_axi_wdata.bind(*p_53_m_axi_wdata);
        p_53_m_axi_wdata->set_sv_netview_offsetfromdp(11095304);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_53_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_53->m_axi_wstrb.bind(*p_53_m_axi_wstrb);
        p_53_m_axi_wstrb->set_sv_netview_offsetfromdp(11095360);
        xsim_sc_channel<0, bool > *p_53_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_53->m_axi_wvalid.bind(*p_53_m_axi_wvalid);
        p_53_m_axi_wvalid->set_sv_netview_offsetfromdp(11095416);
        xsim_sc_channel<0, bool > *p_53_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_53->m_axi_wready.bind(*p_53_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_53_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_53_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_53->m_axi_bresp.bind(*p_53_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_53_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_53_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_53->m_axi_bvalid.bind(*p_53_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_53_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_53_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_53->m_axi_bready.bind(*p_53_m_axi_bready);
        p_53_m_axi_bready->set_sv_netview_offsetfromdp(11095640);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_53_m_axi_araddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_53->m_axi_araddr.bind(*p_53_m_axi_araddr);
        p_53_m_axi_araddr->set_sv_netview_offsetfromdp(11095696);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_53_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_53->m_axi_arprot.bind(*p_53_m_axi_arprot);
        p_53_m_axi_arprot->set_sv_netview_offsetfromdp(11095752);
        xsim_sc_channel<0, bool > *p_53_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_53->m_axi_arvalid.bind(*p_53_m_axi_arvalid);
        p_53_m_axi_arvalid->set_sv_netview_offsetfromdp(11095808);
        xsim_sc_channel<0, bool > *p_53_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_53->m_axi_arready.bind(*p_53_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_53_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_53_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_53->m_axi_rdata.bind(*p_53_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_53_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_53_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_53->m_axi_rresp.bind(*p_53_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_53_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_53_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_53->m_axi_rvalid.bind(*p_53_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_53_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_53_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_53->m_axi_rready.bind(*p_53_m_axi_rready);
        p_53_m_axi_rready->set_sv_netview_offsetfromdp(11096088);
        sc_inst_54 = new pfm_dynamic_xbar_3(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.slr0.interconnect_axilite_user_0.xbar");
        sc_inst_54->xsim_set_dbg_index(1472);
        xsim_sc_channel<0, bool > *p_54_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_54->aclk.bind(*p_54_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_54_aclk);
        xsim_sc_channel<0, bool > *p_54_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_54->aresetn.bind(*p_54_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_54_aresetn);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_54_s_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_54->s_axi_awaddr.bind(*p_54_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_54_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_54->s_axi_awprot.bind(*p_54_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_awprot);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_54_s_axi_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_54->s_axi_awvalid.bind(*p_54_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_awvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_54_s_axi_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_54->s_axi_awready.bind(*p_54_s_axi_awready);
        p_54_s_axi_awready->set_sv_netview_offsetfromdp(11106648);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_54_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_54->s_axi_wdata.bind(*p_54_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_54_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_54->s_axi_wstrb.bind(*p_54_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_wstrb);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_54_s_axi_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_54->s_axi_wvalid.bind(*p_54_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_wvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_54_s_axi_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_54->s_axi_wready.bind(*p_54_s_axi_wready);
        p_54_s_axi_wready->set_sv_netview_offsetfromdp(11106872);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_54_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_54->s_axi_bresp.bind(*p_54_s_axi_bresp);
        p_54_s_axi_bresp->set_sv_netview_offsetfromdp(11106928);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_54_s_axi_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_54->s_axi_bvalid.bind(*p_54_s_axi_bvalid);
        p_54_s_axi_bvalid->set_sv_netview_offsetfromdp(11106984);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_54_s_axi_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_54->s_axi_bready.bind(*p_54_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_54_s_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_54->s_axi_araddr.bind(*p_54_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_54_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_54->s_axi_arprot.bind(*p_54_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_arprot);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_54_s_axi_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_54->s_axi_arvalid.bind(*p_54_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_arvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_54_s_axi_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_54->s_axi_arready.bind(*p_54_s_axi_arready);
        p_54_s_axi_arready->set_sv_netview_offsetfromdp(11107264);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_54_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_54->s_axi_rdata.bind(*p_54_s_axi_rdata);
        p_54_s_axi_rdata->set_sv_netview_offsetfromdp(11107320);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_54_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_54->s_axi_rresp.bind(*p_54_s_axi_rresp);
        p_54_s_axi_rresp->set_sv_netview_offsetfromdp(11107376);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_54_s_axi_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_54->s_axi_rvalid.bind(*p_54_s_axi_rvalid);
        p_54_s_axi_rvalid->set_sv_netview_offsetfromdp(11107432);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_54_s_axi_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_54->s_axi_rready.bind(*p_54_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_rready);
        xsim_sc_channel<192, sc_dt::sc_bv<192> > *p_54_m_axi_awaddr = new xsim_sc_channel<192, sc_dt::sc_bv<192> >();
        sc_inst_54->m_axi_awaddr.bind(*p_54_m_axi_awaddr);
        p_54_m_axi_awaddr->set_sv_netview_offsetfromdp(11107544);
        xsim_sc_channel<9, sc_dt::sc_bv<9> > *p_54_m_axi_awprot = new xsim_sc_channel<9, sc_dt::sc_bv<9> >();
        sc_inst_54->m_axi_awprot.bind(*p_54_m_axi_awprot);
        p_54_m_axi_awprot->set_sv_netview_offsetfromdp(11107600);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_54_m_axi_awvalid = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_54->m_axi_awvalid.bind(*p_54_m_axi_awvalid);
        p_54_m_axi_awvalid->set_sv_netview_offsetfromdp(11107656);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_54_m_axi_awready = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_54->m_axi_awready.bind(*p_54_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_54_m_axi_awready);
        xsim_sc_channel<96, sc_dt::sc_bv<96> > *p_54_m_axi_wdata = new xsim_sc_channel<96, sc_dt::sc_bv<96> >();
        sc_inst_54->m_axi_wdata.bind(*p_54_m_axi_wdata);
        p_54_m_axi_wdata->set_sv_netview_offsetfromdp(11107768);
        xsim_sc_channel<12, sc_dt::sc_bv<12> > *p_54_m_axi_wstrb = new xsim_sc_channel<12, sc_dt::sc_bv<12> >();
        sc_inst_54->m_axi_wstrb.bind(*p_54_m_axi_wstrb);
        p_54_m_axi_wstrb->set_sv_netview_offsetfromdp(11107824);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_54_m_axi_wvalid = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_54->m_axi_wvalid.bind(*p_54_m_axi_wvalid);
        p_54_m_axi_wvalid->set_sv_netview_offsetfromdp(11107880);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_54_m_axi_wready = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_54->m_axi_wready.bind(*p_54_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_54_m_axi_wready);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_54_m_axi_bresp = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_54->m_axi_bresp.bind(*p_54_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_54_m_axi_bresp);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_54_m_axi_bvalid = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_54->m_axi_bvalid.bind(*p_54_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_54_m_axi_bvalid);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_54_m_axi_bready = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_54->m_axi_bready.bind(*p_54_m_axi_bready);
        p_54_m_axi_bready->set_sv_netview_offsetfromdp(11108104);
        xsim_sc_channel<192, sc_dt::sc_bv<192> > *p_54_m_axi_araddr = new xsim_sc_channel<192, sc_dt::sc_bv<192> >();
        sc_inst_54->m_axi_araddr.bind(*p_54_m_axi_araddr);
        p_54_m_axi_araddr->set_sv_netview_offsetfromdp(11108160);
        xsim_sc_channel<9, sc_dt::sc_bv<9> > *p_54_m_axi_arprot = new xsim_sc_channel<9, sc_dt::sc_bv<9> >();
        sc_inst_54->m_axi_arprot.bind(*p_54_m_axi_arprot);
        p_54_m_axi_arprot->set_sv_netview_offsetfromdp(11108216);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_54_m_axi_arvalid = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_54->m_axi_arvalid.bind(*p_54_m_axi_arvalid);
        p_54_m_axi_arvalid->set_sv_netview_offsetfromdp(11108272);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_54_m_axi_arready = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_54->m_axi_arready.bind(*p_54_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_54_m_axi_arready);
        xsim_sc_channel<96, sc_dt::sc_bv<96> > *p_54_m_axi_rdata = new xsim_sc_channel<96, sc_dt::sc_bv<96> >();
        sc_inst_54->m_axi_rdata.bind(*p_54_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_54_m_axi_rdata);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_54_m_axi_rresp = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_54->m_axi_rresp.bind(*p_54_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_54_m_axi_rresp);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_54_m_axi_rvalid = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_54->m_axi_rvalid.bind(*p_54_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_54_m_axi_rvalid);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_54_m_axi_rready = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_54->m_axi_rready.bind(*p_54_m_axi_rready);
        p_54_m_axi_rready->set_sv_netview_offsetfromdp(11108552);
        sc_inst_55 = new pfm_dynamic_smartconn_data_0_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.smartconn_data_0");
        sc_inst_55->xsim_set_dbg_index(71);
        xsim_sc_channel<0, bool > *p_55_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_55->aclk.bind(*p_55_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_55_aclk);
        xsim_sc_channel<0, bool > *p_55_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_55->aresetn.bind(*p_55_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_55_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_55_S00_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_55->S00_AXI_awid.bind(*p_55_S00_AXI_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_55_S00_AXI_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_55_S00_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_55->S00_AXI_awaddr.bind(*p_55_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_55_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_55_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_55->S00_AXI_awlen.bind(*p_55_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_55_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_55_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_55->S00_AXI_awsize.bind(*p_55_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_55_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_55_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_55->S00_AXI_awburst.bind(*p_55_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_55_S00_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_55_S00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_55->S00_AXI_awlock.bind(*p_55_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_55_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_55_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_55->S00_AXI_awcache.bind(*p_55_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_55_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_55_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_55->S00_AXI_awprot.bind(*p_55_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_55_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_55_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_55->S00_AXI_awqos.bind(*p_55_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_55_S00_AXI_awqos);
        xsim_sc_channel<0, bool > *p_55_S00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_55->S00_AXI_awvalid.bind(*p_55_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_55_S00_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_55_S00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_55->S00_AXI_awready.bind(*p_55_S00_AXI_awready);
        p_55_S00_AXI_awready->set_sv_netview_offsetfromdp(12365256);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_55_S00_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_55->S00_AXI_wdata.bind(*p_55_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_55_S00_AXI_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_55_S00_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_55->S00_AXI_wstrb.bind(*p_55_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_55_S00_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_55_S00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_55->S00_AXI_wlast.bind(*p_55_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_55_S00_AXI_wlast);
        xsim_sc_channel<0, bool > *p_55_S00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_55->S00_AXI_wvalid.bind(*p_55_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_55_S00_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_55_S00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_55->S00_AXI_wready.bind(*p_55_S00_AXI_wready);
        p_55_S00_AXI_wready->set_sv_netview_offsetfromdp(12365536);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_55_S00_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_55->S00_AXI_bid.bind(*p_55_S00_AXI_bid);
        p_55_S00_AXI_bid->set_sv_netview_offsetfromdp(12365592);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_55_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_55->S00_AXI_bresp.bind(*p_55_S00_AXI_bresp);
        p_55_S00_AXI_bresp->set_sv_netview_offsetfromdp(12365648);
        xsim_sc_channel<0, bool > *p_55_S00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_55->S00_AXI_bvalid.bind(*p_55_S00_AXI_bvalid);
        p_55_S00_AXI_bvalid->set_sv_netview_offsetfromdp(12365704);
        xsim_sc_channel<0, bool > *p_55_S00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_55->S00_AXI_bready.bind(*p_55_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_55_S00_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_55_S00_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_55->S00_AXI_arid.bind(*p_55_S00_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_55_S00_AXI_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_55_S00_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_55->S00_AXI_araddr.bind(*p_55_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_55_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_55_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_55->S00_AXI_arlen.bind(*p_55_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_55_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_55_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_55->S00_AXI_arsize.bind(*p_55_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_55_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_55_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_55->S00_AXI_arburst.bind(*p_55_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_55_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_55_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_55->S00_AXI_arlock.bind(*p_55_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_55_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_55_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_55->S00_AXI_arcache.bind(*p_55_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_55_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_55_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_55->S00_AXI_arprot.bind(*p_55_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_55_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_55_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_55->S00_AXI_arqos.bind(*p_55_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_55_S00_AXI_arqos);
        xsim_sc_channel<0, bool > *p_55_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_55->S00_AXI_arvalid.bind(*p_55_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_55_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_55_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_55->S00_AXI_arready.bind(*p_55_S00_AXI_arready);
        p_55_S00_AXI_arready->set_sv_netview_offsetfromdp(12366376);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_55_S00_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_55->S00_AXI_rid.bind(*p_55_S00_AXI_rid);
        p_55_S00_AXI_rid->set_sv_netview_offsetfromdp(12366432);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_55_S00_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_55->S00_AXI_rdata.bind(*p_55_S00_AXI_rdata);
        p_55_S00_AXI_rdata->set_sv_netview_offsetfromdp(12366488);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_55_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_55->S00_AXI_rresp.bind(*p_55_S00_AXI_rresp);
        p_55_S00_AXI_rresp->set_sv_netview_offsetfromdp(12366544);
        xsim_sc_channel<0, bool > *p_55_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_55->S00_AXI_rlast.bind(*p_55_S00_AXI_rlast);
        p_55_S00_AXI_rlast->set_sv_netview_offsetfromdp(12366600);
        xsim_sc_channel<0, bool > *p_55_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_55->S00_AXI_rvalid.bind(*p_55_S00_AXI_rvalid);
        p_55_S00_AXI_rvalid->set_sv_netview_offsetfromdp(12366656);
        xsim_sc_channel<0, bool > *p_55_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_55->S00_AXI_rready.bind(*p_55_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_55_S00_AXI_rready);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_55_M00_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_55->M00_AXI_awaddr.bind(*p_55_M00_AXI_awaddr);
        p_55_M00_AXI_awaddr->set_sv_netview_offsetfromdp(12366768);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_55_M00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_55->M00_AXI_awlen.bind(*p_55_M00_AXI_awlen);
        p_55_M00_AXI_awlen->set_sv_netview_offsetfromdp(12366824);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_55_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_55->M00_AXI_awsize.bind(*p_55_M00_AXI_awsize);
        p_55_M00_AXI_awsize->set_sv_netview_offsetfromdp(12366880);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_55_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_55->M00_AXI_awburst.bind(*p_55_M00_AXI_awburst);
        p_55_M00_AXI_awburst->set_sv_netview_offsetfromdp(12366936);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_55_M00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_55->M00_AXI_awlock.bind(*p_55_M00_AXI_awlock);
        p_55_M00_AXI_awlock->set_sv_netview_offsetfromdp(12366992);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_55_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_55->M00_AXI_awcache.bind(*p_55_M00_AXI_awcache);
        p_55_M00_AXI_awcache->set_sv_netview_offsetfromdp(12367048);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_55_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_55->M00_AXI_awprot.bind(*p_55_M00_AXI_awprot);
        p_55_M00_AXI_awprot->set_sv_netview_offsetfromdp(12367104);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_55_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_55->M00_AXI_awqos.bind(*p_55_M00_AXI_awqos);
        p_55_M00_AXI_awqos->set_sv_netview_offsetfromdp(12367160);
        xsim_sc_channel<0, bool > *p_55_M00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_55->M00_AXI_awvalid.bind(*p_55_M00_AXI_awvalid);
        p_55_M00_AXI_awvalid->set_sv_netview_offsetfromdp(12367216);
        xsim_sc_channel<0, bool > *p_55_M00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_55->M00_AXI_awready.bind(*p_55_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_55_M00_AXI_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_55_M00_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_55->M00_AXI_wdata.bind(*p_55_M00_AXI_wdata);
        p_55_M00_AXI_wdata->set_sv_netview_offsetfromdp(12367328);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_55_M00_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_55->M00_AXI_wstrb.bind(*p_55_M00_AXI_wstrb);
        p_55_M00_AXI_wstrb->set_sv_netview_offsetfromdp(12367384);
        xsim_sc_channel<0, bool > *p_55_M00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_55->M00_AXI_wlast.bind(*p_55_M00_AXI_wlast);
        p_55_M00_AXI_wlast->set_sv_netview_offsetfromdp(12367440);
        xsim_sc_channel<0, bool > *p_55_M00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_55->M00_AXI_wvalid.bind(*p_55_M00_AXI_wvalid);
        p_55_M00_AXI_wvalid->set_sv_netview_offsetfromdp(12367496);
        xsim_sc_channel<0, bool > *p_55_M00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_55->M00_AXI_wready.bind(*p_55_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_55_M00_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_55_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_55->M00_AXI_bresp.bind(*p_55_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_55_M00_AXI_bresp);
        xsim_sc_channel<0, bool > *p_55_M00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_55->M00_AXI_bvalid.bind(*p_55_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_55_M00_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_55_M00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_55->M00_AXI_bready.bind(*p_55_M00_AXI_bready);
        p_55_M00_AXI_bready->set_sv_netview_offsetfromdp(12367720);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_55_M00_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_55->M00_AXI_araddr.bind(*p_55_M00_AXI_araddr);
        p_55_M00_AXI_araddr->set_sv_netview_offsetfromdp(12367776);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_55_M00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_55->M00_AXI_arlen.bind(*p_55_M00_AXI_arlen);
        p_55_M00_AXI_arlen->set_sv_netview_offsetfromdp(12367832);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_55_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_55->M00_AXI_arsize.bind(*p_55_M00_AXI_arsize);
        p_55_M00_AXI_arsize->set_sv_netview_offsetfromdp(12367888);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_55_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_55->M00_AXI_arburst.bind(*p_55_M00_AXI_arburst);
        p_55_M00_AXI_arburst->set_sv_netview_offsetfromdp(12367944);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_55_M00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_55->M00_AXI_arlock.bind(*p_55_M00_AXI_arlock);
        p_55_M00_AXI_arlock->set_sv_netview_offsetfromdp(12368000);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_55_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_55->M00_AXI_arcache.bind(*p_55_M00_AXI_arcache);
        p_55_M00_AXI_arcache->set_sv_netview_offsetfromdp(12368056);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_55_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_55->M00_AXI_arprot.bind(*p_55_M00_AXI_arprot);
        p_55_M00_AXI_arprot->set_sv_netview_offsetfromdp(12368112);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_55_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_55->M00_AXI_arqos.bind(*p_55_M00_AXI_arqos);
        p_55_M00_AXI_arqos->set_sv_netview_offsetfromdp(12368168);
        xsim_sc_channel<0, bool > *p_55_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_55->M00_AXI_arvalid.bind(*p_55_M00_AXI_arvalid);
        p_55_M00_AXI_arvalid->set_sv_netview_offsetfromdp(12368224);
        xsim_sc_channel<0, bool > *p_55_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_55->M00_AXI_arready.bind(*p_55_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_55_M00_AXI_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_55_M00_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_55->M00_AXI_rdata.bind(*p_55_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_55_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_55_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_55->M00_AXI_rresp.bind(*p_55_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_55_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_55_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_55->M00_AXI_rlast.bind(*p_55_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_55_M00_AXI_rlast);
        xsim_sc_channel<0, bool > *p_55_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_55->M00_AXI_rvalid.bind(*p_55_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_55_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_55_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_55->M00_AXI_rready.bind(*p_55_M00_AXI_rready);
        p_55_M00_AXI_rready->set_sv_netview_offsetfromdp(12368560);
        xsim_sc_channel<37, sc_dt::sc_bv<37> > *p_55_M01_AXI_awaddr = new xsim_sc_channel<37, sc_dt::sc_bv<37> >();
        sc_inst_55->M01_AXI_awaddr.bind(*p_55_M01_AXI_awaddr);
        p_55_M01_AXI_awaddr->set_sv_netview_offsetfromdp(12368616);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_55_M01_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_55->M01_AXI_awlen.bind(*p_55_M01_AXI_awlen);
        p_55_M01_AXI_awlen->set_sv_netview_offsetfromdp(12368672);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_55_M01_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_55->M01_AXI_awsize.bind(*p_55_M01_AXI_awsize);
        p_55_M01_AXI_awsize->set_sv_netview_offsetfromdp(12368728);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_55_M01_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_55->M01_AXI_awburst.bind(*p_55_M01_AXI_awburst);
        p_55_M01_AXI_awburst->set_sv_netview_offsetfromdp(12368784);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_55_M01_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_55->M01_AXI_awlock.bind(*p_55_M01_AXI_awlock);
        p_55_M01_AXI_awlock->set_sv_netview_offsetfromdp(12368840);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_55_M01_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_55->M01_AXI_awcache.bind(*p_55_M01_AXI_awcache);
        p_55_M01_AXI_awcache->set_sv_netview_offsetfromdp(12368896);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_55_M01_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_55->M01_AXI_awprot.bind(*p_55_M01_AXI_awprot);
        p_55_M01_AXI_awprot->set_sv_netview_offsetfromdp(12368952);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_55_M01_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_55->M01_AXI_awqos.bind(*p_55_M01_AXI_awqos);
        p_55_M01_AXI_awqos->set_sv_netview_offsetfromdp(12369008);
        xsim_sc_channel<0, bool > *p_55_M01_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_55->M01_AXI_awvalid.bind(*p_55_M01_AXI_awvalid);
        p_55_M01_AXI_awvalid->set_sv_netview_offsetfromdp(12369064);
        xsim_sc_channel<0, bool > *p_55_M01_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_55->M01_AXI_awready.bind(*p_55_M01_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_55_M01_AXI_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_55_M01_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_55->M01_AXI_wdata.bind(*p_55_M01_AXI_wdata);
        p_55_M01_AXI_wdata->set_sv_netview_offsetfromdp(12369176);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_55_M01_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_55->M01_AXI_wstrb.bind(*p_55_M01_AXI_wstrb);
        p_55_M01_AXI_wstrb->set_sv_netview_offsetfromdp(12369232);
        xsim_sc_channel<0, bool > *p_55_M01_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_55->M01_AXI_wlast.bind(*p_55_M01_AXI_wlast);
        p_55_M01_AXI_wlast->set_sv_netview_offsetfromdp(12369288);
        xsim_sc_channel<0, bool > *p_55_M01_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_55->M01_AXI_wvalid.bind(*p_55_M01_AXI_wvalid);
        p_55_M01_AXI_wvalid->set_sv_netview_offsetfromdp(12369344);
        xsim_sc_channel<0, bool > *p_55_M01_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_55->M01_AXI_wready.bind(*p_55_M01_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_55_M01_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_55_M01_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_55->M01_AXI_bresp.bind(*p_55_M01_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_55_M01_AXI_bresp);
        xsim_sc_channel<0, bool > *p_55_M01_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_55->M01_AXI_bvalid.bind(*p_55_M01_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_55_M01_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_55_M01_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_55->M01_AXI_bready.bind(*p_55_M01_AXI_bready);
        p_55_M01_AXI_bready->set_sv_netview_offsetfromdp(12369568);
        xsim_sc_channel<37, sc_dt::sc_bv<37> > *p_55_M01_AXI_araddr = new xsim_sc_channel<37, sc_dt::sc_bv<37> >();
        sc_inst_55->M01_AXI_araddr.bind(*p_55_M01_AXI_araddr);
        p_55_M01_AXI_araddr->set_sv_netview_offsetfromdp(12369624);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_55_M01_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_55->M01_AXI_arlen.bind(*p_55_M01_AXI_arlen);
        p_55_M01_AXI_arlen->set_sv_netview_offsetfromdp(12369680);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_55_M01_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_55->M01_AXI_arsize.bind(*p_55_M01_AXI_arsize);
        p_55_M01_AXI_arsize->set_sv_netview_offsetfromdp(12369736);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_55_M01_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_55->M01_AXI_arburst.bind(*p_55_M01_AXI_arburst);
        p_55_M01_AXI_arburst->set_sv_netview_offsetfromdp(12369792);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_55_M01_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_55->M01_AXI_arlock.bind(*p_55_M01_AXI_arlock);
        p_55_M01_AXI_arlock->set_sv_netview_offsetfromdp(12369848);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_55_M01_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_55->M01_AXI_arcache.bind(*p_55_M01_AXI_arcache);
        p_55_M01_AXI_arcache->set_sv_netview_offsetfromdp(12369904);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_55_M01_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_55->M01_AXI_arprot.bind(*p_55_M01_AXI_arprot);
        p_55_M01_AXI_arprot->set_sv_netview_offsetfromdp(12369960);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_55_M01_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_55->M01_AXI_arqos.bind(*p_55_M01_AXI_arqos);
        p_55_M01_AXI_arqos->set_sv_netview_offsetfromdp(12370016);
        xsim_sc_channel<0, bool > *p_55_M01_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_55->M01_AXI_arvalid.bind(*p_55_M01_AXI_arvalid);
        p_55_M01_AXI_arvalid->set_sv_netview_offsetfromdp(12370072);
        xsim_sc_channel<0, bool > *p_55_M01_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_55->M01_AXI_arready.bind(*p_55_M01_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_55_M01_AXI_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_55_M01_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_55->M01_AXI_rdata.bind(*p_55_M01_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_55_M01_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_55_M01_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_55->M01_AXI_rresp.bind(*p_55_M01_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_55_M01_AXI_rresp);
        xsim_sc_channel<0, bool > *p_55_M01_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_55->M01_AXI_rlast.bind(*p_55_M01_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_55_M01_AXI_rlast);
        xsim_sc_channel<0, bool > *p_55_M01_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_55->M01_AXI_rvalid.bind(*p_55_M01_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_55_M01_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_55_M01_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_55->M01_AXI_rready.bind(*p_55_M01_AXI_rready);
        p_55_M01_AXI_rready->set_sv_netview_offsetfromdp(12370408);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_55_M02_AXI_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_55->M02_AXI_awaddr.bind(*p_55_M02_AXI_awaddr);
        p_55_M02_AXI_awaddr->set_sv_netview_offsetfromdp(12370464);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_55_M02_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_55->M02_AXI_awlen.bind(*p_55_M02_AXI_awlen);
        p_55_M02_AXI_awlen->set_sv_netview_offsetfromdp(12370520);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_55_M02_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_55->M02_AXI_awsize.bind(*p_55_M02_AXI_awsize);
        p_55_M02_AXI_awsize->set_sv_netview_offsetfromdp(12370576);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_55_M02_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_55->M02_AXI_awburst.bind(*p_55_M02_AXI_awburst);
        p_55_M02_AXI_awburst->set_sv_netview_offsetfromdp(12370632);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_55_M02_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_55->M02_AXI_awlock.bind(*p_55_M02_AXI_awlock);
        p_55_M02_AXI_awlock->set_sv_netview_offsetfromdp(12370688);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_55_M02_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_55->M02_AXI_awcache.bind(*p_55_M02_AXI_awcache);
        p_55_M02_AXI_awcache->set_sv_netview_offsetfromdp(12370744);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_55_M02_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_55->M02_AXI_awprot.bind(*p_55_M02_AXI_awprot);
        p_55_M02_AXI_awprot->set_sv_netview_offsetfromdp(12370800);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_55_M02_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_55->M02_AXI_awqos.bind(*p_55_M02_AXI_awqos);
        p_55_M02_AXI_awqos->set_sv_netview_offsetfromdp(12370856);
        xsim_sc_channel<0, bool > *p_55_M02_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_55->M02_AXI_awvalid.bind(*p_55_M02_AXI_awvalid);
        p_55_M02_AXI_awvalid->set_sv_netview_offsetfromdp(12370912);
        xsim_sc_channel<0, bool > *p_55_M02_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_55->M02_AXI_awready.bind(*p_55_M02_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_55_M02_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_55_M02_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_55->M02_AXI_wdata.bind(*p_55_M02_AXI_wdata);
        p_55_M02_AXI_wdata->set_sv_netview_offsetfromdp(12371024);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_55_M02_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_55->M02_AXI_wstrb.bind(*p_55_M02_AXI_wstrb);
        p_55_M02_AXI_wstrb->set_sv_netview_offsetfromdp(12371080);
        xsim_sc_channel<0, bool > *p_55_M02_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_55->M02_AXI_wlast.bind(*p_55_M02_AXI_wlast);
        p_55_M02_AXI_wlast->set_sv_netview_offsetfromdp(12371136);
        xsim_sc_channel<0, bool > *p_55_M02_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_55->M02_AXI_wvalid.bind(*p_55_M02_AXI_wvalid);
        p_55_M02_AXI_wvalid->set_sv_netview_offsetfromdp(12371192);
        xsim_sc_channel<0, bool > *p_55_M02_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_55->M02_AXI_wready.bind(*p_55_M02_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_55_M02_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_55_M02_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_55->M02_AXI_bresp.bind(*p_55_M02_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_55_M02_AXI_bresp);
        xsim_sc_channel<0, bool > *p_55_M02_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_55->M02_AXI_bvalid.bind(*p_55_M02_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_55_M02_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_55_M02_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_55->M02_AXI_bready.bind(*p_55_M02_AXI_bready);
        p_55_M02_AXI_bready->set_sv_netview_offsetfromdp(12371416);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_55_M02_AXI_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_55->M02_AXI_araddr.bind(*p_55_M02_AXI_araddr);
        p_55_M02_AXI_araddr->set_sv_netview_offsetfromdp(12371472);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_55_M02_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_55->M02_AXI_arlen.bind(*p_55_M02_AXI_arlen);
        p_55_M02_AXI_arlen->set_sv_netview_offsetfromdp(12371528);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_55_M02_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_55->M02_AXI_arsize.bind(*p_55_M02_AXI_arsize);
        p_55_M02_AXI_arsize->set_sv_netview_offsetfromdp(12371584);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_55_M02_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_55->M02_AXI_arburst.bind(*p_55_M02_AXI_arburst);
        p_55_M02_AXI_arburst->set_sv_netview_offsetfromdp(12371640);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_55_M02_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_55->M02_AXI_arlock.bind(*p_55_M02_AXI_arlock);
        p_55_M02_AXI_arlock->set_sv_netview_offsetfromdp(12371696);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_55_M02_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_55->M02_AXI_arcache.bind(*p_55_M02_AXI_arcache);
        p_55_M02_AXI_arcache->set_sv_netview_offsetfromdp(12371752);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_55_M02_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_55->M02_AXI_arprot.bind(*p_55_M02_AXI_arprot);
        p_55_M02_AXI_arprot->set_sv_netview_offsetfromdp(12371808);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_55_M02_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_55->M02_AXI_arqos.bind(*p_55_M02_AXI_arqos);
        p_55_M02_AXI_arqos->set_sv_netview_offsetfromdp(12371864);
        xsim_sc_channel<0, bool > *p_55_M02_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_55->M02_AXI_arvalid.bind(*p_55_M02_AXI_arvalid);
        p_55_M02_AXI_arvalid->set_sv_netview_offsetfromdp(12371920);
        xsim_sc_channel<0, bool > *p_55_M02_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_55->M02_AXI_arready.bind(*p_55_M02_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_55_M02_AXI_arready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_55_M02_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_55->M02_AXI_rdata.bind(*p_55_M02_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_55_M02_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_55_M02_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_55->M02_AXI_rresp.bind(*p_55_M02_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_55_M02_AXI_rresp);
        xsim_sc_channel<0, bool > *p_55_M02_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_55->M02_AXI_rlast.bind(*p_55_M02_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_55_M02_AXI_rlast);
        xsim_sc_channel<0, bool > *p_55_M02_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_55->M02_AXI_rvalid.bind(*p_55_M02_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_55_M02_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_55_M02_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_55->M02_AXI_rready.bind(*p_55_M02_AXI_rready);
        p_55_M02_AXI_rready->set_sv_netview_offsetfromdp(12372256);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_55_M03_AXI_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_55->M03_AXI_awaddr.bind(*p_55_M03_AXI_awaddr);
        p_55_M03_AXI_awaddr->set_sv_netview_offsetfromdp(12372312);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_55_M03_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_55->M03_AXI_awlen.bind(*p_55_M03_AXI_awlen);
        p_55_M03_AXI_awlen->set_sv_netview_offsetfromdp(12372368);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_55_M03_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_55->M03_AXI_awsize.bind(*p_55_M03_AXI_awsize);
        p_55_M03_AXI_awsize->set_sv_netview_offsetfromdp(12372424);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_55_M03_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_55->M03_AXI_awburst.bind(*p_55_M03_AXI_awburst);
        p_55_M03_AXI_awburst->set_sv_netview_offsetfromdp(12372480);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_55_M03_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_55->M03_AXI_awlock.bind(*p_55_M03_AXI_awlock);
        p_55_M03_AXI_awlock->set_sv_netview_offsetfromdp(12372536);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_55_M03_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_55->M03_AXI_awcache.bind(*p_55_M03_AXI_awcache);
        p_55_M03_AXI_awcache->set_sv_netview_offsetfromdp(12372592);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_55_M03_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_55->M03_AXI_awprot.bind(*p_55_M03_AXI_awprot);
        p_55_M03_AXI_awprot->set_sv_netview_offsetfromdp(12372648);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_55_M03_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_55->M03_AXI_awqos.bind(*p_55_M03_AXI_awqos);
        p_55_M03_AXI_awqos->set_sv_netview_offsetfromdp(12372704);
        xsim_sc_channel<0, bool > *p_55_M03_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_55->M03_AXI_awvalid.bind(*p_55_M03_AXI_awvalid);
        p_55_M03_AXI_awvalid->set_sv_netview_offsetfromdp(12372760);
        xsim_sc_channel<0, bool > *p_55_M03_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_55->M03_AXI_awready.bind(*p_55_M03_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_55_M03_AXI_awready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_55_M03_AXI_wdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_55->M03_AXI_wdata.bind(*p_55_M03_AXI_wdata);
        p_55_M03_AXI_wdata->set_sv_netview_offsetfromdp(12372872);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_55_M03_AXI_wstrb = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_55->M03_AXI_wstrb.bind(*p_55_M03_AXI_wstrb);
        p_55_M03_AXI_wstrb->set_sv_netview_offsetfromdp(12372928);
        xsim_sc_channel<0, bool > *p_55_M03_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_55->M03_AXI_wlast.bind(*p_55_M03_AXI_wlast);
        p_55_M03_AXI_wlast->set_sv_netview_offsetfromdp(12372984);
        xsim_sc_channel<0, bool > *p_55_M03_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_55->M03_AXI_wvalid.bind(*p_55_M03_AXI_wvalid);
        p_55_M03_AXI_wvalid->set_sv_netview_offsetfromdp(12373040);
        xsim_sc_channel<0, bool > *p_55_M03_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_55->M03_AXI_wready.bind(*p_55_M03_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_55_M03_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_55_M03_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_55->M03_AXI_bresp.bind(*p_55_M03_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_55_M03_AXI_bresp);
        xsim_sc_channel<0, bool > *p_55_M03_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_55->M03_AXI_bvalid.bind(*p_55_M03_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_55_M03_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_55_M03_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_55->M03_AXI_bready.bind(*p_55_M03_AXI_bready);
        p_55_M03_AXI_bready->set_sv_netview_offsetfromdp(12373264);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_55_M03_AXI_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_55->M03_AXI_araddr.bind(*p_55_M03_AXI_araddr);
        p_55_M03_AXI_araddr->set_sv_netview_offsetfromdp(12373320);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_55_M03_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_55->M03_AXI_arlen.bind(*p_55_M03_AXI_arlen);
        p_55_M03_AXI_arlen->set_sv_netview_offsetfromdp(12373376);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_55_M03_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_55->M03_AXI_arsize.bind(*p_55_M03_AXI_arsize);
        p_55_M03_AXI_arsize->set_sv_netview_offsetfromdp(12373432);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_55_M03_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_55->M03_AXI_arburst.bind(*p_55_M03_AXI_arburst);
        p_55_M03_AXI_arburst->set_sv_netview_offsetfromdp(12373488);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_55_M03_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_55->M03_AXI_arlock.bind(*p_55_M03_AXI_arlock);
        p_55_M03_AXI_arlock->set_sv_netview_offsetfromdp(12373544);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_55_M03_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_55->M03_AXI_arcache.bind(*p_55_M03_AXI_arcache);
        p_55_M03_AXI_arcache->set_sv_netview_offsetfromdp(12373600);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_55_M03_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_55->M03_AXI_arprot.bind(*p_55_M03_AXI_arprot);
        p_55_M03_AXI_arprot->set_sv_netview_offsetfromdp(12373656);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_55_M03_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_55->M03_AXI_arqos.bind(*p_55_M03_AXI_arqos);
        p_55_M03_AXI_arqos->set_sv_netview_offsetfromdp(12373712);
        xsim_sc_channel<0, bool > *p_55_M03_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_55->M03_AXI_arvalid.bind(*p_55_M03_AXI_arvalid);
        p_55_M03_AXI_arvalid->set_sv_netview_offsetfromdp(12373768);
        xsim_sc_channel<0, bool > *p_55_M03_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_55->M03_AXI_arready.bind(*p_55_M03_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_55_M03_AXI_arready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_55_M03_AXI_rdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_55->M03_AXI_rdata.bind(*p_55_M03_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_55_M03_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_55_M03_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_55->M03_AXI_rresp.bind(*p_55_M03_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_55_M03_AXI_rresp);
        xsim_sc_channel<0, bool > *p_55_M03_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_55->M03_AXI_rlast.bind(*p_55_M03_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_55_M03_AXI_rlast);
        xsim_sc_channel<0, bool > *p_55_M03_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_55->M03_AXI_rvalid.bind(*p_55_M03_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_55_M03_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_55_M03_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_55->M03_AXI_rready.bind(*p_55_M03_AXI_rready);
        p_55_M03_AXI_rready->set_sv_netview_offsetfromdp(12374104);
        sc_inst_56 = new pfm_top_sci(".pfm_top_wrapper.pfm_top_i.pfm_top_sci_inst");
        sc_inst_56->xsim_set_dbg_index(45);
        sc_inst_57 = new pfm_top_axi_vip_0_0(".pfm_top_wrapper.pfm_top_i.static_region.axi_vip_0");
        sc_inst_57->xsim_set_dbg_index(257);
        xsim_sc_channel<0, bool > *p_57_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_57->aclk.bind(*p_57_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_57_aclk);
        xsim_sc_channel<0, bool > *p_57_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_57->aresetn.bind(*p_57_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_57_aresetn);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_57_s_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_57->s_axi_awaddr.bind(*p_57_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_57_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_57->s_axi_awlen.bind(*p_57_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_awlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_57_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_57->s_axi_awburst.bind(*p_57_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_57_s_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_57->s_axi_awlock.bind(*p_57_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_57_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_57->s_axi_awcache.bind(*p_57_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_57_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_57->s_axi_awprot.bind(*p_57_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_57_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_57->s_axi_awqos.bind(*p_57_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_57_s_axi_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_57->s_axi_awuser.bind(*p_57_s_axi_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_awuser);
        xsim_sc_channel<0, bool > *p_57_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_57->s_axi_awvalid.bind(*p_57_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_57_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_57->s_axi_awready.bind(*p_57_s_axi_awready);
        p_57_s_axi_awready->set_sv_netview_offsetfromdp(12553960);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_57_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_57->s_axi_wdata.bind(*p_57_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_57_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_57->s_axi_wstrb.bind(*p_57_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_57_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_57->s_axi_wlast.bind(*p_57_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_57_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_57->s_axi_wvalid.bind(*p_57_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_57_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_57->s_axi_wready.bind(*p_57_s_axi_wready);
        p_57_s_axi_wready->set_sv_netview_offsetfromdp(12554240);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_57_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_57->s_axi_bresp.bind(*p_57_s_axi_bresp);
        p_57_s_axi_bresp->set_sv_netview_offsetfromdp(12554296);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_57_s_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_57->s_axi_buser.bind(*p_57_s_axi_buser);
        p_57_s_axi_buser->set_sv_netview_offsetfromdp(12554352);
        xsim_sc_channel<0, bool > *p_57_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_57->s_axi_bvalid.bind(*p_57_s_axi_bvalid);
        p_57_s_axi_bvalid->set_sv_netview_offsetfromdp(12554408);
        xsim_sc_channel<0, bool > *p_57_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_57->s_axi_bready.bind(*p_57_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_bready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_57_s_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_57->s_axi_araddr.bind(*p_57_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_57_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_57->s_axi_arlen.bind(*p_57_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_arlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_57_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_57->s_axi_arburst.bind(*p_57_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_57_s_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_57->s_axi_arlock.bind(*p_57_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_57_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_57->s_axi_arcache.bind(*p_57_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_57_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_57->s_axi_arprot.bind(*p_57_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_57_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_57->s_axi_arqos.bind(*p_57_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_57_s_axi_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_57->s_axi_aruser.bind(*p_57_s_axi_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_aruser);
        xsim_sc_channel<0, bool > *p_57_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_57->s_axi_arvalid.bind(*p_57_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_57_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_57->s_axi_arready.bind(*p_57_s_axi_arready);
        p_57_s_axi_arready->set_sv_netview_offsetfromdp(12555024);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_57_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_57->s_axi_rdata.bind(*p_57_s_axi_rdata);
        p_57_s_axi_rdata->set_sv_netview_offsetfromdp(12555080);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_57_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_57->s_axi_rresp.bind(*p_57_s_axi_rresp);
        p_57_s_axi_rresp->set_sv_netview_offsetfromdp(12555136);
        xsim_sc_channel<0, bool > *p_57_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_57->s_axi_rlast.bind(*p_57_s_axi_rlast);
        p_57_s_axi_rlast->set_sv_netview_offsetfromdp(12555192);
        xsim_sc_channel<0, bool > *p_57_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_57->s_axi_rvalid.bind(*p_57_s_axi_rvalid);
        p_57_s_axi_rvalid->set_sv_netview_offsetfromdp(12555248);
        xsim_sc_channel<0, bool > *p_57_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_57->s_axi_rready.bind(*p_57_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_rready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_57_m_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_57->m_axi_awaddr.bind(*p_57_m_axi_awaddr);
        p_57_m_axi_awaddr->set_sv_netview_offsetfromdp(12555360);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_57_m_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_57->m_axi_awlen.bind(*p_57_m_axi_awlen);
        p_57_m_axi_awlen->set_sv_netview_offsetfromdp(12555416);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_57_m_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_57->m_axi_awburst.bind(*p_57_m_axi_awburst);
        p_57_m_axi_awburst->set_sv_netview_offsetfromdp(12555472);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_57_m_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_57->m_axi_awlock.bind(*p_57_m_axi_awlock);
        p_57_m_axi_awlock->set_sv_netview_offsetfromdp(12555528);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_57_m_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_57->m_axi_awcache.bind(*p_57_m_axi_awcache);
        p_57_m_axi_awcache->set_sv_netview_offsetfromdp(12555584);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_57_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_57->m_axi_awprot.bind(*p_57_m_axi_awprot);
        p_57_m_axi_awprot->set_sv_netview_offsetfromdp(12555640);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_57_m_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_57->m_axi_awqos.bind(*p_57_m_axi_awqos);
        p_57_m_axi_awqos->set_sv_netview_offsetfromdp(12555696);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_57_m_axi_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_57->m_axi_awuser.bind(*p_57_m_axi_awuser);
        p_57_m_axi_awuser->set_sv_netview_offsetfromdp(12555752);
        xsim_sc_channel<0, bool > *p_57_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_57->m_axi_awvalid.bind(*p_57_m_axi_awvalid);
        p_57_m_axi_awvalid->set_sv_netview_offsetfromdp(12555808);
        xsim_sc_channel<0, bool > *p_57_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_57->m_axi_awready.bind(*p_57_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_57_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_57_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_57->m_axi_wdata.bind(*p_57_m_axi_wdata);
        p_57_m_axi_wdata->set_sv_netview_offsetfromdp(12555920);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_57_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_57->m_axi_wstrb.bind(*p_57_m_axi_wstrb);
        p_57_m_axi_wstrb->set_sv_netview_offsetfromdp(12555976);
        xsim_sc_channel<0, bool > *p_57_m_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_57->m_axi_wlast.bind(*p_57_m_axi_wlast);
        p_57_m_axi_wlast->set_sv_netview_offsetfromdp(12556032);
        xsim_sc_channel<0, bool > *p_57_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_57->m_axi_wvalid.bind(*p_57_m_axi_wvalid);
        p_57_m_axi_wvalid->set_sv_netview_offsetfromdp(12556088);
        xsim_sc_channel<0, bool > *p_57_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_57->m_axi_wready.bind(*p_57_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_57_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_57_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_57->m_axi_bresp.bind(*p_57_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_57_m_axi_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_57_m_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_57->m_axi_buser.bind(*p_57_m_axi_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_57_m_axi_buser);
        xsim_sc_channel<0, bool > *p_57_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_57->m_axi_bvalid.bind(*p_57_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_57_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_57_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_57->m_axi_bready.bind(*p_57_m_axi_bready);
        p_57_m_axi_bready->set_sv_netview_offsetfromdp(12556368);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_57_m_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_57->m_axi_araddr.bind(*p_57_m_axi_araddr);
        p_57_m_axi_araddr->set_sv_netview_offsetfromdp(12556424);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_57_m_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_57->m_axi_arlen.bind(*p_57_m_axi_arlen);
        p_57_m_axi_arlen->set_sv_netview_offsetfromdp(12556480);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_57_m_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_57->m_axi_arburst.bind(*p_57_m_axi_arburst);
        p_57_m_axi_arburst->set_sv_netview_offsetfromdp(12556536);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_57_m_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_57->m_axi_arlock.bind(*p_57_m_axi_arlock);
        p_57_m_axi_arlock->set_sv_netview_offsetfromdp(12556592);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_57_m_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_57->m_axi_arcache.bind(*p_57_m_axi_arcache);
        p_57_m_axi_arcache->set_sv_netview_offsetfromdp(12556648);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_57_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_57->m_axi_arprot.bind(*p_57_m_axi_arprot);
        p_57_m_axi_arprot->set_sv_netview_offsetfromdp(12556704);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_57_m_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_57->m_axi_arqos.bind(*p_57_m_axi_arqos);
        p_57_m_axi_arqos->set_sv_netview_offsetfromdp(12556760);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_57_m_axi_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_57->m_axi_aruser.bind(*p_57_m_axi_aruser);
        p_57_m_axi_aruser->set_sv_netview_offsetfromdp(12556816);
        xsim_sc_channel<0, bool > *p_57_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_57->m_axi_arvalid.bind(*p_57_m_axi_arvalid);
        p_57_m_axi_arvalid->set_sv_netview_offsetfromdp(12556872);
        xsim_sc_channel<0, bool > *p_57_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_57->m_axi_arready.bind(*p_57_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_57_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_57_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_57->m_axi_rdata.bind(*p_57_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_57_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_57_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_57->m_axi_rresp.bind(*p_57_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_57_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_57_m_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_57->m_axi_rlast.bind(*p_57_m_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_57_m_axi_rlast);
        xsim_sc_channel<0, bool > *p_57_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_57->m_axi_rvalid.bind(*p_57_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_57_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_57_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_57->m_axi_rready.bind(*p_57_m_axi_rready);
        p_57_m_axi_rready->set_sv_netview_offsetfromdp(12557208);
        sc_inst_58 = new pfm_top_xbar_0(".pfm_top_wrapper.pfm_top_i.static_region.connect_to_es_cu.xbar");
        sc_inst_58->xsim_set_dbg_index(653);
        xsim_sc_channel<0, bool > *p_58_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_58->aclk.bind(*p_58_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_58_aclk);
        xsim_sc_channel<0, bool > *p_58_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_58->aresetn.bind(*p_58_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_58_aresetn);
        xsim_sc_channel<128, sc_dt::sc_bv<128> > *p_58_s_axi_awaddr = new xsim_sc_channel<128, sc_dt::sc_bv<128> >();
        sc_inst_58->s_axi_awaddr.bind(*p_58_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_58_s_axi_awaddr);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_58_s_axi_awprot = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_58->s_axi_awprot.bind(*p_58_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_58_s_axi_awprot);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_58_s_axi_awvalid = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_58->s_axi_awvalid.bind(*p_58_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_58_s_axi_awvalid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_58_s_axi_awready = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_58->s_axi_awready.bind(*p_58_s_axi_awready);
        p_58_s_axi_awready->set_sv_netview_offsetfromdp(12672344);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_58_s_axi_wdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_58->s_axi_wdata.bind(*p_58_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_58_s_axi_wdata);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_58_s_axi_wstrb = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_58->s_axi_wstrb.bind(*p_58_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_58_s_axi_wstrb);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_58_s_axi_wvalid = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_58->s_axi_wvalid.bind(*p_58_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_58_s_axi_wvalid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_58_s_axi_wready = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_58->s_axi_wready.bind(*p_58_s_axi_wready);
        p_58_s_axi_wready->set_sv_netview_offsetfromdp(12672568);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_58_s_axi_bresp = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_58->s_axi_bresp.bind(*p_58_s_axi_bresp);
        p_58_s_axi_bresp->set_sv_netview_offsetfromdp(12672624);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_58_s_axi_bvalid = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_58->s_axi_bvalid.bind(*p_58_s_axi_bvalid);
        p_58_s_axi_bvalid->set_sv_netview_offsetfromdp(12672680);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_58_s_axi_bready = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_58->s_axi_bready.bind(*p_58_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_58_s_axi_bready);
        xsim_sc_channel<128, sc_dt::sc_bv<128> > *p_58_s_axi_araddr = new xsim_sc_channel<128, sc_dt::sc_bv<128> >();
        sc_inst_58->s_axi_araddr.bind(*p_58_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_58_s_axi_araddr);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_58_s_axi_arprot = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_58->s_axi_arprot.bind(*p_58_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_58_s_axi_arprot);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_58_s_axi_arvalid = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_58->s_axi_arvalid.bind(*p_58_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_58_s_axi_arvalid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_58_s_axi_arready = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_58->s_axi_arready.bind(*p_58_s_axi_arready);
        p_58_s_axi_arready->set_sv_netview_offsetfromdp(12672960);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_58_s_axi_rdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_58->s_axi_rdata.bind(*p_58_s_axi_rdata);
        p_58_s_axi_rdata->set_sv_netview_offsetfromdp(12673016);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_58_s_axi_rresp = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_58->s_axi_rresp.bind(*p_58_s_axi_rresp);
        p_58_s_axi_rresp->set_sv_netview_offsetfromdp(12673072);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_58_s_axi_rvalid = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_58->s_axi_rvalid.bind(*p_58_s_axi_rvalid);
        p_58_s_axi_rvalid->set_sv_netview_offsetfromdp(12673128);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_58_s_axi_rready = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_58->s_axi_rready.bind(*p_58_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_58_s_axi_rready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_58_m_axi_awaddr = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_58->m_axi_awaddr.bind(*p_58_m_axi_awaddr);
        p_58_m_axi_awaddr->set_sv_netview_offsetfromdp(12673240);
        xsim_sc_channel<12, sc_dt::sc_bv<12> > *p_58_m_axi_awprot = new xsim_sc_channel<12, sc_dt::sc_bv<12> >();
        sc_inst_58->m_axi_awprot.bind(*p_58_m_axi_awprot);
        p_58_m_axi_awprot->set_sv_netview_offsetfromdp(12673296);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_58_m_axi_awvalid = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_58->m_axi_awvalid.bind(*p_58_m_axi_awvalid);
        p_58_m_axi_awvalid->set_sv_netview_offsetfromdp(12673352);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_58_m_axi_awready = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_58->m_axi_awready.bind(*p_58_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_58_m_axi_awready);
        xsim_sc_channel<128, sc_dt::sc_bv<128> > *p_58_m_axi_wdata = new xsim_sc_channel<128, sc_dt::sc_bv<128> >();
        sc_inst_58->m_axi_wdata.bind(*p_58_m_axi_wdata);
        p_58_m_axi_wdata->set_sv_netview_offsetfromdp(12673464);
        xsim_sc_channel<16, sc_dt::sc_bv<16> > *p_58_m_axi_wstrb = new xsim_sc_channel<16, sc_dt::sc_bv<16> >();
        sc_inst_58->m_axi_wstrb.bind(*p_58_m_axi_wstrb);
        p_58_m_axi_wstrb->set_sv_netview_offsetfromdp(12673520);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_58_m_axi_wvalid = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_58->m_axi_wvalid.bind(*p_58_m_axi_wvalid);
        p_58_m_axi_wvalid->set_sv_netview_offsetfromdp(12673576);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_58_m_axi_wready = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_58->m_axi_wready.bind(*p_58_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_58_m_axi_wready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_58_m_axi_bresp = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_58->m_axi_bresp.bind(*p_58_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_58_m_axi_bresp);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_58_m_axi_bvalid = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_58->m_axi_bvalid.bind(*p_58_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_58_m_axi_bvalid);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_58_m_axi_bready = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_58->m_axi_bready.bind(*p_58_m_axi_bready);
        p_58_m_axi_bready->set_sv_netview_offsetfromdp(12673800);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_58_m_axi_araddr = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_58->m_axi_araddr.bind(*p_58_m_axi_araddr);
        p_58_m_axi_araddr->set_sv_netview_offsetfromdp(12673856);
        xsim_sc_channel<12, sc_dt::sc_bv<12> > *p_58_m_axi_arprot = new xsim_sc_channel<12, sc_dt::sc_bv<12> >();
        sc_inst_58->m_axi_arprot.bind(*p_58_m_axi_arprot);
        p_58_m_axi_arprot->set_sv_netview_offsetfromdp(12673912);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_58_m_axi_arvalid = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_58->m_axi_arvalid.bind(*p_58_m_axi_arvalid);
        p_58_m_axi_arvalid->set_sv_netview_offsetfromdp(12673968);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_58_m_axi_arready = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_58->m_axi_arready.bind(*p_58_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_58_m_axi_arready);
        xsim_sc_channel<128, sc_dt::sc_bv<128> > *p_58_m_axi_rdata = new xsim_sc_channel<128, sc_dt::sc_bv<128> >();
        sc_inst_58->m_axi_rdata.bind(*p_58_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_58_m_axi_rdata);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_58_m_axi_rresp = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_58->m_axi_rresp.bind(*p_58_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_58_m_axi_rresp);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_58_m_axi_rvalid = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_58->m_axi_rvalid.bind(*p_58_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_58_m_axi_rvalid);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_58_m_axi_rready = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_58->m_axi_rready.bind(*p_58_m_axi_rready);
        p_58_m_axi_rready->set_sv_netview_offsetfromdp(12674248);
        sc_inst_59 = new pfm_top_embedded_schedular_0(".pfm_top_wrapper.pfm_top_i.static_region.embedded_schedular");
        sc_inst_59->xsim_set_dbg_index(261);
        xsim_sc_channel<128, sc_dt::sc_bv<128> > *p_59_interrupt_cu = new xsim_sc_channel<128, sc_dt::sc_bv<128> >();
        sc_inst_59->interrupt_cu.bind(*p_59_interrupt_cu);
        (*_glb_hdl_sc_channel_map).push_back(p_59_interrupt_cu);
        xsim_sc_channel<0, bool > *p_59_interrupt_m2m = new xsim_sc_channel<0, bool >();
        sc_inst_59->interrupt_m2m.bind(*p_59_interrupt_m2m);
        p_59_interrupt_m2m->set_sv_netview_offsetfromdp(12676136);
        xsim_sc_channel<0, bool > *p_59_s_axi_ctrl_user_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_59->s_axi_ctrl_user_aresetn.bind(*p_59_s_axi_ctrl_user_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_59_s_axi_ctrl_user_aresetn);
        xsim_sc_channel<0, bool > *p_59_s_axi_data_p2p_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_59->s_axi_data_p2p_aresetn.bind(*p_59_s_axi_data_p2p_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_59_s_axi_data_p2p_aresetn);
        xsim_sc_channel<0, bool > *p_59_maxi_lite_mb_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_59->maxi_lite_mb_aresetn.bind(*p_59_maxi_lite_mb_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_59_maxi_lite_mb_aresetn);
        xsim_sc_channel<0, bool > *p_59_m_axi_data_m2m_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_59->m_axi_data_m2m_aresetn.bind(*p_59_m_axi_data_m2m_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_59_m_axi_data_m2m_aresetn);
        xsim_sc_channel<0, bool > *p_59_s_axi_ctrl_user_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_59->s_axi_ctrl_user_aclk.bind(*p_59_s_axi_ctrl_user_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_59_s_axi_ctrl_user_aclk);
        xsim_sc_channel<0, bool > *p_59_s_axi_data_p2p_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_59->s_axi_data_p2p_aclk.bind(*p_59_s_axi_data_p2p_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_59_s_axi_data_p2p_aclk);
        xsim_sc_channel<0, bool > *p_59_maxi_lite_mb_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_59->maxi_lite_mb_aclk.bind(*p_59_maxi_lite_mb_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_59_maxi_lite_mb_aclk);
        xsim_sc_channel<0, bool > *p_59_m_axi_data_m2m_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_59->m_axi_data_m2m_aclk.bind(*p_59_m_axi_data_m2m_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_59_m_axi_data_m2m_aclk);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_59_s_axi_data_p2p_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_59->s_axi_data_p2p_awaddr.bind(*p_59_s_axi_data_p2p_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_59_s_axi_data_p2p_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_59_s_axi_data_p2p_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_59->s_axi_data_p2p_awlen.bind(*p_59_s_axi_data_p2p_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_59_s_axi_data_p2p_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_59_s_axi_data_p2p_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_59->s_axi_data_p2p_awsize.bind(*p_59_s_axi_data_p2p_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_59_s_axi_data_p2p_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_59_s_axi_data_p2p_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_59->s_axi_data_p2p_awburst.bind(*p_59_s_axi_data_p2p_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_59_s_axi_data_p2p_awburst);
        xsim_sc_channel<0, bool > *p_59_s_axi_data_p2p_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_59->s_axi_data_p2p_awlock.bind(*p_59_s_axi_data_p2p_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_59_s_axi_data_p2p_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_59_s_axi_data_p2p_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_59->s_axi_data_p2p_awcache.bind(*p_59_s_axi_data_p2p_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_59_s_axi_data_p2p_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_59_s_axi_data_p2p_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_59->s_axi_data_p2p_awprot.bind(*p_59_s_axi_data_p2p_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_59_s_axi_data_p2p_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_59_s_axi_data_p2p_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_59->s_axi_data_p2p_awregion.bind(*p_59_s_axi_data_p2p_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_59_s_axi_data_p2p_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_59_s_axi_data_p2p_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_59->s_axi_data_p2p_awqos.bind(*p_59_s_axi_data_p2p_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_59_s_axi_data_p2p_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_59_s_axi_data_p2p_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_59->s_axi_data_p2p_awuser.bind(*p_59_s_axi_data_p2p_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_59_s_axi_data_p2p_awuser);
        xsim_sc_channel<0, bool > *p_59_s_axi_data_p2p_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_59->s_axi_data_p2p_awvalid.bind(*p_59_s_axi_data_p2p_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_59_s_axi_data_p2p_awvalid);
        xsim_sc_channel<0, bool > *p_59_s_axi_data_p2p_awready = new xsim_sc_channel<0, bool >();
        sc_inst_59->s_axi_data_p2p_awready.bind(*p_59_s_axi_data_p2p_awready);
        p_59_s_axi_data_p2p_awready->set_sv_netview_offsetfromdp(12677256);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_59_s_axi_data_p2p_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_59->s_axi_data_p2p_wdata.bind(*p_59_s_axi_data_p2p_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_59_s_axi_data_p2p_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_59_s_axi_data_p2p_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_59->s_axi_data_p2p_wstrb.bind(*p_59_s_axi_data_p2p_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_59_s_axi_data_p2p_wstrb);
        xsim_sc_channel<0, bool > *p_59_s_axi_data_p2p_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_59->s_axi_data_p2p_wlast.bind(*p_59_s_axi_data_p2p_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_59_s_axi_data_p2p_wlast);
        xsim_sc_channel<0, bool > *p_59_s_axi_data_p2p_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_59->s_axi_data_p2p_wvalid.bind(*p_59_s_axi_data_p2p_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_59_s_axi_data_p2p_wvalid);
        xsim_sc_channel<0, bool > *p_59_s_axi_data_p2p_wready = new xsim_sc_channel<0, bool >();
        sc_inst_59->s_axi_data_p2p_wready.bind(*p_59_s_axi_data_p2p_wready);
        p_59_s_axi_data_p2p_wready->set_sv_netview_offsetfromdp(12677536);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_59_s_axi_data_p2p_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_59->s_axi_data_p2p_bresp.bind(*p_59_s_axi_data_p2p_bresp);
        p_59_s_axi_data_p2p_bresp->set_sv_netview_offsetfromdp(12677592);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_59_s_axi_data_p2p_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_59->s_axi_data_p2p_buser.bind(*p_59_s_axi_data_p2p_buser);
        p_59_s_axi_data_p2p_buser->set_sv_netview_offsetfromdp(12677648);
        xsim_sc_channel<0, bool > *p_59_s_axi_data_p2p_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_59->s_axi_data_p2p_bvalid.bind(*p_59_s_axi_data_p2p_bvalid);
        p_59_s_axi_data_p2p_bvalid->set_sv_netview_offsetfromdp(12677704);
        xsim_sc_channel<0, bool > *p_59_s_axi_data_p2p_bready = new xsim_sc_channel<0, bool >();
        sc_inst_59->s_axi_data_p2p_bready.bind(*p_59_s_axi_data_p2p_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_59_s_axi_data_p2p_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_59_s_axi_data_p2p_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_59->s_axi_data_p2p_araddr.bind(*p_59_s_axi_data_p2p_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_59_s_axi_data_p2p_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_59_s_axi_data_p2p_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_59->s_axi_data_p2p_arlen.bind(*p_59_s_axi_data_p2p_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_59_s_axi_data_p2p_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_59_s_axi_data_p2p_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_59->s_axi_data_p2p_arsize.bind(*p_59_s_axi_data_p2p_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_59_s_axi_data_p2p_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_59_s_axi_data_p2p_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_59->s_axi_data_p2p_arburst.bind(*p_59_s_axi_data_p2p_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_59_s_axi_data_p2p_arburst);
        xsim_sc_channel<0, bool > *p_59_s_axi_data_p2p_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_59->s_axi_data_p2p_arlock.bind(*p_59_s_axi_data_p2p_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_59_s_axi_data_p2p_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_59_s_axi_data_p2p_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_59->s_axi_data_p2p_arcache.bind(*p_59_s_axi_data_p2p_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_59_s_axi_data_p2p_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_59_s_axi_data_p2p_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_59->s_axi_data_p2p_arprot.bind(*p_59_s_axi_data_p2p_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_59_s_axi_data_p2p_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_59_s_axi_data_p2p_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_59->s_axi_data_p2p_arregion.bind(*p_59_s_axi_data_p2p_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_59_s_axi_data_p2p_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_59_s_axi_data_p2p_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_59->s_axi_data_p2p_arqos.bind(*p_59_s_axi_data_p2p_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_59_s_axi_data_p2p_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_59_s_axi_data_p2p_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_59->s_axi_data_p2p_aruser.bind(*p_59_s_axi_data_p2p_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_59_s_axi_data_p2p_aruser);
        xsim_sc_channel<0, bool > *p_59_s_axi_data_p2p_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_59->s_axi_data_p2p_arvalid.bind(*p_59_s_axi_data_p2p_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_59_s_axi_data_p2p_arvalid);
        xsim_sc_channel<0, bool > *p_59_s_axi_data_p2p_arready = new xsim_sc_channel<0, bool >();
        sc_inst_59->s_axi_data_p2p_arready.bind(*p_59_s_axi_data_p2p_arready);
        p_59_s_axi_data_p2p_arready->set_sv_netview_offsetfromdp(12678432);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_59_s_axi_data_p2p_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_59->s_axi_data_p2p_rdata.bind(*p_59_s_axi_data_p2p_rdata);
        p_59_s_axi_data_p2p_rdata->set_sv_netview_offsetfromdp(12678488);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_59_s_axi_data_p2p_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_59->s_axi_data_p2p_rresp.bind(*p_59_s_axi_data_p2p_rresp);
        p_59_s_axi_data_p2p_rresp->set_sv_netview_offsetfromdp(12678544);
        xsim_sc_channel<0, bool > *p_59_s_axi_data_p2p_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_59->s_axi_data_p2p_rlast.bind(*p_59_s_axi_data_p2p_rlast);
        p_59_s_axi_data_p2p_rlast->set_sv_netview_offsetfromdp(12678600);
        xsim_sc_channel<0, bool > *p_59_s_axi_data_p2p_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_59->s_axi_data_p2p_rvalid.bind(*p_59_s_axi_data_p2p_rvalid);
        p_59_s_axi_data_p2p_rvalid->set_sv_netview_offsetfromdp(12678656);
        xsim_sc_channel<0, bool > *p_59_s_axi_data_p2p_rready = new xsim_sc_channel<0, bool >();
        sc_inst_59->s_axi_data_p2p_rready.bind(*p_59_s_axi_data_p2p_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_59_s_axi_data_p2p_rready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_59_maxi_lite_mb_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_59->maxi_lite_mb_awaddr.bind(*p_59_maxi_lite_mb_awaddr);
        p_59_maxi_lite_mb_awaddr->set_sv_netview_offsetfromdp(12678768);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_59_maxi_lite_mb_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_59->maxi_lite_mb_awprot.bind(*p_59_maxi_lite_mb_awprot);
        p_59_maxi_lite_mb_awprot->set_sv_netview_offsetfromdp(12678824);
        xsim_sc_channel<0, bool > *p_59_maxi_lite_mb_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_59->maxi_lite_mb_awvalid.bind(*p_59_maxi_lite_mb_awvalid);
        p_59_maxi_lite_mb_awvalid->set_sv_netview_offsetfromdp(12678880);
        xsim_sc_channel<0, bool > *p_59_maxi_lite_mb_awready = new xsim_sc_channel<0, bool >();
        sc_inst_59->maxi_lite_mb_awready.bind(*p_59_maxi_lite_mb_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_59_maxi_lite_mb_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_59_maxi_lite_mb_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_59->maxi_lite_mb_wdata.bind(*p_59_maxi_lite_mb_wdata);
        p_59_maxi_lite_mb_wdata->set_sv_netview_offsetfromdp(12678992);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_59_maxi_lite_mb_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_59->maxi_lite_mb_wstrb.bind(*p_59_maxi_lite_mb_wstrb);
        p_59_maxi_lite_mb_wstrb->set_sv_netview_offsetfromdp(12679048);
        xsim_sc_channel<0, bool > *p_59_maxi_lite_mb_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_59->maxi_lite_mb_wvalid.bind(*p_59_maxi_lite_mb_wvalid);
        p_59_maxi_lite_mb_wvalid->set_sv_netview_offsetfromdp(12679104);
        xsim_sc_channel<0, bool > *p_59_maxi_lite_mb_wready = new xsim_sc_channel<0, bool >();
        sc_inst_59->maxi_lite_mb_wready.bind(*p_59_maxi_lite_mb_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_59_maxi_lite_mb_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_59_maxi_lite_mb_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_59->maxi_lite_mb_bresp.bind(*p_59_maxi_lite_mb_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_59_maxi_lite_mb_bresp);
        xsim_sc_channel<0, bool > *p_59_maxi_lite_mb_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_59->maxi_lite_mb_bvalid.bind(*p_59_maxi_lite_mb_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_59_maxi_lite_mb_bvalid);
        xsim_sc_channel<0, bool > *p_59_maxi_lite_mb_bready = new xsim_sc_channel<0, bool >();
        sc_inst_59->maxi_lite_mb_bready.bind(*p_59_maxi_lite_mb_bready);
        p_59_maxi_lite_mb_bready->set_sv_netview_offsetfromdp(12679328);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_59_maxi_lite_mb_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_59->maxi_lite_mb_araddr.bind(*p_59_maxi_lite_mb_araddr);
        p_59_maxi_lite_mb_araddr->set_sv_netview_offsetfromdp(12679384);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_59_maxi_lite_mb_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_59->maxi_lite_mb_arprot.bind(*p_59_maxi_lite_mb_arprot);
        p_59_maxi_lite_mb_arprot->set_sv_netview_offsetfromdp(12679440);
        xsim_sc_channel<0, bool > *p_59_maxi_lite_mb_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_59->maxi_lite_mb_arvalid.bind(*p_59_maxi_lite_mb_arvalid);
        p_59_maxi_lite_mb_arvalid->set_sv_netview_offsetfromdp(12679496);
        xsim_sc_channel<0, bool > *p_59_maxi_lite_mb_arready = new xsim_sc_channel<0, bool >();
        sc_inst_59->maxi_lite_mb_arready.bind(*p_59_maxi_lite_mb_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_59_maxi_lite_mb_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_59_maxi_lite_mb_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_59->maxi_lite_mb_rdata.bind(*p_59_maxi_lite_mb_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_59_maxi_lite_mb_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_59_maxi_lite_mb_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_59->maxi_lite_mb_rresp.bind(*p_59_maxi_lite_mb_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_59_maxi_lite_mb_rresp);
        xsim_sc_channel<0, bool > *p_59_maxi_lite_mb_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_59->maxi_lite_mb_rvalid.bind(*p_59_maxi_lite_mb_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_59_maxi_lite_mb_rvalid);
        xsim_sc_channel<0, bool > *p_59_maxi_lite_mb_rready = new xsim_sc_channel<0, bool >();
        sc_inst_59->maxi_lite_mb_rready.bind(*p_59_maxi_lite_mb_rready);
        p_59_maxi_lite_mb_rready->set_sv_netview_offsetfromdp(12679776);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_59_s_axi_ctrl_user_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_59->s_axi_ctrl_user_awaddr.bind(*p_59_s_axi_ctrl_user_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_59_s_axi_ctrl_user_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_59_s_axi_ctrl_user_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_59->s_axi_ctrl_user_awprot.bind(*p_59_s_axi_ctrl_user_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_59_s_axi_ctrl_user_awprot);
        xsim_sc_channel<0, bool > *p_59_s_axi_ctrl_user_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_59->s_axi_ctrl_user_awvalid.bind(*p_59_s_axi_ctrl_user_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_59_s_axi_ctrl_user_awvalid);
        xsim_sc_channel<0, bool > *p_59_s_axi_ctrl_user_awready = new xsim_sc_channel<0, bool >();
        sc_inst_59->s_axi_ctrl_user_awready.bind(*p_59_s_axi_ctrl_user_awready);
        p_59_s_axi_ctrl_user_awready->set_sv_netview_offsetfromdp(12680000);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_59_s_axi_ctrl_user_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_59->s_axi_ctrl_user_wdata.bind(*p_59_s_axi_ctrl_user_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_59_s_axi_ctrl_user_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_59_s_axi_ctrl_user_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_59->s_axi_ctrl_user_wstrb.bind(*p_59_s_axi_ctrl_user_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_59_s_axi_ctrl_user_wstrb);
        xsim_sc_channel<0, bool > *p_59_s_axi_ctrl_user_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_59->s_axi_ctrl_user_wvalid.bind(*p_59_s_axi_ctrl_user_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_59_s_axi_ctrl_user_wvalid);
        xsim_sc_channel<0, bool > *p_59_s_axi_ctrl_user_wready = new xsim_sc_channel<0, bool >();
        sc_inst_59->s_axi_ctrl_user_wready.bind(*p_59_s_axi_ctrl_user_wready);
        p_59_s_axi_ctrl_user_wready->set_sv_netview_offsetfromdp(12680224);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_59_s_axi_ctrl_user_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_59->s_axi_ctrl_user_bresp.bind(*p_59_s_axi_ctrl_user_bresp);
        p_59_s_axi_ctrl_user_bresp->set_sv_netview_offsetfromdp(12680280);
        xsim_sc_channel<0, bool > *p_59_s_axi_ctrl_user_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_59->s_axi_ctrl_user_bvalid.bind(*p_59_s_axi_ctrl_user_bvalid);
        p_59_s_axi_ctrl_user_bvalid->set_sv_netview_offsetfromdp(12680336);
        xsim_sc_channel<0, bool > *p_59_s_axi_ctrl_user_bready = new xsim_sc_channel<0, bool >();
        sc_inst_59->s_axi_ctrl_user_bready.bind(*p_59_s_axi_ctrl_user_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_59_s_axi_ctrl_user_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_59_s_axi_ctrl_user_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_59->s_axi_ctrl_user_araddr.bind(*p_59_s_axi_ctrl_user_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_59_s_axi_ctrl_user_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_59_s_axi_ctrl_user_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_59->s_axi_ctrl_user_arprot.bind(*p_59_s_axi_ctrl_user_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_59_s_axi_ctrl_user_arprot);
        xsim_sc_channel<0, bool > *p_59_s_axi_ctrl_user_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_59->s_axi_ctrl_user_arvalid.bind(*p_59_s_axi_ctrl_user_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_59_s_axi_ctrl_user_arvalid);
        xsim_sc_channel<0, bool > *p_59_s_axi_ctrl_user_arready = new xsim_sc_channel<0, bool >();
        sc_inst_59->s_axi_ctrl_user_arready.bind(*p_59_s_axi_ctrl_user_arready);
        p_59_s_axi_ctrl_user_arready->set_sv_netview_offsetfromdp(12680616);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_59_s_axi_ctrl_user_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_59->s_axi_ctrl_user_rdata.bind(*p_59_s_axi_ctrl_user_rdata);
        p_59_s_axi_ctrl_user_rdata->set_sv_netview_offsetfromdp(12680672);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_59_s_axi_ctrl_user_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_59->s_axi_ctrl_user_rresp.bind(*p_59_s_axi_ctrl_user_rresp);
        p_59_s_axi_ctrl_user_rresp->set_sv_netview_offsetfromdp(12680728);
        xsim_sc_channel<0, bool > *p_59_s_axi_ctrl_user_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_59->s_axi_ctrl_user_rvalid.bind(*p_59_s_axi_ctrl_user_rvalid);
        p_59_s_axi_ctrl_user_rvalid->set_sv_netview_offsetfromdp(12680784);
        xsim_sc_channel<0, bool > *p_59_s_axi_ctrl_user_rready = new xsim_sc_channel<0, bool >();
        sc_inst_59->s_axi_ctrl_user_rready.bind(*p_59_s_axi_ctrl_user_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_59_s_axi_ctrl_user_rready);
        sc_inst_60 = new pfm_top_sim_address_0_0(".pfm_top_wrapper.pfm_top_i.static_region.sim_address_0");
        sc_inst_60->xsim_set_dbg_index(262);
        xsim_sc_channel<0, bool > *p_60_m_aximm_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_60->m_aximm_aclk.bind(*p_60_m_aximm_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_60_m_aximm_aclk);
        xsim_sc_channel<0, bool > *p_60_m_aximm_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_60->m_aximm_aresetn.bind(*p_60_m_aximm_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_60_m_aximm_aresetn);
        xsim_sc_channel<0, bool > *p_60_s_aximm_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_60->s_aximm_aclk.bind(*p_60_s_aximm_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_60_s_aximm_aclk);
        xsim_sc_channel<0, bool > *p_60_s_aximm_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_60->s_aximm_aresetn.bind(*p_60_s_aximm_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_60_s_aximm_aresetn);
        xsim_sc_channel<0, bool > *p_60_m_aximm_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_60->m_aximm_AWVALID.bind(*p_60_m_aximm_AWVALID);
        p_60_m_aximm_AWVALID->set_sv_netview_offsetfromdp(12681168);
        xsim_sc_channel<0, bool > *p_60_m_aximm_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_60->m_aximm_AWREADY.bind(*p_60_m_aximm_AWREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_60_m_aximm_AWREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_60_m_aximm_AWADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_60->m_aximm_AWADDR.bind(*p_60_m_aximm_AWADDR);
        p_60_m_aximm_AWADDR->set_sv_netview_offsetfromdp(12681280);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_60_m_aximm_AWID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_60->m_aximm_AWID.bind(*p_60_m_aximm_AWID);
        p_60_m_aximm_AWID->set_sv_netview_offsetfromdp(12681336);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_60_m_aximm_AWLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_60->m_aximm_AWLEN.bind(*p_60_m_aximm_AWLEN);
        p_60_m_aximm_AWLEN->set_sv_netview_offsetfromdp(12681392);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_60_m_aximm_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_60->m_aximm_AWSIZE.bind(*p_60_m_aximm_AWSIZE);
        p_60_m_aximm_AWSIZE->set_sv_netview_offsetfromdp(12681448);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_60_m_aximm_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_60->m_aximm_AWBURST.bind(*p_60_m_aximm_AWBURST);
        p_60_m_aximm_AWBURST->set_sv_netview_offsetfromdp(12681504);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_60_m_aximm_AWLOCK = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_60->m_aximm_AWLOCK.bind(*p_60_m_aximm_AWLOCK);
        p_60_m_aximm_AWLOCK->set_sv_netview_offsetfromdp(12681560);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_60_m_aximm_AWCACHE = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_60->m_aximm_AWCACHE.bind(*p_60_m_aximm_AWCACHE);
        p_60_m_aximm_AWCACHE->set_sv_netview_offsetfromdp(12681616);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_60_m_aximm_AWPROT = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_60->m_aximm_AWPROT.bind(*p_60_m_aximm_AWPROT);
        p_60_m_aximm_AWPROT->set_sv_netview_offsetfromdp(12681672);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_60_m_aximm_AWREGION = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_60->m_aximm_AWREGION.bind(*p_60_m_aximm_AWREGION);
        p_60_m_aximm_AWREGION->set_sv_netview_offsetfromdp(12681728);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_60_m_aximm_AWQOS = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_60->m_aximm_AWQOS.bind(*p_60_m_aximm_AWQOS);
        p_60_m_aximm_AWQOS->set_sv_netview_offsetfromdp(12681784);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_60_m_aximm_AWUSER = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_60->m_aximm_AWUSER.bind(*p_60_m_aximm_AWUSER);
        p_60_m_aximm_AWUSER->set_sv_netview_offsetfromdp(12681840);
        xsim_sc_channel<0, bool > *p_60_m_aximm_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_60->m_aximm_WVALID.bind(*p_60_m_aximm_WVALID);
        p_60_m_aximm_WVALID->set_sv_netview_offsetfromdp(12681896);
        xsim_sc_channel<0, bool > *p_60_m_aximm_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_60->m_aximm_WREADY.bind(*p_60_m_aximm_WREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_60_m_aximm_WREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_60_m_aximm_WDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_60->m_aximm_WDATA.bind(*p_60_m_aximm_WDATA);
        p_60_m_aximm_WDATA->set_sv_netview_offsetfromdp(12682008);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_60_m_aximm_WSTRB = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_60->m_aximm_WSTRB.bind(*p_60_m_aximm_WSTRB);
        p_60_m_aximm_WSTRB->set_sv_netview_offsetfromdp(12682064);
        xsim_sc_channel<0, bool > *p_60_m_aximm_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_60->m_aximm_WLAST.bind(*p_60_m_aximm_WLAST);
        p_60_m_aximm_WLAST->set_sv_netview_offsetfromdp(12682120);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_60_m_aximm_WUSER = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_60->m_aximm_WUSER.bind(*p_60_m_aximm_WUSER);
        p_60_m_aximm_WUSER->set_sv_netview_offsetfromdp(12682176);
        xsim_sc_channel<0, bool > *p_60_m_aximm_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_60->m_aximm_ARVALID.bind(*p_60_m_aximm_ARVALID);
        p_60_m_aximm_ARVALID->set_sv_netview_offsetfromdp(12682232);
        xsim_sc_channel<0, bool > *p_60_m_aximm_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_60->m_aximm_ARREADY.bind(*p_60_m_aximm_ARREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_60_m_aximm_ARREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_60_m_aximm_ARADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_60->m_aximm_ARADDR.bind(*p_60_m_aximm_ARADDR);
        p_60_m_aximm_ARADDR->set_sv_netview_offsetfromdp(12682344);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_60_m_aximm_ARID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_60->m_aximm_ARID.bind(*p_60_m_aximm_ARID);
        p_60_m_aximm_ARID->set_sv_netview_offsetfromdp(12682400);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_60_m_aximm_ARLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_60->m_aximm_ARLEN.bind(*p_60_m_aximm_ARLEN);
        p_60_m_aximm_ARLEN->set_sv_netview_offsetfromdp(12682456);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_60_m_aximm_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_60->m_aximm_ARSIZE.bind(*p_60_m_aximm_ARSIZE);
        p_60_m_aximm_ARSIZE->set_sv_netview_offsetfromdp(12682512);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_60_m_aximm_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_60->m_aximm_ARBURST.bind(*p_60_m_aximm_ARBURST);
        p_60_m_aximm_ARBURST->set_sv_netview_offsetfromdp(12682568);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_60_m_aximm_ARLOCK = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_60->m_aximm_ARLOCK.bind(*p_60_m_aximm_ARLOCK);
        p_60_m_aximm_ARLOCK->set_sv_netview_offsetfromdp(12682624);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_60_m_aximm_ARCACHE = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_60->m_aximm_ARCACHE.bind(*p_60_m_aximm_ARCACHE);
        p_60_m_aximm_ARCACHE->set_sv_netview_offsetfromdp(12682680);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_60_m_aximm_ARPROT = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_60->m_aximm_ARPROT.bind(*p_60_m_aximm_ARPROT);
        p_60_m_aximm_ARPROT->set_sv_netview_offsetfromdp(12682736);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_60_m_aximm_ARREGION = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_60->m_aximm_ARREGION.bind(*p_60_m_aximm_ARREGION);
        p_60_m_aximm_ARREGION->set_sv_netview_offsetfromdp(12682792);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_60_m_aximm_ARQOS = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_60->m_aximm_ARQOS.bind(*p_60_m_aximm_ARQOS);
        p_60_m_aximm_ARQOS->set_sv_netview_offsetfromdp(12682848);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_60_m_aximm_ARUSER = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_60->m_aximm_ARUSER.bind(*p_60_m_aximm_ARUSER);
        p_60_m_aximm_ARUSER->set_sv_netview_offsetfromdp(12682904);
        xsim_sc_channel<0, bool > *p_60_m_aximm_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_60->m_aximm_RVALID.bind(*p_60_m_aximm_RVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_60_m_aximm_RVALID);
        xsim_sc_channel<0, bool > *p_60_m_aximm_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_60->m_aximm_RREADY.bind(*p_60_m_aximm_RREADY);
        p_60_m_aximm_RREADY->set_sv_netview_offsetfromdp(12683016);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_60_m_aximm_RDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_60->m_aximm_RDATA.bind(*p_60_m_aximm_RDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_60_m_aximm_RDATA);
        xsim_sc_channel<0, bool > *p_60_m_aximm_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_60->m_aximm_RLAST.bind(*p_60_m_aximm_RLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_60_m_aximm_RLAST);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_60_m_aximm_RID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_60->m_aximm_RID.bind(*p_60_m_aximm_RID);
        (*_glb_hdl_sc_channel_map).push_back(p_60_m_aximm_RID);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_60_m_aximm_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_60->m_aximm_RRESP.bind(*p_60_m_aximm_RRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_60_m_aximm_RRESP);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_60_m_aximm_RUSER = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_60->m_aximm_RUSER.bind(*p_60_m_aximm_RUSER);
        (*_glb_hdl_sc_channel_map).push_back(p_60_m_aximm_RUSER);
        xsim_sc_channel<0, bool > *p_60_m_aximm_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_60->m_aximm_BVALID.bind(*p_60_m_aximm_BVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_60_m_aximm_BVALID);
        xsim_sc_channel<0, bool > *p_60_m_aximm_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_60->m_aximm_BREADY.bind(*p_60_m_aximm_BREADY);
        p_60_m_aximm_BREADY->set_sv_netview_offsetfromdp(12683408);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_60_m_aximm_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_60->m_aximm_BRESP.bind(*p_60_m_aximm_BRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_60_m_aximm_BRESP);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_60_m_aximm_BID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_60->m_aximm_BID.bind(*p_60_m_aximm_BID);
        (*_glb_hdl_sc_channel_map).push_back(p_60_m_aximm_BID);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_60_m_aximm_BUSER = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_60->m_aximm_BUSER.bind(*p_60_m_aximm_BUSER);
        (*_glb_hdl_sc_channel_map).push_back(p_60_m_aximm_BUSER);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_60_s_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_60->s_axi_awaddr.bind(*p_60_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_60_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_60_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_60->s_axi_awlen.bind(*p_60_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_60_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_60_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_60->s_axi_awsize.bind(*p_60_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_60_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_60_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_60->s_axi_awburst.bind(*p_60_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_60_s_axi_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_60_s_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_60->s_axi_awlock.bind(*p_60_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_60_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_60_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_60->s_axi_awcache.bind(*p_60_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_60_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_60_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_60->s_axi_awprot.bind(*p_60_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_60_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_60_s_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_60->s_axi_awregion.bind(*p_60_s_axi_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_60_s_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_60_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_60->s_axi_awqos.bind(*p_60_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_60_s_axi_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_60_s_axi_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_60->s_axi_awuser.bind(*p_60_s_axi_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_60_s_axi_awuser);
        xsim_sc_channel<0, bool > *p_60_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_60->s_axi_awvalid.bind(*p_60_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_60_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_60_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_60->s_axi_awready.bind(*p_60_s_axi_awready);
        p_60_s_axi_awready->set_sv_netview_offsetfromdp(12684248);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_60_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_60->s_axi_wdata.bind(*p_60_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_60_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_60_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_60->s_axi_wstrb.bind(*p_60_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_60_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_60_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_60->s_axi_wlast.bind(*p_60_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_60_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_60_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_60->s_axi_wvalid.bind(*p_60_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_60_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_60_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_60->s_axi_wready.bind(*p_60_s_axi_wready);
        p_60_s_axi_wready->set_sv_netview_offsetfromdp(12684528);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_60_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_60->s_axi_bresp.bind(*p_60_s_axi_bresp);
        p_60_s_axi_bresp->set_sv_netview_offsetfromdp(12684584);
        xsim_sc_channel<0, bool > *p_60_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_60->s_axi_bvalid.bind(*p_60_s_axi_bvalid);
        p_60_s_axi_bvalid->set_sv_netview_offsetfromdp(12684640);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_60_s_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_60->s_axi_buser.bind(*p_60_s_axi_buser);
        p_60_s_axi_buser->set_sv_netview_offsetfromdp(12684696);
        xsim_sc_channel<0, bool > *p_60_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_60->s_axi_bready.bind(*p_60_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_60_s_axi_bready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_60_s_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_60->s_axi_araddr.bind(*p_60_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_60_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_60_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_60->s_axi_arlen.bind(*p_60_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_60_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_60_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_60->s_axi_arsize.bind(*p_60_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_60_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_60_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_60->s_axi_arburst.bind(*p_60_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_60_s_axi_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_60_s_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_60->s_axi_arlock.bind(*p_60_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_60_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_60_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_60->s_axi_arcache.bind(*p_60_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_60_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_60_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_60->s_axi_arprot.bind(*p_60_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_60_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_60_s_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_60->s_axi_arregion.bind(*p_60_s_axi_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_60_s_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_60_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_60->s_axi_arqos.bind(*p_60_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_60_s_axi_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_60_s_axi_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_60->s_axi_aruser.bind(*p_60_s_axi_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_60_s_axi_aruser);
        xsim_sc_channel<0, bool > *p_60_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_60->s_axi_arvalid.bind(*p_60_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_60_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_60_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_60->s_axi_arready.bind(*p_60_s_axi_arready);
        p_60_s_axi_arready->set_sv_netview_offsetfromdp(12685424);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_60_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_60->s_axi_rdata.bind(*p_60_s_axi_rdata);
        p_60_s_axi_rdata->set_sv_netview_offsetfromdp(12685480);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_60_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_60->s_axi_rresp.bind(*p_60_s_axi_rresp);
        p_60_s_axi_rresp->set_sv_netview_offsetfromdp(12685536);
        xsim_sc_channel<0, bool > *p_60_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_60->s_axi_rlast.bind(*p_60_s_axi_rlast);
        p_60_s_axi_rlast->set_sv_netview_offsetfromdp(12685592);
        xsim_sc_channel<0, bool > *p_60_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_60->s_axi_rvalid.bind(*p_60_s_axi_rvalid);
        p_60_s_axi_rvalid->set_sv_netview_offsetfromdp(12685648);
        xsim_sc_channel<0, bool > *p_60_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_60->s_axi_rready.bind(*p_60_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_60_s_axi_rready);
        sc_inst_61 = new pfm_top_sim_qdma_0_0(".pfm_top_wrapper.pfm_top_i.static_region.sim_qdma_0");
        sc_inst_61->xsim_set_dbg_index(263);
        xsim_sc_channel<0, bool > *p_61_m_aximm_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_61->m_aximm_aclk.bind(*p_61_m_aximm_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_61_m_aximm_aclk);
        xsim_sc_channel<0, bool > *p_61_m_aximm_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_61->m_aximm_aresetn.bind(*p_61_m_aximm_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_61_m_aximm_aresetn);
        xsim_sc_channel<0, bool > *p_61_m_axictrl_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_61->m_axictrl_aclk.bind(*p_61_m_axictrl_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_61_m_axictrl_aclk);
        xsim_sc_channel<0, bool > *p_61_m_axictrl_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_61->m_axictrl_aresetn.bind(*p_61_m_axictrl_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_61_m_axictrl_aresetn);
        xsim_sc_channel<0, bool > *p_61_s_aximm_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_61->s_aximm_aclk.bind(*p_61_s_aximm_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_61_s_aximm_aclk);
        xsim_sc_channel<0, bool > *p_61_s_aximm_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_61->s_aximm_aresetn.bind(*p_61_s_aximm_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_61_s_aximm_aresetn);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_61_m_axictrl_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_61->m_axictrl_awaddr.bind(*p_61_m_axictrl_awaddr);
        p_61_m_axictrl_awaddr->set_sv_netview_offsetfromdp(12686144);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_61_m_axictrl_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_61->m_axictrl_awprot.bind(*p_61_m_axictrl_awprot);
        p_61_m_axictrl_awprot->set_sv_netview_offsetfromdp(12686200);
        xsim_sc_channel<0, bool > *p_61_m_axictrl_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_61->m_axictrl_awvalid.bind(*p_61_m_axictrl_awvalid);
        p_61_m_axictrl_awvalid->set_sv_netview_offsetfromdp(12686256);
        xsim_sc_channel<0, bool > *p_61_m_axictrl_awready = new xsim_sc_channel<0, bool >();
        sc_inst_61->m_axictrl_awready.bind(*p_61_m_axictrl_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_61_m_axictrl_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_61_m_axictrl_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_61->m_axictrl_wdata.bind(*p_61_m_axictrl_wdata);
        p_61_m_axictrl_wdata->set_sv_netview_offsetfromdp(12686368);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_61_m_axictrl_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_61->m_axictrl_wstrb.bind(*p_61_m_axictrl_wstrb);
        p_61_m_axictrl_wstrb->set_sv_netview_offsetfromdp(12686424);
        xsim_sc_channel<0, bool > *p_61_m_axictrl_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_61->m_axictrl_wvalid.bind(*p_61_m_axictrl_wvalid);
        p_61_m_axictrl_wvalid->set_sv_netview_offsetfromdp(12686480);
        xsim_sc_channel<0, bool > *p_61_m_axictrl_wready = new xsim_sc_channel<0, bool >();
        sc_inst_61->m_axictrl_wready.bind(*p_61_m_axictrl_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_61_m_axictrl_wready);
        xsim_sc_channel<0, bool > *p_61_m_axictrl_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_61->m_axictrl_bvalid.bind(*p_61_m_axictrl_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_61_m_axictrl_bvalid);
        xsim_sc_channel<0, bool > *p_61_m_axictrl_bready = new xsim_sc_channel<0, bool >();
        sc_inst_61->m_axictrl_bready.bind(*p_61_m_axictrl_bready);
        p_61_m_axictrl_bready->set_sv_netview_offsetfromdp(12686648);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_61_m_axictrl_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_61->m_axictrl_bresp.bind(*p_61_m_axictrl_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_61_m_axictrl_bresp);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_61_m_axictrl_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_61->m_axictrl_araddr.bind(*p_61_m_axictrl_araddr);
        p_61_m_axictrl_araddr->set_sv_netview_offsetfromdp(12686760);
        xsim_sc_channel<0, bool > *p_61_m_axictrl_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_61->m_axictrl_arvalid.bind(*p_61_m_axictrl_arvalid);
        p_61_m_axictrl_arvalid->set_sv_netview_offsetfromdp(12686816);
        xsim_sc_channel<0, bool > *p_61_m_axictrl_arready = new xsim_sc_channel<0, bool >();
        sc_inst_61->m_axictrl_arready.bind(*p_61_m_axictrl_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_61_m_axictrl_arready);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_61_m_axictrl_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_61->m_axictrl_arprot.bind(*p_61_m_axictrl_arprot);
        p_61_m_axictrl_arprot->set_sv_netview_offsetfromdp(12686928);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_61_m_axictrl_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_61->m_axictrl_rdata.bind(*p_61_m_axictrl_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_61_m_axictrl_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_61_m_axictrl_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_61->m_axictrl_rresp.bind(*p_61_m_axictrl_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_61_m_axictrl_rresp);
        xsim_sc_channel<0, bool > *p_61_m_axictrl_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_61->m_axictrl_rvalid.bind(*p_61_m_axictrl_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_61_m_axictrl_rvalid);
        xsim_sc_channel<0, bool > *p_61_m_axictrl_rready = new xsim_sc_channel<0, bool >();
        sc_inst_61->m_axictrl_rready.bind(*p_61_m_axictrl_rready);
        p_61_m_axictrl_rready->set_sv_netview_offsetfromdp(12687152);
        xsim_sc_channel<0, bool > *p_61_m_aximm_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_61->m_aximm_AWVALID.bind(*p_61_m_aximm_AWVALID);
        p_61_m_aximm_AWVALID->set_sv_netview_offsetfromdp(12687208);
        xsim_sc_channel<0, bool > *p_61_m_aximm_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_61->m_aximm_AWREADY.bind(*p_61_m_aximm_AWREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_61_m_aximm_AWREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_61_m_aximm_AWADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_61->m_aximm_AWADDR.bind(*p_61_m_aximm_AWADDR);
        p_61_m_aximm_AWADDR->set_sv_netview_offsetfromdp(12687320);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_61_m_aximm_AWID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_61->m_aximm_AWID.bind(*p_61_m_aximm_AWID);
        p_61_m_aximm_AWID->set_sv_netview_offsetfromdp(12687376);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_61_m_aximm_AWLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_61->m_aximm_AWLEN.bind(*p_61_m_aximm_AWLEN);
        p_61_m_aximm_AWLEN->set_sv_netview_offsetfromdp(12687432);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_61_m_aximm_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_61->m_aximm_AWSIZE.bind(*p_61_m_aximm_AWSIZE);
        p_61_m_aximm_AWSIZE->set_sv_netview_offsetfromdp(12687488);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_61_m_aximm_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_61->m_aximm_AWBURST.bind(*p_61_m_aximm_AWBURST);
        p_61_m_aximm_AWBURST->set_sv_netview_offsetfromdp(12687544);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_61_m_aximm_AWLOCK = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_61->m_aximm_AWLOCK.bind(*p_61_m_aximm_AWLOCK);
        p_61_m_aximm_AWLOCK->set_sv_netview_offsetfromdp(12687600);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_61_m_aximm_AWCACHE = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_61->m_aximm_AWCACHE.bind(*p_61_m_aximm_AWCACHE);
        p_61_m_aximm_AWCACHE->set_sv_netview_offsetfromdp(12687656);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_61_m_aximm_AWPROT = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_61->m_aximm_AWPROT.bind(*p_61_m_aximm_AWPROT);
        p_61_m_aximm_AWPROT->set_sv_netview_offsetfromdp(12687712);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_61_m_aximm_AWREGION = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_61->m_aximm_AWREGION.bind(*p_61_m_aximm_AWREGION);
        p_61_m_aximm_AWREGION->set_sv_netview_offsetfromdp(12687768);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_61_m_aximm_AWQOS = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_61->m_aximm_AWQOS.bind(*p_61_m_aximm_AWQOS);
        p_61_m_aximm_AWQOS->set_sv_netview_offsetfromdp(12687824);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_61_m_aximm_AWUSER = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_61->m_aximm_AWUSER.bind(*p_61_m_aximm_AWUSER);
        p_61_m_aximm_AWUSER->set_sv_netview_offsetfromdp(12687880);
        xsim_sc_channel<0, bool > *p_61_m_aximm_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_61->m_aximm_WVALID.bind(*p_61_m_aximm_WVALID);
        p_61_m_aximm_WVALID->set_sv_netview_offsetfromdp(12687936);
        xsim_sc_channel<0, bool > *p_61_m_aximm_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_61->m_aximm_WREADY.bind(*p_61_m_aximm_WREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_61_m_aximm_WREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_61_m_aximm_WDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_61->m_aximm_WDATA.bind(*p_61_m_aximm_WDATA);
        p_61_m_aximm_WDATA->set_sv_netview_offsetfromdp(12688048);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_61_m_aximm_WSTRB = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_61->m_aximm_WSTRB.bind(*p_61_m_aximm_WSTRB);
        p_61_m_aximm_WSTRB->set_sv_netview_offsetfromdp(12688104);
        xsim_sc_channel<0, bool > *p_61_m_aximm_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_61->m_aximm_WLAST.bind(*p_61_m_aximm_WLAST);
        p_61_m_aximm_WLAST->set_sv_netview_offsetfromdp(12688160);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_61_m_aximm_WUSER = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_61->m_aximm_WUSER.bind(*p_61_m_aximm_WUSER);
        p_61_m_aximm_WUSER->set_sv_netview_offsetfromdp(12688216);
        xsim_sc_channel<0, bool > *p_61_m_aximm_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_61->m_aximm_ARVALID.bind(*p_61_m_aximm_ARVALID);
        p_61_m_aximm_ARVALID->set_sv_netview_offsetfromdp(12688272);
        xsim_sc_channel<0, bool > *p_61_m_aximm_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_61->m_aximm_ARREADY.bind(*p_61_m_aximm_ARREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_61_m_aximm_ARREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_61_m_aximm_ARADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_61->m_aximm_ARADDR.bind(*p_61_m_aximm_ARADDR);
        p_61_m_aximm_ARADDR->set_sv_netview_offsetfromdp(12688384);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_61_m_aximm_ARID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_61->m_aximm_ARID.bind(*p_61_m_aximm_ARID);
        p_61_m_aximm_ARID->set_sv_netview_offsetfromdp(12688440);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_61_m_aximm_ARLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_61->m_aximm_ARLEN.bind(*p_61_m_aximm_ARLEN);
        p_61_m_aximm_ARLEN->set_sv_netview_offsetfromdp(12688496);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_61_m_aximm_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_61->m_aximm_ARSIZE.bind(*p_61_m_aximm_ARSIZE);
        p_61_m_aximm_ARSIZE->set_sv_netview_offsetfromdp(12688552);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_61_m_aximm_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_61->m_aximm_ARBURST.bind(*p_61_m_aximm_ARBURST);
        p_61_m_aximm_ARBURST->set_sv_netview_offsetfromdp(12688608);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_61_m_aximm_ARLOCK = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_61->m_aximm_ARLOCK.bind(*p_61_m_aximm_ARLOCK);
        p_61_m_aximm_ARLOCK->set_sv_netview_offsetfromdp(12688664);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_61_m_aximm_ARCACHE = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_61->m_aximm_ARCACHE.bind(*p_61_m_aximm_ARCACHE);
        p_61_m_aximm_ARCACHE->set_sv_netview_offsetfromdp(12688720);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_61_m_aximm_ARPROT = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_61->m_aximm_ARPROT.bind(*p_61_m_aximm_ARPROT);
        p_61_m_aximm_ARPROT->set_sv_netview_offsetfromdp(12688776);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_61_m_aximm_ARREGION = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_61->m_aximm_ARREGION.bind(*p_61_m_aximm_ARREGION);
        p_61_m_aximm_ARREGION->set_sv_netview_offsetfromdp(12688832);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_61_m_aximm_ARQOS = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_61->m_aximm_ARQOS.bind(*p_61_m_aximm_ARQOS);
        p_61_m_aximm_ARQOS->set_sv_netview_offsetfromdp(12688888);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_61_m_aximm_ARUSER = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_61->m_aximm_ARUSER.bind(*p_61_m_aximm_ARUSER);
        p_61_m_aximm_ARUSER->set_sv_netview_offsetfromdp(12688944);
        xsim_sc_channel<0, bool > *p_61_m_aximm_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_61->m_aximm_RVALID.bind(*p_61_m_aximm_RVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_61_m_aximm_RVALID);
        xsim_sc_channel<0, bool > *p_61_m_aximm_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_61->m_aximm_RREADY.bind(*p_61_m_aximm_RREADY);
        p_61_m_aximm_RREADY->set_sv_netview_offsetfromdp(12689056);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_61_m_aximm_RDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_61->m_aximm_RDATA.bind(*p_61_m_aximm_RDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_61_m_aximm_RDATA);
        xsim_sc_channel<0, bool > *p_61_m_aximm_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_61->m_aximm_RLAST.bind(*p_61_m_aximm_RLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_61_m_aximm_RLAST);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_61_m_aximm_RID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_61->m_aximm_RID.bind(*p_61_m_aximm_RID);
        (*_glb_hdl_sc_channel_map).push_back(p_61_m_aximm_RID);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_61_m_aximm_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_61->m_aximm_RRESP.bind(*p_61_m_aximm_RRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_61_m_aximm_RRESP);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_61_m_aximm_RUSER = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_61->m_aximm_RUSER.bind(*p_61_m_aximm_RUSER);
        (*_glb_hdl_sc_channel_map).push_back(p_61_m_aximm_RUSER);
        xsim_sc_channel<0, bool > *p_61_m_aximm_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_61->m_aximm_BVALID.bind(*p_61_m_aximm_BVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_61_m_aximm_BVALID);
        xsim_sc_channel<0, bool > *p_61_m_aximm_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_61->m_aximm_BREADY.bind(*p_61_m_aximm_BREADY);
        p_61_m_aximm_BREADY->set_sv_netview_offsetfromdp(12689448);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_61_m_aximm_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_61->m_aximm_BRESP.bind(*p_61_m_aximm_BRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_61_m_aximm_BRESP);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_61_m_aximm_BID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_61->m_aximm_BID.bind(*p_61_m_aximm_BID);
        (*_glb_hdl_sc_channel_map).push_back(p_61_m_aximm_BID);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_61_m_aximm_BUSER = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_61->m_aximm_BUSER.bind(*p_61_m_aximm_BUSER);
        (*_glb_hdl_sc_channel_map).push_back(p_61_m_aximm_BUSER);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_61_s_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_61->s_axi_awaddr.bind(*p_61_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_61_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_61_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_61->s_axi_awlen.bind(*p_61_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_61_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_61_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_61->s_axi_awsize.bind(*p_61_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_61_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_61_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_61->s_axi_awburst.bind(*p_61_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_61_s_axi_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_61_s_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_61->s_axi_awlock.bind(*p_61_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_61_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_61_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_61->s_axi_awcache.bind(*p_61_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_61_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_61_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_61->s_axi_awprot.bind(*p_61_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_61_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_61_s_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_61->s_axi_awregion.bind(*p_61_s_axi_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_61_s_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_61_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_61->s_axi_awqos.bind(*p_61_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_61_s_axi_awqos);
        xsim_sc_channel<0, bool > *p_61_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_61->s_axi_awvalid.bind(*p_61_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_61_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_61_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_61->s_axi_awready.bind(*p_61_s_axi_awready);
        p_61_s_axi_awready->set_sv_netview_offsetfromdp(12690232);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_61_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_61->s_axi_wdata.bind(*p_61_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_61_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_61_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_61->s_axi_wstrb.bind(*p_61_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_61_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_61_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_61->s_axi_wlast.bind(*p_61_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_61_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_61_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_61->s_axi_wvalid.bind(*p_61_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_61_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_61_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_61->s_axi_wready.bind(*p_61_s_axi_wready);
        p_61_s_axi_wready->set_sv_netview_offsetfromdp(12690512);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_61_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_61->s_axi_bresp.bind(*p_61_s_axi_bresp);
        p_61_s_axi_bresp->set_sv_netview_offsetfromdp(12690568);
        xsim_sc_channel<0, bool > *p_61_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_61->s_axi_bvalid.bind(*p_61_s_axi_bvalid);
        p_61_s_axi_bvalid->set_sv_netview_offsetfromdp(12690624);
        xsim_sc_channel<0, bool > *p_61_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_61->s_axi_bready.bind(*p_61_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_61_s_axi_bready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_61_s_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_61->s_axi_araddr.bind(*p_61_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_61_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_61_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_61->s_axi_arlen.bind(*p_61_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_61_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_61_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_61->s_axi_arsize.bind(*p_61_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_61_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_61_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_61->s_axi_arburst.bind(*p_61_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_61_s_axi_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_61_s_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_61->s_axi_arlock.bind(*p_61_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_61_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_61_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_61->s_axi_arcache.bind(*p_61_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_61_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_61_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_61->s_axi_arprot.bind(*p_61_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_61_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_61_s_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_61->s_axi_arregion.bind(*p_61_s_axi_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_61_s_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_61_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_61->s_axi_arqos.bind(*p_61_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_61_s_axi_arqos);
        xsim_sc_channel<0, bool > *p_61_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_61->s_axi_arvalid.bind(*p_61_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_61_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_61_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_61->s_axi_arready.bind(*p_61_s_axi_arready);
        p_61_s_axi_arready->set_sv_netview_offsetfromdp(12691296);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_61_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_61->s_axi_rdata.bind(*p_61_s_axi_rdata);
        p_61_s_axi_rdata->set_sv_netview_offsetfromdp(12691352);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_61_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_61->s_axi_rresp.bind(*p_61_s_axi_rresp);
        p_61_s_axi_rresp->set_sv_netview_offsetfromdp(12691408);
        xsim_sc_channel<0, bool > *p_61_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_61->s_axi_rlast.bind(*p_61_s_axi_rlast);
        p_61_s_axi_rlast->set_sv_netview_offsetfromdp(12691464);
        xsim_sc_channel<0, bool > *p_61_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_61->s_axi_rvalid.bind(*p_61_s_axi_rvalid);
        p_61_s_axi_rvalid->set_sv_netview_offsetfromdp(12691520);
        xsim_sc_channel<0, bool > *p_61_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_61->s_axi_rready.bind(*p_61_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_61_s_axi_rready);
        xsim_sc_channel<16, sc_dt::sc_bv<16> > *p_61_usr_irq_req = new xsim_sc_channel<16, sc_dt::sc_bv<16> >();
        sc_inst_61->usr_irq_req.bind(*p_61_usr_irq_req);
        (*_glb_hdl_sc_channel_map).push_back(p_61_usr_irq_req);
        xsim_sc_channel<16, sc_dt::sc_bv<16> > *p_61_usr_irq_ack = new xsim_sc_channel<16, sc_dt::sc_bv<16> >();
        sc_inst_61->usr_irq_ack.bind(*p_61_usr_irq_ack);
        p_61_usr_irq_ack->set_sv_netview_offsetfromdp(12691688);
        sc_inst_62 = new pfm_top_smartconnect_0_0(".pfm_top_wrapper.pfm_top_i.static_region.smartconnect_0");
        sc_inst_62->xsim_set_dbg_index(264);
        xsim_sc_channel<0, bool > *p_62_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_62->aclk.bind(*p_62_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_62_aclk);
        xsim_sc_channel<0, bool > *p_62_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_62->aresetn.bind(*p_62_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_62_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_62_S00_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_62->S00_AXI_awid.bind(*p_62_S00_AXI_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_62_S00_AXI_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_62_S00_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_62->S00_AXI_awaddr.bind(*p_62_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_62_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_62_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_62->S00_AXI_awlen.bind(*p_62_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_62_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_62_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_62->S00_AXI_awsize.bind(*p_62_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_62_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_62_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_62->S00_AXI_awburst.bind(*p_62_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_62_S00_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_62_S00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_62->S00_AXI_awlock.bind(*p_62_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_62_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_62_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_62->S00_AXI_awcache.bind(*p_62_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_62_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_62_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_62->S00_AXI_awprot.bind(*p_62_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_62_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_62_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_62->S00_AXI_awqos.bind(*p_62_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_62_S00_AXI_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_62_S00_AXI_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_62->S00_AXI_awuser.bind(*p_62_S00_AXI_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_62_S00_AXI_awuser);
        xsim_sc_channel<0, bool > *p_62_S00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_62->S00_AXI_awvalid.bind(*p_62_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_62_S00_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_62_S00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_62->S00_AXI_awready.bind(*p_62_S00_AXI_awready);
        p_62_S00_AXI_awready->set_sv_netview_offsetfromdp(12692520);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_62_S00_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_62->S00_AXI_wdata.bind(*p_62_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_62_S00_AXI_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_62_S00_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_62->S00_AXI_wstrb.bind(*p_62_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_62_S00_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_62_S00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_62->S00_AXI_wlast.bind(*p_62_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_62_S00_AXI_wlast);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_62_S00_AXI_wuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_62->S00_AXI_wuser.bind(*p_62_S00_AXI_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_62_S00_AXI_wuser);
        xsim_sc_channel<0, bool > *p_62_S00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_62->S00_AXI_wvalid.bind(*p_62_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_62_S00_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_62_S00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_62->S00_AXI_wready.bind(*p_62_S00_AXI_wready);
        p_62_S00_AXI_wready->set_sv_netview_offsetfromdp(12692856);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_62_S00_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_62->S00_AXI_bid.bind(*p_62_S00_AXI_bid);
        p_62_S00_AXI_bid->set_sv_netview_offsetfromdp(12692912);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_62_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_62->S00_AXI_bresp.bind(*p_62_S00_AXI_bresp);
        p_62_S00_AXI_bresp->set_sv_netview_offsetfromdp(12692968);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_62_S00_AXI_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_62->S00_AXI_buser.bind(*p_62_S00_AXI_buser);
        p_62_S00_AXI_buser->set_sv_netview_offsetfromdp(12693024);
        xsim_sc_channel<0, bool > *p_62_S00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_62->S00_AXI_bvalid.bind(*p_62_S00_AXI_bvalid);
        p_62_S00_AXI_bvalid->set_sv_netview_offsetfromdp(12693080);
        xsim_sc_channel<0, bool > *p_62_S00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_62->S00_AXI_bready.bind(*p_62_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_62_S00_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_62_S00_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_62->S00_AXI_arid.bind(*p_62_S00_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_62_S00_AXI_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_62_S00_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_62->S00_AXI_araddr.bind(*p_62_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_62_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_62_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_62->S00_AXI_arlen.bind(*p_62_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_62_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_62_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_62->S00_AXI_arsize.bind(*p_62_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_62_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_62_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_62->S00_AXI_arburst.bind(*p_62_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_62_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_62_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_62->S00_AXI_arlock.bind(*p_62_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_62_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_62_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_62->S00_AXI_arcache.bind(*p_62_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_62_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_62_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_62->S00_AXI_arprot.bind(*p_62_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_62_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_62_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_62->S00_AXI_arqos.bind(*p_62_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_62_S00_AXI_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_62_S00_AXI_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_62->S00_AXI_aruser.bind(*p_62_S00_AXI_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_62_S00_AXI_aruser);
        xsim_sc_channel<0, bool > *p_62_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_62->S00_AXI_arvalid.bind(*p_62_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_62_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_62_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_62->S00_AXI_arready.bind(*p_62_S00_AXI_arready);
        p_62_S00_AXI_arready->set_sv_netview_offsetfromdp(12693808);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_62_S00_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_62->S00_AXI_rid.bind(*p_62_S00_AXI_rid);
        p_62_S00_AXI_rid->set_sv_netview_offsetfromdp(12693864);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_62_S00_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_62->S00_AXI_rdata.bind(*p_62_S00_AXI_rdata);
        p_62_S00_AXI_rdata->set_sv_netview_offsetfromdp(12693920);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_62_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_62->S00_AXI_rresp.bind(*p_62_S00_AXI_rresp);
        p_62_S00_AXI_rresp->set_sv_netview_offsetfromdp(12693976);
        xsim_sc_channel<0, bool > *p_62_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_62->S00_AXI_rlast.bind(*p_62_S00_AXI_rlast);
        p_62_S00_AXI_rlast->set_sv_netview_offsetfromdp(12694032);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_62_S00_AXI_ruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_62->S00_AXI_ruser.bind(*p_62_S00_AXI_ruser);
        p_62_S00_AXI_ruser->set_sv_netview_offsetfromdp(12694088);
        xsim_sc_channel<0, bool > *p_62_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_62->S00_AXI_rvalid.bind(*p_62_S00_AXI_rvalid);
        p_62_S00_AXI_rvalid->set_sv_netview_offsetfromdp(12694144);
        xsim_sc_channel<0, bool > *p_62_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_62->S00_AXI_rready.bind(*p_62_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_62_S00_AXI_rready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_62_M00_AXI_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_62->M00_AXI_awaddr.bind(*p_62_M00_AXI_awaddr);
        p_62_M00_AXI_awaddr->set_sv_netview_offsetfromdp(12694256);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_62_M00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_62->M00_AXI_awlen.bind(*p_62_M00_AXI_awlen);
        p_62_M00_AXI_awlen->set_sv_netview_offsetfromdp(12694312);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_62_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_62->M00_AXI_awsize.bind(*p_62_M00_AXI_awsize);
        p_62_M00_AXI_awsize->set_sv_netview_offsetfromdp(12694368);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_62_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_62->M00_AXI_awburst.bind(*p_62_M00_AXI_awburst);
        p_62_M00_AXI_awburst->set_sv_netview_offsetfromdp(12694424);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_62_M00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_62->M00_AXI_awlock.bind(*p_62_M00_AXI_awlock);
        p_62_M00_AXI_awlock->set_sv_netview_offsetfromdp(12694480);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_62_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_62->M00_AXI_awcache.bind(*p_62_M00_AXI_awcache);
        p_62_M00_AXI_awcache->set_sv_netview_offsetfromdp(12694536);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_62_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_62->M00_AXI_awprot.bind(*p_62_M00_AXI_awprot);
        p_62_M00_AXI_awprot->set_sv_netview_offsetfromdp(12694592);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_62_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_62->M00_AXI_awqos.bind(*p_62_M00_AXI_awqos);
        p_62_M00_AXI_awqos->set_sv_netview_offsetfromdp(12694648);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_62_M00_AXI_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_62->M00_AXI_awuser.bind(*p_62_M00_AXI_awuser);
        p_62_M00_AXI_awuser->set_sv_netview_offsetfromdp(12694704);
        xsim_sc_channel<0, bool > *p_62_M00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_62->M00_AXI_awvalid.bind(*p_62_M00_AXI_awvalid);
        p_62_M00_AXI_awvalid->set_sv_netview_offsetfromdp(12694760);
        xsim_sc_channel<0, bool > *p_62_M00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_62->M00_AXI_awready.bind(*p_62_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_62_M00_AXI_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_62_M00_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_62->M00_AXI_wdata.bind(*p_62_M00_AXI_wdata);
        p_62_M00_AXI_wdata->set_sv_netview_offsetfromdp(12694872);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_62_M00_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_62->M00_AXI_wstrb.bind(*p_62_M00_AXI_wstrb);
        p_62_M00_AXI_wstrb->set_sv_netview_offsetfromdp(12694928);
        xsim_sc_channel<0, bool > *p_62_M00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_62->M00_AXI_wlast.bind(*p_62_M00_AXI_wlast);
        p_62_M00_AXI_wlast->set_sv_netview_offsetfromdp(12694984);
        xsim_sc_channel<0, bool > *p_62_M00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_62->M00_AXI_wvalid.bind(*p_62_M00_AXI_wvalid);
        p_62_M00_AXI_wvalid->set_sv_netview_offsetfromdp(12695040);
        xsim_sc_channel<0, bool > *p_62_M00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_62->M00_AXI_wready.bind(*p_62_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_62_M00_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_62_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_62->M00_AXI_bresp.bind(*p_62_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_62_M00_AXI_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_62_M00_AXI_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_62->M00_AXI_buser.bind(*p_62_M00_AXI_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_62_M00_AXI_buser);
        xsim_sc_channel<0, bool > *p_62_M00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_62->M00_AXI_bvalid.bind(*p_62_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_62_M00_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_62_M00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_62->M00_AXI_bready.bind(*p_62_M00_AXI_bready);
        p_62_M00_AXI_bready->set_sv_netview_offsetfromdp(12695320);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_62_M00_AXI_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_62->M00_AXI_araddr.bind(*p_62_M00_AXI_araddr);
        p_62_M00_AXI_araddr->set_sv_netview_offsetfromdp(12695376);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_62_M00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_62->M00_AXI_arlen.bind(*p_62_M00_AXI_arlen);
        p_62_M00_AXI_arlen->set_sv_netview_offsetfromdp(12695432);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_62_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_62->M00_AXI_arsize.bind(*p_62_M00_AXI_arsize);
        p_62_M00_AXI_arsize->set_sv_netview_offsetfromdp(12695488);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_62_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_62->M00_AXI_arburst.bind(*p_62_M00_AXI_arburst);
        p_62_M00_AXI_arburst->set_sv_netview_offsetfromdp(12695544);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_62_M00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_62->M00_AXI_arlock.bind(*p_62_M00_AXI_arlock);
        p_62_M00_AXI_arlock->set_sv_netview_offsetfromdp(12695600);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_62_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_62->M00_AXI_arcache.bind(*p_62_M00_AXI_arcache);
        p_62_M00_AXI_arcache->set_sv_netview_offsetfromdp(12695656);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_62_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_62->M00_AXI_arprot.bind(*p_62_M00_AXI_arprot);
        p_62_M00_AXI_arprot->set_sv_netview_offsetfromdp(12695712);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_62_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_62->M00_AXI_arqos.bind(*p_62_M00_AXI_arqos);
        p_62_M00_AXI_arqos->set_sv_netview_offsetfromdp(12695768);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_62_M00_AXI_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_62->M00_AXI_aruser.bind(*p_62_M00_AXI_aruser);
        p_62_M00_AXI_aruser->set_sv_netview_offsetfromdp(12695824);
        xsim_sc_channel<0, bool > *p_62_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_62->M00_AXI_arvalid.bind(*p_62_M00_AXI_arvalid);
        p_62_M00_AXI_arvalid->set_sv_netview_offsetfromdp(12695880);
        xsim_sc_channel<0, bool > *p_62_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_62->M00_AXI_arready.bind(*p_62_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_62_M00_AXI_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_62_M00_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_62->M00_AXI_rdata.bind(*p_62_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_62_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_62_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_62->M00_AXI_rresp.bind(*p_62_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_62_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_62_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_62->M00_AXI_rlast.bind(*p_62_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_62_M00_AXI_rlast);
        xsim_sc_channel<0, bool > *p_62_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_62->M00_AXI_rvalid.bind(*p_62_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_62_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_62_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_62->M00_AXI_rready.bind(*p_62_M00_AXI_rready);
        p_62_M00_AXI_rready->set_sv_netview_offsetfromdp(12696216);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_62_M01_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_62->M01_AXI_awaddr.bind(*p_62_M01_AXI_awaddr);
        p_62_M01_AXI_awaddr->set_sv_netview_offsetfromdp(12696272);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_62_M01_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_62->M01_AXI_awlen.bind(*p_62_M01_AXI_awlen);
        p_62_M01_AXI_awlen->set_sv_netview_offsetfromdp(12696328);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_62_M01_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_62->M01_AXI_awsize.bind(*p_62_M01_AXI_awsize);
        p_62_M01_AXI_awsize->set_sv_netview_offsetfromdp(12696384);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_62_M01_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_62->M01_AXI_awburst.bind(*p_62_M01_AXI_awburst);
        p_62_M01_AXI_awburst->set_sv_netview_offsetfromdp(12696440);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_62_M01_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_62->M01_AXI_awlock.bind(*p_62_M01_AXI_awlock);
        p_62_M01_AXI_awlock->set_sv_netview_offsetfromdp(12696496);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_62_M01_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_62->M01_AXI_awcache.bind(*p_62_M01_AXI_awcache);
        p_62_M01_AXI_awcache->set_sv_netview_offsetfromdp(12696552);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_62_M01_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_62->M01_AXI_awprot.bind(*p_62_M01_AXI_awprot);
        p_62_M01_AXI_awprot->set_sv_netview_offsetfromdp(12696608);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_62_M01_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_62->M01_AXI_awqos.bind(*p_62_M01_AXI_awqos);
        p_62_M01_AXI_awqos->set_sv_netview_offsetfromdp(12696664);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_62_M01_AXI_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_62->M01_AXI_awuser.bind(*p_62_M01_AXI_awuser);
        p_62_M01_AXI_awuser->set_sv_netview_offsetfromdp(12696720);
        xsim_sc_channel<0, bool > *p_62_M01_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_62->M01_AXI_awvalid.bind(*p_62_M01_AXI_awvalid);
        p_62_M01_AXI_awvalid->set_sv_netview_offsetfromdp(12696776);
        xsim_sc_channel<0, bool > *p_62_M01_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_62->M01_AXI_awready.bind(*p_62_M01_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_62_M01_AXI_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_62_M01_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_62->M01_AXI_wdata.bind(*p_62_M01_AXI_wdata);
        p_62_M01_AXI_wdata->set_sv_netview_offsetfromdp(12696888);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_62_M01_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_62->M01_AXI_wstrb.bind(*p_62_M01_AXI_wstrb);
        p_62_M01_AXI_wstrb->set_sv_netview_offsetfromdp(12696944);
        xsim_sc_channel<0, bool > *p_62_M01_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_62->M01_AXI_wlast.bind(*p_62_M01_AXI_wlast);
        p_62_M01_AXI_wlast->set_sv_netview_offsetfromdp(12697000);
        xsim_sc_channel<0, bool > *p_62_M01_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_62->M01_AXI_wvalid.bind(*p_62_M01_AXI_wvalid);
        p_62_M01_AXI_wvalid->set_sv_netview_offsetfromdp(12697056);
        xsim_sc_channel<0, bool > *p_62_M01_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_62->M01_AXI_wready.bind(*p_62_M01_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_62_M01_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_62_M01_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_62->M01_AXI_bresp.bind(*p_62_M01_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_62_M01_AXI_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_62_M01_AXI_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_62->M01_AXI_buser.bind(*p_62_M01_AXI_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_62_M01_AXI_buser);
        xsim_sc_channel<0, bool > *p_62_M01_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_62->M01_AXI_bvalid.bind(*p_62_M01_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_62_M01_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_62_M01_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_62->M01_AXI_bready.bind(*p_62_M01_AXI_bready);
        p_62_M01_AXI_bready->set_sv_netview_offsetfromdp(12697336);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_62_M01_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_62->M01_AXI_araddr.bind(*p_62_M01_AXI_araddr);
        p_62_M01_AXI_araddr->set_sv_netview_offsetfromdp(12697392);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_62_M01_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_62->M01_AXI_arlen.bind(*p_62_M01_AXI_arlen);
        p_62_M01_AXI_arlen->set_sv_netview_offsetfromdp(12697448);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_62_M01_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_62->M01_AXI_arsize.bind(*p_62_M01_AXI_arsize);
        p_62_M01_AXI_arsize->set_sv_netview_offsetfromdp(12697504);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_62_M01_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_62->M01_AXI_arburst.bind(*p_62_M01_AXI_arburst);
        p_62_M01_AXI_arburst->set_sv_netview_offsetfromdp(12697560);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_62_M01_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_62->M01_AXI_arlock.bind(*p_62_M01_AXI_arlock);
        p_62_M01_AXI_arlock->set_sv_netview_offsetfromdp(12697616);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_62_M01_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_62->M01_AXI_arcache.bind(*p_62_M01_AXI_arcache);
        p_62_M01_AXI_arcache->set_sv_netview_offsetfromdp(12697672);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_62_M01_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_62->M01_AXI_arprot.bind(*p_62_M01_AXI_arprot);
        p_62_M01_AXI_arprot->set_sv_netview_offsetfromdp(12697728);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_62_M01_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_62->M01_AXI_arqos.bind(*p_62_M01_AXI_arqos);
        p_62_M01_AXI_arqos->set_sv_netview_offsetfromdp(12697784);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_62_M01_AXI_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_62->M01_AXI_aruser.bind(*p_62_M01_AXI_aruser);
        p_62_M01_AXI_aruser->set_sv_netview_offsetfromdp(12697840);
        xsim_sc_channel<0, bool > *p_62_M01_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_62->M01_AXI_arvalid.bind(*p_62_M01_AXI_arvalid);
        p_62_M01_AXI_arvalid->set_sv_netview_offsetfromdp(12697896);
        xsim_sc_channel<0, bool > *p_62_M01_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_62->M01_AXI_arready.bind(*p_62_M01_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_62_M01_AXI_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_62_M01_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_62->M01_AXI_rdata.bind(*p_62_M01_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_62_M01_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_62_M01_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_62->M01_AXI_rresp.bind(*p_62_M01_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_62_M01_AXI_rresp);
        xsim_sc_channel<0, bool > *p_62_M01_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_62->M01_AXI_rlast.bind(*p_62_M01_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_62_M01_AXI_rlast);
        xsim_sc_channel<0, bool > *p_62_M01_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_62->M01_AXI_rvalid.bind(*p_62_M01_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_62_M01_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_62_M01_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_62->M01_AXI_rready.bind(*p_62_M01_AXI_rready);
        p_62_M01_AXI_rready->set_sv_netview_offsetfromdp(12698232);
    }


extern "C"
    void implicit_HDL_SCcleanup()
    {
        delete sc_inst_1;
        delete sc_inst_2;
        delete sc_inst_3;
        delete sc_inst_4;
        delete sc_inst_5;
        delete sc_inst_6;
        delete sc_inst_7;
        delete sc_inst_8;
        delete sc_inst_9;
        delete sc_inst_10;
        delete sc_inst_11;
        delete sc_inst_12;
        delete sc_inst_13;
        delete sc_inst_14;
        delete sc_inst_15;
        delete sc_inst_16;
        delete sc_inst_17;
        delete sc_inst_18;
        delete sc_inst_19;
        delete sc_inst_20;
        delete sc_inst_21;
        delete sc_inst_22;
        delete sc_inst_23;
        delete sc_inst_24;
        delete sc_inst_25;
        delete sc_inst_26;
        delete sc_inst_27;
        delete sc_inst_28;
        delete sc_inst_29;
        delete sc_inst_30;
        delete sc_inst_31;
        delete sc_inst_32;
        delete sc_inst_33;
        delete sc_inst_34;
        delete sc_inst_35;
        delete sc_inst_36;
        delete sc_inst_37;
        delete sc_inst_38;
        delete sc_inst_39;
        delete sc_inst_40;
        delete sc_inst_41;
        delete sc_inst_42;
        delete sc_inst_43;
        delete sc_inst_44;
        delete sc_inst_45;
        delete sc_inst_46;
        delete sc_inst_47;
        delete sc_inst_48;
        delete sc_inst_49;
        delete sc_inst_50;
        delete sc_inst_51;
        delete sc_inst_52;
        delete sc_inst_53;
        delete sc_inst_54;
        delete sc_inst_55;
        delete sc_inst_56;
        delete sc_inst_57;
        delete sc_inst_58;
        delete sc_inst_59;
        delete sc_inst_60;
        delete sc_inst_61;
        delete sc_inst_62;
    }
