#pragma GCC diagnostic ignored "-Wdeprecated-declarations" 
#include "xsim.dir/pfm_top_wrapper_behav/obj/sysc_interface.h"
#include <map>
#include <list>


extern "C" { std::vector<void*> *_glb_hdl_sc_channel_map; } 



extern "C"
    void call_HDL_SC_WRITE_bv_1(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<1, sc_dt::sc_bv<1> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_2(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<2, sc_dt::sc_bv<2> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_3(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<3, sc_dt::sc_bv<3> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_4(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<4, sc_dt::sc_bv<4> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_5(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<5, sc_dt::sc_bv<5> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_6(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<6, sc_dt::sc_bv<6> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_7(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<7, sc_dt::sc_bv<7> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_8(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<8, sc_dt::sc_bv<8> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_9(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<9, sc_dt::sc_bv<9> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_10(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<10, sc_dt::sc_bv<10> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_12(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<12, sc_dt::sc_bv<12> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_14(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<14, sc_dt::sc_bv<14> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_15(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<15, sc_dt::sc_bv<15> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_16(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<16, sc_dt::sc_bv<16> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_17(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<17, sc_dt::sc_bv<17> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_18(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<18, sc_dt::sc_bv<18> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_20(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<20, sc_dt::sc_bv<20> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_22(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<22, sc_dt::sc_bv<22> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_31(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<31, sc_dt::sc_bv<31> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_32(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<32, sc_dt::sc_bv<32> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_33(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<33, sc_dt::sc_bv<33> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_34(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<34, sc_dt::sc_bv<34> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_37(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<37, sc_dt::sc_bv<37> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_38(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<38, sc_dt::sc_bv<38> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_62(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<62, sc_dt::sc_bv<62> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_64(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<64, sc_dt::sc_bv<64> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_72(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<72, sc_dt::sc_bv<72> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_96(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<96, sc_dt::sc_bv<96> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_114(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<114, sc_dt::sc_bv<114> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_128(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<128, sc_dt::sc_bv<128> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_160(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<160, sc_dt::sc_bv<160> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_192(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<192, sc_dt::sc_bv<192> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_256(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<256, sc_dt::sc_bv<256> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_320(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<320, sc_dt::sc_bv<320> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_512(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<512, sc_dt::sc_bv<512> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_int(unsigned int sc_net_index, char* pval)
    {
          int val = *((int*)(pval));
          ((xsim_sc_channel<0, int>*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(val);
    } 



extern "C"
    void call_HDL_SC_WRITE_bit(unsigned int sc_net_index, char* pval)
    {
            sc_dt::sc_bit val  =  (sc_dt::sc_bit)((*((int*)(pval)) & 0x1));
          ((xsim_sc_channel<0, sc_dt::sc_bit>*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(val);
    } 



extern "C"
    void call_HDL_SC_WRITE_logic(unsigned int sc_net_index, char* pval)
    {
          sc_dt::sc_logic val  =  (sc_dt::sc_logic_value_t) (((*((int*)(pval)+1) & 0x1) << 1) | (*((int*)(pval)) & 0x1));
          ((xsim_sc_channel<0, sc_dt::sc_logic>*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(val);
    } 



extern "C"
    void call_HDL_SC_WRITE_bool(unsigned int sc_net_index, char* pval)
    {
          bool val = *((bool*)(pval));
          ((xsim_sc_channel<0, bool>*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(val);
    } 



extern "C"
    void implicit_HDL_SCinstantiate()
    {
        _glb_hdl_sc_channel_map = new std::vector<void*> ();
        sc_inst_1 = new pfm_dynamic_auto_cc_1(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.m00_couplers.auto_cc");
        sc_inst_1->xsim_set_dbg_index(1887);
        xsim_sc_channel<0, bool > *p_1_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_aclk.bind(*p_1_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_1_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_aresetn.bind(*p_1_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->s_axi_awaddr.bind(*p_1_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_1_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_1->s_axi_awprot.bind(*p_1_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_1_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_awvalid.bind(*p_1_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_1_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_awready.bind(*p_1_s_axi_awready);
        p_1_s_axi_awready->set_sv_netview_offsetfromdp(8026952);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_1_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_1->s_axi_wdata.bind(*p_1_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_1_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_1->s_axi_wstrb.bind(*p_1_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_1_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_wvalid.bind(*p_1_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_1_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_wready.bind(*p_1_s_axi_wready);
        p_1_s_axi_wready->set_sv_netview_offsetfromdp(8027176);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->s_axi_bresp.bind(*p_1_s_axi_bresp);
        p_1_s_axi_bresp->set_sv_netview_offsetfromdp(8027232);
        xsim_sc_channel<0, bool > *p_1_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_bvalid.bind(*p_1_s_axi_bvalid);
        p_1_s_axi_bvalid->set_sv_netview_offsetfromdp(8027288);
        xsim_sc_channel<0, bool > *p_1_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_bready.bind(*p_1_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_bready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->s_axi_araddr.bind(*p_1_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_1_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_1->s_axi_arprot.bind(*p_1_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_1_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_arvalid.bind(*p_1_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_1_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_arready.bind(*p_1_s_axi_arready);
        p_1_s_axi_arready->set_sv_netview_offsetfromdp(8027568);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_1_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_1->s_axi_rdata.bind(*p_1_s_axi_rdata);
        p_1_s_axi_rdata->set_sv_netview_offsetfromdp(8027624);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->s_axi_rresp.bind(*p_1_s_axi_rresp);
        p_1_s_axi_rresp->set_sv_netview_offsetfromdp(8027680);
        xsim_sc_channel<0, bool > *p_1_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_rvalid.bind(*p_1_s_axi_rvalid);
        p_1_s_axi_rvalid->set_sv_netview_offsetfromdp(8027736);
        xsim_sc_channel<0, bool > *p_1_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_rready.bind(*p_1_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_rready);
        xsim_sc_channel<0, bool > *p_1_m_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_aclk.bind(*p_1_m_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_1_m_axi_aclk);
        xsim_sc_channel<0, bool > *p_1_m_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_aresetn.bind(*p_1_m_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_1_m_axi_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_m_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->m_axi_awaddr.bind(*p_1_m_axi_awaddr);
        p_1_m_axi_awaddr->set_sv_netview_offsetfromdp(8027960);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_1_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_1->m_axi_awprot.bind(*p_1_m_axi_awprot);
        p_1_m_axi_awprot->set_sv_netview_offsetfromdp(8028016);
        xsim_sc_channel<0, bool > *p_1_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_awvalid.bind(*p_1_m_axi_awvalid);
        p_1_m_axi_awvalid->set_sv_netview_offsetfromdp(8028072);
        xsim_sc_channel<0, bool > *p_1_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_awready.bind(*p_1_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_1_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_1_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_1->m_axi_wdata.bind(*p_1_m_axi_wdata);
        p_1_m_axi_wdata->set_sv_netview_offsetfromdp(8028184);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_1_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_1->m_axi_wstrb.bind(*p_1_m_axi_wstrb);
        p_1_m_axi_wstrb->set_sv_netview_offsetfromdp(8028240);
        xsim_sc_channel<0, bool > *p_1_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_wvalid.bind(*p_1_m_axi_wvalid);
        p_1_m_axi_wvalid->set_sv_netview_offsetfromdp(8028296);
        xsim_sc_channel<0, bool > *p_1_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_wready.bind(*p_1_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_1_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->m_axi_bresp.bind(*p_1_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_1_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_1_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_bvalid.bind(*p_1_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_1_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_1_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_bready.bind(*p_1_m_axi_bready);
        p_1_m_axi_bready->set_sv_netview_offsetfromdp(8028520);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_m_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->m_axi_araddr.bind(*p_1_m_axi_araddr);
        p_1_m_axi_araddr->set_sv_netview_offsetfromdp(8028576);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_1_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_1->m_axi_arprot.bind(*p_1_m_axi_arprot);
        p_1_m_axi_arprot->set_sv_netview_offsetfromdp(8028632);
        xsim_sc_channel<0, bool > *p_1_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_arvalid.bind(*p_1_m_axi_arvalid);
        p_1_m_axi_arvalid->set_sv_netview_offsetfromdp(8028688);
        xsim_sc_channel<0, bool > *p_1_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_arready.bind(*p_1_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_1_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_1_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_1->m_axi_rdata.bind(*p_1_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_1_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->m_axi_rresp.bind(*p_1_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_1_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_1_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_rvalid.bind(*p_1_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_1_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_1_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_rready.bind(*p_1_m_axi_rready);
        p_1_m_axi_rready->set_sv_netview_offsetfromdp(8028968);
        sc_inst_2 = new pfm_dynamic_m00_regslice_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.m00_couplers.m00_regslice");
        sc_inst_2->xsim_set_dbg_index(1888);
        xsim_sc_channel<0, bool > *p_2_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_2->aclk.bind(*p_2_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_2_aclk);
        xsim_sc_channel<0, bool > *p_2_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_2->aresetn.bind(*p_2_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_2_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_2_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_2->s_axi_awaddr.bind(*p_2_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_2_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_2->s_axi_awprot.bind(*p_2_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_2_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_awvalid.bind(*p_2_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_2_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_awready.bind(*p_2_s_axi_awready);
        p_2_s_axi_awready->set_sv_netview_offsetfromdp(8029352);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_2_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_2->s_axi_wdata.bind(*p_2_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_2_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_2->s_axi_wstrb.bind(*p_2_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_2_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_wvalid.bind(*p_2_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_2_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_wready.bind(*p_2_s_axi_wready);
        p_2_s_axi_wready->set_sv_netview_offsetfromdp(8029576);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_2_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_2->s_axi_bresp.bind(*p_2_s_axi_bresp);
        p_2_s_axi_bresp->set_sv_netview_offsetfromdp(8029632);
        xsim_sc_channel<0, bool > *p_2_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_bvalid.bind(*p_2_s_axi_bvalid);
        p_2_s_axi_bvalid->set_sv_netview_offsetfromdp(8029688);
        xsim_sc_channel<0, bool > *p_2_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_bready.bind(*p_2_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_bready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_2_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_2->s_axi_araddr.bind(*p_2_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_2_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_2->s_axi_arprot.bind(*p_2_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_2_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_arvalid.bind(*p_2_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_2_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_arready.bind(*p_2_s_axi_arready);
        p_2_s_axi_arready->set_sv_netview_offsetfromdp(8029968);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_2_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_2->s_axi_rdata.bind(*p_2_s_axi_rdata);
        p_2_s_axi_rdata->set_sv_netview_offsetfromdp(8030024);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_2_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_2->s_axi_rresp.bind(*p_2_s_axi_rresp);
        p_2_s_axi_rresp->set_sv_netview_offsetfromdp(8030080);
        xsim_sc_channel<0, bool > *p_2_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_rvalid.bind(*p_2_s_axi_rvalid);
        p_2_s_axi_rvalid->set_sv_netview_offsetfromdp(8030136);
        xsim_sc_channel<0, bool > *p_2_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_rready.bind(*p_2_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_rready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_2_m_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_2->m_axi_awaddr.bind(*p_2_m_axi_awaddr);
        p_2_m_axi_awaddr->set_sv_netview_offsetfromdp(8030248);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_2_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_2->m_axi_awprot.bind(*p_2_m_axi_awprot);
        p_2_m_axi_awprot->set_sv_netview_offsetfromdp(8030304);
        xsim_sc_channel<0, bool > *p_2_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axi_awvalid.bind(*p_2_m_axi_awvalid);
        p_2_m_axi_awvalid->set_sv_netview_offsetfromdp(8030360);
        xsim_sc_channel<0, bool > *p_2_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axi_awready.bind(*p_2_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_2_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_2_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_2->m_axi_wdata.bind(*p_2_m_axi_wdata);
        p_2_m_axi_wdata->set_sv_netview_offsetfromdp(8030472);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_2_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_2->m_axi_wstrb.bind(*p_2_m_axi_wstrb);
        p_2_m_axi_wstrb->set_sv_netview_offsetfromdp(8030528);
        xsim_sc_channel<0, bool > *p_2_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axi_wvalid.bind(*p_2_m_axi_wvalid);
        p_2_m_axi_wvalid->set_sv_netview_offsetfromdp(8030584);
        xsim_sc_channel<0, bool > *p_2_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axi_wready.bind(*p_2_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_2_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_2_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_2->m_axi_bresp.bind(*p_2_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_2_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_2_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axi_bvalid.bind(*p_2_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_2_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_2_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axi_bready.bind(*p_2_m_axi_bready);
        p_2_m_axi_bready->set_sv_netview_offsetfromdp(8030808);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_2_m_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_2->m_axi_araddr.bind(*p_2_m_axi_araddr);
        p_2_m_axi_araddr->set_sv_netview_offsetfromdp(8030864);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_2_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_2->m_axi_arprot.bind(*p_2_m_axi_arprot);
        p_2_m_axi_arprot->set_sv_netview_offsetfromdp(8030920);
        xsim_sc_channel<0, bool > *p_2_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axi_arvalid.bind(*p_2_m_axi_arvalid);
        p_2_m_axi_arvalid->set_sv_netview_offsetfromdp(8030976);
        xsim_sc_channel<0, bool > *p_2_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axi_arready.bind(*p_2_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_2_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_2_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_2->m_axi_rdata.bind(*p_2_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_2_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_2_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_2->m_axi_rresp.bind(*p_2_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_2_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_2_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axi_rvalid.bind(*p_2_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_2_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_2_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axi_rready.bind(*p_2_m_axi_rready);
        p_2_m_axi_rready->set_sv_netview_offsetfromdp(8031256);
        sc_inst_3 = new pfm_dynamic_auto_cc_2(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.m01_couplers.auto_cc");
        sc_inst_3->xsim_set_dbg_index(1929);
        xsim_sc_channel<0, bool > *p_3_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_aclk.bind(*p_3_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_3_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_aresetn.bind(*p_3_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->s_axi_awaddr.bind(*p_3_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_3_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_3->s_axi_awprot.bind(*p_3_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_3_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_awvalid.bind(*p_3_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_3_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_awready.bind(*p_3_s_axi_awready);
        p_3_s_axi_awready->set_sv_netview_offsetfromdp(8067128);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_3_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_3->s_axi_wdata.bind(*p_3_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_3_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_3->s_axi_wstrb.bind(*p_3_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_3_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_wvalid.bind(*p_3_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_3_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_wready.bind(*p_3_s_axi_wready);
        p_3_s_axi_wready->set_sv_netview_offsetfromdp(8067352);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->s_axi_bresp.bind(*p_3_s_axi_bresp);
        p_3_s_axi_bresp->set_sv_netview_offsetfromdp(8067408);
        xsim_sc_channel<0, bool > *p_3_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_bvalid.bind(*p_3_s_axi_bvalid);
        p_3_s_axi_bvalid->set_sv_netview_offsetfromdp(8067464);
        xsim_sc_channel<0, bool > *p_3_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_bready.bind(*p_3_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_bready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->s_axi_araddr.bind(*p_3_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_3_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_3->s_axi_arprot.bind(*p_3_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_3_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_arvalid.bind(*p_3_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_3_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_arready.bind(*p_3_s_axi_arready);
        p_3_s_axi_arready->set_sv_netview_offsetfromdp(8067744);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_3_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_3->s_axi_rdata.bind(*p_3_s_axi_rdata);
        p_3_s_axi_rdata->set_sv_netview_offsetfromdp(8067800);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->s_axi_rresp.bind(*p_3_s_axi_rresp);
        p_3_s_axi_rresp->set_sv_netview_offsetfromdp(8067856);
        xsim_sc_channel<0, bool > *p_3_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_rvalid.bind(*p_3_s_axi_rvalid);
        p_3_s_axi_rvalid->set_sv_netview_offsetfromdp(8067912);
        xsim_sc_channel<0, bool > *p_3_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_rready.bind(*p_3_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_rready);
        xsim_sc_channel<0, bool > *p_3_m_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_aclk.bind(*p_3_m_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_3_m_axi_aclk);
        xsim_sc_channel<0, bool > *p_3_m_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_aresetn.bind(*p_3_m_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_3_m_axi_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_m_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->m_axi_awaddr.bind(*p_3_m_axi_awaddr);
        p_3_m_axi_awaddr->set_sv_netview_offsetfromdp(8068136);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_3_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_3->m_axi_awprot.bind(*p_3_m_axi_awprot);
        p_3_m_axi_awprot->set_sv_netview_offsetfromdp(8068192);
        xsim_sc_channel<0, bool > *p_3_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_awvalid.bind(*p_3_m_axi_awvalid);
        p_3_m_axi_awvalid->set_sv_netview_offsetfromdp(8068248);
        xsim_sc_channel<0, bool > *p_3_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_awready.bind(*p_3_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_3_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_3_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_3->m_axi_wdata.bind(*p_3_m_axi_wdata);
        p_3_m_axi_wdata->set_sv_netview_offsetfromdp(8068360);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_3_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_3->m_axi_wstrb.bind(*p_3_m_axi_wstrb);
        p_3_m_axi_wstrb->set_sv_netview_offsetfromdp(8068416);
        xsim_sc_channel<0, bool > *p_3_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_wvalid.bind(*p_3_m_axi_wvalid);
        p_3_m_axi_wvalid->set_sv_netview_offsetfromdp(8068472);
        xsim_sc_channel<0, bool > *p_3_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_wready.bind(*p_3_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_3_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->m_axi_bresp.bind(*p_3_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_3_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_3_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_bvalid.bind(*p_3_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_3_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_3_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_bready.bind(*p_3_m_axi_bready);
        p_3_m_axi_bready->set_sv_netview_offsetfromdp(8068696);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_m_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->m_axi_araddr.bind(*p_3_m_axi_araddr);
        p_3_m_axi_araddr->set_sv_netview_offsetfromdp(8068752);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_3_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_3->m_axi_arprot.bind(*p_3_m_axi_arprot);
        p_3_m_axi_arprot->set_sv_netview_offsetfromdp(8068808);
        xsim_sc_channel<0, bool > *p_3_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_arvalid.bind(*p_3_m_axi_arvalid);
        p_3_m_axi_arvalid->set_sv_netview_offsetfromdp(8068864);
        xsim_sc_channel<0, bool > *p_3_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_arready.bind(*p_3_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_3_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_3_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_3->m_axi_rdata.bind(*p_3_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_3_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->m_axi_rresp.bind(*p_3_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_3_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_3_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_rvalid.bind(*p_3_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_3_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_3_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_rready.bind(*p_3_m_axi_rready);
        p_3_m_axi_rready->set_sv_netview_offsetfromdp(8069144);
        sc_inst_4 = new pfm_dynamic_m01_regslice_5(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.m01_couplers.m01_regslice");
        sc_inst_4->xsim_set_dbg_index(1930);
        xsim_sc_channel<0, bool > *p_4_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_4->aclk.bind(*p_4_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_4_aclk);
        xsim_sc_channel<0, bool > *p_4_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_4->aresetn.bind(*p_4_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_4_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->s_axi_awaddr.bind(*p_4_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->s_axi_awprot.bind(*p_4_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_4_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_awvalid.bind(*p_4_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_4_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_awready.bind(*p_4_s_axi_awready);
        p_4_s_axi_awready->set_sv_netview_offsetfromdp(8069528);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_4_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_4->s_axi_wdata.bind(*p_4_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_4_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_4->s_axi_wstrb.bind(*p_4_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_4_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_wvalid.bind(*p_4_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_4_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_wready.bind(*p_4_s_axi_wready);
        p_4_s_axi_wready->set_sv_netview_offsetfromdp(8069752);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->s_axi_bresp.bind(*p_4_s_axi_bresp);
        p_4_s_axi_bresp->set_sv_netview_offsetfromdp(8069808);
        xsim_sc_channel<0, bool > *p_4_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_bvalid.bind(*p_4_s_axi_bvalid);
        p_4_s_axi_bvalid->set_sv_netview_offsetfromdp(8069864);
        xsim_sc_channel<0, bool > *p_4_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_bready.bind(*p_4_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_bready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->s_axi_araddr.bind(*p_4_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->s_axi_arprot.bind(*p_4_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_4_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_arvalid.bind(*p_4_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_4_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_arready.bind(*p_4_s_axi_arready);
        p_4_s_axi_arready->set_sv_netview_offsetfromdp(8070144);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_4_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_4->s_axi_rdata.bind(*p_4_s_axi_rdata);
        p_4_s_axi_rdata->set_sv_netview_offsetfromdp(8070200);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->s_axi_rresp.bind(*p_4_s_axi_rresp);
        p_4_s_axi_rresp->set_sv_netview_offsetfromdp(8070256);
        xsim_sc_channel<0, bool > *p_4_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_rvalid.bind(*p_4_s_axi_rvalid);
        p_4_s_axi_rvalid->set_sv_netview_offsetfromdp(8070312);
        xsim_sc_channel<0, bool > *p_4_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_rready.bind(*p_4_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_rready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_m_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->m_axi_awaddr.bind(*p_4_m_axi_awaddr);
        p_4_m_axi_awaddr->set_sv_netview_offsetfromdp(8070424);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->m_axi_awprot.bind(*p_4_m_axi_awprot);
        p_4_m_axi_awprot->set_sv_netview_offsetfromdp(8070480);
        xsim_sc_channel<0, bool > *p_4_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axi_awvalid.bind(*p_4_m_axi_awvalid);
        p_4_m_axi_awvalid->set_sv_netview_offsetfromdp(8070536);
        xsim_sc_channel<0, bool > *p_4_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axi_awready.bind(*p_4_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_4_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_4_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_4->m_axi_wdata.bind(*p_4_m_axi_wdata);
        p_4_m_axi_wdata->set_sv_netview_offsetfromdp(8070648);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_4_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_4->m_axi_wstrb.bind(*p_4_m_axi_wstrb);
        p_4_m_axi_wstrb->set_sv_netview_offsetfromdp(8070704);
        xsim_sc_channel<0, bool > *p_4_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axi_wvalid.bind(*p_4_m_axi_wvalid);
        p_4_m_axi_wvalid->set_sv_netview_offsetfromdp(8070760);
        xsim_sc_channel<0, bool > *p_4_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axi_wready.bind(*p_4_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_4_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->m_axi_bresp.bind(*p_4_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_4_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_4_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axi_bvalid.bind(*p_4_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_4_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_4_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axi_bready.bind(*p_4_m_axi_bready);
        p_4_m_axi_bready->set_sv_netview_offsetfromdp(8070984);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_m_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->m_axi_araddr.bind(*p_4_m_axi_araddr);
        p_4_m_axi_araddr->set_sv_netview_offsetfromdp(8071040);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->m_axi_arprot.bind(*p_4_m_axi_arprot);
        p_4_m_axi_arprot->set_sv_netview_offsetfromdp(8071096);
        xsim_sc_channel<0, bool > *p_4_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axi_arvalid.bind(*p_4_m_axi_arvalid);
        p_4_m_axi_arvalid->set_sv_netview_offsetfromdp(8071152);
        xsim_sc_channel<0, bool > *p_4_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axi_arready.bind(*p_4_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_4_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_4_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_4->m_axi_rdata.bind(*p_4_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_4_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->m_axi_rresp.bind(*p_4_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_4_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_4_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axi_rvalid.bind(*p_4_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_4_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_4_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axi_rready.bind(*p_4_m_axi_rready);
        p_4_m_axi_rready->set_sv_netview_offsetfromdp(8071432);
        sc_inst_5 = new pfm_dynamic_auto_cc_3(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.m02_couplers.auto_cc");
        sc_inst_5->xsim_set_dbg_index(1971);
        xsim_sc_channel<0, bool > *p_5_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_aclk.bind(*p_5_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_5_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_aresetn.bind(*p_5_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->s_axi_awaddr.bind(*p_5_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->s_axi_awprot.bind(*p_5_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_5_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_awvalid.bind(*p_5_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_5_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_awready.bind(*p_5_s_axi_awready);
        p_5_s_axi_awready->set_sv_netview_offsetfromdp(8108456);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_5_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_5->s_axi_wdata.bind(*p_5_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->s_axi_wstrb.bind(*p_5_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_5_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_wvalid.bind(*p_5_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_5_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_wready.bind(*p_5_s_axi_wready);
        p_5_s_axi_wready->set_sv_netview_offsetfromdp(8108680);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->s_axi_bresp.bind(*p_5_s_axi_bresp);
        p_5_s_axi_bresp->set_sv_netview_offsetfromdp(8108736);
        xsim_sc_channel<0, bool > *p_5_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_bvalid.bind(*p_5_s_axi_bvalid);
        p_5_s_axi_bvalid->set_sv_netview_offsetfromdp(8108792);
        xsim_sc_channel<0, bool > *p_5_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_bready.bind(*p_5_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_bready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->s_axi_araddr.bind(*p_5_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->s_axi_arprot.bind(*p_5_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_5_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_arvalid.bind(*p_5_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_5_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_arready.bind(*p_5_s_axi_arready);
        p_5_s_axi_arready->set_sv_netview_offsetfromdp(8109072);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_5_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_5->s_axi_rdata.bind(*p_5_s_axi_rdata);
        p_5_s_axi_rdata->set_sv_netview_offsetfromdp(8109128);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->s_axi_rresp.bind(*p_5_s_axi_rresp);
        p_5_s_axi_rresp->set_sv_netview_offsetfromdp(8109184);
        xsim_sc_channel<0, bool > *p_5_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_rvalid.bind(*p_5_s_axi_rvalid);
        p_5_s_axi_rvalid->set_sv_netview_offsetfromdp(8109240);
        xsim_sc_channel<0, bool > *p_5_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_rready.bind(*p_5_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_rready);
        xsim_sc_channel<0, bool > *p_5_m_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_aclk.bind(*p_5_m_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_5_m_axi_aclk);
        xsim_sc_channel<0, bool > *p_5_m_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_aresetn.bind(*p_5_m_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_5_m_axi_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_m_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->m_axi_awaddr.bind(*p_5_m_axi_awaddr);
        p_5_m_axi_awaddr->set_sv_netview_offsetfromdp(8109464);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->m_axi_awprot.bind(*p_5_m_axi_awprot);
        p_5_m_axi_awprot->set_sv_netview_offsetfromdp(8109520);
        xsim_sc_channel<0, bool > *p_5_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_awvalid.bind(*p_5_m_axi_awvalid);
        p_5_m_axi_awvalid->set_sv_netview_offsetfromdp(8109576);
        xsim_sc_channel<0, bool > *p_5_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_awready.bind(*p_5_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_5_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_5_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_5->m_axi_wdata.bind(*p_5_m_axi_wdata);
        p_5_m_axi_wdata->set_sv_netview_offsetfromdp(8109688);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->m_axi_wstrb.bind(*p_5_m_axi_wstrb);
        p_5_m_axi_wstrb->set_sv_netview_offsetfromdp(8109744);
        xsim_sc_channel<0, bool > *p_5_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_wvalid.bind(*p_5_m_axi_wvalid);
        p_5_m_axi_wvalid->set_sv_netview_offsetfromdp(8109800);
        xsim_sc_channel<0, bool > *p_5_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_wready.bind(*p_5_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_5_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->m_axi_bresp.bind(*p_5_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_5_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_5_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_bvalid.bind(*p_5_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_5_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_bready.bind(*p_5_m_axi_bready);
        p_5_m_axi_bready->set_sv_netview_offsetfromdp(8110024);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_m_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->m_axi_araddr.bind(*p_5_m_axi_araddr);
        p_5_m_axi_araddr->set_sv_netview_offsetfromdp(8110080);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->m_axi_arprot.bind(*p_5_m_axi_arprot);
        p_5_m_axi_arprot->set_sv_netview_offsetfromdp(8110136);
        xsim_sc_channel<0, bool > *p_5_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_arvalid.bind(*p_5_m_axi_arvalid);
        p_5_m_axi_arvalid->set_sv_netview_offsetfromdp(8110192);
        xsim_sc_channel<0, bool > *p_5_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_arready.bind(*p_5_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_5_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_5_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_5->m_axi_rdata.bind(*p_5_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_5_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->m_axi_rresp.bind(*p_5_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_5_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_5_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_rvalid.bind(*p_5_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_5_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_rready.bind(*p_5_m_axi_rready);
        p_5_m_axi_rready->set_sv_netview_offsetfromdp(8110472);
        sc_inst_6 = new pfm_dynamic_m02_regslice_5(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.m02_couplers.m02_regslice");
        sc_inst_6->xsim_set_dbg_index(1972);
        xsim_sc_channel<0, bool > *p_6_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_6->aclk.bind(*p_6_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_6_aclk);
        xsim_sc_channel<0, bool > *p_6_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_6->aresetn.bind(*p_6_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_6_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->s_axi_awaddr.bind(*p_6_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->s_axi_awprot.bind(*p_6_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_6_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_awvalid.bind(*p_6_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_6_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_awready.bind(*p_6_s_axi_awready);
        p_6_s_axi_awready->set_sv_netview_offsetfromdp(8110856);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->s_axi_wdata.bind(*p_6_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->s_axi_wstrb.bind(*p_6_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_6_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_wvalid.bind(*p_6_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_6_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_wready.bind(*p_6_s_axi_wready);
        p_6_s_axi_wready->set_sv_netview_offsetfromdp(8111080);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->s_axi_bresp.bind(*p_6_s_axi_bresp);
        p_6_s_axi_bresp->set_sv_netview_offsetfromdp(8111136);
        xsim_sc_channel<0, bool > *p_6_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_bvalid.bind(*p_6_s_axi_bvalid);
        p_6_s_axi_bvalid->set_sv_netview_offsetfromdp(8111192);
        xsim_sc_channel<0, bool > *p_6_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_bready.bind(*p_6_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_bready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->s_axi_araddr.bind(*p_6_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->s_axi_arprot.bind(*p_6_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_6_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_arvalid.bind(*p_6_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_6_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_arready.bind(*p_6_s_axi_arready);
        p_6_s_axi_arready->set_sv_netview_offsetfromdp(8111472);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->s_axi_rdata.bind(*p_6_s_axi_rdata);
        p_6_s_axi_rdata->set_sv_netview_offsetfromdp(8111528);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->s_axi_rresp.bind(*p_6_s_axi_rresp);
        p_6_s_axi_rresp->set_sv_netview_offsetfromdp(8111584);
        xsim_sc_channel<0, bool > *p_6_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_rvalid.bind(*p_6_s_axi_rvalid);
        p_6_s_axi_rvalid->set_sv_netview_offsetfromdp(8111640);
        xsim_sc_channel<0, bool > *p_6_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_rready.bind(*p_6_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_rready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_m_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->m_axi_awaddr.bind(*p_6_m_axi_awaddr);
        p_6_m_axi_awaddr->set_sv_netview_offsetfromdp(8111752);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->m_axi_awprot.bind(*p_6_m_axi_awprot);
        p_6_m_axi_awprot->set_sv_netview_offsetfromdp(8111808);
        xsim_sc_channel<0, bool > *p_6_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axi_awvalid.bind(*p_6_m_axi_awvalid);
        p_6_m_axi_awvalid->set_sv_netview_offsetfromdp(8111864);
        xsim_sc_channel<0, bool > *p_6_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axi_awready.bind(*p_6_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_6_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->m_axi_wdata.bind(*p_6_m_axi_wdata);
        p_6_m_axi_wdata->set_sv_netview_offsetfromdp(8111976);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->m_axi_wstrb.bind(*p_6_m_axi_wstrb);
        p_6_m_axi_wstrb->set_sv_netview_offsetfromdp(8112032);
        xsim_sc_channel<0, bool > *p_6_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axi_wvalid.bind(*p_6_m_axi_wvalid);
        p_6_m_axi_wvalid->set_sv_netview_offsetfromdp(8112088);
        xsim_sc_channel<0, bool > *p_6_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axi_wready.bind(*p_6_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_6_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->m_axi_bresp.bind(*p_6_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_6_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_6_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axi_bvalid.bind(*p_6_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_6_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_6_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axi_bready.bind(*p_6_m_axi_bready);
        p_6_m_axi_bready->set_sv_netview_offsetfromdp(8112312);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_m_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->m_axi_araddr.bind(*p_6_m_axi_araddr);
        p_6_m_axi_araddr->set_sv_netview_offsetfromdp(8112368);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->m_axi_arprot.bind(*p_6_m_axi_arprot);
        p_6_m_axi_arprot->set_sv_netview_offsetfromdp(8112424);
        xsim_sc_channel<0, bool > *p_6_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axi_arvalid.bind(*p_6_m_axi_arvalid);
        p_6_m_axi_arvalid->set_sv_netview_offsetfromdp(8112480);
        xsim_sc_channel<0, bool > *p_6_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axi_arready.bind(*p_6_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_6_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->m_axi_rdata.bind(*p_6_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_6_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->m_axi_rresp.bind(*p_6_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_6_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_6_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axi_rvalid.bind(*p_6_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_6_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_6_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axi_rready.bind(*p_6_m_axi_rready);
        p_6_m_axi_rready->set_sv_netview_offsetfromdp(8112760);
        sc_inst_7 = new pfm_dynamic_auto_cc_4(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.m03_couplers.auto_cc");
        sc_inst_7->xsim_set_dbg_index(2015);
        xsim_sc_channel<0, bool > *p_7_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_aclk.bind(*p_7_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_7_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_aresetn.bind(*p_7_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_7_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_7->s_axi_awaddr.bind(*p_7_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->s_axi_awprot.bind(*p_7_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_7_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_awvalid.bind(*p_7_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_7_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_awready.bind(*p_7_s_axi_awready);
        p_7_s_axi_awready->set_sv_netview_offsetfromdp(8148632);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_7_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_7->s_axi_wdata.bind(*p_7_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->s_axi_wstrb.bind(*p_7_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_7_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_wvalid.bind(*p_7_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_7_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_wready.bind(*p_7_s_axi_wready);
        p_7_s_axi_wready->set_sv_netview_offsetfromdp(8148856);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->s_axi_bresp.bind(*p_7_s_axi_bresp);
        p_7_s_axi_bresp->set_sv_netview_offsetfromdp(8148912);
        xsim_sc_channel<0, bool > *p_7_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_bvalid.bind(*p_7_s_axi_bvalid);
        p_7_s_axi_bvalid->set_sv_netview_offsetfromdp(8148968);
        xsim_sc_channel<0, bool > *p_7_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_bready.bind(*p_7_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_bready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_7_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_7->s_axi_araddr.bind(*p_7_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->s_axi_arprot.bind(*p_7_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_7_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_arvalid.bind(*p_7_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_7_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_arready.bind(*p_7_s_axi_arready);
        p_7_s_axi_arready->set_sv_netview_offsetfromdp(8149248);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_7_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_7->s_axi_rdata.bind(*p_7_s_axi_rdata);
        p_7_s_axi_rdata->set_sv_netview_offsetfromdp(8149304);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->s_axi_rresp.bind(*p_7_s_axi_rresp);
        p_7_s_axi_rresp->set_sv_netview_offsetfromdp(8149360);
        xsim_sc_channel<0, bool > *p_7_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_rvalid.bind(*p_7_s_axi_rvalid);
        p_7_s_axi_rvalid->set_sv_netview_offsetfromdp(8149416);
        xsim_sc_channel<0, bool > *p_7_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_rready.bind(*p_7_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_rready);
        xsim_sc_channel<0, bool > *p_7_m_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_aclk.bind(*p_7_m_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_axi_aclk);
        xsim_sc_channel<0, bool > *p_7_m_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_aresetn.bind(*p_7_m_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_axi_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_7_m_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_7->m_axi_awaddr.bind(*p_7_m_axi_awaddr);
        p_7_m_axi_awaddr->set_sv_netview_offsetfromdp(8149640);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->m_axi_awprot.bind(*p_7_m_axi_awprot);
        p_7_m_axi_awprot->set_sv_netview_offsetfromdp(8149696);
        xsim_sc_channel<0, bool > *p_7_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_awvalid.bind(*p_7_m_axi_awvalid);
        p_7_m_axi_awvalid->set_sv_netview_offsetfromdp(8149752);
        xsim_sc_channel<0, bool > *p_7_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_awready.bind(*p_7_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_7_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_7->m_axi_wdata.bind(*p_7_m_axi_wdata);
        p_7_m_axi_wdata->set_sv_netview_offsetfromdp(8149864);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->m_axi_wstrb.bind(*p_7_m_axi_wstrb);
        p_7_m_axi_wstrb->set_sv_netview_offsetfromdp(8149920);
        xsim_sc_channel<0, bool > *p_7_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_wvalid.bind(*p_7_m_axi_wvalid);
        p_7_m_axi_wvalid->set_sv_netview_offsetfromdp(8149976);
        xsim_sc_channel<0, bool > *p_7_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_wready.bind(*p_7_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->m_axi_bresp.bind(*p_7_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_7_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_bvalid.bind(*p_7_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_7_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_bready.bind(*p_7_m_axi_bready);
        p_7_m_axi_bready->set_sv_netview_offsetfromdp(8150200);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_7_m_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_7->m_axi_araddr.bind(*p_7_m_axi_araddr);
        p_7_m_axi_araddr->set_sv_netview_offsetfromdp(8150256);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->m_axi_arprot.bind(*p_7_m_axi_arprot);
        p_7_m_axi_arprot->set_sv_netview_offsetfromdp(8150312);
        xsim_sc_channel<0, bool > *p_7_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_arvalid.bind(*p_7_m_axi_arvalid);
        p_7_m_axi_arvalid->set_sv_netview_offsetfromdp(8150368);
        xsim_sc_channel<0, bool > *p_7_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_arready.bind(*p_7_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_7_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_7->m_axi_rdata.bind(*p_7_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->m_axi_rresp.bind(*p_7_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_7_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_rvalid.bind(*p_7_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_7_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_rready.bind(*p_7_m_axi_rready);
        p_7_m_axi_rready->set_sv_netview_offsetfromdp(8150648);
        sc_inst_8 = new pfm_dynamic_m03_regslice_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.m03_couplers.m03_regslice");
        sc_inst_8->xsim_set_dbg_index(2016);
        xsim_sc_channel<0, bool > *p_8_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_8->aclk.bind(*p_8_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_8_aclk);
        xsim_sc_channel<0, bool > *p_8_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_8->aresetn.bind(*p_8_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_8_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_8_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_8->s_axi_awaddr.bind(*p_8_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->s_axi_awprot.bind(*p_8_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_8_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_axi_awvalid.bind(*p_8_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_8_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_axi_awready.bind(*p_8_s_axi_awready);
        p_8_s_axi_awready->set_sv_netview_offsetfromdp(8151032);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->s_axi_wdata.bind(*p_8_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->s_axi_wstrb.bind(*p_8_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_8_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_axi_wvalid.bind(*p_8_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_8_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_axi_wready.bind(*p_8_s_axi_wready);
        p_8_s_axi_wready->set_sv_netview_offsetfromdp(8151256);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->s_axi_bresp.bind(*p_8_s_axi_bresp);
        p_8_s_axi_bresp->set_sv_netview_offsetfromdp(8151312);
        xsim_sc_channel<0, bool > *p_8_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_axi_bvalid.bind(*p_8_s_axi_bvalid);
        p_8_s_axi_bvalid->set_sv_netview_offsetfromdp(8151368);
        xsim_sc_channel<0, bool > *p_8_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_axi_bready.bind(*p_8_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_axi_bready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_8_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_8->s_axi_araddr.bind(*p_8_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->s_axi_arprot.bind(*p_8_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_8_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_axi_arvalid.bind(*p_8_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_8_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_axi_arready.bind(*p_8_s_axi_arready);
        p_8_s_axi_arready->set_sv_netview_offsetfromdp(8151648);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->s_axi_rdata.bind(*p_8_s_axi_rdata);
        p_8_s_axi_rdata->set_sv_netview_offsetfromdp(8151704);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->s_axi_rresp.bind(*p_8_s_axi_rresp);
        p_8_s_axi_rresp->set_sv_netview_offsetfromdp(8151760);
        xsim_sc_channel<0, bool > *p_8_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_axi_rvalid.bind(*p_8_s_axi_rvalid);
        p_8_s_axi_rvalid->set_sv_netview_offsetfromdp(8151816);
        xsim_sc_channel<0, bool > *p_8_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_axi_rready.bind(*p_8_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_axi_rready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_8_m_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_8->m_axi_awaddr.bind(*p_8_m_axi_awaddr);
        p_8_m_axi_awaddr->set_sv_netview_offsetfromdp(8151928);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->m_axi_awprot.bind(*p_8_m_axi_awprot);
        p_8_m_axi_awprot->set_sv_netview_offsetfromdp(8151984);
        xsim_sc_channel<0, bool > *p_8_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->m_axi_awvalid.bind(*p_8_m_axi_awvalid);
        p_8_m_axi_awvalid->set_sv_netview_offsetfromdp(8152040);
        xsim_sc_channel<0, bool > *p_8_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_8->m_axi_awready.bind(*p_8_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->m_axi_wdata.bind(*p_8_m_axi_wdata);
        p_8_m_axi_wdata->set_sv_netview_offsetfromdp(8152152);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->m_axi_wstrb.bind(*p_8_m_axi_wstrb);
        p_8_m_axi_wstrb->set_sv_netview_offsetfromdp(8152208);
        xsim_sc_channel<0, bool > *p_8_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->m_axi_wvalid.bind(*p_8_m_axi_wvalid);
        p_8_m_axi_wvalid->set_sv_netview_offsetfromdp(8152264);
        xsim_sc_channel<0, bool > *p_8_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_8->m_axi_wready.bind(*p_8_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->m_axi_bresp.bind(*p_8_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_8_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->m_axi_bvalid.bind(*p_8_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_8_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_8->m_axi_bready.bind(*p_8_m_axi_bready);
        p_8_m_axi_bready->set_sv_netview_offsetfromdp(8152488);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_8_m_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_8->m_axi_araddr.bind(*p_8_m_axi_araddr);
        p_8_m_axi_araddr->set_sv_netview_offsetfromdp(8152544);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->m_axi_arprot.bind(*p_8_m_axi_arprot);
        p_8_m_axi_arprot->set_sv_netview_offsetfromdp(8152600);
        xsim_sc_channel<0, bool > *p_8_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->m_axi_arvalid.bind(*p_8_m_axi_arvalid);
        p_8_m_axi_arvalid->set_sv_netview_offsetfromdp(8152656);
        xsim_sc_channel<0, bool > *p_8_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_8->m_axi_arready.bind(*p_8_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->m_axi_rdata.bind(*p_8_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->m_axi_rresp.bind(*p_8_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_8_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->m_axi_rvalid.bind(*p_8_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_8_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_8->m_axi_rready.bind(*p_8_m_axi_rready);
        p_8_m_axi_rready->set_sv_netview_offsetfromdp(8152936);
        sc_inst_9 = new pfm_dynamic_auto_cc_5(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.m04_couplers.auto_cc");
        sc_inst_9->xsim_set_dbg_index(2057);
        xsim_sc_channel<0, bool > *p_9_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_aclk.bind(*p_9_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_9_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_aresetn.bind(*p_9_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_9_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_9->s_axi_awaddr.bind(*p_9_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->s_axi_awprot.bind(*p_9_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_9_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_awvalid.bind(*p_9_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_9_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_awready.bind(*p_9_s_axi_awready);
        p_9_s_axi_awready->set_sv_netview_offsetfromdp(8188808);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->s_axi_wdata.bind(*p_9_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->s_axi_wstrb.bind(*p_9_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_9_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_wvalid.bind(*p_9_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_9_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_wready.bind(*p_9_s_axi_wready);
        p_9_s_axi_wready->set_sv_netview_offsetfromdp(8189032);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->s_axi_bresp.bind(*p_9_s_axi_bresp);
        p_9_s_axi_bresp->set_sv_netview_offsetfromdp(8189088);
        xsim_sc_channel<0, bool > *p_9_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_bvalid.bind(*p_9_s_axi_bvalid);
        p_9_s_axi_bvalid->set_sv_netview_offsetfromdp(8189144);
        xsim_sc_channel<0, bool > *p_9_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_bready.bind(*p_9_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_bready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_9_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_9->s_axi_araddr.bind(*p_9_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->s_axi_arprot.bind(*p_9_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_9_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_arvalid.bind(*p_9_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_9_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_arready.bind(*p_9_s_axi_arready);
        p_9_s_axi_arready->set_sv_netview_offsetfromdp(8189424);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->s_axi_rdata.bind(*p_9_s_axi_rdata);
        p_9_s_axi_rdata->set_sv_netview_offsetfromdp(8189480);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->s_axi_rresp.bind(*p_9_s_axi_rresp);
        p_9_s_axi_rresp->set_sv_netview_offsetfromdp(8189536);
        xsim_sc_channel<0, bool > *p_9_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_rvalid.bind(*p_9_s_axi_rvalid);
        p_9_s_axi_rvalid->set_sv_netview_offsetfromdp(8189592);
        xsim_sc_channel<0, bool > *p_9_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_rready.bind(*p_9_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_rready);
        xsim_sc_channel<0, bool > *p_9_m_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_9->m_axi_aclk.bind(*p_9_m_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_9_m_axi_aclk);
        xsim_sc_channel<0, bool > *p_9_m_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_9->m_axi_aresetn.bind(*p_9_m_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_9_m_axi_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_9_m_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_9->m_axi_awaddr.bind(*p_9_m_axi_awaddr);
        p_9_m_axi_awaddr->set_sv_netview_offsetfromdp(8189816);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->m_axi_awprot.bind(*p_9_m_axi_awprot);
        p_9_m_axi_awprot->set_sv_netview_offsetfromdp(8189872);
        xsim_sc_channel<0, bool > *p_9_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->m_axi_awvalid.bind(*p_9_m_axi_awvalid);
        p_9_m_axi_awvalid->set_sv_netview_offsetfromdp(8189928);
        xsim_sc_channel<0, bool > *p_9_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_9->m_axi_awready.bind(*p_9_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_9_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->m_axi_wdata.bind(*p_9_m_axi_wdata);
        p_9_m_axi_wdata->set_sv_netview_offsetfromdp(8190040);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->m_axi_wstrb.bind(*p_9_m_axi_wstrb);
        p_9_m_axi_wstrb->set_sv_netview_offsetfromdp(8190096);
        xsim_sc_channel<0, bool > *p_9_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->m_axi_wvalid.bind(*p_9_m_axi_wvalid);
        p_9_m_axi_wvalid->set_sv_netview_offsetfromdp(8190152);
        xsim_sc_channel<0, bool > *p_9_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_9->m_axi_wready.bind(*p_9_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_9_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->m_axi_bresp.bind(*p_9_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_9_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_9_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->m_axi_bvalid.bind(*p_9_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_9_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_9->m_axi_bready.bind(*p_9_m_axi_bready);
        p_9_m_axi_bready->set_sv_netview_offsetfromdp(8190376);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_9_m_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_9->m_axi_araddr.bind(*p_9_m_axi_araddr);
        p_9_m_axi_araddr->set_sv_netview_offsetfromdp(8190432);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->m_axi_arprot.bind(*p_9_m_axi_arprot);
        p_9_m_axi_arprot->set_sv_netview_offsetfromdp(8190488);
        xsim_sc_channel<0, bool > *p_9_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->m_axi_arvalid.bind(*p_9_m_axi_arvalid);
        p_9_m_axi_arvalid->set_sv_netview_offsetfromdp(8190544);
        xsim_sc_channel<0, bool > *p_9_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_9->m_axi_arready.bind(*p_9_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_9_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->m_axi_rdata.bind(*p_9_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_9_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->m_axi_rresp.bind(*p_9_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_9_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_9_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->m_axi_rvalid.bind(*p_9_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_9_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_9->m_axi_rready.bind(*p_9_m_axi_rready);
        p_9_m_axi_rready->set_sv_netview_offsetfromdp(8190824);
        sc_inst_10 = new pfm_dynamic_m04_regslice_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.m04_couplers.m04_regslice");
        sc_inst_10->xsim_set_dbg_index(2058);
        xsim_sc_channel<0, bool > *p_10_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_10->aclk.bind(*p_10_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_10_aclk);
        xsim_sc_channel<0, bool > *p_10_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_10->aresetn.bind(*p_10_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_10_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_10_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_10->s_axi_awaddr.bind(*p_10_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->s_axi_awprot.bind(*p_10_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_10_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_axi_awvalid.bind(*p_10_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_10_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_axi_awready.bind(*p_10_s_axi_awready);
        p_10_s_axi_awready->set_sv_netview_offsetfromdp(8191208);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_10_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_10->s_axi_wdata.bind(*p_10_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->s_axi_wstrb.bind(*p_10_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_10_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_axi_wvalid.bind(*p_10_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_10_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_axi_wready.bind(*p_10_s_axi_wready);
        p_10_s_axi_wready->set_sv_netview_offsetfromdp(8191432);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->s_axi_bresp.bind(*p_10_s_axi_bresp);
        p_10_s_axi_bresp->set_sv_netview_offsetfromdp(8191488);
        xsim_sc_channel<0, bool > *p_10_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_axi_bvalid.bind(*p_10_s_axi_bvalid);
        p_10_s_axi_bvalid->set_sv_netview_offsetfromdp(8191544);
        xsim_sc_channel<0, bool > *p_10_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_axi_bready.bind(*p_10_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_bready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_10_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_10->s_axi_araddr.bind(*p_10_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->s_axi_arprot.bind(*p_10_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_10_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_axi_arvalid.bind(*p_10_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_10_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_axi_arready.bind(*p_10_s_axi_arready);
        p_10_s_axi_arready->set_sv_netview_offsetfromdp(8191824);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_10_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_10->s_axi_rdata.bind(*p_10_s_axi_rdata);
        p_10_s_axi_rdata->set_sv_netview_offsetfromdp(8191880);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->s_axi_rresp.bind(*p_10_s_axi_rresp);
        p_10_s_axi_rresp->set_sv_netview_offsetfromdp(8191936);
        xsim_sc_channel<0, bool > *p_10_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_axi_rvalid.bind(*p_10_s_axi_rvalid);
        p_10_s_axi_rvalid->set_sv_netview_offsetfromdp(8191992);
        xsim_sc_channel<0, bool > *p_10_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_axi_rready.bind(*p_10_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_rready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_10_m_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_10->m_axi_awaddr.bind(*p_10_m_axi_awaddr);
        p_10_m_axi_awaddr->set_sv_netview_offsetfromdp(8192104);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->m_axi_awprot.bind(*p_10_m_axi_awprot);
        p_10_m_axi_awprot->set_sv_netview_offsetfromdp(8192160);
        xsim_sc_channel<0, bool > *p_10_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->m_axi_awvalid.bind(*p_10_m_axi_awvalid);
        p_10_m_axi_awvalid->set_sv_netview_offsetfromdp(8192216);
        xsim_sc_channel<0, bool > *p_10_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_10->m_axi_awready.bind(*p_10_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_10_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_10->m_axi_wdata.bind(*p_10_m_axi_wdata);
        p_10_m_axi_wdata->set_sv_netview_offsetfromdp(8192328);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->m_axi_wstrb.bind(*p_10_m_axi_wstrb);
        p_10_m_axi_wstrb->set_sv_netview_offsetfromdp(8192384);
        xsim_sc_channel<0, bool > *p_10_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->m_axi_wvalid.bind(*p_10_m_axi_wvalid);
        p_10_m_axi_wvalid->set_sv_netview_offsetfromdp(8192440);
        xsim_sc_channel<0, bool > *p_10_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_10->m_axi_wready.bind(*p_10_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->m_axi_bresp.bind(*p_10_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_10_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->m_axi_bvalid.bind(*p_10_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_10_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_10->m_axi_bready.bind(*p_10_m_axi_bready);
        p_10_m_axi_bready->set_sv_netview_offsetfromdp(8192664);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_10_m_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_10->m_axi_araddr.bind(*p_10_m_axi_araddr);
        p_10_m_axi_araddr->set_sv_netview_offsetfromdp(8192720);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->m_axi_arprot.bind(*p_10_m_axi_arprot);
        p_10_m_axi_arprot->set_sv_netview_offsetfromdp(8192776);
        xsim_sc_channel<0, bool > *p_10_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->m_axi_arvalid.bind(*p_10_m_axi_arvalid);
        p_10_m_axi_arvalid->set_sv_netview_offsetfromdp(8192832);
        xsim_sc_channel<0, bool > *p_10_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_10->m_axi_arready.bind(*p_10_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_10_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_10->m_axi_rdata.bind(*p_10_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->m_axi_rresp.bind(*p_10_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_10_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->m_axi_rvalid.bind(*p_10_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_10_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_10->m_axi_rready.bind(*p_10_m_axi_rready);
        p_10_m_axi_rready->set_sv_netview_offsetfromdp(8193112);
        sc_inst_11 = new pfm_dynamic_s00_regslice_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.s00_couplers.s00_regslice");
        sc_inst_11->xsim_set_dbg_index(2099);
        xsim_sc_channel<0, bool > *p_11_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_11->aclk.bind(*p_11_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_11_aclk);
        xsim_sc_channel<0, bool > *p_11_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_11->aresetn.bind(*p_11_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_11_aresetn);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_11_s_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_11->s_axi_awaddr.bind(*p_11_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_11_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_11->s_axi_awprot.bind(*p_11_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_11_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axi_awvalid.bind(*p_11_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_11_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axi_awready.bind(*p_11_s_axi_awready);
        p_11_s_axi_awready->set_sv_netview_offsetfromdp(8216752);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_11_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_11->s_axi_wdata.bind(*p_11_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->s_axi_wstrb.bind(*p_11_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_11_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axi_wvalid.bind(*p_11_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_11_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axi_wready.bind(*p_11_s_axi_wready);
        p_11_s_axi_wready->set_sv_netview_offsetfromdp(8216976);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->s_axi_bresp.bind(*p_11_s_axi_bresp);
        p_11_s_axi_bresp->set_sv_netview_offsetfromdp(8217032);
        xsim_sc_channel<0, bool > *p_11_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axi_bvalid.bind(*p_11_s_axi_bvalid);
        p_11_s_axi_bvalid->set_sv_netview_offsetfromdp(8217088);
        xsim_sc_channel<0, bool > *p_11_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axi_bready.bind(*p_11_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axi_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_11_s_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_11->s_axi_araddr.bind(*p_11_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_11_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_11->s_axi_arprot.bind(*p_11_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_11_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axi_arvalid.bind(*p_11_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_11_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axi_arready.bind(*p_11_s_axi_arready);
        p_11_s_axi_arready->set_sv_netview_offsetfromdp(8217368);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_11_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_11->s_axi_rdata.bind(*p_11_s_axi_rdata);
        p_11_s_axi_rdata->set_sv_netview_offsetfromdp(8217424);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->s_axi_rresp.bind(*p_11_s_axi_rresp);
        p_11_s_axi_rresp->set_sv_netview_offsetfromdp(8217480);
        xsim_sc_channel<0, bool > *p_11_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axi_rvalid.bind(*p_11_s_axi_rvalid);
        p_11_s_axi_rvalid->set_sv_netview_offsetfromdp(8217536);
        xsim_sc_channel<0, bool > *p_11_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axi_rready.bind(*p_11_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axi_rready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_11_m_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_11->m_axi_awaddr.bind(*p_11_m_axi_awaddr);
        p_11_m_axi_awaddr->set_sv_netview_offsetfromdp(8217648);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_11_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_11->m_axi_awprot.bind(*p_11_m_axi_awprot);
        p_11_m_axi_awprot->set_sv_netview_offsetfromdp(8217704);
        xsim_sc_channel<0, bool > *p_11_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->m_axi_awvalid.bind(*p_11_m_axi_awvalid);
        p_11_m_axi_awvalid->set_sv_netview_offsetfromdp(8217760);
        xsim_sc_channel<0, bool > *p_11_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_11->m_axi_awready.bind(*p_11_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_11_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_11_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_11->m_axi_wdata.bind(*p_11_m_axi_wdata);
        p_11_m_axi_wdata->set_sv_netview_offsetfromdp(8217872);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->m_axi_wstrb.bind(*p_11_m_axi_wstrb);
        p_11_m_axi_wstrb->set_sv_netview_offsetfromdp(8217928);
        xsim_sc_channel<0, bool > *p_11_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->m_axi_wvalid.bind(*p_11_m_axi_wvalid);
        p_11_m_axi_wvalid->set_sv_netview_offsetfromdp(8217984);
        xsim_sc_channel<0, bool > *p_11_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_11->m_axi_wready.bind(*p_11_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_11_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->m_axi_bresp.bind(*p_11_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_11_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_11_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->m_axi_bvalid.bind(*p_11_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_11_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_11_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_11->m_axi_bready.bind(*p_11_m_axi_bready);
        p_11_m_axi_bready->set_sv_netview_offsetfromdp(8218208);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_11_m_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_11->m_axi_araddr.bind(*p_11_m_axi_araddr);
        p_11_m_axi_araddr->set_sv_netview_offsetfromdp(8218264);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_11_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_11->m_axi_arprot.bind(*p_11_m_axi_arprot);
        p_11_m_axi_arprot->set_sv_netview_offsetfromdp(8218320);
        xsim_sc_channel<0, bool > *p_11_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->m_axi_arvalid.bind(*p_11_m_axi_arvalid);
        p_11_m_axi_arvalid->set_sv_netview_offsetfromdp(8218376);
        xsim_sc_channel<0, bool > *p_11_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_11->m_axi_arready.bind(*p_11_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_11_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_11_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_11->m_axi_rdata.bind(*p_11_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_11_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->m_axi_rresp.bind(*p_11_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_11_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_11_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->m_axi_rvalid.bind(*p_11_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_11_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_11_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_11->m_axi_rready.bind(*p_11_m_axi_rready);
        p_11_m_axi_rready->set_sv_netview_offsetfromdp(8218656);
        sc_inst_12 = new pfm_dynamic_xbar_4(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.xbar");
        sc_inst_12->xsim_set_dbg_index(774);
        xsim_sc_channel<0, bool > *p_12_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_12->aclk.bind(*p_12_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_12_aclk);
        xsim_sc_channel<0, bool > *p_12_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_12->aresetn.bind(*p_12_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_12_aresetn);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_12_s_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_12->s_axi_awaddr.bind(*p_12_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->s_axi_awprot.bind(*p_12_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_axi_awprot);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s_axi_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s_axi_awvalid.bind(*p_12_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_axi_awvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s_axi_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s_axi_awready.bind(*p_12_s_axi_awready);
        p_12_s_axi_awready->set_sv_netview_offsetfromdp(8219040);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_12_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_12->s_axi_wdata.bind(*p_12_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->s_axi_wstrb.bind(*p_12_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_axi_wstrb);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s_axi_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s_axi_wvalid.bind(*p_12_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_axi_wvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s_axi_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s_axi_wready.bind(*p_12_s_axi_wready);
        p_12_s_axi_wready->set_sv_netview_offsetfromdp(8219264);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->s_axi_bresp.bind(*p_12_s_axi_bresp);
        p_12_s_axi_bresp->set_sv_netview_offsetfromdp(8219320);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s_axi_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s_axi_bvalid.bind(*p_12_s_axi_bvalid);
        p_12_s_axi_bvalid->set_sv_netview_offsetfromdp(8219376);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s_axi_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s_axi_bready.bind(*p_12_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_axi_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_12_s_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_12->s_axi_araddr.bind(*p_12_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->s_axi_arprot.bind(*p_12_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_axi_arprot);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s_axi_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s_axi_arvalid.bind(*p_12_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_axi_arvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s_axi_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s_axi_arready.bind(*p_12_s_axi_arready);
        p_12_s_axi_arready->set_sv_netview_offsetfromdp(8219656);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_12_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_12->s_axi_rdata.bind(*p_12_s_axi_rdata);
        p_12_s_axi_rdata->set_sv_netview_offsetfromdp(8219712);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->s_axi_rresp.bind(*p_12_s_axi_rresp);
        p_12_s_axi_rresp->set_sv_netview_offsetfromdp(8219768);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s_axi_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s_axi_rvalid.bind(*p_12_s_axi_rvalid);
        p_12_s_axi_rvalid->set_sv_netview_offsetfromdp(8219824);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s_axi_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s_axi_rready.bind(*p_12_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_axi_rready);
        xsim_sc_channel<320, sc_dt::sc_bv<320> > *p_12_m_axi_awaddr = new xsim_sc_channel<320, sc_dt::sc_bv<320> >();
        sc_inst_12->m_axi_awaddr.bind(*p_12_m_axi_awaddr);
        p_12_m_axi_awaddr->set_sv_netview_offsetfromdp(8219936);
        xsim_sc_channel<15, sc_dt::sc_bv<15> > *p_12_m_axi_awprot = new xsim_sc_channel<15, sc_dt::sc_bv<15> >();
        sc_inst_12->m_axi_awprot.bind(*p_12_m_axi_awprot);
        p_12_m_axi_awprot->set_sv_netview_offsetfromdp(8219992);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_12_m_axi_awvalid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_12->m_axi_awvalid.bind(*p_12_m_axi_awvalid);
        p_12_m_axi_awvalid->set_sv_netview_offsetfromdp(8220048);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_12_m_axi_awready = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_12->m_axi_awready.bind(*p_12_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m_axi_awready);
        xsim_sc_channel<160, sc_dt::sc_bv<160> > *p_12_m_axi_wdata = new xsim_sc_channel<160, sc_dt::sc_bv<160> >();
        sc_inst_12->m_axi_wdata.bind(*p_12_m_axi_wdata);
        p_12_m_axi_wdata->set_sv_netview_offsetfromdp(8220160);
        xsim_sc_channel<20, sc_dt::sc_bv<20> > *p_12_m_axi_wstrb = new xsim_sc_channel<20, sc_dt::sc_bv<20> >();
        sc_inst_12->m_axi_wstrb.bind(*p_12_m_axi_wstrb);
        p_12_m_axi_wstrb->set_sv_netview_offsetfromdp(8220216);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_12_m_axi_wvalid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_12->m_axi_wvalid.bind(*p_12_m_axi_wvalid);
        p_12_m_axi_wvalid->set_sv_netview_offsetfromdp(8220272);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_12_m_axi_wready = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_12->m_axi_wready.bind(*p_12_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m_axi_wready);
        xsim_sc_channel<10, sc_dt::sc_bv<10> > *p_12_m_axi_bresp = new xsim_sc_channel<10, sc_dt::sc_bv<10> >();
        sc_inst_12->m_axi_bresp.bind(*p_12_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m_axi_bresp);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_12_m_axi_bvalid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_12->m_axi_bvalid.bind(*p_12_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m_axi_bvalid);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_12_m_axi_bready = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_12->m_axi_bready.bind(*p_12_m_axi_bready);
        p_12_m_axi_bready->set_sv_netview_offsetfromdp(8220496);
        xsim_sc_channel<320, sc_dt::sc_bv<320> > *p_12_m_axi_araddr = new xsim_sc_channel<320, sc_dt::sc_bv<320> >();
        sc_inst_12->m_axi_araddr.bind(*p_12_m_axi_araddr);
        p_12_m_axi_araddr->set_sv_netview_offsetfromdp(8220552);
        xsim_sc_channel<15, sc_dt::sc_bv<15> > *p_12_m_axi_arprot = new xsim_sc_channel<15, sc_dt::sc_bv<15> >();
        sc_inst_12->m_axi_arprot.bind(*p_12_m_axi_arprot);
        p_12_m_axi_arprot->set_sv_netview_offsetfromdp(8220608);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_12_m_axi_arvalid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_12->m_axi_arvalid.bind(*p_12_m_axi_arvalid);
        p_12_m_axi_arvalid->set_sv_netview_offsetfromdp(8220664);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_12_m_axi_arready = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_12->m_axi_arready.bind(*p_12_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m_axi_arready);
        xsim_sc_channel<160, sc_dt::sc_bv<160> > *p_12_m_axi_rdata = new xsim_sc_channel<160, sc_dt::sc_bv<160> >();
        sc_inst_12->m_axi_rdata.bind(*p_12_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m_axi_rdata);
        xsim_sc_channel<10, sc_dt::sc_bv<10> > *p_12_m_axi_rresp = new xsim_sc_channel<10, sc_dt::sc_bv<10> >();
        sc_inst_12->m_axi_rresp.bind(*p_12_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m_axi_rresp);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_12_m_axi_rvalid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_12->m_axi_rvalid.bind(*p_12_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m_axi_rvalid);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_12_m_axi_rready = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_12->m_axi_rready.bind(*p_12_m_axi_rready);
        p_12_m_axi_rready->set_sv_netview_offsetfromdp(8220944);
        sc_inst_13 = new pfm_dynamic_dpa_hub_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_hub");
        sc_inst_13->xsim_set_dbg_index(398);
        xsim_sc_channel<0, bool > *p_13_s_aximm_clk = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_aximm_clk.bind(*p_13_s_aximm_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_aximm_clk);
        xsim_sc_channel<0, bool > *p_13_s_aximm_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_aximm_aresetn.bind(*p_13_s_aximm_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_aximm_aresetn);
        xsim_sc_channel<0, bool > *p_13_trace_clk = new xsim_sc_channel<0, bool >();
        sc_inst_13->trace_clk.bind(*p_13_trace_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_13_trace_clk);
        xsim_sc_channel<0, bool > *p_13_trace_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_13->trace_aresetn.bind(*p_13_trace_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_13_trace_aresetn);
        xsim_sc_channel<0, bool > *p_13_axilite_clk = new xsim_sc_channel<0, bool >();
        sc_inst_13->axilite_clk.bind(*p_13_axilite_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_13_axilite_clk);
        xsim_sc_channel<0, bool > *p_13_axilite_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_13->axilite_aresetn.bind(*p_13_axilite_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_13_axilite_aresetn);
        xsim_sc_channel<0, bool > *p_13_trace_tready0 = new xsim_sc_channel<0, bool >();
        sc_inst_13->trace_tready0.bind(*p_13_trace_tready0);
        p_13_trace_tready0->set_sv_netview_offsetfromdp(8221384);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_13_trace_tdata0 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_13->trace_tdata0.bind(*p_13_trace_tdata0);
        (*_glb_hdl_sc_channel_map).push_back(p_13_trace_tdata0);
        xsim_sc_channel<0, bool > *p_13_trace_tlast0 = new xsim_sc_channel<0, bool >();
        sc_inst_13->trace_tlast0.bind(*p_13_trace_tlast0);
        (*_glb_hdl_sc_channel_map).push_back(p_13_trace_tlast0);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_trace_tid0 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->trace_tid0.bind(*p_13_trace_tid0);
        (*_glb_hdl_sc_channel_map).push_back(p_13_trace_tid0);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_trace_tdest0 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->trace_tdest0.bind(*p_13_trace_tdest0);
        (*_glb_hdl_sc_channel_map).push_back(p_13_trace_tdest0);
        xsim_sc_channel<0, bool > *p_13_trace_tvalid0 = new xsim_sc_channel<0, bool >();
        sc_inst_13->trace_tvalid0.bind(*p_13_trace_tvalid0);
        (*_glb_hdl_sc_channel_map).push_back(p_13_trace_tvalid0);
        xsim_sc_channel<0, bool > *p_13_trace_tready1 = new xsim_sc_channel<0, bool >();
        sc_inst_13->trace_tready1.bind(*p_13_trace_tready1);
        p_13_trace_tready1->set_sv_netview_offsetfromdp(8221720);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_13_trace_tdata1 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_13->trace_tdata1.bind(*p_13_trace_tdata1);
        p_13_trace_tdata1->set_sv_netview_offsetfromdp(8221776);
        xsim_sc_channel<0, bool > *p_13_trace_tlast1 = new xsim_sc_channel<0, bool >();
        sc_inst_13->trace_tlast1.bind(*p_13_trace_tlast1);
        (*_glb_hdl_sc_channel_map).push_back(p_13_trace_tlast1);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_trace_tid1 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->trace_tid1.bind(*p_13_trace_tid1);
        (*_glb_hdl_sc_channel_map).push_back(p_13_trace_tid1);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_trace_tdest1 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->trace_tdest1.bind(*p_13_trace_tdest1);
        (*_glb_hdl_sc_channel_map).push_back(p_13_trace_tdest1);
        xsim_sc_channel<0, bool > *p_13_trace_tvalid1 = new xsim_sc_channel<0, bool >();
        sc_inst_13->trace_tvalid1.bind(*p_13_trace_tvalid1);
        (*_glb_hdl_sc_channel_map).push_back(p_13_trace_tvalid1);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_13_trace_tdata2 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_13->trace_tdata2.bind(*p_13_trace_tdata2);
        (*_glb_hdl_sc_channel_map).push_back(p_13_trace_tdata2);
        xsim_sc_channel<0, bool > *p_13_trace_tready2 = new xsim_sc_channel<0, bool >();
        sc_inst_13->trace_tready2.bind(*p_13_trace_tready2);
        p_13_trace_tready2->set_sv_netview_offsetfromdp(8222112);
        xsim_sc_channel<0, bool > *p_13_trace_tlast2 = new xsim_sc_channel<0, bool >();
        sc_inst_13->trace_tlast2.bind(*p_13_trace_tlast2);
        (*_glb_hdl_sc_channel_map).push_back(p_13_trace_tlast2);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_trace_tid2 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->trace_tid2.bind(*p_13_trace_tid2);
        (*_glb_hdl_sc_channel_map).push_back(p_13_trace_tid2);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_trace_tdest2 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->trace_tdest2.bind(*p_13_trace_tdest2);
        (*_glb_hdl_sc_channel_map).push_back(p_13_trace_tdest2);
        xsim_sc_channel<0, bool > *p_13_trace_tvalid2 = new xsim_sc_channel<0, bool >();
        sc_inst_13->trace_tvalid2.bind(*p_13_trace_tvalid2);
        (*_glb_hdl_sc_channel_map).push_back(p_13_trace_tvalid2);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_13_trace_tdata3 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_13->trace_tdata3.bind(*p_13_trace_tdata3);
        (*_glb_hdl_sc_channel_map).push_back(p_13_trace_tdata3);
        xsim_sc_channel<0, bool > *p_13_trace_tready3 = new xsim_sc_channel<0, bool >();
        sc_inst_13->trace_tready3.bind(*p_13_trace_tready3);
        p_13_trace_tready3->set_sv_netview_offsetfromdp(8222448);
        xsim_sc_channel<0, bool > *p_13_trace_tlast3 = new xsim_sc_channel<0, bool >();
        sc_inst_13->trace_tlast3.bind(*p_13_trace_tlast3);
        (*_glb_hdl_sc_channel_map).push_back(p_13_trace_tlast3);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_trace_tid3 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->trace_tid3.bind(*p_13_trace_tid3);
        (*_glb_hdl_sc_channel_map).push_back(p_13_trace_tid3);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_trace_tdest3 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->trace_tdest3.bind(*p_13_trace_tdest3);
        (*_glb_hdl_sc_channel_map).push_back(p_13_trace_tdest3);
        xsim_sc_channel<0, bool > *p_13_trace_tvalid3 = new xsim_sc_channel<0, bool >();
        sc_inst_13->trace_tvalid3.bind(*p_13_trace_tvalid3);
        (*_glb_hdl_sc_channel_map).push_back(p_13_trace_tvalid3);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_13_trace_tdata4 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_13->trace_tdata4.bind(*p_13_trace_tdata4);
        (*_glb_hdl_sc_channel_map).push_back(p_13_trace_tdata4);
        xsim_sc_channel<0, bool > *p_13_trace_tready4 = new xsim_sc_channel<0, bool >();
        sc_inst_13->trace_tready4.bind(*p_13_trace_tready4);
        p_13_trace_tready4->set_sv_netview_offsetfromdp(8222784);
        xsim_sc_channel<0, bool > *p_13_trace_tlast4 = new xsim_sc_channel<0, bool >();
        sc_inst_13->trace_tlast4.bind(*p_13_trace_tlast4);
        (*_glb_hdl_sc_channel_map).push_back(p_13_trace_tlast4);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_trace_tid4 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->trace_tid4.bind(*p_13_trace_tid4);
        (*_glb_hdl_sc_channel_map).push_back(p_13_trace_tid4);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_trace_tdest4 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->trace_tdest4.bind(*p_13_trace_tdest4);
        (*_glb_hdl_sc_channel_map).push_back(p_13_trace_tdest4);
        xsim_sc_channel<0, bool > *p_13_trace_tvalid4 = new xsim_sc_channel<0, bool >();
        sc_inst_13->trace_tvalid4.bind(*p_13_trace_tvalid4);
        (*_glb_hdl_sc_channel_map).push_back(p_13_trace_tvalid4);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->s_axi_awaddr.bind(*p_13_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_awaddr);
        xsim_sc_channel<0, bool > *p_13_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axi_awvalid.bind(*p_13_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_13_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axi_awready.bind(*p_13_s_axi_awready);
        p_13_s_axi_awready->set_sv_netview_offsetfromdp(8223176);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_13_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_13->s_axi_wdata.bind(*p_13_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->s_axi_wstrb.bind(*p_13_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_13_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axi_wvalid.bind(*p_13_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_13_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axi_wready.bind(*p_13_s_axi_wready);
        p_13_s_axi_wready->set_sv_netview_offsetfromdp(8223400);
        xsim_sc_channel<0, bool > *p_13_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axi_bvalid.bind(*p_13_s_axi_bvalid);
        p_13_s_axi_bvalid->set_sv_netview_offsetfromdp(8223456);
        xsim_sc_channel<0, bool > *p_13_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axi_bready.bind(*p_13_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->s_axi_bresp.bind(*p_13_s_axi_bresp);
        p_13_s_axi_bresp->set_sv_netview_offsetfromdp(8223568);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->s_axi_araddr.bind(*p_13_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_araddr);
        xsim_sc_channel<0, bool > *p_13_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axi_arvalid.bind(*p_13_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_13_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axi_arready.bind(*p_13_s_axi_arready);
        p_13_s_axi_arready->set_sv_netview_offsetfromdp(8223736);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_13_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_13->s_axi_rdata.bind(*p_13_s_axi_rdata);
        p_13_s_axi_rdata->set_sv_netview_offsetfromdp(8223792);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->s_axi_rresp.bind(*p_13_s_axi_rresp);
        p_13_s_axi_rresp->set_sv_netview_offsetfromdp(8223848);
        xsim_sc_channel<0, bool > *p_13_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axi_rvalid.bind(*p_13_s_axi_rvalid);
        p_13_s_axi_rvalid->set_sv_netview_offsetfromdp(8223904);
        xsim_sc_channel<0, bool > *p_13_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axi_rready.bind(*p_13_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_rready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_s_axihub_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->s_axihub_awaddr.bind(*p_13_s_axihub_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axihub_awaddr);
        xsim_sc_channel<0, bool > *p_13_s_axihub_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axihub_awvalid.bind(*p_13_s_axihub_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axihub_awvalid);
        xsim_sc_channel<0, bool > *p_13_s_axihub_awready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axihub_awready.bind(*p_13_s_axihub_awready);
        p_13_s_axihub_awready->set_sv_netview_offsetfromdp(8224128);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_13_s_axihub_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_13->s_axihub_wdata.bind(*p_13_s_axihub_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axihub_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_s_axihub_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->s_axihub_wstrb.bind(*p_13_s_axihub_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axihub_wstrb);
        xsim_sc_channel<0, bool > *p_13_s_axihub_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axihub_wvalid.bind(*p_13_s_axihub_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axihub_wvalid);
        xsim_sc_channel<0, bool > *p_13_s_axihub_wready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axihub_wready.bind(*p_13_s_axihub_wready);
        p_13_s_axihub_wready->set_sv_netview_offsetfromdp(8224352);
        xsim_sc_channel<0, bool > *p_13_s_axihub_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axihub_bvalid.bind(*p_13_s_axihub_bvalid);
        p_13_s_axihub_bvalid->set_sv_netview_offsetfromdp(8224408);
        xsim_sc_channel<0, bool > *p_13_s_axihub_bready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axihub_bready.bind(*p_13_s_axihub_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axihub_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_s_axihub_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->s_axihub_bresp.bind(*p_13_s_axihub_bresp);
        p_13_s_axihub_bresp->set_sv_netview_offsetfromdp(8224520);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_s_axihub_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->s_axihub_araddr.bind(*p_13_s_axihub_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axihub_araddr);
        xsim_sc_channel<0, bool > *p_13_s_axihub_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axihub_arvalid.bind(*p_13_s_axihub_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axihub_arvalid);
        xsim_sc_channel<0, bool > *p_13_s_axihub_arready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axihub_arready.bind(*p_13_s_axihub_arready);
        p_13_s_axihub_arready->set_sv_netview_offsetfromdp(8224688);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_13_s_axihub_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_13->s_axihub_rdata.bind(*p_13_s_axihub_rdata);
        p_13_s_axihub_rdata->set_sv_netview_offsetfromdp(8224744);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_s_axihub_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->s_axihub_rresp.bind(*p_13_s_axihub_rresp);
        p_13_s_axihub_rresp->set_sv_netview_offsetfromdp(8224800);
        xsim_sc_channel<0, bool > *p_13_s_axihub_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axihub_rvalid.bind(*p_13_s_axihub_rvalid);
        p_13_s_axihub_rvalid->set_sv_netview_offsetfromdp(8224856);
        xsim_sc_channel<0, bool > *p_13_s_axihub_rready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axihub_rready.bind(*p_13_s_axihub_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axihub_rready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_13_s_aximm_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_13->s_aximm_awaddr.bind(*p_13_s_aximm_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_aximm_awaddr);
        xsim_sc_channel<0, bool > *p_13_s_aximm_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_aximm_awvalid.bind(*p_13_s_aximm_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_aximm_awvalid);
        xsim_sc_channel<0, bool > *p_13_s_aximm_awready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_aximm_awready.bind(*p_13_s_aximm_awready);
        p_13_s_aximm_awready->set_sv_netview_offsetfromdp(8225080);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_s_aximm_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->s_aximm_awlen.bind(*p_13_s_aximm_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_aximm_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_s_aximm_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->s_aximm_awsize.bind(*p_13_s_aximm_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_aximm_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_s_aximm_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->s_aximm_awburst.bind(*p_13_s_aximm_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_aximm_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_s_aximm_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->s_aximm_awid.bind(*p_13_s_aximm_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_aximm_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_13_s_aximm_wdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_13->s_aximm_wdata.bind(*p_13_s_aximm_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_aximm_wdata);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_s_aximm_wstrb = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->s_aximm_wstrb.bind(*p_13_s_aximm_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_aximm_wstrb);
        xsim_sc_channel<0, bool > *p_13_s_aximm_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_aximm_wvalid.bind(*p_13_s_aximm_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_aximm_wvalid);
        xsim_sc_channel<0, bool > *p_13_s_aximm_wready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_aximm_wready.bind(*p_13_s_aximm_wready);
        p_13_s_aximm_wready->set_sv_netview_offsetfromdp(8225528);
        xsim_sc_channel<0, bool > *p_13_s_aximm_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_aximm_bvalid.bind(*p_13_s_aximm_bvalid);
        p_13_s_aximm_bvalid->set_sv_netview_offsetfromdp(8225584);
        xsim_sc_channel<0, bool > *p_13_s_aximm_bready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_aximm_bready.bind(*p_13_s_aximm_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_aximm_bready);
        xsim_sc_channel<0, bool > *p_13_s_aximm_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_aximm_wlast.bind(*p_13_s_aximm_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_aximm_wlast);
        xsim_sc_channel<0, bool > *p_13_s_aximm_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_aximm_rlast.bind(*p_13_s_aximm_rlast);
        p_13_s_aximm_rlast->set_sv_netview_offsetfromdp(8225752);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_s_aximm_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->s_aximm_bresp.bind(*p_13_s_aximm_bresp);
        p_13_s_aximm_bresp->set_sv_netview_offsetfromdp(8225808);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_s_aximm_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->s_aximm_bid.bind(*p_13_s_aximm_bid);
        p_13_s_aximm_bid->set_sv_netview_offsetfromdp(8225864);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_13_s_aximm_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_13->s_aximm_araddr.bind(*p_13_s_aximm_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_aximm_araddr);
        xsim_sc_channel<0, bool > *p_13_s_aximm_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_aximm_arvalid.bind(*p_13_s_aximm_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_aximm_arvalid);
        xsim_sc_channel<0, bool > *p_13_s_aximm_arready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_aximm_arready.bind(*p_13_s_aximm_arready);
        p_13_s_aximm_arready->set_sv_netview_offsetfromdp(8226032);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_s_aximm_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->s_aximm_arlen.bind(*p_13_s_aximm_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_aximm_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_s_aximm_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->s_aximm_arsize.bind(*p_13_s_aximm_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_aximm_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_s_aximm_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->s_aximm_arburst.bind(*p_13_s_aximm_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_aximm_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_s_aximm_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->s_aximm_arid.bind(*p_13_s_aximm_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_aximm_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_13_s_aximm_rdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_13->s_aximm_rdata.bind(*p_13_s_aximm_rdata);
        p_13_s_aximm_rdata->set_sv_netview_offsetfromdp(8226312);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_s_aximm_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->s_aximm_rid.bind(*p_13_s_aximm_rid);
        p_13_s_aximm_rid->set_sv_netview_offsetfromdp(8226368);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_s_aximm_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->s_aximm_rresp.bind(*p_13_s_aximm_rresp);
        p_13_s_aximm_rresp->set_sv_netview_offsetfromdp(8226424);
        xsim_sc_channel<0, bool > *p_13_s_aximm_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_aximm_rvalid.bind(*p_13_s_aximm_rvalid);
        p_13_s_aximm_rvalid->set_sv_netview_offsetfromdp(8226480);
        xsim_sc_channel<0, bool > *p_13_s_aximm_rready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_aximm_rready.bind(*p_13_s_aximm_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_aximm_rready);
        sc_inst_14 = new pfm_dynamic_dpa_mon0_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_mon0");
        sc_inst_14->xsim_set_dbg_index(399);
        xsim_sc_channel<0, bool > *p_14_mon_clk = new xsim_sc_channel<0, bool >();
        sc_inst_14->mon_clk.bind(*p_14_mon_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_14_mon_clk);
        xsim_sc_channel<0, bool > *p_14_mon_resetn = new xsim_sc_channel<0, bool >();
        sc_inst_14->mon_resetn.bind(*p_14_mon_resetn);
        (*_glb_hdl_sc_channel_map).push_back(p_14_mon_resetn);
        xsim_sc_channel<0, bool > *p_14_trace_clk = new xsim_sc_channel<0, bool >();
        sc_inst_14->trace_clk.bind(*p_14_trace_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_14_trace_clk);
        xsim_sc_channel<0, bool > *p_14_trace_rst = new xsim_sc_channel<0, bool >();
        sc_inst_14->trace_rst.bind(*p_14_trace_rst);
        (*_glb_hdl_sc_channel_map).push_back(p_14_trace_rst);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_14_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_14->s_axi_awaddr.bind(*p_14_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->s_axi_awprot.bind(*p_14_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_14_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->s_axi_awvalid.bind(*p_14_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_14_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_14->s_axi_awready.bind(*p_14_s_axi_awready);
        p_14_s_axi_awready->set_sv_netview_offsetfromdp(8227032);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_14_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_14->s_axi_wdata.bind(*p_14_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s_axi_wstrb.bind(*p_14_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_14_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->s_axi_wvalid.bind(*p_14_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_14_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_14->s_axi_wready.bind(*p_14_s_axi_wready);
        p_14_s_axi_wready->set_sv_netview_offsetfromdp(8227256);
        xsim_sc_channel<0, bool > *p_14_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->s_axi_bvalid.bind(*p_14_s_axi_bvalid);
        p_14_s_axi_bvalid->set_sv_netview_offsetfromdp(8227312);
        xsim_sc_channel<0, bool > *p_14_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_14->s_axi_bready.bind(*p_14_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->s_axi_bresp.bind(*p_14_s_axi_bresp);
        p_14_s_axi_bresp->set_sv_netview_offsetfromdp(8227424);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_14_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_14->s_axi_araddr.bind(*p_14_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->s_axi_arprot.bind(*p_14_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_14_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->s_axi_arvalid.bind(*p_14_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_14_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_14->s_axi_arready.bind(*p_14_s_axi_arready);
        p_14_s_axi_arready->set_sv_netview_offsetfromdp(8227648);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_14_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_14->s_axi_rdata.bind(*p_14_s_axi_rdata);
        p_14_s_axi_rdata->set_sv_netview_offsetfromdp(8227704);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->s_axi_rresp.bind(*p_14_s_axi_rresp);
        p_14_s_axi_rresp->set_sv_netview_offsetfromdp(8227760);
        xsim_sc_channel<0, bool > *p_14_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->s_axi_rvalid.bind(*p_14_s_axi_rvalid);
        p_14_s_axi_rvalid->set_sv_netview_offsetfromdp(8227816);
        xsim_sc_channel<0, bool > *p_14_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_14->s_axi_rready.bind(*p_14_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_rready);
        xsim_sc_channel<0, bool > *p_14_mon_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_14->mon_AWVALID.bind(*p_14_mon_AWVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_14_mon_AWVALID);
        xsim_sc_channel<0, bool > *p_14_mon_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_14->mon_AWREADY.bind(*p_14_mon_AWREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_14_mon_AWREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_14_mon_AWADDR = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_14->mon_AWADDR.bind(*p_14_mon_AWADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_14_mon_AWADDR);
        xsim_sc_channel<0, bool > *p_14_mon_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_14->mon_WVALID.bind(*p_14_mon_WVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_14_mon_WVALID);
        xsim_sc_channel<0, bool > *p_14_mon_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_14->mon_WREADY.bind(*p_14_mon_WREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_14_mon_WREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_14_mon_WDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_14->mon_WDATA.bind(*p_14_mon_WDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_14_mon_WDATA);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_mon_WSTRB = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->mon_WSTRB.bind(*p_14_mon_WSTRB);
        (*_glb_hdl_sc_channel_map).push_back(p_14_mon_WSTRB);
        xsim_sc_channel<0, bool > *p_14_mon_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_14->mon_ARVALID.bind(*p_14_mon_ARVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_14_mon_ARVALID);
        xsim_sc_channel<0, bool > *p_14_mon_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_14->mon_ARREADY.bind(*p_14_mon_ARREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_14_mon_ARREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_14_mon_ARADDR = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_14->mon_ARADDR.bind(*p_14_mon_ARADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_14_mon_ARADDR);
        xsim_sc_channel<0, bool > *p_14_mon_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_14->mon_RVALID.bind(*p_14_mon_RVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_14_mon_RVALID);
        xsim_sc_channel<0, bool > *p_14_mon_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_14->mon_RREADY.bind(*p_14_mon_RREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_14_mon_RREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_14_mon_RDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_14->mon_RDATA.bind(*p_14_mon_RDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_14_mon_RDATA);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_mon_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->mon_RRESP.bind(*p_14_mon_RRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_14_mon_RRESP);
        xsim_sc_channel<0, bool > *p_14_mon_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_14->mon_BVALID.bind(*p_14_mon_BVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_14_mon_BVALID);
        xsim_sc_channel<0, bool > *p_14_mon_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_14->mon_BREADY.bind(*p_14_mon_BREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_14_mon_BREADY);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_mon_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->mon_BRESP.bind(*p_14_mon_BRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_14_mon_BRESP);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m_axis_tready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m_axis_tready.bind(*p_14_m_axis_tready);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m_axis_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_14_m_axis_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_14->m_axis_tdata.bind(*p_14_m_axis_tdata);
        p_14_m_axis_tdata->set_sv_netview_offsetfromdp(8228936);
        xsim_sc_channel<0, bool > *p_14_m_axis_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_14->m_axis_tlast.bind(*p_14_m_axis_tlast);
        p_14_m_axis_tlast->set_sv_netview_offsetfromdp(8228992);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_14_m_axis_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_14->m_axis_tid.bind(*p_14_m_axis_tid);
        p_14_m_axis_tid->set_sv_netview_offsetfromdp(8229048);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_14_m_axis_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_14->m_axis_tdest.bind(*p_14_m_axis_tdest);
        p_14_m_axis_tdest->set_sv_netview_offsetfromdp(8229104);
        xsim_sc_channel<0, bool > *p_14_m_axis_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->m_axis_tvalid.bind(*p_14_m_axis_tvalid);
        p_14_m_axis_tvalid->set_sv_netview_offsetfromdp(8229160);
        xsim_sc_channel<0, bool > *p_14_ap_continue = new xsim_sc_channel<0, bool >();
        sc_inst_14->ap_continue.bind(*p_14_ap_continue);
        (*_glb_hdl_sc_channel_map).push_back(p_14_ap_continue);
        xsim_sc_channel<0, bool > *p_14_ap_ready = new xsim_sc_channel<0, bool >();
        sc_inst_14->ap_ready.bind(*p_14_ap_ready);
        (*_glb_hdl_sc_channel_map).push_back(p_14_ap_ready);
        xsim_sc_channel<0, bool > *p_14_ap_start = new xsim_sc_channel<0, bool >();
        sc_inst_14->ap_start.bind(*p_14_ap_start);
        (*_glb_hdl_sc_channel_map).push_back(p_14_ap_start);
        xsim_sc_channel<0, bool > *p_14_ap_idle = new xsim_sc_channel<0, bool >();
        sc_inst_14->ap_idle.bind(*p_14_ap_idle);
        (*_glb_hdl_sc_channel_map).push_back(p_14_ap_idle);
        xsim_sc_channel<0, bool > *p_14_ap_done = new xsim_sc_channel<0, bool >();
        sc_inst_14->ap_done.bind(*p_14_ap_done);
        (*_glb_hdl_sc_channel_map).push_back(p_14_ap_done);
        sc_inst_15 = new pfm_dynamic_dpa_mon1_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_mon1");
        sc_inst_15->xsim_set_dbg_index(400);
        xsim_sc_channel<0, bool > *p_15_mon_clk = new xsim_sc_channel<0, bool >();
        sc_inst_15->mon_clk.bind(*p_15_mon_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_15_mon_clk);
        xsim_sc_channel<0, bool > *p_15_mon_resetn = new xsim_sc_channel<0, bool >();
        sc_inst_15->mon_resetn.bind(*p_15_mon_resetn);
        (*_glb_hdl_sc_channel_map).push_back(p_15_mon_resetn);
        xsim_sc_channel<0, bool > *p_15_trace_clk = new xsim_sc_channel<0, bool >();
        sc_inst_15->trace_clk.bind(*p_15_trace_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_15_trace_clk);
        xsim_sc_channel<0, bool > *p_15_trace_rst = new xsim_sc_channel<0, bool >();
        sc_inst_15->trace_rst.bind(*p_15_trace_rst);
        (*_glb_hdl_sc_channel_map).push_back(p_15_trace_rst);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->s_axi_awaddr.bind(*p_15_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_awaddr);
        xsim_sc_channel<0, bool > *p_15_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_awvalid.bind(*p_15_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_15_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_awready.bind(*p_15_s_axi_awready);
        p_15_s_axi_awready->set_sv_netview_offsetfromdp(8229880);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_15_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_15->s_axi_wdata.bind(*p_15_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s_axi_wstrb.bind(*p_15_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_15_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_wvalid.bind(*p_15_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_15_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_wready.bind(*p_15_s_axi_wready);
        p_15_s_axi_wready->set_sv_netview_offsetfromdp(8230104);
        xsim_sc_channel<0, bool > *p_15_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_bvalid.bind(*p_15_s_axi_bvalid);
        p_15_s_axi_bvalid->set_sv_netview_offsetfromdp(8230160);
        xsim_sc_channel<0, bool > *p_15_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_bready.bind(*p_15_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s_axi_bresp.bind(*p_15_s_axi_bresp);
        p_15_s_axi_bresp->set_sv_netview_offsetfromdp(8230272);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->s_axi_araddr.bind(*p_15_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_araddr);
        xsim_sc_channel<0, bool > *p_15_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_arvalid.bind(*p_15_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_15_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_arready.bind(*p_15_s_axi_arready);
        p_15_s_axi_arready->set_sv_netview_offsetfromdp(8230440);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_15_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_15->s_axi_rdata.bind(*p_15_s_axi_rdata);
        p_15_s_axi_rdata->set_sv_netview_offsetfromdp(8230496);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s_axi_rresp.bind(*p_15_s_axi_rresp);
        p_15_s_axi_rresp->set_sv_netview_offsetfromdp(8230552);
        xsim_sc_channel<0, bool > *p_15_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_rvalid.bind(*p_15_s_axi_rvalid);
        p_15_s_axi_rvalid->set_sv_netview_offsetfromdp(8230608);
        xsim_sc_channel<0, bool > *p_15_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_rready.bind(*p_15_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_rready);
        xsim_sc_channel<0, bool > *p_15_mon_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_15->mon_AWVALID.bind(*p_15_mon_AWVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_15_mon_AWVALID);
        xsim_sc_channel<0, bool > *p_15_mon_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_15->mon_AWREADY.bind(*p_15_mon_AWREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_15_mon_AWREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_mon_AWADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->mon_AWADDR.bind(*p_15_mon_AWADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_15_mon_AWADDR);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_mon_AWID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->mon_AWID.bind(*p_15_mon_AWID);
        (*_glb_hdl_sc_channel_map).push_back(p_15_mon_AWID);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_mon_AWLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->mon_AWLEN.bind(*p_15_mon_AWLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_15_mon_AWLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_mon_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->mon_AWSIZE.bind(*p_15_mon_AWSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_15_mon_AWSIZE);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_mon_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->mon_AWBURST.bind(*p_15_mon_AWBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_15_mon_AWBURST);
        xsim_sc_channel<0, bool > *p_15_mon_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_15->mon_WVALID.bind(*p_15_mon_WVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_15_mon_WVALID);
        xsim_sc_channel<0, bool > *p_15_mon_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_15->mon_WREADY.bind(*p_15_mon_WREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_15_mon_WREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_15_mon_WDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_15->mon_WDATA.bind(*p_15_mon_WDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_15_mon_WDATA);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_mon_WSTRB = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->mon_WSTRB.bind(*p_15_mon_WSTRB);
        (*_glb_hdl_sc_channel_map).push_back(p_15_mon_WSTRB);
        xsim_sc_channel<0, bool > *p_15_mon_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_15->mon_WLAST.bind(*p_15_mon_WLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_15_mon_WLAST);
        xsim_sc_channel<0, bool > *p_15_mon_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_15->mon_ARVALID.bind(*p_15_mon_ARVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_15_mon_ARVALID);
        xsim_sc_channel<0, bool > *p_15_mon_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_15->mon_ARREADY.bind(*p_15_mon_ARREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_15_mon_ARREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_mon_ARADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->mon_ARADDR.bind(*p_15_mon_ARADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_15_mon_ARADDR);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_mon_ARID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->mon_ARID.bind(*p_15_mon_ARID);
        (*_glb_hdl_sc_channel_map).push_back(p_15_mon_ARID);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_mon_ARLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->mon_ARLEN.bind(*p_15_mon_ARLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_15_mon_ARLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_mon_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->mon_ARSIZE.bind(*p_15_mon_ARSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_15_mon_ARSIZE);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_mon_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->mon_ARBURST.bind(*p_15_mon_ARBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_15_mon_ARBURST);
        xsim_sc_channel<0, bool > *p_15_mon_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_15->mon_RVALID.bind(*p_15_mon_RVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_15_mon_RVALID);
        xsim_sc_channel<0, bool > *p_15_mon_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_15->mon_RREADY.bind(*p_15_mon_RREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_15_mon_RREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_15_mon_RDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_15->mon_RDATA.bind(*p_15_mon_RDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_15_mon_RDATA);
        xsim_sc_channel<0, bool > *p_15_mon_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_15->mon_RLAST.bind(*p_15_mon_RLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_15_mon_RLAST);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_mon_RID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->mon_RID.bind(*p_15_mon_RID);
        (*_glb_hdl_sc_channel_map).push_back(p_15_mon_RID);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_mon_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->mon_RRESP.bind(*p_15_mon_RRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_15_mon_RRESP);
        xsim_sc_channel<0, bool > *p_15_mon_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_15->mon_BVALID.bind(*p_15_mon_BVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_15_mon_BVALID);
        xsim_sc_channel<0, bool > *p_15_mon_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_15->mon_BREADY.bind(*p_15_mon_BREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_15_mon_BREADY);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_mon_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->mon_BRESP.bind(*p_15_mon_BRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_15_mon_BRESP);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_mon_BID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->mon_BID.bind(*p_15_mon_BID);
        (*_glb_hdl_sc_channel_map).push_back(p_15_mon_BID);
        xsim_sc_channel<0, bool > *p_15_m_axis_rd_tready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m_axis_rd_tready.bind(*p_15_m_axis_rd_tready);
        (*_glb_hdl_sc_channel_map).push_back(p_15_m_axis_rd_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_m_axis_rd_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->m_axis_rd_tdata.bind(*p_15_m_axis_rd_tdata);
        p_15_m_axis_rd_tdata->set_sv_netview_offsetfromdp(8232400);
        xsim_sc_channel<0, bool > *p_15_m_axis_rd_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_15->m_axis_rd_tlast.bind(*p_15_m_axis_rd_tlast);
        p_15_m_axis_rd_tlast->set_sv_netview_offsetfromdp(8232456);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_m_axis_rd_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->m_axis_rd_tid.bind(*p_15_m_axis_rd_tid);
        p_15_m_axis_rd_tid->set_sv_netview_offsetfromdp(8232512);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_m_axis_rd_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->m_axis_rd_tdest.bind(*p_15_m_axis_rd_tdest);
        p_15_m_axis_rd_tdest->set_sv_netview_offsetfromdp(8232568);
        xsim_sc_channel<0, bool > *p_15_m_axis_wr_tready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m_axis_wr_tready.bind(*p_15_m_axis_wr_tready);
        (*_glb_hdl_sc_channel_map).push_back(p_15_m_axis_wr_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_m_axis_wr_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->m_axis_wr_tdata.bind(*p_15_m_axis_wr_tdata);
        p_15_m_axis_wr_tdata->set_sv_netview_offsetfromdp(8232680);
        xsim_sc_channel<0, bool > *p_15_m_axis_wr_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_15->m_axis_wr_tlast.bind(*p_15_m_axis_wr_tlast);
        p_15_m_axis_wr_tlast->set_sv_netview_offsetfromdp(8232736);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_m_axis_wr_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->m_axis_wr_tid.bind(*p_15_m_axis_wr_tid);
        p_15_m_axis_wr_tid->set_sv_netview_offsetfromdp(8232792);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_m_axis_wr_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->m_axis_wr_tdest.bind(*p_15_m_axis_wr_tdest);
        p_15_m_axis_wr_tdest->set_sv_netview_offsetfromdp(8232848);
        xsim_sc_channel<0, bool > *p_15_m_axis_wr_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m_axis_wr_tvalid.bind(*p_15_m_axis_wr_tvalid);
        p_15_m_axis_wr_tvalid->set_sv_netview_offsetfromdp(8232904);
        xsim_sc_channel<0, bool > *p_15_m_axis_rd_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m_axis_rd_tvalid.bind(*p_15_m_axis_rd_tvalid);
        p_15_m_axis_rd_tvalid->set_sv_netview_offsetfromdp(8232960);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_s_axi_awaddr_mon = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->s_axi_awaddr_mon.bind(*p_15_s_axi_awaddr_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_awaddr_mon);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_s_axi_awprot_mon = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->s_axi_awprot_mon.bind(*p_15_s_axi_awprot_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_awprot_mon);
        xsim_sc_channel<0, bool > *p_15_s_axi_awvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_awvalid_mon.bind(*p_15_s_axi_awvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_awvalid_mon);
        xsim_sc_channel<0, bool > *p_15_s_axi_awready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_awready_mon.bind(*p_15_s_axi_awready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_awready_mon);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_15_s_axi_wdata_mon = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_15->s_axi_wdata_mon.bind(*p_15_s_axi_wdata_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_wdata_mon);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s_axi_wstrb_mon = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s_axi_wstrb_mon.bind(*p_15_s_axi_wstrb_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_wstrb_mon);
        xsim_sc_channel<0, bool > *p_15_s_axi_wvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_wvalid_mon.bind(*p_15_s_axi_wvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_wvalid_mon);
        xsim_sc_channel<0, bool > *p_15_s_axi_wready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_wready_mon.bind(*p_15_s_axi_wready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_wready_mon);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s_axi_bresp_mon = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s_axi_bresp_mon.bind(*p_15_s_axi_bresp_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_bresp_mon);
        xsim_sc_channel<0, bool > *p_15_s_axi_bvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_bvalid_mon.bind(*p_15_s_axi_bvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_bvalid_mon);
        xsim_sc_channel<0, bool > *p_15_s_axi_bready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_bready_mon.bind(*p_15_s_axi_bready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_bready_mon);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_s_axi_araddr_mon = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->s_axi_araddr_mon.bind(*p_15_s_axi_araddr_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_araddr_mon);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_s_axi_arprot_mon = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->s_axi_arprot_mon.bind(*p_15_s_axi_arprot_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_arprot_mon);
        xsim_sc_channel<0, bool > *p_15_s_axi_arvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_arvalid_mon.bind(*p_15_s_axi_arvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_arvalid_mon);
        xsim_sc_channel<0, bool > *p_15_s_axi_arready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_arready_mon.bind(*p_15_s_axi_arready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_arready_mon);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_15_s_axi_rdata_mon = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_15->s_axi_rdata_mon.bind(*p_15_s_axi_rdata_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_rdata_mon);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s_axi_rresp_mon = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s_axi_rresp_mon.bind(*p_15_s_axi_rresp_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_rresp_mon);
        xsim_sc_channel<0, bool > *p_15_s_axi_rvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_rvalid_mon.bind(*p_15_s_axi_rvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_rvalid_mon);
        xsim_sc_channel<0, bool > *p_15_s_axi_rready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_rready_mon.bind(*p_15_s_axi_rready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_rready_mon);
        sc_inst_16 = new pfm_dynamic_dpa_mon2_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_mon2");
        sc_inst_16->xsim_set_dbg_index(401);
        xsim_sc_channel<0, bool > *p_16_mon_clk = new xsim_sc_channel<0, bool >();
        sc_inst_16->mon_clk.bind(*p_16_mon_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_clk);
        xsim_sc_channel<0, bool > *p_16_mon_resetn = new xsim_sc_channel<0, bool >();
        sc_inst_16->mon_resetn.bind(*p_16_mon_resetn);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_resetn);
        xsim_sc_channel<0, bool > *p_16_trace_clk = new xsim_sc_channel<0, bool >();
        sc_inst_16->trace_clk.bind(*p_16_trace_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_16_trace_clk);
        xsim_sc_channel<0, bool > *p_16_trace_rst = new xsim_sc_channel<0, bool >();
        sc_inst_16->trace_rst.bind(*p_16_trace_rst);
        (*_glb_hdl_sc_channel_map).push_back(p_16_trace_rst);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_16_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_16->s_axi_awaddr.bind(*p_16_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_awaddr);
        xsim_sc_channel<0, bool > *p_16_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_awvalid.bind(*p_16_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_16_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_awready.bind(*p_16_s_axi_awready);
        p_16_s_axi_awready->set_sv_netview_offsetfromdp(8234464);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_16_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_16->s_axi_wdata.bind(*p_16_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->s_axi_wstrb.bind(*p_16_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_16_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_wvalid.bind(*p_16_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_16_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_wready.bind(*p_16_s_axi_wready);
        p_16_s_axi_wready->set_sv_netview_offsetfromdp(8234688);
        xsim_sc_channel<0, bool > *p_16_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_bvalid.bind(*p_16_s_axi_bvalid);
        p_16_s_axi_bvalid->set_sv_netview_offsetfromdp(8234744);
        xsim_sc_channel<0, bool > *p_16_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_bready.bind(*p_16_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->s_axi_bresp.bind(*p_16_s_axi_bresp);
        p_16_s_axi_bresp->set_sv_netview_offsetfromdp(8234856);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_16_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_16->s_axi_araddr.bind(*p_16_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_araddr);
        xsim_sc_channel<0, bool > *p_16_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_arvalid.bind(*p_16_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_16_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_arready.bind(*p_16_s_axi_arready);
        p_16_s_axi_arready->set_sv_netview_offsetfromdp(8235024);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_16_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_16->s_axi_rdata.bind(*p_16_s_axi_rdata);
        p_16_s_axi_rdata->set_sv_netview_offsetfromdp(8235080);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->s_axi_rresp.bind(*p_16_s_axi_rresp);
        p_16_s_axi_rresp->set_sv_netview_offsetfromdp(8235136);
        xsim_sc_channel<0, bool > *p_16_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_rvalid.bind(*p_16_s_axi_rvalid);
        p_16_s_axi_rvalid->set_sv_netview_offsetfromdp(8235192);
        xsim_sc_channel<0, bool > *p_16_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_rready.bind(*p_16_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_rready);
        xsim_sc_channel<0, bool > *p_16_mon_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_16->mon_AWVALID.bind(*p_16_mon_AWVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_AWVALID);
        xsim_sc_channel<0, bool > *p_16_mon_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_16->mon_AWREADY.bind(*p_16_mon_AWREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_AWREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_16_mon_AWADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_16->mon_AWADDR.bind(*p_16_mon_AWADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_AWADDR);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_mon_AWID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->mon_AWID.bind(*p_16_mon_AWID);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_AWID);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_16_mon_AWLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_16->mon_AWLEN.bind(*p_16_mon_AWLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_AWLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_16_mon_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_16->mon_AWSIZE.bind(*p_16_mon_AWSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_AWSIZE);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_mon_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->mon_AWBURST.bind(*p_16_mon_AWBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_AWBURST);
        xsim_sc_channel<0, bool > *p_16_mon_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_16->mon_WVALID.bind(*p_16_mon_WVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_WVALID);
        xsim_sc_channel<0, bool > *p_16_mon_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_16->mon_WREADY.bind(*p_16_mon_WREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_WREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_16_mon_WDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_16->mon_WDATA.bind(*p_16_mon_WDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_WDATA);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_16_mon_WSTRB = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_16->mon_WSTRB.bind(*p_16_mon_WSTRB);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_WSTRB);
        xsim_sc_channel<0, bool > *p_16_mon_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_16->mon_WLAST.bind(*p_16_mon_WLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_WLAST);
        xsim_sc_channel<0, bool > *p_16_mon_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_16->mon_ARVALID.bind(*p_16_mon_ARVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_ARVALID);
        xsim_sc_channel<0, bool > *p_16_mon_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_16->mon_ARREADY.bind(*p_16_mon_ARREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_ARREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_16_mon_ARADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_16->mon_ARADDR.bind(*p_16_mon_ARADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_ARADDR);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_mon_ARID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->mon_ARID.bind(*p_16_mon_ARID);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_ARID);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_16_mon_ARLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_16->mon_ARLEN.bind(*p_16_mon_ARLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_ARLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_16_mon_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_16->mon_ARSIZE.bind(*p_16_mon_ARSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_ARSIZE);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_mon_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->mon_ARBURST.bind(*p_16_mon_ARBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_ARBURST);
        xsim_sc_channel<0, bool > *p_16_mon_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_16->mon_RVALID.bind(*p_16_mon_RVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_RVALID);
        xsim_sc_channel<0, bool > *p_16_mon_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_16->mon_RREADY.bind(*p_16_mon_RREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_RREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_16_mon_RDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_16->mon_RDATA.bind(*p_16_mon_RDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_RDATA);
        xsim_sc_channel<0, bool > *p_16_mon_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_16->mon_RLAST.bind(*p_16_mon_RLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_RLAST);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_mon_RID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->mon_RID.bind(*p_16_mon_RID);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_RID);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_mon_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->mon_RRESP.bind(*p_16_mon_RRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_RRESP);
        xsim_sc_channel<0, bool > *p_16_mon_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_16->mon_BVALID.bind(*p_16_mon_BVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_BVALID);
        xsim_sc_channel<0, bool > *p_16_mon_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_16->mon_BREADY.bind(*p_16_mon_BREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_BREADY);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_mon_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->mon_BRESP.bind(*p_16_mon_BRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_BRESP);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_mon_BID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->mon_BID.bind(*p_16_mon_BID);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_BID);
        xsim_sc_channel<0, bool > *p_16_m_axis_rd_tready = new xsim_sc_channel<0, bool >();
        sc_inst_16->m_axis_rd_tready.bind(*p_16_m_axis_rd_tready);
        (*_glb_hdl_sc_channel_map).push_back(p_16_m_axis_rd_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_16_m_axis_rd_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_16->m_axis_rd_tdata.bind(*p_16_m_axis_rd_tdata);
        p_16_m_axis_rd_tdata->set_sv_netview_offsetfromdp(8236984);
        xsim_sc_channel<0, bool > *p_16_m_axis_rd_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_16->m_axis_rd_tlast.bind(*p_16_m_axis_rd_tlast);
        p_16_m_axis_rd_tlast->set_sv_netview_offsetfromdp(8237040);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_16_m_axis_rd_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_16->m_axis_rd_tid.bind(*p_16_m_axis_rd_tid);
        p_16_m_axis_rd_tid->set_sv_netview_offsetfromdp(8237096);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_16_m_axis_rd_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_16->m_axis_rd_tdest.bind(*p_16_m_axis_rd_tdest);
        p_16_m_axis_rd_tdest->set_sv_netview_offsetfromdp(8237152);
        xsim_sc_channel<0, bool > *p_16_m_axis_wr_tready = new xsim_sc_channel<0, bool >();
        sc_inst_16->m_axis_wr_tready.bind(*p_16_m_axis_wr_tready);
        (*_glb_hdl_sc_channel_map).push_back(p_16_m_axis_wr_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_16_m_axis_wr_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_16->m_axis_wr_tdata.bind(*p_16_m_axis_wr_tdata);
        p_16_m_axis_wr_tdata->set_sv_netview_offsetfromdp(8237264);
        xsim_sc_channel<0, bool > *p_16_m_axis_wr_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_16->m_axis_wr_tlast.bind(*p_16_m_axis_wr_tlast);
        p_16_m_axis_wr_tlast->set_sv_netview_offsetfromdp(8237320);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_16_m_axis_wr_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_16->m_axis_wr_tid.bind(*p_16_m_axis_wr_tid);
        p_16_m_axis_wr_tid->set_sv_netview_offsetfromdp(8237376);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_16_m_axis_wr_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_16->m_axis_wr_tdest.bind(*p_16_m_axis_wr_tdest);
        p_16_m_axis_wr_tdest->set_sv_netview_offsetfromdp(8237432);
        xsim_sc_channel<0, bool > *p_16_m_axis_wr_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->m_axis_wr_tvalid.bind(*p_16_m_axis_wr_tvalid);
        p_16_m_axis_wr_tvalid->set_sv_netview_offsetfromdp(8237488);
        xsim_sc_channel<0, bool > *p_16_m_axis_rd_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->m_axis_rd_tvalid.bind(*p_16_m_axis_rd_tvalid);
        p_16_m_axis_rd_tvalid->set_sv_netview_offsetfromdp(8237544);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_16_s_axi_awaddr_mon = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_16->s_axi_awaddr_mon.bind(*p_16_s_axi_awaddr_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_awaddr_mon);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_16_s_axi_awprot_mon = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_16->s_axi_awprot_mon.bind(*p_16_s_axi_awprot_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_awprot_mon);
        xsim_sc_channel<0, bool > *p_16_s_axi_awvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_awvalid_mon.bind(*p_16_s_axi_awvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_awvalid_mon);
        xsim_sc_channel<0, bool > *p_16_s_axi_awready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_awready_mon.bind(*p_16_s_axi_awready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_awready_mon);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_16_s_axi_wdata_mon = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_16->s_axi_wdata_mon.bind(*p_16_s_axi_wdata_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_wdata_mon);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_s_axi_wstrb_mon = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->s_axi_wstrb_mon.bind(*p_16_s_axi_wstrb_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_wstrb_mon);
        xsim_sc_channel<0, bool > *p_16_s_axi_wvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_wvalid_mon.bind(*p_16_s_axi_wvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_wvalid_mon);
        xsim_sc_channel<0, bool > *p_16_s_axi_wready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_wready_mon.bind(*p_16_s_axi_wready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_wready_mon);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_s_axi_bresp_mon = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->s_axi_bresp_mon.bind(*p_16_s_axi_bresp_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_bresp_mon);
        xsim_sc_channel<0, bool > *p_16_s_axi_bvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_bvalid_mon.bind(*p_16_s_axi_bvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_bvalid_mon);
        xsim_sc_channel<0, bool > *p_16_s_axi_bready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_bready_mon.bind(*p_16_s_axi_bready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_bready_mon);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_16_s_axi_araddr_mon = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_16->s_axi_araddr_mon.bind(*p_16_s_axi_araddr_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_araddr_mon);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_16_s_axi_arprot_mon = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_16->s_axi_arprot_mon.bind(*p_16_s_axi_arprot_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_arprot_mon);
        xsim_sc_channel<0, bool > *p_16_s_axi_arvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_arvalid_mon.bind(*p_16_s_axi_arvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_arvalid_mon);
        xsim_sc_channel<0, bool > *p_16_s_axi_arready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_arready_mon.bind(*p_16_s_axi_arready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_arready_mon);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_16_s_axi_rdata_mon = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_16->s_axi_rdata_mon.bind(*p_16_s_axi_rdata_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_rdata_mon);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_s_axi_rresp_mon = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->s_axi_rresp_mon.bind(*p_16_s_axi_rresp_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_rresp_mon);
        xsim_sc_channel<0, bool > *p_16_s_axi_rvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_rvalid_mon.bind(*p_16_s_axi_rvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_rvalid_mon);
        xsim_sc_channel<0, bool > *p_16_s_axi_rready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_rready_mon.bind(*p_16_s_axi_rready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_rready_mon);
        sc_inst_17 = new bd_5dca_sci(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.hmss_0.inst.bd_5dca_sci_inst");
        sc_inst_17->xsim_set_dbg_index(916);
        sc_inst_18 = new bd_5dca_hbm_inst_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.hmss_0.inst.hbm_inst");
        sc_inst_18->xsim_set_dbg_index(917);
        xsim_sc_channel<0, bool > *p_18_HBM_REF_CLK_0 = new xsim_sc_channel<0, bool >();
        sc_inst_18->HBM_REF_CLK_0.bind(*p_18_HBM_REF_CLK_0);
        (*_glb_hdl_sc_channel_map).push_back(p_18_HBM_REF_CLK_0);
        xsim_sc_channel<0, bool > *p_18_AXI_00_ACLK = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_00_ACLK.bind(*p_18_AXI_00_ACLK);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_00_ACLK);
        xsim_sc_channel<0, bool > *p_18_AXI_00_ARESET_N = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_00_ARESET_N.bind(*p_18_AXI_00_ARESET_N);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_00_ARESET_N);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_18_AXI_00_ARADDR = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_18->AXI_00_ARADDR.bind(*p_18_AXI_00_ARADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_00_ARADDR);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_AXI_00_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->AXI_00_ARBURST.bind(*p_18_AXI_00_ARBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_00_ARBURST);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_18_AXI_00_ARID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_18->AXI_00_ARID.bind(*p_18_AXI_00_ARID);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_00_ARID);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_AXI_00_ARLEN = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->AXI_00_ARLEN.bind(*p_18_AXI_00_ARLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_00_ARLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_18_AXI_00_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_18->AXI_00_ARSIZE.bind(*p_18_AXI_00_ARSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_00_ARSIZE);
        xsim_sc_channel<0, bool > *p_18_AXI_00_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_00_ARVALID.bind(*p_18_AXI_00_ARVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_00_ARVALID);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_18_AXI_00_AWADDR = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_18->AXI_00_AWADDR.bind(*p_18_AXI_00_AWADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_00_AWADDR);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_AXI_00_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->AXI_00_AWBURST.bind(*p_18_AXI_00_AWBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_00_AWBURST);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_18_AXI_00_AWID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_18->AXI_00_AWID.bind(*p_18_AXI_00_AWID);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_00_AWID);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_AXI_00_AWLEN = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->AXI_00_AWLEN.bind(*p_18_AXI_00_AWLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_00_AWLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_18_AXI_00_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_18->AXI_00_AWSIZE.bind(*p_18_AXI_00_AWSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_00_AWSIZE);
        xsim_sc_channel<0, bool > *p_18_AXI_00_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_00_AWVALID.bind(*p_18_AXI_00_AWVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_00_AWVALID);
        xsim_sc_channel<0, bool > *p_18_AXI_00_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_00_RREADY.bind(*p_18_AXI_00_RREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_00_RREADY);
        xsim_sc_channel<0, bool > *p_18_AXI_00_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_00_BREADY.bind(*p_18_AXI_00_BREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_00_BREADY);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_18_AXI_00_WDATA = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_18->AXI_00_WDATA.bind(*p_18_AXI_00_WDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_00_WDATA);
        xsim_sc_channel<0, bool > *p_18_AXI_00_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_00_WLAST.bind(*p_18_AXI_00_WLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_00_WLAST);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_18_AXI_00_WSTRB = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_18->AXI_00_WSTRB.bind(*p_18_AXI_00_WSTRB);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_00_WSTRB);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_18_AXI_00_WDATA_PARITY = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_18->AXI_00_WDATA_PARITY.bind(*p_18_AXI_00_WDATA_PARITY);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_00_WDATA_PARITY);
        xsim_sc_channel<0, bool > *p_18_AXI_00_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_00_WVALID.bind(*p_18_AXI_00_WVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_00_WVALID);
        xsim_sc_channel<0, bool > *p_18_AXI_01_ACLK = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_01_ACLK.bind(*p_18_AXI_01_ACLK);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_01_ACLK);
        xsim_sc_channel<0, bool > *p_18_AXI_01_ARESET_N = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_01_ARESET_N.bind(*p_18_AXI_01_ARESET_N);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_01_ARESET_N);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_18_AXI_01_ARADDR = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_18->AXI_01_ARADDR.bind(*p_18_AXI_01_ARADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_01_ARADDR);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_AXI_01_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->AXI_01_ARBURST.bind(*p_18_AXI_01_ARBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_01_ARBURST);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_18_AXI_01_ARID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_18->AXI_01_ARID.bind(*p_18_AXI_01_ARID);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_01_ARID);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_AXI_01_ARLEN = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->AXI_01_ARLEN.bind(*p_18_AXI_01_ARLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_01_ARLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_18_AXI_01_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_18->AXI_01_ARSIZE.bind(*p_18_AXI_01_ARSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_01_ARSIZE);
        xsim_sc_channel<0, bool > *p_18_AXI_01_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_01_ARVALID.bind(*p_18_AXI_01_ARVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_01_ARVALID);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_18_AXI_01_AWADDR = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_18->AXI_01_AWADDR.bind(*p_18_AXI_01_AWADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_01_AWADDR);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_AXI_01_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->AXI_01_AWBURST.bind(*p_18_AXI_01_AWBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_01_AWBURST);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_18_AXI_01_AWID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_18->AXI_01_AWID.bind(*p_18_AXI_01_AWID);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_01_AWID);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_AXI_01_AWLEN = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->AXI_01_AWLEN.bind(*p_18_AXI_01_AWLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_01_AWLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_18_AXI_01_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_18->AXI_01_AWSIZE.bind(*p_18_AXI_01_AWSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_01_AWSIZE);
        xsim_sc_channel<0, bool > *p_18_AXI_01_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_01_AWVALID.bind(*p_18_AXI_01_AWVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_01_AWVALID);
        xsim_sc_channel<0, bool > *p_18_AXI_01_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_01_RREADY.bind(*p_18_AXI_01_RREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_01_RREADY);
        xsim_sc_channel<0, bool > *p_18_AXI_01_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_01_BREADY.bind(*p_18_AXI_01_BREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_01_BREADY);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_18_AXI_01_WDATA = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_18->AXI_01_WDATA.bind(*p_18_AXI_01_WDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_01_WDATA);
        xsim_sc_channel<0, bool > *p_18_AXI_01_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_01_WLAST.bind(*p_18_AXI_01_WLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_01_WLAST);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_18_AXI_01_WSTRB = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_18->AXI_01_WSTRB.bind(*p_18_AXI_01_WSTRB);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_01_WSTRB);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_18_AXI_01_WDATA_PARITY = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_18->AXI_01_WDATA_PARITY.bind(*p_18_AXI_01_WDATA_PARITY);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_01_WDATA_PARITY);
        xsim_sc_channel<0, bool > *p_18_AXI_01_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_01_WVALID.bind(*p_18_AXI_01_WVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_01_WVALID);
        xsim_sc_channel<0, bool > *p_18_AXI_02_ACLK = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_02_ACLK.bind(*p_18_AXI_02_ACLK);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_02_ACLK);
        xsim_sc_channel<0, bool > *p_18_AXI_02_ARESET_N = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_02_ARESET_N.bind(*p_18_AXI_02_ARESET_N);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_02_ARESET_N);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_18_AXI_02_ARADDR = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_18->AXI_02_ARADDR.bind(*p_18_AXI_02_ARADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_02_ARADDR);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_AXI_02_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->AXI_02_ARBURST.bind(*p_18_AXI_02_ARBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_02_ARBURST);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_18_AXI_02_ARID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_18->AXI_02_ARID.bind(*p_18_AXI_02_ARID);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_02_ARID);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_AXI_02_ARLEN = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->AXI_02_ARLEN.bind(*p_18_AXI_02_ARLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_02_ARLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_18_AXI_02_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_18->AXI_02_ARSIZE.bind(*p_18_AXI_02_ARSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_02_ARSIZE);
        xsim_sc_channel<0, bool > *p_18_AXI_02_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_02_ARVALID.bind(*p_18_AXI_02_ARVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_02_ARVALID);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_18_AXI_02_AWADDR = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_18->AXI_02_AWADDR.bind(*p_18_AXI_02_AWADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_02_AWADDR);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_AXI_02_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->AXI_02_AWBURST.bind(*p_18_AXI_02_AWBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_02_AWBURST);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_18_AXI_02_AWID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_18->AXI_02_AWID.bind(*p_18_AXI_02_AWID);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_02_AWID);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_AXI_02_AWLEN = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->AXI_02_AWLEN.bind(*p_18_AXI_02_AWLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_02_AWLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_18_AXI_02_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_18->AXI_02_AWSIZE.bind(*p_18_AXI_02_AWSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_02_AWSIZE);
        xsim_sc_channel<0, bool > *p_18_AXI_02_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_02_AWVALID.bind(*p_18_AXI_02_AWVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_02_AWVALID);
        xsim_sc_channel<0, bool > *p_18_AXI_02_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_02_RREADY.bind(*p_18_AXI_02_RREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_02_RREADY);
        xsim_sc_channel<0, bool > *p_18_AXI_02_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_02_BREADY.bind(*p_18_AXI_02_BREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_02_BREADY);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_18_AXI_02_WDATA = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_18->AXI_02_WDATA.bind(*p_18_AXI_02_WDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_02_WDATA);
        xsim_sc_channel<0, bool > *p_18_AXI_02_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_02_WLAST.bind(*p_18_AXI_02_WLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_02_WLAST);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_18_AXI_02_WSTRB = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_18->AXI_02_WSTRB.bind(*p_18_AXI_02_WSTRB);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_02_WSTRB);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_18_AXI_02_WDATA_PARITY = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_18->AXI_02_WDATA_PARITY.bind(*p_18_AXI_02_WDATA_PARITY);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_02_WDATA_PARITY);
        xsim_sc_channel<0, bool > *p_18_AXI_02_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_02_WVALID.bind(*p_18_AXI_02_WVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_02_WVALID);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_18_APB_0_PWDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_18->APB_0_PWDATA.bind(*p_18_APB_0_PWDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_18_APB_0_PWDATA);
        xsim_sc_channel<22, sc_dt::sc_bv<22> > *p_18_APB_0_PADDR = new xsim_sc_channel<22, sc_dt::sc_bv<22> >();
        sc_inst_18->APB_0_PADDR.bind(*p_18_APB_0_PADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_18_APB_0_PADDR);
        xsim_sc_channel<0, bool > *p_18_APB_0_PCLK = new xsim_sc_channel<0, bool >();
        sc_inst_18->APB_0_PCLK.bind(*p_18_APB_0_PCLK);
        (*_glb_hdl_sc_channel_map).push_back(p_18_APB_0_PCLK);
        xsim_sc_channel<0, bool > *p_18_APB_0_PENABLE = new xsim_sc_channel<0, bool >();
        sc_inst_18->APB_0_PENABLE.bind(*p_18_APB_0_PENABLE);
        (*_glb_hdl_sc_channel_map).push_back(p_18_APB_0_PENABLE);
        xsim_sc_channel<0, bool > *p_18_APB_0_PRESET_N = new xsim_sc_channel<0, bool >();
        sc_inst_18->APB_0_PRESET_N.bind(*p_18_APB_0_PRESET_N);
        (*_glb_hdl_sc_channel_map).push_back(p_18_APB_0_PRESET_N);
        xsim_sc_channel<0, bool > *p_18_APB_0_PSEL = new xsim_sc_channel<0, bool >();
        sc_inst_18->APB_0_PSEL.bind(*p_18_APB_0_PSEL);
        (*_glb_hdl_sc_channel_map).push_back(p_18_APB_0_PSEL);
        xsim_sc_channel<0, bool > *p_18_APB_0_PWRITE = new xsim_sc_channel<0, bool >();
        sc_inst_18->APB_0_PWRITE.bind(*p_18_APB_0_PWRITE);
        (*_glb_hdl_sc_channel_map).push_back(p_18_APB_0_PWRITE);
        xsim_sc_channel<0, bool > *p_18_AXI_00_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_00_ARREADY.bind(*p_18_AXI_00_ARREADY);
        p_18_AXI_00_ARREADY->set_sv_netview_offsetfromdp(8405672);
        xsim_sc_channel<0, bool > *p_18_AXI_00_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_00_AWREADY.bind(*p_18_AXI_00_AWREADY);
        p_18_AXI_00_AWREADY->set_sv_netview_offsetfromdp(8405728);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_18_AXI_00_RDATA_PARITY = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_18->AXI_00_RDATA_PARITY.bind(*p_18_AXI_00_RDATA_PARITY);
        p_18_AXI_00_RDATA_PARITY->set_sv_netview_offsetfromdp(8405784);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_18_AXI_00_RDATA = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_18->AXI_00_RDATA.bind(*p_18_AXI_00_RDATA);
        p_18_AXI_00_RDATA->set_sv_netview_offsetfromdp(8405840);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_18_AXI_00_RID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_18->AXI_00_RID.bind(*p_18_AXI_00_RID);
        p_18_AXI_00_RID->set_sv_netview_offsetfromdp(8405896);
        xsim_sc_channel<0, bool > *p_18_AXI_00_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_00_RLAST.bind(*p_18_AXI_00_RLAST);
        p_18_AXI_00_RLAST->set_sv_netview_offsetfromdp(8405952);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_AXI_00_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->AXI_00_RRESP.bind(*p_18_AXI_00_RRESP);
        p_18_AXI_00_RRESP->set_sv_netview_offsetfromdp(8406008);
        xsim_sc_channel<0, bool > *p_18_AXI_00_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_00_RVALID.bind(*p_18_AXI_00_RVALID);
        p_18_AXI_00_RVALID->set_sv_netview_offsetfromdp(8406064);
        xsim_sc_channel<0, bool > *p_18_AXI_00_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_00_WREADY.bind(*p_18_AXI_00_WREADY);
        p_18_AXI_00_WREADY->set_sv_netview_offsetfromdp(8406120);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_18_AXI_00_BID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_18->AXI_00_BID.bind(*p_18_AXI_00_BID);
        p_18_AXI_00_BID->set_sv_netview_offsetfromdp(8406176);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_AXI_00_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->AXI_00_BRESP.bind(*p_18_AXI_00_BRESP);
        p_18_AXI_00_BRESP->set_sv_netview_offsetfromdp(8406232);
        xsim_sc_channel<0, bool > *p_18_AXI_00_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_00_BVALID.bind(*p_18_AXI_00_BVALID);
        p_18_AXI_00_BVALID->set_sv_netview_offsetfromdp(8406288);
        xsim_sc_channel<0, bool > *p_18_AXI_01_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_01_ARREADY.bind(*p_18_AXI_01_ARREADY);
        p_18_AXI_01_ARREADY->set_sv_netview_offsetfromdp(8406344);
        xsim_sc_channel<0, bool > *p_18_AXI_01_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_01_AWREADY.bind(*p_18_AXI_01_AWREADY);
        p_18_AXI_01_AWREADY->set_sv_netview_offsetfromdp(8406400);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_18_AXI_01_RDATA_PARITY = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_18->AXI_01_RDATA_PARITY.bind(*p_18_AXI_01_RDATA_PARITY);
        p_18_AXI_01_RDATA_PARITY->set_sv_netview_offsetfromdp(8406456);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_18_AXI_01_RDATA = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_18->AXI_01_RDATA.bind(*p_18_AXI_01_RDATA);
        p_18_AXI_01_RDATA->set_sv_netview_offsetfromdp(8406512);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_18_AXI_01_RID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_18->AXI_01_RID.bind(*p_18_AXI_01_RID);
        p_18_AXI_01_RID->set_sv_netview_offsetfromdp(8406568);
        xsim_sc_channel<0, bool > *p_18_AXI_01_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_01_RLAST.bind(*p_18_AXI_01_RLAST);
        p_18_AXI_01_RLAST->set_sv_netview_offsetfromdp(8406624);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_AXI_01_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->AXI_01_RRESP.bind(*p_18_AXI_01_RRESP);
        p_18_AXI_01_RRESP->set_sv_netview_offsetfromdp(8406680);
        xsim_sc_channel<0, bool > *p_18_AXI_01_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_01_RVALID.bind(*p_18_AXI_01_RVALID);
        p_18_AXI_01_RVALID->set_sv_netview_offsetfromdp(8406736);
        xsim_sc_channel<0, bool > *p_18_AXI_01_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_01_WREADY.bind(*p_18_AXI_01_WREADY);
        p_18_AXI_01_WREADY->set_sv_netview_offsetfromdp(8406792);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_18_AXI_01_BID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_18->AXI_01_BID.bind(*p_18_AXI_01_BID);
        p_18_AXI_01_BID->set_sv_netview_offsetfromdp(8406848);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_AXI_01_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->AXI_01_BRESP.bind(*p_18_AXI_01_BRESP);
        p_18_AXI_01_BRESP->set_sv_netview_offsetfromdp(8406904);
        xsim_sc_channel<0, bool > *p_18_AXI_01_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_01_BVALID.bind(*p_18_AXI_01_BVALID);
        p_18_AXI_01_BVALID->set_sv_netview_offsetfromdp(8406960);
        xsim_sc_channel<0, bool > *p_18_AXI_02_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_02_ARREADY.bind(*p_18_AXI_02_ARREADY);
        p_18_AXI_02_ARREADY->set_sv_netview_offsetfromdp(8407016);
        xsim_sc_channel<0, bool > *p_18_AXI_02_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_02_AWREADY.bind(*p_18_AXI_02_AWREADY);
        p_18_AXI_02_AWREADY->set_sv_netview_offsetfromdp(8407072);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_18_AXI_02_RDATA_PARITY = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_18->AXI_02_RDATA_PARITY.bind(*p_18_AXI_02_RDATA_PARITY);
        p_18_AXI_02_RDATA_PARITY->set_sv_netview_offsetfromdp(8407128);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_18_AXI_02_RDATA = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_18->AXI_02_RDATA.bind(*p_18_AXI_02_RDATA);
        p_18_AXI_02_RDATA->set_sv_netview_offsetfromdp(8407184);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_18_AXI_02_RID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_18->AXI_02_RID.bind(*p_18_AXI_02_RID);
        p_18_AXI_02_RID->set_sv_netview_offsetfromdp(8407240);
        xsim_sc_channel<0, bool > *p_18_AXI_02_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_02_RLAST.bind(*p_18_AXI_02_RLAST);
        p_18_AXI_02_RLAST->set_sv_netview_offsetfromdp(8407296);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_AXI_02_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->AXI_02_RRESP.bind(*p_18_AXI_02_RRESP);
        p_18_AXI_02_RRESP->set_sv_netview_offsetfromdp(8407352);
        xsim_sc_channel<0, bool > *p_18_AXI_02_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_02_RVALID.bind(*p_18_AXI_02_RVALID);
        p_18_AXI_02_RVALID->set_sv_netview_offsetfromdp(8407408);
        xsim_sc_channel<0, bool > *p_18_AXI_02_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_02_WREADY.bind(*p_18_AXI_02_WREADY);
        p_18_AXI_02_WREADY->set_sv_netview_offsetfromdp(8407464);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_18_AXI_02_BID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_18->AXI_02_BID.bind(*p_18_AXI_02_BID);
        p_18_AXI_02_BID->set_sv_netview_offsetfromdp(8407520);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_AXI_02_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->AXI_02_BRESP.bind(*p_18_AXI_02_BRESP);
        p_18_AXI_02_BRESP->set_sv_netview_offsetfromdp(8407576);
        xsim_sc_channel<0, bool > *p_18_AXI_02_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_02_BVALID.bind(*p_18_AXI_02_BVALID);
        p_18_AXI_02_BVALID->set_sv_netview_offsetfromdp(8407632);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_18_APB_0_PRDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_18->APB_0_PRDATA.bind(*p_18_APB_0_PRDATA);
        p_18_APB_0_PRDATA->set_sv_netview_offsetfromdp(8407688);
        xsim_sc_channel<0, bool > *p_18_APB_0_PREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->APB_0_PREADY.bind(*p_18_APB_0_PREADY);
        p_18_APB_0_PREADY->set_sv_netview_offsetfromdp(8407744);
        xsim_sc_channel<0, bool > *p_18_APB_0_PSLVERR = new xsim_sc_channel<0, bool >();
        sc_inst_18->APB_0_PSLVERR.bind(*p_18_APB_0_PSLVERR);
        p_18_APB_0_PSLVERR->set_sv_netview_offsetfromdp(8407800);
        xsim_sc_channel<0, bool > *p_18_apb_complete_0 = new xsim_sc_channel<0, bool >();
        sc_inst_18->apb_complete_0.bind(*p_18_apb_complete_0);
        p_18_apb_complete_0->set_sv_netview_offsetfromdp(8407856);
        xsim_sc_channel<0, bool > *p_18_DRAM_0_STAT_CATTRIP = new xsim_sc_channel<0, bool >();
        sc_inst_18->DRAM_0_STAT_CATTRIP.bind(*p_18_DRAM_0_STAT_CATTRIP);
        p_18_DRAM_0_STAT_CATTRIP->set_sv_netview_offsetfromdp(8407912);
        xsim_sc_channel<7, sc_dt::sc_bv<7> > *p_18_DRAM_0_STAT_TEMP = new xsim_sc_channel<7, sc_dt::sc_bv<7> >();
        sc_inst_18->DRAM_0_STAT_TEMP.bind(*p_18_DRAM_0_STAT_TEMP);
        p_18_DRAM_0_STAT_TEMP->set_sv_netview_offsetfromdp(8407968);
        sc_inst_19 = new bd_5dca_interconnect1_0_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.hmss_0.inst.path_0.interconnect1_0");
        sc_inst_19->xsim_set_dbg_index(2147);
        xsim_sc_channel<0, bool > *p_19_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_19->aclk.bind(*p_19_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_19_aclk);
        xsim_sc_channel<0, bool > *p_19_aclk1 = new xsim_sc_channel<0, bool >();
        sc_inst_19->aclk1.bind(*p_19_aclk1);
        (*_glb_hdl_sc_channel_map).push_back(p_19_aclk1);
        xsim_sc_channel<0, bool > *p_19_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_19->aresetn.bind(*p_19_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_19_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_19_S00_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_19->S00_AXI_awid.bind(*p_19_S00_AXI_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_19_S00_AXI_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_19_S00_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_19->S00_AXI_awaddr.bind(*p_19_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_19_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_19_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_19->S00_AXI_awlen.bind(*p_19_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_19_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_19_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_19->S00_AXI_awsize.bind(*p_19_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_19_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->S00_AXI_awburst.bind(*p_19_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_19_S00_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_19_S00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_19->S00_AXI_awlock.bind(*p_19_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_19_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->S00_AXI_awcache.bind(*p_19_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_19_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_19_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_19->S00_AXI_awprot.bind(*p_19_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_19_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->S00_AXI_awqos.bind(*p_19_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_19_S00_AXI_awqos);
        xsim_sc_channel<0, bool > *p_19_S00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_19->S00_AXI_awvalid.bind(*p_19_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_19_S00_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_19_S00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_19->S00_AXI_awready.bind(*p_19_S00_AXI_awready);
        p_19_S00_AXI_awready->set_sv_netview_offsetfromdp(8604368);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_19_S00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_19->S00_AXI_wdata.bind(*p_19_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_19_S00_AXI_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_19_S00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_19->S00_AXI_wstrb.bind(*p_19_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_19_S00_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_19_S00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_19->S00_AXI_wlast.bind(*p_19_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_19_S00_AXI_wlast);
        xsim_sc_channel<0, bool > *p_19_S00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_19->S00_AXI_wvalid.bind(*p_19_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_19_S00_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_19_S00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_19->S00_AXI_wready.bind(*p_19_S00_AXI_wready);
        p_19_S00_AXI_wready->set_sv_netview_offsetfromdp(8604648);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_19_S00_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_19->S00_AXI_bid.bind(*p_19_S00_AXI_bid);
        p_19_S00_AXI_bid->set_sv_netview_offsetfromdp(8604704);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->S00_AXI_bresp.bind(*p_19_S00_AXI_bresp);
        p_19_S00_AXI_bresp->set_sv_netview_offsetfromdp(8604760);
        xsim_sc_channel<0, bool > *p_19_S00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_19->S00_AXI_bvalid.bind(*p_19_S00_AXI_bvalid);
        p_19_S00_AXI_bvalid->set_sv_netview_offsetfromdp(8604816);
        xsim_sc_channel<0, bool > *p_19_S00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_19->S00_AXI_bready.bind(*p_19_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_19_S00_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_19_S00_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_19->S00_AXI_arid.bind(*p_19_S00_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_19_S00_AXI_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_19_S00_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_19->S00_AXI_araddr.bind(*p_19_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_19_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_19_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_19->S00_AXI_arlen.bind(*p_19_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_19_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_19_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_19->S00_AXI_arsize.bind(*p_19_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_19_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->S00_AXI_arburst.bind(*p_19_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_19_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_19_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_19->S00_AXI_arlock.bind(*p_19_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_19_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->S00_AXI_arcache.bind(*p_19_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_19_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_19_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_19->S00_AXI_arprot.bind(*p_19_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_19_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->S00_AXI_arqos.bind(*p_19_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_19_S00_AXI_arqos);
        xsim_sc_channel<0, bool > *p_19_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_19->S00_AXI_arvalid.bind(*p_19_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_19_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_19_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_19->S00_AXI_arready.bind(*p_19_S00_AXI_arready);
        p_19_S00_AXI_arready->set_sv_netview_offsetfromdp(8605488);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_19_S00_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_19->S00_AXI_rid.bind(*p_19_S00_AXI_rid);
        p_19_S00_AXI_rid->set_sv_netview_offsetfromdp(8605544);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_19_S00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_19->S00_AXI_rdata.bind(*p_19_S00_AXI_rdata);
        p_19_S00_AXI_rdata->set_sv_netview_offsetfromdp(8605600);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->S00_AXI_rresp.bind(*p_19_S00_AXI_rresp);
        p_19_S00_AXI_rresp->set_sv_netview_offsetfromdp(8605656);
        xsim_sc_channel<0, bool > *p_19_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_19->S00_AXI_rlast.bind(*p_19_S00_AXI_rlast);
        p_19_S00_AXI_rlast->set_sv_netview_offsetfromdp(8605712);
        xsim_sc_channel<0, bool > *p_19_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_19->S00_AXI_rvalid.bind(*p_19_S00_AXI_rvalid);
        p_19_S00_AXI_rvalid->set_sv_netview_offsetfromdp(8605768);
        xsim_sc_channel<0, bool > *p_19_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_19->S00_AXI_rready.bind(*p_19_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_19_S00_AXI_rready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_19_M00_AXI_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_19->M00_AXI_awaddr.bind(*p_19_M00_AXI_awaddr);
        p_19_M00_AXI_awaddr->set_sv_netview_offsetfromdp(8605880);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_M00_AXI_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->M00_AXI_awlen.bind(*p_19_M00_AXI_awlen);
        p_19_M00_AXI_awlen->set_sv_netview_offsetfromdp(8605936);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_19_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_19->M00_AXI_awsize.bind(*p_19_M00_AXI_awsize);
        p_19_M00_AXI_awsize->set_sv_netview_offsetfromdp(8605992);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->M00_AXI_awburst.bind(*p_19_M00_AXI_awburst);
        p_19_M00_AXI_awburst->set_sv_netview_offsetfromdp(8606048);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_M00_AXI_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->M00_AXI_awlock.bind(*p_19_M00_AXI_awlock);
        p_19_M00_AXI_awlock->set_sv_netview_offsetfromdp(8606104);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->M00_AXI_awcache.bind(*p_19_M00_AXI_awcache);
        p_19_M00_AXI_awcache->set_sv_netview_offsetfromdp(8606160);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_19_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_19->M00_AXI_awprot.bind(*p_19_M00_AXI_awprot);
        p_19_M00_AXI_awprot->set_sv_netview_offsetfromdp(8606216);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->M00_AXI_awqos.bind(*p_19_M00_AXI_awqos);
        p_19_M00_AXI_awqos->set_sv_netview_offsetfromdp(8606272);
        xsim_sc_channel<0, bool > *p_19_M00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_19->M00_AXI_awvalid.bind(*p_19_M00_AXI_awvalid);
        p_19_M00_AXI_awvalid->set_sv_netview_offsetfromdp(8606328);
        xsim_sc_channel<0, bool > *p_19_M00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_19->M00_AXI_awready.bind(*p_19_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_19_M00_AXI_awready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_19_M00_AXI_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_19->M00_AXI_wdata.bind(*p_19_M00_AXI_wdata);
        p_19_M00_AXI_wdata->set_sv_netview_offsetfromdp(8606440);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_19_M00_AXI_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_19->M00_AXI_wstrb.bind(*p_19_M00_AXI_wstrb);
        p_19_M00_AXI_wstrb->set_sv_netview_offsetfromdp(8606496);
        xsim_sc_channel<0, bool > *p_19_M00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_19->M00_AXI_wlast.bind(*p_19_M00_AXI_wlast);
        p_19_M00_AXI_wlast->set_sv_netview_offsetfromdp(8606552);
        xsim_sc_channel<0, bool > *p_19_M00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_19->M00_AXI_wvalid.bind(*p_19_M00_AXI_wvalid);
        p_19_M00_AXI_wvalid->set_sv_netview_offsetfromdp(8606608);
        xsim_sc_channel<0, bool > *p_19_M00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_19->M00_AXI_wready.bind(*p_19_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_19_M00_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->M00_AXI_bresp.bind(*p_19_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_19_M00_AXI_bresp);
        xsim_sc_channel<0, bool > *p_19_M00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_19->M00_AXI_bvalid.bind(*p_19_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_19_M00_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_19_M00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_19->M00_AXI_bready.bind(*p_19_M00_AXI_bready);
        p_19_M00_AXI_bready->set_sv_netview_offsetfromdp(8606832);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_19_M00_AXI_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_19->M00_AXI_araddr.bind(*p_19_M00_AXI_araddr);
        p_19_M00_AXI_araddr->set_sv_netview_offsetfromdp(8606888);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_M00_AXI_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->M00_AXI_arlen.bind(*p_19_M00_AXI_arlen);
        p_19_M00_AXI_arlen->set_sv_netview_offsetfromdp(8606944);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_19_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_19->M00_AXI_arsize.bind(*p_19_M00_AXI_arsize);
        p_19_M00_AXI_arsize->set_sv_netview_offsetfromdp(8607000);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->M00_AXI_arburst.bind(*p_19_M00_AXI_arburst);
        p_19_M00_AXI_arburst->set_sv_netview_offsetfromdp(8607056);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_M00_AXI_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->M00_AXI_arlock.bind(*p_19_M00_AXI_arlock);
        p_19_M00_AXI_arlock->set_sv_netview_offsetfromdp(8607112);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->M00_AXI_arcache.bind(*p_19_M00_AXI_arcache);
        p_19_M00_AXI_arcache->set_sv_netview_offsetfromdp(8607168);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_19_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_19->M00_AXI_arprot.bind(*p_19_M00_AXI_arprot);
        p_19_M00_AXI_arprot->set_sv_netview_offsetfromdp(8607224);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->M00_AXI_arqos.bind(*p_19_M00_AXI_arqos);
        p_19_M00_AXI_arqos->set_sv_netview_offsetfromdp(8607280);
        xsim_sc_channel<0, bool > *p_19_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_19->M00_AXI_arvalid.bind(*p_19_M00_AXI_arvalid);
        p_19_M00_AXI_arvalid->set_sv_netview_offsetfromdp(8607336);
        xsim_sc_channel<0, bool > *p_19_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_19->M00_AXI_arready.bind(*p_19_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_19_M00_AXI_arready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_19_M00_AXI_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_19->M00_AXI_rdata.bind(*p_19_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_19_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->M00_AXI_rresp.bind(*p_19_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_19_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_19_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_19->M00_AXI_rlast.bind(*p_19_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_19_M00_AXI_rlast);
        xsim_sc_channel<0, bool > *p_19_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_19->M00_AXI_rvalid.bind(*p_19_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_19_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_19_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_19->M00_AXI_rready.bind(*p_19_M00_AXI_rready);
        p_19_M00_AXI_rready->set_sv_netview_offsetfromdp(8607672);
        sc_inst_20 = new bd_5dca_slice1_0_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.hmss_0.inst.path_0.slice1_0");
        sc_inst_20->xsim_set_dbg_index(2148);
        xsim_sc_channel<0, bool > *p_20_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_20->aclk.bind(*p_20_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_20_aclk);
        xsim_sc_channel<0, bool > *p_20_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_20->aresetn.bind(*p_20_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_20_aresetn);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_20_s_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_20->s_axi_awaddr.bind(*p_20_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_awaddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_s_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->s_axi_awlen.bind(*p_20_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_20_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_20->s_axi_awsize.bind(*p_20_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->s_axi_awburst.bind(*p_20_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_awburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_s_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->s_axi_awlock.bind(*p_20_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->s_axi_awcache.bind(*p_20_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_20_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_20->s_axi_awprot.bind(*p_20_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->s_axi_awqos.bind(*p_20_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_awqos);
        xsim_sc_channel<0, bool > *p_20_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_awvalid.bind(*p_20_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_20_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_awready.bind(*p_20_s_axi_awready);
        p_20_s_axi_awready->set_sv_netview_offsetfromdp(8608392);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_20_s_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_20->s_axi_wdata.bind(*p_20_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_wdata);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_20_s_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_20->s_axi_wstrb.bind(*p_20_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_20_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_wlast.bind(*p_20_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_20_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_wvalid.bind(*p_20_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_20_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_wready.bind(*p_20_s_axi_wready);
        p_20_s_axi_wready->set_sv_netview_offsetfromdp(8608672);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->s_axi_bresp.bind(*p_20_s_axi_bresp);
        p_20_s_axi_bresp->set_sv_netview_offsetfromdp(8608728);
        xsim_sc_channel<0, bool > *p_20_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_bvalid.bind(*p_20_s_axi_bvalid);
        p_20_s_axi_bvalid->set_sv_netview_offsetfromdp(8608784);
        xsim_sc_channel<0, bool > *p_20_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_bready.bind(*p_20_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_bready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_20_s_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_20->s_axi_araddr.bind(*p_20_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_araddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_s_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->s_axi_arlen.bind(*p_20_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_20_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_20->s_axi_arsize.bind(*p_20_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->s_axi_arburst.bind(*p_20_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_arburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_s_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->s_axi_arlock.bind(*p_20_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->s_axi_arcache.bind(*p_20_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_20_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_20->s_axi_arprot.bind(*p_20_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->s_axi_arqos.bind(*p_20_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_arqos);
        xsim_sc_channel<0, bool > *p_20_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_arvalid.bind(*p_20_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_20_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_arready.bind(*p_20_s_axi_arready);
        p_20_s_axi_arready->set_sv_netview_offsetfromdp(8609400);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_20_s_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_20->s_axi_rdata.bind(*p_20_s_axi_rdata);
        p_20_s_axi_rdata->set_sv_netview_offsetfromdp(8609456);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->s_axi_rresp.bind(*p_20_s_axi_rresp);
        p_20_s_axi_rresp->set_sv_netview_offsetfromdp(8609512);
        xsim_sc_channel<0, bool > *p_20_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_rlast.bind(*p_20_s_axi_rlast);
        p_20_s_axi_rlast->set_sv_netview_offsetfromdp(8609568);
        xsim_sc_channel<0, bool > *p_20_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_rvalid.bind(*p_20_s_axi_rvalid);
        p_20_s_axi_rvalid->set_sv_netview_offsetfromdp(8609624);
        xsim_sc_channel<0, bool > *p_20_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_rready.bind(*p_20_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_rready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_20_m_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_20->m_axi_awaddr.bind(*p_20_m_axi_awaddr);
        p_20_m_axi_awaddr->set_sv_netview_offsetfromdp(8609736);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_m_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->m_axi_awlen.bind(*p_20_m_axi_awlen);
        p_20_m_axi_awlen->set_sv_netview_offsetfromdp(8609792);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_20_m_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_20->m_axi_awsize.bind(*p_20_m_axi_awsize);
        p_20_m_axi_awsize->set_sv_netview_offsetfromdp(8609848);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_m_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->m_axi_awburst.bind(*p_20_m_axi_awburst);
        p_20_m_axi_awburst->set_sv_netview_offsetfromdp(8609904);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_m_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->m_axi_awlock.bind(*p_20_m_axi_awlock);
        p_20_m_axi_awlock->set_sv_netview_offsetfromdp(8609960);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_m_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->m_axi_awcache.bind(*p_20_m_axi_awcache);
        p_20_m_axi_awcache->set_sv_netview_offsetfromdp(8610016);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_20_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_20->m_axi_awprot.bind(*p_20_m_axi_awprot);
        p_20_m_axi_awprot->set_sv_netview_offsetfromdp(8610072);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_m_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->m_axi_awqos.bind(*p_20_m_axi_awqos);
        p_20_m_axi_awqos->set_sv_netview_offsetfromdp(8610128);
        xsim_sc_channel<0, bool > *p_20_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_awvalid.bind(*p_20_m_axi_awvalid);
        p_20_m_axi_awvalid->set_sv_netview_offsetfromdp(8610184);
        xsim_sc_channel<0, bool > *p_20_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_awready.bind(*p_20_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m_axi_awready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_20_m_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_20->m_axi_wdata.bind(*p_20_m_axi_wdata);
        p_20_m_axi_wdata->set_sv_netview_offsetfromdp(8610296);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_20_m_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_20->m_axi_wstrb.bind(*p_20_m_axi_wstrb);
        p_20_m_axi_wstrb->set_sv_netview_offsetfromdp(8610352);
        xsim_sc_channel<0, bool > *p_20_m_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_wlast.bind(*p_20_m_axi_wlast);
        p_20_m_axi_wlast->set_sv_netview_offsetfromdp(8610408);
        xsim_sc_channel<0, bool > *p_20_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_wvalid.bind(*p_20_m_axi_wvalid);
        p_20_m_axi_wvalid->set_sv_netview_offsetfromdp(8610464);
        xsim_sc_channel<0, bool > *p_20_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_wready.bind(*p_20_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->m_axi_bresp.bind(*p_20_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_20_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_bvalid.bind(*p_20_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_20_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_bready.bind(*p_20_m_axi_bready);
        p_20_m_axi_bready->set_sv_netview_offsetfromdp(8610688);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_20_m_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_20->m_axi_araddr.bind(*p_20_m_axi_araddr);
        p_20_m_axi_araddr->set_sv_netview_offsetfromdp(8610744);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_m_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->m_axi_arlen.bind(*p_20_m_axi_arlen);
        p_20_m_axi_arlen->set_sv_netview_offsetfromdp(8610800);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_20_m_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_20->m_axi_arsize.bind(*p_20_m_axi_arsize);
        p_20_m_axi_arsize->set_sv_netview_offsetfromdp(8610856);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_m_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->m_axi_arburst.bind(*p_20_m_axi_arburst);
        p_20_m_axi_arburst->set_sv_netview_offsetfromdp(8610912);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_m_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->m_axi_arlock.bind(*p_20_m_axi_arlock);
        p_20_m_axi_arlock->set_sv_netview_offsetfromdp(8610968);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_m_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->m_axi_arcache.bind(*p_20_m_axi_arcache);
        p_20_m_axi_arcache->set_sv_netview_offsetfromdp(8611024);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_20_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_20->m_axi_arprot.bind(*p_20_m_axi_arprot);
        p_20_m_axi_arprot->set_sv_netview_offsetfromdp(8611080);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_m_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->m_axi_arqos.bind(*p_20_m_axi_arqos);
        p_20_m_axi_arqos->set_sv_netview_offsetfromdp(8611136);
        xsim_sc_channel<0, bool > *p_20_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_arvalid.bind(*p_20_m_axi_arvalid);
        p_20_m_axi_arvalid->set_sv_netview_offsetfromdp(8611192);
        xsim_sc_channel<0, bool > *p_20_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_arready.bind(*p_20_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m_axi_arready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_20_m_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_20->m_axi_rdata.bind(*p_20_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->m_axi_rresp.bind(*p_20_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_20_m_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_rlast.bind(*p_20_m_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m_axi_rlast);
        xsim_sc_channel<0, bool > *p_20_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_rvalid.bind(*p_20_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_20_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_rready.bind(*p_20_m_axi_rready);
        p_20_m_axi_rready->set_sv_netview_offsetfromdp(8611528);
        sc_inst_21 = new bd_5dca_interconnect2_1_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.hmss_0.inst.path_1.interconnect2_1");
        sc_inst_21->xsim_set_dbg_index(2221);
        xsim_sc_channel<0, bool > *p_21_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_21->aclk.bind(*p_21_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_21_aclk);
        xsim_sc_channel<0, bool > *p_21_aclk1 = new xsim_sc_channel<0, bool >();
        sc_inst_21->aclk1.bind(*p_21_aclk1);
        (*_glb_hdl_sc_channel_map).push_back(p_21_aclk1);
        xsim_sc_channel<0, bool > *p_21_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_21->aresetn.bind(*p_21_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_21_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_21_S00_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_21->S00_AXI_arid.bind(*p_21_S00_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_21_S00_AXI_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_21_S00_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_21->S00_AXI_araddr.bind(*p_21_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_21_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_21_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_21->S00_AXI_arlen.bind(*p_21_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_21_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_21_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_21->S00_AXI_arsize.bind(*p_21_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_21_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->S00_AXI_arburst.bind(*p_21_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_21_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_21_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_21->S00_AXI_arlock.bind(*p_21_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_21_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->S00_AXI_arcache.bind(*p_21_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_21_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_21_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_21->S00_AXI_arprot.bind(*p_21_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_21_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->S00_AXI_arqos.bind(*p_21_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_21_S00_AXI_arqos);
        xsim_sc_channel<0, bool > *p_21_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_21->S00_AXI_arvalid.bind(*p_21_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_21_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_21_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_21->S00_AXI_arready.bind(*p_21_S00_AXI_arready);
        p_21_S00_AXI_arready->set_sv_netview_offsetfromdp(8655448);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_21_S00_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_21->S00_AXI_rid.bind(*p_21_S00_AXI_rid);
        p_21_S00_AXI_rid->set_sv_netview_offsetfromdp(8655504);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_21_S00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_21->S00_AXI_rdata.bind(*p_21_S00_AXI_rdata);
        p_21_S00_AXI_rdata->set_sv_netview_offsetfromdp(8655560);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->S00_AXI_rresp.bind(*p_21_S00_AXI_rresp);
        p_21_S00_AXI_rresp->set_sv_netview_offsetfromdp(8655616);
        xsim_sc_channel<0, bool > *p_21_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_21->S00_AXI_rlast.bind(*p_21_S00_AXI_rlast);
        p_21_S00_AXI_rlast->set_sv_netview_offsetfromdp(8655672);
        xsim_sc_channel<0, bool > *p_21_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_21->S00_AXI_rvalid.bind(*p_21_S00_AXI_rvalid);
        p_21_S00_AXI_rvalid->set_sv_netview_offsetfromdp(8655728);
        xsim_sc_channel<0, bool > *p_21_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_21->S00_AXI_rready.bind(*p_21_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_21_S00_AXI_rready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_21_M00_AXI_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_21->M00_AXI_araddr.bind(*p_21_M00_AXI_araddr);
        p_21_M00_AXI_araddr->set_sv_netview_offsetfromdp(8655840);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_M00_AXI_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->M00_AXI_arlen.bind(*p_21_M00_AXI_arlen);
        p_21_M00_AXI_arlen->set_sv_netview_offsetfromdp(8655896);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_21_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_21->M00_AXI_arsize.bind(*p_21_M00_AXI_arsize);
        p_21_M00_AXI_arsize->set_sv_netview_offsetfromdp(8655952);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->M00_AXI_arburst.bind(*p_21_M00_AXI_arburst);
        p_21_M00_AXI_arburst->set_sv_netview_offsetfromdp(8656008);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_M00_AXI_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->M00_AXI_arlock.bind(*p_21_M00_AXI_arlock);
        p_21_M00_AXI_arlock->set_sv_netview_offsetfromdp(8656064);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->M00_AXI_arcache.bind(*p_21_M00_AXI_arcache);
        p_21_M00_AXI_arcache->set_sv_netview_offsetfromdp(8656120);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_21_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_21->M00_AXI_arprot.bind(*p_21_M00_AXI_arprot);
        p_21_M00_AXI_arprot->set_sv_netview_offsetfromdp(8656176);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->M00_AXI_arqos.bind(*p_21_M00_AXI_arqos);
        p_21_M00_AXI_arqos->set_sv_netview_offsetfromdp(8656232);
        xsim_sc_channel<0, bool > *p_21_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_21->M00_AXI_arvalid.bind(*p_21_M00_AXI_arvalid);
        p_21_M00_AXI_arvalid->set_sv_netview_offsetfromdp(8656288);
        xsim_sc_channel<0, bool > *p_21_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_21->M00_AXI_arready.bind(*p_21_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_21_M00_AXI_arready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_21_M00_AXI_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_21->M00_AXI_rdata.bind(*p_21_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_21_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->M00_AXI_rresp.bind(*p_21_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_21_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_21_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_21->M00_AXI_rlast.bind(*p_21_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_21_M00_AXI_rlast);
        xsim_sc_channel<0, bool > *p_21_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_21->M00_AXI_rvalid.bind(*p_21_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_21_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_21_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_21->M00_AXI_rready.bind(*p_21_M00_AXI_rready);
        p_21_M00_AXI_rready->set_sv_netview_offsetfromdp(8656624);
        sc_inst_22 = new bd_5dca_slice2_1_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.hmss_0.inst.path_1.slice2_1");
        sc_inst_22->xsim_set_dbg_index(2222);
        xsim_sc_channel<0, bool > *p_22_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_22->aclk.bind(*p_22_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_22_aclk);
        xsim_sc_channel<0, bool > *p_22_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_22->aresetn.bind(*p_22_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_22_aresetn);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_22_s_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_22->s_axi_awaddr.bind(*p_22_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_awaddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_s_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->s_axi_awlen.bind(*p_22_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_22_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_22->s_axi_awsize.bind(*p_22_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->s_axi_awburst.bind(*p_22_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_awburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_s_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->s_axi_awlock.bind(*p_22_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->s_axi_awcache.bind(*p_22_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_22_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_22->s_axi_awprot.bind(*p_22_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->s_axi_awqos.bind(*p_22_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_awqos);
        xsim_sc_channel<0, bool > *p_22_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_awvalid.bind(*p_22_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_22_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_awready.bind(*p_22_s_axi_awready);
        p_22_s_axi_awready->set_sv_netview_offsetfromdp(8657344);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_22_s_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_22->s_axi_wdata.bind(*p_22_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_wdata);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_22_s_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_22->s_axi_wstrb.bind(*p_22_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_22_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_wlast.bind(*p_22_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_22_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_wvalid.bind(*p_22_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_22_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_wready.bind(*p_22_s_axi_wready);
        p_22_s_axi_wready->set_sv_netview_offsetfromdp(8657624);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->s_axi_bresp.bind(*p_22_s_axi_bresp);
        p_22_s_axi_bresp->set_sv_netview_offsetfromdp(8657680);
        xsim_sc_channel<0, bool > *p_22_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_bvalid.bind(*p_22_s_axi_bvalid);
        p_22_s_axi_bvalid->set_sv_netview_offsetfromdp(8657736);
        xsim_sc_channel<0, bool > *p_22_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_bready.bind(*p_22_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_bready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_22_s_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_22->s_axi_araddr.bind(*p_22_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_araddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_s_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->s_axi_arlen.bind(*p_22_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_22_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_22->s_axi_arsize.bind(*p_22_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->s_axi_arburst.bind(*p_22_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_arburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_s_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->s_axi_arlock.bind(*p_22_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->s_axi_arcache.bind(*p_22_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_22_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_22->s_axi_arprot.bind(*p_22_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->s_axi_arqos.bind(*p_22_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_arqos);
        xsim_sc_channel<0, bool > *p_22_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_arvalid.bind(*p_22_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_22_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_arready.bind(*p_22_s_axi_arready);
        p_22_s_axi_arready->set_sv_netview_offsetfromdp(8658352);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_22_s_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_22->s_axi_rdata.bind(*p_22_s_axi_rdata);
        p_22_s_axi_rdata->set_sv_netview_offsetfromdp(8658408);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->s_axi_rresp.bind(*p_22_s_axi_rresp);
        p_22_s_axi_rresp->set_sv_netview_offsetfromdp(8658464);
        xsim_sc_channel<0, bool > *p_22_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_rlast.bind(*p_22_s_axi_rlast);
        p_22_s_axi_rlast->set_sv_netview_offsetfromdp(8658520);
        xsim_sc_channel<0, bool > *p_22_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_rvalid.bind(*p_22_s_axi_rvalid);
        p_22_s_axi_rvalid->set_sv_netview_offsetfromdp(8658576);
        xsim_sc_channel<0, bool > *p_22_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_rready.bind(*p_22_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_rready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_22_m_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_22->m_axi_awaddr.bind(*p_22_m_axi_awaddr);
        p_22_m_axi_awaddr->set_sv_netview_offsetfromdp(8658688);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_m_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->m_axi_awlen.bind(*p_22_m_axi_awlen);
        p_22_m_axi_awlen->set_sv_netview_offsetfromdp(8658744);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_22_m_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_22->m_axi_awsize.bind(*p_22_m_axi_awsize);
        p_22_m_axi_awsize->set_sv_netview_offsetfromdp(8658800);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_m_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->m_axi_awburst.bind(*p_22_m_axi_awburst);
        p_22_m_axi_awburst->set_sv_netview_offsetfromdp(8658856);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_m_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->m_axi_awlock.bind(*p_22_m_axi_awlock);
        p_22_m_axi_awlock->set_sv_netview_offsetfromdp(8658912);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_m_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->m_axi_awcache.bind(*p_22_m_axi_awcache);
        p_22_m_axi_awcache->set_sv_netview_offsetfromdp(8658968);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_22_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_22->m_axi_awprot.bind(*p_22_m_axi_awprot);
        p_22_m_axi_awprot->set_sv_netview_offsetfromdp(8659024);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_m_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->m_axi_awqos.bind(*p_22_m_axi_awqos);
        p_22_m_axi_awqos->set_sv_netview_offsetfromdp(8659080);
        xsim_sc_channel<0, bool > *p_22_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axi_awvalid.bind(*p_22_m_axi_awvalid);
        p_22_m_axi_awvalid->set_sv_netview_offsetfromdp(8659136);
        xsim_sc_channel<0, bool > *p_22_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axi_awready.bind(*p_22_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_22_m_axi_awready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_22_m_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_22->m_axi_wdata.bind(*p_22_m_axi_wdata);
        p_22_m_axi_wdata->set_sv_netview_offsetfromdp(8659248);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_22_m_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_22->m_axi_wstrb.bind(*p_22_m_axi_wstrb);
        p_22_m_axi_wstrb->set_sv_netview_offsetfromdp(8659304);
        xsim_sc_channel<0, bool > *p_22_m_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axi_wlast.bind(*p_22_m_axi_wlast);
        p_22_m_axi_wlast->set_sv_netview_offsetfromdp(8659360);
        xsim_sc_channel<0, bool > *p_22_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axi_wvalid.bind(*p_22_m_axi_wvalid);
        p_22_m_axi_wvalid->set_sv_netview_offsetfromdp(8659416);
        xsim_sc_channel<0, bool > *p_22_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axi_wready.bind(*p_22_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_22_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->m_axi_bresp.bind(*p_22_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_22_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_22_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axi_bvalid.bind(*p_22_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_22_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_22_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axi_bready.bind(*p_22_m_axi_bready);
        p_22_m_axi_bready->set_sv_netview_offsetfromdp(8659640);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_22_m_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_22->m_axi_araddr.bind(*p_22_m_axi_araddr);
        p_22_m_axi_araddr->set_sv_netview_offsetfromdp(8659696);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_m_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->m_axi_arlen.bind(*p_22_m_axi_arlen);
        p_22_m_axi_arlen->set_sv_netview_offsetfromdp(8659752);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_22_m_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_22->m_axi_arsize.bind(*p_22_m_axi_arsize);
        p_22_m_axi_arsize->set_sv_netview_offsetfromdp(8659808);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_m_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->m_axi_arburst.bind(*p_22_m_axi_arburst);
        p_22_m_axi_arburst->set_sv_netview_offsetfromdp(8659864);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_m_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->m_axi_arlock.bind(*p_22_m_axi_arlock);
        p_22_m_axi_arlock->set_sv_netview_offsetfromdp(8659920);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_m_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->m_axi_arcache.bind(*p_22_m_axi_arcache);
        p_22_m_axi_arcache->set_sv_netview_offsetfromdp(8659976);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_22_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_22->m_axi_arprot.bind(*p_22_m_axi_arprot);
        p_22_m_axi_arprot->set_sv_netview_offsetfromdp(8660032);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_m_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->m_axi_arqos.bind(*p_22_m_axi_arqos);
        p_22_m_axi_arqos->set_sv_netview_offsetfromdp(8660088);
        xsim_sc_channel<0, bool > *p_22_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axi_arvalid.bind(*p_22_m_axi_arvalid);
        p_22_m_axi_arvalid->set_sv_netview_offsetfromdp(8660144);
        xsim_sc_channel<0, bool > *p_22_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axi_arready.bind(*p_22_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_22_m_axi_arready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_22_m_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_22->m_axi_rdata.bind(*p_22_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_22_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->m_axi_rresp.bind(*p_22_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_22_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_22_m_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axi_rlast.bind(*p_22_m_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_22_m_axi_rlast);
        xsim_sc_channel<0, bool > *p_22_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axi_rvalid.bind(*p_22_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_22_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_22_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axi_rready.bind(*p_22_m_axi_rready);
        p_22_m_axi_rready->set_sv_netview_offsetfromdp(8660480);
        sc_inst_23 = new bd_5dca_interconnect0_2_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.hmss_0.inst.path_2.interconnect0_2");
        sc_inst_23->xsim_set_dbg_index(2275);
        xsim_sc_channel<0, bool > *p_23_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_23->aclk.bind(*p_23_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_23_aclk);
        xsim_sc_channel<0, bool > *p_23_aclk1 = new xsim_sc_channel<0, bool >();
        sc_inst_23->aclk1.bind(*p_23_aclk1);
        (*_glb_hdl_sc_channel_map).push_back(p_23_aclk1);
        xsim_sc_channel<0, bool > *p_23_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_23->aresetn.bind(*p_23_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_23_aresetn);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_23_S00_AXI_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_23->S00_AXI_awaddr.bind(*p_23_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_23_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_23->S00_AXI_awlen.bind(*p_23_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->S00_AXI_awsize.bind(*p_23_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->S00_AXI_awburst.bind(*p_23_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_S00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->S00_AXI_awlock.bind(*p_23_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->S00_AXI_awcache.bind(*p_23_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->S00_AXI_awprot.bind(*p_23_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->S00_AXI_awqos.bind(*p_23_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_awqos);
        xsim_sc_channel<0, bool > *p_23_S00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->S00_AXI_awvalid.bind(*p_23_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_23_S00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_23->S00_AXI_awready.bind(*p_23_S00_AXI_awready);
        p_23_S00_AXI_awready->set_sv_netview_offsetfromdp(8722648);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_23_S00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_23->S00_AXI_wdata.bind(*p_23_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_23_S00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_23->S00_AXI_wstrb.bind(*p_23_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_23_S00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_23->S00_AXI_wlast.bind(*p_23_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_wlast);
        xsim_sc_channel<0, bool > *p_23_S00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->S00_AXI_wvalid.bind(*p_23_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_23_S00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_23->S00_AXI_wready.bind(*p_23_S00_AXI_wready);
        p_23_S00_AXI_wready->set_sv_netview_offsetfromdp(8722928);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->S00_AXI_bresp.bind(*p_23_S00_AXI_bresp);
        p_23_S00_AXI_bresp->set_sv_netview_offsetfromdp(8722984);
        xsim_sc_channel<0, bool > *p_23_S00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->S00_AXI_bvalid.bind(*p_23_S00_AXI_bvalid);
        p_23_S00_AXI_bvalid->set_sv_netview_offsetfromdp(8723040);
        xsim_sc_channel<0, bool > *p_23_S00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_23->S00_AXI_bready.bind(*p_23_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_bready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_23_S00_AXI_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_23->S00_AXI_araddr.bind(*p_23_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_23_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_23->S00_AXI_arlen.bind(*p_23_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->S00_AXI_arsize.bind(*p_23_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->S00_AXI_arburst.bind(*p_23_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->S00_AXI_arlock.bind(*p_23_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->S00_AXI_arcache.bind(*p_23_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->S00_AXI_arprot.bind(*p_23_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->S00_AXI_arqos.bind(*p_23_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_arqos);
        xsim_sc_channel<0, bool > *p_23_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->S00_AXI_arvalid.bind(*p_23_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_23_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_23->S00_AXI_arready.bind(*p_23_S00_AXI_arready);
        p_23_S00_AXI_arready->set_sv_netview_offsetfromdp(8723656);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_23_S00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_23->S00_AXI_rdata.bind(*p_23_S00_AXI_rdata);
        p_23_S00_AXI_rdata->set_sv_netview_offsetfromdp(8723712);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->S00_AXI_rresp.bind(*p_23_S00_AXI_rresp);
        p_23_S00_AXI_rresp->set_sv_netview_offsetfromdp(8723768);
        xsim_sc_channel<0, bool > *p_23_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_23->S00_AXI_rlast.bind(*p_23_S00_AXI_rlast);
        p_23_S00_AXI_rlast->set_sv_netview_offsetfromdp(8723824);
        xsim_sc_channel<0, bool > *p_23_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->S00_AXI_rvalid.bind(*p_23_S00_AXI_rvalid);
        p_23_S00_AXI_rvalid->set_sv_netview_offsetfromdp(8723880);
        xsim_sc_channel<0, bool > *p_23_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_23->S00_AXI_rready.bind(*p_23_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_rready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_23_M00_AXI_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_23->M00_AXI_awaddr.bind(*p_23_M00_AXI_awaddr);
        p_23_M00_AXI_awaddr->set_sv_netview_offsetfromdp(8723992);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_M00_AXI_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->M00_AXI_awlen.bind(*p_23_M00_AXI_awlen);
        p_23_M00_AXI_awlen->set_sv_netview_offsetfromdp(8724048);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->M00_AXI_awsize.bind(*p_23_M00_AXI_awsize);
        p_23_M00_AXI_awsize->set_sv_netview_offsetfromdp(8724104);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->M00_AXI_awburst.bind(*p_23_M00_AXI_awburst);
        p_23_M00_AXI_awburst->set_sv_netview_offsetfromdp(8724160);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_M00_AXI_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->M00_AXI_awlock.bind(*p_23_M00_AXI_awlock);
        p_23_M00_AXI_awlock->set_sv_netview_offsetfromdp(8724216);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->M00_AXI_awcache.bind(*p_23_M00_AXI_awcache);
        p_23_M00_AXI_awcache->set_sv_netview_offsetfromdp(8724272);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->M00_AXI_awprot.bind(*p_23_M00_AXI_awprot);
        p_23_M00_AXI_awprot->set_sv_netview_offsetfromdp(8724328);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->M00_AXI_awqos.bind(*p_23_M00_AXI_awqos);
        p_23_M00_AXI_awqos->set_sv_netview_offsetfromdp(8724384);
        xsim_sc_channel<0, bool > *p_23_M00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->M00_AXI_awvalid.bind(*p_23_M00_AXI_awvalid);
        p_23_M00_AXI_awvalid->set_sv_netview_offsetfromdp(8724440);
        xsim_sc_channel<0, bool > *p_23_M00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_23->M00_AXI_awready.bind(*p_23_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_23_M00_AXI_awready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_23_M00_AXI_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_23->M00_AXI_wdata.bind(*p_23_M00_AXI_wdata);
        p_23_M00_AXI_wdata->set_sv_netview_offsetfromdp(8724552);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_23_M00_AXI_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_23->M00_AXI_wstrb.bind(*p_23_M00_AXI_wstrb);
        p_23_M00_AXI_wstrb->set_sv_netview_offsetfromdp(8724608);
        xsim_sc_channel<0, bool > *p_23_M00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_23->M00_AXI_wlast.bind(*p_23_M00_AXI_wlast);
        p_23_M00_AXI_wlast->set_sv_netview_offsetfromdp(8724664);
        xsim_sc_channel<0, bool > *p_23_M00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->M00_AXI_wvalid.bind(*p_23_M00_AXI_wvalid);
        p_23_M00_AXI_wvalid->set_sv_netview_offsetfromdp(8724720);
        xsim_sc_channel<0, bool > *p_23_M00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_23->M00_AXI_wready.bind(*p_23_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_23_M00_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->M00_AXI_bresp.bind(*p_23_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_23_M00_AXI_bresp);
        xsim_sc_channel<0, bool > *p_23_M00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->M00_AXI_bvalid.bind(*p_23_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_23_M00_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_23_M00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_23->M00_AXI_bready.bind(*p_23_M00_AXI_bready);
        p_23_M00_AXI_bready->set_sv_netview_offsetfromdp(8724944);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_23_M00_AXI_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_23->M00_AXI_araddr.bind(*p_23_M00_AXI_araddr);
        p_23_M00_AXI_araddr->set_sv_netview_offsetfromdp(8725000);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_M00_AXI_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->M00_AXI_arlen.bind(*p_23_M00_AXI_arlen);
        p_23_M00_AXI_arlen->set_sv_netview_offsetfromdp(8725056);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->M00_AXI_arsize.bind(*p_23_M00_AXI_arsize);
        p_23_M00_AXI_arsize->set_sv_netview_offsetfromdp(8725112);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->M00_AXI_arburst.bind(*p_23_M00_AXI_arburst);
        p_23_M00_AXI_arburst->set_sv_netview_offsetfromdp(8725168);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_M00_AXI_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->M00_AXI_arlock.bind(*p_23_M00_AXI_arlock);
        p_23_M00_AXI_arlock->set_sv_netview_offsetfromdp(8725224);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->M00_AXI_arcache.bind(*p_23_M00_AXI_arcache);
        p_23_M00_AXI_arcache->set_sv_netview_offsetfromdp(8725280);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->M00_AXI_arprot.bind(*p_23_M00_AXI_arprot);
        p_23_M00_AXI_arprot->set_sv_netview_offsetfromdp(8725336);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->M00_AXI_arqos.bind(*p_23_M00_AXI_arqos);
        p_23_M00_AXI_arqos->set_sv_netview_offsetfromdp(8725392);
        xsim_sc_channel<0, bool > *p_23_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->M00_AXI_arvalid.bind(*p_23_M00_AXI_arvalid);
        p_23_M00_AXI_arvalid->set_sv_netview_offsetfromdp(8725448);
        xsim_sc_channel<0, bool > *p_23_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_23->M00_AXI_arready.bind(*p_23_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_23_M00_AXI_arready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_23_M00_AXI_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_23->M00_AXI_rdata.bind(*p_23_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_23_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->M00_AXI_rresp.bind(*p_23_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_23_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_23_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_23->M00_AXI_rlast.bind(*p_23_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_23_M00_AXI_rlast);
        xsim_sc_channel<0, bool > *p_23_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->M00_AXI_rvalid.bind(*p_23_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_23_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_23_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_23->M00_AXI_rready.bind(*p_23_M00_AXI_rready);
        p_23_M00_AXI_rready->set_sv_netview_offsetfromdp(8725784);
        sc_inst_24 = new bd_5dca_slice0_2_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.hmss_0.inst.path_2.slice0_2");
        sc_inst_24->xsim_set_dbg_index(2276);
        xsim_sc_channel<0, bool > *p_24_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_24->aclk.bind(*p_24_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_24_aclk);
        xsim_sc_channel<0, bool > *p_24_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_24->aresetn.bind(*p_24_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_24_aresetn);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_24_s_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_24->s_axi_awaddr.bind(*p_24_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_awaddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_24_s_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_24->s_axi_awlen.bind(*p_24_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_24_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_24->s_axi_awsize.bind(*p_24_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_24_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_24->s_axi_awburst.bind(*p_24_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_awburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_24_s_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_24->s_axi_awlock.bind(*p_24_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_24_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_24->s_axi_awcache.bind(*p_24_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_24_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_24->s_axi_awprot.bind(*p_24_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_24_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_24->s_axi_awqos.bind(*p_24_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_awqos);
        xsim_sc_channel<0, bool > *p_24_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_24->s_axi_awvalid.bind(*p_24_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_24_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_24->s_axi_awready.bind(*p_24_s_axi_awready);
        p_24_s_axi_awready->set_sv_netview_offsetfromdp(8726504);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_24_s_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_24->s_axi_wdata.bind(*p_24_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_wdata);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_24_s_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_24->s_axi_wstrb.bind(*p_24_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_24_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_24->s_axi_wlast.bind(*p_24_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_24_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_24->s_axi_wvalid.bind(*p_24_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_24_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_24->s_axi_wready.bind(*p_24_s_axi_wready);
        p_24_s_axi_wready->set_sv_netview_offsetfromdp(8726784);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_24_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_24->s_axi_bresp.bind(*p_24_s_axi_bresp);
        p_24_s_axi_bresp->set_sv_netview_offsetfromdp(8726840);
        xsim_sc_channel<0, bool > *p_24_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_24->s_axi_bvalid.bind(*p_24_s_axi_bvalid);
        p_24_s_axi_bvalid->set_sv_netview_offsetfromdp(8726896);
        xsim_sc_channel<0, bool > *p_24_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_24->s_axi_bready.bind(*p_24_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_bready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_24_s_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_24->s_axi_araddr.bind(*p_24_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_araddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_24_s_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_24->s_axi_arlen.bind(*p_24_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_24_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_24->s_axi_arsize.bind(*p_24_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_24_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_24->s_axi_arburst.bind(*p_24_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_arburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_24_s_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_24->s_axi_arlock.bind(*p_24_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_24_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_24->s_axi_arcache.bind(*p_24_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_24_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_24->s_axi_arprot.bind(*p_24_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_24_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_24->s_axi_arqos.bind(*p_24_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_arqos);
        xsim_sc_channel<0, bool > *p_24_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_24->s_axi_arvalid.bind(*p_24_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_24_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_24->s_axi_arready.bind(*p_24_s_axi_arready);
        p_24_s_axi_arready->set_sv_netview_offsetfromdp(8727512);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_24_s_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_24->s_axi_rdata.bind(*p_24_s_axi_rdata);
        p_24_s_axi_rdata->set_sv_netview_offsetfromdp(8727568);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_24_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_24->s_axi_rresp.bind(*p_24_s_axi_rresp);
        p_24_s_axi_rresp->set_sv_netview_offsetfromdp(8727624);
        xsim_sc_channel<0, bool > *p_24_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_24->s_axi_rlast.bind(*p_24_s_axi_rlast);
        p_24_s_axi_rlast->set_sv_netview_offsetfromdp(8727680);
        xsim_sc_channel<0, bool > *p_24_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_24->s_axi_rvalid.bind(*p_24_s_axi_rvalid);
        p_24_s_axi_rvalid->set_sv_netview_offsetfromdp(8727736);
        xsim_sc_channel<0, bool > *p_24_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_24->s_axi_rready.bind(*p_24_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_rready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_24_m_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_24->m_axi_awaddr.bind(*p_24_m_axi_awaddr);
        p_24_m_axi_awaddr->set_sv_netview_offsetfromdp(8727848);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_24_m_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_24->m_axi_awlen.bind(*p_24_m_axi_awlen);
        p_24_m_axi_awlen->set_sv_netview_offsetfromdp(8727904);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_24_m_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_24->m_axi_awsize.bind(*p_24_m_axi_awsize);
        p_24_m_axi_awsize->set_sv_netview_offsetfromdp(8727960);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_24_m_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_24->m_axi_awburst.bind(*p_24_m_axi_awburst);
        p_24_m_axi_awburst->set_sv_netview_offsetfromdp(8728016);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_24_m_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_24->m_axi_awlock.bind(*p_24_m_axi_awlock);
        p_24_m_axi_awlock->set_sv_netview_offsetfromdp(8728072);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_24_m_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_24->m_axi_awcache.bind(*p_24_m_axi_awcache);
        p_24_m_axi_awcache->set_sv_netview_offsetfromdp(8728128);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_24_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_24->m_axi_awprot.bind(*p_24_m_axi_awprot);
        p_24_m_axi_awprot->set_sv_netview_offsetfromdp(8728184);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_24_m_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_24->m_axi_awqos.bind(*p_24_m_axi_awqos);
        p_24_m_axi_awqos->set_sv_netview_offsetfromdp(8728240);
        xsim_sc_channel<0, bool > *p_24_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_axi_awvalid.bind(*p_24_m_axi_awvalid);
        p_24_m_axi_awvalid->set_sv_netview_offsetfromdp(8728296);
        xsim_sc_channel<0, bool > *p_24_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_axi_awready.bind(*p_24_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_24_m_axi_awready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_24_m_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_24->m_axi_wdata.bind(*p_24_m_axi_wdata);
        p_24_m_axi_wdata->set_sv_netview_offsetfromdp(8728408);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_24_m_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_24->m_axi_wstrb.bind(*p_24_m_axi_wstrb);
        p_24_m_axi_wstrb->set_sv_netview_offsetfromdp(8728464);
        xsim_sc_channel<0, bool > *p_24_m_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_axi_wlast.bind(*p_24_m_axi_wlast);
        p_24_m_axi_wlast->set_sv_netview_offsetfromdp(8728520);
        xsim_sc_channel<0, bool > *p_24_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_axi_wvalid.bind(*p_24_m_axi_wvalid);
        p_24_m_axi_wvalid->set_sv_netview_offsetfromdp(8728576);
        xsim_sc_channel<0, bool > *p_24_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_axi_wready.bind(*p_24_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_24_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_24_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_24->m_axi_bresp.bind(*p_24_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_24_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_24_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_axi_bvalid.bind(*p_24_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_24_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_24_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_axi_bready.bind(*p_24_m_axi_bready);
        p_24_m_axi_bready->set_sv_netview_offsetfromdp(8728800);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_24_m_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_24->m_axi_araddr.bind(*p_24_m_axi_araddr);
        p_24_m_axi_araddr->set_sv_netview_offsetfromdp(8728856);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_24_m_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_24->m_axi_arlen.bind(*p_24_m_axi_arlen);
        p_24_m_axi_arlen->set_sv_netview_offsetfromdp(8728912);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_24_m_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_24->m_axi_arsize.bind(*p_24_m_axi_arsize);
        p_24_m_axi_arsize->set_sv_netview_offsetfromdp(8728968);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_24_m_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_24->m_axi_arburst.bind(*p_24_m_axi_arburst);
        p_24_m_axi_arburst->set_sv_netview_offsetfromdp(8729024);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_24_m_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_24->m_axi_arlock.bind(*p_24_m_axi_arlock);
        p_24_m_axi_arlock->set_sv_netview_offsetfromdp(8729080);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_24_m_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_24->m_axi_arcache.bind(*p_24_m_axi_arcache);
        p_24_m_axi_arcache->set_sv_netview_offsetfromdp(8729136);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_24_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_24->m_axi_arprot.bind(*p_24_m_axi_arprot);
        p_24_m_axi_arprot->set_sv_netview_offsetfromdp(8729192);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_24_m_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_24->m_axi_arqos.bind(*p_24_m_axi_arqos);
        p_24_m_axi_arqos->set_sv_netview_offsetfromdp(8729248);
        xsim_sc_channel<0, bool > *p_24_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_axi_arvalid.bind(*p_24_m_axi_arvalid);
        p_24_m_axi_arvalid->set_sv_netview_offsetfromdp(8729304);
        xsim_sc_channel<0, bool > *p_24_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_axi_arready.bind(*p_24_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_24_m_axi_arready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_24_m_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_24->m_axi_rdata.bind(*p_24_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_24_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_24_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_24->m_axi_rresp.bind(*p_24_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_24_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_24_m_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_axi_rlast.bind(*p_24_m_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_24_m_axi_rlast);
        xsim_sc_channel<0, bool > *p_24_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_axi_rvalid.bind(*p_24_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_24_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_24_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_axi_rready.bind(*p_24_m_axi_rready);
        p_24_m_axi_rready->set_sv_netview_offsetfromdp(8729640);
        sc_inst_25 = new bd_5dca_vip_S00_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.hmss_0.inst.vip_S00");
        sc_inst_25->xsim_set_dbg_index(924);
        xsim_sc_channel<0, bool > *p_25_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_25->aclk.bind(*p_25_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_25_aclk);
        xsim_sc_channel<0, bool > *p_25_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_25->aresetn.bind(*p_25_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_25_aresetn);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_25_s_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_25->s_axi_awaddr.bind(*p_25_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_awaddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_25_s_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_25->s_axi_awlen.bind(*p_25_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_awlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_25_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_25->s_axi_awburst.bind(*p_25_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_awburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_25_s_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_25->s_axi_awlock.bind(*p_25_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_25_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_25->s_axi_awcache.bind(*p_25_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_25_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_25->s_axi_awprot.bind(*p_25_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_25_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_25->s_axi_awqos.bind(*p_25_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_awqos);
        xsim_sc_channel<0, bool > *p_25_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_axi_awvalid.bind(*p_25_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_25_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_axi_awready.bind(*p_25_s_axi_awready);
        p_25_s_axi_awready->set_sv_netview_offsetfromdp(8730304);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_25_s_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_25->s_axi_wdata.bind(*p_25_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_wdata);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_25_s_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_25->s_axi_wstrb.bind(*p_25_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_25_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_axi_wlast.bind(*p_25_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_25_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_axi_wvalid.bind(*p_25_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_25_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_axi_wready.bind(*p_25_s_axi_wready);
        p_25_s_axi_wready->set_sv_netview_offsetfromdp(8730584);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_25_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_25->s_axi_bresp.bind(*p_25_s_axi_bresp);
        p_25_s_axi_bresp->set_sv_netview_offsetfromdp(8730640);
        xsim_sc_channel<0, bool > *p_25_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_axi_bvalid.bind(*p_25_s_axi_bvalid);
        p_25_s_axi_bvalid->set_sv_netview_offsetfromdp(8730696);
        xsim_sc_channel<0, bool > *p_25_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_axi_bready.bind(*p_25_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_bready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_25_s_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_25->s_axi_araddr.bind(*p_25_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_araddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_25_s_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_25->s_axi_arlen.bind(*p_25_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_arlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_25_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_25->s_axi_arburst.bind(*p_25_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_arburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_25_s_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_25->s_axi_arlock.bind(*p_25_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_25_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_25->s_axi_arcache.bind(*p_25_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_25_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_25->s_axi_arprot.bind(*p_25_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_25_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_25->s_axi_arqos.bind(*p_25_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_arqos);
        xsim_sc_channel<0, bool > *p_25_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_axi_arvalid.bind(*p_25_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_25_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_axi_arready.bind(*p_25_s_axi_arready);
        p_25_s_axi_arready->set_sv_netview_offsetfromdp(8731256);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_25_s_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_25->s_axi_rdata.bind(*p_25_s_axi_rdata);
        p_25_s_axi_rdata->set_sv_netview_offsetfromdp(8731312);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_25_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_25->s_axi_rresp.bind(*p_25_s_axi_rresp);
        p_25_s_axi_rresp->set_sv_netview_offsetfromdp(8731368);
        xsim_sc_channel<0, bool > *p_25_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_axi_rlast.bind(*p_25_s_axi_rlast);
        p_25_s_axi_rlast->set_sv_netview_offsetfromdp(8731424);
        xsim_sc_channel<0, bool > *p_25_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_axi_rvalid.bind(*p_25_s_axi_rvalid);
        p_25_s_axi_rvalid->set_sv_netview_offsetfromdp(8731480);
        xsim_sc_channel<0, bool > *p_25_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_axi_rready.bind(*p_25_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_rready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_25_m_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_25->m_axi_awaddr.bind(*p_25_m_axi_awaddr);
        p_25_m_axi_awaddr->set_sv_netview_offsetfromdp(8731592);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_25_m_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_25->m_axi_awlen.bind(*p_25_m_axi_awlen);
        p_25_m_axi_awlen->set_sv_netview_offsetfromdp(8731648);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_25_m_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_25->m_axi_awburst.bind(*p_25_m_axi_awburst);
        p_25_m_axi_awburst->set_sv_netview_offsetfromdp(8731704);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_25_m_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_25->m_axi_awlock.bind(*p_25_m_axi_awlock);
        p_25_m_axi_awlock->set_sv_netview_offsetfromdp(8731760);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_25_m_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_25->m_axi_awcache.bind(*p_25_m_axi_awcache);
        p_25_m_axi_awcache->set_sv_netview_offsetfromdp(8731816);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_25_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_25->m_axi_awprot.bind(*p_25_m_axi_awprot);
        p_25_m_axi_awprot->set_sv_netview_offsetfromdp(8731872);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_25_m_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_25->m_axi_awqos.bind(*p_25_m_axi_awqos);
        p_25_m_axi_awqos->set_sv_netview_offsetfromdp(8731928);
        xsim_sc_channel<0, bool > *p_25_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_25->m_axi_awvalid.bind(*p_25_m_axi_awvalid);
        p_25_m_axi_awvalid->set_sv_netview_offsetfromdp(8731984);
        xsim_sc_channel<0, bool > *p_25_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_25->m_axi_awready.bind(*p_25_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_25_m_axi_awready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_25_m_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_25->m_axi_wdata.bind(*p_25_m_axi_wdata);
        p_25_m_axi_wdata->set_sv_netview_offsetfromdp(8732096);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_25_m_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_25->m_axi_wstrb.bind(*p_25_m_axi_wstrb);
        p_25_m_axi_wstrb->set_sv_netview_offsetfromdp(8732152);
        xsim_sc_channel<0, bool > *p_25_m_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_25->m_axi_wlast.bind(*p_25_m_axi_wlast);
        p_25_m_axi_wlast->set_sv_netview_offsetfromdp(8732208);
        xsim_sc_channel<0, bool > *p_25_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_25->m_axi_wvalid.bind(*p_25_m_axi_wvalid);
        p_25_m_axi_wvalid->set_sv_netview_offsetfromdp(8732264);
        xsim_sc_channel<0, bool > *p_25_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_25->m_axi_wready.bind(*p_25_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_25_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_25_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_25->m_axi_bresp.bind(*p_25_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_25_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_25_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_25->m_axi_bvalid.bind(*p_25_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_25_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_25_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_25->m_axi_bready.bind(*p_25_m_axi_bready);
        p_25_m_axi_bready->set_sv_netview_offsetfromdp(8732488);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_25_m_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_25->m_axi_araddr.bind(*p_25_m_axi_araddr);
        p_25_m_axi_araddr->set_sv_netview_offsetfromdp(8732544);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_25_m_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_25->m_axi_arlen.bind(*p_25_m_axi_arlen);
        p_25_m_axi_arlen->set_sv_netview_offsetfromdp(8732600);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_25_m_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_25->m_axi_arburst.bind(*p_25_m_axi_arburst);
        p_25_m_axi_arburst->set_sv_netview_offsetfromdp(8732656);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_25_m_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_25->m_axi_arlock.bind(*p_25_m_axi_arlock);
        p_25_m_axi_arlock->set_sv_netview_offsetfromdp(8732712);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_25_m_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_25->m_axi_arcache.bind(*p_25_m_axi_arcache);
        p_25_m_axi_arcache->set_sv_netview_offsetfromdp(8732768);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_25_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_25->m_axi_arprot.bind(*p_25_m_axi_arprot);
        p_25_m_axi_arprot->set_sv_netview_offsetfromdp(8732824);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_25_m_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_25->m_axi_arqos.bind(*p_25_m_axi_arqos);
        p_25_m_axi_arqos->set_sv_netview_offsetfromdp(8732880);
        xsim_sc_channel<0, bool > *p_25_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_25->m_axi_arvalid.bind(*p_25_m_axi_arvalid);
        p_25_m_axi_arvalid->set_sv_netview_offsetfromdp(8732936);
        xsim_sc_channel<0, bool > *p_25_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_25->m_axi_arready.bind(*p_25_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_25_m_axi_arready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_25_m_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_25->m_axi_rdata.bind(*p_25_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_25_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_25_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_25->m_axi_rresp.bind(*p_25_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_25_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_25_m_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_25->m_axi_rlast.bind(*p_25_m_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_25_m_axi_rlast);
        xsim_sc_channel<0, bool > *p_25_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_25->m_axi_rvalid.bind(*p_25_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_25_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_25_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_25->m_axi_rready.bind(*p_25_m_axi_rready);
        p_25_m_axi_rready->set_sv_netview_offsetfromdp(8733272);
        sc_inst_26 = new bd_5dca_vip_S01_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.hmss_0.inst.vip_S01");
        sc_inst_26->xsim_set_dbg_index(925);
        xsim_sc_channel<0, bool > *p_26_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_26->aclk.bind(*p_26_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_26_aclk);
        xsim_sc_channel<0, bool > *p_26_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_26->aresetn.bind(*p_26_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_26_aresetn);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_26_s_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_26->s_axi_awaddr.bind(*p_26_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_awaddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_s_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->s_axi_awlen.bind(*p_26_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_awlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_26_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_26->s_axi_awburst.bind(*p_26_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_awburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_26_s_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_26->s_axi_awlock.bind(*p_26_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->s_axi_awcache.bind(*p_26_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_26_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_26->s_axi_awprot.bind(*p_26_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->s_axi_awqos.bind(*p_26_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_awqos);
        xsim_sc_channel<0, bool > *p_26_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->s_axi_awvalid.bind(*p_26_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_26_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_26->s_axi_awready.bind(*p_26_s_axi_awready);
        p_26_s_axi_awready->set_sv_netview_offsetfromdp(8733936);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_26_s_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_26->s_axi_wdata.bind(*p_26_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_wdata);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_26_s_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_26->s_axi_wstrb.bind(*p_26_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_26_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_26->s_axi_wlast.bind(*p_26_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_26_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->s_axi_wvalid.bind(*p_26_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_26_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_26->s_axi_wready.bind(*p_26_s_axi_wready);
        p_26_s_axi_wready->set_sv_netview_offsetfromdp(8734216);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_26_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_26->s_axi_bresp.bind(*p_26_s_axi_bresp);
        p_26_s_axi_bresp->set_sv_netview_offsetfromdp(8734272);
        xsim_sc_channel<0, bool > *p_26_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->s_axi_bvalid.bind(*p_26_s_axi_bvalid);
        p_26_s_axi_bvalid->set_sv_netview_offsetfromdp(8734328);
        xsim_sc_channel<0, bool > *p_26_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_26->s_axi_bready.bind(*p_26_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_bready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_26_s_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_26->s_axi_araddr.bind(*p_26_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_araddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_s_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->s_axi_arlen.bind(*p_26_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_arlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_26_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_26->s_axi_arburst.bind(*p_26_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_arburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_26_s_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_26->s_axi_arlock.bind(*p_26_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->s_axi_arcache.bind(*p_26_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_26_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_26->s_axi_arprot.bind(*p_26_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->s_axi_arqos.bind(*p_26_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_arqos);
        xsim_sc_channel<0, bool > *p_26_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->s_axi_arvalid.bind(*p_26_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_26_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_26->s_axi_arready.bind(*p_26_s_axi_arready);
        p_26_s_axi_arready->set_sv_netview_offsetfromdp(8734888);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_26_s_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_26->s_axi_rdata.bind(*p_26_s_axi_rdata);
        p_26_s_axi_rdata->set_sv_netview_offsetfromdp(8734944);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_26_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_26->s_axi_rresp.bind(*p_26_s_axi_rresp);
        p_26_s_axi_rresp->set_sv_netview_offsetfromdp(8735000);
        xsim_sc_channel<0, bool > *p_26_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_26->s_axi_rlast.bind(*p_26_s_axi_rlast);
        p_26_s_axi_rlast->set_sv_netview_offsetfromdp(8735056);
        xsim_sc_channel<0, bool > *p_26_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->s_axi_rvalid.bind(*p_26_s_axi_rvalid);
        p_26_s_axi_rvalid->set_sv_netview_offsetfromdp(8735112);
        xsim_sc_channel<0, bool > *p_26_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_26->s_axi_rready.bind(*p_26_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_rready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_26_m_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_26->m_axi_awaddr.bind(*p_26_m_axi_awaddr);
        p_26_m_axi_awaddr->set_sv_netview_offsetfromdp(8735224);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_m_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->m_axi_awlen.bind(*p_26_m_axi_awlen);
        p_26_m_axi_awlen->set_sv_netview_offsetfromdp(8735280);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_26_m_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_26->m_axi_awburst.bind(*p_26_m_axi_awburst);
        p_26_m_axi_awburst->set_sv_netview_offsetfromdp(8735336);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_26_m_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_26->m_axi_awlock.bind(*p_26_m_axi_awlock);
        p_26_m_axi_awlock->set_sv_netview_offsetfromdp(8735392);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_m_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->m_axi_awcache.bind(*p_26_m_axi_awcache);
        p_26_m_axi_awcache->set_sv_netview_offsetfromdp(8735448);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_26_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_26->m_axi_awprot.bind(*p_26_m_axi_awprot);
        p_26_m_axi_awprot->set_sv_netview_offsetfromdp(8735504);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_m_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->m_axi_awqos.bind(*p_26_m_axi_awqos);
        p_26_m_axi_awqos->set_sv_netview_offsetfromdp(8735560);
        xsim_sc_channel<0, bool > *p_26_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->m_axi_awvalid.bind(*p_26_m_axi_awvalid);
        p_26_m_axi_awvalid->set_sv_netview_offsetfromdp(8735616);
        xsim_sc_channel<0, bool > *p_26_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_26->m_axi_awready.bind(*p_26_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_26_m_axi_awready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_26_m_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_26->m_axi_wdata.bind(*p_26_m_axi_wdata);
        p_26_m_axi_wdata->set_sv_netview_offsetfromdp(8735728);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_26_m_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_26->m_axi_wstrb.bind(*p_26_m_axi_wstrb);
        p_26_m_axi_wstrb->set_sv_netview_offsetfromdp(8735784);
        xsim_sc_channel<0, bool > *p_26_m_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_26->m_axi_wlast.bind(*p_26_m_axi_wlast);
        p_26_m_axi_wlast->set_sv_netview_offsetfromdp(8735840);
        xsim_sc_channel<0, bool > *p_26_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->m_axi_wvalid.bind(*p_26_m_axi_wvalid);
        p_26_m_axi_wvalid->set_sv_netview_offsetfromdp(8735896);
        xsim_sc_channel<0, bool > *p_26_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_26->m_axi_wready.bind(*p_26_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_26_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_26_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_26->m_axi_bresp.bind(*p_26_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_26_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_26_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->m_axi_bvalid.bind(*p_26_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_26_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_26_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_26->m_axi_bready.bind(*p_26_m_axi_bready);
        p_26_m_axi_bready->set_sv_netview_offsetfromdp(8736120);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_26_m_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_26->m_axi_araddr.bind(*p_26_m_axi_araddr);
        p_26_m_axi_araddr->set_sv_netview_offsetfromdp(8736176);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_m_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->m_axi_arlen.bind(*p_26_m_axi_arlen);
        p_26_m_axi_arlen->set_sv_netview_offsetfromdp(8736232);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_26_m_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_26->m_axi_arburst.bind(*p_26_m_axi_arburst);
        p_26_m_axi_arburst->set_sv_netview_offsetfromdp(8736288);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_26_m_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_26->m_axi_arlock.bind(*p_26_m_axi_arlock);
        p_26_m_axi_arlock->set_sv_netview_offsetfromdp(8736344);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_m_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->m_axi_arcache.bind(*p_26_m_axi_arcache);
        p_26_m_axi_arcache->set_sv_netview_offsetfromdp(8736400);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_26_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_26->m_axi_arprot.bind(*p_26_m_axi_arprot);
        p_26_m_axi_arprot->set_sv_netview_offsetfromdp(8736456);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_m_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->m_axi_arqos.bind(*p_26_m_axi_arqos);
        p_26_m_axi_arqos->set_sv_netview_offsetfromdp(8736512);
        xsim_sc_channel<0, bool > *p_26_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->m_axi_arvalid.bind(*p_26_m_axi_arvalid);
        p_26_m_axi_arvalid->set_sv_netview_offsetfromdp(8736568);
        xsim_sc_channel<0, bool > *p_26_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_26->m_axi_arready.bind(*p_26_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_26_m_axi_arready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_26_m_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_26->m_axi_rdata.bind(*p_26_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_26_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_26_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_26->m_axi_rresp.bind(*p_26_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_26_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_26_m_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_26->m_axi_rlast.bind(*p_26_m_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_26_m_axi_rlast);
        xsim_sc_channel<0, bool > *p_26_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->m_axi_rvalid.bind(*p_26_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_26_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_26_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_26->m_axi_rready.bind(*p_26_m_axi_rready);
        p_26_m_axi_rready->set_sv_netview_offsetfromdp(8736904);
        sc_inst_27 = new bd_5dca_vip_S02_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.hmss_0.inst.vip_S02");
        sc_inst_27->xsim_set_dbg_index(926);
        xsim_sc_channel<0, bool > *p_27_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_27->aclk.bind(*p_27_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_27_aclk);
        xsim_sc_channel<0, bool > *p_27_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_27->aresetn.bind(*p_27_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_27_aresetn);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_27_s_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_27->s_axi_awaddr.bind(*p_27_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_awaddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_27_s_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_27->s_axi_awlen.bind(*p_27_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_awlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_27_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_27->s_axi_awburst.bind(*p_27_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_awburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_27_s_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_27->s_axi_awlock.bind(*p_27_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_27_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_27->s_axi_awcache.bind(*p_27_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_27_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_27->s_axi_awprot.bind(*p_27_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_27_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_27->s_axi_awqos.bind(*p_27_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_awqos);
        xsim_sc_channel<0, bool > *p_27_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_27->s_axi_awvalid.bind(*p_27_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_27_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_27->s_axi_awready.bind(*p_27_s_axi_awready);
        p_27_s_axi_awready->set_sv_netview_offsetfromdp(8737568);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_27_s_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_27->s_axi_wdata.bind(*p_27_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_wdata);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_27_s_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_27->s_axi_wstrb.bind(*p_27_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_27_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_27->s_axi_wlast.bind(*p_27_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_27_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_27->s_axi_wvalid.bind(*p_27_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_27_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_27->s_axi_wready.bind(*p_27_s_axi_wready);
        p_27_s_axi_wready->set_sv_netview_offsetfromdp(8737848);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_27_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_27->s_axi_bresp.bind(*p_27_s_axi_bresp);
        p_27_s_axi_bresp->set_sv_netview_offsetfromdp(8737904);
        xsim_sc_channel<0, bool > *p_27_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_27->s_axi_bvalid.bind(*p_27_s_axi_bvalid);
        p_27_s_axi_bvalid->set_sv_netview_offsetfromdp(8737960);
        xsim_sc_channel<0, bool > *p_27_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_27->s_axi_bready.bind(*p_27_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_bready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_27_s_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_27->s_axi_araddr.bind(*p_27_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_araddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_27_s_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_27->s_axi_arlen.bind(*p_27_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_arlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_27_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_27->s_axi_arburst.bind(*p_27_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_arburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_27_s_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_27->s_axi_arlock.bind(*p_27_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_27_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_27->s_axi_arcache.bind(*p_27_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_27_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_27->s_axi_arprot.bind(*p_27_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_27_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_27->s_axi_arqos.bind(*p_27_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_arqos);
        xsim_sc_channel<0, bool > *p_27_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_27->s_axi_arvalid.bind(*p_27_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_27_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_27->s_axi_arready.bind(*p_27_s_axi_arready);
        p_27_s_axi_arready->set_sv_netview_offsetfromdp(8738520);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_27_s_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_27->s_axi_rdata.bind(*p_27_s_axi_rdata);
        p_27_s_axi_rdata->set_sv_netview_offsetfromdp(8738576);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_27_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_27->s_axi_rresp.bind(*p_27_s_axi_rresp);
        p_27_s_axi_rresp->set_sv_netview_offsetfromdp(8738632);
        xsim_sc_channel<0, bool > *p_27_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_27->s_axi_rlast.bind(*p_27_s_axi_rlast);
        p_27_s_axi_rlast->set_sv_netview_offsetfromdp(8738688);
        xsim_sc_channel<0, bool > *p_27_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_27->s_axi_rvalid.bind(*p_27_s_axi_rvalid);
        p_27_s_axi_rvalid->set_sv_netview_offsetfromdp(8738744);
        xsim_sc_channel<0, bool > *p_27_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_27->s_axi_rready.bind(*p_27_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_rready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_27_m_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_27->m_axi_awaddr.bind(*p_27_m_axi_awaddr);
        p_27_m_axi_awaddr->set_sv_netview_offsetfromdp(8738856);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_27_m_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_27->m_axi_awlen.bind(*p_27_m_axi_awlen);
        p_27_m_axi_awlen->set_sv_netview_offsetfromdp(8738912);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_27_m_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_27->m_axi_awburst.bind(*p_27_m_axi_awburst);
        p_27_m_axi_awburst->set_sv_netview_offsetfromdp(8738968);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_27_m_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_27->m_axi_awlock.bind(*p_27_m_axi_awlock);
        p_27_m_axi_awlock->set_sv_netview_offsetfromdp(8739024);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_27_m_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_27->m_axi_awcache.bind(*p_27_m_axi_awcache);
        p_27_m_axi_awcache->set_sv_netview_offsetfromdp(8739080);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_27_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_27->m_axi_awprot.bind(*p_27_m_axi_awprot);
        p_27_m_axi_awprot->set_sv_netview_offsetfromdp(8739136);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_27_m_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_27->m_axi_awqos.bind(*p_27_m_axi_awqos);
        p_27_m_axi_awqos->set_sv_netview_offsetfromdp(8739192);
        xsim_sc_channel<0, bool > *p_27_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_27->m_axi_awvalid.bind(*p_27_m_axi_awvalid);
        p_27_m_axi_awvalid->set_sv_netview_offsetfromdp(8739248);
        xsim_sc_channel<0, bool > *p_27_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_27->m_axi_awready.bind(*p_27_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_27_m_axi_awready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_27_m_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_27->m_axi_wdata.bind(*p_27_m_axi_wdata);
        p_27_m_axi_wdata->set_sv_netview_offsetfromdp(8739360);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_27_m_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_27->m_axi_wstrb.bind(*p_27_m_axi_wstrb);
        p_27_m_axi_wstrb->set_sv_netview_offsetfromdp(8739416);
        xsim_sc_channel<0, bool > *p_27_m_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_27->m_axi_wlast.bind(*p_27_m_axi_wlast);
        p_27_m_axi_wlast->set_sv_netview_offsetfromdp(8739472);
        xsim_sc_channel<0, bool > *p_27_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_27->m_axi_wvalid.bind(*p_27_m_axi_wvalid);
        p_27_m_axi_wvalid->set_sv_netview_offsetfromdp(8739528);
        xsim_sc_channel<0, bool > *p_27_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_27->m_axi_wready.bind(*p_27_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_27_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_27_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_27->m_axi_bresp.bind(*p_27_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_27_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_27_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_27->m_axi_bvalid.bind(*p_27_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_27_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_27_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_27->m_axi_bready.bind(*p_27_m_axi_bready);
        p_27_m_axi_bready->set_sv_netview_offsetfromdp(8739752);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_27_m_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_27->m_axi_araddr.bind(*p_27_m_axi_araddr);
        p_27_m_axi_araddr->set_sv_netview_offsetfromdp(8739808);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_27_m_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_27->m_axi_arlen.bind(*p_27_m_axi_arlen);
        p_27_m_axi_arlen->set_sv_netview_offsetfromdp(8739864);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_27_m_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_27->m_axi_arburst.bind(*p_27_m_axi_arburst);
        p_27_m_axi_arburst->set_sv_netview_offsetfromdp(8739920);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_27_m_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_27->m_axi_arlock.bind(*p_27_m_axi_arlock);
        p_27_m_axi_arlock->set_sv_netview_offsetfromdp(8739976);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_27_m_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_27->m_axi_arcache.bind(*p_27_m_axi_arcache);
        p_27_m_axi_arcache->set_sv_netview_offsetfromdp(8740032);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_27_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_27->m_axi_arprot.bind(*p_27_m_axi_arprot);
        p_27_m_axi_arprot->set_sv_netview_offsetfromdp(8740088);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_27_m_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_27->m_axi_arqos.bind(*p_27_m_axi_arqos);
        p_27_m_axi_arqos->set_sv_netview_offsetfromdp(8740144);
        xsim_sc_channel<0, bool > *p_27_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_27->m_axi_arvalid.bind(*p_27_m_axi_arvalid);
        p_27_m_axi_arvalid->set_sv_netview_offsetfromdp(8740200);
        xsim_sc_channel<0, bool > *p_27_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_27->m_axi_arready.bind(*p_27_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_27_m_axi_arready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_27_m_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_27->m_axi_rdata.bind(*p_27_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_27_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_27_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_27->m_axi_rresp.bind(*p_27_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_27_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_27_m_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_27->m_axi_rlast.bind(*p_27_m_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_27_m_axi_rlast);
        xsim_sc_channel<0, bool > *p_27_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_27->m_axi_rvalid.bind(*p_27_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_27_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_27_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_27->m_axi_rready.bind(*p_27_m_axi_rready);
        p_27_m_axi_rready->set_sv_netview_offsetfromdp(8740536);
        sc_inst_28 = new pfm_dynamic_irq_const_tieoff_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.irq_const_tieoff");
        sc_inst_28->xsim_set_dbg_index(55);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_28_dout = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_28->dout.bind(*p_28_dout);
        p_28_dout->set_sv_netview_offsetfromdp(8909688);
        sc_inst_29 = new bd_d216_sci(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.bd_d216_sci_inst");
        sc_inst_29->xsim_set_dbg_index(1277);
        sc_inst_30 = new bd_d216_interconnect_DDR4_MEM00_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.interconnect.interconnect_ddr4_mem00");
        sc_inst_30->xsim_set_dbg_index(2534);
        xsim_sc_channel<0, bool > *p_30_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_30->aclk.bind(*p_30_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_30_aclk);
        xsim_sc_channel<0, bool > *p_30_aclk1 = new xsim_sc_channel<0, bool >();
        sc_inst_30->aclk1.bind(*p_30_aclk1);
        (*_glb_hdl_sc_channel_map).push_back(p_30_aclk1);
        xsim_sc_channel<0, bool > *p_30_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_30->aresetn.bind(*p_30_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_30_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_30_S00_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_30->S00_AXI_awid.bind(*p_30_S00_AXI_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_30_S00_AXI_awid);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_30_S00_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_30->S00_AXI_awaddr.bind(*p_30_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_30_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_30_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_30->S00_AXI_awlen.bind(*p_30_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_30_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_30_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_30->S00_AXI_awsize.bind(*p_30_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_30_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_30_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_30->S00_AXI_awburst.bind(*p_30_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_30_S00_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_30_S00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_30->S00_AXI_awlock.bind(*p_30_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_30_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_30_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_30->S00_AXI_awcache.bind(*p_30_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_30_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_30_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_30->S00_AXI_awprot.bind(*p_30_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_30_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_30_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_30->S00_AXI_awqos.bind(*p_30_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_30_S00_AXI_awqos);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_30_S00_AXI_awuser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_30->S00_AXI_awuser.bind(*p_30_S00_AXI_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_30_S00_AXI_awuser);
        xsim_sc_channel<0, bool > *p_30_S00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_30->S00_AXI_awvalid.bind(*p_30_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_30_S00_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_30_S00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_30->S00_AXI_awready.bind(*p_30_S00_AXI_awready);
        p_30_S00_AXI_awready->set_sv_netview_offsetfromdp(9804200);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_30_S00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_30->S00_AXI_wdata.bind(*p_30_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_30_S00_AXI_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_30_S00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_30->S00_AXI_wstrb.bind(*p_30_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_30_S00_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_30_S00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_30->S00_AXI_wlast.bind(*p_30_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_30_S00_AXI_wlast);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_30_S00_AXI_wuser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_30->S00_AXI_wuser.bind(*p_30_S00_AXI_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_30_S00_AXI_wuser);
        xsim_sc_channel<0, bool > *p_30_S00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_30->S00_AXI_wvalid.bind(*p_30_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_30_S00_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_30_S00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_30->S00_AXI_wready.bind(*p_30_S00_AXI_wready);
        p_30_S00_AXI_wready->set_sv_netview_offsetfromdp(9804536);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_30_S00_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_30->S00_AXI_bid.bind(*p_30_S00_AXI_bid);
        p_30_S00_AXI_bid->set_sv_netview_offsetfromdp(9804592);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_30_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_30->S00_AXI_bresp.bind(*p_30_S00_AXI_bresp);
        p_30_S00_AXI_bresp->set_sv_netview_offsetfromdp(9804648);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_30_S00_AXI_buser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_30->S00_AXI_buser.bind(*p_30_S00_AXI_buser);
        p_30_S00_AXI_buser->set_sv_netview_offsetfromdp(9804704);
        xsim_sc_channel<0, bool > *p_30_S00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_30->S00_AXI_bvalid.bind(*p_30_S00_AXI_bvalid);
        p_30_S00_AXI_bvalid->set_sv_netview_offsetfromdp(9804760);
        xsim_sc_channel<0, bool > *p_30_S00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_30->S00_AXI_bready.bind(*p_30_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_30_S00_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_30_S00_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_30->S00_AXI_arid.bind(*p_30_S00_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_30_S00_AXI_arid);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_30_S00_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_30->S00_AXI_araddr.bind(*p_30_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_30_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_30_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_30->S00_AXI_arlen.bind(*p_30_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_30_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_30_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_30->S00_AXI_arsize.bind(*p_30_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_30_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_30_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_30->S00_AXI_arburst.bind(*p_30_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_30_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_30_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_30->S00_AXI_arlock.bind(*p_30_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_30_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_30_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_30->S00_AXI_arcache.bind(*p_30_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_30_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_30_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_30->S00_AXI_arprot.bind(*p_30_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_30_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_30_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_30->S00_AXI_arqos.bind(*p_30_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_30_S00_AXI_arqos);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_30_S00_AXI_aruser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_30->S00_AXI_aruser.bind(*p_30_S00_AXI_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_30_S00_AXI_aruser);
        xsim_sc_channel<0, bool > *p_30_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_30->S00_AXI_arvalid.bind(*p_30_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_30_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_30_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_30->S00_AXI_arready.bind(*p_30_S00_AXI_arready);
        p_30_S00_AXI_arready->set_sv_netview_offsetfromdp(9805488);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_30_S00_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_30->S00_AXI_rid.bind(*p_30_S00_AXI_rid);
        p_30_S00_AXI_rid->set_sv_netview_offsetfromdp(9805544);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_30_S00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_30->S00_AXI_rdata.bind(*p_30_S00_AXI_rdata);
        p_30_S00_AXI_rdata->set_sv_netview_offsetfromdp(9805600);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_30_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_30->S00_AXI_rresp.bind(*p_30_S00_AXI_rresp);
        p_30_S00_AXI_rresp->set_sv_netview_offsetfromdp(9805656);
        xsim_sc_channel<0, bool > *p_30_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_30->S00_AXI_rlast.bind(*p_30_S00_AXI_rlast);
        p_30_S00_AXI_rlast->set_sv_netview_offsetfromdp(9805712);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_30_S00_AXI_ruser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_30->S00_AXI_ruser.bind(*p_30_S00_AXI_ruser);
        p_30_S00_AXI_ruser->set_sv_netview_offsetfromdp(9805768);
        xsim_sc_channel<0, bool > *p_30_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_30->S00_AXI_rvalid.bind(*p_30_S00_AXI_rvalid);
        p_30_S00_AXI_rvalid->set_sv_netview_offsetfromdp(9805824);
        xsim_sc_channel<0, bool > *p_30_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_30->S00_AXI_rready.bind(*p_30_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_30_S00_AXI_rready);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_30_M00_AXI_awaddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_30->M00_AXI_awaddr.bind(*p_30_M00_AXI_awaddr);
        p_30_M00_AXI_awaddr->set_sv_netview_offsetfromdp(9805936);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_30_M00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_30->M00_AXI_awlen.bind(*p_30_M00_AXI_awlen);
        p_30_M00_AXI_awlen->set_sv_netview_offsetfromdp(9805992);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_30_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_30->M00_AXI_awsize.bind(*p_30_M00_AXI_awsize);
        p_30_M00_AXI_awsize->set_sv_netview_offsetfromdp(9806048);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_30_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_30->M00_AXI_awburst.bind(*p_30_M00_AXI_awburst);
        p_30_M00_AXI_awburst->set_sv_netview_offsetfromdp(9806104);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_30_M00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_30->M00_AXI_awlock.bind(*p_30_M00_AXI_awlock);
        p_30_M00_AXI_awlock->set_sv_netview_offsetfromdp(9806160);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_30_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_30->M00_AXI_awcache.bind(*p_30_M00_AXI_awcache);
        p_30_M00_AXI_awcache->set_sv_netview_offsetfromdp(9806216);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_30_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_30->M00_AXI_awprot.bind(*p_30_M00_AXI_awprot);
        p_30_M00_AXI_awprot->set_sv_netview_offsetfromdp(9806272);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_30_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_30->M00_AXI_awqos.bind(*p_30_M00_AXI_awqos);
        p_30_M00_AXI_awqos->set_sv_netview_offsetfromdp(9806328);
        xsim_sc_channel<0, bool > *p_30_M00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_30->M00_AXI_awvalid.bind(*p_30_M00_AXI_awvalid);
        p_30_M00_AXI_awvalid->set_sv_netview_offsetfromdp(9806384);
        xsim_sc_channel<0, bool > *p_30_M00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_30->M00_AXI_awready.bind(*p_30_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_30_M00_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_30_M00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_30->M00_AXI_wdata.bind(*p_30_M00_AXI_wdata);
        p_30_M00_AXI_wdata->set_sv_netview_offsetfromdp(9806496);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_30_M00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_30->M00_AXI_wstrb.bind(*p_30_M00_AXI_wstrb);
        p_30_M00_AXI_wstrb->set_sv_netview_offsetfromdp(9806552);
        xsim_sc_channel<0, bool > *p_30_M00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_30->M00_AXI_wlast.bind(*p_30_M00_AXI_wlast);
        p_30_M00_AXI_wlast->set_sv_netview_offsetfromdp(9806608);
        xsim_sc_channel<0, bool > *p_30_M00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_30->M00_AXI_wvalid.bind(*p_30_M00_AXI_wvalid);
        p_30_M00_AXI_wvalid->set_sv_netview_offsetfromdp(9806664);
        xsim_sc_channel<0, bool > *p_30_M00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_30->M00_AXI_wready.bind(*p_30_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_30_M00_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_30_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_30->M00_AXI_bresp.bind(*p_30_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_30_M00_AXI_bresp);
        xsim_sc_channel<0, bool > *p_30_M00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_30->M00_AXI_bvalid.bind(*p_30_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_30_M00_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_30_M00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_30->M00_AXI_bready.bind(*p_30_M00_AXI_bready);
        p_30_M00_AXI_bready->set_sv_netview_offsetfromdp(9806888);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_30_M00_AXI_araddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_30->M00_AXI_araddr.bind(*p_30_M00_AXI_araddr);
        p_30_M00_AXI_araddr->set_sv_netview_offsetfromdp(9806944);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_30_M00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_30->M00_AXI_arlen.bind(*p_30_M00_AXI_arlen);
        p_30_M00_AXI_arlen->set_sv_netview_offsetfromdp(9807000);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_30_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_30->M00_AXI_arsize.bind(*p_30_M00_AXI_arsize);
        p_30_M00_AXI_arsize->set_sv_netview_offsetfromdp(9807056);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_30_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_30->M00_AXI_arburst.bind(*p_30_M00_AXI_arburst);
        p_30_M00_AXI_arburst->set_sv_netview_offsetfromdp(9807112);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_30_M00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_30->M00_AXI_arlock.bind(*p_30_M00_AXI_arlock);
        p_30_M00_AXI_arlock->set_sv_netview_offsetfromdp(9807168);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_30_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_30->M00_AXI_arcache.bind(*p_30_M00_AXI_arcache);
        p_30_M00_AXI_arcache->set_sv_netview_offsetfromdp(9807224);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_30_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_30->M00_AXI_arprot.bind(*p_30_M00_AXI_arprot);
        p_30_M00_AXI_arprot->set_sv_netview_offsetfromdp(9807280);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_30_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_30->M00_AXI_arqos.bind(*p_30_M00_AXI_arqos);
        p_30_M00_AXI_arqos->set_sv_netview_offsetfromdp(9807336);
        xsim_sc_channel<0, bool > *p_30_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_30->M00_AXI_arvalid.bind(*p_30_M00_AXI_arvalid);
        p_30_M00_AXI_arvalid->set_sv_netview_offsetfromdp(9807392);
        xsim_sc_channel<0, bool > *p_30_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_30->M00_AXI_arready.bind(*p_30_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_30_M00_AXI_arready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_30_M00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_30->M00_AXI_rdata.bind(*p_30_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_30_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_30_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_30->M00_AXI_rresp.bind(*p_30_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_30_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_30_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_30->M00_AXI_rlast.bind(*p_30_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_30_M00_AXI_rlast);
        xsim_sc_channel<0, bool > *p_30_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_30->M00_AXI_rvalid.bind(*p_30_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_30_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_30_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_30->M00_AXI_rready.bind(*p_30_M00_AXI_rready);
        p_30_M00_AXI_rready->set_sv_netview_offsetfromdp(9807728);
        sc_inst_31 = new bd_d216_interconnect_DDR4_MEM01_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.interconnect.interconnect_ddr4_mem01");
        sc_inst_31->xsim_set_dbg_index(2535);
        xsim_sc_channel<0, bool > *p_31_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_31->aclk.bind(*p_31_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_31_aclk);
        xsim_sc_channel<0, bool > *p_31_aclk1 = new xsim_sc_channel<0, bool >();
        sc_inst_31->aclk1.bind(*p_31_aclk1);
        (*_glb_hdl_sc_channel_map).push_back(p_31_aclk1);
        xsim_sc_channel<0, bool > *p_31_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_31->aresetn.bind(*p_31_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_31_aresetn);
        xsim_sc_channel<37, sc_dt::sc_bv<37> > *p_31_S00_AXI_awaddr = new xsim_sc_channel<37, sc_dt::sc_bv<37> >();
        sc_inst_31->S00_AXI_awaddr.bind(*p_31_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_31_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_31_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_31->S00_AXI_awlen.bind(*p_31_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_31_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_31_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_31->S00_AXI_awsize.bind(*p_31_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_31_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_31_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_31->S00_AXI_awburst.bind(*p_31_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_31_S00_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_31_S00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_31->S00_AXI_awlock.bind(*p_31_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_31_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_31_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_31->S00_AXI_awcache.bind(*p_31_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_31_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_31_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_31->S00_AXI_awprot.bind(*p_31_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_31_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_31_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_31->S00_AXI_awqos.bind(*p_31_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_31_S00_AXI_awqos);
        xsim_sc_channel<0, bool > *p_31_S00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_31->S00_AXI_awvalid.bind(*p_31_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_31_S00_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_31_S00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_31->S00_AXI_awready.bind(*p_31_S00_AXI_awready);
        p_31_S00_AXI_awready->set_sv_netview_offsetfromdp(9808504);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_31_S00_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_31->S00_AXI_wdata.bind(*p_31_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_31_S00_AXI_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_31_S00_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_31->S00_AXI_wstrb.bind(*p_31_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_31_S00_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_31_S00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_31->S00_AXI_wlast.bind(*p_31_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_31_S00_AXI_wlast);
        xsim_sc_channel<0, bool > *p_31_S00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_31->S00_AXI_wvalid.bind(*p_31_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_31_S00_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_31_S00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_31->S00_AXI_wready.bind(*p_31_S00_AXI_wready);
        p_31_S00_AXI_wready->set_sv_netview_offsetfromdp(9808784);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_31_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_31->S00_AXI_bresp.bind(*p_31_S00_AXI_bresp);
        p_31_S00_AXI_bresp->set_sv_netview_offsetfromdp(9808840);
        xsim_sc_channel<0, bool > *p_31_S00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_31->S00_AXI_bvalid.bind(*p_31_S00_AXI_bvalid);
        p_31_S00_AXI_bvalid->set_sv_netview_offsetfromdp(9808896);
        xsim_sc_channel<0, bool > *p_31_S00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_31->S00_AXI_bready.bind(*p_31_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_31_S00_AXI_bready);
        xsim_sc_channel<37, sc_dt::sc_bv<37> > *p_31_S00_AXI_araddr = new xsim_sc_channel<37, sc_dt::sc_bv<37> >();
        sc_inst_31->S00_AXI_araddr.bind(*p_31_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_31_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_31_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_31->S00_AXI_arlen.bind(*p_31_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_31_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_31_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_31->S00_AXI_arsize.bind(*p_31_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_31_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_31_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_31->S00_AXI_arburst.bind(*p_31_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_31_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_31_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_31->S00_AXI_arlock.bind(*p_31_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_31_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_31_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_31->S00_AXI_arcache.bind(*p_31_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_31_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_31_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_31->S00_AXI_arprot.bind(*p_31_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_31_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_31_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_31->S00_AXI_arqos.bind(*p_31_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_31_S00_AXI_arqos);
        xsim_sc_channel<0, bool > *p_31_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_31->S00_AXI_arvalid.bind(*p_31_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_31_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_31_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_31->S00_AXI_arready.bind(*p_31_S00_AXI_arready);
        p_31_S00_AXI_arready->set_sv_netview_offsetfromdp(9809512);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_31_S00_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_31->S00_AXI_rdata.bind(*p_31_S00_AXI_rdata);
        p_31_S00_AXI_rdata->set_sv_netview_offsetfromdp(9809568);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_31_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_31->S00_AXI_rresp.bind(*p_31_S00_AXI_rresp);
        p_31_S00_AXI_rresp->set_sv_netview_offsetfromdp(9809624);
        xsim_sc_channel<0, bool > *p_31_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_31->S00_AXI_rlast.bind(*p_31_S00_AXI_rlast);
        p_31_S00_AXI_rlast->set_sv_netview_offsetfromdp(9809680);
        xsim_sc_channel<0, bool > *p_31_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_31->S00_AXI_rvalid.bind(*p_31_S00_AXI_rvalid);
        p_31_S00_AXI_rvalid->set_sv_netview_offsetfromdp(9809736);
        xsim_sc_channel<0, bool > *p_31_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_31->S00_AXI_rready.bind(*p_31_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_31_S00_AXI_rready);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_31_M00_AXI_awaddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_31->M00_AXI_awaddr.bind(*p_31_M00_AXI_awaddr);
        p_31_M00_AXI_awaddr->set_sv_netview_offsetfromdp(9809848);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_31_M00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_31->M00_AXI_awlen.bind(*p_31_M00_AXI_awlen);
        p_31_M00_AXI_awlen->set_sv_netview_offsetfromdp(9809904);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_31_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_31->M00_AXI_awsize.bind(*p_31_M00_AXI_awsize);
        p_31_M00_AXI_awsize->set_sv_netview_offsetfromdp(9809960);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_31_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_31->M00_AXI_awburst.bind(*p_31_M00_AXI_awburst);
        p_31_M00_AXI_awburst->set_sv_netview_offsetfromdp(9810016);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_31_M00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_31->M00_AXI_awlock.bind(*p_31_M00_AXI_awlock);
        p_31_M00_AXI_awlock->set_sv_netview_offsetfromdp(9810072);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_31_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_31->M00_AXI_awcache.bind(*p_31_M00_AXI_awcache);
        p_31_M00_AXI_awcache->set_sv_netview_offsetfromdp(9810128);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_31_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_31->M00_AXI_awprot.bind(*p_31_M00_AXI_awprot);
        p_31_M00_AXI_awprot->set_sv_netview_offsetfromdp(9810184);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_31_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_31->M00_AXI_awqos.bind(*p_31_M00_AXI_awqos);
        p_31_M00_AXI_awqos->set_sv_netview_offsetfromdp(9810240);
        xsim_sc_channel<0, bool > *p_31_M00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_31->M00_AXI_awvalid.bind(*p_31_M00_AXI_awvalid);
        p_31_M00_AXI_awvalid->set_sv_netview_offsetfromdp(9810296);
        xsim_sc_channel<0, bool > *p_31_M00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_31->M00_AXI_awready.bind(*p_31_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_31_M00_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_31_M00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_31->M00_AXI_wdata.bind(*p_31_M00_AXI_wdata);
        p_31_M00_AXI_wdata->set_sv_netview_offsetfromdp(9810408);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_31_M00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_31->M00_AXI_wstrb.bind(*p_31_M00_AXI_wstrb);
        p_31_M00_AXI_wstrb->set_sv_netview_offsetfromdp(9810464);
        xsim_sc_channel<0, bool > *p_31_M00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_31->M00_AXI_wlast.bind(*p_31_M00_AXI_wlast);
        p_31_M00_AXI_wlast->set_sv_netview_offsetfromdp(9810520);
        xsim_sc_channel<0, bool > *p_31_M00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_31->M00_AXI_wvalid.bind(*p_31_M00_AXI_wvalid);
        p_31_M00_AXI_wvalid->set_sv_netview_offsetfromdp(9810576);
        xsim_sc_channel<0, bool > *p_31_M00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_31->M00_AXI_wready.bind(*p_31_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_31_M00_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_31_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_31->M00_AXI_bresp.bind(*p_31_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_31_M00_AXI_bresp);
        xsim_sc_channel<0, bool > *p_31_M00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_31->M00_AXI_bvalid.bind(*p_31_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_31_M00_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_31_M00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_31->M00_AXI_bready.bind(*p_31_M00_AXI_bready);
        p_31_M00_AXI_bready->set_sv_netview_offsetfromdp(9810800);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_31_M00_AXI_araddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_31->M00_AXI_araddr.bind(*p_31_M00_AXI_araddr);
        p_31_M00_AXI_araddr->set_sv_netview_offsetfromdp(9810856);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_31_M00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_31->M00_AXI_arlen.bind(*p_31_M00_AXI_arlen);
        p_31_M00_AXI_arlen->set_sv_netview_offsetfromdp(9810912);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_31_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_31->M00_AXI_arsize.bind(*p_31_M00_AXI_arsize);
        p_31_M00_AXI_arsize->set_sv_netview_offsetfromdp(9810968);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_31_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_31->M00_AXI_arburst.bind(*p_31_M00_AXI_arburst);
        p_31_M00_AXI_arburst->set_sv_netview_offsetfromdp(9811024);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_31_M00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_31->M00_AXI_arlock.bind(*p_31_M00_AXI_arlock);
        p_31_M00_AXI_arlock->set_sv_netview_offsetfromdp(9811080);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_31_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_31->M00_AXI_arcache.bind(*p_31_M00_AXI_arcache);
        p_31_M00_AXI_arcache->set_sv_netview_offsetfromdp(9811136);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_31_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_31->M00_AXI_arprot.bind(*p_31_M00_AXI_arprot);
        p_31_M00_AXI_arprot->set_sv_netview_offsetfromdp(9811192);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_31_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_31->M00_AXI_arqos.bind(*p_31_M00_AXI_arqos);
        p_31_M00_AXI_arqos->set_sv_netview_offsetfromdp(9811248);
        xsim_sc_channel<0, bool > *p_31_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_31->M00_AXI_arvalid.bind(*p_31_M00_AXI_arvalid);
        p_31_M00_AXI_arvalid->set_sv_netview_offsetfromdp(9811304);
        xsim_sc_channel<0, bool > *p_31_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_31->M00_AXI_arready.bind(*p_31_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_31_M00_AXI_arready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_31_M00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_31->M00_AXI_rdata.bind(*p_31_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_31_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_31_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_31->M00_AXI_rresp.bind(*p_31_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_31_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_31_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_31->M00_AXI_rlast.bind(*p_31_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_31_M00_AXI_rlast);
        xsim_sc_channel<0, bool > *p_31_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_31->M00_AXI_rvalid.bind(*p_31_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_31_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_31_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_31->M00_AXI_rready.bind(*p_31_M00_AXI_rready);
        p_31_M00_AXI_rready->set_sv_netview_offsetfromdp(9811640);
        sc_inst_32 = new bd_d216_interconnect_M00_AXI_MEM00_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.interconnect.interconnect_m00_axi_mem00");
        sc_inst_32->xsim_set_dbg_index(2536);
        xsim_sc_channel<0, bool > *p_32_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_32->aclk.bind(*p_32_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_32_aclk);
        xsim_sc_channel<0, bool > *p_32_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_32->aresetn.bind(*p_32_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_32_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_32_S00_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_32->S00_AXI_awid.bind(*p_32_S00_AXI_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_32_S00_AXI_awid);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_32_S00_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_32->S00_AXI_awaddr.bind(*p_32_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_32_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_32_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_32->S00_AXI_awlen.bind(*p_32_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_32_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_32_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_32->S00_AXI_awsize.bind(*p_32_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_32_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_32_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_32->S00_AXI_awburst.bind(*p_32_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_32_S00_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_32_S00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_32->S00_AXI_awlock.bind(*p_32_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_32_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_32_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_32->S00_AXI_awcache.bind(*p_32_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_32_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_32_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_32->S00_AXI_awprot.bind(*p_32_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_32_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_32_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_32->S00_AXI_awqos.bind(*p_32_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_32_S00_AXI_awqos);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_32_S00_AXI_awuser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_32->S00_AXI_awuser.bind(*p_32_S00_AXI_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_32_S00_AXI_awuser);
        xsim_sc_channel<0, bool > *p_32_S00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_32->S00_AXI_awvalid.bind(*p_32_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_32_S00_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_32_S00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_32->S00_AXI_awready.bind(*p_32_S00_AXI_awready);
        p_32_S00_AXI_awready->set_sv_netview_offsetfromdp(9812472);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_32_S00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_32->S00_AXI_wdata.bind(*p_32_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_32_S00_AXI_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_32_S00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_32->S00_AXI_wstrb.bind(*p_32_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_32_S00_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_32_S00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_32->S00_AXI_wlast.bind(*p_32_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_32_S00_AXI_wlast);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_32_S00_AXI_wuser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_32->S00_AXI_wuser.bind(*p_32_S00_AXI_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_32_S00_AXI_wuser);
        xsim_sc_channel<0, bool > *p_32_S00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_32->S00_AXI_wvalid.bind(*p_32_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_32_S00_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_32_S00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_32->S00_AXI_wready.bind(*p_32_S00_AXI_wready);
        p_32_S00_AXI_wready->set_sv_netview_offsetfromdp(9812808);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_32_S00_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_32->S00_AXI_bid.bind(*p_32_S00_AXI_bid);
        p_32_S00_AXI_bid->set_sv_netview_offsetfromdp(9812864);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_32_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_32->S00_AXI_bresp.bind(*p_32_S00_AXI_bresp);
        p_32_S00_AXI_bresp->set_sv_netview_offsetfromdp(9812920);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_32_S00_AXI_buser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_32->S00_AXI_buser.bind(*p_32_S00_AXI_buser);
        p_32_S00_AXI_buser->set_sv_netview_offsetfromdp(9812976);
        xsim_sc_channel<0, bool > *p_32_S00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_32->S00_AXI_bvalid.bind(*p_32_S00_AXI_bvalid);
        p_32_S00_AXI_bvalid->set_sv_netview_offsetfromdp(9813032);
        xsim_sc_channel<0, bool > *p_32_S00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_32->S00_AXI_bready.bind(*p_32_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_32_S00_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_32_S00_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_32->S00_AXI_arid.bind(*p_32_S00_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_32_S00_AXI_arid);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_32_S00_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_32->S00_AXI_araddr.bind(*p_32_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_32_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_32_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_32->S00_AXI_arlen.bind(*p_32_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_32_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_32_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_32->S00_AXI_arsize.bind(*p_32_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_32_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_32_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_32->S00_AXI_arburst.bind(*p_32_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_32_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_32_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_32->S00_AXI_arlock.bind(*p_32_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_32_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_32_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_32->S00_AXI_arcache.bind(*p_32_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_32_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_32_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_32->S00_AXI_arprot.bind(*p_32_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_32_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_32_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_32->S00_AXI_arqos.bind(*p_32_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_32_S00_AXI_arqos);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_32_S00_AXI_aruser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_32->S00_AXI_aruser.bind(*p_32_S00_AXI_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_32_S00_AXI_aruser);
        xsim_sc_channel<0, bool > *p_32_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_32->S00_AXI_arvalid.bind(*p_32_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_32_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_32_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_32->S00_AXI_arready.bind(*p_32_S00_AXI_arready);
        p_32_S00_AXI_arready->set_sv_netview_offsetfromdp(9813760);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_32_S00_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_32->S00_AXI_rid.bind(*p_32_S00_AXI_rid);
        p_32_S00_AXI_rid->set_sv_netview_offsetfromdp(9813816);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_32_S00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_32->S00_AXI_rdata.bind(*p_32_S00_AXI_rdata);
        p_32_S00_AXI_rdata->set_sv_netview_offsetfromdp(9813872);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_32_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_32->S00_AXI_rresp.bind(*p_32_S00_AXI_rresp);
        p_32_S00_AXI_rresp->set_sv_netview_offsetfromdp(9813928);
        xsim_sc_channel<0, bool > *p_32_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_32->S00_AXI_rlast.bind(*p_32_S00_AXI_rlast);
        p_32_S00_AXI_rlast->set_sv_netview_offsetfromdp(9813984);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_32_S00_AXI_ruser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_32->S00_AXI_ruser.bind(*p_32_S00_AXI_ruser);
        p_32_S00_AXI_ruser->set_sv_netview_offsetfromdp(9814040);
        xsim_sc_channel<0, bool > *p_32_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_32->S00_AXI_rvalid.bind(*p_32_S00_AXI_rvalid);
        p_32_S00_AXI_rvalid->set_sv_netview_offsetfromdp(9814096);
        xsim_sc_channel<0, bool > *p_32_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_32->S00_AXI_rready.bind(*p_32_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_32_S00_AXI_rready);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_32_M00_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_32->M00_AXI_awaddr.bind(*p_32_M00_AXI_awaddr);
        p_32_M00_AXI_awaddr->set_sv_netview_offsetfromdp(9814208);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_32_M00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_32->M00_AXI_awlen.bind(*p_32_M00_AXI_awlen);
        p_32_M00_AXI_awlen->set_sv_netview_offsetfromdp(9814264);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_32_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_32->M00_AXI_awsize.bind(*p_32_M00_AXI_awsize);
        p_32_M00_AXI_awsize->set_sv_netview_offsetfromdp(9814320);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_32_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_32->M00_AXI_awburst.bind(*p_32_M00_AXI_awburst);
        p_32_M00_AXI_awburst->set_sv_netview_offsetfromdp(9814376);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_32_M00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_32->M00_AXI_awlock.bind(*p_32_M00_AXI_awlock);
        p_32_M00_AXI_awlock->set_sv_netview_offsetfromdp(9814432);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_32_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_32->M00_AXI_awcache.bind(*p_32_M00_AXI_awcache);
        p_32_M00_AXI_awcache->set_sv_netview_offsetfromdp(9814488);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_32_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_32->M00_AXI_awprot.bind(*p_32_M00_AXI_awprot);
        p_32_M00_AXI_awprot->set_sv_netview_offsetfromdp(9814544);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_32_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_32->M00_AXI_awqos.bind(*p_32_M00_AXI_awqos);
        p_32_M00_AXI_awqos->set_sv_netview_offsetfromdp(9814600);
        xsim_sc_channel<0, bool > *p_32_M00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_32->M00_AXI_awvalid.bind(*p_32_M00_AXI_awvalid);
        p_32_M00_AXI_awvalid->set_sv_netview_offsetfromdp(9814656);
        xsim_sc_channel<0, bool > *p_32_M00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_32->M00_AXI_awready.bind(*p_32_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_32_M00_AXI_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_32_M00_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_32->M00_AXI_wdata.bind(*p_32_M00_AXI_wdata);
        p_32_M00_AXI_wdata->set_sv_netview_offsetfromdp(9814768);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_32_M00_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_32->M00_AXI_wstrb.bind(*p_32_M00_AXI_wstrb);
        p_32_M00_AXI_wstrb->set_sv_netview_offsetfromdp(9814824);
        xsim_sc_channel<0, bool > *p_32_M00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_32->M00_AXI_wlast.bind(*p_32_M00_AXI_wlast);
        p_32_M00_AXI_wlast->set_sv_netview_offsetfromdp(9814880);
        xsim_sc_channel<0, bool > *p_32_M00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_32->M00_AXI_wvalid.bind(*p_32_M00_AXI_wvalid);
        p_32_M00_AXI_wvalid->set_sv_netview_offsetfromdp(9814936);
        xsim_sc_channel<0, bool > *p_32_M00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_32->M00_AXI_wready.bind(*p_32_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_32_M00_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_32_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_32->M00_AXI_bresp.bind(*p_32_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_32_M00_AXI_bresp);
        xsim_sc_channel<0, bool > *p_32_M00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_32->M00_AXI_bvalid.bind(*p_32_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_32_M00_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_32_M00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_32->M00_AXI_bready.bind(*p_32_M00_AXI_bready);
        p_32_M00_AXI_bready->set_sv_netview_offsetfromdp(9815160);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_32_M00_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_32->M00_AXI_araddr.bind(*p_32_M00_AXI_araddr);
        p_32_M00_AXI_araddr->set_sv_netview_offsetfromdp(9815216);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_32_M00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_32->M00_AXI_arlen.bind(*p_32_M00_AXI_arlen);
        p_32_M00_AXI_arlen->set_sv_netview_offsetfromdp(9815272);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_32_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_32->M00_AXI_arsize.bind(*p_32_M00_AXI_arsize);
        p_32_M00_AXI_arsize->set_sv_netview_offsetfromdp(9815328);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_32_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_32->M00_AXI_arburst.bind(*p_32_M00_AXI_arburst);
        p_32_M00_AXI_arburst->set_sv_netview_offsetfromdp(9815384);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_32_M00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_32->M00_AXI_arlock.bind(*p_32_M00_AXI_arlock);
        p_32_M00_AXI_arlock->set_sv_netview_offsetfromdp(9815440);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_32_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_32->M00_AXI_arcache.bind(*p_32_M00_AXI_arcache);
        p_32_M00_AXI_arcache->set_sv_netview_offsetfromdp(9815496);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_32_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_32->M00_AXI_arprot.bind(*p_32_M00_AXI_arprot);
        p_32_M00_AXI_arprot->set_sv_netview_offsetfromdp(9815552);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_32_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_32->M00_AXI_arqos.bind(*p_32_M00_AXI_arqos);
        p_32_M00_AXI_arqos->set_sv_netview_offsetfromdp(9815608);
        xsim_sc_channel<0, bool > *p_32_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_32->M00_AXI_arvalid.bind(*p_32_M00_AXI_arvalid);
        p_32_M00_AXI_arvalid->set_sv_netview_offsetfromdp(9815664);
        xsim_sc_channel<0, bool > *p_32_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_32->M00_AXI_arready.bind(*p_32_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_32_M00_AXI_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_32_M00_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_32->M00_AXI_rdata.bind(*p_32_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_32_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_32_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_32->M00_AXI_rresp.bind(*p_32_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_32_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_32_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_32->M00_AXI_rlast.bind(*p_32_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_32_M00_AXI_rlast);
        xsim_sc_channel<0, bool > *p_32_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_32->M00_AXI_rvalid.bind(*p_32_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_32_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_32_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_32->M00_AXI_rready.bind(*p_32_M00_AXI_rready);
        p_32_M00_AXI_rready->set_sv_netview_offsetfromdp(9816000);
        sc_inst_33 = new bd_d216_interconnect_PLRAM_MEM00_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.interconnect.interconnect_plram_mem00");
        sc_inst_33->xsim_set_dbg_index(2537);
        xsim_sc_channel<0, bool > *p_33_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_33->aclk.bind(*p_33_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_33_aclk);
        xsim_sc_channel<0, bool > *p_33_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_33->aresetn.bind(*p_33_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_33_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_33_S00_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_33->S00_AXI_awid.bind(*p_33_S00_AXI_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_awid);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_33_S00_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_33->S00_AXI_awaddr.bind(*p_33_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_33_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_33->S00_AXI_awlen.bind(*p_33_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_33_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_33->S00_AXI_awsize.bind(*p_33_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_33_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_33->S00_AXI_awburst.bind(*p_33_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_33_S00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_33->S00_AXI_awlock.bind(*p_33_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_33_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_33->S00_AXI_awcache.bind(*p_33_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_33_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_33->S00_AXI_awprot.bind(*p_33_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_33_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_33->S00_AXI_awqos.bind(*p_33_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_awqos);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_33_S00_AXI_awuser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_33->S00_AXI_awuser.bind(*p_33_S00_AXI_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_awuser);
        xsim_sc_channel<0, bool > *p_33_S00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_33->S00_AXI_awvalid.bind(*p_33_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_33_S00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_33->S00_AXI_awready.bind(*p_33_S00_AXI_awready);
        p_33_S00_AXI_awready->set_sv_netview_offsetfromdp(9816832);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_33_S00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_33->S00_AXI_wdata.bind(*p_33_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_33_S00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_33->S00_AXI_wstrb.bind(*p_33_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_33_S00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_33->S00_AXI_wlast.bind(*p_33_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_wlast);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_33_S00_AXI_wuser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_33->S00_AXI_wuser.bind(*p_33_S00_AXI_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_wuser);
        xsim_sc_channel<0, bool > *p_33_S00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_33->S00_AXI_wvalid.bind(*p_33_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_33_S00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_33->S00_AXI_wready.bind(*p_33_S00_AXI_wready);
        p_33_S00_AXI_wready->set_sv_netview_offsetfromdp(9817168);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_33_S00_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_33->S00_AXI_bid.bind(*p_33_S00_AXI_bid);
        p_33_S00_AXI_bid->set_sv_netview_offsetfromdp(9817224);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_33_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_33->S00_AXI_bresp.bind(*p_33_S00_AXI_bresp);
        p_33_S00_AXI_bresp->set_sv_netview_offsetfromdp(9817280);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_33_S00_AXI_buser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_33->S00_AXI_buser.bind(*p_33_S00_AXI_buser);
        p_33_S00_AXI_buser->set_sv_netview_offsetfromdp(9817336);
        xsim_sc_channel<0, bool > *p_33_S00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_33->S00_AXI_bvalid.bind(*p_33_S00_AXI_bvalid);
        p_33_S00_AXI_bvalid->set_sv_netview_offsetfromdp(9817392);
        xsim_sc_channel<0, bool > *p_33_S00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_33->S00_AXI_bready.bind(*p_33_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_33_S00_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_33->S00_AXI_arid.bind(*p_33_S00_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_arid);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_33_S00_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_33->S00_AXI_araddr.bind(*p_33_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_33_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_33->S00_AXI_arlen.bind(*p_33_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_33_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_33->S00_AXI_arsize.bind(*p_33_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_33_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_33->S00_AXI_arburst.bind(*p_33_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_33_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_33->S00_AXI_arlock.bind(*p_33_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_33_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_33->S00_AXI_arcache.bind(*p_33_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_33_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_33->S00_AXI_arprot.bind(*p_33_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_33_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_33->S00_AXI_arqos.bind(*p_33_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_arqos);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_33_S00_AXI_aruser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_33->S00_AXI_aruser.bind(*p_33_S00_AXI_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_aruser);
        xsim_sc_channel<0, bool > *p_33_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_33->S00_AXI_arvalid.bind(*p_33_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_33_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_33->S00_AXI_arready.bind(*p_33_S00_AXI_arready);
        p_33_S00_AXI_arready->set_sv_netview_offsetfromdp(9818120);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_33_S00_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_33->S00_AXI_rid.bind(*p_33_S00_AXI_rid);
        p_33_S00_AXI_rid->set_sv_netview_offsetfromdp(9818176);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_33_S00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_33->S00_AXI_rdata.bind(*p_33_S00_AXI_rdata);
        p_33_S00_AXI_rdata->set_sv_netview_offsetfromdp(9818232);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_33_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_33->S00_AXI_rresp.bind(*p_33_S00_AXI_rresp);
        p_33_S00_AXI_rresp->set_sv_netview_offsetfromdp(9818288);
        xsim_sc_channel<0, bool > *p_33_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_33->S00_AXI_rlast.bind(*p_33_S00_AXI_rlast);
        p_33_S00_AXI_rlast->set_sv_netview_offsetfromdp(9818344);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_33_S00_AXI_ruser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_33->S00_AXI_ruser.bind(*p_33_S00_AXI_ruser);
        p_33_S00_AXI_ruser->set_sv_netview_offsetfromdp(9818400);
        xsim_sc_channel<0, bool > *p_33_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_33->S00_AXI_rvalid.bind(*p_33_S00_AXI_rvalid);
        p_33_S00_AXI_rvalid->set_sv_netview_offsetfromdp(9818456);
        xsim_sc_channel<0, bool > *p_33_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_33->S00_AXI_rready.bind(*p_33_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_rready);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_33_M00_AXI_awaddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_33->M00_AXI_awaddr.bind(*p_33_M00_AXI_awaddr);
        p_33_M00_AXI_awaddr->set_sv_netview_offsetfromdp(9818568);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_33_M00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_33->M00_AXI_awlen.bind(*p_33_M00_AXI_awlen);
        p_33_M00_AXI_awlen->set_sv_netview_offsetfromdp(9818624);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_33_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_33->M00_AXI_awsize.bind(*p_33_M00_AXI_awsize);
        p_33_M00_AXI_awsize->set_sv_netview_offsetfromdp(9818680);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_33_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_33->M00_AXI_awburst.bind(*p_33_M00_AXI_awburst);
        p_33_M00_AXI_awburst->set_sv_netview_offsetfromdp(9818736);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_33_M00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_33->M00_AXI_awlock.bind(*p_33_M00_AXI_awlock);
        p_33_M00_AXI_awlock->set_sv_netview_offsetfromdp(9818792);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_33_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_33->M00_AXI_awcache.bind(*p_33_M00_AXI_awcache);
        p_33_M00_AXI_awcache->set_sv_netview_offsetfromdp(9818848);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_33_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_33->M00_AXI_awprot.bind(*p_33_M00_AXI_awprot);
        p_33_M00_AXI_awprot->set_sv_netview_offsetfromdp(9818904);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_33_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_33->M00_AXI_awqos.bind(*p_33_M00_AXI_awqos);
        p_33_M00_AXI_awqos->set_sv_netview_offsetfromdp(9818960);
        xsim_sc_channel<0, bool > *p_33_M00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_33->M00_AXI_awvalid.bind(*p_33_M00_AXI_awvalid);
        p_33_M00_AXI_awvalid->set_sv_netview_offsetfromdp(9819016);
        xsim_sc_channel<0, bool > *p_33_M00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_33->M00_AXI_awready.bind(*p_33_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_33_M00_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_33_M00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_33->M00_AXI_wdata.bind(*p_33_M00_AXI_wdata);
        p_33_M00_AXI_wdata->set_sv_netview_offsetfromdp(9819128);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_33_M00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_33->M00_AXI_wstrb.bind(*p_33_M00_AXI_wstrb);
        p_33_M00_AXI_wstrb->set_sv_netview_offsetfromdp(9819184);
        xsim_sc_channel<0, bool > *p_33_M00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_33->M00_AXI_wlast.bind(*p_33_M00_AXI_wlast);
        p_33_M00_AXI_wlast->set_sv_netview_offsetfromdp(9819240);
        xsim_sc_channel<0, bool > *p_33_M00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_33->M00_AXI_wvalid.bind(*p_33_M00_AXI_wvalid);
        p_33_M00_AXI_wvalid->set_sv_netview_offsetfromdp(9819296);
        xsim_sc_channel<0, bool > *p_33_M00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_33->M00_AXI_wready.bind(*p_33_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_33_M00_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_33_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_33->M00_AXI_bresp.bind(*p_33_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_33_M00_AXI_bresp);
        xsim_sc_channel<0, bool > *p_33_M00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_33->M00_AXI_bvalid.bind(*p_33_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_33_M00_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_33_M00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_33->M00_AXI_bready.bind(*p_33_M00_AXI_bready);
        p_33_M00_AXI_bready->set_sv_netview_offsetfromdp(9819520);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_33_M00_AXI_araddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_33->M00_AXI_araddr.bind(*p_33_M00_AXI_araddr);
        p_33_M00_AXI_araddr->set_sv_netview_offsetfromdp(9819576);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_33_M00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_33->M00_AXI_arlen.bind(*p_33_M00_AXI_arlen);
        p_33_M00_AXI_arlen->set_sv_netview_offsetfromdp(9819632);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_33_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_33->M00_AXI_arsize.bind(*p_33_M00_AXI_arsize);
        p_33_M00_AXI_arsize->set_sv_netview_offsetfromdp(9819688);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_33_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_33->M00_AXI_arburst.bind(*p_33_M00_AXI_arburst);
        p_33_M00_AXI_arburst->set_sv_netview_offsetfromdp(9819744);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_33_M00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_33->M00_AXI_arlock.bind(*p_33_M00_AXI_arlock);
        p_33_M00_AXI_arlock->set_sv_netview_offsetfromdp(9819800);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_33_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_33->M00_AXI_arcache.bind(*p_33_M00_AXI_arcache);
        p_33_M00_AXI_arcache->set_sv_netview_offsetfromdp(9819856);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_33_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_33->M00_AXI_arprot.bind(*p_33_M00_AXI_arprot);
        p_33_M00_AXI_arprot->set_sv_netview_offsetfromdp(9819912);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_33_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_33->M00_AXI_arqos.bind(*p_33_M00_AXI_arqos);
        p_33_M00_AXI_arqos->set_sv_netview_offsetfromdp(9819968);
        xsim_sc_channel<0, bool > *p_33_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_33->M00_AXI_arvalid.bind(*p_33_M00_AXI_arvalid);
        p_33_M00_AXI_arvalid->set_sv_netview_offsetfromdp(9820024);
        xsim_sc_channel<0, bool > *p_33_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_33->M00_AXI_arready.bind(*p_33_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_33_M00_AXI_arready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_33_M00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_33->M00_AXI_rdata.bind(*p_33_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_33_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_33_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_33->M00_AXI_rresp.bind(*p_33_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_33_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_33_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_33->M00_AXI_rlast.bind(*p_33_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_33_M00_AXI_rlast);
        xsim_sc_channel<0, bool > *p_33_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_33->M00_AXI_rvalid.bind(*p_33_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_33_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_33_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_33->M00_AXI_rready.bind(*p_33_M00_AXI_rready);
        p_33_M00_AXI_rready->set_sv_netview_offsetfromdp(9820360);
        sc_inst_34 = new bd_d216_interconnect_PLRAM_MEM01_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.interconnect.interconnect_plram_mem01");
        sc_inst_34->xsim_set_dbg_index(2538);
        xsim_sc_channel<0, bool > *p_34_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_34->aclk.bind(*p_34_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_34_aclk);
        xsim_sc_channel<0, bool > *p_34_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_34->aresetn.bind(*p_34_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_34_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_34_S00_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_34->S00_AXI_awid.bind(*p_34_S00_AXI_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_awid);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_34_S00_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_34->S00_AXI_awaddr.bind(*p_34_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_34_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_34->S00_AXI_awlen.bind(*p_34_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_34_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_34->S00_AXI_awsize.bind(*p_34_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_34_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_34->S00_AXI_awburst.bind(*p_34_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_34_S00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_34->S00_AXI_awlock.bind(*p_34_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_34_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_34->S00_AXI_awcache.bind(*p_34_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_34_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_34->S00_AXI_awprot.bind(*p_34_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_34_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_34->S00_AXI_awqos.bind(*p_34_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_awqos);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_34_S00_AXI_awuser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_34->S00_AXI_awuser.bind(*p_34_S00_AXI_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_awuser);
        xsim_sc_channel<0, bool > *p_34_S00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_34->S00_AXI_awvalid.bind(*p_34_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_34_S00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_34->S00_AXI_awready.bind(*p_34_S00_AXI_awready);
        p_34_S00_AXI_awready->set_sv_netview_offsetfromdp(9821192);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_34_S00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_34->S00_AXI_wdata.bind(*p_34_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_34_S00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_34->S00_AXI_wstrb.bind(*p_34_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_34_S00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_34->S00_AXI_wlast.bind(*p_34_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_wlast);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_34_S00_AXI_wuser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_34->S00_AXI_wuser.bind(*p_34_S00_AXI_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_wuser);
        xsim_sc_channel<0, bool > *p_34_S00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_34->S00_AXI_wvalid.bind(*p_34_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_34_S00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_34->S00_AXI_wready.bind(*p_34_S00_AXI_wready);
        p_34_S00_AXI_wready->set_sv_netview_offsetfromdp(9821528);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_34_S00_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_34->S00_AXI_bid.bind(*p_34_S00_AXI_bid);
        p_34_S00_AXI_bid->set_sv_netview_offsetfromdp(9821584);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_34_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_34->S00_AXI_bresp.bind(*p_34_S00_AXI_bresp);
        p_34_S00_AXI_bresp->set_sv_netview_offsetfromdp(9821640);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_34_S00_AXI_buser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_34->S00_AXI_buser.bind(*p_34_S00_AXI_buser);
        p_34_S00_AXI_buser->set_sv_netview_offsetfromdp(9821696);
        xsim_sc_channel<0, bool > *p_34_S00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_34->S00_AXI_bvalid.bind(*p_34_S00_AXI_bvalid);
        p_34_S00_AXI_bvalid->set_sv_netview_offsetfromdp(9821752);
        xsim_sc_channel<0, bool > *p_34_S00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_34->S00_AXI_bready.bind(*p_34_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_34_S00_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_34->S00_AXI_arid.bind(*p_34_S00_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_arid);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_34_S00_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_34->S00_AXI_araddr.bind(*p_34_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_34_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_34->S00_AXI_arlen.bind(*p_34_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_34_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_34->S00_AXI_arsize.bind(*p_34_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_34_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_34->S00_AXI_arburst.bind(*p_34_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_34_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_34->S00_AXI_arlock.bind(*p_34_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_34_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_34->S00_AXI_arcache.bind(*p_34_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_34_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_34->S00_AXI_arprot.bind(*p_34_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_34_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_34->S00_AXI_arqos.bind(*p_34_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_arqos);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_34_S00_AXI_aruser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_34->S00_AXI_aruser.bind(*p_34_S00_AXI_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_aruser);
        xsim_sc_channel<0, bool > *p_34_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_34->S00_AXI_arvalid.bind(*p_34_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_34_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_34->S00_AXI_arready.bind(*p_34_S00_AXI_arready);
        p_34_S00_AXI_arready->set_sv_netview_offsetfromdp(9822480);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_34_S00_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_34->S00_AXI_rid.bind(*p_34_S00_AXI_rid);
        p_34_S00_AXI_rid->set_sv_netview_offsetfromdp(9822536);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_34_S00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_34->S00_AXI_rdata.bind(*p_34_S00_AXI_rdata);
        p_34_S00_AXI_rdata->set_sv_netview_offsetfromdp(9822592);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_34_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_34->S00_AXI_rresp.bind(*p_34_S00_AXI_rresp);
        p_34_S00_AXI_rresp->set_sv_netview_offsetfromdp(9822648);
        xsim_sc_channel<0, bool > *p_34_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_34->S00_AXI_rlast.bind(*p_34_S00_AXI_rlast);
        p_34_S00_AXI_rlast->set_sv_netview_offsetfromdp(9822704);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_34_S00_AXI_ruser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_34->S00_AXI_ruser.bind(*p_34_S00_AXI_ruser);
        p_34_S00_AXI_ruser->set_sv_netview_offsetfromdp(9822760);
        xsim_sc_channel<0, bool > *p_34_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_34->S00_AXI_rvalid.bind(*p_34_S00_AXI_rvalid);
        p_34_S00_AXI_rvalid->set_sv_netview_offsetfromdp(9822816);
        xsim_sc_channel<0, bool > *p_34_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_34->S00_AXI_rready.bind(*p_34_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_rready);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_34_M00_AXI_awaddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_34->M00_AXI_awaddr.bind(*p_34_M00_AXI_awaddr);
        p_34_M00_AXI_awaddr->set_sv_netview_offsetfromdp(9822928);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_34_M00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_34->M00_AXI_awlen.bind(*p_34_M00_AXI_awlen);
        p_34_M00_AXI_awlen->set_sv_netview_offsetfromdp(9822984);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_34_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_34->M00_AXI_awsize.bind(*p_34_M00_AXI_awsize);
        p_34_M00_AXI_awsize->set_sv_netview_offsetfromdp(9823040);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_34_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_34->M00_AXI_awburst.bind(*p_34_M00_AXI_awburst);
        p_34_M00_AXI_awburst->set_sv_netview_offsetfromdp(9823096);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_34_M00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_34->M00_AXI_awlock.bind(*p_34_M00_AXI_awlock);
        p_34_M00_AXI_awlock->set_sv_netview_offsetfromdp(9823152);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_34_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_34->M00_AXI_awcache.bind(*p_34_M00_AXI_awcache);
        p_34_M00_AXI_awcache->set_sv_netview_offsetfromdp(9823208);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_34_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_34->M00_AXI_awprot.bind(*p_34_M00_AXI_awprot);
        p_34_M00_AXI_awprot->set_sv_netview_offsetfromdp(9823264);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_34_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_34->M00_AXI_awqos.bind(*p_34_M00_AXI_awqos);
        p_34_M00_AXI_awqos->set_sv_netview_offsetfromdp(9823320);
        xsim_sc_channel<0, bool > *p_34_M00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_34->M00_AXI_awvalid.bind(*p_34_M00_AXI_awvalid);
        p_34_M00_AXI_awvalid->set_sv_netview_offsetfromdp(9823376);
        xsim_sc_channel<0, bool > *p_34_M00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_34->M00_AXI_awready.bind(*p_34_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_34_M00_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_34_M00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_34->M00_AXI_wdata.bind(*p_34_M00_AXI_wdata);
        p_34_M00_AXI_wdata->set_sv_netview_offsetfromdp(9823488);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_34_M00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_34->M00_AXI_wstrb.bind(*p_34_M00_AXI_wstrb);
        p_34_M00_AXI_wstrb->set_sv_netview_offsetfromdp(9823544);
        xsim_sc_channel<0, bool > *p_34_M00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_34->M00_AXI_wlast.bind(*p_34_M00_AXI_wlast);
        p_34_M00_AXI_wlast->set_sv_netview_offsetfromdp(9823600);
        xsim_sc_channel<0, bool > *p_34_M00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_34->M00_AXI_wvalid.bind(*p_34_M00_AXI_wvalid);
        p_34_M00_AXI_wvalid->set_sv_netview_offsetfromdp(9823656);
        xsim_sc_channel<0, bool > *p_34_M00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_34->M00_AXI_wready.bind(*p_34_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_34_M00_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_34_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_34->M00_AXI_bresp.bind(*p_34_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_34_M00_AXI_bresp);
        xsim_sc_channel<0, bool > *p_34_M00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_34->M00_AXI_bvalid.bind(*p_34_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_34_M00_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_34_M00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_34->M00_AXI_bready.bind(*p_34_M00_AXI_bready);
        p_34_M00_AXI_bready->set_sv_netview_offsetfromdp(9823880);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_34_M00_AXI_araddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_34->M00_AXI_araddr.bind(*p_34_M00_AXI_araddr);
        p_34_M00_AXI_araddr->set_sv_netview_offsetfromdp(9823936);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_34_M00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_34->M00_AXI_arlen.bind(*p_34_M00_AXI_arlen);
        p_34_M00_AXI_arlen->set_sv_netview_offsetfromdp(9823992);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_34_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_34->M00_AXI_arsize.bind(*p_34_M00_AXI_arsize);
        p_34_M00_AXI_arsize->set_sv_netview_offsetfromdp(9824048);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_34_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_34->M00_AXI_arburst.bind(*p_34_M00_AXI_arburst);
        p_34_M00_AXI_arburst->set_sv_netview_offsetfromdp(9824104);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_34_M00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_34->M00_AXI_arlock.bind(*p_34_M00_AXI_arlock);
        p_34_M00_AXI_arlock->set_sv_netview_offsetfromdp(9824160);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_34_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_34->M00_AXI_arcache.bind(*p_34_M00_AXI_arcache);
        p_34_M00_AXI_arcache->set_sv_netview_offsetfromdp(9824216);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_34_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_34->M00_AXI_arprot.bind(*p_34_M00_AXI_arprot);
        p_34_M00_AXI_arprot->set_sv_netview_offsetfromdp(9824272);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_34_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_34->M00_AXI_arqos.bind(*p_34_M00_AXI_arqos);
        p_34_M00_AXI_arqos->set_sv_netview_offsetfromdp(9824328);
        xsim_sc_channel<0, bool > *p_34_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_34->M00_AXI_arvalid.bind(*p_34_M00_AXI_arvalid);
        p_34_M00_AXI_arvalid->set_sv_netview_offsetfromdp(9824384);
        xsim_sc_channel<0, bool > *p_34_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_34->M00_AXI_arready.bind(*p_34_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_34_M00_AXI_arready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_34_M00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_34->M00_AXI_rdata.bind(*p_34_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_34_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_34_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_34->M00_AXI_rresp.bind(*p_34_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_34_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_34_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_34->M00_AXI_rlast.bind(*p_34_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_34_M00_AXI_rlast);
        xsim_sc_channel<0, bool > *p_34_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_34->M00_AXI_rvalid.bind(*p_34_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_34_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_34_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_34->M00_AXI_rready.bind(*p_34_M00_AXI_rready);
        p_34_M00_AXI_rready->set_sv_netview_offsetfromdp(9824720);
        sc_inst_35 = new bd_d216_interconnect_PLRAM_MEM02_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.interconnect.interconnect_plram_mem02");
        sc_inst_35->xsim_set_dbg_index(2539);
        xsim_sc_channel<0, bool > *p_35_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_35->aclk.bind(*p_35_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_35_aclk);
        xsim_sc_channel<0, bool > *p_35_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_35->aresetn.bind(*p_35_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_35_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_35_S00_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_35->S00_AXI_awid.bind(*p_35_S00_AXI_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_awid);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_35_S00_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_35->S00_AXI_awaddr.bind(*p_35_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_35_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_35->S00_AXI_awlen.bind(*p_35_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_35_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_35->S00_AXI_awsize.bind(*p_35_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_35_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_35->S00_AXI_awburst.bind(*p_35_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_35_S00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_35->S00_AXI_awlock.bind(*p_35_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->S00_AXI_awcache.bind(*p_35_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_35_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_35->S00_AXI_awprot.bind(*p_35_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->S00_AXI_awqos.bind(*p_35_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_awqos);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_35_S00_AXI_awuser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_35->S00_AXI_awuser.bind(*p_35_S00_AXI_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_awuser);
        xsim_sc_channel<0, bool > *p_35_S00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_35->S00_AXI_awvalid.bind(*p_35_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_35_S00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_35->S00_AXI_awready.bind(*p_35_S00_AXI_awready);
        p_35_S00_AXI_awready->set_sv_netview_offsetfromdp(9825552);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_35_S00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_35->S00_AXI_wdata.bind(*p_35_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_35_S00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_35->S00_AXI_wstrb.bind(*p_35_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_35_S00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_35->S00_AXI_wlast.bind(*p_35_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_wlast);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_35_S00_AXI_wuser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_35->S00_AXI_wuser.bind(*p_35_S00_AXI_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_wuser);
        xsim_sc_channel<0, bool > *p_35_S00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_35->S00_AXI_wvalid.bind(*p_35_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_35_S00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_35->S00_AXI_wready.bind(*p_35_S00_AXI_wready);
        p_35_S00_AXI_wready->set_sv_netview_offsetfromdp(9825888);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_35_S00_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_35->S00_AXI_bid.bind(*p_35_S00_AXI_bid);
        p_35_S00_AXI_bid->set_sv_netview_offsetfromdp(9825944);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_35_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_35->S00_AXI_bresp.bind(*p_35_S00_AXI_bresp);
        p_35_S00_AXI_bresp->set_sv_netview_offsetfromdp(9826000);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_35_S00_AXI_buser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_35->S00_AXI_buser.bind(*p_35_S00_AXI_buser);
        p_35_S00_AXI_buser->set_sv_netview_offsetfromdp(9826056);
        xsim_sc_channel<0, bool > *p_35_S00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_35->S00_AXI_bvalid.bind(*p_35_S00_AXI_bvalid);
        p_35_S00_AXI_bvalid->set_sv_netview_offsetfromdp(9826112);
        xsim_sc_channel<0, bool > *p_35_S00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_35->S00_AXI_bready.bind(*p_35_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_35_S00_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_35->S00_AXI_arid.bind(*p_35_S00_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_arid);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_35_S00_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_35->S00_AXI_araddr.bind(*p_35_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_35_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_35->S00_AXI_arlen.bind(*p_35_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_35_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_35->S00_AXI_arsize.bind(*p_35_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_35_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_35->S00_AXI_arburst.bind(*p_35_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_35_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_35->S00_AXI_arlock.bind(*p_35_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->S00_AXI_arcache.bind(*p_35_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_35_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_35->S00_AXI_arprot.bind(*p_35_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->S00_AXI_arqos.bind(*p_35_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_arqos);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_35_S00_AXI_aruser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_35->S00_AXI_aruser.bind(*p_35_S00_AXI_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_aruser);
        xsim_sc_channel<0, bool > *p_35_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_35->S00_AXI_arvalid.bind(*p_35_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_35_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_35->S00_AXI_arready.bind(*p_35_S00_AXI_arready);
        p_35_S00_AXI_arready->set_sv_netview_offsetfromdp(9826840);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_35_S00_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_35->S00_AXI_rid.bind(*p_35_S00_AXI_rid);
        p_35_S00_AXI_rid->set_sv_netview_offsetfromdp(9826896);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_35_S00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_35->S00_AXI_rdata.bind(*p_35_S00_AXI_rdata);
        p_35_S00_AXI_rdata->set_sv_netview_offsetfromdp(9826952);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_35_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_35->S00_AXI_rresp.bind(*p_35_S00_AXI_rresp);
        p_35_S00_AXI_rresp->set_sv_netview_offsetfromdp(9827008);
        xsim_sc_channel<0, bool > *p_35_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_35->S00_AXI_rlast.bind(*p_35_S00_AXI_rlast);
        p_35_S00_AXI_rlast->set_sv_netview_offsetfromdp(9827064);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_35_S00_AXI_ruser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_35->S00_AXI_ruser.bind(*p_35_S00_AXI_ruser);
        p_35_S00_AXI_ruser->set_sv_netview_offsetfromdp(9827120);
        xsim_sc_channel<0, bool > *p_35_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_35->S00_AXI_rvalid.bind(*p_35_S00_AXI_rvalid);
        p_35_S00_AXI_rvalid->set_sv_netview_offsetfromdp(9827176);
        xsim_sc_channel<0, bool > *p_35_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_35->S00_AXI_rready.bind(*p_35_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_rready);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_35_M00_AXI_awaddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_35->M00_AXI_awaddr.bind(*p_35_M00_AXI_awaddr);
        p_35_M00_AXI_awaddr->set_sv_netview_offsetfromdp(9827288);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_35_M00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_35->M00_AXI_awlen.bind(*p_35_M00_AXI_awlen);
        p_35_M00_AXI_awlen->set_sv_netview_offsetfromdp(9827344);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_35_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_35->M00_AXI_awsize.bind(*p_35_M00_AXI_awsize);
        p_35_M00_AXI_awsize->set_sv_netview_offsetfromdp(9827400);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_35_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_35->M00_AXI_awburst.bind(*p_35_M00_AXI_awburst);
        p_35_M00_AXI_awburst->set_sv_netview_offsetfromdp(9827456);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_35_M00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_35->M00_AXI_awlock.bind(*p_35_M00_AXI_awlock);
        p_35_M00_AXI_awlock->set_sv_netview_offsetfromdp(9827512);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->M00_AXI_awcache.bind(*p_35_M00_AXI_awcache);
        p_35_M00_AXI_awcache->set_sv_netview_offsetfromdp(9827568);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_35_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_35->M00_AXI_awprot.bind(*p_35_M00_AXI_awprot);
        p_35_M00_AXI_awprot->set_sv_netview_offsetfromdp(9827624);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->M00_AXI_awqos.bind(*p_35_M00_AXI_awqos);
        p_35_M00_AXI_awqos->set_sv_netview_offsetfromdp(9827680);
        xsim_sc_channel<0, bool > *p_35_M00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_35->M00_AXI_awvalid.bind(*p_35_M00_AXI_awvalid);
        p_35_M00_AXI_awvalid->set_sv_netview_offsetfromdp(9827736);
        xsim_sc_channel<0, bool > *p_35_M00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_35->M00_AXI_awready.bind(*p_35_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M00_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_35_M00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_35->M00_AXI_wdata.bind(*p_35_M00_AXI_wdata);
        p_35_M00_AXI_wdata->set_sv_netview_offsetfromdp(9827848);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_35_M00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_35->M00_AXI_wstrb.bind(*p_35_M00_AXI_wstrb);
        p_35_M00_AXI_wstrb->set_sv_netview_offsetfromdp(9827904);
        xsim_sc_channel<0, bool > *p_35_M00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_35->M00_AXI_wlast.bind(*p_35_M00_AXI_wlast);
        p_35_M00_AXI_wlast->set_sv_netview_offsetfromdp(9827960);
        xsim_sc_channel<0, bool > *p_35_M00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_35->M00_AXI_wvalid.bind(*p_35_M00_AXI_wvalid);
        p_35_M00_AXI_wvalid->set_sv_netview_offsetfromdp(9828016);
        xsim_sc_channel<0, bool > *p_35_M00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_35->M00_AXI_wready.bind(*p_35_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M00_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_35_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_35->M00_AXI_bresp.bind(*p_35_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M00_AXI_bresp);
        xsim_sc_channel<0, bool > *p_35_M00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_35->M00_AXI_bvalid.bind(*p_35_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M00_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_35_M00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_35->M00_AXI_bready.bind(*p_35_M00_AXI_bready);
        p_35_M00_AXI_bready->set_sv_netview_offsetfromdp(9828240);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_35_M00_AXI_araddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_35->M00_AXI_araddr.bind(*p_35_M00_AXI_araddr);
        p_35_M00_AXI_araddr->set_sv_netview_offsetfromdp(9828296);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_35_M00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_35->M00_AXI_arlen.bind(*p_35_M00_AXI_arlen);
        p_35_M00_AXI_arlen->set_sv_netview_offsetfromdp(9828352);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_35_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_35->M00_AXI_arsize.bind(*p_35_M00_AXI_arsize);
        p_35_M00_AXI_arsize->set_sv_netview_offsetfromdp(9828408);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_35_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_35->M00_AXI_arburst.bind(*p_35_M00_AXI_arburst);
        p_35_M00_AXI_arburst->set_sv_netview_offsetfromdp(9828464);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_35_M00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_35->M00_AXI_arlock.bind(*p_35_M00_AXI_arlock);
        p_35_M00_AXI_arlock->set_sv_netview_offsetfromdp(9828520);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->M00_AXI_arcache.bind(*p_35_M00_AXI_arcache);
        p_35_M00_AXI_arcache->set_sv_netview_offsetfromdp(9828576);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_35_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_35->M00_AXI_arprot.bind(*p_35_M00_AXI_arprot);
        p_35_M00_AXI_arprot->set_sv_netview_offsetfromdp(9828632);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->M00_AXI_arqos.bind(*p_35_M00_AXI_arqos);
        p_35_M00_AXI_arqos->set_sv_netview_offsetfromdp(9828688);
        xsim_sc_channel<0, bool > *p_35_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_35->M00_AXI_arvalid.bind(*p_35_M00_AXI_arvalid);
        p_35_M00_AXI_arvalid->set_sv_netview_offsetfromdp(9828744);
        xsim_sc_channel<0, bool > *p_35_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_35->M00_AXI_arready.bind(*p_35_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M00_AXI_arready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_35_M00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_35->M00_AXI_rdata.bind(*p_35_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_35_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_35->M00_AXI_rresp.bind(*p_35_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_35_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_35->M00_AXI_rlast.bind(*p_35_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M00_AXI_rlast);
        xsim_sc_channel<0, bool > *p_35_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_35->M00_AXI_rvalid.bind(*p_35_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_35_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_35->M00_AXI_rready.bind(*p_35_M00_AXI_rready);
        p_35_M00_AXI_rready->set_sv_netview_offsetfromdp(9829080);
        sc_inst_36 = new bd_d216_interconnect_PLRAM_MEM03_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.interconnect.interconnect_plram_mem03");
        sc_inst_36->xsim_set_dbg_index(2540);
        xsim_sc_channel<0, bool > *p_36_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_36->aclk.bind(*p_36_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_36_aclk);
        xsim_sc_channel<0, bool > *p_36_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_36->aresetn.bind(*p_36_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_36_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_36_S00_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_36->S00_AXI_awid.bind(*p_36_S00_AXI_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_awid);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_36_S00_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_36->S00_AXI_awaddr.bind(*p_36_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_36_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_36->S00_AXI_awlen.bind(*p_36_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_36_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_36->S00_AXI_awsize.bind(*p_36_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_36_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_36->S00_AXI_awburst.bind(*p_36_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_36_S00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_36->S00_AXI_awlock.bind(*p_36_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_36_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_36->S00_AXI_awcache.bind(*p_36_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_36_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_36->S00_AXI_awprot.bind(*p_36_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_36_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_36->S00_AXI_awqos.bind(*p_36_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_awqos);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_36_S00_AXI_awuser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_36->S00_AXI_awuser.bind(*p_36_S00_AXI_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_awuser);
        xsim_sc_channel<0, bool > *p_36_S00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_36->S00_AXI_awvalid.bind(*p_36_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_36_S00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_36->S00_AXI_awready.bind(*p_36_S00_AXI_awready);
        p_36_S00_AXI_awready->set_sv_netview_offsetfromdp(9829912);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_36_S00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_36->S00_AXI_wdata.bind(*p_36_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_36_S00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_36->S00_AXI_wstrb.bind(*p_36_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_36_S00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_36->S00_AXI_wlast.bind(*p_36_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_wlast);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_36_S00_AXI_wuser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_36->S00_AXI_wuser.bind(*p_36_S00_AXI_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_wuser);
        xsim_sc_channel<0, bool > *p_36_S00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_36->S00_AXI_wvalid.bind(*p_36_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_36_S00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_36->S00_AXI_wready.bind(*p_36_S00_AXI_wready);
        p_36_S00_AXI_wready->set_sv_netview_offsetfromdp(9830248);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_36_S00_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_36->S00_AXI_bid.bind(*p_36_S00_AXI_bid);
        p_36_S00_AXI_bid->set_sv_netview_offsetfromdp(9830304);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_36_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_36->S00_AXI_bresp.bind(*p_36_S00_AXI_bresp);
        p_36_S00_AXI_bresp->set_sv_netview_offsetfromdp(9830360);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_36_S00_AXI_buser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_36->S00_AXI_buser.bind(*p_36_S00_AXI_buser);
        p_36_S00_AXI_buser->set_sv_netview_offsetfromdp(9830416);
        xsim_sc_channel<0, bool > *p_36_S00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_36->S00_AXI_bvalid.bind(*p_36_S00_AXI_bvalid);
        p_36_S00_AXI_bvalid->set_sv_netview_offsetfromdp(9830472);
        xsim_sc_channel<0, bool > *p_36_S00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_36->S00_AXI_bready.bind(*p_36_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_36_S00_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_36->S00_AXI_arid.bind(*p_36_S00_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_arid);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_36_S00_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_36->S00_AXI_araddr.bind(*p_36_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_36_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_36->S00_AXI_arlen.bind(*p_36_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_36_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_36->S00_AXI_arsize.bind(*p_36_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_36_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_36->S00_AXI_arburst.bind(*p_36_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_36_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_36->S00_AXI_arlock.bind(*p_36_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_36_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_36->S00_AXI_arcache.bind(*p_36_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_36_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_36->S00_AXI_arprot.bind(*p_36_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_36_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_36->S00_AXI_arqos.bind(*p_36_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_arqos);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_36_S00_AXI_aruser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_36->S00_AXI_aruser.bind(*p_36_S00_AXI_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_aruser);
        xsim_sc_channel<0, bool > *p_36_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_36->S00_AXI_arvalid.bind(*p_36_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_36_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_36->S00_AXI_arready.bind(*p_36_S00_AXI_arready);
        p_36_S00_AXI_arready->set_sv_netview_offsetfromdp(9831200);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_36_S00_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_36->S00_AXI_rid.bind(*p_36_S00_AXI_rid);
        p_36_S00_AXI_rid->set_sv_netview_offsetfromdp(9831256);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_36_S00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_36->S00_AXI_rdata.bind(*p_36_S00_AXI_rdata);
        p_36_S00_AXI_rdata->set_sv_netview_offsetfromdp(9831312);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_36_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_36->S00_AXI_rresp.bind(*p_36_S00_AXI_rresp);
        p_36_S00_AXI_rresp->set_sv_netview_offsetfromdp(9831368);
        xsim_sc_channel<0, bool > *p_36_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_36->S00_AXI_rlast.bind(*p_36_S00_AXI_rlast);
        p_36_S00_AXI_rlast->set_sv_netview_offsetfromdp(9831424);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_36_S00_AXI_ruser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_36->S00_AXI_ruser.bind(*p_36_S00_AXI_ruser);
        p_36_S00_AXI_ruser->set_sv_netview_offsetfromdp(9831480);
        xsim_sc_channel<0, bool > *p_36_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_36->S00_AXI_rvalid.bind(*p_36_S00_AXI_rvalid);
        p_36_S00_AXI_rvalid->set_sv_netview_offsetfromdp(9831536);
        xsim_sc_channel<0, bool > *p_36_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_36->S00_AXI_rready.bind(*p_36_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_rready);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_36_M00_AXI_awaddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_36->M00_AXI_awaddr.bind(*p_36_M00_AXI_awaddr);
        p_36_M00_AXI_awaddr->set_sv_netview_offsetfromdp(9831648);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_36_M00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_36->M00_AXI_awlen.bind(*p_36_M00_AXI_awlen);
        p_36_M00_AXI_awlen->set_sv_netview_offsetfromdp(9831704);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_36_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_36->M00_AXI_awsize.bind(*p_36_M00_AXI_awsize);
        p_36_M00_AXI_awsize->set_sv_netview_offsetfromdp(9831760);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_36_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_36->M00_AXI_awburst.bind(*p_36_M00_AXI_awburst);
        p_36_M00_AXI_awburst->set_sv_netview_offsetfromdp(9831816);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_36_M00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_36->M00_AXI_awlock.bind(*p_36_M00_AXI_awlock);
        p_36_M00_AXI_awlock->set_sv_netview_offsetfromdp(9831872);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_36_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_36->M00_AXI_awcache.bind(*p_36_M00_AXI_awcache);
        p_36_M00_AXI_awcache->set_sv_netview_offsetfromdp(9831928);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_36_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_36->M00_AXI_awprot.bind(*p_36_M00_AXI_awprot);
        p_36_M00_AXI_awprot->set_sv_netview_offsetfromdp(9831984);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_36_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_36->M00_AXI_awqos.bind(*p_36_M00_AXI_awqos);
        p_36_M00_AXI_awqos->set_sv_netview_offsetfromdp(9832040);
        xsim_sc_channel<0, bool > *p_36_M00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_36->M00_AXI_awvalid.bind(*p_36_M00_AXI_awvalid);
        p_36_M00_AXI_awvalid->set_sv_netview_offsetfromdp(9832096);
        xsim_sc_channel<0, bool > *p_36_M00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_36->M00_AXI_awready.bind(*p_36_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M00_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_36_M00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_36->M00_AXI_wdata.bind(*p_36_M00_AXI_wdata);
        p_36_M00_AXI_wdata->set_sv_netview_offsetfromdp(9832208);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_36_M00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_36->M00_AXI_wstrb.bind(*p_36_M00_AXI_wstrb);
        p_36_M00_AXI_wstrb->set_sv_netview_offsetfromdp(9832264);
        xsim_sc_channel<0, bool > *p_36_M00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_36->M00_AXI_wlast.bind(*p_36_M00_AXI_wlast);
        p_36_M00_AXI_wlast->set_sv_netview_offsetfromdp(9832320);
        xsim_sc_channel<0, bool > *p_36_M00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_36->M00_AXI_wvalid.bind(*p_36_M00_AXI_wvalid);
        p_36_M00_AXI_wvalid->set_sv_netview_offsetfromdp(9832376);
        xsim_sc_channel<0, bool > *p_36_M00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_36->M00_AXI_wready.bind(*p_36_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M00_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_36_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_36->M00_AXI_bresp.bind(*p_36_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M00_AXI_bresp);
        xsim_sc_channel<0, bool > *p_36_M00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_36->M00_AXI_bvalid.bind(*p_36_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M00_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_36_M00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_36->M00_AXI_bready.bind(*p_36_M00_AXI_bready);
        p_36_M00_AXI_bready->set_sv_netview_offsetfromdp(9832600);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_36_M00_AXI_araddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_36->M00_AXI_araddr.bind(*p_36_M00_AXI_araddr);
        p_36_M00_AXI_araddr->set_sv_netview_offsetfromdp(9832656);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_36_M00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_36->M00_AXI_arlen.bind(*p_36_M00_AXI_arlen);
        p_36_M00_AXI_arlen->set_sv_netview_offsetfromdp(9832712);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_36_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_36->M00_AXI_arsize.bind(*p_36_M00_AXI_arsize);
        p_36_M00_AXI_arsize->set_sv_netview_offsetfromdp(9832768);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_36_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_36->M00_AXI_arburst.bind(*p_36_M00_AXI_arburst);
        p_36_M00_AXI_arburst->set_sv_netview_offsetfromdp(9832824);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_36_M00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_36->M00_AXI_arlock.bind(*p_36_M00_AXI_arlock);
        p_36_M00_AXI_arlock->set_sv_netview_offsetfromdp(9832880);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_36_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_36->M00_AXI_arcache.bind(*p_36_M00_AXI_arcache);
        p_36_M00_AXI_arcache->set_sv_netview_offsetfromdp(9832936);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_36_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_36->M00_AXI_arprot.bind(*p_36_M00_AXI_arprot);
        p_36_M00_AXI_arprot->set_sv_netview_offsetfromdp(9832992);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_36_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_36->M00_AXI_arqos.bind(*p_36_M00_AXI_arqos);
        p_36_M00_AXI_arqos->set_sv_netview_offsetfromdp(9833048);
        xsim_sc_channel<0, bool > *p_36_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_36->M00_AXI_arvalid.bind(*p_36_M00_AXI_arvalid);
        p_36_M00_AXI_arvalid->set_sv_netview_offsetfromdp(9833104);
        xsim_sc_channel<0, bool > *p_36_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_36->M00_AXI_arready.bind(*p_36_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M00_AXI_arready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_36_M00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_36->M00_AXI_rdata.bind(*p_36_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_36_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_36->M00_AXI_rresp.bind(*p_36_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_36_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_36->M00_AXI_rlast.bind(*p_36_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M00_AXI_rlast);
        xsim_sc_channel<0, bool > *p_36_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_36->M00_AXI_rvalid.bind(*p_36_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_36_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_36->M00_AXI_rready.bind(*p_36_M00_AXI_rready);
        p_36_M00_AXI_rready->set_sv_netview_offsetfromdp(9833440);
        sc_inst_37 = new bd_d216_interconnect_PLRAM_MEM04_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.interconnect.interconnect_plram_mem04");
        sc_inst_37->xsim_set_dbg_index(2541);
        xsim_sc_channel<0, bool > *p_37_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_37->aclk.bind(*p_37_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_37_aclk);
        xsim_sc_channel<0, bool > *p_37_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_37->aresetn.bind(*p_37_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_37_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_37_S00_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_37->S00_AXI_awid.bind(*p_37_S00_AXI_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_awid);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_37_S00_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_37->S00_AXI_awaddr.bind(*p_37_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_37_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_37->S00_AXI_awlen.bind(*p_37_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_37_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_37->S00_AXI_awsize.bind(*p_37_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_37_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_37->S00_AXI_awburst.bind(*p_37_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_37_S00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_37->S00_AXI_awlock.bind(*p_37_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_37_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_37->S00_AXI_awcache.bind(*p_37_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_37_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_37->S00_AXI_awprot.bind(*p_37_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_37_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_37->S00_AXI_awqos.bind(*p_37_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_awqos);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_37_S00_AXI_awuser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_37->S00_AXI_awuser.bind(*p_37_S00_AXI_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_awuser);
        xsim_sc_channel<0, bool > *p_37_S00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_37->S00_AXI_awvalid.bind(*p_37_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_37_S00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_37->S00_AXI_awready.bind(*p_37_S00_AXI_awready);
        p_37_S00_AXI_awready->set_sv_netview_offsetfromdp(9834272);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_37_S00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_37->S00_AXI_wdata.bind(*p_37_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_37_S00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_37->S00_AXI_wstrb.bind(*p_37_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_37_S00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_37->S00_AXI_wlast.bind(*p_37_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_wlast);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_37_S00_AXI_wuser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_37->S00_AXI_wuser.bind(*p_37_S00_AXI_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_wuser);
        xsim_sc_channel<0, bool > *p_37_S00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_37->S00_AXI_wvalid.bind(*p_37_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_37_S00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_37->S00_AXI_wready.bind(*p_37_S00_AXI_wready);
        p_37_S00_AXI_wready->set_sv_netview_offsetfromdp(9834608);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_37_S00_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_37->S00_AXI_bid.bind(*p_37_S00_AXI_bid);
        p_37_S00_AXI_bid->set_sv_netview_offsetfromdp(9834664);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_37_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_37->S00_AXI_bresp.bind(*p_37_S00_AXI_bresp);
        p_37_S00_AXI_bresp->set_sv_netview_offsetfromdp(9834720);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_37_S00_AXI_buser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_37->S00_AXI_buser.bind(*p_37_S00_AXI_buser);
        p_37_S00_AXI_buser->set_sv_netview_offsetfromdp(9834776);
        xsim_sc_channel<0, bool > *p_37_S00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_37->S00_AXI_bvalid.bind(*p_37_S00_AXI_bvalid);
        p_37_S00_AXI_bvalid->set_sv_netview_offsetfromdp(9834832);
        xsim_sc_channel<0, bool > *p_37_S00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_37->S00_AXI_bready.bind(*p_37_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_37_S00_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_37->S00_AXI_arid.bind(*p_37_S00_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_arid);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_37_S00_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_37->S00_AXI_araddr.bind(*p_37_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_37_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_37->S00_AXI_arlen.bind(*p_37_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_37_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_37->S00_AXI_arsize.bind(*p_37_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_37_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_37->S00_AXI_arburst.bind(*p_37_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_37_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_37->S00_AXI_arlock.bind(*p_37_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_37_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_37->S00_AXI_arcache.bind(*p_37_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_37_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_37->S00_AXI_arprot.bind(*p_37_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_37_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_37->S00_AXI_arqos.bind(*p_37_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_arqos);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_37_S00_AXI_aruser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_37->S00_AXI_aruser.bind(*p_37_S00_AXI_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_aruser);
        xsim_sc_channel<0, bool > *p_37_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_37->S00_AXI_arvalid.bind(*p_37_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_37_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_37->S00_AXI_arready.bind(*p_37_S00_AXI_arready);
        p_37_S00_AXI_arready->set_sv_netview_offsetfromdp(9835560);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_37_S00_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_37->S00_AXI_rid.bind(*p_37_S00_AXI_rid);
        p_37_S00_AXI_rid->set_sv_netview_offsetfromdp(9835616);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_37_S00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_37->S00_AXI_rdata.bind(*p_37_S00_AXI_rdata);
        p_37_S00_AXI_rdata->set_sv_netview_offsetfromdp(9835672);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_37_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_37->S00_AXI_rresp.bind(*p_37_S00_AXI_rresp);
        p_37_S00_AXI_rresp->set_sv_netview_offsetfromdp(9835728);
        xsim_sc_channel<0, bool > *p_37_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_37->S00_AXI_rlast.bind(*p_37_S00_AXI_rlast);
        p_37_S00_AXI_rlast->set_sv_netview_offsetfromdp(9835784);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_37_S00_AXI_ruser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_37->S00_AXI_ruser.bind(*p_37_S00_AXI_ruser);
        p_37_S00_AXI_ruser->set_sv_netview_offsetfromdp(9835840);
        xsim_sc_channel<0, bool > *p_37_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_37->S00_AXI_rvalid.bind(*p_37_S00_AXI_rvalid);
        p_37_S00_AXI_rvalid->set_sv_netview_offsetfromdp(9835896);
        xsim_sc_channel<0, bool > *p_37_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_37->S00_AXI_rready.bind(*p_37_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_rready);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_37_M00_AXI_awaddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_37->M00_AXI_awaddr.bind(*p_37_M00_AXI_awaddr);
        p_37_M00_AXI_awaddr->set_sv_netview_offsetfromdp(9836008);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_37_M00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_37->M00_AXI_awlen.bind(*p_37_M00_AXI_awlen);
        p_37_M00_AXI_awlen->set_sv_netview_offsetfromdp(9836064);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_37_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_37->M00_AXI_awsize.bind(*p_37_M00_AXI_awsize);
        p_37_M00_AXI_awsize->set_sv_netview_offsetfromdp(9836120);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_37_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_37->M00_AXI_awburst.bind(*p_37_M00_AXI_awburst);
        p_37_M00_AXI_awburst->set_sv_netview_offsetfromdp(9836176);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_37_M00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_37->M00_AXI_awlock.bind(*p_37_M00_AXI_awlock);
        p_37_M00_AXI_awlock->set_sv_netview_offsetfromdp(9836232);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_37_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_37->M00_AXI_awcache.bind(*p_37_M00_AXI_awcache);
        p_37_M00_AXI_awcache->set_sv_netview_offsetfromdp(9836288);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_37_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_37->M00_AXI_awprot.bind(*p_37_M00_AXI_awprot);
        p_37_M00_AXI_awprot->set_sv_netview_offsetfromdp(9836344);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_37_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_37->M00_AXI_awqos.bind(*p_37_M00_AXI_awqos);
        p_37_M00_AXI_awqos->set_sv_netview_offsetfromdp(9836400);
        xsim_sc_channel<0, bool > *p_37_M00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_37->M00_AXI_awvalid.bind(*p_37_M00_AXI_awvalid);
        p_37_M00_AXI_awvalid->set_sv_netview_offsetfromdp(9836456);
        xsim_sc_channel<0, bool > *p_37_M00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_37->M00_AXI_awready.bind(*p_37_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_37_M00_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_37_M00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_37->M00_AXI_wdata.bind(*p_37_M00_AXI_wdata);
        p_37_M00_AXI_wdata->set_sv_netview_offsetfromdp(9836568);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_37_M00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_37->M00_AXI_wstrb.bind(*p_37_M00_AXI_wstrb);
        p_37_M00_AXI_wstrb->set_sv_netview_offsetfromdp(9836624);
        xsim_sc_channel<0, bool > *p_37_M00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_37->M00_AXI_wlast.bind(*p_37_M00_AXI_wlast);
        p_37_M00_AXI_wlast->set_sv_netview_offsetfromdp(9836680);
        xsim_sc_channel<0, bool > *p_37_M00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_37->M00_AXI_wvalid.bind(*p_37_M00_AXI_wvalid);
        p_37_M00_AXI_wvalid->set_sv_netview_offsetfromdp(9836736);
        xsim_sc_channel<0, bool > *p_37_M00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_37->M00_AXI_wready.bind(*p_37_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_37_M00_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_37_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_37->M00_AXI_bresp.bind(*p_37_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_37_M00_AXI_bresp);
        xsim_sc_channel<0, bool > *p_37_M00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_37->M00_AXI_bvalid.bind(*p_37_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_37_M00_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_37_M00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_37->M00_AXI_bready.bind(*p_37_M00_AXI_bready);
        p_37_M00_AXI_bready->set_sv_netview_offsetfromdp(9836960);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_37_M00_AXI_araddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_37->M00_AXI_araddr.bind(*p_37_M00_AXI_araddr);
        p_37_M00_AXI_araddr->set_sv_netview_offsetfromdp(9837016);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_37_M00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_37->M00_AXI_arlen.bind(*p_37_M00_AXI_arlen);
        p_37_M00_AXI_arlen->set_sv_netview_offsetfromdp(9837072);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_37_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_37->M00_AXI_arsize.bind(*p_37_M00_AXI_arsize);
        p_37_M00_AXI_arsize->set_sv_netview_offsetfromdp(9837128);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_37_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_37->M00_AXI_arburst.bind(*p_37_M00_AXI_arburst);
        p_37_M00_AXI_arburst->set_sv_netview_offsetfromdp(9837184);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_37_M00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_37->M00_AXI_arlock.bind(*p_37_M00_AXI_arlock);
        p_37_M00_AXI_arlock->set_sv_netview_offsetfromdp(9837240);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_37_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_37->M00_AXI_arcache.bind(*p_37_M00_AXI_arcache);
        p_37_M00_AXI_arcache->set_sv_netview_offsetfromdp(9837296);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_37_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_37->M00_AXI_arprot.bind(*p_37_M00_AXI_arprot);
        p_37_M00_AXI_arprot->set_sv_netview_offsetfromdp(9837352);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_37_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_37->M00_AXI_arqos.bind(*p_37_M00_AXI_arqos);
        p_37_M00_AXI_arqos->set_sv_netview_offsetfromdp(9837408);
        xsim_sc_channel<0, bool > *p_37_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_37->M00_AXI_arvalid.bind(*p_37_M00_AXI_arvalid);
        p_37_M00_AXI_arvalid->set_sv_netview_offsetfromdp(9837464);
        xsim_sc_channel<0, bool > *p_37_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_37->M00_AXI_arready.bind(*p_37_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_37_M00_AXI_arready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_37_M00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_37->M00_AXI_rdata.bind(*p_37_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_37_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_37_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_37->M00_AXI_rresp.bind(*p_37_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_37_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_37_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_37->M00_AXI_rlast.bind(*p_37_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_37_M00_AXI_rlast);
        xsim_sc_channel<0, bool > *p_37_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_37->M00_AXI_rvalid.bind(*p_37_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_37_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_37_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_37->M00_AXI_rready.bind(*p_37_M00_AXI_rready);
        p_37_M00_AXI_rready->set_sv_netview_offsetfromdp(9837800);
        sc_inst_38 = new bd_d216_interconnect_PLRAM_MEM05_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.interconnect.interconnect_plram_mem05");
        sc_inst_38->xsim_set_dbg_index(2542);
        xsim_sc_channel<0, bool > *p_38_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_38->aclk.bind(*p_38_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_38_aclk);
        xsim_sc_channel<0, bool > *p_38_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_38->aresetn.bind(*p_38_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_38_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_38_S00_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_38->S00_AXI_awid.bind(*p_38_S00_AXI_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_awid);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_38_S00_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_38->S00_AXI_awaddr.bind(*p_38_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_38_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_38->S00_AXI_awlen.bind(*p_38_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_38_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_38->S00_AXI_awsize.bind(*p_38_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_38_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_38->S00_AXI_awburst.bind(*p_38_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_38_S00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_38->S00_AXI_awlock.bind(*p_38_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_38_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_38->S00_AXI_awcache.bind(*p_38_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_38_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_38->S00_AXI_awprot.bind(*p_38_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_38_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_38->S00_AXI_awqos.bind(*p_38_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_awqos);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_38_S00_AXI_awuser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_38->S00_AXI_awuser.bind(*p_38_S00_AXI_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_awuser);
        xsim_sc_channel<0, bool > *p_38_S00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_38->S00_AXI_awvalid.bind(*p_38_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_38_S00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_38->S00_AXI_awready.bind(*p_38_S00_AXI_awready);
        p_38_S00_AXI_awready->set_sv_netview_offsetfromdp(9838632);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_38_S00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_38->S00_AXI_wdata.bind(*p_38_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_38_S00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_38->S00_AXI_wstrb.bind(*p_38_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_38_S00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_38->S00_AXI_wlast.bind(*p_38_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_wlast);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_38_S00_AXI_wuser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_38->S00_AXI_wuser.bind(*p_38_S00_AXI_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_wuser);
        xsim_sc_channel<0, bool > *p_38_S00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_38->S00_AXI_wvalid.bind(*p_38_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_38_S00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_38->S00_AXI_wready.bind(*p_38_S00_AXI_wready);
        p_38_S00_AXI_wready->set_sv_netview_offsetfromdp(9838968);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_38_S00_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_38->S00_AXI_bid.bind(*p_38_S00_AXI_bid);
        p_38_S00_AXI_bid->set_sv_netview_offsetfromdp(9839024);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_38_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_38->S00_AXI_bresp.bind(*p_38_S00_AXI_bresp);
        p_38_S00_AXI_bresp->set_sv_netview_offsetfromdp(9839080);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_38_S00_AXI_buser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_38->S00_AXI_buser.bind(*p_38_S00_AXI_buser);
        p_38_S00_AXI_buser->set_sv_netview_offsetfromdp(9839136);
        xsim_sc_channel<0, bool > *p_38_S00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_38->S00_AXI_bvalid.bind(*p_38_S00_AXI_bvalid);
        p_38_S00_AXI_bvalid->set_sv_netview_offsetfromdp(9839192);
        xsim_sc_channel<0, bool > *p_38_S00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_38->S00_AXI_bready.bind(*p_38_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_38_S00_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_38->S00_AXI_arid.bind(*p_38_S00_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_arid);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_38_S00_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_38->S00_AXI_araddr.bind(*p_38_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_38_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_38->S00_AXI_arlen.bind(*p_38_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_38_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_38->S00_AXI_arsize.bind(*p_38_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_38_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_38->S00_AXI_arburst.bind(*p_38_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_38_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_38->S00_AXI_arlock.bind(*p_38_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_38_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_38->S00_AXI_arcache.bind(*p_38_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_38_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_38->S00_AXI_arprot.bind(*p_38_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_38_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_38->S00_AXI_arqos.bind(*p_38_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_arqos);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_38_S00_AXI_aruser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_38->S00_AXI_aruser.bind(*p_38_S00_AXI_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_aruser);
        xsim_sc_channel<0, bool > *p_38_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_38->S00_AXI_arvalid.bind(*p_38_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_38_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_38->S00_AXI_arready.bind(*p_38_S00_AXI_arready);
        p_38_S00_AXI_arready->set_sv_netview_offsetfromdp(9839920);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_38_S00_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_38->S00_AXI_rid.bind(*p_38_S00_AXI_rid);
        p_38_S00_AXI_rid->set_sv_netview_offsetfromdp(9839976);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_38_S00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_38->S00_AXI_rdata.bind(*p_38_S00_AXI_rdata);
        p_38_S00_AXI_rdata->set_sv_netview_offsetfromdp(9840032);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_38_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_38->S00_AXI_rresp.bind(*p_38_S00_AXI_rresp);
        p_38_S00_AXI_rresp->set_sv_netview_offsetfromdp(9840088);
        xsim_sc_channel<0, bool > *p_38_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_38->S00_AXI_rlast.bind(*p_38_S00_AXI_rlast);
        p_38_S00_AXI_rlast->set_sv_netview_offsetfromdp(9840144);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_38_S00_AXI_ruser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_38->S00_AXI_ruser.bind(*p_38_S00_AXI_ruser);
        p_38_S00_AXI_ruser->set_sv_netview_offsetfromdp(9840200);
        xsim_sc_channel<0, bool > *p_38_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_38->S00_AXI_rvalid.bind(*p_38_S00_AXI_rvalid);
        p_38_S00_AXI_rvalid->set_sv_netview_offsetfromdp(9840256);
        xsim_sc_channel<0, bool > *p_38_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_38->S00_AXI_rready.bind(*p_38_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_rready);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_38_M00_AXI_awaddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_38->M00_AXI_awaddr.bind(*p_38_M00_AXI_awaddr);
        p_38_M00_AXI_awaddr->set_sv_netview_offsetfromdp(9840368);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_38_M00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_38->M00_AXI_awlen.bind(*p_38_M00_AXI_awlen);
        p_38_M00_AXI_awlen->set_sv_netview_offsetfromdp(9840424);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_38_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_38->M00_AXI_awsize.bind(*p_38_M00_AXI_awsize);
        p_38_M00_AXI_awsize->set_sv_netview_offsetfromdp(9840480);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_38_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_38->M00_AXI_awburst.bind(*p_38_M00_AXI_awburst);
        p_38_M00_AXI_awburst->set_sv_netview_offsetfromdp(9840536);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_38_M00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_38->M00_AXI_awlock.bind(*p_38_M00_AXI_awlock);
        p_38_M00_AXI_awlock->set_sv_netview_offsetfromdp(9840592);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_38_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_38->M00_AXI_awcache.bind(*p_38_M00_AXI_awcache);
        p_38_M00_AXI_awcache->set_sv_netview_offsetfromdp(9840648);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_38_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_38->M00_AXI_awprot.bind(*p_38_M00_AXI_awprot);
        p_38_M00_AXI_awprot->set_sv_netview_offsetfromdp(9840704);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_38_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_38->M00_AXI_awqos.bind(*p_38_M00_AXI_awqos);
        p_38_M00_AXI_awqos->set_sv_netview_offsetfromdp(9840760);
        xsim_sc_channel<0, bool > *p_38_M00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_38->M00_AXI_awvalid.bind(*p_38_M00_AXI_awvalid);
        p_38_M00_AXI_awvalid->set_sv_netview_offsetfromdp(9840816);
        xsim_sc_channel<0, bool > *p_38_M00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_38->M00_AXI_awready.bind(*p_38_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M00_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_38_M00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_38->M00_AXI_wdata.bind(*p_38_M00_AXI_wdata);
        p_38_M00_AXI_wdata->set_sv_netview_offsetfromdp(9840928);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_38_M00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_38->M00_AXI_wstrb.bind(*p_38_M00_AXI_wstrb);
        p_38_M00_AXI_wstrb->set_sv_netview_offsetfromdp(9840984);
        xsim_sc_channel<0, bool > *p_38_M00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_38->M00_AXI_wlast.bind(*p_38_M00_AXI_wlast);
        p_38_M00_AXI_wlast->set_sv_netview_offsetfromdp(9841040);
        xsim_sc_channel<0, bool > *p_38_M00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_38->M00_AXI_wvalid.bind(*p_38_M00_AXI_wvalid);
        p_38_M00_AXI_wvalid->set_sv_netview_offsetfromdp(9841096);
        xsim_sc_channel<0, bool > *p_38_M00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_38->M00_AXI_wready.bind(*p_38_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M00_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_38_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_38->M00_AXI_bresp.bind(*p_38_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M00_AXI_bresp);
        xsim_sc_channel<0, bool > *p_38_M00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_38->M00_AXI_bvalid.bind(*p_38_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M00_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_38_M00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_38->M00_AXI_bready.bind(*p_38_M00_AXI_bready);
        p_38_M00_AXI_bready->set_sv_netview_offsetfromdp(9841320);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_38_M00_AXI_araddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_38->M00_AXI_araddr.bind(*p_38_M00_AXI_araddr);
        p_38_M00_AXI_araddr->set_sv_netview_offsetfromdp(9841376);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_38_M00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_38->M00_AXI_arlen.bind(*p_38_M00_AXI_arlen);
        p_38_M00_AXI_arlen->set_sv_netview_offsetfromdp(9841432);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_38_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_38->M00_AXI_arsize.bind(*p_38_M00_AXI_arsize);
        p_38_M00_AXI_arsize->set_sv_netview_offsetfromdp(9841488);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_38_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_38->M00_AXI_arburst.bind(*p_38_M00_AXI_arburst);
        p_38_M00_AXI_arburst->set_sv_netview_offsetfromdp(9841544);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_38_M00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_38->M00_AXI_arlock.bind(*p_38_M00_AXI_arlock);
        p_38_M00_AXI_arlock->set_sv_netview_offsetfromdp(9841600);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_38_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_38->M00_AXI_arcache.bind(*p_38_M00_AXI_arcache);
        p_38_M00_AXI_arcache->set_sv_netview_offsetfromdp(9841656);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_38_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_38->M00_AXI_arprot.bind(*p_38_M00_AXI_arprot);
        p_38_M00_AXI_arprot->set_sv_netview_offsetfromdp(9841712);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_38_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_38->M00_AXI_arqos.bind(*p_38_M00_AXI_arqos);
        p_38_M00_AXI_arqos->set_sv_netview_offsetfromdp(9841768);
        xsim_sc_channel<0, bool > *p_38_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_38->M00_AXI_arvalid.bind(*p_38_M00_AXI_arvalid);
        p_38_M00_AXI_arvalid->set_sv_netview_offsetfromdp(9841824);
        xsim_sc_channel<0, bool > *p_38_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_38->M00_AXI_arready.bind(*p_38_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M00_AXI_arready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_38_M00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_38->M00_AXI_rdata.bind(*p_38_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_38_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_38->M00_AXI_rresp.bind(*p_38_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_38_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_38->M00_AXI_rlast.bind(*p_38_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M00_AXI_rlast);
        xsim_sc_channel<0, bool > *p_38_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_38->M00_AXI_rvalid.bind(*p_38_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_38_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_38->M00_AXI_rready.bind(*p_38_M00_AXI_rready);
        p_38_M00_AXI_rready->set_sv_netview_offsetfromdp(9842160);
        sc_inst_39 = new bd_d216_interconnect_S00_AXI_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.interconnect.interconnect_s00_axi");
        sc_inst_39->xsim_set_dbg_index(2543);
        xsim_sc_channel<0, bool > *p_39_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_39->aclk.bind(*p_39_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_39_aclk);
        xsim_sc_channel<0, bool > *p_39_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_39->aresetn.bind(*p_39_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_39_aresetn);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_39_S00_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_39->S00_AXI_awaddr.bind(*p_39_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_39_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_39->S00_AXI_awlen.bind(*p_39_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_39_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_39->S00_AXI_awsize.bind(*p_39_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_39_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_39->S00_AXI_awburst.bind(*p_39_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_39_S00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_39->S00_AXI_awlock.bind(*p_39_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_39_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_39->S00_AXI_awcache.bind(*p_39_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_39_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_39->S00_AXI_awprot.bind(*p_39_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_39_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_39->S00_AXI_awqos.bind(*p_39_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_awqos);
        xsim_sc_channel<0, bool > *p_39_S00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->S00_AXI_awvalid.bind(*p_39_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_39_S00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_39->S00_AXI_awready.bind(*p_39_S00_AXI_awready);
        p_39_S00_AXI_awready->set_sv_netview_offsetfromdp(9842880);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_39_S00_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_39->S00_AXI_wdata.bind(*p_39_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_39_S00_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_39->S00_AXI_wstrb.bind(*p_39_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_39_S00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_39->S00_AXI_wlast.bind(*p_39_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_wlast);
        xsim_sc_channel<0, bool > *p_39_S00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->S00_AXI_wvalid.bind(*p_39_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_39_S00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_39->S00_AXI_wready.bind(*p_39_S00_AXI_wready);
        p_39_S00_AXI_wready->set_sv_netview_offsetfromdp(9843160);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_39_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_39->S00_AXI_bresp.bind(*p_39_S00_AXI_bresp);
        p_39_S00_AXI_bresp->set_sv_netview_offsetfromdp(9843216);
        xsim_sc_channel<0, bool > *p_39_S00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->S00_AXI_bvalid.bind(*p_39_S00_AXI_bvalid);
        p_39_S00_AXI_bvalid->set_sv_netview_offsetfromdp(9843272);
        xsim_sc_channel<0, bool > *p_39_S00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_39->S00_AXI_bready.bind(*p_39_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_bready);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_39_S00_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_39->S00_AXI_araddr.bind(*p_39_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_39_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_39->S00_AXI_arlen.bind(*p_39_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_39_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_39->S00_AXI_arsize.bind(*p_39_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_39_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_39->S00_AXI_arburst.bind(*p_39_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_39_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_39->S00_AXI_arlock.bind(*p_39_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_39_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_39->S00_AXI_arcache.bind(*p_39_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_39_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_39->S00_AXI_arprot.bind(*p_39_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_39_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_39->S00_AXI_arqos.bind(*p_39_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_arqos);
        xsim_sc_channel<0, bool > *p_39_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->S00_AXI_arvalid.bind(*p_39_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_39_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_39->S00_AXI_arready.bind(*p_39_S00_AXI_arready);
        p_39_S00_AXI_arready->set_sv_netview_offsetfromdp(9843888);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_39_S00_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_39->S00_AXI_rdata.bind(*p_39_S00_AXI_rdata);
        p_39_S00_AXI_rdata->set_sv_netview_offsetfromdp(9843944);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_39_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_39->S00_AXI_rresp.bind(*p_39_S00_AXI_rresp);
        p_39_S00_AXI_rresp->set_sv_netview_offsetfromdp(9844000);
        xsim_sc_channel<0, bool > *p_39_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_39->S00_AXI_rlast.bind(*p_39_S00_AXI_rlast);
        p_39_S00_AXI_rlast->set_sv_netview_offsetfromdp(9844056);
        xsim_sc_channel<0, bool > *p_39_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->S00_AXI_rvalid.bind(*p_39_S00_AXI_rvalid);
        p_39_S00_AXI_rvalid->set_sv_netview_offsetfromdp(9844112);
        xsim_sc_channel<0, bool > *p_39_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_39->S00_AXI_rready.bind(*p_39_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_rready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_39_M00_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_39->M00_AXI_awid.bind(*p_39_M00_AXI_awid);
        p_39_M00_AXI_awid->set_sv_netview_offsetfromdp(9844224);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_39_M00_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_39->M00_AXI_awaddr.bind(*p_39_M00_AXI_awaddr);
        p_39_M00_AXI_awaddr->set_sv_netview_offsetfromdp(9844280);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_39_M00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_39->M00_AXI_awlen.bind(*p_39_M00_AXI_awlen);
        p_39_M00_AXI_awlen->set_sv_netview_offsetfromdp(9844336);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_39_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_39->M00_AXI_awsize.bind(*p_39_M00_AXI_awsize);
        p_39_M00_AXI_awsize->set_sv_netview_offsetfromdp(9844392);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_39_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_39->M00_AXI_awburst.bind(*p_39_M00_AXI_awburst);
        p_39_M00_AXI_awburst->set_sv_netview_offsetfromdp(9844448);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_39_M00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_39->M00_AXI_awlock.bind(*p_39_M00_AXI_awlock);
        p_39_M00_AXI_awlock->set_sv_netview_offsetfromdp(9844504);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_39_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_39->M00_AXI_awcache.bind(*p_39_M00_AXI_awcache);
        p_39_M00_AXI_awcache->set_sv_netview_offsetfromdp(9844560);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_39_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_39->M00_AXI_awprot.bind(*p_39_M00_AXI_awprot);
        p_39_M00_AXI_awprot->set_sv_netview_offsetfromdp(9844616);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_39_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_39->M00_AXI_awqos.bind(*p_39_M00_AXI_awqos);
        p_39_M00_AXI_awqos->set_sv_netview_offsetfromdp(9844672);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_39_M00_AXI_awuser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_39->M00_AXI_awuser.bind(*p_39_M00_AXI_awuser);
        p_39_M00_AXI_awuser->set_sv_netview_offsetfromdp(9844728);
        xsim_sc_channel<0, bool > *p_39_M00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->M00_AXI_awvalid.bind(*p_39_M00_AXI_awvalid);
        p_39_M00_AXI_awvalid->set_sv_netview_offsetfromdp(9844784);
        xsim_sc_channel<0, bool > *p_39_M00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_39->M00_AXI_awready.bind(*p_39_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M00_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_39_M00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_39->M00_AXI_wdata.bind(*p_39_M00_AXI_wdata);
        p_39_M00_AXI_wdata->set_sv_netview_offsetfromdp(9844896);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_39_M00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_39->M00_AXI_wstrb.bind(*p_39_M00_AXI_wstrb);
        p_39_M00_AXI_wstrb->set_sv_netview_offsetfromdp(9844952);
        xsim_sc_channel<0, bool > *p_39_M00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_39->M00_AXI_wlast.bind(*p_39_M00_AXI_wlast);
        p_39_M00_AXI_wlast->set_sv_netview_offsetfromdp(9845008);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_39_M00_AXI_wuser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_39->M00_AXI_wuser.bind(*p_39_M00_AXI_wuser);
        p_39_M00_AXI_wuser->set_sv_netview_offsetfromdp(9845064);
        xsim_sc_channel<0, bool > *p_39_M00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->M00_AXI_wvalid.bind(*p_39_M00_AXI_wvalid);
        p_39_M00_AXI_wvalid->set_sv_netview_offsetfromdp(9845120);
        xsim_sc_channel<0, bool > *p_39_M00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_39->M00_AXI_wready.bind(*p_39_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M00_AXI_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_39_M00_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_39->M00_AXI_bid.bind(*p_39_M00_AXI_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M00_AXI_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_39_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_39->M00_AXI_bresp.bind(*p_39_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M00_AXI_bresp);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_39_M00_AXI_buser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_39->M00_AXI_buser.bind(*p_39_M00_AXI_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M00_AXI_buser);
        xsim_sc_channel<0, bool > *p_39_M00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->M00_AXI_bvalid.bind(*p_39_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M00_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_39_M00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_39->M00_AXI_bready.bind(*p_39_M00_AXI_bready);
        p_39_M00_AXI_bready->set_sv_netview_offsetfromdp(9845456);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_39_M00_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_39->M00_AXI_arid.bind(*p_39_M00_AXI_arid);
        p_39_M00_AXI_arid->set_sv_netview_offsetfromdp(9845512);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_39_M00_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_39->M00_AXI_araddr.bind(*p_39_M00_AXI_araddr);
        p_39_M00_AXI_araddr->set_sv_netview_offsetfromdp(9845568);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_39_M00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_39->M00_AXI_arlen.bind(*p_39_M00_AXI_arlen);
        p_39_M00_AXI_arlen->set_sv_netview_offsetfromdp(9845624);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_39_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_39->M00_AXI_arsize.bind(*p_39_M00_AXI_arsize);
        p_39_M00_AXI_arsize->set_sv_netview_offsetfromdp(9845680);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_39_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_39->M00_AXI_arburst.bind(*p_39_M00_AXI_arburst);
        p_39_M00_AXI_arburst->set_sv_netview_offsetfromdp(9845736);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_39_M00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_39->M00_AXI_arlock.bind(*p_39_M00_AXI_arlock);
        p_39_M00_AXI_arlock->set_sv_netview_offsetfromdp(9845792);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_39_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_39->M00_AXI_arcache.bind(*p_39_M00_AXI_arcache);
        p_39_M00_AXI_arcache->set_sv_netview_offsetfromdp(9845848);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_39_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_39->M00_AXI_arprot.bind(*p_39_M00_AXI_arprot);
        p_39_M00_AXI_arprot->set_sv_netview_offsetfromdp(9845904);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_39_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_39->M00_AXI_arqos.bind(*p_39_M00_AXI_arqos);
        p_39_M00_AXI_arqos->set_sv_netview_offsetfromdp(9845960);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_39_M00_AXI_aruser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_39->M00_AXI_aruser.bind(*p_39_M00_AXI_aruser);
        p_39_M00_AXI_aruser->set_sv_netview_offsetfromdp(9846016);
        xsim_sc_channel<0, bool > *p_39_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->M00_AXI_arvalid.bind(*p_39_M00_AXI_arvalid);
        p_39_M00_AXI_arvalid->set_sv_netview_offsetfromdp(9846072);
        xsim_sc_channel<0, bool > *p_39_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_39->M00_AXI_arready.bind(*p_39_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M00_AXI_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_39_M00_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_39->M00_AXI_rid.bind(*p_39_M00_AXI_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M00_AXI_rid);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_39_M00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_39->M00_AXI_rdata.bind(*p_39_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_39_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_39->M00_AXI_rresp.bind(*p_39_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_39_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_39->M00_AXI_rlast.bind(*p_39_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M00_AXI_rlast);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_39_M00_AXI_ruser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_39->M00_AXI_ruser.bind(*p_39_M00_AXI_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M00_AXI_ruser);
        xsim_sc_channel<0, bool > *p_39_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->M00_AXI_rvalid.bind(*p_39_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_39_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_39->M00_AXI_rready.bind(*p_39_M00_AXI_rready);
        p_39_M00_AXI_rready->set_sv_netview_offsetfromdp(9846520);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_39_M01_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_39->M01_AXI_awid.bind(*p_39_M01_AXI_awid);
        p_39_M01_AXI_awid->set_sv_netview_offsetfromdp(9846576);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_39_M01_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_39->M01_AXI_awaddr.bind(*p_39_M01_AXI_awaddr);
        p_39_M01_AXI_awaddr->set_sv_netview_offsetfromdp(9846632);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_39_M01_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_39->M01_AXI_awlen.bind(*p_39_M01_AXI_awlen);
        p_39_M01_AXI_awlen->set_sv_netview_offsetfromdp(9846688);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_39_M01_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_39->M01_AXI_awsize.bind(*p_39_M01_AXI_awsize);
        p_39_M01_AXI_awsize->set_sv_netview_offsetfromdp(9846744);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_39_M01_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_39->M01_AXI_awburst.bind(*p_39_M01_AXI_awburst);
        p_39_M01_AXI_awburst->set_sv_netview_offsetfromdp(9846800);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_39_M01_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_39->M01_AXI_awlock.bind(*p_39_M01_AXI_awlock);
        p_39_M01_AXI_awlock->set_sv_netview_offsetfromdp(9846856);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_39_M01_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_39->M01_AXI_awcache.bind(*p_39_M01_AXI_awcache);
        p_39_M01_AXI_awcache->set_sv_netview_offsetfromdp(9846912);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_39_M01_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_39->M01_AXI_awprot.bind(*p_39_M01_AXI_awprot);
        p_39_M01_AXI_awprot->set_sv_netview_offsetfromdp(9846968);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_39_M01_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_39->M01_AXI_awqos.bind(*p_39_M01_AXI_awqos);
        p_39_M01_AXI_awqos->set_sv_netview_offsetfromdp(9847024);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_39_M01_AXI_awuser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_39->M01_AXI_awuser.bind(*p_39_M01_AXI_awuser);
        p_39_M01_AXI_awuser->set_sv_netview_offsetfromdp(9847080);
        xsim_sc_channel<0, bool > *p_39_M01_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->M01_AXI_awvalid.bind(*p_39_M01_AXI_awvalid);
        p_39_M01_AXI_awvalid->set_sv_netview_offsetfromdp(9847136);
        xsim_sc_channel<0, bool > *p_39_M01_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_39->M01_AXI_awready.bind(*p_39_M01_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M01_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_39_M01_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_39->M01_AXI_wdata.bind(*p_39_M01_AXI_wdata);
        p_39_M01_AXI_wdata->set_sv_netview_offsetfromdp(9847248);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_39_M01_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_39->M01_AXI_wstrb.bind(*p_39_M01_AXI_wstrb);
        p_39_M01_AXI_wstrb->set_sv_netview_offsetfromdp(9847304);
        xsim_sc_channel<0, bool > *p_39_M01_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_39->M01_AXI_wlast.bind(*p_39_M01_AXI_wlast);
        p_39_M01_AXI_wlast->set_sv_netview_offsetfromdp(9847360);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_39_M01_AXI_wuser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_39->M01_AXI_wuser.bind(*p_39_M01_AXI_wuser);
        p_39_M01_AXI_wuser->set_sv_netview_offsetfromdp(9847416);
        xsim_sc_channel<0, bool > *p_39_M01_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->M01_AXI_wvalid.bind(*p_39_M01_AXI_wvalid);
        p_39_M01_AXI_wvalid->set_sv_netview_offsetfromdp(9847472);
        xsim_sc_channel<0, bool > *p_39_M01_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_39->M01_AXI_wready.bind(*p_39_M01_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M01_AXI_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_39_M01_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_39->M01_AXI_bid.bind(*p_39_M01_AXI_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M01_AXI_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_39_M01_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_39->M01_AXI_bresp.bind(*p_39_M01_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M01_AXI_bresp);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_39_M01_AXI_buser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_39->M01_AXI_buser.bind(*p_39_M01_AXI_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M01_AXI_buser);
        xsim_sc_channel<0, bool > *p_39_M01_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->M01_AXI_bvalid.bind(*p_39_M01_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M01_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_39_M01_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_39->M01_AXI_bready.bind(*p_39_M01_AXI_bready);
        p_39_M01_AXI_bready->set_sv_netview_offsetfromdp(9847808);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_39_M01_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_39->M01_AXI_arid.bind(*p_39_M01_AXI_arid);
        p_39_M01_AXI_arid->set_sv_netview_offsetfromdp(9847864);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_39_M01_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_39->M01_AXI_araddr.bind(*p_39_M01_AXI_araddr);
        p_39_M01_AXI_araddr->set_sv_netview_offsetfromdp(9847920);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_39_M01_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_39->M01_AXI_arlen.bind(*p_39_M01_AXI_arlen);
        p_39_M01_AXI_arlen->set_sv_netview_offsetfromdp(9847976);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_39_M01_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_39->M01_AXI_arsize.bind(*p_39_M01_AXI_arsize);
        p_39_M01_AXI_arsize->set_sv_netview_offsetfromdp(9848032);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_39_M01_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_39->M01_AXI_arburst.bind(*p_39_M01_AXI_arburst);
        p_39_M01_AXI_arburst->set_sv_netview_offsetfromdp(9848088);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_39_M01_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_39->M01_AXI_arlock.bind(*p_39_M01_AXI_arlock);
        p_39_M01_AXI_arlock->set_sv_netview_offsetfromdp(9848144);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_39_M01_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_39->M01_AXI_arcache.bind(*p_39_M01_AXI_arcache);
        p_39_M01_AXI_arcache->set_sv_netview_offsetfromdp(9848200);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_39_M01_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_39->M01_AXI_arprot.bind(*p_39_M01_AXI_arprot);
        p_39_M01_AXI_arprot->set_sv_netview_offsetfromdp(9848256);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_39_M01_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_39->M01_AXI_arqos.bind(*p_39_M01_AXI_arqos);
        p_39_M01_AXI_arqos->set_sv_netview_offsetfromdp(9848312);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_39_M01_AXI_aruser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_39->M01_AXI_aruser.bind(*p_39_M01_AXI_aruser);
        p_39_M01_AXI_aruser->set_sv_netview_offsetfromdp(9848368);
        xsim_sc_channel<0, bool > *p_39_M01_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->M01_AXI_arvalid.bind(*p_39_M01_AXI_arvalid);
        p_39_M01_AXI_arvalid->set_sv_netview_offsetfromdp(9848424);
        xsim_sc_channel<0, bool > *p_39_M01_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_39->M01_AXI_arready.bind(*p_39_M01_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M01_AXI_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_39_M01_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_39->M01_AXI_rid.bind(*p_39_M01_AXI_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M01_AXI_rid);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_39_M01_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_39->M01_AXI_rdata.bind(*p_39_M01_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M01_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_39_M01_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_39->M01_AXI_rresp.bind(*p_39_M01_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M01_AXI_rresp);
        xsim_sc_channel<0, bool > *p_39_M01_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_39->M01_AXI_rlast.bind(*p_39_M01_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M01_AXI_rlast);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_39_M01_AXI_ruser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_39->M01_AXI_ruser.bind(*p_39_M01_AXI_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M01_AXI_ruser);
        xsim_sc_channel<0, bool > *p_39_M01_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->M01_AXI_rvalid.bind(*p_39_M01_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M01_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_39_M01_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_39->M01_AXI_rready.bind(*p_39_M01_AXI_rready);
        p_39_M01_AXI_rready->set_sv_netview_offsetfromdp(9848872);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_39_M02_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_39->M02_AXI_awid.bind(*p_39_M02_AXI_awid);
        p_39_M02_AXI_awid->set_sv_netview_offsetfromdp(9848928);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_39_M02_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_39->M02_AXI_awaddr.bind(*p_39_M02_AXI_awaddr);
        p_39_M02_AXI_awaddr->set_sv_netview_offsetfromdp(9848984);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_39_M02_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_39->M02_AXI_awlen.bind(*p_39_M02_AXI_awlen);
        p_39_M02_AXI_awlen->set_sv_netview_offsetfromdp(9849040);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_39_M02_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_39->M02_AXI_awsize.bind(*p_39_M02_AXI_awsize);
        p_39_M02_AXI_awsize->set_sv_netview_offsetfromdp(9849096);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_39_M02_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_39->M02_AXI_awburst.bind(*p_39_M02_AXI_awburst);
        p_39_M02_AXI_awburst->set_sv_netview_offsetfromdp(9849152);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_39_M02_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_39->M02_AXI_awlock.bind(*p_39_M02_AXI_awlock);
        p_39_M02_AXI_awlock->set_sv_netview_offsetfromdp(9849208);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_39_M02_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_39->M02_AXI_awcache.bind(*p_39_M02_AXI_awcache);
        p_39_M02_AXI_awcache->set_sv_netview_offsetfromdp(9849264);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_39_M02_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_39->M02_AXI_awprot.bind(*p_39_M02_AXI_awprot);
        p_39_M02_AXI_awprot->set_sv_netview_offsetfromdp(9849320);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_39_M02_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_39->M02_AXI_awqos.bind(*p_39_M02_AXI_awqos);
        p_39_M02_AXI_awqos->set_sv_netview_offsetfromdp(9849376);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_39_M02_AXI_awuser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_39->M02_AXI_awuser.bind(*p_39_M02_AXI_awuser);
        p_39_M02_AXI_awuser->set_sv_netview_offsetfromdp(9849432);
        xsim_sc_channel<0, bool > *p_39_M02_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->M02_AXI_awvalid.bind(*p_39_M02_AXI_awvalid);
        p_39_M02_AXI_awvalid->set_sv_netview_offsetfromdp(9849488);
        xsim_sc_channel<0, bool > *p_39_M02_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_39->M02_AXI_awready.bind(*p_39_M02_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M02_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_39_M02_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_39->M02_AXI_wdata.bind(*p_39_M02_AXI_wdata);
        p_39_M02_AXI_wdata->set_sv_netview_offsetfromdp(9849600);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_39_M02_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_39->M02_AXI_wstrb.bind(*p_39_M02_AXI_wstrb);
        p_39_M02_AXI_wstrb->set_sv_netview_offsetfromdp(9849656);
        xsim_sc_channel<0, bool > *p_39_M02_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_39->M02_AXI_wlast.bind(*p_39_M02_AXI_wlast);
        p_39_M02_AXI_wlast->set_sv_netview_offsetfromdp(9849712);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_39_M02_AXI_wuser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_39->M02_AXI_wuser.bind(*p_39_M02_AXI_wuser);
        p_39_M02_AXI_wuser->set_sv_netview_offsetfromdp(9849768);
        xsim_sc_channel<0, bool > *p_39_M02_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->M02_AXI_wvalid.bind(*p_39_M02_AXI_wvalid);
        p_39_M02_AXI_wvalid->set_sv_netview_offsetfromdp(9849824);
        xsim_sc_channel<0, bool > *p_39_M02_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_39->M02_AXI_wready.bind(*p_39_M02_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M02_AXI_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_39_M02_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_39->M02_AXI_bid.bind(*p_39_M02_AXI_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M02_AXI_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_39_M02_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_39->M02_AXI_bresp.bind(*p_39_M02_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M02_AXI_bresp);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_39_M02_AXI_buser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_39->M02_AXI_buser.bind(*p_39_M02_AXI_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M02_AXI_buser);
        xsim_sc_channel<0, bool > *p_39_M02_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->M02_AXI_bvalid.bind(*p_39_M02_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M02_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_39_M02_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_39->M02_AXI_bready.bind(*p_39_M02_AXI_bready);
        p_39_M02_AXI_bready->set_sv_netview_offsetfromdp(9850160);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_39_M02_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_39->M02_AXI_arid.bind(*p_39_M02_AXI_arid);
        p_39_M02_AXI_arid->set_sv_netview_offsetfromdp(9850216);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_39_M02_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_39->M02_AXI_araddr.bind(*p_39_M02_AXI_araddr);
        p_39_M02_AXI_araddr->set_sv_netview_offsetfromdp(9850272);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_39_M02_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_39->M02_AXI_arlen.bind(*p_39_M02_AXI_arlen);
        p_39_M02_AXI_arlen->set_sv_netview_offsetfromdp(9850328);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_39_M02_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_39->M02_AXI_arsize.bind(*p_39_M02_AXI_arsize);
        p_39_M02_AXI_arsize->set_sv_netview_offsetfromdp(9850384);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_39_M02_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_39->M02_AXI_arburst.bind(*p_39_M02_AXI_arburst);
        p_39_M02_AXI_arburst->set_sv_netview_offsetfromdp(9850440);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_39_M02_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_39->M02_AXI_arlock.bind(*p_39_M02_AXI_arlock);
        p_39_M02_AXI_arlock->set_sv_netview_offsetfromdp(9850496);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_39_M02_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_39->M02_AXI_arcache.bind(*p_39_M02_AXI_arcache);
        p_39_M02_AXI_arcache->set_sv_netview_offsetfromdp(9850552);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_39_M02_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_39->M02_AXI_arprot.bind(*p_39_M02_AXI_arprot);
        p_39_M02_AXI_arprot->set_sv_netview_offsetfromdp(9850608);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_39_M02_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_39->M02_AXI_arqos.bind(*p_39_M02_AXI_arqos);
        p_39_M02_AXI_arqos->set_sv_netview_offsetfromdp(9850664);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_39_M02_AXI_aruser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_39->M02_AXI_aruser.bind(*p_39_M02_AXI_aruser);
        p_39_M02_AXI_aruser->set_sv_netview_offsetfromdp(9850720);
        xsim_sc_channel<0, bool > *p_39_M02_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->M02_AXI_arvalid.bind(*p_39_M02_AXI_arvalid);
        p_39_M02_AXI_arvalid->set_sv_netview_offsetfromdp(9850776);
        xsim_sc_channel<0, bool > *p_39_M02_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_39->M02_AXI_arready.bind(*p_39_M02_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M02_AXI_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_39_M02_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_39->M02_AXI_rid.bind(*p_39_M02_AXI_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M02_AXI_rid);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_39_M02_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_39->M02_AXI_rdata.bind(*p_39_M02_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M02_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_39_M02_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_39->M02_AXI_rresp.bind(*p_39_M02_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M02_AXI_rresp);
        xsim_sc_channel<0, bool > *p_39_M02_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_39->M02_AXI_rlast.bind(*p_39_M02_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M02_AXI_rlast);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_39_M02_AXI_ruser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_39->M02_AXI_ruser.bind(*p_39_M02_AXI_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M02_AXI_ruser);
        xsim_sc_channel<0, bool > *p_39_M02_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->M02_AXI_rvalid.bind(*p_39_M02_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M02_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_39_M02_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_39->M02_AXI_rready.bind(*p_39_M02_AXI_rready);
        p_39_M02_AXI_rready->set_sv_netview_offsetfromdp(9851224);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_39_M03_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_39->M03_AXI_awid.bind(*p_39_M03_AXI_awid);
        p_39_M03_AXI_awid->set_sv_netview_offsetfromdp(9851280);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_39_M03_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_39->M03_AXI_awaddr.bind(*p_39_M03_AXI_awaddr);
        p_39_M03_AXI_awaddr->set_sv_netview_offsetfromdp(9851336);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_39_M03_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_39->M03_AXI_awlen.bind(*p_39_M03_AXI_awlen);
        p_39_M03_AXI_awlen->set_sv_netview_offsetfromdp(9851392);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_39_M03_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_39->M03_AXI_awsize.bind(*p_39_M03_AXI_awsize);
        p_39_M03_AXI_awsize->set_sv_netview_offsetfromdp(9851448);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_39_M03_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_39->M03_AXI_awburst.bind(*p_39_M03_AXI_awburst);
        p_39_M03_AXI_awburst->set_sv_netview_offsetfromdp(9851504);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_39_M03_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_39->M03_AXI_awlock.bind(*p_39_M03_AXI_awlock);
        p_39_M03_AXI_awlock->set_sv_netview_offsetfromdp(9851560);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_39_M03_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_39->M03_AXI_awcache.bind(*p_39_M03_AXI_awcache);
        p_39_M03_AXI_awcache->set_sv_netview_offsetfromdp(9851616);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_39_M03_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_39->M03_AXI_awprot.bind(*p_39_M03_AXI_awprot);
        p_39_M03_AXI_awprot->set_sv_netview_offsetfromdp(9851672);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_39_M03_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_39->M03_AXI_awqos.bind(*p_39_M03_AXI_awqos);
        p_39_M03_AXI_awqos->set_sv_netview_offsetfromdp(9851728);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_39_M03_AXI_awuser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_39->M03_AXI_awuser.bind(*p_39_M03_AXI_awuser);
        p_39_M03_AXI_awuser->set_sv_netview_offsetfromdp(9851784);
        xsim_sc_channel<0, bool > *p_39_M03_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->M03_AXI_awvalid.bind(*p_39_M03_AXI_awvalid);
        p_39_M03_AXI_awvalid->set_sv_netview_offsetfromdp(9851840);
        xsim_sc_channel<0, bool > *p_39_M03_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_39->M03_AXI_awready.bind(*p_39_M03_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M03_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_39_M03_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_39->M03_AXI_wdata.bind(*p_39_M03_AXI_wdata);
        p_39_M03_AXI_wdata->set_sv_netview_offsetfromdp(9851952);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_39_M03_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_39->M03_AXI_wstrb.bind(*p_39_M03_AXI_wstrb);
        p_39_M03_AXI_wstrb->set_sv_netview_offsetfromdp(9852008);
        xsim_sc_channel<0, bool > *p_39_M03_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_39->M03_AXI_wlast.bind(*p_39_M03_AXI_wlast);
        p_39_M03_AXI_wlast->set_sv_netview_offsetfromdp(9852064);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_39_M03_AXI_wuser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_39->M03_AXI_wuser.bind(*p_39_M03_AXI_wuser);
        p_39_M03_AXI_wuser->set_sv_netview_offsetfromdp(9852120);
        xsim_sc_channel<0, bool > *p_39_M03_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->M03_AXI_wvalid.bind(*p_39_M03_AXI_wvalid);
        p_39_M03_AXI_wvalid->set_sv_netview_offsetfromdp(9852176);
        xsim_sc_channel<0, bool > *p_39_M03_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_39->M03_AXI_wready.bind(*p_39_M03_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M03_AXI_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_39_M03_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_39->M03_AXI_bid.bind(*p_39_M03_AXI_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M03_AXI_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_39_M03_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_39->M03_AXI_bresp.bind(*p_39_M03_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M03_AXI_bresp);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_39_M03_AXI_buser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_39->M03_AXI_buser.bind(*p_39_M03_AXI_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M03_AXI_buser);
        xsim_sc_channel<0, bool > *p_39_M03_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->M03_AXI_bvalid.bind(*p_39_M03_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M03_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_39_M03_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_39->M03_AXI_bready.bind(*p_39_M03_AXI_bready);
        p_39_M03_AXI_bready->set_sv_netview_offsetfromdp(9852512);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_39_M03_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_39->M03_AXI_arid.bind(*p_39_M03_AXI_arid);
        p_39_M03_AXI_arid->set_sv_netview_offsetfromdp(9852568);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_39_M03_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_39->M03_AXI_araddr.bind(*p_39_M03_AXI_araddr);
        p_39_M03_AXI_araddr->set_sv_netview_offsetfromdp(9852624);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_39_M03_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_39->M03_AXI_arlen.bind(*p_39_M03_AXI_arlen);
        p_39_M03_AXI_arlen->set_sv_netview_offsetfromdp(9852680);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_39_M03_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_39->M03_AXI_arsize.bind(*p_39_M03_AXI_arsize);
        p_39_M03_AXI_arsize->set_sv_netview_offsetfromdp(9852736);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_39_M03_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_39->M03_AXI_arburst.bind(*p_39_M03_AXI_arburst);
        p_39_M03_AXI_arburst->set_sv_netview_offsetfromdp(9852792);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_39_M03_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_39->M03_AXI_arlock.bind(*p_39_M03_AXI_arlock);
        p_39_M03_AXI_arlock->set_sv_netview_offsetfromdp(9852848);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_39_M03_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_39->M03_AXI_arcache.bind(*p_39_M03_AXI_arcache);
        p_39_M03_AXI_arcache->set_sv_netview_offsetfromdp(9852904);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_39_M03_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_39->M03_AXI_arprot.bind(*p_39_M03_AXI_arprot);
        p_39_M03_AXI_arprot->set_sv_netview_offsetfromdp(9852960);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_39_M03_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_39->M03_AXI_arqos.bind(*p_39_M03_AXI_arqos);
        p_39_M03_AXI_arqos->set_sv_netview_offsetfromdp(9853016);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_39_M03_AXI_aruser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_39->M03_AXI_aruser.bind(*p_39_M03_AXI_aruser);
        p_39_M03_AXI_aruser->set_sv_netview_offsetfromdp(9853072);
        xsim_sc_channel<0, bool > *p_39_M03_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->M03_AXI_arvalid.bind(*p_39_M03_AXI_arvalid);
        p_39_M03_AXI_arvalid->set_sv_netview_offsetfromdp(9853128);
        xsim_sc_channel<0, bool > *p_39_M03_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_39->M03_AXI_arready.bind(*p_39_M03_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M03_AXI_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_39_M03_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_39->M03_AXI_rid.bind(*p_39_M03_AXI_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M03_AXI_rid);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_39_M03_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_39->M03_AXI_rdata.bind(*p_39_M03_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M03_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_39_M03_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_39->M03_AXI_rresp.bind(*p_39_M03_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M03_AXI_rresp);
        xsim_sc_channel<0, bool > *p_39_M03_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_39->M03_AXI_rlast.bind(*p_39_M03_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M03_AXI_rlast);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_39_M03_AXI_ruser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_39->M03_AXI_ruser.bind(*p_39_M03_AXI_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M03_AXI_ruser);
        xsim_sc_channel<0, bool > *p_39_M03_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->M03_AXI_rvalid.bind(*p_39_M03_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M03_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_39_M03_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_39->M03_AXI_rready.bind(*p_39_M03_AXI_rready);
        p_39_M03_AXI_rready->set_sv_netview_offsetfromdp(9853576);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_39_M04_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_39->M04_AXI_awid.bind(*p_39_M04_AXI_awid);
        p_39_M04_AXI_awid->set_sv_netview_offsetfromdp(9853632);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_39_M04_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_39->M04_AXI_awaddr.bind(*p_39_M04_AXI_awaddr);
        p_39_M04_AXI_awaddr->set_sv_netview_offsetfromdp(9853688);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_39_M04_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_39->M04_AXI_awlen.bind(*p_39_M04_AXI_awlen);
        p_39_M04_AXI_awlen->set_sv_netview_offsetfromdp(9853744);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_39_M04_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_39->M04_AXI_awsize.bind(*p_39_M04_AXI_awsize);
        p_39_M04_AXI_awsize->set_sv_netview_offsetfromdp(9853800);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_39_M04_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_39->M04_AXI_awburst.bind(*p_39_M04_AXI_awburst);
        p_39_M04_AXI_awburst->set_sv_netview_offsetfromdp(9853856);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_39_M04_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_39->M04_AXI_awlock.bind(*p_39_M04_AXI_awlock);
        p_39_M04_AXI_awlock->set_sv_netview_offsetfromdp(9853912);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_39_M04_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_39->M04_AXI_awcache.bind(*p_39_M04_AXI_awcache);
        p_39_M04_AXI_awcache->set_sv_netview_offsetfromdp(9853968);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_39_M04_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_39->M04_AXI_awprot.bind(*p_39_M04_AXI_awprot);
        p_39_M04_AXI_awprot->set_sv_netview_offsetfromdp(9854024);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_39_M04_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_39->M04_AXI_awqos.bind(*p_39_M04_AXI_awqos);
        p_39_M04_AXI_awqos->set_sv_netview_offsetfromdp(9854080);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_39_M04_AXI_awuser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_39->M04_AXI_awuser.bind(*p_39_M04_AXI_awuser);
        p_39_M04_AXI_awuser->set_sv_netview_offsetfromdp(9854136);
        xsim_sc_channel<0, bool > *p_39_M04_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->M04_AXI_awvalid.bind(*p_39_M04_AXI_awvalid);
        p_39_M04_AXI_awvalid->set_sv_netview_offsetfromdp(9854192);
        xsim_sc_channel<0, bool > *p_39_M04_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_39->M04_AXI_awready.bind(*p_39_M04_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M04_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_39_M04_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_39->M04_AXI_wdata.bind(*p_39_M04_AXI_wdata);
        p_39_M04_AXI_wdata->set_sv_netview_offsetfromdp(9854304);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_39_M04_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_39->M04_AXI_wstrb.bind(*p_39_M04_AXI_wstrb);
        p_39_M04_AXI_wstrb->set_sv_netview_offsetfromdp(9854360);
        xsim_sc_channel<0, bool > *p_39_M04_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_39->M04_AXI_wlast.bind(*p_39_M04_AXI_wlast);
        p_39_M04_AXI_wlast->set_sv_netview_offsetfromdp(9854416);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_39_M04_AXI_wuser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_39->M04_AXI_wuser.bind(*p_39_M04_AXI_wuser);
        p_39_M04_AXI_wuser->set_sv_netview_offsetfromdp(9854472);
        xsim_sc_channel<0, bool > *p_39_M04_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->M04_AXI_wvalid.bind(*p_39_M04_AXI_wvalid);
        p_39_M04_AXI_wvalid->set_sv_netview_offsetfromdp(9854528);
        xsim_sc_channel<0, bool > *p_39_M04_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_39->M04_AXI_wready.bind(*p_39_M04_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M04_AXI_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_39_M04_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_39->M04_AXI_bid.bind(*p_39_M04_AXI_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M04_AXI_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_39_M04_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_39->M04_AXI_bresp.bind(*p_39_M04_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M04_AXI_bresp);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_39_M04_AXI_buser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_39->M04_AXI_buser.bind(*p_39_M04_AXI_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M04_AXI_buser);
        xsim_sc_channel<0, bool > *p_39_M04_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->M04_AXI_bvalid.bind(*p_39_M04_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M04_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_39_M04_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_39->M04_AXI_bready.bind(*p_39_M04_AXI_bready);
        p_39_M04_AXI_bready->set_sv_netview_offsetfromdp(9854864);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_39_M04_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_39->M04_AXI_arid.bind(*p_39_M04_AXI_arid);
        p_39_M04_AXI_arid->set_sv_netview_offsetfromdp(9854920);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_39_M04_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_39->M04_AXI_araddr.bind(*p_39_M04_AXI_araddr);
        p_39_M04_AXI_araddr->set_sv_netview_offsetfromdp(9854976);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_39_M04_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_39->M04_AXI_arlen.bind(*p_39_M04_AXI_arlen);
        p_39_M04_AXI_arlen->set_sv_netview_offsetfromdp(9855032);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_39_M04_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_39->M04_AXI_arsize.bind(*p_39_M04_AXI_arsize);
        p_39_M04_AXI_arsize->set_sv_netview_offsetfromdp(9855088);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_39_M04_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_39->M04_AXI_arburst.bind(*p_39_M04_AXI_arburst);
        p_39_M04_AXI_arburst->set_sv_netview_offsetfromdp(9855144);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_39_M04_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_39->M04_AXI_arlock.bind(*p_39_M04_AXI_arlock);
        p_39_M04_AXI_arlock->set_sv_netview_offsetfromdp(9855200);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_39_M04_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_39->M04_AXI_arcache.bind(*p_39_M04_AXI_arcache);
        p_39_M04_AXI_arcache->set_sv_netview_offsetfromdp(9855256);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_39_M04_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_39->M04_AXI_arprot.bind(*p_39_M04_AXI_arprot);
        p_39_M04_AXI_arprot->set_sv_netview_offsetfromdp(9855312);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_39_M04_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_39->M04_AXI_arqos.bind(*p_39_M04_AXI_arqos);
        p_39_M04_AXI_arqos->set_sv_netview_offsetfromdp(9855368);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_39_M04_AXI_aruser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_39->M04_AXI_aruser.bind(*p_39_M04_AXI_aruser);
        p_39_M04_AXI_aruser->set_sv_netview_offsetfromdp(9855424);
        xsim_sc_channel<0, bool > *p_39_M04_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->M04_AXI_arvalid.bind(*p_39_M04_AXI_arvalid);
        p_39_M04_AXI_arvalid->set_sv_netview_offsetfromdp(9855480);
        xsim_sc_channel<0, bool > *p_39_M04_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_39->M04_AXI_arready.bind(*p_39_M04_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M04_AXI_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_39_M04_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_39->M04_AXI_rid.bind(*p_39_M04_AXI_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M04_AXI_rid);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_39_M04_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_39->M04_AXI_rdata.bind(*p_39_M04_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M04_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_39_M04_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_39->M04_AXI_rresp.bind(*p_39_M04_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M04_AXI_rresp);
        xsim_sc_channel<0, bool > *p_39_M04_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_39->M04_AXI_rlast.bind(*p_39_M04_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M04_AXI_rlast);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_39_M04_AXI_ruser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_39->M04_AXI_ruser.bind(*p_39_M04_AXI_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M04_AXI_ruser);
        xsim_sc_channel<0, bool > *p_39_M04_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->M04_AXI_rvalid.bind(*p_39_M04_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M04_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_39_M04_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_39->M04_AXI_rready.bind(*p_39_M04_AXI_rready);
        p_39_M04_AXI_rready->set_sv_netview_offsetfromdp(9855928);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_39_M05_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_39->M05_AXI_awid.bind(*p_39_M05_AXI_awid);
        p_39_M05_AXI_awid->set_sv_netview_offsetfromdp(9855984);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_39_M05_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_39->M05_AXI_awaddr.bind(*p_39_M05_AXI_awaddr);
        p_39_M05_AXI_awaddr->set_sv_netview_offsetfromdp(9856040);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_39_M05_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_39->M05_AXI_awlen.bind(*p_39_M05_AXI_awlen);
        p_39_M05_AXI_awlen->set_sv_netview_offsetfromdp(9856096);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_39_M05_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_39->M05_AXI_awsize.bind(*p_39_M05_AXI_awsize);
        p_39_M05_AXI_awsize->set_sv_netview_offsetfromdp(9856152);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_39_M05_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_39->M05_AXI_awburst.bind(*p_39_M05_AXI_awburst);
        p_39_M05_AXI_awburst->set_sv_netview_offsetfromdp(9856208);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_39_M05_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_39->M05_AXI_awlock.bind(*p_39_M05_AXI_awlock);
        p_39_M05_AXI_awlock->set_sv_netview_offsetfromdp(9856264);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_39_M05_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_39->M05_AXI_awcache.bind(*p_39_M05_AXI_awcache);
        p_39_M05_AXI_awcache->set_sv_netview_offsetfromdp(9856320);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_39_M05_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_39->M05_AXI_awprot.bind(*p_39_M05_AXI_awprot);
        p_39_M05_AXI_awprot->set_sv_netview_offsetfromdp(9856376);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_39_M05_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_39->M05_AXI_awqos.bind(*p_39_M05_AXI_awqos);
        p_39_M05_AXI_awqos->set_sv_netview_offsetfromdp(9856432);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_39_M05_AXI_awuser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_39->M05_AXI_awuser.bind(*p_39_M05_AXI_awuser);
        p_39_M05_AXI_awuser->set_sv_netview_offsetfromdp(9856488);
        xsim_sc_channel<0, bool > *p_39_M05_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->M05_AXI_awvalid.bind(*p_39_M05_AXI_awvalid);
        p_39_M05_AXI_awvalid->set_sv_netview_offsetfromdp(9856544);
        xsim_sc_channel<0, bool > *p_39_M05_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_39->M05_AXI_awready.bind(*p_39_M05_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M05_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_39_M05_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_39->M05_AXI_wdata.bind(*p_39_M05_AXI_wdata);
        p_39_M05_AXI_wdata->set_sv_netview_offsetfromdp(9856656);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_39_M05_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_39->M05_AXI_wstrb.bind(*p_39_M05_AXI_wstrb);
        p_39_M05_AXI_wstrb->set_sv_netview_offsetfromdp(9856712);
        xsim_sc_channel<0, bool > *p_39_M05_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_39->M05_AXI_wlast.bind(*p_39_M05_AXI_wlast);
        p_39_M05_AXI_wlast->set_sv_netview_offsetfromdp(9856768);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_39_M05_AXI_wuser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_39->M05_AXI_wuser.bind(*p_39_M05_AXI_wuser);
        p_39_M05_AXI_wuser->set_sv_netview_offsetfromdp(9856824);
        xsim_sc_channel<0, bool > *p_39_M05_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->M05_AXI_wvalid.bind(*p_39_M05_AXI_wvalid);
        p_39_M05_AXI_wvalid->set_sv_netview_offsetfromdp(9856880);
        xsim_sc_channel<0, bool > *p_39_M05_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_39->M05_AXI_wready.bind(*p_39_M05_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M05_AXI_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_39_M05_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_39->M05_AXI_bid.bind(*p_39_M05_AXI_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M05_AXI_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_39_M05_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_39->M05_AXI_bresp.bind(*p_39_M05_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M05_AXI_bresp);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_39_M05_AXI_buser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_39->M05_AXI_buser.bind(*p_39_M05_AXI_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M05_AXI_buser);
        xsim_sc_channel<0, bool > *p_39_M05_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->M05_AXI_bvalid.bind(*p_39_M05_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M05_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_39_M05_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_39->M05_AXI_bready.bind(*p_39_M05_AXI_bready);
        p_39_M05_AXI_bready->set_sv_netview_offsetfromdp(9857216);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_39_M05_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_39->M05_AXI_arid.bind(*p_39_M05_AXI_arid);
        p_39_M05_AXI_arid->set_sv_netview_offsetfromdp(9857272);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_39_M05_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_39->M05_AXI_araddr.bind(*p_39_M05_AXI_araddr);
        p_39_M05_AXI_araddr->set_sv_netview_offsetfromdp(9857328);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_39_M05_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_39->M05_AXI_arlen.bind(*p_39_M05_AXI_arlen);
        p_39_M05_AXI_arlen->set_sv_netview_offsetfromdp(9857384);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_39_M05_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_39->M05_AXI_arsize.bind(*p_39_M05_AXI_arsize);
        p_39_M05_AXI_arsize->set_sv_netview_offsetfromdp(9857440);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_39_M05_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_39->M05_AXI_arburst.bind(*p_39_M05_AXI_arburst);
        p_39_M05_AXI_arburst->set_sv_netview_offsetfromdp(9857496);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_39_M05_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_39->M05_AXI_arlock.bind(*p_39_M05_AXI_arlock);
        p_39_M05_AXI_arlock->set_sv_netview_offsetfromdp(9857552);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_39_M05_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_39->M05_AXI_arcache.bind(*p_39_M05_AXI_arcache);
        p_39_M05_AXI_arcache->set_sv_netview_offsetfromdp(9857608);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_39_M05_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_39->M05_AXI_arprot.bind(*p_39_M05_AXI_arprot);
        p_39_M05_AXI_arprot->set_sv_netview_offsetfromdp(9857664);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_39_M05_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_39->M05_AXI_arqos.bind(*p_39_M05_AXI_arqos);
        p_39_M05_AXI_arqos->set_sv_netview_offsetfromdp(9857720);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_39_M05_AXI_aruser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_39->M05_AXI_aruser.bind(*p_39_M05_AXI_aruser);
        p_39_M05_AXI_aruser->set_sv_netview_offsetfromdp(9857776);
        xsim_sc_channel<0, bool > *p_39_M05_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->M05_AXI_arvalid.bind(*p_39_M05_AXI_arvalid);
        p_39_M05_AXI_arvalid->set_sv_netview_offsetfromdp(9857832);
        xsim_sc_channel<0, bool > *p_39_M05_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_39->M05_AXI_arready.bind(*p_39_M05_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M05_AXI_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_39_M05_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_39->M05_AXI_rid.bind(*p_39_M05_AXI_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M05_AXI_rid);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_39_M05_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_39->M05_AXI_rdata.bind(*p_39_M05_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M05_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_39_M05_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_39->M05_AXI_rresp.bind(*p_39_M05_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M05_AXI_rresp);
        xsim_sc_channel<0, bool > *p_39_M05_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_39->M05_AXI_rlast.bind(*p_39_M05_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M05_AXI_rlast);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_39_M05_AXI_ruser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_39->M05_AXI_ruser.bind(*p_39_M05_AXI_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M05_AXI_ruser);
        xsim_sc_channel<0, bool > *p_39_M05_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->M05_AXI_rvalid.bind(*p_39_M05_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M05_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_39_M05_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_39->M05_AXI_rready.bind(*p_39_M05_AXI_rready);
        p_39_M05_AXI_rready->set_sv_netview_offsetfromdp(9858280);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_39_M06_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_39->M06_AXI_awid.bind(*p_39_M06_AXI_awid);
        p_39_M06_AXI_awid->set_sv_netview_offsetfromdp(9858336);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_39_M06_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_39->M06_AXI_awaddr.bind(*p_39_M06_AXI_awaddr);
        p_39_M06_AXI_awaddr->set_sv_netview_offsetfromdp(9858392);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_39_M06_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_39->M06_AXI_awlen.bind(*p_39_M06_AXI_awlen);
        p_39_M06_AXI_awlen->set_sv_netview_offsetfromdp(9858448);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_39_M06_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_39->M06_AXI_awsize.bind(*p_39_M06_AXI_awsize);
        p_39_M06_AXI_awsize->set_sv_netview_offsetfromdp(9858504);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_39_M06_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_39->M06_AXI_awburst.bind(*p_39_M06_AXI_awburst);
        p_39_M06_AXI_awburst->set_sv_netview_offsetfromdp(9858560);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_39_M06_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_39->M06_AXI_awlock.bind(*p_39_M06_AXI_awlock);
        p_39_M06_AXI_awlock->set_sv_netview_offsetfromdp(9858616);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_39_M06_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_39->M06_AXI_awcache.bind(*p_39_M06_AXI_awcache);
        p_39_M06_AXI_awcache->set_sv_netview_offsetfromdp(9858672);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_39_M06_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_39->M06_AXI_awprot.bind(*p_39_M06_AXI_awprot);
        p_39_M06_AXI_awprot->set_sv_netview_offsetfromdp(9858728);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_39_M06_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_39->M06_AXI_awqos.bind(*p_39_M06_AXI_awqos);
        p_39_M06_AXI_awqos->set_sv_netview_offsetfromdp(9858784);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_39_M06_AXI_awuser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_39->M06_AXI_awuser.bind(*p_39_M06_AXI_awuser);
        p_39_M06_AXI_awuser->set_sv_netview_offsetfromdp(9858840);
        xsim_sc_channel<0, bool > *p_39_M06_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->M06_AXI_awvalid.bind(*p_39_M06_AXI_awvalid);
        p_39_M06_AXI_awvalid->set_sv_netview_offsetfromdp(9858896);
        xsim_sc_channel<0, bool > *p_39_M06_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_39->M06_AXI_awready.bind(*p_39_M06_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M06_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_39_M06_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_39->M06_AXI_wdata.bind(*p_39_M06_AXI_wdata);
        p_39_M06_AXI_wdata->set_sv_netview_offsetfromdp(9859008);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_39_M06_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_39->M06_AXI_wstrb.bind(*p_39_M06_AXI_wstrb);
        p_39_M06_AXI_wstrb->set_sv_netview_offsetfromdp(9859064);
        xsim_sc_channel<0, bool > *p_39_M06_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_39->M06_AXI_wlast.bind(*p_39_M06_AXI_wlast);
        p_39_M06_AXI_wlast->set_sv_netview_offsetfromdp(9859120);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_39_M06_AXI_wuser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_39->M06_AXI_wuser.bind(*p_39_M06_AXI_wuser);
        p_39_M06_AXI_wuser->set_sv_netview_offsetfromdp(9859176);
        xsim_sc_channel<0, bool > *p_39_M06_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->M06_AXI_wvalid.bind(*p_39_M06_AXI_wvalid);
        p_39_M06_AXI_wvalid->set_sv_netview_offsetfromdp(9859232);
        xsim_sc_channel<0, bool > *p_39_M06_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_39->M06_AXI_wready.bind(*p_39_M06_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M06_AXI_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_39_M06_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_39->M06_AXI_bid.bind(*p_39_M06_AXI_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M06_AXI_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_39_M06_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_39->M06_AXI_bresp.bind(*p_39_M06_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M06_AXI_bresp);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_39_M06_AXI_buser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_39->M06_AXI_buser.bind(*p_39_M06_AXI_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M06_AXI_buser);
        xsim_sc_channel<0, bool > *p_39_M06_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->M06_AXI_bvalid.bind(*p_39_M06_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M06_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_39_M06_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_39->M06_AXI_bready.bind(*p_39_M06_AXI_bready);
        p_39_M06_AXI_bready->set_sv_netview_offsetfromdp(9859568);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_39_M06_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_39->M06_AXI_arid.bind(*p_39_M06_AXI_arid);
        p_39_M06_AXI_arid->set_sv_netview_offsetfromdp(9859624);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_39_M06_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_39->M06_AXI_araddr.bind(*p_39_M06_AXI_araddr);
        p_39_M06_AXI_araddr->set_sv_netview_offsetfromdp(9859680);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_39_M06_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_39->M06_AXI_arlen.bind(*p_39_M06_AXI_arlen);
        p_39_M06_AXI_arlen->set_sv_netview_offsetfromdp(9859736);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_39_M06_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_39->M06_AXI_arsize.bind(*p_39_M06_AXI_arsize);
        p_39_M06_AXI_arsize->set_sv_netview_offsetfromdp(9859792);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_39_M06_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_39->M06_AXI_arburst.bind(*p_39_M06_AXI_arburst);
        p_39_M06_AXI_arburst->set_sv_netview_offsetfromdp(9859848);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_39_M06_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_39->M06_AXI_arlock.bind(*p_39_M06_AXI_arlock);
        p_39_M06_AXI_arlock->set_sv_netview_offsetfromdp(9859904);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_39_M06_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_39->M06_AXI_arcache.bind(*p_39_M06_AXI_arcache);
        p_39_M06_AXI_arcache->set_sv_netview_offsetfromdp(9859960);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_39_M06_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_39->M06_AXI_arprot.bind(*p_39_M06_AXI_arprot);
        p_39_M06_AXI_arprot->set_sv_netview_offsetfromdp(9860016);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_39_M06_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_39->M06_AXI_arqos.bind(*p_39_M06_AXI_arqos);
        p_39_M06_AXI_arqos->set_sv_netview_offsetfromdp(9860072);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_39_M06_AXI_aruser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_39->M06_AXI_aruser.bind(*p_39_M06_AXI_aruser);
        p_39_M06_AXI_aruser->set_sv_netview_offsetfromdp(9860128);
        xsim_sc_channel<0, bool > *p_39_M06_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->M06_AXI_arvalid.bind(*p_39_M06_AXI_arvalid);
        p_39_M06_AXI_arvalid->set_sv_netview_offsetfromdp(9860184);
        xsim_sc_channel<0, bool > *p_39_M06_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_39->M06_AXI_arready.bind(*p_39_M06_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M06_AXI_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_39_M06_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_39->M06_AXI_rid.bind(*p_39_M06_AXI_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M06_AXI_rid);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_39_M06_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_39->M06_AXI_rdata.bind(*p_39_M06_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M06_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_39_M06_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_39->M06_AXI_rresp.bind(*p_39_M06_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M06_AXI_rresp);
        xsim_sc_channel<0, bool > *p_39_M06_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_39->M06_AXI_rlast.bind(*p_39_M06_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M06_AXI_rlast);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_39_M06_AXI_ruser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_39->M06_AXI_ruser.bind(*p_39_M06_AXI_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M06_AXI_ruser);
        xsim_sc_channel<0, bool > *p_39_M06_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->M06_AXI_rvalid.bind(*p_39_M06_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M06_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_39_M06_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_39->M06_AXI_rready.bind(*p_39_M06_AXI_rready);
        p_39_M06_AXI_rready->set_sv_netview_offsetfromdp(9860632);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_39_M07_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_39->M07_AXI_awid.bind(*p_39_M07_AXI_awid);
        p_39_M07_AXI_awid->set_sv_netview_offsetfromdp(9860688);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_39_M07_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_39->M07_AXI_awaddr.bind(*p_39_M07_AXI_awaddr);
        p_39_M07_AXI_awaddr->set_sv_netview_offsetfromdp(9860744);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_39_M07_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_39->M07_AXI_awlen.bind(*p_39_M07_AXI_awlen);
        p_39_M07_AXI_awlen->set_sv_netview_offsetfromdp(9860800);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_39_M07_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_39->M07_AXI_awsize.bind(*p_39_M07_AXI_awsize);
        p_39_M07_AXI_awsize->set_sv_netview_offsetfromdp(9860856);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_39_M07_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_39->M07_AXI_awburst.bind(*p_39_M07_AXI_awburst);
        p_39_M07_AXI_awburst->set_sv_netview_offsetfromdp(9860912);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_39_M07_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_39->M07_AXI_awlock.bind(*p_39_M07_AXI_awlock);
        p_39_M07_AXI_awlock->set_sv_netview_offsetfromdp(9860968);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_39_M07_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_39->M07_AXI_awcache.bind(*p_39_M07_AXI_awcache);
        p_39_M07_AXI_awcache->set_sv_netview_offsetfromdp(9861024);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_39_M07_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_39->M07_AXI_awprot.bind(*p_39_M07_AXI_awprot);
        p_39_M07_AXI_awprot->set_sv_netview_offsetfromdp(9861080);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_39_M07_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_39->M07_AXI_awqos.bind(*p_39_M07_AXI_awqos);
        p_39_M07_AXI_awqos->set_sv_netview_offsetfromdp(9861136);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_39_M07_AXI_awuser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_39->M07_AXI_awuser.bind(*p_39_M07_AXI_awuser);
        p_39_M07_AXI_awuser->set_sv_netview_offsetfromdp(9861192);
        xsim_sc_channel<0, bool > *p_39_M07_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->M07_AXI_awvalid.bind(*p_39_M07_AXI_awvalid);
        p_39_M07_AXI_awvalid->set_sv_netview_offsetfromdp(9861248);
        xsim_sc_channel<0, bool > *p_39_M07_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_39->M07_AXI_awready.bind(*p_39_M07_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M07_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_39_M07_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_39->M07_AXI_wdata.bind(*p_39_M07_AXI_wdata);
        p_39_M07_AXI_wdata->set_sv_netview_offsetfromdp(9861360);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_39_M07_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_39->M07_AXI_wstrb.bind(*p_39_M07_AXI_wstrb);
        p_39_M07_AXI_wstrb->set_sv_netview_offsetfromdp(9861416);
        xsim_sc_channel<0, bool > *p_39_M07_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_39->M07_AXI_wlast.bind(*p_39_M07_AXI_wlast);
        p_39_M07_AXI_wlast->set_sv_netview_offsetfromdp(9861472);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_39_M07_AXI_wuser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_39->M07_AXI_wuser.bind(*p_39_M07_AXI_wuser);
        p_39_M07_AXI_wuser->set_sv_netview_offsetfromdp(9861528);
        xsim_sc_channel<0, bool > *p_39_M07_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->M07_AXI_wvalid.bind(*p_39_M07_AXI_wvalid);
        p_39_M07_AXI_wvalid->set_sv_netview_offsetfromdp(9861584);
        xsim_sc_channel<0, bool > *p_39_M07_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_39->M07_AXI_wready.bind(*p_39_M07_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M07_AXI_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_39_M07_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_39->M07_AXI_bid.bind(*p_39_M07_AXI_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M07_AXI_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_39_M07_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_39->M07_AXI_bresp.bind(*p_39_M07_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M07_AXI_bresp);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_39_M07_AXI_buser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_39->M07_AXI_buser.bind(*p_39_M07_AXI_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M07_AXI_buser);
        xsim_sc_channel<0, bool > *p_39_M07_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->M07_AXI_bvalid.bind(*p_39_M07_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M07_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_39_M07_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_39->M07_AXI_bready.bind(*p_39_M07_AXI_bready);
        p_39_M07_AXI_bready->set_sv_netview_offsetfromdp(9861920);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_39_M07_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_39->M07_AXI_arid.bind(*p_39_M07_AXI_arid);
        p_39_M07_AXI_arid->set_sv_netview_offsetfromdp(9861976);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_39_M07_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_39->M07_AXI_araddr.bind(*p_39_M07_AXI_araddr);
        p_39_M07_AXI_araddr->set_sv_netview_offsetfromdp(9862032);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_39_M07_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_39->M07_AXI_arlen.bind(*p_39_M07_AXI_arlen);
        p_39_M07_AXI_arlen->set_sv_netview_offsetfromdp(9862088);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_39_M07_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_39->M07_AXI_arsize.bind(*p_39_M07_AXI_arsize);
        p_39_M07_AXI_arsize->set_sv_netview_offsetfromdp(9862144);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_39_M07_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_39->M07_AXI_arburst.bind(*p_39_M07_AXI_arburst);
        p_39_M07_AXI_arburst->set_sv_netview_offsetfromdp(9862200);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_39_M07_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_39->M07_AXI_arlock.bind(*p_39_M07_AXI_arlock);
        p_39_M07_AXI_arlock->set_sv_netview_offsetfromdp(9862256);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_39_M07_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_39->M07_AXI_arcache.bind(*p_39_M07_AXI_arcache);
        p_39_M07_AXI_arcache->set_sv_netview_offsetfromdp(9862312);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_39_M07_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_39->M07_AXI_arprot.bind(*p_39_M07_AXI_arprot);
        p_39_M07_AXI_arprot->set_sv_netview_offsetfromdp(9862368);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_39_M07_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_39->M07_AXI_arqos.bind(*p_39_M07_AXI_arqos);
        p_39_M07_AXI_arqos->set_sv_netview_offsetfromdp(9862424);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_39_M07_AXI_aruser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_39->M07_AXI_aruser.bind(*p_39_M07_AXI_aruser);
        p_39_M07_AXI_aruser->set_sv_netview_offsetfromdp(9862480);
        xsim_sc_channel<0, bool > *p_39_M07_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->M07_AXI_arvalid.bind(*p_39_M07_AXI_arvalid);
        p_39_M07_AXI_arvalid->set_sv_netview_offsetfromdp(9862536);
        xsim_sc_channel<0, bool > *p_39_M07_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_39->M07_AXI_arready.bind(*p_39_M07_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M07_AXI_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_39_M07_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_39->M07_AXI_rid.bind(*p_39_M07_AXI_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M07_AXI_rid);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_39_M07_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_39->M07_AXI_rdata.bind(*p_39_M07_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M07_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_39_M07_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_39->M07_AXI_rresp.bind(*p_39_M07_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M07_AXI_rresp);
        xsim_sc_channel<0, bool > *p_39_M07_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_39->M07_AXI_rlast.bind(*p_39_M07_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M07_AXI_rlast);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_39_M07_AXI_ruser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_39->M07_AXI_ruser.bind(*p_39_M07_AXI_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M07_AXI_ruser);
        xsim_sc_channel<0, bool > *p_39_M07_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->M07_AXI_rvalid.bind(*p_39_M07_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M07_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_39_M07_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_39->M07_AXI_rready.bind(*p_39_M07_AXI_rready);
        p_39_M07_AXI_rready->set_sv_netview_offsetfromdp(9862984);
        sc_inst_40 = new bd_d216_rs_M00_AXI_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.interconnect.rs_m00_axi");
        sc_inst_40->xsim_set_dbg_index(2544);
        xsim_sc_channel<0, bool > *p_40_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_40->aclk.bind(*p_40_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_40_aclk);
        xsim_sc_channel<0, bool > *p_40_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_40->aresetn.bind(*p_40_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_40_aresetn);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_40_s_axi_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_40->s_axi_awaddr.bind(*p_40_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_40_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_40_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_40->s_axi_awlen.bind(*p_40_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_40_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_40_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_40->s_axi_awsize.bind(*p_40_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_40_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_40_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_40->s_axi_awburst.bind(*p_40_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_40_s_axi_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_40_s_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_40->s_axi_awlock.bind(*p_40_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_40_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_40_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_40->s_axi_awcache.bind(*p_40_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_40_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_40_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_40->s_axi_awprot.bind(*p_40_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_40_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_40_s_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_40->s_axi_awregion.bind(*p_40_s_axi_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_40_s_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_40_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_40->s_axi_awqos.bind(*p_40_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_40_s_axi_awqos);
        xsim_sc_channel<0, bool > *p_40_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_40->s_axi_awvalid.bind(*p_40_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_40_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_40_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_40->s_axi_awready.bind(*p_40_s_axi_awready);
        p_40_s_axi_awready->set_sv_netview_offsetfromdp(9863760);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_40_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_40->s_axi_wdata.bind(*p_40_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_40_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_40_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_40->s_axi_wstrb.bind(*p_40_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_40_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_40_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_40->s_axi_wlast.bind(*p_40_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_40_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_40_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_40->s_axi_wvalid.bind(*p_40_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_40_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_40_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_40->s_axi_wready.bind(*p_40_s_axi_wready);
        p_40_s_axi_wready->set_sv_netview_offsetfromdp(9864040);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_40_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_40->s_axi_bresp.bind(*p_40_s_axi_bresp);
        p_40_s_axi_bresp->set_sv_netview_offsetfromdp(9864096);
        xsim_sc_channel<0, bool > *p_40_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_40->s_axi_bvalid.bind(*p_40_s_axi_bvalid);
        p_40_s_axi_bvalid->set_sv_netview_offsetfromdp(9864152);
        xsim_sc_channel<0, bool > *p_40_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_40->s_axi_bready.bind(*p_40_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_40_s_axi_bready);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_40_s_axi_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_40->s_axi_araddr.bind(*p_40_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_40_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_40_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_40->s_axi_arlen.bind(*p_40_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_40_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_40_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_40->s_axi_arsize.bind(*p_40_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_40_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_40_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_40->s_axi_arburst.bind(*p_40_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_40_s_axi_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_40_s_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_40->s_axi_arlock.bind(*p_40_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_40_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_40_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_40->s_axi_arcache.bind(*p_40_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_40_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_40_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_40->s_axi_arprot.bind(*p_40_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_40_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_40_s_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_40->s_axi_arregion.bind(*p_40_s_axi_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_40_s_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_40_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_40->s_axi_arqos.bind(*p_40_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_40_s_axi_arqos);
        xsim_sc_channel<0, bool > *p_40_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_40->s_axi_arvalid.bind(*p_40_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_40_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_40_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_40->s_axi_arready.bind(*p_40_s_axi_arready);
        p_40_s_axi_arready->set_sv_netview_offsetfromdp(9864824);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_40_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_40->s_axi_rdata.bind(*p_40_s_axi_rdata);
        p_40_s_axi_rdata->set_sv_netview_offsetfromdp(9864880);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_40_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_40->s_axi_rresp.bind(*p_40_s_axi_rresp);
        p_40_s_axi_rresp->set_sv_netview_offsetfromdp(9864936);
        xsim_sc_channel<0, bool > *p_40_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_40->s_axi_rlast.bind(*p_40_s_axi_rlast);
        p_40_s_axi_rlast->set_sv_netview_offsetfromdp(9864992);
        xsim_sc_channel<0, bool > *p_40_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_40->s_axi_rvalid.bind(*p_40_s_axi_rvalid);
        p_40_s_axi_rvalid->set_sv_netview_offsetfromdp(9865048);
        xsim_sc_channel<0, bool > *p_40_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_40->s_axi_rready.bind(*p_40_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_40_s_axi_rready);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_40_m_axi_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_40->m_axi_awaddr.bind(*p_40_m_axi_awaddr);
        p_40_m_axi_awaddr->set_sv_netview_offsetfromdp(9865160);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_40_m_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_40->m_axi_awlen.bind(*p_40_m_axi_awlen);
        p_40_m_axi_awlen->set_sv_netview_offsetfromdp(9865216);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_40_m_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_40->m_axi_awsize.bind(*p_40_m_axi_awsize);
        p_40_m_axi_awsize->set_sv_netview_offsetfromdp(9865272);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_40_m_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_40->m_axi_awburst.bind(*p_40_m_axi_awburst);
        p_40_m_axi_awburst->set_sv_netview_offsetfromdp(9865328);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_40_m_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_40->m_axi_awlock.bind(*p_40_m_axi_awlock);
        p_40_m_axi_awlock->set_sv_netview_offsetfromdp(9865384);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_40_m_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_40->m_axi_awcache.bind(*p_40_m_axi_awcache);
        p_40_m_axi_awcache->set_sv_netview_offsetfromdp(9865440);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_40_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_40->m_axi_awprot.bind(*p_40_m_axi_awprot);
        p_40_m_axi_awprot->set_sv_netview_offsetfromdp(9865496);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_40_m_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_40->m_axi_awregion.bind(*p_40_m_axi_awregion);
        p_40_m_axi_awregion->set_sv_netview_offsetfromdp(9865552);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_40_m_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_40->m_axi_awqos.bind(*p_40_m_axi_awqos);
        p_40_m_axi_awqos->set_sv_netview_offsetfromdp(9865608);
        xsim_sc_channel<0, bool > *p_40_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_40->m_axi_awvalid.bind(*p_40_m_axi_awvalid);
        p_40_m_axi_awvalid->set_sv_netview_offsetfromdp(9865664);
        xsim_sc_channel<0, bool > *p_40_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_40->m_axi_awready.bind(*p_40_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_40_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_40_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_40->m_axi_wdata.bind(*p_40_m_axi_wdata);
        p_40_m_axi_wdata->set_sv_netview_offsetfromdp(9865776);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_40_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_40->m_axi_wstrb.bind(*p_40_m_axi_wstrb);
        p_40_m_axi_wstrb->set_sv_netview_offsetfromdp(9865832);
        xsim_sc_channel<0, bool > *p_40_m_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_40->m_axi_wlast.bind(*p_40_m_axi_wlast);
        p_40_m_axi_wlast->set_sv_netview_offsetfromdp(9865888);
        xsim_sc_channel<0, bool > *p_40_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_40->m_axi_wvalid.bind(*p_40_m_axi_wvalid);
        p_40_m_axi_wvalid->set_sv_netview_offsetfromdp(9865944);
        xsim_sc_channel<0, bool > *p_40_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_40->m_axi_wready.bind(*p_40_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_40_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_40_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_40->m_axi_bresp.bind(*p_40_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_40_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_40_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_40->m_axi_bvalid.bind(*p_40_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_40_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_40_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_40->m_axi_bready.bind(*p_40_m_axi_bready);
        p_40_m_axi_bready->set_sv_netview_offsetfromdp(9866168);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_40_m_axi_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_40->m_axi_araddr.bind(*p_40_m_axi_araddr);
        p_40_m_axi_araddr->set_sv_netview_offsetfromdp(9866224);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_40_m_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_40->m_axi_arlen.bind(*p_40_m_axi_arlen);
        p_40_m_axi_arlen->set_sv_netview_offsetfromdp(9866280);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_40_m_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_40->m_axi_arsize.bind(*p_40_m_axi_arsize);
        p_40_m_axi_arsize->set_sv_netview_offsetfromdp(9866336);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_40_m_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_40->m_axi_arburst.bind(*p_40_m_axi_arburst);
        p_40_m_axi_arburst->set_sv_netview_offsetfromdp(9866392);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_40_m_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_40->m_axi_arlock.bind(*p_40_m_axi_arlock);
        p_40_m_axi_arlock->set_sv_netview_offsetfromdp(9866448);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_40_m_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_40->m_axi_arcache.bind(*p_40_m_axi_arcache);
        p_40_m_axi_arcache->set_sv_netview_offsetfromdp(9866504);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_40_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_40->m_axi_arprot.bind(*p_40_m_axi_arprot);
        p_40_m_axi_arprot->set_sv_netview_offsetfromdp(9866560);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_40_m_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_40->m_axi_arregion.bind(*p_40_m_axi_arregion);
        p_40_m_axi_arregion->set_sv_netview_offsetfromdp(9866616);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_40_m_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_40->m_axi_arqos.bind(*p_40_m_axi_arqos);
        p_40_m_axi_arqos->set_sv_netview_offsetfromdp(9866672);
        xsim_sc_channel<0, bool > *p_40_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_40->m_axi_arvalid.bind(*p_40_m_axi_arvalid);
        p_40_m_axi_arvalid->set_sv_netview_offsetfromdp(9866728);
        xsim_sc_channel<0, bool > *p_40_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_40->m_axi_arready.bind(*p_40_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_40_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_40_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_40->m_axi_rdata.bind(*p_40_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_40_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_40_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_40->m_axi_rresp.bind(*p_40_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_40_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_40_m_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_40->m_axi_rlast.bind(*p_40_m_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_40_m_axi_rlast);
        xsim_sc_channel<0, bool > *p_40_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_40->m_axi_rvalid.bind(*p_40_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_40_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_40_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_40->m_axi_rready.bind(*p_40_m_axi_rready);
        p_40_m_axi_rready->set_sv_netview_offsetfromdp(9867064);
        sc_inst_41 = new bd_d216_ddr4_mem00_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.memory.ddr4_mem00");
        sc_inst_41->xsim_set_dbg_index(2907);
        xsim_sc_channel<0, bool > *p_41_c0_init_calib_complete = new xsim_sc_channel<0, bool >();
        sc_inst_41->c0_init_calib_complete.bind(*p_41_c0_init_calib_complete);
        p_41_c0_init_calib_complete->set_sv_netview_offsetfromdp(10209760);
        xsim_sc_channel<0, bool > *p_41_dbg_clk = new xsim_sc_channel<0, bool >();
        sc_inst_41->dbg_clk.bind(*p_41_dbg_clk);
        p_41_dbg_clk->set_sv_netview_offsetfromdp(10209816);
        xsim_sc_channel<0, bool > *p_41_c0_sys_clk_p = new xsim_sc_channel<0, bool >();
        sc_inst_41->c0_sys_clk_p.bind(*p_41_c0_sys_clk_p);
        (*_glb_hdl_sc_channel_map).push_back(p_41_c0_sys_clk_p);
        xsim_sc_channel<0, bool > *p_41_c0_sys_clk_n = new xsim_sc_channel<0, bool >();
        sc_inst_41->c0_sys_clk_n.bind(*p_41_c0_sys_clk_n);
        (*_glb_hdl_sc_channel_map).push_back(p_41_c0_sys_clk_n);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_41_dbg_bus = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_41->dbg_bus.bind(*p_41_dbg_bus);
        p_41_dbg_bus->set_sv_netview_offsetfromdp(10209984);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_41_c0_ddr4_adr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_41->c0_ddr4_adr.bind(*p_41_c0_ddr4_adr);
        p_41_c0_ddr4_adr->set_sv_netview_offsetfromdp(10210040);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_41_c0_ddr4_ba = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_41->c0_ddr4_ba.bind(*p_41_c0_ddr4_ba);
        p_41_c0_ddr4_ba->set_sv_netview_offsetfromdp(10210096);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_41_c0_ddr4_cke = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_41->c0_ddr4_cke.bind(*p_41_c0_ddr4_cke);
        p_41_c0_ddr4_cke->set_sv_netview_offsetfromdp(10210152);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_41_c0_ddr4_cs_n = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_41->c0_ddr4_cs_n.bind(*p_41_c0_ddr4_cs_n);
        p_41_c0_ddr4_cs_n->set_sv_netview_offsetfromdp(10210208);
        xsim_sc_channel<72, sc_dt::sc_bv<72> > *p_41_c0_ddr4_dq = new xsim_sc_channel<72, sc_dt::sc_bv<72> >();
        sc_inst_41->c0_ddr4_dq.bind(*p_41_c0_ddr4_dq);
        p_41_c0_ddr4_dq->set_sv_netview_offsetfromdp(10210264);
        xsim_sc_channel<18, sc_dt::sc_bv<18> > *p_41_c0_ddr4_dqs_c = new xsim_sc_channel<18, sc_dt::sc_bv<18> >();
        sc_inst_41->c0_ddr4_dqs_c.bind(*p_41_c0_ddr4_dqs_c);
        p_41_c0_ddr4_dqs_c->set_sv_netview_offsetfromdp(10210320);
        xsim_sc_channel<18, sc_dt::sc_bv<18> > *p_41_c0_ddr4_dqs_t = new xsim_sc_channel<18, sc_dt::sc_bv<18> >();
        sc_inst_41->c0_ddr4_dqs_t.bind(*p_41_c0_ddr4_dqs_t);
        p_41_c0_ddr4_dqs_t->set_sv_netview_offsetfromdp(10210376);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_41_c0_ddr4_odt = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_41->c0_ddr4_odt.bind(*p_41_c0_ddr4_odt);
        p_41_c0_ddr4_odt->set_sv_netview_offsetfromdp(10210432);
        xsim_sc_channel<0, bool > *p_41_c0_ddr4_parity = new xsim_sc_channel<0, bool >();
        sc_inst_41->c0_ddr4_parity.bind(*p_41_c0_ddr4_parity);
        p_41_c0_ddr4_parity->set_sv_netview_offsetfromdp(10210488);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_41_c0_ddr4_bg = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_41->c0_ddr4_bg.bind(*p_41_c0_ddr4_bg);
        p_41_c0_ddr4_bg->set_sv_netview_offsetfromdp(10210544);
        xsim_sc_channel<0, bool > *p_41_c0_ddr4_reset_n = new xsim_sc_channel<0, bool >();
        sc_inst_41->c0_ddr4_reset_n.bind(*p_41_c0_ddr4_reset_n);
        p_41_c0_ddr4_reset_n->set_sv_netview_offsetfromdp(10210600);
        xsim_sc_channel<0, bool > *p_41_c0_ddr4_act_n = new xsim_sc_channel<0, bool >();
        sc_inst_41->c0_ddr4_act_n.bind(*p_41_c0_ddr4_act_n);
        p_41_c0_ddr4_act_n->set_sv_netview_offsetfromdp(10210656);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_41_c0_ddr4_ck_c = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_41->c0_ddr4_ck_c.bind(*p_41_c0_ddr4_ck_c);
        p_41_c0_ddr4_ck_c->set_sv_netview_offsetfromdp(10210712);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_41_c0_ddr4_ck_t = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_41->c0_ddr4_ck_t.bind(*p_41_c0_ddr4_ck_t);
        p_41_c0_ddr4_ck_t->set_sv_netview_offsetfromdp(10210768);
        xsim_sc_channel<0, bool > *p_41_c0_ddr4_ui_clk = new xsim_sc_channel<0, bool >();
        sc_inst_41->c0_ddr4_ui_clk.bind(*p_41_c0_ddr4_ui_clk);
        p_41_c0_ddr4_ui_clk->set_sv_netview_offsetfromdp(10210824);
        xsim_sc_channel<0, bool > *p_41_c0_ddr4_ui_clk_sync_rst = new xsim_sc_channel<0, bool >();
        sc_inst_41->c0_ddr4_ui_clk_sync_rst.bind(*p_41_c0_ddr4_ui_clk_sync_rst);
        p_41_c0_ddr4_ui_clk_sync_rst->set_sv_netview_offsetfromdp(10210880);
        xsim_sc_channel<0, bool > *p_41_c0_ddr4_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_41->c0_ddr4_aresetn.bind(*p_41_c0_ddr4_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_41_c0_ddr4_aresetn);
        xsim_sc_channel<0, bool > *p_41_c0_ddr4_s_axi_ctrl_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_41->c0_ddr4_s_axi_ctrl_awvalid.bind(*p_41_c0_ddr4_s_axi_ctrl_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_41_c0_ddr4_s_axi_ctrl_awvalid);
        xsim_sc_channel<0, bool > *p_41_c0_ddr4_s_axi_ctrl_awready = new xsim_sc_channel<0, bool >();
        sc_inst_41->c0_ddr4_s_axi_ctrl_awready.bind(*p_41_c0_ddr4_s_axi_ctrl_awready);
        p_41_c0_ddr4_s_axi_ctrl_awready->set_sv_netview_offsetfromdp(10211048);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_41_c0_ddr4_s_axi_ctrl_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_41->c0_ddr4_s_axi_ctrl_awaddr.bind(*p_41_c0_ddr4_s_axi_ctrl_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_41_c0_ddr4_s_axi_ctrl_awaddr);
        xsim_sc_channel<0, bool > *p_41_c0_ddr4_s_axi_ctrl_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_41->c0_ddr4_s_axi_ctrl_wvalid.bind(*p_41_c0_ddr4_s_axi_ctrl_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_41_c0_ddr4_s_axi_ctrl_wvalid);
        xsim_sc_channel<0, bool > *p_41_c0_ddr4_s_axi_ctrl_wready = new xsim_sc_channel<0, bool >();
        sc_inst_41->c0_ddr4_s_axi_ctrl_wready.bind(*p_41_c0_ddr4_s_axi_ctrl_wready);
        p_41_c0_ddr4_s_axi_ctrl_wready->set_sv_netview_offsetfromdp(10211216);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_41_c0_ddr4_s_axi_ctrl_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_41->c0_ddr4_s_axi_ctrl_wdata.bind(*p_41_c0_ddr4_s_axi_ctrl_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_41_c0_ddr4_s_axi_ctrl_wdata);
        xsim_sc_channel<0, bool > *p_41_c0_ddr4_s_axi_ctrl_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_41->c0_ddr4_s_axi_ctrl_bvalid.bind(*p_41_c0_ddr4_s_axi_ctrl_bvalid);
        p_41_c0_ddr4_s_axi_ctrl_bvalid->set_sv_netview_offsetfromdp(10211328);
        xsim_sc_channel<0, bool > *p_41_c0_ddr4_s_axi_ctrl_bready = new xsim_sc_channel<0, bool >();
        sc_inst_41->c0_ddr4_s_axi_ctrl_bready.bind(*p_41_c0_ddr4_s_axi_ctrl_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_41_c0_ddr4_s_axi_ctrl_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_41_c0_ddr4_s_axi_ctrl_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_41->c0_ddr4_s_axi_ctrl_bresp.bind(*p_41_c0_ddr4_s_axi_ctrl_bresp);
        p_41_c0_ddr4_s_axi_ctrl_bresp->set_sv_netview_offsetfromdp(10211440);
        xsim_sc_channel<0, bool > *p_41_c0_ddr4_s_axi_ctrl_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_41->c0_ddr4_s_axi_ctrl_arvalid.bind(*p_41_c0_ddr4_s_axi_ctrl_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_41_c0_ddr4_s_axi_ctrl_arvalid);
        xsim_sc_channel<0, bool > *p_41_c0_ddr4_s_axi_ctrl_arready = new xsim_sc_channel<0, bool >();
        sc_inst_41->c0_ddr4_s_axi_ctrl_arready.bind(*p_41_c0_ddr4_s_axi_ctrl_arready);
        p_41_c0_ddr4_s_axi_ctrl_arready->set_sv_netview_offsetfromdp(10211552);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_41_c0_ddr4_s_axi_ctrl_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_41->c0_ddr4_s_axi_ctrl_araddr.bind(*p_41_c0_ddr4_s_axi_ctrl_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_41_c0_ddr4_s_axi_ctrl_araddr);
        xsim_sc_channel<0, bool > *p_41_c0_ddr4_s_axi_ctrl_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_41->c0_ddr4_s_axi_ctrl_rvalid.bind(*p_41_c0_ddr4_s_axi_ctrl_rvalid);
        p_41_c0_ddr4_s_axi_ctrl_rvalid->set_sv_netview_offsetfromdp(10211664);
        xsim_sc_channel<0, bool > *p_41_c0_ddr4_s_axi_ctrl_rready = new xsim_sc_channel<0, bool >();
        sc_inst_41->c0_ddr4_s_axi_ctrl_rready.bind(*p_41_c0_ddr4_s_axi_ctrl_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_41_c0_ddr4_s_axi_ctrl_rready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_41_c0_ddr4_s_axi_ctrl_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_41->c0_ddr4_s_axi_ctrl_rdata.bind(*p_41_c0_ddr4_s_axi_ctrl_rdata);
        p_41_c0_ddr4_s_axi_ctrl_rdata->set_sv_netview_offsetfromdp(10211776);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_41_c0_ddr4_s_axi_ctrl_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_41->c0_ddr4_s_axi_ctrl_rresp.bind(*p_41_c0_ddr4_s_axi_ctrl_rresp);
        p_41_c0_ddr4_s_axi_ctrl_rresp->set_sv_netview_offsetfromdp(10211832);
        xsim_sc_channel<0, bool > *p_41_c0_ddr4_interrupt = new xsim_sc_channel<0, bool >();
        sc_inst_41->c0_ddr4_interrupt.bind(*p_41_c0_ddr4_interrupt);
        p_41_c0_ddr4_interrupt->set_sv_netview_offsetfromdp(10211888);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_41_c0_ddr4_s_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_41->c0_ddr4_s_axi_awid.bind(*p_41_c0_ddr4_s_axi_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_41_c0_ddr4_s_axi_awid);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_41_c0_ddr4_s_axi_awaddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_41->c0_ddr4_s_axi_awaddr.bind(*p_41_c0_ddr4_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_41_c0_ddr4_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_41_c0_ddr4_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_41->c0_ddr4_s_axi_awlen.bind(*p_41_c0_ddr4_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_41_c0_ddr4_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_41_c0_ddr4_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_41->c0_ddr4_s_axi_awsize.bind(*p_41_c0_ddr4_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_41_c0_ddr4_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_41_c0_ddr4_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_41->c0_ddr4_s_axi_awburst.bind(*p_41_c0_ddr4_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_41_c0_ddr4_s_axi_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_41_c0_ddr4_s_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_41->c0_ddr4_s_axi_awlock.bind(*p_41_c0_ddr4_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_41_c0_ddr4_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_41_c0_ddr4_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_41->c0_ddr4_s_axi_awcache.bind(*p_41_c0_ddr4_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_41_c0_ddr4_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_41_c0_ddr4_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_41->c0_ddr4_s_axi_awprot.bind(*p_41_c0_ddr4_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_41_c0_ddr4_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_41_c0_ddr4_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_41->c0_ddr4_s_axi_awqos.bind(*p_41_c0_ddr4_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_41_c0_ddr4_s_axi_awqos);
        xsim_sc_channel<0, bool > *p_41_c0_ddr4_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_41->c0_ddr4_s_axi_awvalid.bind(*p_41_c0_ddr4_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_41_c0_ddr4_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_41_c0_ddr4_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_41->c0_ddr4_s_axi_awready.bind(*p_41_c0_ddr4_s_axi_awready);
        p_41_c0_ddr4_s_axi_awready->set_sv_netview_offsetfromdp(10212504);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_41_c0_ddr4_s_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_41->c0_ddr4_s_axi_wdata.bind(*p_41_c0_ddr4_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_41_c0_ddr4_s_axi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_41_c0_ddr4_s_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_41->c0_ddr4_s_axi_wstrb.bind(*p_41_c0_ddr4_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_41_c0_ddr4_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_41_c0_ddr4_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_41->c0_ddr4_s_axi_wlast.bind(*p_41_c0_ddr4_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_41_c0_ddr4_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_41_c0_ddr4_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_41->c0_ddr4_s_axi_wvalid.bind(*p_41_c0_ddr4_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_41_c0_ddr4_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_41_c0_ddr4_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_41->c0_ddr4_s_axi_wready.bind(*p_41_c0_ddr4_s_axi_wready);
        p_41_c0_ddr4_s_axi_wready->set_sv_netview_offsetfromdp(10212784);
        xsim_sc_channel<0, bool > *p_41_c0_ddr4_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_41->c0_ddr4_s_axi_bready.bind(*p_41_c0_ddr4_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_41_c0_ddr4_s_axi_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_41_c0_ddr4_s_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_41->c0_ddr4_s_axi_bid.bind(*p_41_c0_ddr4_s_axi_bid);
        p_41_c0_ddr4_s_axi_bid->set_sv_netview_offsetfromdp(10212896);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_41_c0_ddr4_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_41->c0_ddr4_s_axi_bresp.bind(*p_41_c0_ddr4_s_axi_bresp);
        p_41_c0_ddr4_s_axi_bresp->set_sv_netview_offsetfromdp(10212952);
        xsim_sc_channel<0, bool > *p_41_c0_ddr4_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_41->c0_ddr4_s_axi_bvalid.bind(*p_41_c0_ddr4_s_axi_bvalid);
        p_41_c0_ddr4_s_axi_bvalid->set_sv_netview_offsetfromdp(10213008);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_41_c0_ddr4_s_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_41->c0_ddr4_s_axi_arid.bind(*p_41_c0_ddr4_s_axi_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_41_c0_ddr4_s_axi_arid);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_41_c0_ddr4_s_axi_araddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_41->c0_ddr4_s_axi_araddr.bind(*p_41_c0_ddr4_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_41_c0_ddr4_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_41_c0_ddr4_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_41->c0_ddr4_s_axi_arlen.bind(*p_41_c0_ddr4_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_41_c0_ddr4_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_41_c0_ddr4_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_41->c0_ddr4_s_axi_arsize.bind(*p_41_c0_ddr4_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_41_c0_ddr4_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_41_c0_ddr4_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_41->c0_ddr4_s_axi_arburst.bind(*p_41_c0_ddr4_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_41_c0_ddr4_s_axi_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_41_c0_ddr4_s_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_41->c0_ddr4_s_axi_arlock.bind(*p_41_c0_ddr4_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_41_c0_ddr4_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_41_c0_ddr4_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_41->c0_ddr4_s_axi_arcache.bind(*p_41_c0_ddr4_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_41_c0_ddr4_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_41_c0_ddr4_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_41->c0_ddr4_s_axi_arprot.bind(*p_41_c0_ddr4_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_41_c0_ddr4_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_41_c0_ddr4_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_41->c0_ddr4_s_axi_arqos.bind(*p_41_c0_ddr4_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_41_c0_ddr4_s_axi_arqos);
        xsim_sc_channel<0, bool > *p_41_c0_ddr4_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_41->c0_ddr4_s_axi_arvalid.bind(*p_41_c0_ddr4_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_41_c0_ddr4_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_41_c0_ddr4_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_41->c0_ddr4_s_axi_arready.bind(*p_41_c0_ddr4_s_axi_arready);
        p_41_c0_ddr4_s_axi_arready->set_sv_netview_offsetfromdp(10213624);
        xsim_sc_channel<0, bool > *p_41_c0_ddr4_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_41->c0_ddr4_s_axi_rready.bind(*p_41_c0_ddr4_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_41_c0_ddr4_s_axi_rready);
        xsim_sc_channel<0, bool > *p_41_c0_ddr4_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_41->c0_ddr4_s_axi_rlast.bind(*p_41_c0_ddr4_s_axi_rlast);
        p_41_c0_ddr4_s_axi_rlast->set_sv_netview_offsetfromdp(10213736);
        xsim_sc_channel<0, bool > *p_41_c0_ddr4_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_41->c0_ddr4_s_axi_rvalid.bind(*p_41_c0_ddr4_s_axi_rvalid);
        p_41_c0_ddr4_s_axi_rvalid->set_sv_netview_offsetfromdp(10213792);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_41_c0_ddr4_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_41->c0_ddr4_s_axi_rresp.bind(*p_41_c0_ddr4_s_axi_rresp);
        p_41_c0_ddr4_s_axi_rresp->set_sv_netview_offsetfromdp(10213848);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_41_c0_ddr4_s_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_41->c0_ddr4_s_axi_rid.bind(*p_41_c0_ddr4_s_axi_rid);
        p_41_c0_ddr4_s_axi_rid->set_sv_netview_offsetfromdp(10213904);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_41_c0_ddr4_s_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_41->c0_ddr4_s_axi_rdata.bind(*p_41_c0_ddr4_s_axi_rdata);
        p_41_c0_ddr4_s_axi_rdata->set_sv_netview_offsetfromdp(10213960);
        xsim_sc_channel<0, bool > *p_41_addn_ui_clkout1 = new xsim_sc_channel<0, bool >();
        sc_inst_41->addn_ui_clkout1.bind(*p_41_addn_ui_clkout1);
        p_41_addn_ui_clkout1->set_sv_netview_offsetfromdp(10214016);
        xsim_sc_channel<0, bool > *p_41_sys_rst = new xsim_sc_channel<0, bool >();
        sc_inst_41->sys_rst.bind(*p_41_sys_rst);
        (*_glb_hdl_sc_channel_map).push_back(p_41_sys_rst);
        sc_inst_42 = new bd_d216_ddr4_mem00_ctrl_cc_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.memory.ddr4_mem00_ctrl_cc");
        sc_inst_42->xsim_set_dbg_index(2908);
        xsim_sc_channel<0, bool > *p_42_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_42->s_axi_aclk.bind(*p_42_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_42_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_42_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_42->s_axi_aresetn.bind(*p_42_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_42_s_axi_aresetn);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_42_s_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_42->s_axi_awaddr.bind(*p_42_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_42_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_42_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_42->s_axi_awprot.bind(*p_42_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_42_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_42_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_42->s_axi_awvalid.bind(*p_42_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_42_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_42_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_42->s_axi_awready.bind(*p_42_s_axi_awready);
        p_42_s_axi_awready->set_sv_netview_offsetfromdp(10214456);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_42_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_42->s_axi_wdata.bind(*p_42_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_42_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_42_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_42->s_axi_wstrb.bind(*p_42_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_42_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_42_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_42->s_axi_wvalid.bind(*p_42_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_42_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_42_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_42->s_axi_wready.bind(*p_42_s_axi_wready);
        p_42_s_axi_wready->set_sv_netview_offsetfromdp(10214680);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_42_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_42->s_axi_bresp.bind(*p_42_s_axi_bresp);
        p_42_s_axi_bresp->set_sv_netview_offsetfromdp(10214736);
        xsim_sc_channel<0, bool > *p_42_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_42->s_axi_bvalid.bind(*p_42_s_axi_bvalid);
        p_42_s_axi_bvalid->set_sv_netview_offsetfromdp(10214792);
        xsim_sc_channel<0, bool > *p_42_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_42->s_axi_bready.bind(*p_42_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_42_s_axi_bready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_42_s_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_42->s_axi_araddr.bind(*p_42_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_42_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_42_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_42->s_axi_arprot.bind(*p_42_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_42_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_42_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_42->s_axi_arvalid.bind(*p_42_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_42_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_42_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_42->s_axi_arready.bind(*p_42_s_axi_arready);
        p_42_s_axi_arready->set_sv_netview_offsetfromdp(10215072);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_42_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_42->s_axi_rdata.bind(*p_42_s_axi_rdata);
        p_42_s_axi_rdata->set_sv_netview_offsetfromdp(10215128);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_42_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_42->s_axi_rresp.bind(*p_42_s_axi_rresp);
        p_42_s_axi_rresp->set_sv_netview_offsetfromdp(10215184);
        xsim_sc_channel<0, bool > *p_42_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_42->s_axi_rvalid.bind(*p_42_s_axi_rvalid);
        p_42_s_axi_rvalid->set_sv_netview_offsetfromdp(10215240);
        xsim_sc_channel<0, bool > *p_42_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_42->s_axi_rready.bind(*p_42_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_42_s_axi_rready);
        xsim_sc_channel<0, bool > *p_42_m_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_42->m_axi_aclk.bind(*p_42_m_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_42_m_axi_aclk);
        xsim_sc_channel<0, bool > *p_42_m_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_42->m_axi_aresetn.bind(*p_42_m_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_42_m_axi_aresetn);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_42_m_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_42->m_axi_awaddr.bind(*p_42_m_axi_awaddr);
        p_42_m_axi_awaddr->set_sv_netview_offsetfromdp(10215464);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_42_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_42->m_axi_awprot.bind(*p_42_m_axi_awprot);
        p_42_m_axi_awprot->set_sv_netview_offsetfromdp(10215520);
        xsim_sc_channel<0, bool > *p_42_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_42->m_axi_awvalid.bind(*p_42_m_axi_awvalid);
        p_42_m_axi_awvalid->set_sv_netview_offsetfromdp(10215576);
        xsim_sc_channel<0, bool > *p_42_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_42->m_axi_awready.bind(*p_42_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_42_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_42_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_42->m_axi_wdata.bind(*p_42_m_axi_wdata);
        p_42_m_axi_wdata->set_sv_netview_offsetfromdp(10215688);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_42_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_42->m_axi_wstrb.bind(*p_42_m_axi_wstrb);
        p_42_m_axi_wstrb->set_sv_netview_offsetfromdp(10215744);
        xsim_sc_channel<0, bool > *p_42_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_42->m_axi_wvalid.bind(*p_42_m_axi_wvalid);
        p_42_m_axi_wvalid->set_sv_netview_offsetfromdp(10215800);
        xsim_sc_channel<0, bool > *p_42_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_42->m_axi_wready.bind(*p_42_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_42_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_42_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_42->m_axi_bresp.bind(*p_42_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_42_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_42_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_42->m_axi_bvalid.bind(*p_42_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_42_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_42_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_42->m_axi_bready.bind(*p_42_m_axi_bready);
        p_42_m_axi_bready->set_sv_netview_offsetfromdp(10216024);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_42_m_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_42->m_axi_araddr.bind(*p_42_m_axi_araddr);
        p_42_m_axi_araddr->set_sv_netview_offsetfromdp(10216080);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_42_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_42->m_axi_arprot.bind(*p_42_m_axi_arprot);
        p_42_m_axi_arprot->set_sv_netview_offsetfromdp(10216136);
        xsim_sc_channel<0, bool > *p_42_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_42->m_axi_arvalid.bind(*p_42_m_axi_arvalid);
        p_42_m_axi_arvalid->set_sv_netview_offsetfromdp(10216192);
        xsim_sc_channel<0, bool > *p_42_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_42->m_axi_arready.bind(*p_42_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_42_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_42_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_42->m_axi_rdata.bind(*p_42_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_42_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_42_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_42->m_axi_rresp.bind(*p_42_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_42_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_42_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_42->m_axi_rvalid.bind(*p_42_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_42_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_42_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_42->m_axi_rready.bind(*p_42_m_axi_rready);
        p_42_m_axi_rready->set_sv_netview_offsetfromdp(10216472);
        sc_inst_43 = new bd_d216_ddr4_mem01_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.memory.ddr4_mem01");
        sc_inst_43->xsim_set_dbg_index(2909);
        xsim_sc_channel<0, bool > *p_43_c0_init_calib_complete = new xsim_sc_channel<0, bool >();
        sc_inst_43->c0_init_calib_complete.bind(*p_43_c0_init_calib_complete);
        p_43_c0_init_calib_complete->set_sv_netview_offsetfromdp(10216576);
        xsim_sc_channel<0, bool > *p_43_dbg_clk = new xsim_sc_channel<0, bool >();
        sc_inst_43->dbg_clk.bind(*p_43_dbg_clk);
        p_43_dbg_clk->set_sv_netview_offsetfromdp(10216632);
        xsim_sc_channel<0, bool > *p_43_c0_sys_clk_p = new xsim_sc_channel<0, bool >();
        sc_inst_43->c0_sys_clk_p.bind(*p_43_c0_sys_clk_p);
        (*_glb_hdl_sc_channel_map).push_back(p_43_c0_sys_clk_p);
        xsim_sc_channel<0, bool > *p_43_c0_sys_clk_n = new xsim_sc_channel<0, bool >();
        sc_inst_43->c0_sys_clk_n.bind(*p_43_c0_sys_clk_n);
        (*_glb_hdl_sc_channel_map).push_back(p_43_c0_sys_clk_n);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_43_dbg_bus = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_43->dbg_bus.bind(*p_43_dbg_bus);
        p_43_dbg_bus->set_sv_netview_offsetfromdp(10216800);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_43_c0_ddr4_adr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_43->c0_ddr4_adr.bind(*p_43_c0_ddr4_adr);
        p_43_c0_ddr4_adr->set_sv_netview_offsetfromdp(10216856);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_43_c0_ddr4_ba = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_43->c0_ddr4_ba.bind(*p_43_c0_ddr4_ba);
        p_43_c0_ddr4_ba->set_sv_netview_offsetfromdp(10216912);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_43_c0_ddr4_cke = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_43->c0_ddr4_cke.bind(*p_43_c0_ddr4_cke);
        p_43_c0_ddr4_cke->set_sv_netview_offsetfromdp(10216968);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_43_c0_ddr4_cs_n = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_43->c0_ddr4_cs_n.bind(*p_43_c0_ddr4_cs_n);
        p_43_c0_ddr4_cs_n->set_sv_netview_offsetfromdp(10217024);
        xsim_sc_channel<72, sc_dt::sc_bv<72> > *p_43_c0_ddr4_dq = new xsim_sc_channel<72, sc_dt::sc_bv<72> >();
        sc_inst_43->c0_ddr4_dq.bind(*p_43_c0_ddr4_dq);
        p_43_c0_ddr4_dq->set_sv_netview_offsetfromdp(10217080);
        xsim_sc_channel<18, sc_dt::sc_bv<18> > *p_43_c0_ddr4_dqs_c = new xsim_sc_channel<18, sc_dt::sc_bv<18> >();
        sc_inst_43->c0_ddr4_dqs_c.bind(*p_43_c0_ddr4_dqs_c);
        p_43_c0_ddr4_dqs_c->set_sv_netview_offsetfromdp(10217136);
        xsim_sc_channel<18, sc_dt::sc_bv<18> > *p_43_c0_ddr4_dqs_t = new xsim_sc_channel<18, sc_dt::sc_bv<18> >();
        sc_inst_43->c0_ddr4_dqs_t.bind(*p_43_c0_ddr4_dqs_t);
        p_43_c0_ddr4_dqs_t->set_sv_netview_offsetfromdp(10217192);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_43_c0_ddr4_odt = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_43->c0_ddr4_odt.bind(*p_43_c0_ddr4_odt);
        p_43_c0_ddr4_odt->set_sv_netview_offsetfromdp(10217248);
        xsim_sc_channel<0, bool > *p_43_c0_ddr4_parity = new xsim_sc_channel<0, bool >();
        sc_inst_43->c0_ddr4_parity.bind(*p_43_c0_ddr4_parity);
        p_43_c0_ddr4_parity->set_sv_netview_offsetfromdp(10217304);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_43_c0_ddr4_bg = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_43->c0_ddr4_bg.bind(*p_43_c0_ddr4_bg);
        p_43_c0_ddr4_bg->set_sv_netview_offsetfromdp(10217360);
        xsim_sc_channel<0, bool > *p_43_c0_ddr4_reset_n = new xsim_sc_channel<0, bool >();
        sc_inst_43->c0_ddr4_reset_n.bind(*p_43_c0_ddr4_reset_n);
        p_43_c0_ddr4_reset_n->set_sv_netview_offsetfromdp(10217416);
        xsim_sc_channel<0, bool > *p_43_c0_ddr4_act_n = new xsim_sc_channel<0, bool >();
        sc_inst_43->c0_ddr4_act_n.bind(*p_43_c0_ddr4_act_n);
        p_43_c0_ddr4_act_n->set_sv_netview_offsetfromdp(10217472);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_43_c0_ddr4_ck_c = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_43->c0_ddr4_ck_c.bind(*p_43_c0_ddr4_ck_c);
        p_43_c0_ddr4_ck_c->set_sv_netview_offsetfromdp(10217528);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_43_c0_ddr4_ck_t = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_43->c0_ddr4_ck_t.bind(*p_43_c0_ddr4_ck_t);
        p_43_c0_ddr4_ck_t->set_sv_netview_offsetfromdp(10217584);
        xsim_sc_channel<0, bool > *p_43_c0_ddr4_ui_clk = new xsim_sc_channel<0, bool >();
        sc_inst_43->c0_ddr4_ui_clk.bind(*p_43_c0_ddr4_ui_clk);
        p_43_c0_ddr4_ui_clk->set_sv_netview_offsetfromdp(10217640);
        xsim_sc_channel<0, bool > *p_43_c0_ddr4_ui_clk_sync_rst = new xsim_sc_channel<0, bool >();
        sc_inst_43->c0_ddr4_ui_clk_sync_rst.bind(*p_43_c0_ddr4_ui_clk_sync_rst);
        p_43_c0_ddr4_ui_clk_sync_rst->set_sv_netview_offsetfromdp(10217696);
        xsim_sc_channel<0, bool > *p_43_c0_ddr4_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_43->c0_ddr4_aresetn.bind(*p_43_c0_ddr4_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_43_c0_ddr4_aresetn);
        xsim_sc_channel<0, bool > *p_43_c0_ddr4_s_axi_ctrl_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_43->c0_ddr4_s_axi_ctrl_awvalid.bind(*p_43_c0_ddr4_s_axi_ctrl_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_43_c0_ddr4_s_axi_ctrl_awvalid);
        xsim_sc_channel<0, bool > *p_43_c0_ddr4_s_axi_ctrl_awready = new xsim_sc_channel<0, bool >();
        sc_inst_43->c0_ddr4_s_axi_ctrl_awready.bind(*p_43_c0_ddr4_s_axi_ctrl_awready);
        p_43_c0_ddr4_s_axi_ctrl_awready->set_sv_netview_offsetfromdp(10217864);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_43_c0_ddr4_s_axi_ctrl_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_43->c0_ddr4_s_axi_ctrl_awaddr.bind(*p_43_c0_ddr4_s_axi_ctrl_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_43_c0_ddr4_s_axi_ctrl_awaddr);
        xsim_sc_channel<0, bool > *p_43_c0_ddr4_s_axi_ctrl_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_43->c0_ddr4_s_axi_ctrl_wvalid.bind(*p_43_c0_ddr4_s_axi_ctrl_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_43_c0_ddr4_s_axi_ctrl_wvalid);
        xsim_sc_channel<0, bool > *p_43_c0_ddr4_s_axi_ctrl_wready = new xsim_sc_channel<0, bool >();
        sc_inst_43->c0_ddr4_s_axi_ctrl_wready.bind(*p_43_c0_ddr4_s_axi_ctrl_wready);
        p_43_c0_ddr4_s_axi_ctrl_wready->set_sv_netview_offsetfromdp(10218032);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_43_c0_ddr4_s_axi_ctrl_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_43->c0_ddr4_s_axi_ctrl_wdata.bind(*p_43_c0_ddr4_s_axi_ctrl_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_43_c0_ddr4_s_axi_ctrl_wdata);
        xsim_sc_channel<0, bool > *p_43_c0_ddr4_s_axi_ctrl_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_43->c0_ddr4_s_axi_ctrl_bvalid.bind(*p_43_c0_ddr4_s_axi_ctrl_bvalid);
        p_43_c0_ddr4_s_axi_ctrl_bvalid->set_sv_netview_offsetfromdp(10218144);
        xsim_sc_channel<0, bool > *p_43_c0_ddr4_s_axi_ctrl_bready = new xsim_sc_channel<0, bool >();
        sc_inst_43->c0_ddr4_s_axi_ctrl_bready.bind(*p_43_c0_ddr4_s_axi_ctrl_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_43_c0_ddr4_s_axi_ctrl_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_43_c0_ddr4_s_axi_ctrl_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_43->c0_ddr4_s_axi_ctrl_bresp.bind(*p_43_c0_ddr4_s_axi_ctrl_bresp);
        p_43_c0_ddr4_s_axi_ctrl_bresp->set_sv_netview_offsetfromdp(10218256);
        xsim_sc_channel<0, bool > *p_43_c0_ddr4_s_axi_ctrl_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_43->c0_ddr4_s_axi_ctrl_arvalid.bind(*p_43_c0_ddr4_s_axi_ctrl_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_43_c0_ddr4_s_axi_ctrl_arvalid);
        xsim_sc_channel<0, bool > *p_43_c0_ddr4_s_axi_ctrl_arready = new xsim_sc_channel<0, bool >();
        sc_inst_43->c0_ddr4_s_axi_ctrl_arready.bind(*p_43_c0_ddr4_s_axi_ctrl_arready);
        p_43_c0_ddr4_s_axi_ctrl_arready->set_sv_netview_offsetfromdp(10218368);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_43_c0_ddr4_s_axi_ctrl_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_43->c0_ddr4_s_axi_ctrl_araddr.bind(*p_43_c0_ddr4_s_axi_ctrl_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_43_c0_ddr4_s_axi_ctrl_araddr);
        xsim_sc_channel<0, bool > *p_43_c0_ddr4_s_axi_ctrl_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_43->c0_ddr4_s_axi_ctrl_rvalid.bind(*p_43_c0_ddr4_s_axi_ctrl_rvalid);
        p_43_c0_ddr4_s_axi_ctrl_rvalid->set_sv_netview_offsetfromdp(10218480);
        xsim_sc_channel<0, bool > *p_43_c0_ddr4_s_axi_ctrl_rready = new xsim_sc_channel<0, bool >();
        sc_inst_43->c0_ddr4_s_axi_ctrl_rready.bind(*p_43_c0_ddr4_s_axi_ctrl_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_43_c0_ddr4_s_axi_ctrl_rready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_43_c0_ddr4_s_axi_ctrl_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_43->c0_ddr4_s_axi_ctrl_rdata.bind(*p_43_c0_ddr4_s_axi_ctrl_rdata);
        p_43_c0_ddr4_s_axi_ctrl_rdata->set_sv_netview_offsetfromdp(10218592);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_43_c0_ddr4_s_axi_ctrl_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_43->c0_ddr4_s_axi_ctrl_rresp.bind(*p_43_c0_ddr4_s_axi_ctrl_rresp);
        p_43_c0_ddr4_s_axi_ctrl_rresp->set_sv_netview_offsetfromdp(10218648);
        xsim_sc_channel<0, bool > *p_43_c0_ddr4_interrupt = new xsim_sc_channel<0, bool >();
        sc_inst_43->c0_ddr4_interrupt.bind(*p_43_c0_ddr4_interrupt);
        p_43_c0_ddr4_interrupt->set_sv_netview_offsetfromdp(10218704);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_43_c0_ddr4_s_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_43->c0_ddr4_s_axi_awid.bind(*p_43_c0_ddr4_s_axi_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_43_c0_ddr4_s_axi_awid);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_43_c0_ddr4_s_axi_awaddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_43->c0_ddr4_s_axi_awaddr.bind(*p_43_c0_ddr4_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_43_c0_ddr4_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_43_c0_ddr4_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_43->c0_ddr4_s_axi_awlen.bind(*p_43_c0_ddr4_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_43_c0_ddr4_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_43_c0_ddr4_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_43->c0_ddr4_s_axi_awsize.bind(*p_43_c0_ddr4_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_43_c0_ddr4_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_43_c0_ddr4_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_43->c0_ddr4_s_axi_awburst.bind(*p_43_c0_ddr4_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_43_c0_ddr4_s_axi_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_43_c0_ddr4_s_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_43->c0_ddr4_s_axi_awlock.bind(*p_43_c0_ddr4_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_43_c0_ddr4_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_43_c0_ddr4_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_43->c0_ddr4_s_axi_awcache.bind(*p_43_c0_ddr4_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_43_c0_ddr4_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_43_c0_ddr4_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_43->c0_ddr4_s_axi_awprot.bind(*p_43_c0_ddr4_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_43_c0_ddr4_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_43_c0_ddr4_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_43->c0_ddr4_s_axi_awqos.bind(*p_43_c0_ddr4_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_43_c0_ddr4_s_axi_awqos);
        xsim_sc_channel<0, bool > *p_43_c0_ddr4_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_43->c0_ddr4_s_axi_awvalid.bind(*p_43_c0_ddr4_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_43_c0_ddr4_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_43_c0_ddr4_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_43->c0_ddr4_s_axi_awready.bind(*p_43_c0_ddr4_s_axi_awready);
        p_43_c0_ddr4_s_axi_awready->set_sv_netview_offsetfromdp(10219320);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_43_c0_ddr4_s_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_43->c0_ddr4_s_axi_wdata.bind(*p_43_c0_ddr4_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_43_c0_ddr4_s_axi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_43_c0_ddr4_s_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_43->c0_ddr4_s_axi_wstrb.bind(*p_43_c0_ddr4_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_43_c0_ddr4_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_43_c0_ddr4_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_43->c0_ddr4_s_axi_wlast.bind(*p_43_c0_ddr4_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_43_c0_ddr4_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_43_c0_ddr4_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_43->c0_ddr4_s_axi_wvalid.bind(*p_43_c0_ddr4_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_43_c0_ddr4_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_43_c0_ddr4_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_43->c0_ddr4_s_axi_wready.bind(*p_43_c0_ddr4_s_axi_wready);
        p_43_c0_ddr4_s_axi_wready->set_sv_netview_offsetfromdp(10219600);
        xsim_sc_channel<0, bool > *p_43_c0_ddr4_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_43->c0_ddr4_s_axi_bready.bind(*p_43_c0_ddr4_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_43_c0_ddr4_s_axi_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_43_c0_ddr4_s_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_43->c0_ddr4_s_axi_bid.bind(*p_43_c0_ddr4_s_axi_bid);
        p_43_c0_ddr4_s_axi_bid->set_sv_netview_offsetfromdp(10219712);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_43_c0_ddr4_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_43->c0_ddr4_s_axi_bresp.bind(*p_43_c0_ddr4_s_axi_bresp);
        p_43_c0_ddr4_s_axi_bresp->set_sv_netview_offsetfromdp(10219768);
        xsim_sc_channel<0, bool > *p_43_c0_ddr4_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_43->c0_ddr4_s_axi_bvalid.bind(*p_43_c0_ddr4_s_axi_bvalid);
        p_43_c0_ddr4_s_axi_bvalid->set_sv_netview_offsetfromdp(10219824);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_43_c0_ddr4_s_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_43->c0_ddr4_s_axi_arid.bind(*p_43_c0_ddr4_s_axi_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_43_c0_ddr4_s_axi_arid);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_43_c0_ddr4_s_axi_araddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_43->c0_ddr4_s_axi_araddr.bind(*p_43_c0_ddr4_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_43_c0_ddr4_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_43_c0_ddr4_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_43->c0_ddr4_s_axi_arlen.bind(*p_43_c0_ddr4_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_43_c0_ddr4_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_43_c0_ddr4_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_43->c0_ddr4_s_axi_arsize.bind(*p_43_c0_ddr4_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_43_c0_ddr4_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_43_c0_ddr4_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_43->c0_ddr4_s_axi_arburst.bind(*p_43_c0_ddr4_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_43_c0_ddr4_s_axi_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_43_c0_ddr4_s_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_43->c0_ddr4_s_axi_arlock.bind(*p_43_c0_ddr4_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_43_c0_ddr4_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_43_c0_ddr4_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_43->c0_ddr4_s_axi_arcache.bind(*p_43_c0_ddr4_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_43_c0_ddr4_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_43_c0_ddr4_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_43->c0_ddr4_s_axi_arprot.bind(*p_43_c0_ddr4_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_43_c0_ddr4_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_43_c0_ddr4_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_43->c0_ddr4_s_axi_arqos.bind(*p_43_c0_ddr4_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_43_c0_ddr4_s_axi_arqos);
        xsim_sc_channel<0, bool > *p_43_c0_ddr4_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_43->c0_ddr4_s_axi_arvalid.bind(*p_43_c0_ddr4_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_43_c0_ddr4_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_43_c0_ddr4_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_43->c0_ddr4_s_axi_arready.bind(*p_43_c0_ddr4_s_axi_arready);
        p_43_c0_ddr4_s_axi_arready->set_sv_netview_offsetfromdp(10220440);
        xsim_sc_channel<0, bool > *p_43_c0_ddr4_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_43->c0_ddr4_s_axi_rready.bind(*p_43_c0_ddr4_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_43_c0_ddr4_s_axi_rready);
        xsim_sc_channel<0, bool > *p_43_c0_ddr4_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_43->c0_ddr4_s_axi_rlast.bind(*p_43_c0_ddr4_s_axi_rlast);
        p_43_c0_ddr4_s_axi_rlast->set_sv_netview_offsetfromdp(10220552);
        xsim_sc_channel<0, bool > *p_43_c0_ddr4_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_43->c0_ddr4_s_axi_rvalid.bind(*p_43_c0_ddr4_s_axi_rvalid);
        p_43_c0_ddr4_s_axi_rvalid->set_sv_netview_offsetfromdp(10220608);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_43_c0_ddr4_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_43->c0_ddr4_s_axi_rresp.bind(*p_43_c0_ddr4_s_axi_rresp);
        p_43_c0_ddr4_s_axi_rresp->set_sv_netview_offsetfromdp(10220664);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_43_c0_ddr4_s_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_43->c0_ddr4_s_axi_rid.bind(*p_43_c0_ddr4_s_axi_rid);
        p_43_c0_ddr4_s_axi_rid->set_sv_netview_offsetfromdp(10220720);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_43_c0_ddr4_s_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_43->c0_ddr4_s_axi_rdata.bind(*p_43_c0_ddr4_s_axi_rdata);
        p_43_c0_ddr4_s_axi_rdata->set_sv_netview_offsetfromdp(10220776);
        xsim_sc_channel<0, bool > *p_43_addn_ui_clkout1 = new xsim_sc_channel<0, bool >();
        sc_inst_43->addn_ui_clkout1.bind(*p_43_addn_ui_clkout1);
        p_43_addn_ui_clkout1->set_sv_netview_offsetfromdp(10220832);
        xsim_sc_channel<0, bool > *p_43_sys_rst = new xsim_sc_channel<0, bool >();
        sc_inst_43->sys_rst.bind(*p_43_sys_rst);
        (*_glb_hdl_sc_channel_map).push_back(p_43_sys_rst);
        sc_inst_44 = new bd_d216_ddr4_mem01_ctrl_cc_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.memory.ddr4_mem01_ctrl_cc");
        sc_inst_44->xsim_set_dbg_index(2910);
        xsim_sc_channel<0, bool > *p_44_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_44->s_axi_aclk.bind(*p_44_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_44_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_44_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_44->s_axi_aresetn.bind(*p_44_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_44_s_axi_aresetn);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_44_s_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_44->s_axi_awaddr.bind(*p_44_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_44_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_44_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_44->s_axi_awprot.bind(*p_44_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_44_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_44_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_44->s_axi_awvalid.bind(*p_44_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_44_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_44_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_44->s_axi_awready.bind(*p_44_s_axi_awready);
        p_44_s_axi_awready->set_sv_netview_offsetfromdp(10221272);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_44_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_44->s_axi_wdata.bind(*p_44_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_44_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_44_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_44->s_axi_wstrb.bind(*p_44_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_44_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_44_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_44->s_axi_wvalid.bind(*p_44_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_44_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_44_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_44->s_axi_wready.bind(*p_44_s_axi_wready);
        p_44_s_axi_wready->set_sv_netview_offsetfromdp(10221496);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_44_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_44->s_axi_bresp.bind(*p_44_s_axi_bresp);
        p_44_s_axi_bresp->set_sv_netview_offsetfromdp(10221552);
        xsim_sc_channel<0, bool > *p_44_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_44->s_axi_bvalid.bind(*p_44_s_axi_bvalid);
        p_44_s_axi_bvalid->set_sv_netview_offsetfromdp(10221608);
        xsim_sc_channel<0, bool > *p_44_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_44->s_axi_bready.bind(*p_44_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_44_s_axi_bready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_44_s_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_44->s_axi_araddr.bind(*p_44_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_44_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_44_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_44->s_axi_arprot.bind(*p_44_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_44_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_44_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_44->s_axi_arvalid.bind(*p_44_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_44_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_44_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_44->s_axi_arready.bind(*p_44_s_axi_arready);
        p_44_s_axi_arready->set_sv_netview_offsetfromdp(10221888);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_44_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_44->s_axi_rdata.bind(*p_44_s_axi_rdata);
        p_44_s_axi_rdata->set_sv_netview_offsetfromdp(10221944);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_44_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_44->s_axi_rresp.bind(*p_44_s_axi_rresp);
        p_44_s_axi_rresp->set_sv_netview_offsetfromdp(10222000);
        xsim_sc_channel<0, bool > *p_44_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_44->s_axi_rvalid.bind(*p_44_s_axi_rvalid);
        p_44_s_axi_rvalid->set_sv_netview_offsetfromdp(10222056);
        xsim_sc_channel<0, bool > *p_44_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_44->s_axi_rready.bind(*p_44_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_44_s_axi_rready);
        xsim_sc_channel<0, bool > *p_44_m_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_44->m_axi_aclk.bind(*p_44_m_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_44_m_axi_aclk);
        xsim_sc_channel<0, bool > *p_44_m_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_44->m_axi_aresetn.bind(*p_44_m_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_44_m_axi_aresetn);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_44_m_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_44->m_axi_awaddr.bind(*p_44_m_axi_awaddr);
        p_44_m_axi_awaddr->set_sv_netview_offsetfromdp(10222280);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_44_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_44->m_axi_awprot.bind(*p_44_m_axi_awprot);
        p_44_m_axi_awprot->set_sv_netview_offsetfromdp(10222336);
        xsim_sc_channel<0, bool > *p_44_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_44->m_axi_awvalid.bind(*p_44_m_axi_awvalid);
        p_44_m_axi_awvalid->set_sv_netview_offsetfromdp(10222392);
        xsim_sc_channel<0, bool > *p_44_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_44->m_axi_awready.bind(*p_44_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_44_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_44_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_44->m_axi_wdata.bind(*p_44_m_axi_wdata);
        p_44_m_axi_wdata->set_sv_netview_offsetfromdp(10222504);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_44_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_44->m_axi_wstrb.bind(*p_44_m_axi_wstrb);
        p_44_m_axi_wstrb->set_sv_netview_offsetfromdp(10222560);
        xsim_sc_channel<0, bool > *p_44_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_44->m_axi_wvalid.bind(*p_44_m_axi_wvalid);
        p_44_m_axi_wvalid->set_sv_netview_offsetfromdp(10222616);
        xsim_sc_channel<0, bool > *p_44_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_44->m_axi_wready.bind(*p_44_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_44_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_44_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_44->m_axi_bresp.bind(*p_44_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_44_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_44_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_44->m_axi_bvalid.bind(*p_44_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_44_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_44_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_44->m_axi_bready.bind(*p_44_m_axi_bready);
        p_44_m_axi_bready->set_sv_netview_offsetfromdp(10222840);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_44_m_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_44->m_axi_araddr.bind(*p_44_m_axi_araddr);
        p_44_m_axi_araddr->set_sv_netview_offsetfromdp(10222896);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_44_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_44->m_axi_arprot.bind(*p_44_m_axi_arprot);
        p_44_m_axi_arprot->set_sv_netview_offsetfromdp(10222952);
        xsim_sc_channel<0, bool > *p_44_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_44->m_axi_arvalid.bind(*p_44_m_axi_arvalid);
        p_44_m_axi_arvalid->set_sv_netview_offsetfromdp(10223008);
        xsim_sc_channel<0, bool > *p_44_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_44->m_axi_arready.bind(*p_44_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_44_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_44_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_44->m_axi_rdata.bind(*p_44_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_44_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_44_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_44->m_axi_rresp.bind(*p_44_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_44_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_44_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_44->m_axi_rvalid.bind(*p_44_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_44_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_44_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_44->m_axi_rready.bind(*p_44_m_axi_rready);
        p_44_m_axi_rready->set_sv_netview_offsetfromdp(10223288);
        sc_inst_45 = new bd_d216_interconnect_ddrmem_ctrl_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.memory.interconnect_ddrmem_ctrl");
        sc_inst_45->xsim_set_dbg_index(2911);
        xsim_sc_channel<0, bool > *p_45_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_45->aclk.bind(*p_45_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_45_aclk);
        xsim_sc_channel<0, bool > *p_45_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_45->aresetn.bind(*p_45_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_45_aresetn);
        xsim_sc_channel<31, sc_dt::sc_bv<31> > *p_45_s_axi_awaddr = new xsim_sc_channel<31, sc_dt::sc_bv<31> >();
        sc_inst_45->s_axi_awaddr.bind(*p_45_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_45_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_45_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_45->s_axi_awprot.bind(*p_45_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_45_s_axi_awprot);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_s_axi_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->s_axi_awvalid.bind(*p_45_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_45_s_axi_awvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_s_axi_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->s_axi_awready.bind(*p_45_s_axi_awready);
        p_45_s_axi_awready->set_sv_netview_offsetfromdp(10223672);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_45_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_45->s_axi_wdata.bind(*p_45_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_45_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_45_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_45->s_axi_wstrb.bind(*p_45_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_45_s_axi_wstrb);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_s_axi_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->s_axi_wvalid.bind(*p_45_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_45_s_axi_wvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_s_axi_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->s_axi_wready.bind(*p_45_s_axi_wready);
        p_45_s_axi_wready->set_sv_netview_offsetfromdp(10223896);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_45_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_45->s_axi_bresp.bind(*p_45_s_axi_bresp);
        p_45_s_axi_bresp->set_sv_netview_offsetfromdp(10223952);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_s_axi_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->s_axi_bvalid.bind(*p_45_s_axi_bvalid);
        p_45_s_axi_bvalid->set_sv_netview_offsetfromdp(10224008);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_s_axi_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->s_axi_bready.bind(*p_45_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_45_s_axi_bready);
        xsim_sc_channel<31, sc_dt::sc_bv<31> > *p_45_s_axi_araddr = new xsim_sc_channel<31, sc_dt::sc_bv<31> >();
        sc_inst_45->s_axi_araddr.bind(*p_45_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_45_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_45_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_45->s_axi_arprot.bind(*p_45_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_45_s_axi_arprot);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_s_axi_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->s_axi_arvalid.bind(*p_45_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_45_s_axi_arvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_s_axi_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->s_axi_arready.bind(*p_45_s_axi_arready);
        p_45_s_axi_arready->set_sv_netview_offsetfromdp(10224288);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_45_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_45->s_axi_rdata.bind(*p_45_s_axi_rdata);
        p_45_s_axi_rdata->set_sv_netview_offsetfromdp(10224344);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_45_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_45->s_axi_rresp.bind(*p_45_s_axi_rresp);
        p_45_s_axi_rresp->set_sv_netview_offsetfromdp(10224400);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_s_axi_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->s_axi_rvalid.bind(*p_45_s_axi_rvalid);
        p_45_s_axi_rvalid->set_sv_netview_offsetfromdp(10224456);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_s_axi_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->s_axi_rready.bind(*p_45_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_45_s_axi_rready);
        xsim_sc_channel<62, sc_dt::sc_bv<62> > *p_45_m_axi_awaddr = new xsim_sc_channel<62, sc_dt::sc_bv<62> >();
        sc_inst_45->m_axi_awaddr.bind(*p_45_m_axi_awaddr);
        p_45_m_axi_awaddr->set_sv_netview_offsetfromdp(10224568);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_45_m_axi_awprot = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_45->m_axi_awprot.bind(*p_45_m_axi_awprot);
        p_45_m_axi_awprot->set_sv_netview_offsetfromdp(10224624);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_45_m_axi_awvalid = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_45->m_axi_awvalid.bind(*p_45_m_axi_awvalid);
        p_45_m_axi_awvalid->set_sv_netview_offsetfromdp(10224680);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_45_m_axi_awready = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_45->m_axi_awready.bind(*p_45_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_45_m_axi_awready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_45_m_axi_wdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_45->m_axi_wdata.bind(*p_45_m_axi_wdata);
        p_45_m_axi_wdata->set_sv_netview_offsetfromdp(10224792);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_45_m_axi_wstrb = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_45->m_axi_wstrb.bind(*p_45_m_axi_wstrb);
        p_45_m_axi_wstrb->set_sv_netview_offsetfromdp(10224848);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_45_m_axi_wvalid = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_45->m_axi_wvalid.bind(*p_45_m_axi_wvalid);
        p_45_m_axi_wvalid->set_sv_netview_offsetfromdp(10224904);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_45_m_axi_wready = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_45->m_axi_wready.bind(*p_45_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_45_m_axi_wready);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_45_m_axi_bresp = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_45->m_axi_bresp.bind(*p_45_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_45_m_axi_bresp);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_45_m_axi_bvalid = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_45->m_axi_bvalid.bind(*p_45_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_45_m_axi_bvalid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_45_m_axi_bready = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_45->m_axi_bready.bind(*p_45_m_axi_bready);
        p_45_m_axi_bready->set_sv_netview_offsetfromdp(10225128);
        xsim_sc_channel<62, sc_dt::sc_bv<62> > *p_45_m_axi_araddr = new xsim_sc_channel<62, sc_dt::sc_bv<62> >();
        sc_inst_45->m_axi_araddr.bind(*p_45_m_axi_araddr);
        p_45_m_axi_araddr->set_sv_netview_offsetfromdp(10225184);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_45_m_axi_arprot = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_45->m_axi_arprot.bind(*p_45_m_axi_arprot);
        p_45_m_axi_arprot->set_sv_netview_offsetfromdp(10225240);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_45_m_axi_arvalid = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_45->m_axi_arvalid.bind(*p_45_m_axi_arvalid);
        p_45_m_axi_arvalid->set_sv_netview_offsetfromdp(10225296);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_45_m_axi_arready = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_45->m_axi_arready.bind(*p_45_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_45_m_axi_arready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_45_m_axi_rdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_45->m_axi_rdata.bind(*p_45_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_45_m_axi_rdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_45_m_axi_rresp = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_45->m_axi_rresp.bind(*p_45_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_45_m_axi_rresp);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_45_m_axi_rvalid = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_45->m_axi_rvalid.bind(*p_45_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_45_m_axi_rvalid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_45_m_axi_rready = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_45->m_axi_rready.bind(*p_45_m_axi_rready);
        p_45_m_axi_rready->set_sv_netview_offsetfromdp(10225576);
        sc_inst_46 = new bd_d216_plram_mem00_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.memory.plram_mem00");
        sc_inst_46->xsim_set_dbg_index(2912);
        xsim_sc_channel<0, bool > *p_46_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_46->s_axi_aclk.bind(*p_46_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_46_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_46->s_axi_aresetn.bind(*p_46_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_aresetn);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_46_s_axi_awaddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_46->s_axi_awaddr.bind(*p_46_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_46_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_46->s_axi_awlen.bind(*p_46_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_46_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_46->s_axi_awsize.bind(*p_46_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_46_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_46->s_axi_awburst.bind(*p_46_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_awburst);
        xsim_sc_channel<0, bool > *p_46_s_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_46->s_axi_awlock.bind(*p_46_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_46_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_46->s_axi_awcache.bind(*p_46_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_46_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_46->s_axi_awprot.bind(*p_46_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_46_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_46->s_axi_awvalid.bind(*p_46_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_46_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_46->s_axi_awready.bind(*p_46_s_axi_awready);
        p_46_s_axi_awready->set_sv_netview_offsetfromdp(10226240);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_46_s_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_46->s_axi_wdata.bind(*p_46_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_46_s_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_46->s_axi_wstrb.bind(*p_46_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_46_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_46->s_axi_wlast.bind(*p_46_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_46_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_46->s_axi_wvalid.bind(*p_46_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_46_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_46->s_axi_wready.bind(*p_46_s_axi_wready);
        p_46_s_axi_wready->set_sv_netview_offsetfromdp(10226520);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_46_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_46->s_axi_bresp.bind(*p_46_s_axi_bresp);
        p_46_s_axi_bresp->set_sv_netview_offsetfromdp(10226576);
        xsim_sc_channel<0, bool > *p_46_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_46->s_axi_bvalid.bind(*p_46_s_axi_bvalid);
        p_46_s_axi_bvalid->set_sv_netview_offsetfromdp(10226632);
        xsim_sc_channel<0, bool > *p_46_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_46->s_axi_bready.bind(*p_46_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_bready);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_46_s_axi_araddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_46->s_axi_araddr.bind(*p_46_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_46_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_46->s_axi_arlen.bind(*p_46_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_46_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_46->s_axi_arsize.bind(*p_46_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_46_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_46->s_axi_arburst.bind(*p_46_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_arburst);
        xsim_sc_channel<0, bool > *p_46_s_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_46->s_axi_arlock.bind(*p_46_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_46_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_46->s_axi_arcache.bind(*p_46_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_46_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_46->s_axi_arprot.bind(*p_46_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_46_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_46->s_axi_arvalid.bind(*p_46_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_46_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_46->s_axi_arready.bind(*p_46_s_axi_arready);
        p_46_s_axi_arready->set_sv_netview_offsetfromdp(10227192);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_46_s_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_46->s_axi_rdata.bind(*p_46_s_axi_rdata);
        p_46_s_axi_rdata->set_sv_netview_offsetfromdp(10227248);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_46_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_46->s_axi_rresp.bind(*p_46_s_axi_rresp);
        p_46_s_axi_rresp->set_sv_netview_offsetfromdp(10227304);
        xsim_sc_channel<0, bool > *p_46_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_46->s_axi_rlast.bind(*p_46_s_axi_rlast);
        p_46_s_axi_rlast->set_sv_netview_offsetfromdp(10227360);
        xsim_sc_channel<0, bool > *p_46_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_46->s_axi_rvalid.bind(*p_46_s_axi_rvalid);
        p_46_s_axi_rvalid->set_sv_netview_offsetfromdp(10227416);
        xsim_sc_channel<0, bool > *p_46_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_46->s_axi_rready.bind(*p_46_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_rready);
        xsim_sc_channel<0, bool > *p_46_bram_rst_a = new xsim_sc_channel<0, bool >();
        sc_inst_46->bram_rst_a.bind(*p_46_bram_rst_a);
        p_46_bram_rst_a->set_sv_netview_offsetfromdp(10227528);
        xsim_sc_channel<0, bool > *p_46_bram_clk_a = new xsim_sc_channel<0, bool >();
        sc_inst_46->bram_clk_a.bind(*p_46_bram_clk_a);
        p_46_bram_clk_a->set_sv_netview_offsetfromdp(10227584);
        xsim_sc_channel<0, bool > *p_46_bram_en_a = new xsim_sc_channel<0, bool >();
        sc_inst_46->bram_en_a.bind(*p_46_bram_en_a);
        p_46_bram_en_a->set_sv_netview_offsetfromdp(10227640);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_46_bram_we_a = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_46->bram_we_a.bind(*p_46_bram_we_a);
        p_46_bram_we_a->set_sv_netview_offsetfromdp(10227696);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_46_bram_addr_a = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_46->bram_addr_a.bind(*p_46_bram_addr_a);
        p_46_bram_addr_a->set_sv_netview_offsetfromdp(10227752);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_46_bram_wrdata_a = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_46->bram_wrdata_a.bind(*p_46_bram_wrdata_a);
        p_46_bram_wrdata_a->set_sv_netview_offsetfromdp(10227808);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_46_bram_rddata_a = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_46->bram_rddata_a.bind(*p_46_bram_rddata_a);
        (*_glb_hdl_sc_channel_map).push_back(p_46_bram_rddata_a);
        xsim_sc_channel<0, bool > *p_46_bram_rst_b = new xsim_sc_channel<0, bool >();
        sc_inst_46->bram_rst_b.bind(*p_46_bram_rst_b);
        p_46_bram_rst_b->set_sv_netview_offsetfromdp(10227920);
        xsim_sc_channel<0, bool > *p_46_bram_clk_b = new xsim_sc_channel<0, bool >();
        sc_inst_46->bram_clk_b.bind(*p_46_bram_clk_b);
        p_46_bram_clk_b->set_sv_netview_offsetfromdp(10227976);
        xsim_sc_channel<0, bool > *p_46_bram_en_b = new xsim_sc_channel<0, bool >();
        sc_inst_46->bram_en_b.bind(*p_46_bram_en_b);
        p_46_bram_en_b->set_sv_netview_offsetfromdp(10228032);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_46_bram_we_b = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_46->bram_we_b.bind(*p_46_bram_we_b);
        p_46_bram_we_b->set_sv_netview_offsetfromdp(10228088);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_46_bram_addr_b = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_46->bram_addr_b.bind(*p_46_bram_addr_b);
        p_46_bram_addr_b->set_sv_netview_offsetfromdp(10228144);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_46_bram_wrdata_b = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_46->bram_wrdata_b.bind(*p_46_bram_wrdata_b);
        p_46_bram_wrdata_b->set_sv_netview_offsetfromdp(10228200);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_46_bram_rddata_b = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_46->bram_rddata_b.bind(*p_46_bram_rddata_b);
        (*_glb_hdl_sc_channel_map).push_back(p_46_bram_rddata_b);
        sc_inst_47 = new bd_d216_plram_mem01_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.memory.plram_mem01");
        sc_inst_47->xsim_set_dbg_index(2914);
        xsim_sc_channel<0, bool > *p_47_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_47->s_axi_aclk.bind(*p_47_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_47_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_47_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_47->s_axi_aresetn.bind(*p_47_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_47_s_axi_aresetn);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_47_s_axi_awaddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_47->s_axi_awaddr.bind(*p_47_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_47_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_47_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_47->s_axi_awlen.bind(*p_47_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_47_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_47_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_47->s_axi_awsize.bind(*p_47_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_47_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_47_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_47->s_axi_awburst.bind(*p_47_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_47_s_axi_awburst);
        xsim_sc_channel<0, bool > *p_47_s_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_47->s_axi_awlock.bind(*p_47_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_47_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_47_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_47->s_axi_awcache.bind(*p_47_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_47_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_47_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_47->s_axi_awprot.bind(*p_47_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_47_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_47_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_47->s_axi_awvalid.bind(*p_47_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_47_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_47_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_47->s_axi_awready.bind(*p_47_s_axi_awready);
        p_47_s_axi_awready->set_sv_netview_offsetfromdp(10290040);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_47_s_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_47->s_axi_wdata.bind(*p_47_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_47_s_axi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_47_s_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_47->s_axi_wstrb.bind(*p_47_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_47_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_47_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_47->s_axi_wlast.bind(*p_47_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_47_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_47_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_47->s_axi_wvalid.bind(*p_47_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_47_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_47_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_47->s_axi_wready.bind(*p_47_s_axi_wready);
        p_47_s_axi_wready->set_sv_netview_offsetfromdp(10290320);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_47_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_47->s_axi_bresp.bind(*p_47_s_axi_bresp);
        p_47_s_axi_bresp->set_sv_netview_offsetfromdp(10290376);
        xsim_sc_channel<0, bool > *p_47_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_47->s_axi_bvalid.bind(*p_47_s_axi_bvalid);
        p_47_s_axi_bvalid->set_sv_netview_offsetfromdp(10290432);
        xsim_sc_channel<0, bool > *p_47_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_47->s_axi_bready.bind(*p_47_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_47_s_axi_bready);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_47_s_axi_araddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_47->s_axi_araddr.bind(*p_47_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_47_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_47_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_47->s_axi_arlen.bind(*p_47_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_47_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_47_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_47->s_axi_arsize.bind(*p_47_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_47_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_47_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_47->s_axi_arburst.bind(*p_47_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_47_s_axi_arburst);
        xsim_sc_channel<0, bool > *p_47_s_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_47->s_axi_arlock.bind(*p_47_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_47_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_47_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_47->s_axi_arcache.bind(*p_47_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_47_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_47_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_47->s_axi_arprot.bind(*p_47_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_47_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_47_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_47->s_axi_arvalid.bind(*p_47_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_47_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_47_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_47->s_axi_arready.bind(*p_47_s_axi_arready);
        p_47_s_axi_arready->set_sv_netview_offsetfromdp(10290992);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_47_s_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_47->s_axi_rdata.bind(*p_47_s_axi_rdata);
        p_47_s_axi_rdata->set_sv_netview_offsetfromdp(10291048);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_47_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_47->s_axi_rresp.bind(*p_47_s_axi_rresp);
        p_47_s_axi_rresp->set_sv_netview_offsetfromdp(10291104);
        xsim_sc_channel<0, bool > *p_47_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_47->s_axi_rlast.bind(*p_47_s_axi_rlast);
        p_47_s_axi_rlast->set_sv_netview_offsetfromdp(10291160);
        xsim_sc_channel<0, bool > *p_47_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_47->s_axi_rvalid.bind(*p_47_s_axi_rvalid);
        p_47_s_axi_rvalid->set_sv_netview_offsetfromdp(10291216);
        xsim_sc_channel<0, bool > *p_47_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_47->s_axi_rready.bind(*p_47_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_47_s_axi_rready);
        xsim_sc_channel<0, bool > *p_47_bram_rst_a = new xsim_sc_channel<0, bool >();
        sc_inst_47->bram_rst_a.bind(*p_47_bram_rst_a);
        p_47_bram_rst_a->set_sv_netview_offsetfromdp(10291328);
        xsim_sc_channel<0, bool > *p_47_bram_clk_a = new xsim_sc_channel<0, bool >();
        sc_inst_47->bram_clk_a.bind(*p_47_bram_clk_a);
        p_47_bram_clk_a->set_sv_netview_offsetfromdp(10291384);
        xsim_sc_channel<0, bool > *p_47_bram_en_a = new xsim_sc_channel<0, bool >();
        sc_inst_47->bram_en_a.bind(*p_47_bram_en_a);
        p_47_bram_en_a->set_sv_netview_offsetfromdp(10291440);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_47_bram_we_a = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_47->bram_we_a.bind(*p_47_bram_we_a);
        p_47_bram_we_a->set_sv_netview_offsetfromdp(10291496);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_47_bram_addr_a = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_47->bram_addr_a.bind(*p_47_bram_addr_a);
        p_47_bram_addr_a->set_sv_netview_offsetfromdp(10291552);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_47_bram_wrdata_a = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_47->bram_wrdata_a.bind(*p_47_bram_wrdata_a);
        p_47_bram_wrdata_a->set_sv_netview_offsetfromdp(10291608);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_47_bram_rddata_a = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_47->bram_rddata_a.bind(*p_47_bram_rddata_a);
        (*_glb_hdl_sc_channel_map).push_back(p_47_bram_rddata_a);
        xsim_sc_channel<0, bool > *p_47_bram_rst_b = new xsim_sc_channel<0, bool >();
        sc_inst_47->bram_rst_b.bind(*p_47_bram_rst_b);
        p_47_bram_rst_b->set_sv_netview_offsetfromdp(10291720);
        xsim_sc_channel<0, bool > *p_47_bram_clk_b = new xsim_sc_channel<0, bool >();
        sc_inst_47->bram_clk_b.bind(*p_47_bram_clk_b);
        p_47_bram_clk_b->set_sv_netview_offsetfromdp(10291776);
        xsim_sc_channel<0, bool > *p_47_bram_en_b = new xsim_sc_channel<0, bool >();
        sc_inst_47->bram_en_b.bind(*p_47_bram_en_b);
        p_47_bram_en_b->set_sv_netview_offsetfromdp(10291832);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_47_bram_we_b = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_47->bram_we_b.bind(*p_47_bram_we_b);
        p_47_bram_we_b->set_sv_netview_offsetfromdp(10291888);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_47_bram_addr_b = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_47->bram_addr_b.bind(*p_47_bram_addr_b);
        p_47_bram_addr_b->set_sv_netview_offsetfromdp(10291944);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_47_bram_wrdata_b = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_47->bram_wrdata_b.bind(*p_47_bram_wrdata_b);
        p_47_bram_wrdata_b->set_sv_netview_offsetfromdp(10292000);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_47_bram_rddata_b = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_47->bram_rddata_b.bind(*p_47_bram_rddata_b);
        (*_glb_hdl_sc_channel_map).push_back(p_47_bram_rddata_b);
        sc_inst_48 = new bd_d216_plram_mem02_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.memory.plram_mem02");
        sc_inst_48->xsim_set_dbg_index(2916);
        xsim_sc_channel<0, bool > *p_48_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_48->s_axi_aclk.bind(*p_48_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_48_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_48->s_axi_aresetn.bind(*p_48_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_aresetn);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_48_s_axi_awaddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_48->s_axi_awaddr.bind(*p_48_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_48_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_48->s_axi_awlen.bind(*p_48_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_48_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_48->s_axi_awsize.bind(*p_48_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_48_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_48->s_axi_awburst.bind(*p_48_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_awburst);
        xsim_sc_channel<0, bool > *p_48_s_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_48->s_axi_awlock.bind(*p_48_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_48_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_48->s_axi_awcache.bind(*p_48_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_48_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_48->s_axi_awprot.bind(*p_48_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_48_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_48->s_axi_awvalid.bind(*p_48_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_48_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_48->s_axi_awready.bind(*p_48_s_axi_awready);
        p_48_s_axi_awready->set_sv_netview_offsetfromdp(10353840);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_48_s_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_48->s_axi_wdata.bind(*p_48_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_48_s_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_48->s_axi_wstrb.bind(*p_48_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_48_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_48->s_axi_wlast.bind(*p_48_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_48_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_48->s_axi_wvalid.bind(*p_48_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_48_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_48->s_axi_wready.bind(*p_48_s_axi_wready);
        p_48_s_axi_wready->set_sv_netview_offsetfromdp(10354120);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_48_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_48->s_axi_bresp.bind(*p_48_s_axi_bresp);
        p_48_s_axi_bresp->set_sv_netview_offsetfromdp(10354176);
        xsim_sc_channel<0, bool > *p_48_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_48->s_axi_bvalid.bind(*p_48_s_axi_bvalid);
        p_48_s_axi_bvalid->set_sv_netview_offsetfromdp(10354232);
        xsim_sc_channel<0, bool > *p_48_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_48->s_axi_bready.bind(*p_48_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_bready);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_48_s_axi_araddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_48->s_axi_araddr.bind(*p_48_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_48_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_48->s_axi_arlen.bind(*p_48_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_48_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_48->s_axi_arsize.bind(*p_48_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_48_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_48->s_axi_arburst.bind(*p_48_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_arburst);
        xsim_sc_channel<0, bool > *p_48_s_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_48->s_axi_arlock.bind(*p_48_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_48_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_48->s_axi_arcache.bind(*p_48_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_48_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_48->s_axi_arprot.bind(*p_48_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_48_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_48->s_axi_arvalid.bind(*p_48_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_48_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_48->s_axi_arready.bind(*p_48_s_axi_arready);
        p_48_s_axi_arready->set_sv_netview_offsetfromdp(10354792);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_48_s_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_48->s_axi_rdata.bind(*p_48_s_axi_rdata);
        p_48_s_axi_rdata->set_sv_netview_offsetfromdp(10354848);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_48_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_48->s_axi_rresp.bind(*p_48_s_axi_rresp);
        p_48_s_axi_rresp->set_sv_netview_offsetfromdp(10354904);
        xsim_sc_channel<0, bool > *p_48_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_48->s_axi_rlast.bind(*p_48_s_axi_rlast);
        p_48_s_axi_rlast->set_sv_netview_offsetfromdp(10354960);
        xsim_sc_channel<0, bool > *p_48_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_48->s_axi_rvalid.bind(*p_48_s_axi_rvalid);
        p_48_s_axi_rvalid->set_sv_netview_offsetfromdp(10355016);
        xsim_sc_channel<0, bool > *p_48_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_48->s_axi_rready.bind(*p_48_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_rready);
        xsim_sc_channel<0, bool > *p_48_bram_rst_a = new xsim_sc_channel<0, bool >();
        sc_inst_48->bram_rst_a.bind(*p_48_bram_rst_a);
        p_48_bram_rst_a->set_sv_netview_offsetfromdp(10355128);
        xsim_sc_channel<0, bool > *p_48_bram_clk_a = new xsim_sc_channel<0, bool >();
        sc_inst_48->bram_clk_a.bind(*p_48_bram_clk_a);
        p_48_bram_clk_a->set_sv_netview_offsetfromdp(10355184);
        xsim_sc_channel<0, bool > *p_48_bram_en_a = new xsim_sc_channel<0, bool >();
        sc_inst_48->bram_en_a.bind(*p_48_bram_en_a);
        p_48_bram_en_a->set_sv_netview_offsetfromdp(10355240);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_48_bram_we_a = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_48->bram_we_a.bind(*p_48_bram_we_a);
        p_48_bram_we_a->set_sv_netview_offsetfromdp(10355296);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_48_bram_addr_a = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_48->bram_addr_a.bind(*p_48_bram_addr_a);
        p_48_bram_addr_a->set_sv_netview_offsetfromdp(10355352);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_48_bram_wrdata_a = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_48->bram_wrdata_a.bind(*p_48_bram_wrdata_a);
        p_48_bram_wrdata_a->set_sv_netview_offsetfromdp(10355408);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_48_bram_rddata_a = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_48->bram_rddata_a.bind(*p_48_bram_rddata_a);
        (*_glb_hdl_sc_channel_map).push_back(p_48_bram_rddata_a);
        xsim_sc_channel<0, bool > *p_48_bram_rst_b = new xsim_sc_channel<0, bool >();
        sc_inst_48->bram_rst_b.bind(*p_48_bram_rst_b);
        p_48_bram_rst_b->set_sv_netview_offsetfromdp(10355520);
        xsim_sc_channel<0, bool > *p_48_bram_clk_b = new xsim_sc_channel<0, bool >();
        sc_inst_48->bram_clk_b.bind(*p_48_bram_clk_b);
        p_48_bram_clk_b->set_sv_netview_offsetfromdp(10355576);
        xsim_sc_channel<0, bool > *p_48_bram_en_b = new xsim_sc_channel<0, bool >();
        sc_inst_48->bram_en_b.bind(*p_48_bram_en_b);
        p_48_bram_en_b->set_sv_netview_offsetfromdp(10355632);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_48_bram_we_b = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_48->bram_we_b.bind(*p_48_bram_we_b);
        p_48_bram_we_b->set_sv_netview_offsetfromdp(10355688);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_48_bram_addr_b = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_48->bram_addr_b.bind(*p_48_bram_addr_b);
        p_48_bram_addr_b->set_sv_netview_offsetfromdp(10355744);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_48_bram_wrdata_b = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_48->bram_wrdata_b.bind(*p_48_bram_wrdata_b);
        p_48_bram_wrdata_b->set_sv_netview_offsetfromdp(10355800);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_48_bram_rddata_b = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_48->bram_rddata_b.bind(*p_48_bram_rddata_b);
        (*_glb_hdl_sc_channel_map).push_back(p_48_bram_rddata_b);
        sc_inst_49 = new bd_d216_plram_mem03_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.memory.plram_mem03");
        sc_inst_49->xsim_set_dbg_index(2918);
        xsim_sc_channel<0, bool > *p_49_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_49->s_axi_aclk.bind(*p_49_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_49_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_49_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_49->s_axi_aresetn.bind(*p_49_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_49_s_axi_aresetn);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_49_s_axi_awaddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_49->s_axi_awaddr.bind(*p_49_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_49_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_49_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_49->s_axi_awlen.bind(*p_49_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_49_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_49_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_49->s_axi_awsize.bind(*p_49_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_49_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_49_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_49->s_axi_awburst.bind(*p_49_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_49_s_axi_awburst);
        xsim_sc_channel<0, bool > *p_49_s_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_49->s_axi_awlock.bind(*p_49_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_49_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_49_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_49->s_axi_awcache.bind(*p_49_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_49_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_49_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_49->s_axi_awprot.bind(*p_49_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_49_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_49_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_49->s_axi_awvalid.bind(*p_49_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_49_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_49_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_49->s_axi_awready.bind(*p_49_s_axi_awready);
        p_49_s_axi_awready->set_sv_netview_offsetfromdp(10417640);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_49_s_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_49->s_axi_wdata.bind(*p_49_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_49_s_axi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_49_s_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_49->s_axi_wstrb.bind(*p_49_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_49_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_49_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_49->s_axi_wlast.bind(*p_49_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_49_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_49_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_49->s_axi_wvalid.bind(*p_49_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_49_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_49_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_49->s_axi_wready.bind(*p_49_s_axi_wready);
        p_49_s_axi_wready->set_sv_netview_offsetfromdp(10417920);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_49_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_49->s_axi_bresp.bind(*p_49_s_axi_bresp);
        p_49_s_axi_bresp->set_sv_netview_offsetfromdp(10417976);
        xsim_sc_channel<0, bool > *p_49_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_49->s_axi_bvalid.bind(*p_49_s_axi_bvalid);
        p_49_s_axi_bvalid->set_sv_netview_offsetfromdp(10418032);
        xsim_sc_channel<0, bool > *p_49_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_49->s_axi_bready.bind(*p_49_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_49_s_axi_bready);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_49_s_axi_araddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_49->s_axi_araddr.bind(*p_49_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_49_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_49_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_49->s_axi_arlen.bind(*p_49_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_49_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_49_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_49->s_axi_arsize.bind(*p_49_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_49_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_49_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_49->s_axi_arburst.bind(*p_49_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_49_s_axi_arburst);
        xsim_sc_channel<0, bool > *p_49_s_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_49->s_axi_arlock.bind(*p_49_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_49_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_49_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_49->s_axi_arcache.bind(*p_49_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_49_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_49_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_49->s_axi_arprot.bind(*p_49_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_49_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_49_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_49->s_axi_arvalid.bind(*p_49_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_49_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_49_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_49->s_axi_arready.bind(*p_49_s_axi_arready);
        p_49_s_axi_arready->set_sv_netview_offsetfromdp(10418592);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_49_s_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_49->s_axi_rdata.bind(*p_49_s_axi_rdata);
        p_49_s_axi_rdata->set_sv_netview_offsetfromdp(10418648);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_49_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_49->s_axi_rresp.bind(*p_49_s_axi_rresp);
        p_49_s_axi_rresp->set_sv_netview_offsetfromdp(10418704);
        xsim_sc_channel<0, bool > *p_49_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_49->s_axi_rlast.bind(*p_49_s_axi_rlast);
        p_49_s_axi_rlast->set_sv_netview_offsetfromdp(10418760);
        xsim_sc_channel<0, bool > *p_49_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_49->s_axi_rvalid.bind(*p_49_s_axi_rvalid);
        p_49_s_axi_rvalid->set_sv_netview_offsetfromdp(10418816);
        xsim_sc_channel<0, bool > *p_49_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_49->s_axi_rready.bind(*p_49_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_49_s_axi_rready);
        xsim_sc_channel<0, bool > *p_49_bram_rst_a = new xsim_sc_channel<0, bool >();
        sc_inst_49->bram_rst_a.bind(*p_49_bram_rst_a);
        p_49_bram_rst_a->set_sv_netview_offsetfromdp(10418928);
        xsim_sc_channel<0, bool > *p_49_bram_clk_a = new xsim_sc_channel<0, bool >();
        sc_inst_49->bram_clk_a.bind(*p_49_bram_clk_a);
        p_49_bram_clk_a->set_sv_netview_offsetfromdp(10418984);
        xsim_sc_channel<0, bool > *p_49_bram_en_a = new xsim_sc_channel<0, bool >();
        sc_inst_49->bram_en_a.bind(*p_49_bram_en_a);
        p_49_bram_en_a->set_sv_netview_offsetfromdp(10419040);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_49_bram_we_a = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_49->bram_we_a.bind(*p_49_bram_we_a);
        p_49_bram_we_a->set_sv_netview_offsetfromdp(10419096);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_49_bram_addr_a = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_49->bram_addr_a.bind(*p_49_bram_addr_a);
        p_49_bram_addr_a->set_sv_netview_offsetfromdp(10419152);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_49_bram_wrdata_a = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_49->bram_wrdata_a.bind(*p_49_bram_wrdata_a);
        p_49_bram_wrdata_a->set_sv_netview_offsetfromdp(10419208);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_49_bram_rddata_a = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_49->bram_rddata_a.bind(*p_49_bram_rddata_a);
        (*_glb_hdl_sc_channel_map).push_back(p_49_bram_rddata_a);
        xsim_sc_channel<0, bool > *p_49_bram_rst_b = new xsim_sc_channel<0, bool >();
        sc_inst_49->bram_rst_b.bind(*p_49_bram_rst_b);
        p_49_bram_rst_b->set_sv_netview_offsetfromdp(10419320);
        xsim_sc_channel<0, bool > *p_49_bram_clk_b = new xsim_sc_channel<0, bool >();
        sc_inst_49->bram_clk_b.bind(*p_49_bram_clk_b);
        p_49_bram_clk_b->set_sv_netview_offsetfromdp(10419376);
        xsim_sc_channel<0, bool > *p_49_bram_en_b = new xsim_sc_channel<0, bool >();
        sc_inst_49->bram_en_b.bind(*p_49_bram_en_b);
        p_49_bram_en_b->set_sv_netview_offsetfromdp(10419432);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_49_bram_we_b = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_49->bram_we_b.bind(*p_49_bram_we_b);
        p_49_bram_we_b->set_sv_netview_offsetfromdp(10419488);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_49_bram_addr_b = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_49->bram_addr_b.bind(*p_49_bram_addr_b);
        p_49_bram_addr_b->set_sv_netview_offsetfromdp(10419544);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_49_bram_wrdata_b = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_49->bram_wrdata_b.bind(*p_49_bram_wrdata_b);
        p_49_bram_wrdata_b->set_sv_netview_offsetfromdp(10419600);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_49_bram_rddata_b = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_49->bram_rddata_b.bind(*p_49_bram_rddata_b);
        (*_glb_hdl_sc_channel_map).push_back(p_49_bram_rddata_b);
        sc_inst_50 = new bd_d216_plram_mem04_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.memory.plram_mem04");
        sc_inst_50->xsim_set_dbg_index(2920);
        xsim_sc_channel<0, bool > *p_50_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_50->s_axi_aclk.bind(*p_50_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_50_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_50->s_axi_aresetn.bind(*p_50_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_aresetn);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_50_s_axi_awaddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_50->s_axi_awaddr.bind(*p_50_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_50_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_50->s_axi_awlen.bind(*p_50_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_50_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_50->s_axi_awsize.bind(*p_50_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_50_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_50->s_axi_awburst.bind(*p_50_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_awburst);
        xsim_sc_channel<0, bool > *p_50_s_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_50->s_axi_awlock.bind(*p_50_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_50_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_50->s_axi_awcache.bind(*p_50_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_50_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_50->s_axi_awprot.bind(*p_50_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_50_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_50->s_axi_awvalid.bind(*p_50_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_50_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_50->s_axi_awready.bind(*p_50_s_axi_awready);
        p_50_s_axi_awready->set_sv_netview_offsetfromdp(10481440);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_50_s_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_50->s_axi_wdata.bind(*p_50_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_50_s_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_50->s_axi_wstrb.bind(*p_50_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_50_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_50->s_axi_wlast.bind(*p_50_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_50_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_50->s_axi_wvalid.bind(*p_50_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_50_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_50->s_axi_wready.bind(*p_50_s_axi_wready);
        p_50_s_axi_wready->set_sv_netview_offsetfromdp(10481720);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_50_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_50->s_axi_bresp.bind(*p_50_s_axi_bresp);
        p_50_s_axi_bresp->set_sv_netview_offsetfromdp(10481776);
        xsim_sc_channel<0, bool > *p_50_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_50->s_axi_bvalid.bind(*p_50_s_axi_bvalid);
        p_50_s_axi_bvalid->set_sv_netview_offsetfromdp(10481832);
        xsim_sc_channel<0, bool > *p_50_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_50->s_axi_bready.bind(*p_50_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_bready);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_50_s_axi_araddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_50->s_axi_araddr.bind(*p_50_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_50_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_50->s_axi_arlen.bind(*p_50_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_50_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_50->s_axi_arsize.bind(*p_50_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_50_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_50->s_axi_arburst.bind(*p_50_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_arburst);
        xsim_sc_channel<0, bool > *p_50_s_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_50->s_axi_arlock.bind(*p_50_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_50_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_50->s_axi_arcache.bind(*p_50_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_50_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_50->s_axi_arprot.bind(*p_50_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_50_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_50->s_axi_arvalid.bind(*p_50_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_50_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_50->s_axi_arready.bind(*p_50_s_axi_arready);
        p_50_s_axi_arready->set_sv_netview_offsetfromdp(10482392);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_50_s_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_50->s_axi_rdata.bind(*p_50_s_axi_rdata);
        p_50_s_axi_rdata->set_sv_netview_offsetfromdp(10482448);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_50_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_50->s_axi_rresp.bind(*p_50_s_axi_rresp);
        p_50_s_axi_rresp->set_sv_netview_offsetfromdp(10482504);
        xsim_sc_channel<0, bool > *p_50_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_50->s_axi_rlast.bind(*p_50_s_axi_rlast);
        p_50_s_axi_rlast->set_sv_netview_offsetfromdp(10482560);
        xsim_sc_channel<0, bool > *p_50_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_50->s_axi_rvalid.bind(*p_50_s_axi_rvalid);
        p_50_s_axi_rvalid->set_sv_netview_offsetfromdp(10482616);
        xsim_sc_channel<0, bool > *p_50_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_50->s_axi_rready.bind(*p_50_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_rready);
        xsim_sc_channel<0, bool > *p_50_bram_rst_a = new xsim_sc_channel<0, bool >();
        sc_inst_50->bram_rst_a.bind(*p_50_bram_rst_a);
        p_50_bram_rst_a->set_sv_netview_offsetfromdp(10482728);
        xsim_sc_channel<0, bool > *p_50_bram_clk_a = new xsim_sc_channel<0, bool >();
        sc_inst_50->bram_clk_a.bind(*p_50_bram_clk_a);
        p_50_bram_clk_a->set_sv_netview_offsetfromdp(10482784);
        xsim_sc_channel<0, bool > *p_50_bram_en_a = new xsim_sc_channel<0, bool >();
        sc_inst_50->bram_en_a.bind(*p_50_bram_en_a);
        p_50_bram_en_a->set_sv_netview_offsetfromdp(10482840);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_50_bram_we_a = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_50->bram_we_a.bind(*p_50_bram_we_a);
        p_50_bram_we_a->set_sv_netview_offsetfromdp(10482896);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_50_bram_addr_a = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_50->bram_addr_a.bind(*p_50_bram_addr_a);
        p_50_bram_addr_a->set_sv_netview_offsetfromdp(10482952);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_50_bram_wrdata_a = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_50->bram_wrdata_a.bind(*p_50_bram_wrdata_a);
        p_50_bram_wrdata_a->set_sv_netview_offsetfromdp(10483008);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_50_bram_rddata_a = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_50->bram_rddata_a.bind(*p_50_bram_rddata_a);
        (*_glb_hdl_sc_channel_map).push_back(p_50_bram_rddata_a);
        xsim_sc_channel<0, bool > *p_50_bram_rst_b = new xsim_sc_channel<0, bool >();
        sc_inst_50->bram_rst_b.bind(*p_50_bram_rst_b);
        p_50_bram_rst_b->set_sv_netview_offsetfromdp(10483120);
        xsim_sc_channel<0, bool > *p_50_bram_clk_b = new xsim_sc_channel<0, bool >();
        sc_inst_50->bram_clk_b.bind(*p_50_bram_clk_b);
        p_50_bram_clk_b->set_sv_netview_offsetfromdp(10483176);
        xsim_sc_channel<0, bool > *p_50_bram_en_b = new xsim_sc_channel<0, bool >();
        sc_inst_50->bram_en_b.bind(*p_50_bram_en_b);
        p_50_bram_en_b->set_sv_netview_offsetfromdp(10483232);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_50_bram_we_b = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_50->bram_we_b.bind(*p_50_bram_we_b);
        p_50_bram_we_b->set_sv_netview_offsetfromdp(10483288);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_50_bram_addr_b = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_50->bram_addr_b.bind(*p_50_bram_addr_b);
        p_50_bram_addr_b->set_sv_netview_offsetfromdp(10483344);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_50_bram_wrdata_b = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_50->bram_wrdata_b.bind(*p_50_bram_wrdata_b);
        p_50_bram_wrdata_b->set_sv_netview_offsetfromdp(10483400);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_50_bram_rddata_b = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_50->bram_rddata_b.bind(*p_50_bram_rddata_b);
        (*_glb_hdl_sc_channel_map).push_back(p_50_bram_rddata_b);
        sc_inst_51 = new bd_d216_plram_mem05_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.memory.plram_mem05");
        sc_inst_51->xsim_set_dbg_index(2922);
        xsim_sc_channel<0, bool > *p_51_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_51->s_axi_aclk.bind(*p_51_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_51_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_51->s_axi_aresetn.bind(*p_51_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_aresetn);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_51_s_axi_awaddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_51->s_axi_awaddr.bind(*p_51_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_51_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_51->s_axi_awlen.bind(*p_51_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_51_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_51->s_axi_awsize.bind(*p_51_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_51_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_51->s_axi_awburst.bind(*p_51_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_awburst);
        xsim_sc_channel<0, bool > *p_51_s_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_51->s_axi_awlock.bind(*p_51_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_51_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_51->s_axi_awcache.bind(*p_51_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_51_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_51->s_axi_awprot.bind(*p_51_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_51_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_51->s_axi_awvalid.bind(*p_51_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_51_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_51->s_axi_awready.bind(*p_51_s_axi_awready);
        p_51_s_axi_awready->set_sv_netview_offsetfromdp(10545240);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_51_s_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_51->s_axi_wdata.bind(*p_51_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_51_s_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_51->s_axi_wstrb.bind(*p_51_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_51_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_51->s_axi_wlast.bind(*p_51_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_51_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_51->s_axi_wvalid.bind(*p_51_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_51_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_51->s_axi_wready.bind(*p_51_s_axi_wready);
        p_51_s_axi_wready->set_sv_netview_offsetfromdp(10545520);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_51_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_51->s_axi_bresp.bind(*p_51_s_axi_bresp);
        p_51_s_axi_bresp->set_sv_netview_offsetfromdp(10545576);
        xsim_sc_channel<0, bool > *p_51_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_51->s_axi_bvalid.bind(*p_51_s_axi_bvalid);
        p_51_s_axi_bvalid->set_sv_netview_offsetfromdp(10545632);
        xsim_sc_channel<0, bool > *p_51_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_51->s_axi_bready.bind(*p_51_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_bready);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_51_s_axi_araddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_51->s_axi_araddr.bind(*p_51_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_51_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_51->s_axi_arlen.bind(*p_51_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_51_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_51->s_axi_arsize.bind(*p_51_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_51_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_51->s_axi_arburst.bind(*p_51_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_arburst);
        xsim_sc_channel<0, bool > *p_51_s_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_51->s_axi_arlock.bind(*p_51_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_51_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_51->s_axi_arcache.bind(*p_51_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_51_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_51->s_axi_arprot.bind(*p_51_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_51_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_51->s_axi_arvalid.bind(*p_51_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_51_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_51->s_axi_arready.bind(*p_51_s_axi_arready);
        p_51_s_axi_arready->set_sv_netview_offsetfromdp(10546192);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_51_s_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_51->s_axi_rdata.bind(*p_51_s_axi_rdata);
        p_51_s_axi_rdata->set_sv_netview_offsetfromdp(10546248);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_51_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_51->s_axi_rresp.bind(*p_51_s_axi_rresp);
        p_51_s_axi_rresp->set_sv_netview_offsetfromdp(10546304);
        xsim_sc_channel<0, bool > *p_51_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_51->s_axi_rlast.bind(*p_51_s_axi_rlast);
        p_51_s_axi_rlast->set_sv_netview_offsetfromdp(10546360);
        xsim_sc_channel<0, bool > *p_51_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_51->s_axi_rvalid.bind(*p_51_s_axi_rvalid);
        p_51_s_axi_rvalid->set_sv_netview_offsetfromdp(10546416);
        xsim_sc_channel<0, bool > *p_51_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_51->s_axi_rready.bind(*p_51_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_rready);
        xsim_sc_channel<0, bool > *p_51_bram_rst_a = new xsim_sc_channel<0, bool >();
        sc_inst_51->bram_rst_a.bind(*p_51_bram_rst_a);
        p_51_bram_rst_a->set_sv_netview_offsetfromdp(10546528);
        xsim_sc_channel<0, bool > *p_51_bram_clk_a = new xsim_sc_channel<0, bool >();
        sc_inst_51->bram_clk_a.bind(*p_51_bram_clk_a);
        p_51_bram_clk_a->set_sv_netview_offsetfromdp(10546584);
        xsim_sc_channel<0, bool > *p_51_bram_en_a = new xsim_sc_channel<0, bool >();
        sc_inst_51->bram_en_a.bind(*p_51_bram_en_a);
        p_51_bram_en_a->set_sv_netview_offsetfromdp(10546640);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_51_bram_we_a = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_51->bram_we_a.bind(*p_51_bram_we_a);
        p_51_bram_we_a->set_sv_netview_offsetfromdp(10546696);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_51_bram_addr_a = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_51->bram_addr_a.bind(*p_51_bram_addr_a);
        p_51_bram_addr_a->set_sv_netview_offsetfromdp(10546752);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_51_bram_wrdata_a = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_51->bram_wrdata_a.bind(*p_51_bram_wrdata_a);
        p_51_bram_wrdata_a->set_sv_netview_offsetfromdp(10546808);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_51_bram_rddata_a = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_51->bram_rddata_a.bind(*p_51_bram_rddata_a);
        (*_glb_hdl_sc_channel_map).push_back(p_51_bram_rddata_a);
        xsim_sc_channel<0, bool > *p_51_bram_rst_b = new xsim_sc_channel<0, bool >();
        sc_inst_51->bram_rst_b.bind(*p_51_bram_rst_b);
        p_51_bram_rst_b->set_sv_netview_offsetfromdp(10546920);
        xsim_sc_channel<0, bool > *p_51_bram_clk_b = new xsim_sc_channel<0, bool >();
        sc_inst_51->bram_clk_b.bind(*p_51_bram_clk_b);
        p_51_bram_clk_b->set_sv_netview_offsetfromdp(10546976);
        xsim_sc_channel<0, bool > *p_51_bram_en_b = new xsim_sc_channel<0, bool >();
        sc_inst_51->bram_en_b.bind(*p_51_bram_en_b);
        p_51_bram_en_b->set_sv_netview_offsetfromdp(10547032);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_51_bram_we_b = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_51->bram_we_b.bind(*p_51_bram_we_b);
        p_51_bram_we_b->set_sv_netview_offsetfromdp(10547088);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_51_bram_addr_b = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_51->bram_addr_b.bind(*p_51_bram_addr_b);
        p_51_bram_addr_b->set_sv_netview_offsetfromdp(10547144);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_51_bram_wrdata_b = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_51->bram_wrdata_b.bind(*p_51_bram_wrdata_b);
        p_51_bram_wrdata_b->set_sv_netview_offsetfromdp(10547200);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_51_bram_rddata_b = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_51->bram_rddata_b.bind(*p_51_bram_rddata_b);
        (*_glb_hdl_sc_channel_map).push_back(p_51_bram_rddata_b);
        sc_inst_52 = new pfm_dynamic_sci(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.pfm_dynamic_sci_inst");
        sc_inst_52->xsim_set_dbg_index(62);
        sc_inst_53 = new pfm_dynamic_profile_vip_0_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.profile_vip_0");
        sc_inst_53->xsim_set_dbg_index(63);
        xsim_sc_channel<0, bool > *p_53_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_53->aclk.bind(*p_53_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_53_aclk);
        xsim_sc_channel<0, bool > *p_53_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_53->aresetn.bind(*p_53_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_53_aresetn);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_53_s_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_53->s_axi_awaddr.bind(*p_53_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_53_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_53->s_axi_awlen.bind(*p_53_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_awlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_53_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_53->s_axi_awburst.bind(*p_53_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_53_s_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_53->s_axi_awlock.bind(*p_53_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_53_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_53->s_axi_awcache.bind(*p_53_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_53_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_53->s_axi_awprot.bind(*p_53_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_53_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_53->s_axi_awqos.bind(*p_53_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_awqos);
        xsim_sc_channel<0, bool > *p_53_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_53->s_axi_awvalid.bind(*p_53_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_53_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_53->s_axi_awready.bind(*p_53_s_axi_awready);
        p_53_s_axi_awready->set_sv_netview_offsetfromdp(10893168);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_53_s_axi_wdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_53->s_axi_wdata.bind(*p_53_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_wdata);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_53_s_axi_wstrb = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_53->s_axi_wstrb.bind(*p_53_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_53_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_53->s_axi_wlast.bind(*p_53_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_53_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_53->s_axi_wvalid.bind(*p_53_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_53_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_53->s_axi_wready.bind(*p_53_s_axi_wready);
        p_53_s_axi_wready->set_sv_netview_offsetfromdp(10893448);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_53_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_53->s_axi_bresp.bind(*p_53_s_axi_bresp);
        p_53_s_axi_bresp->set_sv_netview_offsetfromdp(10893504);
        xsim_sc_channel<0, bool > *p_53_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_53->s_axi_bvalid.bind(*p_53_s_axi_bvalid);
        p_53_s_axi_bvalid->set_sv_netview_offsetfromdp(10893560);
        xsim_sc_channel<0, bool > *p_53_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_53->s_axi_bready.bind(*p_53_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_bready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_53_s_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_53->s_axi_araddr.bind(*p_53_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_53_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_53->s_axi_arlen.bind(*p_53_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_arlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_53_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_53->s_axi_arburst.bind(*p_53_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_53_s_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_53->s_axi_arlock.bind(*p_53_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_53_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_53->s_axi_arcache.bind(*p_53_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_53_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_53->s_axi_arprot.bind(*p_53_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_53_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_53->s_axi_arqos.bind(*p_53_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_arqos);
        xsim_sc_channel<0, bool > *p_53_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_53->s_axi_arvalid.bind(*p_53_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_53_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_53->s_axi_arready.bind(*p_53_s_axi_arready);
        p_53_s_axi_arready->set_sv_netview_offsetfromdp(10894120);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_53_s_axi_rdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_53->s_axi_rdata.bind(*p_53_s_axi_rdata);
        p_53_s_axi_rdata->set_sv_netview_offsetfromdp(10894176);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_53_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_53->s_axi_rresp.bind(*p_53_s_axi_rresp);
        p_53_s_axi_rresp->set_sv_netview_offsetfromdp(10894232);
        xsim_sc_channel<0, bool > *p_53_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_53->s_axi_rlast.bind(*p_53_s_axi_rlast);
        p_53_s_axi_rlast->set_sv_netview_offsetfromdp(10894288);
        xsim_sc_channel<0, bool > *p_53_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_53->s_axi_rvalid.bind(*p_53_s_axi_rvalid);
        p_53_s_axi_rvalid->set_sv_netview_offsetfromdp(10894344);
        xsim_sc_channel<0, bool > *p_53_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_53->s_axi_rready.bind(*p_53_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_rready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_53_m_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_53->m_axi_awaddr.bind(*p_53_m_axi_awaddr);
        p_53_m_axi_awaddr->set_sv_netview_offsetfromdp(10894456);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_53_m_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_53->m_axi_awlen.bind(*p_53_m_axi_awlen);
        p_53_m_axi_awlen->set_sv_netview_offsetfromdp(10894512);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_53_m_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_53->m_axi_awburst.bind(*p_53_m_axi_awburst);
        p_53_m_axi_awburst->set_sv_netview_offsetfromdp(10894568);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_53_m_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_53->m_axi_awlock.bind(*p_53_m_axi_awlock);
        p_53_m_axi_awlock->set_sv_netview_offsetfromdp(10894624);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_53_m_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_53->m_axi_awcache.bind(*p_53_m_axi_awcache);
        p_53_m_axi_awcache->set_sv_netview_offsetfromdp(10894680);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_53_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_53->m_axi_awprot.bind(*p_53_m_axi_awprot);
        p_53_m_axi_awprot->set_sv_netview_offsetfromdp(10894736);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_53_m_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_53->m_axi_awqos.bind(*p_53_m_axi_awqos);
        p_53_m_axi_awqos->set_sv_netview_offsetfromdp(10894792);
        xsim_sc_channel<0, bool > *p_53_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_53->m_axi_awvalid.bind(*p_53_m_axi_awvalid);
        p_53_m_axi_awvalid->set_sv_netview_offsetfromdp(10894848);
        xsim_sc_channel<0, bool > *p_53_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_53->m_axi_awready.bind(*p_53_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_53_m_axi_awready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_53_m_axi_wdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_53->m_axi_wdata.bind(*p_53_m_axi_wdata);
        p_53_m_axi_wdata->set_sv_netview_offsetfromdp(10894960);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_53_m_axi_wstrb = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_53->m_axi_wstrb.bind(*p_53_m_axi_wstrb);
        p_53_m_axi_wstrb->set_sv_netview_offsetfromdp(10895016);
        xsim_sc_channel<0, bool > *p_53_m_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_53->m_axi_wlast.bind(*p_53_m_axi_wlast);
        p_53_m_axi_wlast->set_sv_netview_offsetfromdp(10895072);
        xsim_sc_channel<0, bool > *p_53_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_53->m_axi_wvalid.bind(*p_53_m_axi_wvalid);
        p_53_m_axi_wvalid->set_sv_netview_offsetfromdp(10895128);
        xsim_sc_channel<0, bool > *p_53_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_53->m_axi_wready.bind(*p_53_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_53_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_53_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_53->m_axi_bresp.bind(*p_53_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_53_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_53_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_53->m_axi_bvalid.bind(*p_53_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_53_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_53_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_53->m_axi_bready.bind(*p_53_m_axi_bready);
        p_53_m_axi_bready->set_sv_netview_offsetfromdp(10895352);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_53_m_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_53->m_axi_araddr.bind(*p_53_m_axi_araddr);
        p_53_m_axi_araddr->set_sv_netview_offsetfromdp(10895408);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_53_m_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_53->m_axi_arlen.bind(*p_53_m_axi_arlen);
        p_53_m_axi_arlen->set_sv_netview_offsetfromdp(10895464);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_53_m_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_53->m_axi_arburst.bind(*p_53_m_axi_arburst);
        p_53_m_axi_arburst->set_sv_netview_offsetfromdp(10895520);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_53_m_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_53->m_axi_arlock.bind(*p_53_m_axi_arlock);
        p_53_m_axi_arlock->set_sv_netview_offsetfromdp(10895576);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_53_m_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_53->m_axi_arcache.bind(*p_53_m_axi_arcache);
        p_53_m_axi_arcache->set_sv_netview_offsetfromdp(10895632);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_53_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_53->m_axi_arprot.bind(*p_53_m_axi_arprot);
        p_53_m_axi_arprot->set_sv_netview_offsetfromdp(10895688);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_53_m_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_53->m_axi_arqos.bind(*p_53_m_axi_arqos);
        p_53_m_axi_arqos->set_sv_netview_offsetfromdp(10895744);
        xsim_sc_channel<0, bool > *p_53_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_53->m_axi_arvalid.bind(*p_53_m_axi_arvalid);
        p_53_m_axi_arvalid->set_sv_netview_offsetfromdp(10895800);
        xsim_sc_channel<0, bool > *p_53_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_53->m_axi_arready.bind(*p_53_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_53_m_axi_arready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_53_m_axi_rdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_53->m_axi_rdata.bind(*p_53_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_53_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_53_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_53->m_axi_rresp.bind(*p_53_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_53_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_53_m_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_53->m_axi_rlast.bind(*p_53_m_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_53_m_axi_rlast);
        xsim_sc_channel<0, bool > *p_53_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_53->m_axi_rvalid.bind(*p_53_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_53_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_53_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_53->m_axi_rready.bind(*p_53_m_axi_rready);
        p_53_m_axi_rready->set_sv_netview_offsetfromdp(10896136);
        sc_inst_54 = new pfm_dynamic_m01_regslice_4(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.slr0.interconnect_axilite_user_0.m01_couplers.m01_regslice");
        sc_inst_54->xsim_set_dbg_index(3401);
        xsim_sc_channel<0, bool > *p_54_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_54->aclk.bind(*p_54_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_54_aclk);
        xsim_sc_channel<0, bool > *p_54_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_54->aresetn.bind(*p_54_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_54_aresetn);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_54_s_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_54->s_axi_awaddr.bind(*p_54_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_54_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_54->s_axi_awprot.bind(*p_54_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_54_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_54->s_axi_awvalid.bind(*p_54_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_54_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_54->s_axi_awready.bind(*p_54_s_axi_awready);
        p_54_s_axi_awready->set_sv_netview_offsetfromdp(11172672);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_54_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_54->s_axi_wdata.bind(*p_54_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_54_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_54->s_axi_wstrb.bind(*p_54_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_54_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_54->s_axi_wvalid.bind(*p_54_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_54_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_54->s_axi_wready.bind(*p_54_s_axi_wready);
        p_54_s_axi_wready->set_sv_netview_offsetfromdp(11172896);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_54_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_54->s_axi_bresp.bind(*p_54_s_axi_bresp);
        p_54_s_axi_bresp->set_sv_netview_offsetfromdp(11172952);
        xsim_sc_channel<0, bool > *p_54_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_54->s_axi_bvalid.bind(*p_54_s_axi_bvalid);
        p_54_s_axi_bvalid->set_sv_netview_offsetfromdp(11173008);
        xsim_sc_channel<0, bool > *p_54_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_54->s_axi_bready.bind(*p_54_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_54_s_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_54->s_axi_araddr.bind(*p_54_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_54_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_54->s_axi_arprot.bind(*p_54_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_54_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_54->s_axi_arvalid.bind(*p_54_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_54_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_54->s_axi_arready.bind(*p_54_s_axi_arready);
        p_54_s_axi_arready->set_sv_netview_offsetfromdp(11173288);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_54_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_54->s_axi_rdata.bind(*p_54_s_axi_rdata);
        p_54_s_axi_rdata->set_sv_netview_offsetfromdp(11173344);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_54_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_54->s_axi_rresp.bind(*p_54_s_axi_rresp);
        p_54_s_axi_rresp->set_sv_netview_offsetfromdp(11173400);
        xsim_sc_channel<0, bool > *p_54_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_54->s_axi_rvalid.bind(*p_54_s_axi_rvalid);
        p_54_s_axi_rvalid->set_sv_netview_offsetfromdp(11173456);
        xsim_sc_channel<0, bool > *p_54_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_54->s_axi_rready.bind(*p_54_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_rready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_54_m_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_54->m_axi_awaddr.bind(*p_54_m_axi_awaddr);
        p_54_m_axi_awaddr->set_sv_netview_offsetfromdp(11173568);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_54_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_54->m_axi_awprot.bind(*p_54_m_axi_awprot);
        p_54_m_axi_awprot->set_sv_netview_offsetfromdp(11173624);
        xsim_sc_channel<0, bool > *p_54_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_54->m_axi_awvalid.bind(*p_54_m_axi_awvalid);
        p_54_m_axi_awvalid->set_sv_netview_offsetfromdp(11173680);
        xsim_sc_channel<0, bool > *p_54_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_54->m_axi_awready.bind(*p_54_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_54_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_54_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_54->m_axi_wdata.bind(*p_54_m_axi_wdata);
        p_54_m_axi_wdata->set_sv_netview_offsetfromdp(11173792);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_54_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_54->m_axi_wstrb.bind(*p_54_m_axi_wstrb);
        p_54_m_axi_wstrb->set_sv_netview_offsetfromdp(11173848);
        xsim_sc_channel<0, bool > *p_54_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_54->m_axi_wvalid.bind(*p_54_m_axi_wvalid);
        p_54_m_axi_wvalid->set_sv_netview_offsetfromdp(11173904);
        xsim_sc_channel<0, bool > *p_54_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_54->m_axi_wready.bind(*p_54_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_54_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_54_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_54->m_axi_bresp.bind(*p_54_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_54_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_54_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_54->m_axi_bvalid.bind(*p_54_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_54_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_54_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_54->m_axi_bready.bind(*p_54_m_axi_bready);
        p_54_m_axi_bready->set_sv_netview_offsetfromdp(11174128);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_54_m_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_54->m_axi_araddr.bind(*p_54_m_axi_araddr);
        p_54_m_axi_araddr->set_sv_netview_offsetfromdp(11174184);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_54_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_54->m_axi_arprot.bind(*p_54_m_axi_arprot);
        p_54_m_axi_arprot->set_sv_netview_offsetfromdp(11174240);
        xsim_sc_channel<0, bool > *p_54_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_54->m_axi_arvalid.bind(*p_54_m_axi_arvalid);
        p_54_m_axi_arvalid->set_sv_netview_offsetfromdp(11174296);
        xsim_sc_channel<0, bool > *p_54_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_54->m_axi_arready.bind(*p_54_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_54_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_54_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_54->m_axi_rdata.bind(*p_54_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_54_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_54_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_54->m_axi_rresp.bind(*p_54_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_54_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_54_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_54->m_axi_rvalid.bind(*p_54_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_54_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_54_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_54->m_axi_rready.bind(*p_54_m_axi_rready);
        p_54_m_axi_rready->set_sv_netview_offsetfromdp(11174576);
        sc_inst_55 = new pfm_dynamic_auto_cc_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.slr0.interconnect_axilite_user_0.m02_couplers.auto_cc");
        sc_inst_55->xsim_set_dbg_index(3442);
        xsim_sc_channel<0, bool > *p_55_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_55->s_axi_aclk.bind(*p_55_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_55_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_55->s_axi_aresetn.bind(*p_55_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_aresetn);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_55_s_axi_awaddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_55->s_axi_awaddr.bind(*p_55_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_55_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_55->s_axi_awprot.bind(*p_55_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_55_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_55->s_axi_awvalid.bind(*p_55_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_55_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_55->s_axi_awready.bind(*p_55_s_axi_awready);
        p_55_s_axi_awready->set_sv_netview_offsetfromdp(11211600);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_55_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_55->s_axi_wdata.bind(*p_55_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_55_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_55->s_axi_wstrb.bind(*p_55_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_55_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_55->s_axi_wvalid.bind(*p_55_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_55_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_55->s_axi_wready.bind(*p_55_s_axi_wready);
        p_55_s_axi_wready->set_sv_netview_offsetfromdp(11211824);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_55_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_55->s_axi_bresp.bind(*p_55_s_axi_bresp);
        p_55_s_axi_bresp->set_sv_netview_offsetfromdp(11211880);
        xsim_sc_channel<0, bool > *p_55_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_55->s_axi_bvalid.bind(*p_55_s_axi_bvalid);
        p_55_s_axi_bvalid->set_sv_netview_offsetfromdp(11211936);
        xsim_sc_channel<0, bool > *p_55_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_55->s_axi_bready.bind(*p_55_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_bready);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_55_s_axi_araddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_55->s_axi_araddr.bind(*p_55_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_55_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_55->s_axi_arprot.bind(*p_55_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_55_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_55->s_axi_arvalid.bind(*p_55_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_55_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_55->s_axi_arready.bind(*p_55_s_axi_arready);
        p_55_s_axi_arready->set_sv_netview_offsetfromdp(11212216);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_55_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_55->s_axi_rdata.bind(*p_55_s_axi_rdata);
        p_55_s_axi_rdata->set_sv_netview_offsetfromdp(11212272);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_55_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_55->s_axi_rresp.bind(*p_55_s_axi_rresp);
        p_55_s_axi_rresp->set_sv_netview_offsetfromdp(11212328);
        xsim_sc_channel<0, bool > *p_55_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_55->s_axi_rvalid.bind(*p_55_s_axi_rvalid);
        p_55_s_axi_rvalid->set_sv_netview_offsetfromdp(11212384);
        xsim_sc_channel<0, bool > *p_55_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_55->s_axi_rready.bind(*p_55_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_rready);
        xsim_sc_channel<0, bool > *p_55_m_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_55->m_axi_aclk.bind(*p_55_m_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_55_m_axi_aclk);
        xsim_sc_channel<0, bool > *p_55_m_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_55->m_axi_aresetn.bind(*p_55_m_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_55_m_axi_aresetn);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_55_m_axi_awaddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_55->m_axi_awaddr.bind(*p_55_m_axi_awaddr);
        p_55_m_axi_awaddr->set_sv_netview_offsetfromdp(11212608);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_55_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_55->m_axi_awprot.bind(*p_55_m_axi_awprot);
        p_55_m_axi_awprot->set_sv_netview_offsetfromdp(11212664);
        xsim_sc_channel<0, bool > *p_55_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_55->m_axi_awvalid.bind(*p_55_m_axi_awvalid);
        p_55_m_axi_awvalid->set_sv_netview_offsetfromdp(11212720);
        xsim_sc_channel<0, bool > *p_55_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_55->m_axi_awready.bind(*p_55_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_55_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_55_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_55->m_axi_wdata.bind(*p_55_m_axi_wdata);
        p_55_m_axi_wdata->set_sv_netview_offsetfromdp(11212832);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_55_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_55->m_axi_wstrb.bind(*p_55_m_axi_wstrb);
        p_55_m_axi_wstrb->set_sv_netview_offsetfromdp(11212888);
        xsim_sc_channel<0, bool > *p_55_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_55->m_axi_wvalid.bind(*p_55_m_axi_wvalid);
        p_55_m_axi_wvalid->set_sv_netview_offsetfromdp(11212944);
        xsim_sc_channel<0, bool > *p_55_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_55->m_axi_wready.bind(*p_55_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_55_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_55_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_55->m_axi_bresp.bind(*p_55_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_55_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_55_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_55->m_axi_bvalid.bind(*p_55_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_55_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_55_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_55->m_axi_bready.bind(*p_55_m_axi_bready);
        p_55_m_axi_bready->set_sv_netview_offsetfromdp(11213168);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_55_m_axi_araddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_55->m_axi_araddr.bind(*p_55_m_axi_araddr);
        p_55_m_axi_araddr->set_sv_netview_offsetfromdp(11213224);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_55_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_55->m_axi_arprot.bind(*p_55_m_axi_arprot);
        p_55_m_axi_arprot->set_sv_netview_offsetfromdp(11213280);
        xsim_sc_channel<0, bool > *p_55_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_55->m_axi_arvalid.bind(*p_55_m_axi_arvalid);
        p_55_m_axi_arvalid->set_sv_netview_offsetfromdp(11213336);
        xsim_sc_channel<0, bool > *p_55_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_55->m_axi_arready.bind(*p_55_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_55_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_55_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_55->m_axi_rdata.bind(*p_55_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_55_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_55_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_55->m_axi_rresp.bind(*p_55_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_55_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_55_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_55->m_axi_rvalid.bind(*p_55_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_55_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_55_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_55->m_axi_rready.bind(*p_55_m_axi_rready);
        p_55_m_axi_rready->set_sv_netview_offsetfromdp(11213616);
        sc_inst_56 = new pfm_dynamic_m02_regslice_4(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.slr0.interconnect_axilite_user_0.m02_couplers.m02_regslice");
        sc_inst_56->xsim_set_dbg_index(3443);
        xsim_sc_channel<0, bool > *p_56_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_56->aclk.bind(*p_56_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_56_aclk);
        xsim_sc_channel<0, bool > *p_56_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_56->aresetn.bind(*p_56_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_56_aresetn);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_56_s_axi_awaddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_56->s_axi_awaddr.bind(*p_56_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_56_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_56->s_axi_awprot.bind(*p_56_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_56_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_56->s_axi_awvalid.bind(*p_56_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_56_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_56->s_axi_awready.bind(*p_56_s_axi_awready);
        p_56_s_axi_awready->set_sv_netview_offsetfromdp(11214000);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_56_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_56->s_axi_wdata.bind(*p_56_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_56_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_56->s_axi_wstrb.bind(*p_56_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_56_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_56->s_axi_wvalid.bind(*p_56_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_56_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_56->s_axi_wready.bind(*p_56_s_axi_wready);
        p_56_s_axi_wready->set_sv_netview_offsetfromdp(11214224);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_56_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_56->s_axi_bresp.bind(*p_56_s_axi_bresp);
        p_56_s_axi_bresp->set_sv_netview_offsetfromdp(11214280);
        xsim_sc_channel<0, bool > *p_56_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_56->s_axi_bvalid.bind(*p_56_s_axi_bvalid);
        p_56_s_axi_bvalid->set_sv_netview_offsetfromdp(11214336);
        xsim_sc_channel<0, bool > *p_56_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_56->s_axi_bready.bind(*p_56_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_bready);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_56_s_axi_araddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_56->s_axi_araddr.bind(*p_56_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_56_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_56->s_axi_arprot.bind(*p_56_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_56_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_56->s_axi_arvalid.bind(*p_56_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_56_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_56->s_axi_arready.bind(*p_56_s_axi_arready);
        p_56_s_axi_arready->set_sv_netview_offsetfromdp(11214616);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_56_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_56->s_axi_rdata.bind(*p_56_s_axi_rdata);
        p_56_s_axi_rdata->set_sv_netview_offsetfromdp(11214672);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_56_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_56->s_axi_rresp.bind(*p_56_s_axi_rresp);
        p_56_s_axi_rresp->set_sv_netview_offsetfromdp(11214728);
        xsim_sc_channel<0, bool > *p_56_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_56->s_axi_rvalid.bind(*p_56_s_axi_rvalid);
        p_56_s_axi_rvalid->set_sv_netview_offsetfromdp(11214784);
        xsim_sc_channel<0, bool > *p_56_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_56->s_axi_rready.bind(*p_56_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_rready);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_56_m_axi_awaddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_56->m_axi_awaddr.bind(*p_56_m_axi_awaddr);
        p_56_m_axi_awaddr->set_sv_netview_offsetfromdp(11214896);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_56_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_56->m_axi_awprot.bind(*p_56_m_axi_awprot);
        p_56_m_axi_awprot->set_sv_netview_offsetfromdp(11214952);
        xsim_sc_channel<0, bool > *p_56_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_56->m_axi_awvalid.bind(*p_56_m_axi_awvalid);
        p_56_m_axi_awvalid->set_sv_netview_offsetfromdp(11215008);
        xsim_sc_channel<0, bool > *p_56_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_56->m_axi_awready.bind(*p_56_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_56_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_56_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_56->m_axi_wdata.bind(*p_56_m_axi_wdata);
        p_56_m_axi_wdata->set_sv_netview_offsetfromdp(11215120);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_56_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_56->m_axi_wstrb.bind(*p_56_m_axi_wstrb);
        p_56_m_axi_wstrb->set_sv_netview_offsetfromdp(11215176);
        xsim_sc_channel<0, bool > *p_56_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_56->m_axi_wvalid.bind(*p_56_m_axi_wvalid);
        p_56_m_axi_wvalid->set_sv_netview_offsetfromdp(11215232);
        xsim_sc_channel<0, bool > *p_56_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_56->m_axi_wready.bind(*p_56_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_56_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_56_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_56->m_axi_bresp.bind(*p_56_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_56_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_56_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_56->m_axi_bvalid.bind(*p_56_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_56_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_56_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_56->m_axi_bready.bind(*p_56_m_axi_bready);
        p_56_m_axi_bready->set_sv_netview_offsetfromdp(11215456);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_56_m_axi_araddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_56->m_axi_araddr.bind(*p_56_m_axi_araddr);
        p_56_m_axi_araddr->set_sv_netview_offsetfromdp(11215512);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_56_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_56->m_axi_arprot.bind(*p_56_m_axi_arprot);
        p_56_m_axi_arprot->set_sv_netview_offsetfromdp(11215568);
        xsim_sc_channel<0, bool > *p_56_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_56->m_axi_arvalid.bind(*p_56_m_axi_arvalid);
        p_56_m_axi_arvalid->set_sv_netview_offsetfromdp(11215624);
        xsim_sc_channel<0, bool > *p_56_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_56->m_axi_arready.bind(*p_56_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_56_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_56_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_56->m_axi_rdata.bind(*p_56_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_56_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_56_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_56->m_axi_rresp.bind(*p_56_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_56_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_56_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_56->m_axi_rvalid.bind(*p_56_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_56_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_56_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_56->m_axi_rready.bind(*p_56_m_axi_rready);
        p_56_m_axi_rready->set_sv_netview_offsetfromdp(11215904);
        sc_inst_57 = new pfm_dynamic_xbar_3(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.slr0.interconnect_axilite_user_0.xbar");
        sc_inst_57->xsim_set_dbg_index(1495);
        xsim_sc_channel<0, bool > *p_57_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_57->aclk.bind(*p_57_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_57_aclk);
        xsim_sc_channel<0, bool > *p_57_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_57->aresetn.bind(*p_57_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_57_aresetn);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_57_s_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_57->s_axi_awaddr.bind(*p_57_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_57_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_57->s_axi_awprot.bind(*p_57_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_awprot);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_57_s_axi_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_57->s_axi_awvalid.bind(*p_57_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_awvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_57_s_axi_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_57->s_axi_awready.bind(*p_57_s_axi_awready);
        p_57_s_axi_awready->set_sv_netview_offsetfromdp(11226464);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_57_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_57->s_axi_wdata.bind(*p_57_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_57_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_57->s_axi_wstrb.bind(*p_57_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_wstrb);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_57_s_axi_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_57->s_axi_wvalid.bind(*p_57_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_wvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_57_s_axi_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_57->s_axi_wready.bind(*p_57_s_axi_wready);
        p_57_s_axi_wready->set_sv_netview_offsetfromdp(11226688);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_57_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_57->s_axi_bresp.bind(*p_57_s_axi_bresp);
        p_57_s_axi_bresp->set_sv_netview_offsetfromdp(11226744);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_57_s_axi_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_57->s_axi_bvalid.bind(*p_57_s_axi_bvalid);
        p_57_s_axi_bvalid->set_sv_netview_offsetfromdp(11226800);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_57_s_axi_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_57->s_axi_bready.bind(*p_57_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_57_s_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_57->s_axi_araddr.bind(*p_57_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_57_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_57->s_axi_arprot.bind(*p_57_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_arprot);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_57_s_axi_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_57->s_axi_arvalid.bind(*p_57_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_arvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_57_s_axi_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_57->s_axi_arready.bind(*p_57_s_axi_arready);
        p_57_s_axi_arready->set_sv_netview_offsetfromdp(11227080);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_57_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_57->s_axi_rdata.bind(*p_57_s_axi_rdata);
        p_57_s_axi_rdata->set_sv_netview_offsetfromdp(11227136);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_57_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_57->s_axi_rresp.bind(*p_57_s_axi_rresp);
        p_57_s_axi_rresp->set_sv_netview_offsetfromdp(11227192);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_57_s_axi_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_57->s_axi_rvalid.bind(*p_57_s_axi_rvalid);
        p_57_s_axi_rvalid->set_sv_netview_offsetfromdp(11227248);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_57_s_axi_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_57->s_axi_rready.bind(*p_57_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_rready);
        xsim_sc_channel<192, sc_dt::sc_bv<192> > *p_57_m_axi_awaddr = new xsim_sc_channel<192, sc_dt::sc_bv<192> >();
        sc_inst_57->m_axi_awaddr.bind(*p_57_m_axi_awaddr);
        p_57_m_axi_awaddr->set_sv_netview_offsetfromdp(11227360);
        xsim_sc_channel<9, sc_dt::sc_bv<9> > *p_57_m_axi_awprot = new xsim_sc_channel<9, sc_dt::sc_bv<9> >();
        sc_inst_57->m_axi_awprot.bind(*p_57_m_axi_awprot);
        p_57_m_axi_awprot->set_sv_netview_offsetfromdp(11227416);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_57_m_axi_awvalid = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_57->m_axi_awvalid.bind(*p_57_m_axi_awvalid);
        p_57_m_axi_awvalid->set_sv_netview_offsetfromdp(11227472);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_57_m_axi_awready = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_57->m_axi_awready.bind(*p_57_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_57_m_axi_awready);
        xsim_sc_channel<96, sc_dt::sc_bv<96> > *p_57_m_axi_wdata = new xsim_sc_channel<96, sc_dt::sc_bv<96> >();
        sc_inst_57->m_axi_wdata.bind(*p_57_m_axi_wdata);
        p_57_m_axi_wdata->set_sv_netview_offsetfromdp(11227584);
        xsim_sc_channel<12, sc_dt::sc_bv<12> > *p_57_m_axi_wstrb = new xsim_sc_channel<12, sc_dt::sc_bv<12> >();
        sc_inst_57->m_axi_wstrb.bind(*p_57_m_axi_wstrb);
        p_57_m_axi_wstrb->set_sv_netview_offsetfromdp(11227640);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_57_m_axi_wvalid = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_57->m_axi_wvalid.bind(*p_57_m_axi_wvalid);
        p_57_m_axi_wvalid->set_sv_netview_offsetfromdp(11227696);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_57_m_axi_wready = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_57->m_axi_wready.bind(*p_57_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_57_m_axi_wready);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_57_m_axi_bresp = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_57->m_axi_bresp.bind(*p_57_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_57_m_axi_bresp);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_57_m_axi_bvalid = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_57->m_axi_bvalid.bind(*p_57_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_57_m_axi_bvalid);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_57_m_axi_bready = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_57->m_axi_bready.bind(*p_57_m_axi_bready);
        p_57_m_axi_bready->set_sv_netview_offsetfromdp(11227920);
        xsim_sc_channel<192, sc_dt::sc_bv<192> > *p_57_m_axi_araddr = new xsim_sc_channel<192, sc_dt::sc_bv<192> >();
        sc_inst_57->m_axi_araddr.bind(*p_57_m_axi_araddr);
        p_57_m_axi_araddr->set_sv_netview_offsetfromdp(11227976);
        xsim_sc_channel<9, sc_dt::sc_bv<9> > *p_57_m_axi_arprot = new xsim_sc_channel<9, sc_dt::sc_bv<9> >();
        sc_inst_57->m_axi_arprot.bind(*p_57_m_axi_arprot);
        p_57_m_axi_arprot->set_sv_netview_offsetfromdp(11228032);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_57_m_axi_arvalid = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_57->m_axi_arvalid.bind(*p_57_m_axi_arvalid);
        p_57_m_axi_arvalid->set_sv_netview_offsetfromdp(11228088);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_57_m_axi_arready = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_57->m_axi_arready.bind(*p_57_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_57_m_axi_arready);
        xsim_sc_channel<96, sc_dt::sc_bv<96> > *p_57_m_axi_rdata = new xsim_sc_channel<96, sc_dt::sc_bv<96> >();
        sc_inst_57->m_axi_rdata.bind(*p_57_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_57_m_axi_rdata);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_57_m_axi_rresp = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_57->m_axi_rresp.bind(*p_57_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_57_m_axi_rresp);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_57_m_axi_rvalid = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_57->m_axi_rvalid.bind(*p_57_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_57_m_axi_rvalid);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_57_m_axi_rready = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_57->m_axi_rready.bind(*p_57_m_axi_rready);
        p_57_m_axi_rready->set_sv_netview_offsetfromdp(11228368);
        sc_inst_58 = new pfm_dynamic_smartconn_data_0_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.smartconn_data_0");
        sc_inst_58->xsim_set_dbg_index(71);
        xsim_sc_channel<0, bool > *p_58_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_58->aclk.bind(*p_58_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_58_aclk);
        xsim_sc_channel<0, bool > *p_58_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_58->aresetn.bind(*p_58_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_58_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_58_S00_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_58->S00_AXI_awid.bind(*p_58_S00_AXI_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_58_S00_AXI_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_58_S00_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_58->S00_AXI_awaddr.bind(*p_58_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_58_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_58_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_58->S00_AXI_awlen.bind(*p_58_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_58_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_58_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_58->S00_AXI_awsize.bind(*p_58_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_58_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_58_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_58->S00_AXI_awburst.bind(*p_58_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_58_S00_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_58_S00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_58->S00_AXI_awlock.bind(*p_58_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_58_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_58_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_58->S00_AXI_awcache.bind(*p_58_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_58_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_58_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_58->S00_AXI_awprot.bind(*p_58_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_58_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_58_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_58->S00_AXI_awqos.bind(*p_58_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_58_S00_AXI_awqos);
        xsim_sc_channel<0, bool > *p_58_S00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_58->S00_AXI_awvalid.bind(*p_58_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_58_S00_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_58_S00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_58->S00_AXI_awready.bind(*p_58_S00_AXI_awready);
        p_58_S00_AXI_awready->set_sv_netview_offsetfromdp(12485072);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_58_S00_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_58->S00_AXI_wdata.bind(*p_58_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_58_S00_AXI_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_58_S00_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_58->S00_AXI_wstrb.bind(*p_58_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_58_S00_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_58_S00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_58->S00_AXI_wlast.bind(*p_58_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_58_S00_AXI_wlast);
        xsim_sc_channel<0, bool > *p_58_S00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_58->S00_AXI_wvalid.bind(*p_58_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_58_S00_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_58_S00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_58->S00_AXI_wready.bind(*p_58_S00_AXI_wready);
        p_58_S00_AXI_wready->set_sv_netview_offsetfromdp(12485352);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_58_S00_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_58->S00_AXI_bid.bind(*p_58_S00_AXI_bid);
        p_58_S00_AXI_bid->set_sv_netview_offsetfromdp(12485408);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_58_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_58->S00_AXI_bresp.bind(*p_58_S00_AXI_bresp);
        p_58_S00_AXI_bresp->set_sv_netview_offsetfromdp(12485464);
        xsim_sc_channel<0, bool > *p_58_S00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_58->S00_AXI_bvalid.bind(*p_58_S00_AXI_bvalid);
        p_58_S00_AXI_bvalid->set_sv_netview_offsetfromdp(12485520);
        xsim_sc_channel<0, bool > *p_58_S00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_58->S00_AXI_bready.bind(*p_58_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_58_S00_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_58_S00_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_58->S00_AXI_arid.bind(*p_58_S00_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_58_S00_AXI_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_58_S00_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_58->S00_AXI_araddr.bind(*p_58_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_58_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_58_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_58->S00_AXI_arlen.bind(*p_58_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_58_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_58_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_58->S00_AXI_arsize.bind(*p_58_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_58_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_58_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_58->S00_AXI_arburst.bind(*p_58_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_58_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_58_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_58->S00_AXI_arlock.bind(*p_58_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_58_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_58_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_58->S00_AXI_arcache.bind(*p_58_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_58_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_58_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_58->S00_AXI_arprot.bind(*p_58_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_58_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_58_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_58->S00_AXI_arqos.bind(*p_58_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_58_S00_AXI_arqos);
        xsim_sc_channel<0, bool > *p_58_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_58->S00_AXI_arvalid.bind(*p_58_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_58_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_58_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_58->S00_AXI_arready.bind(*p_58_S00_AXI_arready);
        p_58_S00_AXI_arready->set_sv_netview_offsetfromdp(12486192);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_58_S00_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_58->S00_AXI_rid.bind(*p_58_S00_AXI_rid);
        p_58_S00_AXI_rid->set_sv_netview_offsetfromdp(12486248);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_58_S00_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_58->S00_AXI_rdata.bind(*p_58_S00_AXI_rdata);
        p_58_S00_AXI_rdata->set_sv_netview_offsetfromdp(12486304);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_58_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_58->S00_AXI_rresp.bind(*p_58_S00_AXI_rresp);
        p_58_S00_AXI_rresp->set_sv_netview_offsetfromdp(12486360);
        xsim_sc_channel<0, bool > *p_58_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_58->S00_AXI_rlast.bind(*p_58_S00_AXI_rlast);
        p_58_S00_AXI_rlast->set_sv_netview_offsetfromdp(12486416);
        xsim_sc_channel<0, bool > *p_58_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_58->S00_AXI_rvalid.bind(*p_58_S00_AXI_rvalid);
        p_58_S00_AXI_rvalid->set_sv_netview_offsetfromdp(12486472);
        xsim_sc_channel<0, bool > *p_58_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_58->S00_AXI_rready.bind(*p_58_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_58_S00_AXI_rready);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_58_M00_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_58->M00_AXI_awaddr.bind(*p_58_M00_AXI_awaddr);
        p_58_M00_AXI_awaddr->set_sv_netview_offsetfromdp(12486584);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_58_M00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_58->M00_AXI_awlen.bind(*p_58_M00_AXI_awlen);
        p_58_M00_AXI_awlen->set_sv_netview_offsetfromdp(12486640);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_58_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_58->M00_AXI_awsize.bind(*p_58_M00_AXI_awsize);
        p_58_M00_AXI_awsize->set_sv_netview_offsetfromdp(12486696);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_58_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_58->M00_AXI_awburst.bind(*p_58_M00_AXI_awburst);
        p_58_M00_AXI_awburst->set_sv_netview_offsetfromdp(12486752);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_58_M00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_58->M00_AXI_awlock.bind(*p_58_M00_AXI_awlock);
        p_58_M00_AXI_awlock->set_sv_netview_offsetfromdp(12486808);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_58_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_58->M00_AXI_awcache.bind(*p_58_M00_AXI_awcache);
        p_58_M00_AXI_awcache->set_sv_netview_offsetfromdp(12486864);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_58_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_58->M00_AXI_awprot.bind(*p_58_M00_AXI_awprot);
        p_58_M00_AXI_awprot->set_sv_netview_offsetfromdp(12486920);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_58_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_58->M00_AXI_awqos.bind(*p_58_M00_AXI_awqos);
        p_58_M00_AXI_awqos->set_sv_netview_offsetfromdp(12486976);
        xsim_sc_channel<0, bool > *p_58_M00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_58->M00_AXI_awvalid.bind(*p_58_M00_AXI_awvalid);
        p_58_M00_AXI_awvalid->set_sv_netview_offsetfromdp(12487032);
        xsim_sc_channel<0, bool > *p_58_M00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_58->M00_AXI_awready.bind(*p_58_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_58_M00_AXI_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_58_M00_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_58->M00_AXI_wdata.bind(*p_58_M00_AXI_wdata);
        p_58_M00_AXI_wdata->set_sv_netview_offsetfromdp(12487144);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_58_M00_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_58->M00_AXI_wstrb.bind(*p_58_M00_AXI_wstrb);
        p_58_M00_AXI_wstrb->set_sv_netview_offsetfromdp(12487200);
        xsim_sc_channel<0, bool > *p_58_M00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_58->M00_AXI_wlast.bind(*p_58_M00_AXI_wlast);
        p_58_M00_AXI_wlast->set_sv_netview_offsetfromdp(12487256);
        xsim_sc_channel<0, bool > *p_58_M00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_58->M00_AXI_wvalid.bind(*p_58_M00_AXI_wvalid);
        p_58_M00_AXI_wvalid->set_sv_netview_offsetfromdp(12487312);
        xsim_sc_channel<0, bool > *p_58_M00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_58->M00_AXI_wready.bind(*p_58_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_58_M00_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_58_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_58->M00_AXI_bresp.bind(*p_58_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_58_M00_AXI_bresp);
        xsim_sc_channel<0, bool > *p_58_M00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_58->M00_AXI_bvalid.bind(*p_58_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_58_M00_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_58_M00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_58->M00_AXI_bready.bind(*p_58_M00_AXI_bready);
        p_58_M00_AXI_bready->set_sv_netview_offsetfromdp(12487536);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_58_M00_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_58->M00_AXI_araddr.bind(*p_58_M00_AXI_araddr);
        p_58_M00_AXI_araddr->set_sv_netview_offsetfromdp(12487592);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_58_M00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_58->M00_AXI_arlen.bind(*p_58_M00_AXI_arlen);
        p_58_M00_AXI_arlen->set_sv_netview_offsetfromdp(12487648);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_58_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_58->M00_AXI_arsize.bind(*p_58_M00_AXI_arsize);
        p_58_M00_AXI_arsize->set_sv_netview_offsetfromdp(12487704);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_58_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_58->M00_AXI_arburst.bind(*p_58_M00_AXI_arburst);
        p_58_M00_AXI_arburst->set_sv_netview_offsetfromdp(12487760);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_58_M00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_58->M00_AXI_arlock.bind(*p_58_M00_AXI_arlock);
        p_58_M00_AXI_arlock->set_sv_netview_offsetfromdp(12487816);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_58_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_58->M00_AXI_arcache.bind(*p_58_M00_AXI_arcache);
        p_58_M00_AXI_arcache->set_sv_netview_offsetfromdp(12487872);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_58_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_58->M00_AXI_arprot.bind(*p_58_M00_AXI_arprot);
        p_58_M00_AXI_arprot->set_sv_netview_offsetfromdp(12487928);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_58_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_58->M00_AXI_arqos.bind(*p_58_M00_AXI_arqos);
        p_58_M00_AXI_arqos->set_sv_netview_offsetfromdp(12487984);
        xsim_sc_channel<0, bool > *p_58_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_58->M00_AXI_arvalid.bind(*p_58_M00_AXI_arvalid);
        p_58_M00_AXI_arvalid->set_sv_netview_offsetfromdp(12488040);
        xsim_sc_channel<0, bool > *p_58_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_58->M00_AXI_arready.bind(*p_58_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_58_M00_AXI_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_58_M00_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_58->M00_AXI_rdata.bind(*p_58_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_58_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_58_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_58->M00_AXI_rresp.bind(*p_58_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_58_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_58_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_58->M00_AXI_rlast.bind(*p_58_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_58_M00_AXI_rlast);
        xsim_sc_channel<0, bool > *p_58_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_58->M00_AXI_rvalid.bind(*p_58_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_58_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_58_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_58->M00_AXI_rready.bind(*p_58_M00_AXI_rready);
        p_58_M00_AXI_rready->set_sv_netview_offsetfromdp(12488376);
        xsim_sc_channel<37, sc_dt::sc_bv<37> > *p_58_M01_AXI_awaddr = new xsim_sc_channel<37, sc_dt::sc_bv<37> >();
        sc_inst_58->M01_AXI_awaddr.bind(*p_58_M01_AXI_awaddr);
        p_58_M01_AXI_awaddr->set_sv_netview_offsetfromdp(12488432);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_58_M01_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_58->M01_AXI_awlen.bind(*p_58_M01_AXI_awlen);
        p_58_M01_AXI_awlen->set_sv_netview_offsetfromdp(12488488);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_58_M01_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_58->M01_AXI_awsize.bind(*p_58_M01_AXI_awsize);
        p_58_M01_AXI_awsize->set_sv_netview_offsetfromdp(12488544);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_58_M01_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_58->M01_AXI_awburst.bind(*p_58_M01_AXI_awburst);
        p_58_M01_AXI_awburst->set_sv_netview_offsetfromdp(12488600);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_58_M01_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_58->M01_AXI_awlock.bind(*p_58_M01_AXI_awlock);
        p_58_M01_AXI_awlock->set_sv_netview_offsetfromdp(12488656);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_58_M01_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_58->M01_AXI_awcache.bind(*p_58_M01_AXI_awcache);
        p_58_M01_AXI_awcache->set_sv_netview_offsetfromdp(12488712);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_58_M01_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_58->M01_AXI_awprot.bind(*p_58_M01_AXI_awprot);
        p_58_M01_AXI_awprot->set_sv_netview_offsetfromdp(12488768);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_58_M01_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_58->M01_AXI_awqos.bind(*p_58_M01_AXI_awqos);
        p_58_M01_AXI_awqos->set_sv_netview_offsetfromdp(12488824);
        xsim_sc_channel<0, bool > *p_58_M01_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_58->M01_AXI_awvalid.bind(*p_58_M01_AXI_awvalid);
        p_58_M01_AXI_awvalid->set_sv_netview_offsetfromdp(12488880);
        xsim_sc_channel<0, bool > *p_58_M01_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_58->M01_AXI_awready.bind(*p_58_M01_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_58_M01_AXI_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_58_M01_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_58->M01_AXI_wdata.bind(*p_58_M01_AXI_wdata);
        p_58_M01_AXI_wdata->set_sv_netview_offsetfromdp(12488992);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_58_M01_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_58->M01_AXI_wstrb.bind(*p_58_M01_AXI_wstrb);
        p_58_M01_AXI_wstrb->set_sv_netview_offsetfromdp(12489048);
        xsim_sc_channel<0, bool > *p_58_M01_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_58->M01_AXI_wlast.bind(*p_58_M01_AXI_wlast);
        p_58_M01_AXI_wlast->set_sv_netview_offsetfromdp(12489104);
        xsim_sc_channel<0, bool > *p_58_M01_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_58->M01_AXI_wvalid.bind(*p_58_M01_AXI_wvalid);
        p_58_M01_AXI_wvalid->set_sv_netview_offsetfromdp(12489160);
        xsim_sc_channel<0, bool > *p_58_M01_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_58->M01_AXI_wready.bind(*p_58_M01_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_58_M01_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_58_M01_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_58->M01_AXI_bresp.bind(*p_58_M01_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_58_M01_AXI_bresp);
        xsim_sc_channel<0, bool > *p_58_M01_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_58->M01_AXI_bvalid.bind(*p_58_M01_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_58_M01_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_58_M01_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_58->M01_AXI_bready.bind(*p_58_M01_AXI_bready);
        p_58_M01_AXI_bready->set_sv_netview_offsetfromdp(12489384);
        xsim_sc_channel<37, sc_dt::sc_bv<37> > *p_58_M01_AXI_araddr = new xsim_sc_channel<37, sc_dt::sc_bv<37> >();
        sc_inst_58->M01_AXI_araddr.bind(*p_58_M01_AXI_araddr);
        p_58_M01_AXI_araddr->set_sv_netview_offsetfromdp(12489440);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_58_M01_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_58->M01_AXI_arlen.bind(*p_58_M01_AXI_arlen);
        p_58_M01_AXI_arlen->set_sv_netview_offsetfromdp(12489496);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_58_M01_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_58->M01_AXI_arsize.bind(*p_58_M01_AXI_arsize);
        p_58_M01_AXI_arsize->set_sv_netview_offsetfromdp(12489552);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_58_M01_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_58->M01_AXI_arburst.bind(*p_58_M01_AXI_arburst);
        p_58_M01_AXI_arburst->set_sv_netview_offsetfromdp(12489608);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_58_M01_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_58->M01_AXI_arlock.bind(*p_58_M01_AXI_arlock);
        p_58_M01_AXI_arlock->set_sv_netview_offsetfromdp(12489664);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_58_M01_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_58->M01_AXI_arcache.bind(*p_58_M01_AXI_arcache);
        p_58_M01_AXI_arcache->set_sv_netview_offsetfromdp(12489720);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_58_M01_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_58->M01_AXI_arprot.bind(*p_58_M01_AXI_arprot);
        p_58_M01_AXI_arprot->set_sv_netview_offsetfromdp(12489776);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_58_M01_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_58->M01_AXI_arqos.bind(*p_58_M01_AXI_arqos);
        p_58_M01_AXI_arqos->set_sv_netview_offsetfromdp(12489832);
        xsim_sc_channel<0, bool > *p_58_M01_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_58->M01_AXI_arvalid.bind(*p_58_M01_AXI_arvalid);
        p_58_M01_AXI_arvalid->set_sv_netview_offsetfromdp(12489888);
        xsim_sc_channel<0, bool > *p_58_M01_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_58->M01_AXI_arready.bind(*p_58_M01_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_58_M01_AXI_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_58_M01_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_58->M01_AXI_rdata.bind(*p_58_M01_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_58_M01_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_58_M01_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_58->M01_AXI_rresp.bind(*p_58_M01_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_58_M01_AXI_rresp);
        xsim_sc_channel<0, bool > *p_58_M01_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_58->M01_AXI_rlast.bind(*p_58_M01_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_58_M01_AXI_rlast);
        xsim_sc_channel<0, bool > *p_58_M01_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_58->M01_AXI_rvalid.bind(*p_58_M01_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_58_M01_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_58_M01_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_58->M01_AXI_rready.bind(*p_58_M01_AXI_rready);
        p_58_M01_AXI_rready->set_sv_netview_offsetfromdp(12490224);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_58_M02_AXI_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_58->M02_AXI_awaddr.bind(*p_58_M02_AXI_awaddr);
        p_58_M02_AXI_awaddr->set_sv_netview_offsetfromdp(12490280);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_58_M02_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_58->M02_AXI_awlen.bind(*p_58_M02_AXI_awlen);
        p_58_M02_AXI_awlen->set_sv_netview_offsetfromdp(12490336);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_58_M02_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_58->M02_AXI_awsize.bind(*p_58_M02_AXI_awsize);
        p_58_M02_AXI_awsize->set_sv_netview_offsetfromdp(12490392);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_58_M02_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_58->M02_AXI_awburst.bind(*p_58_M02_AXI_awburst);
        p_58_M02_AXI_awburst->set_sv_netview_offsetfromdp(12490448);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_58_M02_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_58->M02_AXI_awlock.bind(*p_58_M02_AXI_awlock);
        p_58_M02_AXI_awlock->set_sv_netview_offsetfromdp(12490504);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_58_M02_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_58->M02_AXI_awcache.bind(*p_58_M02_AXI_awcache);
        p_58_M02_AXI_awcache->set_sv_netview_offsetfromdp(12490560);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_58_M02_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_58->M02_AXI_awprot.bind(*p_58_M02_AXI_awprot);
        p_58_M02_AXI_awprot->set_sv_netview_offsetfromdp(12490616);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_58_M02_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_58->M02_AXI_awqos.bind(*p_58_M02_AXI_awqos);
        p_58_M02_AXI_awqos->set_sv_netview_offsetfromdp(12490672);
        xsim_sc_channel<0, bool > *p_58_M02_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_58->M02_AXI_awvalid.bind(*p_58_M02_AXI_awvalid);
        p_58_M02_AXI_awvalid->set_sv_netview_offsetfromdp(12490728);
        xsim_sc_channel<0, bool > *p_58_M02_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_58->M02_AXI_awready.bind(*p_58_M02_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_58_M02_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_58_M02_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_58->M02_AXI_wdata.bind(*p_58_M02_AXI_wdata);
        p_58_M02_AXI_wdata->set_sv_netview_offsetfromdp(12490840);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_58_M02_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_58->M02_AXI_wstrb.bind(*p_58_M02_AXI_wstrb);
        p_58_M02_AXI_wstrb->set_sv_netview_offsetfromdp(12490896);
        xsim_sc_channel<0, bool > *p_58_M02_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_58->M02_AXI_wlast.bind(*p_58_M02_AXI_wlast);
        p_58_M02_AXI_wlast->set_sv_netview_offsetfromdp(12490952);
        xsim_sc_channel<0, bool > *p_58_M02_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_58->M02_AXI_wvalid.bind(*p_58_M02_AXI_wvalid);
        p_58_M02_AXI_wvalid->set_sv_netview_offsetfromdp(12491008);
        xsim_sc_channel<0, bool > *p_58_M02_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_58->M02_AXI_wready.bind(*p_58_M02_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_58_M02_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_58_M02_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_58->M02_AXI_bresp.bind(*p_58_M02_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_58_M02_AXI_bresp);
        xsim_sc_channel<0, bool > *p_58_M02_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_58->M02_AXI_bvalid.bind(*p_58_M02_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_58_M02_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_58_M02_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_58->M02_AXI_bready.bind(*p_58_M02_AXI_bready);
        p_58_M02_AXI_bready->set_sv_netview_offsetfromdp(12491232);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_58_M02_AXI_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_58->M02_AXI_araddr.bind(*p_58_M02_AXI_araddr);
        p_58_M02_AXI_araddr->set_sv_netview_offsetfromdp(12491288);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_58_M02_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_58->M02_AXI_arlen.bind(*p_58_M02_AXI_arlen);
        p_58_M02_AXI_arlen->set_sv_netview_offsetfromdp(12491344);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_58_M02_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_58->M02_AXI_arsize.bind(*p_58_M02_AXI_arsize);
        p_58_M02_AXI_arsize->set_sv_netview_offsetfromdp(12491400);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_58_M02_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_58->M02_AXI_arburst.bind(*p_58_M02_AXI_arburst);
        p_58_M02_AXI_arburst->set_sv_netview_offsetfromdp(12491456);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_58_M02_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_58->M02_AXI_arlock.bind(*p_58_M02_AXI_arlock);
        p_58_M02_AXI_arlock->set_sv_netview_offsetfromdp(12491512);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_58_M02_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_58->M02_AXI_arcache.bind(*p_58_M02_AXI_arcache);
        p_58_M02_AXI_arcache->set_sv_netview_offsetfromdp(12491568);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_58_M02_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_58->M02_AXI_arprot.bind(*p_58_M02_AXI_arprot);
        p_58_M02_AXI_arprot->set_sv_netview_offsetfromdp(12491624);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_58_M02_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_58->M02_AXI_arqos.bind(*p_58_M02_AXI_arqos);
        p_58_M02_AXI_arqos->set_sv_netview_offsetfromdp(12491680);
        xsim_sc_channel<0, bool > *p_58_M02_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_58->M02_AXI_arvalid.bind(*p_58_M02_AXI_arvalid);
        p_58_M02_AXI_arvalid->set_sv_netview_offsetfromdp(12491736);
        xsim_sc_channel<0, bool > *p_58_M02_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_58->M02_AXI_arready.bind(*p_58_M02_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_58_M02_AXI_arready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_58_M02_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_58->M02_AXI_rdata.bind(*p_58_M02_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_58_M02_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_58_M02_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_58->M02_AXI_rresp.bind(*p_58_M02_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_58_M02_AXI_rresp);
        xsim_sc_channel<0, bool > *p_58_M02_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_58->M02_AXI_rlast.bind(*p_58_M02_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_58_M02_AXI_rlast);
        xsim_sc_channel<0, bool > *p_58_M02_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_58->M02_AXI_rvalid.bind(*p_58_M02_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_58_M02_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_58_M02_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_58->M02_AXI_rready.bind(*p_58_M02_AXI_rready);
        p_58_M02_AXI_rready->set_sv_netview_offsetfromdp(12492072);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_58_M03_AXI_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_58->M03_AXI_awaddr.bind(*p_58_M03_AXI_awaddr);
        p_58_M03_AXI_awaddr->set_sv_netview_offsetfromdp(12492128);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_58_M03_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_58->M03_AXI_awlen.bind(*p_58_M03_AXI_awlen);
        p_58_M03_AXI_awlen->set_sv_netview_offsetfromdp(12492184);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_58_M03_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_58->M03_AXI_awsize.bind(*p_58_M03_AXI_awsize);
        p_58_M03_AXI_awsize->set_sv_netview_offsetfromdp(12492240);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_58_M03_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_58->M03_AXI_awburst.bind(*p_58_M03_AXI_awburst);
        p_58_M03_AXI_awburst->set_sv_netview_offsetfromdp(12492296);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_58_M03_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_58->M03_AXI_awlock.bind(*p_58_M03_AXI_awlock);
        p_58_M03_AXI_awlock->set_sv_netview_offsetfromdp(12492352);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_58_M03_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_58->M03_AXI_awcache.bind(*p_58_M03_AXI_awcache);
        p_58_M03_AXI_awcache->set_sv_netview_offsetfromdp(12492408);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_58_M03_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_58->M03_AXI_awprot.bind(*p_58_M03_AXI_awprot);
        p_58_M03_AXI_awprot->set_sv_netview_offsetfromdp(12492464);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_58_M03_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_58->M03_AXI_awqos.bind(*p_58_M03_AXI_awqos);
        p_58_M03_AXI_awqos->set_sv_netview_offsetfromdp(12492520);
        xsim_sc_channel<0, bool > *p_58_M03_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_58->M03_AXI_awvalid.bind(*p_58_M03_AXI_awvalid);
        p_58_M03_AXI_awvalid->set_sv_netview_offsetfromdp(12492576);
        xsim_sc_channel<0, bool > *p_58_M03_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_58->M03_AXI_awready.bind(*p_58_M03_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_58_M03_AXI_awready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_58_M03_AXI_wdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_58->M03_AXI_wdata.bind(*p_58_M03_AXI_wdata);
        p_58_M03_AXI_wdata->set_sv_netview_offsetfromdp(12492688);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_58_M03_AXI_wstrb = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_58->M03_AXI_wstrb.bind(*p_58_M03_AXI_wstrb);
        p_58_M03_AXI_wstrb->set_sv_netview_offsetfromdp(12492744);
        xsim_sc_channel<0, bool > *p_58_M03_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_58->M03_AXI_wlast.bind(*p_58_M03_AXI_wlast);
        p_58_M03_AXI_wlast->set_sv_netview_offsetfromdp(12492800);
        xsim_sc_channel<0, bool > *p_58_M03_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_58->M03_AXI_wvalid.bind(*p_58_M03_AXI_wvalid);
        p_58_M03_AXI_wvalid->set_sv_netview_offsetfromdp(12492856);
        xsim_sc_channel<0, bool > *p_58_M03_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_58->M03_AXI_wready.bind(*p_58_M03_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_58_M03_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_58_M03_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_58->M03_AXI_bresp.bind(*p_58_M03_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_58_M03_AXI_bresp);
        xsim_sc_channel<0, bool > *p_58_M03_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_58->M03_AXI_bvalid.bind(*p_58_M03_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_58_M03_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_58_M03_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_58->M03_AXI_bready.bind(*p_58_M03_AXI_bready);
        p_58_M03_AXI_bready->set_sv_netview_offsetfromdp(12493080);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_58_M03_AXI_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_58->M03_AXI_araddr.bind(*p_58_M03_AXI_araddr);
        p_58_M03_AXI_araddr->set_sv_netview_offsetfromdp(12493136);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_58_M03_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_58->M03_AXI_arlen.bind(*p_58_M03_AXI_arlen);
        p_58_M03_AXI_arlen->set_sv_netview_offsetfromdp(12493192);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_58_M03_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_58->M03_AXI_arsize.bind(*p_58_M03_AXI_arsize);
        p_58_M03_AXI_arsize->set_sv_netview_offsetfromdp(12493248);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_58_M03_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_58->M03_AXI_arburst.bind(*p_58_M03_AXI_arburst);
        p_58_M03_AXI_arburst->set_sv_netview_offsetfromdp(12493304);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_58_M03_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_58->M03_AXI_arlock.bind(*p_58_M03_AXI_arlock);
        p_58_M03_AXI_arlock->set_sv_netview_offsetfromdp(12493360);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_58_M03_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_58->M03_AXI_arcache.bind(*p_58_M03_AXI_arcache);
        p_58_M03_AXI_arcache->set_sv_netview_offsetfromdp(12493416);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_58_M03_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_58->M03_AXI_arprot.bind(*p_58_M03_AXI_arprot);
        p_58_M03_AXI_arprot->set_sv_netview_offsetfromdp(12493472);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_58_M03_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_58->M03_AXI_arqos.bind(*p_58_M03_AXI_arqos);
        p_58_M03_AXI_arqos->set_sv_netview_offsetfromdp(12493528);
        xsim_sc_channel<0, bool > *p_58_M03_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_58->M03_AXI_arvalid.bind(*p_58_M03_AXI_arvalid);
        p_58_M03_AXI_arvalid->set_sv_netview_offsetfromdp(12493584);
        xsim_sc_channel<0, bool > *p_58_M03_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_58->M03_AXI_arready.bind(*p_58_M03_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_58_M03_AXI_arready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_58_M03_AXI_rdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_58->M03_AXI_rdata.bind(*p_58_M03_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_58_M03_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_58_M03_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_58->M03_AXI_rresp.bind(*p_58_M03_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_58_M03_AXI_rresp);
        xsim_sc_channel<0, bool > *p_58_M03_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_58->M03_AXI_rlast.bind(*p_58_M03_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_58_M03_AXI_rlast);
        xsim_sc_channel<0, bool > *p_58_M03_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_58->M03_AXI_rvalid.bind(*p_58_M03_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_58_M03_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_58_M03_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_58->M03_AXI_rready.bind(*p_58_M03_AXI_rready);
        p_58_M03_AXI_rready->set_sv_netview_offsetfromdp(12493920);
        sc_inst_59 = new pfm_top_sci(".pfm_top_wrapper.pfm_top_i.pfm_top_sci_inst");
        sc_inst_59->xsim_set_dbg_index(45);
        sc_inst_60 = new pfm_top_axi_vip_0_0(".pfm_top_wrapper.pfm_top_i.static_region.axi_vip_0");
        sc_inst_60->xsim_set_dbg_index(257);
        xsim_sc_channel<0, bool > *p_60_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_60->aclk.bind(*p_60_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_60_aclk);
        xsim_sc_channel<0, bool > *p_60_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_60->aresetn.bind(*p_60_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_60_aresetn);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_60_s_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_60->s_axi_awaddr.bind(*p_60_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_60_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_60_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_60->s_axi_awlen.bind(*p_60_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_60_s_axi_awlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_60_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_60->s_axi_awburst.bind(*p_60_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_60_s_axi_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_60_s_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_60->s_axi_awlock.bind(*p_60_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_60_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_60_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_60->s_axi_awcache.bind(*p_60_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_60_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_60_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_60->s_axi_awprot.bind(*p_60_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_60_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_60_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_60->s_axi_awqos.bind(*p_60_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_60_s_axi_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_60_s_axi_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_60->s_axi_awuser.bind(*p_60_s_axi_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_60_s_axi_awuser);
        xsim_sc_channel<0, bool > *p_60_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_60->s_axi_awvalid.bind(*p_60_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_60_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_60_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_60->s_axi_awready.bind(*p_60_s_axi_awready);
        p_60_s_axi_awready->set_sv_netview_offsetfromdp(12673776);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_60_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_60->s_axi_wdata.bind(*p_60_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_60_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_60_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_60->s_axi_wstrb.bind(*p_60_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_60_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_60_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_60->s_axi_wlast.bind(*p_60_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_60_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_60_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_60->s_axi_wvalid.bind(*p_60_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_60_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_60_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_60->s_axi_wready.bind(*p_60_s_axi_wready);
        p_60_s_axi_wready->set_sv_netview_offsetfromdp(12674056);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_60_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_60->s_axi_bresp.bind(*p_60_s_axi_bresp);
        p_60_s_axi_bresp->set_sv_netview_offsetfromdp(12674112);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_60_s_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_60->s_axi_buser.bind(*p_60_s_axi_buser);
        p_60_s_axi_buser->set_sv_netview_offsetfromdp(12674168);
        xsim_sc_channel<0, bool > *p_60_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_60->s_axi_bvalid.bind(*p_60_s_axi_bvalid);
        p_60_s_axi_bvalid->set_sv_netview_offsetfromdp(12674224);
        xsim_sc_channel<0, bool > *p_60_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_60->s_axi_bready.bind(*p_60_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_60_s_axi_bready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_60_s_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_60->s_axi_araddr.bind(*p_60_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_60_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_60_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_60->s_axi_arlen.bind(*p_60_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_60_s_axi_arlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_60_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_60->s_axi_arburst.bind(*p_60_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_60_s_axi_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_60_s_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_60->s_axi_arlock.bind(*p_60_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_60_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_60_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_60->s_axi_arcache.bind(*p_60_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_60_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_60_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_60->s_axi_arprot.bind(*p_60_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_60_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_60_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_60->s_axi_arqos.bind(*p_60_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_60_s_axi_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_60_s_axi_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_60->s_axi_aruser.bind(*p_60_s_axi_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_60_s_axi_aruser);
        xsim_sc_channel<0, bool > *p_60_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_60->s_axi_arvalid.bind(*p_60_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_60_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_60_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_60->s_axi_arready.bind(*p_60_s_axi_arready);
        p_60_s_axi_arready->set_sv_netview_offsetfromdp(12674840);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_60_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_60->s_axi_rdata.bind(*p_60_s_axi_rdata);
        p_60_s_axi_rdata->set_sv_netview_offsetfromdp(12674896);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_60_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_60->s_axi_rresp.bind(*p_60_s_axi_rresp);
        p_60_s_axi_rresp->set_sv_netview_offsetfromdp(12674952);
        xsim_sc_channel<0, bool > *p_60_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_60->s_axi_rlast.bind(*p_60_s_axi_rlast);
        p_60_s_axi_rlast->set_sv_netview_offsetfromdp(12675008);
        xsim_sc_channel<0, bool > *p_60_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_60->s_axi_rvalid.bind(*p_60_s_axi_rvalid);
        p_60_s_axi_rvalid->set_sv_netview_offsetfromdp(12675064);
        xsim_sc_channel<0, bool > *p_60_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_60->s_axi_rready.bind(*p_60_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_60_s_axi_rready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_60_m_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_60->m_axi_awaddr.bind(*p_60_m_axi_awaddr);
        p_60_m_axi_awaddr->set_sv_netview_offsetfromdp(12675176);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_60_m_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_60->m_axi_awlen.bind(*p_60_m_axi_awlen);
        p_60_m_axi_awlen->set_sv_netview_offsetfromdp(12675232);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_60_m_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_60->m_axi_awburst.bind(*p_60_m_axi_awburst);
        p_60_m_axi_awburst->set_sv_netview_offsetfromdp(12675288);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_60_m_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_60->m_axi_awlock.bind(*p_60_m_axi_awlock);
        p_60_m_axi_awlock->set_sv_netview_offsetfromdp(12675344);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_60_m_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_60->m_axi_awcache.bind(*p_60_m_axi_awcache);
        p_60_m_axi_awcache->set_sv_netview_offsetfromdp(12675400);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_60_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_60->m_axi_awprot.bind(*p_60_m_axi_awprot);
        p_60_m_axi_awprot->set_sv_netview_offsetfromdp(12675456);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_60_m_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_60->m_axi_awqos.bind(*p_60_m_axi_awqos);
        p_60_m_axi_awqos->set_sv_netview_offsetfromdp(12675512);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_60_m_axi_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_60->m_axi_awuser.bind(*p_60_m_axi_awuser);
        p_60_m_axi_awuser->set_sv_netview_offsetfromdp(12675568);
        xsim_sc_channel<0, bool > *p_60_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_60->m_axi_awvalid.bind(*p_60_m_axi_awvalid);
        p_60_m_axi_awvalid->set_sv_netview_offsetfromdp(12675624);
        xsim_sc_channel<0, bool > *p_60_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_60->m_axi_awready.bind(*p_60_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_60_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_60_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_60->m_axi_wdata.bind(*p_60_m_axi_wdata);
        p_60_m_axi_wdata->set_sv_netview_offsetfromdp(12675736);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_60_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_60->m_axi_wstrb.bind(*p_60_m_axi_wstrb);
        p_60_m_axi_wstrb->set_sv_netview_offsetfromdp(12675792);
        xsim_sc_channel<0, bool > *p_60_m_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_60->m_axi_wlast.bind(*p_60_m_axi_wlast);
        p_60_m_axi_wlast->set_sv_netview_offsetfromdp(12675848);
        xsim_sc_channel<0, bool > *p_60_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_60->m_axi_wvalid.bind(*p_60_m_axi_wvalid);
        p_60_m_axi_wvalid->set_sv_netview_offsetfromdp(12675904);
        xsim_sc_channel<0, bool > *p_60_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_60->m_axi_wready.bind(*p_60_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_60_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_60_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_60->m_axi_bresp.bind(*p_60_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_60_m_axi_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_60_m_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_60->m_axi_buser.bind(*p_60_m_axi_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_60_m_axi_buser);
        xsim_sc_channel<0, bool > *p_60_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_60->m_axi_bvalid.bind(*p_60_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_60_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_60_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_60->m_axi_bready.bind(*p_60_m_axi_bready);
        p_60_m_axi_bready->set_sv_netview_offsetfromdp(12676184);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_60_m_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_60->m_axi_araddr.bind(*p_60_m_axi_araddr);
        p_60_m_axi_araddr->set_sv_netview_offsetfromdp(12676240);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_60_m_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_60->m_axi_arlen.bind(*p_60_m_axi_arlen);
        p_60_m_axi_arlen->set_sv_netview_offsetfromdp(12676296);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_60_m_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_60->m_axi_arburst.bind(*p_60_m_axi_arburst);
        p_60_m_axi_arburst->set_sv_netview_offsetfromdp(12676352);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_60_m_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_60->m_axi_arlock.bind(*p_60_m_axi_arlock);
        p_60_m_axi_arlock->set_sv_netview_offsetfromdp(12676408);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_60_m_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_60->m_axi_arcache.bind(*p_60_m_axi_arcache);
        p_60_m_axi_arcache->set_sv_netview_offsetfromdp(12676464);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_60_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_60->m_axi_arprot.bind(*p_60_m_axi_arprot);
        p_60_m_axi_arprot->set_sv_netview_offsetfromdp(12676520);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_60_m_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_60->m_axi_arqos.bind(*p_60_m_axi_arqos);
        p_60_m_axi_arqos->set_sv_netview_offsetfromdp(12676576);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_60_m_axi_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_60->m_axi_aruser.bind(*p_60_m_axi_aruser);
        p_60_m_axi_aruser->set_sv_netview_offsetfromdp(12676632);
        xsim_sc_channel<0, bool > *p_60_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_60->m_axi_arvalid.bind(*p_60_m_axi_arvalid);
        p_60_m_axi_arvalid->set_sv_netview_offsetfromdp(12676688);
        xsim_sc_channel<0, bool > *p_60_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_60->m_axi_arready.bind(*p_60_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_60_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_60_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_60->m_axi_rdata.bind(*p_60_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_60_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_60_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_60->m_axi_rresp.bind(*p_60_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_60_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_60_m_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_60->m_axi_rlast.bind(*p_60_m_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_60_m_axi_rlast);
        xsim_sc_channel<0, bool > *p_60_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_60->m_axi_rvalid.bind(*p_60_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_60_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_60_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_60->m_axi_rready.bind(*p_60_m_axi_rready);
        p_60_m_axi_rready->set_sv_netview_offsetfromdp(12677024);
        sc_inst_61 = new pfm_top_xbar_0(".pfm_top_wrapper.pfm_top_i.static_region.connect_to_es_cu.xbar");
        sc_inst_61->xsim_set_dbg_index(654);
        xsim_sc_channel<0, bool > *p_61_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_61->aclk.bind(*p_61_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_61_aclk);
        xsim_sc_channel<0, bool > *p_61_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_61->aresetn.bind(*p_61_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_61_aresetn);
        xsim_sc_channel<128, sc_dt::sc_bv<128> > *p_61_s_axi_awaddr = new xsim_sc_channel<128, sc_dt::sc_bv<128> >();
        sc_inst_61->s_axi_awaddr.bind(*p_61_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_61_s_axi_awaddr);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_61_s_axi_awprot = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_61->s_axi_awprot.bind(*p_61_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_61_s_axi_awprot);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_61_s_axi_awvalid = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_61->s_axi_awvalid.bind(*p_61_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_61_s_axi_awvalid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_61_s_axi_awready = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_61->s_axi_awready.bind(*p_61_s_axi_awready);
        p_61_s_axi_awready->set_sv_netview_offsetfromdp(12792160);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_61_s_axi_wdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_61->s_axi_wdata.bind(*p_61_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_61_s_axi_wdata);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_61_s_axi_wstrb = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_61->s_axi_wstrb.bind(*p_61_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_61_s_axi_wstrb);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_61_s_axi_wvalid = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_61->s_axi_wvalid.bind(*p_61_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_61_s_axi_wvalid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_61_s_axi_wready = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_61->s_axi_wready.bind(*p_61_s_axi_wready);
        p_61_s_axi_wready->set_sv_netview_offsetfromdp(12792384);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_61_s_axi_bresp = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_61->s_axi_bresp.bind(*p_61_s_axi_bresp);
        p_61_s_axi_bresp->set_sv_netview_offsetfromdp(12792440);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_61_s_axi_bvalid = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_61->s_axi_bvalid.bind(*p_61_s_axi_bvalid);
        p_61_s_axi_bvalid->set_sv_netview_offsetfromdp(12792496);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_61_s_axi_bready = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_61->s_axi_bready.bind(*p_61_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_61_s_axi_bready);
        xsim_sc_channel<128, sc_dt::sc_bv<128> > *p_61_s_axi_araddr = new xsim_sc_channel<128, sc_dt::sc_bv<128> >();
        sc_inst_61->s_axi_araddr.bind(*p_61_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_61_s_axi_araddr);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_61_s_axi_arprot = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_61->s_axi_arprot.bind(*p_61_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_61_s_axi_arprot);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_61_s_axi_arvalid = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_61->s_axi_arvalid.bind(*p_61_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_61_s_axi_arvalid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_61_s_axi_arready = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_61->s_axi_arready.bind(*p_61_s_axi_arready);
        p_61_s_axi_arready->set_sv_netview_offsetfromdp(12792776);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_61_s_axi_rdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_61->s_axi_rdata.bind(*p_61_s_axi_rdata);
        p_61_s_axi_rdata->set_sv_netview_offsetfromdp(12792832);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_61_s_axi_rresp = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_61->s_axi_rresp.bind(*p_61_s_axi_rresp);
        p_61_s_axi_rresp->set_sv_netview_offsetfromdp(12792888);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_61_s_axi_rvalid = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_61->s_axi_rvalid.bind(*p_61_s_axi_rvalid);
        p_61_s_axi_rvalid->set_sv_netview_offsetfromdp(12792944);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_61_s_axi_rready = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_61->s_axi_rready.bind(*p_61_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_61_s_axi_rready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_61_m_axi_awaddr = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_61->m_axi_awaddr.bind(*p_61_m_axi_awaddr);
        p_61_m_axi_awaddr->set_sv_netview_offsetfromdp(12793056);
        xsim_sc_channel<12, sc_dt::sc_bv<12> > *p_61_m_axi_awprot = new xsim_sc_channel<12, sc_dt::sc_bv<12> >();
        sc_inst_61->m_axi_awprot.bind(*p_61_m_axi_awprot);
        p_61_m_axi_awprot->set_sv_netview_offsetfromdp(12793112);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_61_m_axi_awvalid = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_61->m_axi_awvalid.bind(*p_61_m_axi_awvalid);
        p_61_m_axi_awvalid->set_sv_netview_offsetfromdp(12793168);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_61_m_axi_awready = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_61->m_axi_awready.bind(*p_61_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_61_m_axi_awready);
        xsim_sc_channel<128, sc_dt::sc_bv<128> > *p_61_m_axi_wdata = new xsim_sc_channel<128, sc_dt::sc_bv<128> >();
        sc_inst_61->m_axi_wdata.bind(*p_61_m_axi_wdata);
        p_61_m_axi_wdata->set_sv_netview_offsetfromdp(12793280);
        xsim_sc_channel<16, sc_dt::sc_bv<16> > *p_61_m_axi_wstrb = new xsim_sc_channel<16, sc_dt::sc_bv<16> >();
        sc_inst_61->m_axi_wstrb.bind(*p_61_m_axi_wstrb);
        p_61_m_axi_wstrb->set_sv_netview_offsetfromdp(12793336);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_61_m_axi_wvalid = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_61->m_axi_wvalid.bind(*p_61_m_axi_wvalid);
        p_61_m_axi_wvalid->set_sv_netview_offsetfromdp(12793392);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_61_m_axi_wready = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_61->m_axi_wready.bind(*p_61_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_61_m_axi_wready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_61_m_axi_bresp = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_61->m_axi_bresp.bind(*p_61_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_61_m_axi_bresp);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_61_m_axi_bvalid = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_61->m_axi_bvalid.bind(*p_61_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_61_m_axi_bvalid);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_61_m_axi_bready = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_61->m_axi_bready.bind(*p_61_m_axi_bready);
        p_61_m_axi_bready->set_sv_netview_offsetfromdp(12793616);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_61_m_axi_araddr = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_61->m_axi_araddr.bind(*p_61_m_axi_araddr);
        p_61_m_axi_araddr->set_sv_netview_offsetfromdp(12793672);
        xsim_sc_channel<12, sc_dt::sc_bv<12> > *p_61_m_axi_arprot = new xsim_sc_channel<12, sc_dt::sc_bv<12> >();
        sc_inst_61->m_axi_arprot.bind(*p_61_m_axi_arprot);
        p_61_m_axi_arprot->set_sv_netview_offsetfromdp(12793728);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_61_m_axi_arvalid = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_61->m_axi_arvalid.bind(*p_61_m_axi_arvalid);
        p_61_m_axi_arvalid->set_sv_netview_offsetfromdp(12793784);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_61_m_axi_arready = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_61->m_axi_arready.bind(*p_61_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_61_m_axi_arready);
        xsim_sc_channel<128, sc_dt::sc_bv<128> > *p_61_m_axi_rdata = new xsim_sc_channel<128, sc_dt::sc_bv<128> >();
        sc_inst_61->m_axi_rdata.bind(*p_61_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_61_m_axi_rdata);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_61_m_axi_rresp = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_61->m_axi_rresp.bind(*p_61_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_61_m_axi_rresp);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_61_m_axi_rvalid = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_61->m_axi_rvalid.bind(*p_61_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_61_m_axi_rvalid);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_61_m_axi_rready = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_61->m_axi_rready.bind(*p_61_m_axi_rready);
        p_61_m_axi_rready->set_sv_netview_offsetfromdp(12794064);
        sc_inst_62 = new pfm_top_embedded_schedular_0(".pfm_top_wrapper.pfm_top_i.static_region.embedded_schedular");
        sc_inst_62->xsim_set_dbg_index(261);
        xsim_sc_channel<128, sc_dt::sc_bv<128> > *p_62_interrupt_cu = new xsim_sc_channel<128, sc_dt::sc_bv<128> >();
        sc_inst_62->interrupt_cu.bind(*p_62_interrupt_cu);
        (*_glb_hdl_sc_channel_map).push_back(p_62_interrupt_cu);
        xsim_sc_channel<0, bool > *p_62_interrupt_m2m = new xsim_sc_channel<0, bool >();
        sc_inst_62->interrupt_m2m.bind(*p_62_interrupt_m2m);
        p_62_interrupt_m2m->set_sv_netview_offsetfromdp(12795952);
        xsim_sc_channel<0, bool > *p_62_s_axi_ctrl_user_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_62->s_axi_ctrl_user_aresetn.bind(*p_62_s_axi_ctrl_user_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_62_s_axi_ctrl_user_aresetn);
        xsim_sc_channel<0, bool > *p_62_s_axi_data_p2p_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_62->s_axi_data_p2p_aresetn.bind(*p_62_s_axi_data_p2p_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_62_s_axi_data_p2p_aresetn);
        xsim_sc_channel<0, bool > *p_62_maxi_lite_mb_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_62->maxi_lite_mb_aresetn.bind(*p_62_maxi_lite_mb_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_62_maxi_lite_mb_aresetn);
        xsim_sc_channel<0, bool > *p_62_m_axi_data_m2m_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_62->m_axi_data_m2m_aresetn.bind(*p_62_m_axi_data_m2m_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_62_m_axi_data_m2m_aresetn);
        xsim_sc_channel<0, bool > *p_62_s_axi_ctrl_user_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_62->s_axi_ctrl_user_aclk.bind(*p_62_s_axi_ctrl_user_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_62_s_axi_ctrl_user_aclk);
        xsim_sc_channel<0, bool > *p_62_s_axi_data_p2p_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_62->s_axi_data_p2p_aclk.bind(*p_62_s_axi_data_p2p_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_62_s_axi_data_p2p_aclk);
        xsim_sc_channel<0, bool > *p_62_maxi_lite_mb_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_62->maxi_lite_mb_aclk.bind(*p_62_maxi_lite_mb_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_62_maxi_lite_mb_aclk);
        xsim_sc_channel<0, bool > *p_62_m_axi_data_m2m_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_62->m_axi_data_m2m_aclk.bind(*p_62_m_axi_data_m2m_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_62_m_axi_data_m2m_aclk);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_62_s_axi_data_p2p_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_62->s_axi_data_p2p_awaddr.bind(*p_62_s_axi_data_p2p_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_62_s_axi_data_p2p_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_62_s_axi_data_p2p_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_62->s_axi_data_p2p_awlen.bind(*p_62_s_axi_data_p2p_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_62_s_axi_data_p2p_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_62_s_axi_data_p2p_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_62->s_axi_data_p2p_awsize.bind(*p_62_s_axi_data_p2p_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_62_s_axi_data_p2p_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_62_s_axi_data_p2p_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_62->s_axi_data_p2p_awburst.bind(*p_62_s_axi_data_p2p_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_62_s_axi_data_p2p_awburst);
        xsim_sc_channel<0, bool > *p_62_s_axi_data_p2p_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_62->s_axi_data_p2p_awlock.bind(*p_62_s_axi_data_p2p_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_62_s_axi_data_p2p_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_62_s_axi_data_p2p_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_62->s_axi_data_p2p_awcache.bind(*p_62_s_axi_data_p2p_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_62_s_axi_data_p2p_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_62_s_axi_data_p2p_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_62->s_axi_data_p2p_awprot.bind(*p_62_s_axi_data_p2p_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_62_s_axi_data_p2p_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_62_s_axi_data_p2p_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_62->s_axi_data_p2p_awregion.bind(*p_62_s_axi_data_p2p_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_62_s_axi_data_p2p_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_62_s_axi_data_p2p_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_62->s_axi_data_p2p_awqos.bind(*p_62_s_axi_data_p2p_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_62_s_axi_data_p2p_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_62_s_axi_data_p2p_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_62->s_axi_data_p2p_awuser.bind(*p_62_s_axi_data_p2p_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_62_s_axi_data_p2p_awuser);
        xsim_sc_channel<0, bool > *p_62_s_axi_data_p2p_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_62->s_axi_data_p2p_awvalid.bind(*p_62_s_axi_data_p2p_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_62_s_axi_data_p2p_awvalid);
        xsim_sc_channel<0, bool > *p_62_s_axi_data_p2p_awready = new xsim_sc_channel<0, bool >();
        sc_inst_62->s_axi_data_p2p_awready.bind(*p_62_s_axi_data_p2p_awready);
        p_62_s_axi_data_p2p_awready->set_sv_netview_offsetfromdp(12797072);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_62_s_axi_data_p2p_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_62->s_axi_data_p2p_wdata.bind(*p_62_s_axi_data_p2p_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_62_s_axi_data_p2p_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_62_s_axi_data_p2p_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_62->s_axi_data_p2p_wstrb.bind(*p_62_s_axi_data_p2p_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_62_s_axi_data_p2p_wstrb);
        xsim_sc_channel<0, bool > *p_62_s_axi_data_p2p_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_62->s_axi_data_p2p_wlast.bind(*p_62_s_axi_data_p2p_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_62_s_axi_data_p2p_wlast);
        xsim_sc_channel<0, bool > *p_62_s_axi_data_p2p_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_62->s_axi_data_p2p_wvalid.bind(*p_62_s_axi_data_p2p_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_62_s_axi_data_p2p_wvalid);
        xsim_sc_channel<0, bool > *p_62_s_axi_data_p2p_wready = new xsim_sc_channel<0, bool >();
        sc_inst_62->s_axi_data_p2p_wready.bind(*p_62_s_axi_data_p2p_wready);
        p_62_s_axi_data_p2p_wready->set_sv_netview_offsetfromdp(12797352);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_62_s_axi_data_p2p_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_62->s_axi_data_p2p_bresp.bind(*p_62_s_axi_data_p2p_bresp);
        p_62_s_axi_data_p2p_bresp->set_sv_netview_offsetfromdp(12797408);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_62_s_axi_data_p2p_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_62->s_axi_data_p2p_buser.bind(*p_62_s_axi_data_p2p_buser);
        p_62_s_axi_data_p2p_buser->set_sv_netview_offsetfromdp(12797464);
        xsim_sc_channel<0, bool > *p_62_s_axi_data_p2p_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_62->s_axi_data_p2p_bvalid.bind(*p_62_s_axi_data_p2p_bvalid);
        p_62_s_axi_data_p2p_bvalid->set_sv_netview_offsetfromdp(12797520);
        xsim_sc_channel<0, bool > *p_62_s_axi_data_p2p_bready = new xsim_sc_channel<0, bool >();
        sc_inst_62->s_axi_data_p2p_bready.bind(*p_62_s_axi_data_p2p_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_62_s_axi_data_p2p_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_62_s_axi_data_p2p_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_62->s_axi_data_p2p_araddr.bind(*p_62_s_axi_data_p2p_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_62_s_axi_data_p2p_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_62_s_axi_data_p2p_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_62->s_axi_data_p2p_arlen.bind(*p_62_s_axi_data_p2p_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_62_s_axi_data_p2p_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_62_s_axi_data_p2p_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_62->s_axi_data_p2p_arsize.bind(*p_62_s_axi_data_p2p_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_62_s_axi_data_p2p_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_62_s_axi_data_p2p_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_62->s_axi_data_p2p_arburst.bind(*p_62_s_axi_data_p2p_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_62_s_axi_data_p2p_arburst);
        xsim_sc_channel<0, bool > *p_62_s_axi_data_p2p_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_62->s_axi_data_p2p_arlock.bind(*p_62_s_axi_data_p2p_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_62_s_axi_data_p2p_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_62_s_axi_data_p2p_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_62->s_axi_data_p2p_arcache.bind(*p_62_s_axi_data_p2p_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_62_s_axi_data_p2p_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_62_s_axi_data_p2p_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_62->s_axi_data_p2p_arprot.bind(*p_62_s_axi_data_p2p_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_62_s_axi_data_p2p_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_62_s_axi_data_p2p_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_62->s_axi_data_p2p_arregion.bind(*p_62_s_axi_data_p2p_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_62_s_axi_data_p2p_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_62_s_axi_data_p2p_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_62->s_axi_data_p2p_arqos.bind(*p_62_s_axi_data_p2p_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_62_s_axi_data_p2p_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_62_s_axi_data_p2p_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_62->s_axi_data_p2p_aruser.bind(*p_62_s_axi_data_p2p_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_62_s_axi_data_p2p_aruser);
        xsim_sc_channel<0, bool > *p_62_s_axi_data_p2p_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_62->s_axi_data_p2p_arvalid.bind(*p_62_s_axi_data_p2p_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_62_s_axi_data_p2p_arvalid);
        xsim_sc_channel<0, bool > *p_62_s_axi_data_p2p_arready = new xsim_sc_channel<0, bool >();
        sc_inst_62->s_axi_data_p2p_arready.bind(*p_62_s_axi_data_p2p_arready);
        p_62_s_axi_data_p2p_arready->set_sv_netview_offsetfromdp(12798248);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_62_s_axi_data_p2p_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_62->s_axi_data_p2p_rdata.bind(*p_62_s_axi_data_p2p_rdata);
        p_62_s_axi_data_p2p_rdata->set_sv_netview_offsetfromdp(12798304);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_62_s_axi_data_p2p_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_62->s_axi_data_p2p_rresp.bind(*p_62_s_axi_data_p2p_rresp);
        p_62_s_axi_data_p2p_rresp->set_sv_netview_offsetfromdp(12798360);
        xsim_sc_channel<0, bool > *p_62_s_axi_data_p2p_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_62->s_axi_data_p2p_rlast.bind(*p_62_s_axi_data_p2p_rlast);
        p_62_s_axi_data_p2p_rlast->set_sv_netview_offsetfromdp(12798416);
        xsim_sc_channel<0, bool > *p_62_s_axi_data_p2p_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_62->s_axi_data_p2p_rvalid.bind(*p_62_s_axi_data_p2p_rvalid);
        p_62_s_axi_data_p2p_rvalid->set_sv_netview_offsetfromdp(12798472);
        xsim_sc_channel<0, bool > *p_62_s_axi_data_p2p_rready = new xsim_sc_channel<0, bool >();
        sc_inst_62->s_axi_data_p2p_rready.bind(*p_62_s_axi_data_p2p_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_62_s_axi_data_p2p_rready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_62_maxi_lite_mb_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_62->maxi_lite_mb_awaddr.bind(*p_62_maxi_lite_mb_awaddr);
        p_62_maxi_lite_mb_awaddr->set_sv_netview_offsetfromdp(12798584);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_62_maxi_lite_mb_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_62->maxi_lite_mb_awprot.bind(*p_62_maxi_lite_mb_awprot);
        p_62_maxi_lite_mb_awprot->set_sv_netview_offsetfromdp(12798640);
        xsim_sc_channel<0, bool > *p_62_maxi_lite_mb_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_62->maxi_lite_mb_awvalid.bind(*p_62_maxi_lite_mb_awvalid);
        p_62_maxi_lite_mb_awvalid->set_sv_netview_offsetfromdp(12798696);
        xsim_sc_channel<0, bool > *p_62_maxi_lite_mb_awready = new xsim_sc_channel<0, bool >();
        sc_inst_62->maxi_lite_mb_awready.bind(*p_62_maxi_lite_mb_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_62_maxi_lite_mb_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_62_maxi_lite_mb_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_62->maxi_lite_mb_wdata.bind(*p_62_maxi_lite_mb_wdata);
        p_62_maxi_lite_mb_wdata->set_sv_netview_offsetfromdp(12798808);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_62_maxi_lite_mb_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_62->maxi_lite_mb_wstrb.bind(*p_62_maxi_lite_mb_wstrb);
        p_62_maxi_lite_mb_wstrb->set_sv_netview_offsetfromdp(12798864);
        xsim_sc_channel<0, bool > *p_62_maxi_lite_mb_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_62->maxi_lite_mb_wvalid.bind(*p_62_maxi_lite_mb_wvalid);
        p_62_maxi_lite_mb_wvalid->set_sv_netview_offsetfromdp(12798920);
        xsim_sc_channel<0, bool > *p_62_maxi_lite_mb_wready = new xsim_sc_channel<0, bool >();
        sc_inst_62->maxi_lite_mb_wready.bind(*p_62_maxi_lite_mb_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_62_maxi_lite_mb_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_62_maxi_lite_mb_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_62->maxi_lite_mb_bresp.bind(*p_62_maxi_lite_mb_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_62_maxi_lite_mb_bresp);
        xsim_sc_channel<0, bool > *p_62_maxi_lite_mb_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_62->maxi_lite_mb_bvalid.bind(*p_62_maxi_lite_mb_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_62_maxi_lite_mb_bvalid);
        xsim_sc_channel<0, bool > *p_62_maxi_lite_mb_bready = new xsim_sc_channel<0, bool >();
        sc_inst_62->maxi_lite_mb_bready.bind(*p_62_maxi_lite_mb_bready);
        p_62_maxi_lite_mb_bready->set_sv_netview_offsetfromdp(12799144);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_62_maxi_lite_mb_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_62->maxi_lite_mb_araddr.bind(*p_62_maxi_lite_mb_araddr);
        p_62_maxi_lite_mb_araddr->set_sv_netview_offsetfromdp(12799200);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_62_maxi_lite_mb_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_62->maxi_lite_mb_arprot.bind(*p_62_maxi_lite_mb_arprot);
        p_62_maxi_lite_mb_arprot->set_sv_netview_offsetfromdp(12799256);
        xsim_sc_channel<0, bool > *p_62_maxi_lite_mb_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_62->maxi_lite_mb_arvalid.bind(*p_62_maxi_lite_mb_arvalid);
        p_62_maxi_lite_mb_arvalid->set_sv_netview_offsetfromdp(12799312);
        xsim_sc_channel<0, bool > *p_62_maxi_lite_mb_arready = new xsim_sc_channel<0, bool >();
        sc_inst_62->maxi_lite_mb_arready.bind(*p_62_maxi_lite_mb_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_62_maxi_lite_mb_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_62_maxi_lite_mb_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_62->maxi_lite_mb_rdata.bind(*p_62_maxi_lite_mb_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_62_maxi_lite_mb_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_62_maxi_lite_mb_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_62->maxi_lite_mb_rresp.bind(*p_62_maxi_lite_mb_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_62_maxi_lite_mb_rresp);
        xsim_sc_channel<0, bool > *p_62_maxi_lite_mb_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_62->maxi_lite_mb_rvalid.bind(*p_62_maxi_lite_mb_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_62_maxi_lite_mb_rvalid);
        xsim_sc_channel<0, bool > *p_62_maxi_lite_mb_rready = new xsim_sc_channel<0, bool >();
        sc_inst_62->maxi_lite_mb_rready.bind(*p_62_maxi_lite_mb_rready);
        p_62_maxi_lite_mb_rready->set_sv_netview_offsetfromdp(12799592);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_62_s_axi_ctrl_user_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_62->s_axi_ctrl_user_awaddr.bind(*p_62_s_axi_ctrl_user_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_62_s_axi_ctrl_user_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_62_s_axi_ctrl_user_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_62->s_axi_ctrl_user_awprot.bind(*p_62_s_axi_ctrl_user_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_62_s_axi_ctrl_user_awprot);
        xsim_sc_channel<0, bool > *p_62_s_axi_ctrl_user_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_62->s_axi_ctrl_user_awvalid.bind(*p_62_s_axi_ctrl_user_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_62_s_axi_ctrl_user_awvalid);
        xsim_sc_channel<0, bool > *p_62_s_axi_ctrl_user_awready = new xsim_sc_channel<0, bool >();
        sc_inst_62->s_axi_ctrl_user_awready.bind(*p_62_s_axi_ctrl_user_awready);
        p_62_s_axi_ctrl_user_awready->set_sv_netview_offsetfromdp(12799816);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_62_s_axi_ctrl_user_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_62->s_axi_ctrl_user_wdata.bind(*p_62_s_axi_ctrl_user_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_62_s_axi_ctrl_user_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_62_s_axi_ctrl_user_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_62->s_axi_ctrl_user_wstrb.bind(*p_62_s_axi_ctrl_user_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_62_s_axi_ctrl_user_wstrb);
        xsim_sc_channel<0, bool > *p_62_s_axi_ctrl_user_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_62->s_axi_ctrl_user_wvalid.bind(*p_62_s_axi_ctrl_user_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_62_s_axi_ctrl_user_wvalid);
        xsim_sc_channel<0, bool > *p_62_s_axi_ctrl_user_wready = new xsim_sc_channel<0, bool >();
        sc_inst_62->s_axi_ctrl_user_wready.bind(*p_62_s_axi_ctrl_user_wready);
        p_62_s_axi_ctrl_user_wready->set_sv_netview_offsetfromdp(12800040);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_62_s_axi_ctrl_user_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_62->s_axi_ctrl_user_bresp.bind(*p_62_s_axi_ctrl_user_bresp);
        p_62_s_axi_ctrl_user_bresp->set_sv_netview_offsetfromdp(12800096);
        xsim_sc_channel<0, bool > *p_62_s_axi_ctrl_user_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_62->s_axi_ctrl_user_bvalid.bind(*p_62_s_axi_ctrl_user_bvalid);
        p_62_s_axi_ctrl_user_bvalid->set_sv_netview_offsetfromdp(12800152);
        xsim_sc_channel<0, bool > *p_62_s_axi_ctrl_user_bready = new xsim_sc_channel<0, bool >();
        sc_inst_62->s_axi_ctrl_user_bready.bind(*p_62_s_axi_ctrl_user_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_62_s_axi_ctrl_user_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_62_s_axi_ctrl_user_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_62->s_axi_ctrl_user_araddr.bind(*p_62_s_axi_ctrl_user_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_62_s_axi_ctrl_user_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_62_s_axi_ctrl_user_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_62->s_axi_ctrl_user_arprot.bind(*p_62_s_axi_ctrl_user_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_62_s_axi_ctrl_user_arprot);
        xsim_sc_channel<0, bool > *p_62_s_axi_ctrl_user_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_62->s_axi_ctrl_user_arvalid.bind(*p_62_s_axi_ctrl_user_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_62_s_axi_ctrl_user_arvalid);
        xsim_sc_channel<0, bool > *p_62_s_axi_ctrl_user_arready = new xsim_sc_channel<0, bool >();
        sc_inst_62->s_axi_ctrl_user_arready.bind(*p_62_s_axi_ctrl_user_arready);
        p_62_s_axi_ctrl_user_arready->set_sv_netview_offsetfromdp(12800432);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_62_s_axi_ctrl_user_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_62->s_axi_ctrl_user_rdata.bind(*p_62_s_axi_ctrl_user_rdata);
        p_62_s_axi_ctrl_user_rdata->set_sv_netview_offsetfromdp(12800488);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_62_s_axi_ctrl_user_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_62->s_axi_ctrl_user_rresp.bind(*p_62_s_axi_ctrl_user_rresp);
        p_62_s_axi_ctrl_user_rresp->set_sv_netview_offsetfromdp(12800544);
        xsim_sc_channel<0, bool > *p_62_s_axi_ctrl_user_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_62->s_axi_ctrl_user_rvalid.bind(*p_62_s_axi_ctrl_user_rvalid);
        p_62_s_axi_ctrl_user_rvalid->set_sv_netview_offsetfromdp(12800600);
        xsim_sc_channel<0, bool > *p_62_s_axi_ctrl_user_rready = new xsim_sc_channel<0, bool >();
        sc_inst_62->s_axi_ctrl_user_rready.bind(*p_62_s_axi_ctrl_user_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_62_s_axi_ctrl_user_rready);
        sc_inst_63 = new pfm_top_sim_address_0_0(".pfm_top_wrapper.pfm_top_i.static_region.sim_address_0");
        sc_inst_63->xsim_set_dbg_index(262);
        xsim_sc_channel<0, bool > *p_63_m_aximm_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_63->m_aximm_aclk.bind(*p_63_m_aximm_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_63_m_aximm_aclk);
        xsim_sc_channel<0, bool > *p_63_m_aximm_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_63->m_aximm_aresetn.bind(*p_63_m_aximm_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_63_m_aximm_aresetn);
        xsim_sc_channel<0, bool > *p_63_s_aximm_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_63->s_aximm_aclk.bind(*p_63_s_aximm_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_63_s_aximm_aclk);
        xsim_sc_channel<0, bool > *p_63_s_aximm_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_63->s_aximm_aresetn.bind(*p_63_s_aximm_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_63_s_aximm_aresetn);
        xsim_sc_channel<0, bool > *p_63_m_aximm_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_63->m_aximm_AWVALID.bind(*p_63_m_aximm_AWVALID);
        p_63_m_aximm_AWVALID->set_sv_netview_offsetfromdp(12800984);
        xsim_sc_channel<0, bool > *p_63_m_aximm_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_63->m_aximm_AWREADY.bind(*p_63_m_aximm_AWREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_63_m_aximm_AWREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_63_m_aximm_AWADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_63->m_aximm_AWADDR.bind(*p_63_m_aximm_AWADDR);
        p_63_m_aximm_AWADDR->set_sv_netview_offsetfromdp(12801096);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_63_m_aximm_AWID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_63->m_aximm_AWID.bind(*p_63_m_aximm_AWID);
        p_63_m_aximm_AWID->set_sv_netview_offsetfromdp(12801152);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_63_m_aximm_AWLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_63->m_aximm_AWLEN.bind(*p_63_m_aximm_AWLEN);
        p_63_m_aximm_AWLEN->set_sv_netview_offsetfromdp(12801208);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_63_m_aximm_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_63->m_aximm_AWSIZE.bind(*p_63_m_aximm_AWSIZE);
        p_63_m_aximm_AWSIZE->set_sv_netview_offsetfromdp(12801264);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_63_m_aximm_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_63->m_aximm_AWBURST.bind(*p_63_m_aximm_AWBURST);
        p_63_m_aximm_AWBURST->set_sv_netview_offsetfromdp(12801320);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_63_m_aximm_AWLOCK = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_63->m_aximm_AWLOCK.bind(*p_63_m_aximm_AWLOCK);
        p_63_m_aximm_AWLOCK->set_sv_netview_offsetfromdp(12801376);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_63_m_aximm_AWCACHE = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_63->m_aximm_AWCACHE.bind(*p_63_m_aximm_AWCACHE);
        p_63_m_aximm_AWCACHE->set_sv_netview_offsetfromdp(12801432);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_63_m_aximm_AWPROT = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_63->m_aximm_AWPROT.bind(*p_63_m_aximm_AWPROT);
        p_63_m_aximm_AWPROT->set_sv_netview_offsetfromdp(12801488);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_63_m_aximm_AWREGION = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_63->m_aximm_AWREGION.bind(*p_63_m_aximm_AWREGION);
        p_63_m_aximm_AWREGION->set_sv_netview_offsetfromdp(12801544);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_63_m_aximm_AWQOS = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_63->m_aximm_AWQOS.bind(*p_63_m_aximm_AWQOS);
        p_63_m_aximm_AWQOS->set_sv_netview_offsetfromdp(12801600);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_63_m_aximm_AWUSER = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_63->m_aximm_AWUSER.bind(*p_63_m_aximm_AWUSER);
        p_63_m_aximm_AWUSER->set_sv_netview_offsetfromdp(12801656);
        xsim_sc_channel<0, bool > *p_63_m_aximm_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_63->m_aximm_WVALID.bind(*p_63_m_aximm_WVALID);
        p_63_m_aximm_WVALID->set_sv_netview_offsetfromdp(12801712);
        xsim_sc_channel<0, bool > *p_63_m_aximm_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_63->m_aximm_WREADY.bind(*p_63_m_aximm_WREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_63_m_aximm_WREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_63_m_aximm_WDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_63->m_aximm_WDATA.bind(*p_63_m_aximm_WDATA);
        p_63_m_aximm_WDATA->set_sv_netview_offsetfromdp(12801824);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_63_m_aximm_WSTRB = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_63->m_aximm_WSTRB.bind(*p_63_m_aximm_WSTRB);
        p_63_m_aximm_WSTRB->set_sv_netview_offsetfromdp(12801880);
        xsim_sc_channel<0, bool > *p_63_m_aximm_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_63->m_aximm_WLAST.bind(*p_63_m_aximm_WLAST);
        p_63_m_aximm_WLAST->set_sv_netview_offsetfromdp(12801936);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_63_m_aximm_WUSER = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_63->m_aximm_WUSER.bind(*p_63_m_aximm_WUSER);
        p_63_m_aximm_WUSER->set_sv_netview_offsetfromdp(12801992);
        xsim_sc_channel<0, bool > *p_63_m_aximm_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_63->m_aximm_ARVALID.bind(*p_63_m_aximm_ARVALID);
        p_63_m_aximm_ARVALID->set_sv_netview_offsetfromdp(12802048);
        xsim_sc_channel<0, bool > *p_63_m_aximm_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_63->m_aximm_ARREADY.bind(*p_63_m_aximm_ARREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_63_m_aximm_ARREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_63_m_aximm_ARADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_63->m_aximm_ARADDR.bind(*p_63_m_aximm_ARADDR);
        p_63_m_aximm_ARADDR->set_sv_netview_offsetfromdp(12802160);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_63_m_aximm_ARID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_63->m_aximm_ARID.bind(*p_63_m_aximm_ARID);
        p_63_m_aximm_ARID->set_sv_netview_offsetfromdp(12802216);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_63_m_aximm_ARLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_63->m_aximm_ARLEN.bind(*p_63_m_aximm_ARLEN);
        p_63_m_aximm_ARLEN->set_sv_netview_offsetfromdp(12802272);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_63_m_aximm_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_63->m_aximm_ARSIZE.bind(*p_63_m_aximm_ARSIZE);
        p_63_m_aximm_ARSIZE->set_sv_netview_offsetfromdp(12802328);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_63_m_aximm_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_63->m_aximm_ARBURST.bind(*p_63_m_aximm_ARBURST);
        p_63_m_aximm_ARBURST->set_sv_netview_offsetfromdp(12802384);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_63_m_aximm_ARLOCK = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_63->m_aximm_ARLOCK.bind(*p_63_m_aximm_ARLOCK);
        p_63_m_aximm_ARLOCK->set_sv_netview_offsetfromdp(12802440);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_63_m_aximm_ARCACHE = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_63->m_aximm_ARCACHE.bind(*p_63_m_aximm_ARCACHE);
        p_63_m_aximm_ARCACHE->set_sv_netview_offsetfromdp(12802496);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_63_m_aximm_ARPROT = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_63->m_aximm_ARPROT.bind(*p_63_m_aximm_ARPROT);
        p_63_m_aximm_ARPROT->set_sv_netview_offsetfromdp(12802552);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_63_m_aximm_ARREGION = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_63->m_aximm_ARREGION.bind(*p_63_m_aximm_ARREGION);
        p_63_m_aximm_ARREGION->set_sv_netview_offsetfromdp(12802608);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_63_m_aximm_ARQOS = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_63->m_aximm_ARQOS.bind(*p_63_m_aximm_ARQOS);
        p_63_m_aximm_ARQOS->set_sv_netview_offsetfromdp(12802664);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_63_m_aximm_ARUSER = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_63->m_aximm_ARUSER.bind(*p_63_m_aximm_ARUSER);
        p_63_m_aximm_ARUSER->set_sv_netview_offsetfromdp(12802720);
        xsim_sc_channel<0, bool > *p_63_m_aximm_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_63->m_aximm_RVALID.bind(*p_63_m_aximm_RVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_63_m_aximm_RVALID);
        xsim_sc_channel<0, bool > *p_63_m_aximm_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_63->m_aximm_RREADY.bind(*p_63_m_aximm_RREADY);
        p_63_m_aximm_RREADY->set_sv_netview_offsetfromdp(12802832);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_63_m_aximm_RDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_63->m_aximm_RDATA.bind(*p_63_m_aximm_RDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_63_m_aximm_RDATA);
        xsim_sc_channel<0, bool > *p_63_m_aximm_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_63->m_aximm_RLAST.bind(*p_63_m_aximm_RLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_63_m_aximm_RLAST);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_63_m_aximm_RID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_63->m_aximm_RID.bind(*p_63_m_aximm_RID);
        (*_glb_hdl_sc_channel_map).push_back(p_63_m_aximm_RID);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_63_m_aximm_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_63->m_aximm_RRESP.bind(*p_63_m_aximm_RRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_63_m_aximm_RRESP);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_63_m_aximm_RUSER = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_63->m_aximm_RUSER.bind(*p_63_m_aximm_RUSER);
        (*_glb_hdl_sc_channel_map).push_back(p_63_m_aximm_RUSER);
        xsim_sc_channel<0, bool > *p_63_m_aximm_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_63->m_aximm_BVALID.bind(*p_63_m_aximm_BVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_63_m_aximm_BVALID);
        xsim_sc_channel<0, bool > *p_63_m_aximm_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_63->m_aximm_BREADY.bind(*p_63_m_aximm_BREADY);
        p_63_m_aximm_BREADY->set_sv_netview_offsetfromdp(12803224);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_63_m_aximm_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_63->m_aximm_BRESP.bind(*p_63_m_aximm_BRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_63_m_aximm_BRESP);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_63_m_aximm_BID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_63->m_aximm_BID.bind(*p_63_m_aximm_BID);
        (*_glb_hdl_sc_channel_map).push_back(p_63_m_aximm_BID);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_63_m_aximm_BUSER = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_63->m_aximm_BUSER.bind(*p_63_m_aximm_BUSER);
        (*_glb_hdl_sc_channel_map).push_back(p_63_m_aximm_BUSER);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_63_s_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_63->s_axi_awaddr.bind(*p_63_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_63_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_63_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_63->s_axi_awlen.bind(*p_63_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_63_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_63_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_63->s_axi_awsize.bind(*p_63_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_63_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_63_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_63->s_axi_awburst.bind(*p_63_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_63_s_axi_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_63_s_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_63->s_axi_awlock.bind(*p_63_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_63_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_63_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_63->s_axi_awcache.bind(*p_63_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_63_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_63_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_63->s_axi_awprot.bind(*p_63_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_63_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_63_s_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_63->s_axi_awregion.bind(*p_63_s_axi_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_63_s_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_63_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_63->s_axi_awqos.bind(*p_63_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_63_s_axi_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_63_s_axi_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_63->s_axi_awuser.bind(*p_63_s_axi_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_63_s_axi_awuser);
        xsim_sc_channel<0, bool > *p_63_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_63->s_axi_awvalid.bind(*p_63_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_63_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_63_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_63->s_axi_awready.bind(*p_63_s_axi_awready);
        p_63_s_axi_awready->set_sv_netview_offsetfromdp(12804064);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_63_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_63->s_axi_wdata.bind(*p_63_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_63_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_63_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_63->s_axi_wstrb.bind(*p_63_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_63_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_63_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_63->s_axi_wlast.bind(*p_63_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_63_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_63_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_63->s_axi_wvalid.bind(*p_63_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_63_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_63_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_63->s_axi_wready.bind(*p_63_s_axi_wready);
        p_63_s_axi_wready->set_sv_netview_offsetfromdp(12804344);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_63_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_63->s_axi_bresp.bind(*p_63_s_axi_bresp);
        p_63_s_axi_bresp->set_sv_netview_offsetfromdp(12804400);
        xsim_sc_channel<0, bool > *p_63_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_63->s_axi_bvalid.bind(*p_63_s_axi_bvalid);
        p_63_s_axi_bvalid->set_sv_netview_offsetfromdp(12804456);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_63_s_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_63->s_axi_buser.bind(*p_63_s_axi_buser);
        p_63_s_axi_buser->set_sv_netview_offsetfromdp(12804512);
        xsim_sc_channel<0, bool > *p_63_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_63->s_axi_bready.bind(*p_63_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_63_s_axi_bready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_63_s_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_63->s_axi_araddr.bind(*p_63_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_63_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_63_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_63->s_axi_arlen.bind(*p_63_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_63_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_63_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_63->s_axi_arsize.bind(*p_63_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_63_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_63_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_63->s_axi_arburst.bind(*p_63_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_63_s_axi_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_63_s_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_63->s_axi_arlock.bind(*p_63_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_63_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_63_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_63->s_axi_arcache.bind(*p_63_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_63_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_63_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_63->s_axi_arprot.bind(*p_63_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_63_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_63_s_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_63->s_axi_arregion.bind(*p_63_s_axi_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_63_s_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_63_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_63->s_axi_arqos.bind(*p_63_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_63_s_axi_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_63_s_axi_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_63->s_axi_aruser.bind(*p_63_s_axi_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_63_s_axi_aruser);
        xsim_sc_channel<0, bool > *p_63_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_63->s_axi_arvalid.bind(*p_63_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_63_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_63_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_63->s_axi_arready.bind(*p_63_s_axi_arready);
        p_63_s_axi_arready->set_sv_netview_offsetfromdp(12805240);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_63_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_63->s_axi_rdata.bind(*p_63_s_axi_rdata);
        p_63_s_axi_rdata->set_sv_netview_offsetfromdp(12805296);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_63_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_63->s_axi_rresp.bind(*p_63_s_axi_rresp);
        p_63_s_axi_rresp->set_sv_netview_offsetfromdp(12805352);
        xsim_sc_channel<0, bool > *p_63_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_63->s_axi_rlast.bind(*p_63_s_axi_rlast);
        p_63_s_axi_rlast->set_sv_netview_offsetfromdp(12805408);
        xsim_sc_channel<0, bool > *p_63_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_63->s_axi_rvalid.bind(*p_63_s_axi_rvalid);
        p_63_s_axi_rvalid->set_sv_netview_offsetfromdp(12805464);
        xsim_sc_channel<0, bool > *p_63_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_63->s_axi_rready.bind(*p_63_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_63_s_axi_rready);
        sc_inst_64 = new pfm_top_sim_qdma_0_0(".pfm_top_wrapper.pfm_top_i.static_region.sim_qdma_0");
        sc_inst_64->xsim_set_dbg_index(263);
        xsim_sc_channel<0, bool > *p_64_m_aximm_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_64->m_aximm_aclk.bind(*p_64_m_aximm_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_64_m_aximm_aclk);
        xsim_sc_channel<0, bool > *p_64_m_aximm_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_64->m_aximm_aresetn.bind(*p_64_m_aximm_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_64_m_aximm_aresetn);
        xsim_sc_channel<0, bool > *p_64_m_axictrl_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_64->m_axictrl_aclk.bind(*p_64_m_axictrl_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_64_m_axictrl_aclk);
        xsim_sc_channel<0, bool > *p_64_m_axictrl_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_64->m_axictrl_aresetn.bind(*p_64_m_axictrl_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_64_m_axictrl_aresetn);
        xsim_sc_channel<0, bool > *p_64_s_aximm_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_64->s_aximm_aclk.bind(*p_64_s_aximm_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_64_s_aximm_aclk);
        xsim_sc_channel<0, bool > *p_64_s_aximm_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_64->s_aximm_aresetn.bind(*p_64_s_aximm_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_64_s_aximm_aresetn);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_64_m_axictrl_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_64->m_axictrl_awaddr.bind(*p_64_m_axictrl_awaddr);
        p_64_m_axictrl_awaddr->set_sv_netview_offsetfromdp(12805960);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_64_m_axictrl_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_64->m_axictrl_awprot.bind(*p_64_m_axictrl_awprot);
        p_64_m_axictrl_awprot->set_sv_netview_offsetfromdp(12806016);
        xsim_sc_channel<0, bool > *p_64_m_axictrl_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_64->m_axictrl_awvalid.bind(*p_64_m_axictrl_awvalid);
        p_64_m_axictrl_awvalid->set_sv_netview_offsetfromdp(12806072);
        xsim_sc_channel<0, bool > *p_64_m_axictrl_awready = new xsim_sc_channel<0, bool >();
        sc_inst_64->m_axictrl_awready.bind(*p_64_m_axictrl_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_64_m_axictrl_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_64_m_axictrl_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_64->m_axictrl_wdata.bind(*p_64_m_axictrl_wdata);
        p_64_m_axictrl_wdata->set_sv_netview_offsetfromdp(12806184);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_64_m_axictrl_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_64->m_axictrl_wstrb.bind(*p_64_m_axictrl_wstrb);
        p_64_m_axictrl_wstrb->set_sv_netview_offsetfromdp(12806240);
        xsim_sc_channel<0, bool > *p_64_m_axictrl_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_64->m_axictrl_wvalid.bind(*p_64_m_axictrl_wvalid);
        p_64_m_axictrl_wvalid->set_sv_netview_offsetfromdp(12806296);
        xsim_sc_channel<0, bool > *p_64_m_axictrl_wready = new xsim_sc_channel<0, bool >();
        sc_inst_64->m_axictrl_wready.bind(*p_64_m_axictrl_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_64_m_axictrl_wready);
        xsim_sc_channel<0, bool > *p_64_m_axictrl_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_64->m_axictrl_bvalid.bind(*p_64_m_axictrl_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_64_m_axictrl_bvalid);
        xsim_sc_channel<0, bool > *p_64_m_axictrl_bready = new xsim_sc_channel<0, bool >();
        sc_inst_64->m_axictrl_bready.bind(*p_64_m_axictrl_bready);
        p_64_m_axictrl_bready->set_sv_netview_offsetfromdp(12806464);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_64_m_axictrl_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_64->m_axictrl_bresp.bind(*p_64_m_axictrl_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_64_m_axictrl_bresp);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_64_m_axictrl_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_64->m_axictrl_araddr.bind(*p_64_m_axictrl_araddr);
        p_64_m_axictrl_araddr->set_sv_netview_offsetfromdp(12806576);
        xsim_sc_channel<0, bool > *p_64_m_axictrl_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_64->m_axictrl_arvalid.bind(*p_64_m_axictrl_arvalid);
        p_64_m_axictrl_arvalid->set_sv_netview_offsetfromdp(12806632);
        xsim_sc_channel<0, bool > *p_64_m_axictrl_arready = new xsim_sc_channel<0, bool >();
        sc_inst_64->m_axictrl_arready.bind(*p_64_m_axictrl_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_64_m_axictrl_arready);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_64_m_axictrl_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_64->m_axictrl_arprot.bind(*p_64_m_axictrl_arprot);
        p_64_m_axictrl_arprot->set_sv_netview_offsetfromdp(12806744);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_64_m_axictrl_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_64->m_axictrl_rdata.bind(*p_64_m_axictrl_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_64_m_axictrl_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_64_m_axictrl_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_64->m_axictrl_rresp.bind(*p_64_m_axictrl_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_64_m_axictrl_rresp);
        xsim_sc_channel<0, bool > *p_64_m_axictrl_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_64->m_axictrl_rvalid.bind(*p_64_m_axictrl_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_64_m_axictrl_rvalid);
        xsim_sc_channel<0, bool > *p_64_m_axictrl_rready = new xsim_sc_channel<0, bool >();
        sc_inst_64->m_axictrl_rready.bind(*p_64_m_axictrl_rready);
        p_64_m_axictrl_rready->set_sv_netview_offsetfromdp(12806968);
        xsim_sc_channel<0, bool > *p_64_m_aximm_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_64->m_aximm_AWVALID.bind(*p_64_m_aximm_AWVALID);
        p_64_m_aximm_AWVALID->set_sv_netview_offsetfromdp(12807024);
        xsim_sc_channel<0, bool > *p_64_m_aximm_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_64->m_aximm_AWREADY.bind(*p_64_m_aximm_AWREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_64_m_aximm_AWREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_64_m_aximm_AWADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_64->m_aximm_AWADDR.bind(*p_64_m_aximm_AWADDR);
        p_64_m_aximm_AWADDR->set_sv_netview_offsetfromdp(12807136);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_64_m_aximm_AWID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_64->m_aximm_AWID.bind(*p_64_m_aximm_AWID);
        p_64_m_aximm_AWID->set_sv_netview_offsetfromdp(12807192);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_64_m_aximm_AWLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_64->m_aximm_AWLEN.bind(*p_64_m_aximm_AWLEN);
        p_64_m_aximm_AWLEN->set_sv_netview_offsetfromdp(12807248);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_64_m_aximm_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_64->m_aximm_AWSIZE.bind(*p_64_m_aximm_AWSIZE);
        p_64_m_aximm_AWSIZE->set_sv_netview_offsetfromdp(12807304);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_64_m_aximm_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_64->m_aximm_AWBURST.bind(*p_64_m_aximm_AWBURST);
        p_64_m_aximm_AWBURST->set_sv_netview_offsetfromdp(12807360);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_64_m_aximm_AWLOCK = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_64->m_aximm_AWLOCK.bind(*p_64_m_aximm_AWLOCK);
        p_64_m_aximm_AWLOCK->set_sv_netview_offsetfromdp(12807416);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_64_m_aximm_AWCACHE = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_64->m_aximm_AWCACHE.bind(*p_64_m_aximm_AWCACHE);
        p_64_m_aximm_AWCACHE->set_sv_netview_offsetfromdp(12807472);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_64_m_aximm_AWPROT = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_64->m_aximm_AWPROT.bind(*p_64_m_aximm_AWPROT);
        p_64_m_aximm_AWPROT->set_sv_netview_offsetfromdp(12807528);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_64_m_aximm_AWREGION = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_64->m_aximm_AWREGION.bind(*p_64_m_aximm_AWREGION);
        p_64_m_aximm_AWREGION->set_sv_netview_offsetfromdp(12807584);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_64_m_aximm_AWQOS = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_64->m_aximm_AWQOS.bind(*p_64_m_aximm_AWQOS);
        p_64_m_aximm_AWQOS->set_sv_netview_offsetfromdp(12807640);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_64_m_aximm_AWUSER = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_64->m_aximm_AWUSER.bind(*p_64_m_aximm_AWUSER);
        p_64_m_aximm_AWUSER->set_sv_netview_offsetfromdp(12807696);
        xsim_sc_channel<0, bool > *p_64_m_aximm_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_64->m_aximm_WVALID.bind(*p_64_m_aximm_WVALID);
        p_64_m_aximm_WVALID->set_sv_netview_offsetfromdp(12807752);
        xsim_sc_channel<0, bool > *p_64_m_aximm_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_64->m_aximm_WREADY.bind(*p_64_m_aximm_WREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_64_m_aximm_WREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_64_m_aximm_WDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_64->m_aximm_WDATA.bind(*p_64_m_aximm_WDATA);
        p_64_m_aximm_WDATA->set_sv_netview_offsetfromdp(12807864);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_64_m_aximm_WSTRB = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_64->m_aximm_WSTRB.bind(*p_64_m_aximm_WSTRB);
        p_64_m_aximm_WSTRB->set_sv_netview_offsetfromdp(12807920);
        xsim_sc_channel<0, bool > *p_64_m_aximm_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_64->m_aximm_WLAST.bind(*p_64_m_aximm_WLAST);
        p_64_m_aximm_WLAST->set_sv_netview_offsetfromdp(12807976);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_64_m_aximm_WUSER = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_64->m_aximm_WUSER.bind(*p_64_m_aximm_WUSER);
        p_64_m_aximm_WUSER->set_sv_netview_offsetfromdp(12808032);
        xsim_sc_channel<0, bool > *p_64_m_aximm_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_64->m_aximm_ARVALID.bind(*p_64_m_aximm_ARVALID);
        p_64_m_aximm_ARVALID->set_sv_netview_offsetfromdp(12808088);
        xsim_sc_channel<0, bool > *p_64_m_aximm_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_64->m_aximm_ARREADY.bind(*p_64_m_aximm_ARREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_64_m_aximm_ARREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_64_m_aximm_ARADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_64->m_aximm_ARADDR.bind(*p_64_m_aximm_ARADDR);
        p_64_m_aximm_ARADDR->set_sv_netview_offsetfromdp(12808200);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_64_m_aximm_ARID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_64->m_aximm_ARID.bind(*p_64_m_aximm_ARID);
        p_64_m_aximm_ARID->set_sv_netview_offsetfromdp(12808256);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_64_m_aximm_ARLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_64->m_aximm_ARLEN.bind(*p_64_m_aximm_ARLEN);
        p_64_m_aximm_ARLEN->set_sv_netview_offsetfromdp(12808312);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_64_m_aximm_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_64->m_aximm_ARSIZE.bind(*p_64_m_aximm_ARSIZE);
        p_64_m_aximm_ARSIZE->set_sv_netview_offsetfromdp(12808368);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_64_m_aximm_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_64->m_aximm_ARBURST.bind(*p_64_m_aximm_ARBURST);
        p_64_m_aximm_ARBURST->set_sv_netview_offsetfromdp(12808424);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_64_m_aximm_ARLOCK = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_64->m_aximm_ARLOCK.bind(*p_64_m_aximm_ARLOCK);
        p_64_m_aximm_ARLOCK->set_sv_netview_offsetfromdp(12808480);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_64_m_aximm_ARCACHE = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_64->m_aximm_ARCACHE.bind(*p_64_m_aximm_ARCACHE);
        p_64_m_aximm_ARCACHE->set_sv_netview_offsetfromdp(12808536);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_64_m_aximm_ARPROT = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_64->m_aximm_ARPROT.bind(*p_64_m_aximm_ARPROT);
        p_64_m_aximm_ARPROT->set_sv_netview_offsetfromdp(12808592);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_64_m_aximm_ARREGION = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_64->m_aximm_ARREGION.bind(*p_64_m_aximm_ARREGION);
        p_64_m_aximm_ARREGION->set_sv_netview_offsetfromdp(12808648);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_64_m_aximm_ARQOS = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_64->m_aximm_ARQOS.bind(*p_64_m_aximm_ARQOS);
        p_64_m_aximm_ARQOS->set_sv_netview_offsetfromdp(12808704);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_64_m_aximm_ARUSER = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_64->m_aximm_ARUSER.bind(*p_64_m_aximm_ARUSER);
        p_64_m_aximm_ARUSER->set_sv_netview_offsetfromdp(12808760);
        xsim_sc_channel<0, bool > *p_64_m_aximm_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_64->m_aximm_RVALID.bind(*p_64_m_aximm_RVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_64_m_aximm_RVALID);
        xsim_sc_channel<0, bool > *p_64_m_aximm_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_64->m_aximm_RREADY.bind(*p_64_m_aximm_RREADY);
        p_64_m_aximm_RREADY->set_sv_netview_offsetfromdp(12808872);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_64_m_aximm_RDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_64->m_aximm_RDATA.bind(*p_64_m_aximm_RDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_64_m_aximm_RDATA);
        xsim_sc_channel<0, bool > *p_64_m_aximm_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_64->m_aximm_RLAST.bind(*p_64_m_aximm_RLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_64_m_aximm_RLAST);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_64_m_aximm_RID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_64->m_aximm_RID.bind(*p_64_m_aximm_RID);
        (*_glb_hdl_sc_channel_map).push_back(p_64_m_aximm_RID);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_64_m_aximm_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_64->m_aximm_RRESP.bind(*p_64_m_aximm_RRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_64_m_aximm_RRESP);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_64_m_aximm_RUSER = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_64->m_aximm_RUSER.bind(*p_64_m_aximm_RUSER);
        (*_glb_hdl_sc_channel_map).push_back(p_64_m_aximm_RUSER);
        xsim_sc_channel<0, bool > *p_64_m_aximm_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_64->m_aximm_BVALID.bind(*p_64_m_aximm_BVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_64_m_aximm_BVALID);
        xsim_sc_channel<0, bool > *p_64_m_aximm_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_64->m_aximm_BREADY.bind(*p_64_m_aximm_BREADY);
        p_64_m_aximm_BREADY->set_sv_netview_offsetfromdp(12809264);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_64_m_aximm_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_64->m_aximm_BRESP.bind(*p_64_m_aximm_BRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_64_m_aximm_BRESP);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_64_m_aximm_BID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_64->m_aximm_BID.bind(*p_64_m_aximm_BID);
        (*_glb_hdl_sc_channel_map).push_back(p_64_m_aximm_BID);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_64_m_aximm_BUSER = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_64->m_aximm_BUSER.bind(*p_64_m_aximm_BUSER);
        (*_glb_hdl_sc_channel_map).push_back(p_64_m_aximm_BUSER);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_64_s_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_64->s_axi_awaddr.bind(*p_64_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_64_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_64_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_64->s_axi_awlen.bind(*p_64_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_64_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_64_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_64->s_axi_awsize.bind(*p_64_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_64_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_64_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_64->s_axi_awburst.bind(*p_64_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_64_s_axi_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_64_s_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_64->s_axi_awlock.bind(*p_64_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_64_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_64_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_64->s_axi_awcache.bind(*p_64_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_64_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_64_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_64->s_axi_awprot.bind(*p_64_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_64_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_64_s_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_64->s_axi_awregion.bind(*p_64_s_axi_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_64_s_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_64_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_64->s_axi_awqos.bind(*p_64_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_64_s_axi_awqos);
        xsim_sc_channel<0, bool > *p_64_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_64->s_axi_awvalid.bind(*p_64_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_64_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_64_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_64->s_axi_awready.bind(*p_64_s_axi_awready);
        p_64_s_axi_awready->set_sv_netview_offsetfromdp(12810048);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_64_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_64->s_axi_wdata.bind(*p_64_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_64_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_64_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_64->s_axi_wstrb.bind(*p_64_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_64_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_64_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_64->s_axi_wlast.bind(*p_64_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_64_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_64_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_64->s_axi_wvalid.bind(*p_64_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_64_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_64_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_64->s_axi_wready.bind(*p_64_s_axi_wready);
        p_64_s_axi_wready->set_sv_netview_offsetfromdp(12810328);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_64_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_64->s_axi_bresp.bind(*p_64_s_axi_bresp);
        p_64_s_axi_bresp->set_sv_netview_offsetfromdp(12810384);
        xsim_sc_channel<0, bool > *p_64_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_64->s_axi_bvalid.bind(*p_64_s_axi_bvalid);
        p_64_s_axi_bvalid->set_sv_netview_offsetfromdp(12810440);
        xsim_sc_channel<0, bool > *p_64_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_64->s_axi_bready.bind(*p_64_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_64_s_axi_bready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_64_s_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_64->s_axi_araddr.bind(*p_64_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_64_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_64_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_64->s_axi_arlen.bind(*p_64_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_64_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_64_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_64->s_axi_arsize.bind(*p_64_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_64_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_64_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_64->s_axi_arburst.bind(*p_64_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_64_s_axi_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_64_s_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_64->s_axi_arlock.bind(*p_64_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_64_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_64_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_64->s_axi_arcache.bind(*p_64_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_64_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_64_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_64->s_axi_arprot.bind(*p_64_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_64_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_64_s_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_64->s_axi_arregion.bind(*p_64_s_axi_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_64_s_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_64_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_64->s_axi_arqos.bind(*p_64_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_64_s_axi_arqos);
        xsim_sc_channel<0, bool > *p_64_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_64->s_axi_arvalid.bind(*p_64_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_64_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_64_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_64->s_axi_arready.bind(*p_64_s_axi_arready);
        p_64_s_axi_arready->set_sv_netview_offsetfromdp(12811112);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_64_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_64->s_axi_rdata.bind(*p_64_s_axi_rdata);
        p_64_s_axi_rdata->set_sv_netview_offsetfromdp(12811168);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_64_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_64->s_axi_rresp.bind(*p_64_s_axi_rresp);
        p_64_s_axi_rresp->set_sv_netview_offsetfromdp(12811224);
        xsim_sc_channel<0, bool > *p_64_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_64->s_axi_rlast.bind(*p_64_s_axi_rlast);
        p_64_s_axi_rlast->set_sv_netview_offsetfromdp(12811280);
        xsim_sc_channel<0, bool > *p_64_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_64->s_axi_rvalid.bind(*p_64_s_axi_rvalid);
        p_64_s_axi_rvalid->set_sv_netview_offsetfromdp(12811336);
        xsim_sc_channel<0, bool > *p_64_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_64->s_axi_rready.bind(*p_64_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_64_s_axi_rready);
        xsim_sc_channel<16, sc_dt::sc_bv<16> > *p_64_usr_irq_req = new xsim_sc_channel<16, sc_dt::sc_bv<16> >();
        sc_inst_64->usr_irq_req.bind(*p_64_usr_irq_req);
        (*_glb_hdl_sc_channel_map).push_back(p_64_usr_irq_req);
        xsim_sc_channel<16, sc_dt::sc_bv<16> > *p_64_usr_irq_ack = new xsim_sc_channel<16, sc_dt::sc_bv<16> >();
        sc_inst_64->usr_irq_ack.bind(*p_64_usr_irq_ack);
        p_64_usr_irq_ack->set_sv_netview_offsetfromdp(12811504);
        sc_inst_65 = new pfm_top_smartconnect_0_0(".pfm_top_wrapper.pfm_top_i.static_region.smartconnect_0");
        sc_inst_65->xsim_set_dbg_index(264);
        xsim_sc_channel<0, bool > *p_65_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_65->aclk.bind(*p_65_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_65_aclk);
        xsim_sc_channel<0, bool > *p_65_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_65->aresetn.bind(*p_65_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_65_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_65_S00_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_65->S00_AXI_awid.bind(*p_65_S00_AXI_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_65_S00_AXI_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_65_S00_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_65->S00_AXI_awaddr.bind(*p_65_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_65_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_65_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_65->S00_AXI_awlen.bind(*p_65_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_65_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_65_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_65->S00_AXI_awsize.bind(*p_65_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_65_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_65_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_65->S00_AXI_awburst.bind(*p_65_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_65_S00_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_65_S00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_65->S00_AXI_awlock.bind(*p_65_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_65_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_65_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_65->S00_AXI_awcache.bind(*p_65_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_65_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_65_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_65->S00_AXI_awprot.bind(*p_65_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_65_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_65_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_65->S00_AXI_awqos.bind(*p_65_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_65_S00_AXI_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_65_S00_AXI_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_65->S00_AXI_awuser.bind(*p_65_S00_AXI_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_65_S00_AXI_awuser);
        xsim_sc_channel<0, bool > *p_65_S00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_65->S00_AXI_awvalid.bind(*p_65_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_65_S00_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_65_S00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_65->S00_AXI_awready.bind(*p_65_S00_AXI_awready);
        p_65_S00_AXI_awready->set_sv_netview_offsetfromdp(12812336);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_65_S00_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_65->S00_AXI_wdata.bind(*p_65_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_65_S00_AXI_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_65_S00_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_65->S00_AXI_wstrb.bind(*p_65_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_65_S00_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_65_S00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_65->S00_AXI_wlast.bind(*p_65_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_65_S00_AXI_wlast);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_65_S00_AXI_wuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_65->S00_AXI_wuser.bind(*p_65_S00_AXI_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_65_S00_AXI_wuser);
        xsim_sc_channel<0, bool > *p_65_S00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_65->S00_AXI_wvalid.bind(*p_65_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_65_S00_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_65_S00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_65->S00_AXI_wready.bind(*p_65_S00_AXI_wready);
        p_65_S00_AXI_wready->set_sv_netview_offsetfromdp(12812672);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_65_S00_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_65->S00_AXI_bid.bind(*p_65_S00_AXI_bid);
        p_65_S00_AXI_bid->set_sv_netview_offsetfromdp(12812728);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_65_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_65->S00_AXI_bresp.bind(*p_65_S00_AXI_bresp);
        p_65_S00_AXI_bresp->set_sv_netview_offsetfromdp(12812784);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_65_S00_AXI_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_65->S00_AXI_buser.bind(*p_65_S00_AXI_buser);
        p_65_S00_AXI_buser->set_sv_netview_offsetfromdp(12812840);
        xsim_sc_channel<0, bool > *p_65_S00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_65->S00_AXI_bvalid.bind(*p_65_S00_AXI_bvalid);
        p_65_S00_AXI_bvalid->set_sv_netview_offsetfromdp(12812896);
        xsim_sc_channel<0, bool > *p_65_S00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_65->S00_AXI_bready.bind(*p_65_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_65_S00_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_65_S00_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_65->S00_AXI_arid.bind(*p_65_S00_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_65_S00_AXI_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_65_S00_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_65->S00_AXI_araddr.bind(*p_65_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_65_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_65_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_65->S00_AXI_arlen.bind(*p_65_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_65_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_65_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_65->S00_AXI_arsize.bind(*p_65_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_65_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_65_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_65->S00_AXI_arburst.bind(*p_65_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_65_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_65_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_65->S00_AXI_arlock.bind(*p_65_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_65_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_65_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_65->S00_AXI_arcache.bind(*p_65_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_65_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_65_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_65->S00_AXI_arprot.bind(*p_65_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_65_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_65_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_65->S00_AXI_arqos.bind(*p_65_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_65_S00_AXI_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_65_S00_AXI_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_65->S00_AXI_aruser.bind(*p_65_S00_AXI_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_65_S00_AXI_aruser);
        xsim_sc_channel<0, bool > *p_65_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_65->S00_AXI_arvalid.bind(*p_65_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_65_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_65_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_65->S00_AXI_arready.bind(*p_65_S00_AXI_arready);
        p_65_S00_AXI_arready->set_sv_netview_offsetfromdp(12813624);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_65_S00_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_65->S00_AXI_rid.bind(*p_65_S00_AXI_rid);
        p_65_S00_AXI_rid->set_sv_netview_offsetfromdp(12813680);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_65_S00_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_65->S00_AXI_rdata.bind(*p_65_S00_AXI_rdata);
        p_65_S00_AXI_rdata->set_sv_netview_offsetfromdp(12813736);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_65_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_65->S00_AXI_rresp.bind(*p_65_S00_AXI_rresp);
        p_65_S00_AXI_rresp->set_sv_netview_offsetfromdp(12813792);
        xsim_sc_channel<0, bool > *p_65_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_65->S00_AXI_rlast.bind(*p_65_S00_AXI_rlast);
        p_65_S00_AXI_rlast->set_sv_netview_offsetfromdp(12813848);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_65_S00_AXI_ruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_65->S00_AXI_ruser.bind(*p_65_S00_AXI_ruser);
        p_65_S00_AXI_ruser->set_sv_netview_offsetfromdp(12813904);
        xsim_sc_channel<0, bool > *p_65_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_65->S00_AXI_rvalid.bind(*p_65_S00_AXI_rvalid);
        p_65_S00_AXI_rvalid->set_sv_netview_offsetfromdp(12813960);
        xsim_sc_channel<0, bool > *p_65_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_65->S00_AXI_rready.bind(*p_65_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_65_S00_AXI_rready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_65_M00_AXI_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_65->M00_AXI_awaddr.bind(*p_65_M00_AXI_awaddr);
        p_65_M00_AXI_awaddr->set_sv_netview_offsetfromdp(12814072);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_65_M00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_65->M00_AXI_awlen.bind(*p_65_M00_AXI_awlen);
        p_65_M00_AXI_awlen->set_sv_netview_offsetfromdp(12814128);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_65_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_65->M00_AXI_awsize.bind(*p_65_M00_AXI_awsize);
        p_65_M00_AXI_awsize->set_sv_netview_offsetfromdp(12814184);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_65_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_65->M00_AXI_awburst.bind(*p_65_M00_AXI_awburst);
        p_65_M00_AXI_awburst->set_sv_netview_offsetfromdp(12814240);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_65_M00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_65->M00_AXI_awlock.bind(*p_65_M00_AXI_awlock);
        p_65_M00_AXI_awlock->set_sv_netview_offsetfromdp(12814296);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_65_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_65->M00_AXI_awcache.bind(*p_65_M00_AXI_awcache);
        p_65_M00_AXI_awcache->set_sv_netview_offsetfromdp(12814352);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_65_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_65->M00_AXI_awprot.bind(*p_65_M00_AXI_awprot);
        p_65_M00_AXI_awprot->set_sv_netview_offsetfromdp(12814408);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_65_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_65->M00_AXI_awqos.bind(*p_65_M00_AXI_awqos);
        p_65_M00_AXI_awqos->set_sv_netview_offsetfromdp(12814464);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_65_M00_AXI_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_65->M00_AXI_awuser.bind(*p_65_M00_AXI_awuser);
        p_65_M00_AXI_awuser->set_sv_netview_offsetfromdp(12814520);
        xsim_sc_channel<0, bool > *p_65_M00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_65->M00_AXI_awvalid.bind(*p_65_M00_AXI_awvalid);
        p_65_M00_AXI_awvalid->set_sv_netview_offsetfromdp(12814576);
        xsim_sc_channel<0, bool > *p_65_M00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_65->M00_AXI_awready.bind(*p_65_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_65_M00_AXI_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_65_M00_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_65->M00_AXI_wdata.bind(*p_65_M00_AXI_wdata);
        p_65_M00_AXI_wdata->set_sv_netview_offsetfromdp(12814688);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_65_M00_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_65->M00_AXI_wstrb.bind(*p_65_M00_AXI_wstrb);
        p_65_M00_AXI_wstrb->set_sv_netview_offsetfromdp(12814744);
        xsim_sc_channel<0, bool > *p_65_M00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_65->M00_AXI_wlast.bind(*p_65_M00_AXI_wlast);
        p_65_M00_AXI_wlast->set_sv_netview_offsetfromdp(12814800);
        xsim_sc_channel<0, bool > *p_65_M00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_65->M00_AXI_wvalid.bind(*p_65_M00_AXI_wvalid);
        p_65_M00_AXI_wvalid->set_sv_netview_offsetfromdp(12814856);
        xsim_sc_channel<0, bool > *p_65_M00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_65->M00_AXI_wready.bind(*p_65_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_65_M00_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_65_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_65->M00_AXI_bresp.bind(*p_65_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_65_M00_AXI_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_65_M00_AXI_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_65->M00_AXI_buser.bind(*p_65_M00_AXI_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_65_M00_AXI_buser);
        xsim_sc_channel<0, bool > *p_65_M00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_65->M00_AXI_bvalid.bind(*p_65_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_65_M00_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_65_M00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_65->M00_AXI_bready.bind(*p_65_M00_AXI_bready);
        p_65_M00_AXI_bready->set_sv_netview_offsetfromdp(12815136);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_65_M00_AXI_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_65->M00_AXI_araddr.bind(*p_65_M00_AXI_araddr);
        p_65_M00_AXI_araddr->set_sv_netview_offsetfromdp(12815192);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_65_M00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_65->M00_AXI_arlen.bind(*p_65_M00_AXI_arlen);
        p_65_M00_AXI_arlen->set_sv_netview_offsetfromdp(12815248);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_65_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_65->M00_AXI_arsize.bind(*p_65_M00_AXI_arsize);
        p_65_M00_AXI_arsize->set_sv_netview_offsetfromdp(12815304);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_65_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_65->M00_AXI_arburst.bind(*p_65_M00_AXI_arburst);
        p_65_M00_AXI_arburst->set_sv_netview_offsetfromdp(12815360);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_65_M00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_65->M00_AXI_arlock.bind(*p_65_M00_AXI_arlock);
        p_65_M00_AXI_arlock->set_sv_netview_offsetfromdp(12815416);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_65_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_65->M00_AXI_arcache.bind(*p_65_M00_AXI_arcache);
        p_65_M00_AXI_arcache->set_sv_netview_offsetfromdp(12815472);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_65_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_65->M00_AXI_arprot.bind(*p_65_M00_AXI_arprot);
        p_65_M00_AXI_arprot->set_sv_netview_offsetfromdp(12815528);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_65_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_65->M00_AXI_arqos.bind(*p_65_M00_AXI_arqos);
        p_65_M00_AXI_arqos->set_sv_netview_offsetfromdp(12815584);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_65_M00_AXI_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_65->M00_AXI_aruser.bind(*p_65_M00_AXI_aruser);
        p_65_M00_AXI_aruser->set_sv_netview_offsetfromdp(12815640);
        xsim_sc_channel<0, bool > *p_65_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_65->M00_AXI_arvalid.bind(*p_65_M00_AXI_arvalid);
        p_65_M00_AXI_arvalid->set_sv_netview_offsetfromdp(12815696);
        xsim_sc_channel<0, bool > *p_65_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_65->M00_AXI_arready.bind(*p_65_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_65_M00_AXI_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_65_M00_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_65->M00_AXI_rdata.bind(*p_65_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_65_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_65_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_65->M00_AXI_rresp.bind(*p_65_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_65_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_65_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_65->M00_AXI_rlast.bind(*p_65_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_65_M00_AXI_rlast);
        xsim_sc_channel<0, bool > *p_65_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_65->M00_AXI_rvalid.bind(*p_65_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_65_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_65_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_65->M00_AXI_rready.bind(*p_65_M00_AXI_rready);
        p_65_M00_AXI_rready->set_sv_netview_offsetfromdp(12816032);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_65_M01_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_65->M01_AXI_awaddr.bind(*p_65_M01_AXI_awaddr);
        p_65_M01_AXI_awaddr->set_sv_netview_offsetfromdp(12816088);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_65_M01_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_65->M01_AXI_awlen.bind(*p_65_M01_AXI_awlen);
        p_65_M01_AXI_awlen->set_sv_netview_offsetfromdp(12816144);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_65_M01_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_65->M01_AXI_awsize.bind(*p_65_M01_AXI_awsize);
        p_65_M01_AXI_awsize->set_sv_netview_offsetfromdp(12816200);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_65_M01_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_65->M01_AXI_awburst.bind(*p_65_M01_AXI_awburst);
        p_65_M01_AXI_awburst->set_sv_netview_offsetfromdp(12816256);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_65_M01_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_65->M01_AXI_awlock.bind(*p_65_M01_AXI_awlock);
        p_65_M01_AXI_awlock->set_sv_netview_offsetfromdp(12816312);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_65_M01_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_65->M01_AXI_awcache.bind(*p_65_M01_AXI_awcache);
        p_65_M01_AXI_awcache->set_sv_netview_offsetfromdp(12816368);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_65_M01_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_65->M01_AXI_awprot.bind(*p_65_M01_AXI_awprot);
        p_65_M01_AXI_awprot->set_sv_netview_offsetfromdp(12816424);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_65_M01_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_65->M01_AXI_awqos.bind(*p_65_M01_AXI_awqos);
        p_65_M01_AXI_awqos->set_sv_netview_offsetfromdp(12816480);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_65_M01_AXI_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_65->M01_AXI_awuser.bind(*p_65_M01_AXI_awuser);
        p_65_M01_AXI_awuser->set_sv_netview_offsetfromdp(12816536);
        xsim_sc_channel<0, bool > *p_65_M01_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_65->M01_AXI_awvalid.bind(*p_65_M01_AXI_awvalid);
        p_65_M01_AXI_awvalid->set_sv_netview_offsetfromdp(12816592);
        xsim_sc_channel<0, bool > *p_65_M01_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_65->M01_AXI_awready.bind(*p_65_M01_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_65_M01_AXI_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_65_M01_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_65->M01_AXI_wdata.bind(*p_65_M01_AXI_wdata);
        p_65_M01_AXI_wdata->set_sv_netview_offsetfromdp(12816704);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_65_M01_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_65->M01_AXI_wstrb.bind(*p_65_M01_AXI_wstrb);
        p_65_M01_AXI_wstrb->set_sv_netview_offsetfromdp(12816760);
        xsim_sc_channel<0, bool > *p_65_M01_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_65->M01_AXI_wlast.bind(*p_65_M01_AXI_wlast);
        p_65_M01_AXI_wlast->set_sv_netview_offsetfromdp(12816816);
        xsim_sc_channel<0, bool > *p_65_M01_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_65->M01_AXI_wvalid.bind(*p_65_M01_AXI_wvalid);
        p_65_M01_AXI_wvalid->set_sv_netview_offsetfromdp(12816872);
        xsim_sc_channel<0, bool > *p_65_M01_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_65->M01_AXI_wready.bind(*p_65_M01_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_65_M01_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_65_M01_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_65->M01_AXI_bresp.bind(*p_65_M01_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_65_M01_AXI_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_65_M01_AXI_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_65->M01_AXI_buser.bind(*p_65_M01_AXI_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_65_M01_AXI_buser);
        xsim_sc_channel<0, bool > *p_65_M01_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_65->M01_AXI_bvalid.bind(*p_65_M01_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_65_M01_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_65_M01_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_65->M01_AXI_bready.bind(*p_65_M01_AXI_bready);
        p_65_M01_AXI_bready->set_sv_netview_offsetfromdp(12817152);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_65_M01_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_65->M01_AXI_araddr.bind(*p_65_M01_AXI_araddr);
        p_65_M01_AXI_araddr->set_sv_netview_offsetfromdp(12817208);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_65_M01_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_65->M01_AXI_arlen.bind(*p_65_M01_AXI_arlen);
        p_65_M01_AXI_arlen->set_sv_netview_offsetfromdp(12817264);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_65_M01_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_65->M01_AXI_arsize.bind(*p_65_M01_AXI_arsize);
        p_65_M01_AXI_arsize->set_sv_netview_offsetfromdp(12817320);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_65_M01_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_65->M01_AXI_arburst.bind(*p_65_M01_AXI_arburst);
        p_65_M01_AXI_arburst->set_sv_netview_offsetfromdp(12817376);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_65_M01_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_65->M01_AXI_arlock.bind(*p_65_M01_AXI_arlock);
        p_65_M01_AXI_arlock->set_sv_netview_offsetfromdp(12817432);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_65_M01_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_65->M01_AXI_arcache.bind(*p_65_M01_AXI_arcache);
        p_65_M01_AXI_arcache->set_sv_netview_offsetfromdp(12817488);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_65_M01_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_65->M01_AXI_arprot.bind(*p_65_M01_AXI_arprot);
        p_65_M01_AXI_arprot->set_sv_netview_offsetfromdp(12817544);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_65_M01_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_65->M01_AXI_arqos.bind(*p_65_M01_AXI_arqos);
        p_65_M01_AXI_arqos->set_sv_netview_offsetfromdp(12817600);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_65_M01_AXI_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_65->M01_AXI_aruser.bind(*p_65_M01_AXI_aruser);
        p_65_M01_AXI_aruser->set_sv_netview_offsetfromdp(12817656);
        xsim_sc_channel<0, bool > *p_65_M01_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_65->M01_AXI_arvalid.bind(*p_65_M01_AXI_arvalid);
        p_65_M01_AXI_arvalid->set_sv_netview_offsetfromdp(12817712);
        xsim_sc_channel<0, bool > *p_65_M01_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_65->M01_AXI_arready.bind(*p_65_M01_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_65_M01_AXI_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_65_M01_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_65->M01_AXI_rdata.bind(*p_65_M01_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_65_M01_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_65_M01_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_65->M01_AXI_rresp.bind(*p_65_M01_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_65_M01_AXI_rresp);
        xsim_sc_channel<0, bool > *p_65_M01_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_65->M01_AXI_rlast.bind(*p_65_M01_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_65_M01_AXI_rlast);
        xsim_sc_channel<0, bool > *p_65_M01_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_65->M01_AXI_rvalid.bind(*p_65_M01_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_65_M01_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_65_M01_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_65->M01_AXI_rready.bind(*p_65_M01_AXI_rready);
        p_65_M01_AXI_rready->set_sv_netview_offsetfromdp(12818048);
    }


extern "C"
    void implicit_HDL_SCcleanup()
    {
        delete sc_inst_1;
        delete sc_inst_2;
        delete sc_inst_3;
        delete sc_inst_4;
        delete sc_inst_5;
        delete sc_inst_6;
        delete sc_inst_7;
        delete sc_inst_8;
        delete sc_inst_9;
        delete sc_inst_10;
        delete sc_inst_11;
        delete sc_inst_12;
        delete sc_inst_13;
        delete sc_inst_14;
        delete sc_inst_15;
        delete sc_inst_16;
        delete sc_inst_17;
        delete sc_inst_18;
        delete sc_inst_19;
        delete sc_inst_20;
        delete sc_inst_21;
        delete sc_inst_22;
        delete sc_inst_23;
        delete sc_inst_24;
        delete sc_inst_25;
        delete sc_inst_26;
        delete sc_inst_27;
        delete sc_inst_28;
        delete sc_inst_29;
        delete sc_inst_30;
        delete sc_inst_31;
        delete sc_inst_32;
        delete sc_inst_33;
        delete sc_inst_34;
        delete sc_inst_35;
        delete sc_inst_36;
        delete sc_inst_37;
        delete sc_inst_38;
        delete sc_inst_39;
        delete sc_inst_40;
        delete sc_inst_41;
        delete sc_inst_42;
        delete sc_inst_43;
        delete sc_inst_44;
        delete sc_inst_45;
        delete sc_inst_46;
        delete sc_inst_47;
        delete sc_inst_48;
        delete sc_inst_49;
        delete sc_inst_50;
        delete sc_inst_51;
        delete sc_inst_52;
        delete sc_inst_53;
        delete sc_inst_54;
        delete sc_inst_55;
        delete sc_inst_56;
        delete sc_inst_57;
        delete sc_inst_58;
        delete sc_inst_59;
        delete sc_inst_60;
        delete sc_inst_61;
        delete sc_inst_62;
        delete sc_inst_63;
        delete sc_inst_64;
        delete sc_inst_65;
    }
