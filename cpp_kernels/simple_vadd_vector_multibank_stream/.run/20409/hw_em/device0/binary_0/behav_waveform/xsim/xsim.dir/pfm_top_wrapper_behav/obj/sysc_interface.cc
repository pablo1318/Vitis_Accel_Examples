#pragma GCC diagnostic ignored "-Wdeprecated-declarations" 
#include "xsim.dir/pfm_top_wrapper_behav/obj/sysc_interface.h"
#include <map>
#include <list>


extern "C" { std::vector<void*> *_glb_hdl_sc_channel_map; } 



extern "C"
    void call_HDL_SC_WRITE_bv_1(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<1, sc_dt::sc_bv<1> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_2(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<2, sc_dt::sc_bv<2> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_3(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<3, sc_dt::sc_bv<3> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_4(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<4, sc_dt::sc_bv<4> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_6(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<6, sc_dt::sc_bv<6> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_7(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<7, sc_dt::sc_bv<7> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_8(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<8, sc_dt::sc_bv<8> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_9(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<9, sc_dt::sc_bv<9> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_12(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<12, sc_dt::sc_bv<12> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_14(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<14, sc_dt::sc_bv<14> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_16(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<16, sc_dt::sc_bv<16> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_17(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<17, sc_dt::sc_bv<17> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_18(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<18, sc_dt::sc_bv<18> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_22(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<22, sc_dt::sc_bv<22> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_24(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<24, sc_dt::sc_bv<24> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_31(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<31, sc_dt::sc_bv<31> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_32(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<32, sc_dt::sc_bv<32> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_33(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<33, sc_dt::sc_bv<33> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_34(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<34, sc_dt::sc_bv<34> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_37(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<37, sc_dt::sc_bv<37> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_38(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<38, sc_dt::sc_bv<38> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_62(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<62, sc_dt::sc_bv<62> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_64(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<64, sc_dt::sc_bv<64> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_72(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<72, sc_dt::sc_bv<72> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_96(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<96, sc_dt::sc_bv<96> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_114(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<114, sc_dt::sc_bv<114> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_128(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<128, sc_dt::sc_bv<128> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_192(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<192, sc_dt::sc_bv<192> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_256(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<256, sc_dt::sc_bv<256> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_384(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<384, sc_dt::sc_bv<384> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_512(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<512, sc_dt::sc_bv<512> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_int(unsigned int sc_net_index, char* pval)
    {
          int val = *((int*)(pval));
          ((xsim_sc_channel<0, int>*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(val);
    } 



extern "C"
    void call_HDL_SC_WRITE_bit(unsigned int sc_net_index, char* pval)
    {
            sc_dt::sc_bit val  =  (sc_dt::sc_bit)((*((int*)(pval)) & 0x1));
          ((xsim_sc_channel<0, sc_dt::sc_bit>*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(val);
    } 



extern "C"
    void call_HDL_SC_WRITE_logic(unsigned int sc_net_index, char* pval)
    {
          sc_dt::sc_logic val  =  (sc_dt::sc_logic_value_t) (((*((int*)(pval)+1) & 0x1) << 1) | (*((int*)(pval)) & 0x1));
          ((xsim_sc_channel<0, sc_dt::sc_logic>*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(val);
    } 



extern "C"
    void call_HDL_SC_WRITE_bool(unsigned int sc_net_index, char* pval)
    {
          bool val = *((bool*)(pval));
          ((xsim_sc_channel<0, bool>*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(val);
    } 



extern "C"
    void implicit_HDL_SCinstantiate()
    {
        _glb_hdl_sc_channel_map = new std::vector<void*> ();
        sc_inst_1 = new pfm_dynamic_auto_cc_1(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.m00_couplers.auto_cc");
        sc_inst_1->xsim_set_dbg_index(1960);
        xsim_sc_channel<0, bool > *p_1_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_aclk.bind(*p_1_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_1_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_aresetn.bind(*p_1_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->s_axi_awaddr.bind(*p_1_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_1_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_1->s_axi_awprot.bind(*p_1_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_1_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_awvalid.bind(*p_1_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_1_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_awready.bind(*p_1_s_axi_awready);
        p_1_s_axi_awready->set_sv_netview_offsetfromdp(8352488);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_1_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_1->s_axi_wdata.bind(*p_1_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_1_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_1->s_axi_wstrb.bind(*p_1_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_1_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_wvalid.bind(*p_1_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_1_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_wready.bind(*p_1_s_axi_wready);
        p_1_s_axi_wready->set_sv_netview_offsetfromdp(8352712);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->s_axi_bresp.bind(*p_1_s_axi_bresp);
        p_1_s_axi_bresp->set_sv_netview_offsetfromdp(8352768);
        xsim_sc_channel<0, bool > *p_1_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_bvalid.bind(*p_1_s_axi_bvalid);
        p_1_s_axi_bvalid->set_sv_netview_offsetfromdp(8352824);
        xsim_sc_channel<0, bool > *p_1_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_bready.bind(*p_1_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_bready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->s_axi_araddr.bind(*p_1_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_1_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_1->s_axi_arprot.bind(*p_1_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_1_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_arvalid.bind(*p_1_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_1_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_arready.bind(*p_1_s_axi_arready);
        p_1_s_axi_arready->set_sv_netview_offsetfromdp(8353104);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_1_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_1->s_axi_rdata.bind(*p_1_s_axi_rdata);
        p_1_s_axi_rdata->set_sv_netview_offsetfromdp(8353160);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->s_axi_rresp.bind(*p_1_s_axi_rresp);
        p_1_s_axi_rresp->set_sv_netview_offsetfromdp(8353216);
        xsim_sc_channel<0, bool > *p_1_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_rvalid.bind(*p_1_s_axi_rvalid);
        p_1_s_axi_rvalid->set_sv_netview_offsetfromdp(8353272);
        xsim_sc_channel<0, bool > *p_1_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_rready.bind(*p_1_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_rready);
        xsim_sc_channel<0, bool > *p_1_m_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_aclk.bind(*p_1_m_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_1_m_axi_aclk);
        xsim_sc_channel<0, bool > *p_1_m_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_aresetn.bind(*p_1_m_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_1_m_axi_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_m_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->m_axi_awaddr.bind(*p_1_m_axi_awaddr);
        p_1_m_axi_awaddr->set_sv_netview_offsetfromdp(8353496);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_1_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_1->m_axi_awprot.bind(*p_1_m_axi_awprot);
        p_1_m_axi_awprot->set_sv_netview_offsetfromdp(8353552);
        xsim_sc_channel<0, bool > *p_1_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_awvalid.bind(*p_1_m_axi_awvalid);
        p_1_m_axi_awvalid->set_sv_netview_offsetfromdp(8353608);
        xsim_sc_channel<0, bool > *p_1_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_awready.bind(*p_1_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_1_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_1_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_1->m_axi_wdata.bind(*p_1_m_axi_wdata);
        p_1_m_axi_wdata->set_sv_netview_offsetfromdp(8353720);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_1_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_1->m_axi_wstrb.bind(*p_1_m_axi_wstrb);
        p_1_m_axi_wstrb->set_sv_netview_offsetfromdp(8353776);
        xsim_sc_channel<0, bool > *p_1_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_wvalid.bind(*p_1_m_axi_wvalid);
        p_1_m_axi_wvalid->set_sv_netview_offsetfromdp(8353832);
        xsim_sc_channel<0, bool > *p_1_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_wready.bind(*p_1_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_1_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->m_axi_bresp.bind(*p_1_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_1_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_1_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_bvalid.bind(*p_1_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_1_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_1_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_bready.bind(*p_1_m_axi_bready);
        p_1_m_axi_bready->set_sv_netview_offsetfromdp(8354056);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_m_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->m_axi_araddr.bind(*p_1_m_axi_araddr);
        p_1_m_axi_araddr->set_sv_netview_offsetfromdp(8354112);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_1_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_1->m_axi_arprot.bind(*p_1_m_axi_arprot);
        p_1_m_axi_arprot->set_sv_netview_offsetfromdp(8354168);
        xsim_sc_channel<0, bool > *p_1_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_arvalid.bind(*p_1_m_axi_arvalid);
        p_1_m_axi_arvalid->set_sv_netview_offsetfromdp(8354224);
        xsim_sc_channel<0, bool > *p_1_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_arready.bind(*p_1_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_1_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_1_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_1->m_axi_rdata.bind(*p_1_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_1_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->m_axi_rresp.bind(*p_1_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_1_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_1_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_rvalid.bind(*p_1_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_1_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_1_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_rready.bind(*p_1_m_axi_rready);
        p_1_m_axi_rready->set_sv_netview_offsetfromdp(8354504);
        sc_inst_2 = new pfm_dynamic_m00_regslice_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.m00_couplers.m00_regslice");
        sc_inst_2->xsim_set_dbg_index(1961);
        xsim_sc_channel<0, bool > *p_2_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_2->aclk.bind(*p_2_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_2_aclk);
        xsim_sc_channel<0, bool > *p_2_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_2->aresetn.bind(*p_2_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_2_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_2_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_2->s_axi_awaddr.bind(*p_2_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_2_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_2->s_axi_awprot.bind(*p_2_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_2_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_awvalid.bind(*p_2_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_2_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_awready.bind(*p_2_s_axi_awready);
        p_2_s_axi_awready->set_sv_netview_offsetfromdp(8354888);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_2_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_2->s_axi_wdata.bind(*p_2_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_2_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_2->s_axi_wstrb.bind(*p_2_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_2_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_wvalid.bind(*p_2_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_2_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_wready.bind(*p_2_s_axi_wready);
        p_2_s_axi_wready->set_sv_netview_offsetfromdp(8355112);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_2_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_2->s_axi_bresp.bind(*p_2_s_axi_bresp);
        p_2_s_axi_bresp->set_sv_netview_offsetfromdp(8355168);
        xsim_sc_channel<0, bool > *p_2_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_bvalid.bind(*p_2_s_axi_bvalid);
        p_2_s_axi_bvalid->set_sv_netview_offsetfromdp(8355224);
        xsim_sc_channel<0, bool > *p_2_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_bready.bind(*p_2_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_bready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_2_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_2->s_axi_araddr.bind(*p_2_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_2_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_2->s_axi_arprot.bind(*p_2_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_2_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_arvalid.bind(*p_2_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_2_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_arready.bind(*p_2_s_axi_arready);
        p_2_s_axi_arready->set_sv_netview_offsetfromdp(8355504);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_2_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_2->s_axi_rdata.bind(*p_2_s_axi_rdata);
        p_2_s_axi_rdata->set_sv_netview_offsetfromdp(8355560);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_2_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_2->s_axi_rresp.bind(*p_2_s_axi_rresp);
        p_2_s_axi_rresp->set_sv_netview_offsetfromdp(8355616);
        xsim_sc_channel<0, bool > *p_2_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_rvalid.bind(*p_2_s_axi_rvalid);
        p_2_s_axi_rvalid->set_sv_netview_offsetfromdp(8355672);
        xsim_sc_channel<0, bool > *p_2_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_rready.bind(*p_2_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_rready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_2_m_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_2->m_axi_awaddr.bind(*p_2_m_axi_awaddr);
        p_2_m_axi_awaddr->set_sv_netview_offsetfromdp(8355784);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_2_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_2->m_axi_awprot.bind(*p_2_m_axi_awprot);
        p_2_m_axi_awprot->set_sv_netview_offsetfromdp(8355840);
        xsim_sc_channel<0, bool > *p_2_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axi_awvalid.bind(*p_2_m_axi_awvalid);
        p_2_m_axi_awvalid->set_sv_netview_offsetfromdp(8355896);
        xsim_sc_channel<0, bool > *p_2_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axi_awready.bind(*p_2_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_2_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_2_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_2->m_axi_wdata.bind(*p_2_m_axi_wdata);
        p_2_m_axi_wdata->set_sv_netview_offsetfromdp(8356008);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_2_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_2->m_axi_wstrb.bind(*p_2_m_axi_wstrb);
        p_2_m_axi_wstrb->set_sv_netview_offsetfromdp(8356064);
        xsim_sc_channel<0, bool > *p_2_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axi_wvalid.bind(*p_2_m_axi_wvalid);
        p_2_m_axi_wvalid->set_sv_netview_offsetfromdp(8356120);
        xsim_sc_channel<0, bool > *p_2_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axi_wready.bind(*p_2_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_2_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_2_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_2->m_axi_bresp.bind(*p_2_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_2_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_2_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axi_bvalid.bind(*p_2_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_2_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_2_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axi_bready.bind(*p_2_m_axi_bready);
        p_2_m_axi_bready->set_sv_netview_offsetfromdp(8356344);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_2_m_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_2->m_axi_araddr.bind(*p_2_m_axi_araddr);
        p_2_m_axi_araddr->set_sv_netview_offsetfromdp(8356400);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_2_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_2->m_axi_arprot.bind(*p_2_m_axi_arprot);
        p_2_m_axi_arprot->set_sv_netview_offsetfromdp(8356456);
        xsim_sc_channel<0, bool > *p_2_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axi_arvalid.bind(*p_2_m_axi_arvalid);
        p_2_m_axi_arvalid->set_sv_netview_offsetfromdp(8356512);
        xsim_sc_channel<0, bool > *p_2_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axi_arready.bind(*p_2_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_2_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_2_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_2->m_axi_rdata.bind(*p_2_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_2_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_2_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_2->m_axi_rresp.bind(*p_2_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_2_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_2_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axi_rvalid.bind(*p_2_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_2_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_2_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axi_rready.bind(*p_2_m_axi_rready);
        p_2_m_axi_rready->set_sv_netview_offsetfromdp(8356792);
        sc_inst_3 = new pfm_dynamic_auto_cc_2(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.m01_couplers.auto_cc");
        sc_inst_3->xsim_set_dbg_index(2002);
        xsim_sc_channel<0, bool > *p_3_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_aclk.bind(*p_3_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_3_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_aresetn.bind(*p_3_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->s_axi_awaddr.bind(*p_3_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_3_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_3->s_axi_awprot.bind(*p_3_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_3_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_awvalid.bind(*p_3_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_3_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_awready.bind(*p_3_s_axi_awready);
        p_3_s_axi_awready->set_sv_netview_offsetfromdp(8392664);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_3_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_3->s_axi_wdata.bind(*p_3_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_3_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_3->s_axi_wstrb.bind(*p_3_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_3_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_wvalid.bind(*p_3_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_3_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_wready.bind(*p_3_s_axi_wready);
        p_3_s_axi_wready->set_sv_netview_offsetfromdp(8392888);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->s_axi_bresp.bind(*p_3_s_axi_bresp);
        p_3_s_axi_bresp->set_sv_netview_offsetfromdp(8392944);
        xsim_sc_channel<0, bool > *p_3_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_bvalid.bind(*p_3_s_axi_bvalid);
        p_3_s_axi_bvalid->set_sv_netview_offsetfromdp(8393000);
        xsim_sc_channel<0, bool > *p_3_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_bready.bind(*p_3_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_bready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->s_axi_araddr.bind(*p_3_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_3_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_3->s_axi_arprot.bind(*p_3_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_3_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_arvalid.bind(*p_3_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_3_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_arready.bind(*p_3_s_axi_arready);
        p_3_s_axi_arready->set_sv_netview_offsetfromdp(8393280);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_3_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_3->s_axi_rdata.bind(*p_3_s_axi_rdata);
        p_3_s_axi_rdata->set_sv_netview_offsetfromdp(8393336);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->s_axi_rresp.bind(*p_3_s_axi_rresp);
        p_3_s_axi_rresp->set_sv_netview_offsetfromdp(8393392);
        xsim_sc_channel<0, bool > *p_3_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_rvalid.bind(*p_3_s_axi_rvalid);
        p_3_s_axi_rvalid->set_sv_netview_offsetfromdp(8393448);
        xsim_sc_channel<0, bool > *p_3_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_rready.bind(*p_3_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_rready);
        xsim_sc_channel<0, bool > *p_3_m_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_aclk.bind(*p_3_m_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_3_m_axi_aclk);
        xsim_sc_channel<0, bool > *p_3_m_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_aresetn.bind(*p_3_m_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_3_m_axi_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_m_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->m_axi_awaddr.bind(*p_3_m_axi_awaddr);
        p_3_m_axi_awaddr->set_sv_netview_offsetfromdp(8393672);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_3_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_3->m_axi_awprot.bind(*p_3_m_axi_awprot);
        p_3_m_axi_awprot->set_sv_netview_offsetfromdp(8393728);
        xsim_sc_channel<0, bool > *p_3_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_awvalid.bind(*p_3_m_axi_awvalid);
        p_3_m_axi_awvalid->set_sv_netview_offsetfromdp(8393784);
        xsim_sc_channel<0, bool > *p_3_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_awready.bind(*p_3_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_3_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_3_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_3->m_axi_wdata.bind(*p_3_m_axi_wdata);
        p_3_m_axi_wdata->set_sv_netview_offsetfromdp(8393896);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_3_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_3->m_axi_wstrb.bind(*p_3_m_axi_wstrb);
        p_3_m_axi_wstrb->set_sv_netview_offsetfromdp(8393952);
        xsim_sc_channel<0, bool > *p_3_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_wvalid.bind(*p_3_m_axi_wvalid);
        p_3_m_axi_wvalid->set_sv_netview_offsetfromdp(8394008);
        xsim_sc_channel<0, bool > *p_3_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_wready.bind(*p_3_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_3_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->m_axi_bresp.bind(*p_3_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_3_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_3_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_bvalid.bind(*p_3_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_3_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_3_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_bready.bind(*p_3_m_axi_bready);
        p_3_m_axi_bready->set_sv_netview_offsetfromdp(8394232);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_m_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->m_axi_araddr.bind(*p_3_m_axi_araddr);
        p_3_m_axi_araddr->set_sv_netview_offsetfromdp(8394288);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_3_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_3->m_axi_arprot.bind(*p_3_m_axi_arprot);
        p_3_m_axi_arprot->set_sv_netview_offsetfromdp(8394344);
        xsim_sc_channel<0, bool > *p_3_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_arvalid.bind(*p_3_m_axi_arvalid);
        p_3_m_axi_arvalid->set_sv_netview_offsetfromdp(8394400);
        xsim_sc_channel<0, bool > *p_3_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_arready.bind(*p_3_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_3_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_3_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_3->m_axi_rdata.bind(*p_3_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_3_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->m_axi_rresp.bind(*p_3_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_3_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_3_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_rvalid.bind(*p_3_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_3_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_3_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_rready.bind(*p_3_m_axi_rready);
        p_3_m_axi_rready->set_sv_netview_offsetfromdp(8394680);
        sc_inst_4 = new pfm_dynamic_m01_regslice_5(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.m01_couplers.m01_regslice");
        sc_inst_4->xsim_set_dbg_index(2003);
        xsim_sc_channel<0, bool > *p_4_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_4->aclk.bind(*p_4_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_4_aclk);
        xsim_sc_channel<0, bool > *p_4_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_4->aresetn.bind(*p_4_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_4_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->s_axi_awaddr.bind(*p_4_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->s_axi_awprot.bind(*p_4_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_4_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_awvalid.bind(*p_4_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_4_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_awready.bind(*p_4_s_axi_awready);
        p_4_s_axi_awready->set_sv_netview_offsetfromdp(8395064);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_4_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_4->s_axi_wdata.bind(*p_4_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_4_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_4->s_axi_wstrb.bind(*p_4_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_4_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_wvalid.bind(*p_4_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_4_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_wready.bind(*p_4_s_axi_wready);
        p_4_s_axi_wready->set_sv_netview_offsetfromdp(8395288);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->s_axi_bresp.bind(*p_4_s_axi_bresp);
        p_4_s_axi_bresp->set_sv_netview_offsetfromdp(8395344);
        xsim_sc_channel<0, bool > *p_4_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_bvalid.bind(*p_4_s_axi_bvalid);
        p_4_s_axi_bvalid->set_sv_netview_offsetfromdp(8395400);
        xsim_sc_channel<0, bool > *p_4_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_bready.bind(*p_4_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_bready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->s_axi_araddr.bind(*p_4_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->s_axi_arprot.bind(*p_4_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_4_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_arvalid.bind(*p_4_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_4_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_arready.bind(*p_4_s_axi_arready);
        p_4_s_axi_arready->set_sv_netview_offsetfromdp(8395680);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_4_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_4->s_axi_rdata.bind(*p_4_s_axi_rdata);
        p_4_s_axi_rdata->set_sv_netview_offsetfromdp(8395736);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->s_axi_rresp.bind(*p_4_s_axi_rresp);
        p_4_s_axi_rresp->set_sv_netview_offsetfromdp(8395792);
        xsim_sc_channel<0, bool > *p_4_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_rvalid.bind(*p_4_s_axi_rvalid);
        p_4_s_axi_rvalid->set_sv_netview_offsetfromdp(8395848);
        xsim_sc_channel<0, bool > *p_4_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_rready.bind(*p_4_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_rready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_m_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->m_axi_awaddr.bind(*p_4_m_axi_awaddr);
        p_4_m_axi_awaddr->set_sv_netview_offsetfromdp(8395960);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->m_axi_awprot.bind(*p_4_m_axi_awprot);
        p_4_m_axi_awprot->set_sv_netview_offsetfromdp(8396016);
        xsim_sc_channel<0, bool > *p_4_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axi_awvalid.bind(*p_4_m_axi_awvalid);
        p_4_m_axi_awvalid->set_sv_netview_offsetfromdp(8396072);
        xsim_sc_channel<0, bool > *p_4_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axi_awready.bind(*p_4_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_4_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_4_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_4->m_axi_wdata.bind(*p_4_m_axi_wdata);
        p_4_m_axi_wdata->set_sv_netview_offsetfromdp(8396184);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_4_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_4->m_axi_wstrb.bind(*p_4_m_axi_wstrb);
        p_4_m_axi_wstrb->set_sv_netview_offsetfromdp(8396240);
        xsim_sc_channel<0, bool > *p_4_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axi_wvalid.bind(*p_4_m_axi_wvalid);
        p_4_m_axi_wvalid->set_sv_netview_offsetfromdp(8396296);
        xsim_sc_channel<0, bool > *p_4_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axi_wready.bind(*p_4_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_4_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->m_axi_bresp.bind(*p_4_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_4_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_4_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axi_bvalid.bind(*p_4_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_4_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_4_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axi_bready.bind(*p_4_m_axi_bready);
        p_4_m_axi_bready->set_sv_netview_offsetfromdp(8396520);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_m_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->m_axi_araddr.bind(*p_4_m_axi_araddr);
        p_4_m_axi_araddr->set_sv_netview_offsetfromdp(8396576);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->m_axi_arprot.bind(*p_4_m_axi_arprot);
        p_4_m_axi_arprot->set_sv_netview_offsetfromdp(8396632);
        xsim_sc_channel<0, bool > *p_4_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axi_arvalid.bind(*p_4_m_axi_arvalid);
        p_4_m_axi_arvalid->set_sv_netview_offsetfromdp(8396688);
        xsim_sc_channel<0, bool > *p_4_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axi_arready.bind(*p_4_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_4_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_4_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_4->m_axi_rdata.bind(*p_4_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_4_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->m_axi_rresp.bind(*p_4_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_4_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_4_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axi_rvalid.bind(*p_4_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_4_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_4_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axi_rready.bind(*p_4_m_axi_rready);
        p_4_m_axi_rready->set_sv_netview_offsetfromdp(8396968);
        sc_inst_5 = new pfm_dynamic_auto_cc_3(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.m02_couplers.auto_cc");
        sc_inst_5->xsim_set_dbg_index(2044);
        xsim_sc_channel<0, bool > *p_5_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_aclk.bind(*p_5_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_5_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_aresetn.bind(*p_5_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->s_axi_awaddr.bind(*p_5_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->s_axi_awprot.bind(*p_5_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_5_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_awvalid.bind(*p_5_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_5_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_awready.bind(*p_5_s_axi_awready);
        p_5_s_axi_awready->set_sv_netview_offsetfromdp(8433992);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_5_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_5->s_axi_wdata.bind(*p_5_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->s_axi_wstrb.bind(*p_5_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_5_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_wvalid.bind(*p_5_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_5_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_wready.bind(*p_5_s_axi_wready);
        p_5_s_axi_wready->set_sv_netview_offsetfromdp(8434216);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->s_axi_bresp.bind(*p_5_s_axi_bresp);
        p_5_s_axi_bresp->set_sv_netview_offsetfromdp(8434272);
        xsim_sc_channel<0, bool > *p_5_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_bvalid.bind(*p_5_s_axi_bvalid);
        p_5_s_axi_bvalid->set_sv_netview_offsetfromdp(8434328);
        xsim_sc_channel<0, bool > *p_5_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_bready.bind(*p_5_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_bready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->s_axi_araddr.bind(*p_5_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->s_axi_arprot.bind(*p_5_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_5_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_arvalid.bind(*p_5_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_5_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_arready.bind(*p_5_s_axi_arready);
        p_5_s_axi_arready->set_sv_netview_offsetfromdp(8434608);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_5_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_5->s_axi_rdata.bind(*p_5_s_axi_rdata);
        p_5_s_axi_rdata->set_sv_netview_offsetfromdp(8434664);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->s_axi_rresp.bind(*p_5_s_axi_rresp);
        p_5_s_axi_rresp->set_sv_netview_offsetfromdp(8434720);
        xsim_sc_channel<0, bool > *p_5_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_rvalid.bind(*p_5_s_axi_rvalid);
        p_5_s_axi_rvalid->set_sv_netview_offsetfromdp(8434776);
        xsim_sc_channel<0, bool > *p_5_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_rready.bind(*p_5_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_rready);
        xsim_sc_channel<0, bool > *p_5_m_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_aclk.bind(*p_5_m_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_5_m_axi_aclk);
        xsim_sc_channel<0, bool > *p_5_m_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_aresetn.bind(*p_5_m_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_5_m_axi_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_m_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->m_axi_awaddr.bind(*p_5_m_axi_awaddr);
        p_5_m_axi_awaddr->set_sv_netview_offsetfromdp(8435000);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->m_axi_awprot.bind(*p_5_m_axi_awprot);
        p_5_m_axi_awprot->set_sv_netview_offsetfromdp(8435056);
        xsim_sc_channel<0, bool > *p_5_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_awvalid.bind(*p_5_m_axi_awvalid);
        p_5_m_axi_awvalid->set_sv_netview_offsetfromdp(8435112);
        xsim_sc_channel<0, bool > *p_5_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_awready.bind(*p_5_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_5_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_5_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_5->m_axi_wdata.bind(*p_5_m_axi_wdata);
        p_5_m_axi_wdata->set_sv_netview_offsetfromdp(8435224);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->m_axi_wstrb.bind(*p_5_m_axi_wstrb);
        p_5_m_axi_wstrb->set_sv_netview_offsetfromdp(8435280);
        xsim_sc_channel<0, bool > *p_5_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_wvalid.bind(*p_5_m_axi_wvalid);
        p_5_m_axi_wvalid->set_sv_netview_offsetfromdp(8435336);
        xsim_sc_channel<0, bool > *p_5_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_wready.bind(*p_5_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_5_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->m_axi_bresp.bind(*p_5_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_5_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_5_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_bvalid.bind(*p_5_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_5_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_bready.bind(*p_5_m_axi_bready);
        p_5_m_axi_bready->set_sv_netview_offsetfromdp(8435560);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_m_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->m_axi_araddr.bind(*p_5_m_axi_araddr);
        p_5_m_axi_araddr->set_sv_netview_offsetfromdp(8435616);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->m_axi_arprot.bind(*p_5_m_axi_arprot);
        p_5_m_axi_arprot->set_sv_netview_offsetfromdp(8435672);
        xsim_sc_channel<0, bool > *p_5_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_arvalid.bind(*p_5_m_axi_arvalid);
        p_5_m_axi_arvalid->set_sv_netview_offsetfromdp(8435728);
        xsim_sc_channel<0, bool > *p_5_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_arready.bind(*p_5_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_5_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_5_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_5->m_axi_rdata.bind(*p_5_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_5_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->m_axi_rresp.bind(*p_5_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_5_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_5_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_rvalid.bind(*p_5_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_5_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_rready.bind(*p_5_m_axi_rready);
        p_5_m_axi_rready->set_sv_netview_offsetfromdp(8436008);
        sc_inst_6 = new pfm_dynamic_m02_regslice_5(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.m02_couplers.m02_regslice");
        sc_inst_6->xsim_set_dbg_index(2045);
        xsim_sc_channel<0, bool > *p_6_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_6->aclk.bind(*p_6_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_6_aclk);
        xsim_sc_channel<0, bool > *p_6_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_6->aresetn.bind(*p_6_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_6_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->s_axi_awaddr.bind(*p_6_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->s_axi_awprot.bind(*p_6_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_6_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_awvalid.bind(*p_6_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_6_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_awready.bind(*p_6_s_axi_awready);
        p_6_s_axi_awready->set_sv_netview_offsetfromdp(8436392);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->s_axi_wdata.bind(*p_6_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->s_axi_wstrb.bind(*p_6_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_6_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_wvalid.bind(*p_6_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_6_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_wready.bind(*p_6_s_axi_wready);
        p_6_s_axi_wready->set_sv_netview_offsetfromdp(8436616);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->s_axi_bresp.bind(*p_6_s_axi_bresp);
        p_6_s_axi_bresp->set_sv_netview_offsetfromdp(8436672);
        xsim_sc_channel<0, bool > *p_6_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_bvalid.bind(*p_6_s_axi_bvalid);
        p_6_s_axi_bvalid->set_sv_netview_offsetfromdp(8436728);
        xsim_sc_channel<0, bool > *p_6_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_bready.bind(*p_6_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_bready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->s_axi_araddr.bind(*p_6_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->s_axi_arprot.bind(*p_6_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_6_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_arvalid.bind(*p_6_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_6_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_arready.bind(*p_6_s_axi_arready);
        p_6_s_axi_arready->set_sv_netview_offsetfromdp(8437008);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->s_axi_rdata.bind(*p_6_s_axi_rdata);
        p_6_s_axi_rdata->set_sv_netview_offsetfromdp(8437064);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->s_axi_rresp.bind(*p_6_s_axi_rresp);
        p_6_s_axi_rresp->set_sv_netview_offsetfromdp(8437120);
        xsim_sc_channel<0, bool > *p_6_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_rvalid.bind(*p_6_s_axi_rvalid);
        p_6_s_axi_rvalid->set_sv_netview_offsetfromdp(8437176);
        xsim_sc_channel<0, bool > *p_6_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_rready.bind(*p_6_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_rready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_m_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->m_axi_awaddr.bind(*p_6_m_axi_awaddr);
        p_6_m_axi_awaddr->set_sv_netview_offsetfromdp(8437288);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->m_axi_awprot.bind(*p_6_m_axi_awprot);
        p_6_m_axi_awprot->set_sv_netview_offsetfromdp(8437344);
        xsim_sc_channel<0, bool > *p_6_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axi_awvalid.bind(*p_6_m_axi_awvalid);
        p_6_m_axi_awvalid->set_sv_netview_offsetfromdp(8437400);
        xsim_sc_channel<0, bool > *p_6_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axi_awready.bind(*p_6_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_6_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->m_axi_wdata.bind(*p_6_m_axi_wdata);
        p_6_m_axi_wdata->set_sv_netview_offsetfromdp(8437512);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->m_axi_wstrb.bind(*p_6_m_axi_wstrb);
        p_6_m_axi_wstrb->set_sv_netview_offsetfromdp(8437568);
        xsim_sc_channel<0, bool > *p_6_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axi_wvalid.bind(*p_6_m_axi_wvalid);
        p_6_m_axi_wvalid->set_sv_netview_offsetfromdp(8437624);
        xsim_sc_channel<0, bool > *p_6_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axi_wready.bind(*p_6_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_6_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->m_axi_bresp.bind(*p_6_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_6_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_6_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axi_bvalid.bind(*p_6_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_6_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_6_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axi_bready.bind(*p_6_m_axi_bready);
        p_6_m_axi_bready->set_sv_netview_offsetfromdp(8437848);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_m_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->m_axi_araddr.bind(*p_6_m_axi_araddr);
        p_6_m_axi_araddr->set_sv_netview_offsetfromdp(8437904);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->m_axi_arprot.bind(*p_6_m_axi_arprot);
        p_6_m_axi_arprot->set_sv_netview_offsetfromdp(8437960);
        xsim_sc_channel<0, bool > *p_6_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axi_arvalid.bind(*p_6_m_axi_arvalid);
        p_6_m_axi_arvalid->set_sv_netview_offsetfromdp(8438016);
        xsim_sc_channel<0, bool > *p_6_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axi_arready.bind(*p_6_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_6_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->m_axi_rdata.bind(*p_6_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_6_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->m_axi_rresp.bind(*p_6_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_6_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_6_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axi_rvalid.bind(*p_6_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_6_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_6_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axi_rready.bind(*p_6_m_axi_rready);
        p_6_m_axi_rready->set_sv_netview_offsetfromdp(8438296);
        sc_inst_7 = new pfm_dynamic_auto_cc_4(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.m03_couplers.auto_cc");
        sc_inst_7->xsim_set_dbg_index(2088);
        xsim_sc_channel<0, bool > *p_7_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_aclk.bind(*p_7_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_7_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_aresetn.bind(*p_7_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_7_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_7->s_axi_awaddr.bind(*p_7_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->s_axi_awprot.bind(*p_7_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_7_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_awvalid.bind(*p_7_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_7_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_awready.bind(*p_7_s_axi_awready);
        p_7_s_axi_awready->set_sv_netview_offsetfromdp(8474168);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_7_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_7->s_axi_wdata.bind(*p_7_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->s_axi_wstrb.bind(*p_7_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_7_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_wvalid.bind(*p_7_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_7_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_wready.bind(*p_7_s_axi_wready);
        p_7_s_axi_wready->set_sv_netview_offsetfromdp(8474392);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->s_axi_bresp.bind(*p_7_s_axi_bresp);
        p_7_s_axi_bresp->set_sv_netview_offsetfromdp(8474448);
        xsim_sc_channel<0, bool > *p_7_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_bvalid.bind(*p_7_s_axi_bvalid);
        p_7_s_axi_bvalid->set_sv_netview_offsetfromdp(8474504);
        xsim_sc_channel<0, bool > *p_7_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_bready.bind(*p_7_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_bready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_7_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_7->s_axi_araddr.bind(*p_7_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->s_axi_arprot.bind(*p_7_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_7_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_arvalid.bind(*p_7_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_7_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_arready.bind(*p_7_s_axi_arready);
        p_7_s_axi_arready->set_sv_netview_offsetfromdp(8474784);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_7_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_7->s_axi_rdata.bind(*p_7_s_axi_rdata);
        p_7_s_axi_rdata->set_sv_netview_offsetfromdp(8474840);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->s_axi_rresp.bind(*p_7_s_axi_rresp);
        p_7_s_axi_rresp->set_sv_netview_offsetfromdp(8474896);
        xsim_sc_channel<0, bool > *p_7_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_rvalid.bind(*p_7_s_axi_rvalid);
        p_7_s_axi_rvalid->set_sv_netview_offsetfromdp(8474952);
        xsim_sc_channel<0, bool > *p_7_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_rready.bind(*p_7_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_rready);
        xsim_sc_channel<0, bool > *p_7_m_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_aclk.bind(*p_7_m_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_axi_aclk);
        xsim_sc_channel<0, bool > *p_7_m_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_aresetn.bind(*p_7_m_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_axi_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_7_m_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_7->m_axi_awaddr.bind(*p_7_m_axi_awaddr);
        p_7_m_axi_awaddr->set_sv_netview_offsetfromdp(8475176);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->m_axi_awprot.bind(*p_7_m_axi_awprot);
        p_7_m_axi_awprot->set_sv_netview_offsetfromdp(8475232);
        xsim_sc_channel<0, bool > *p_7_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_awvalid.bind(*p_7_m_axi_awvalid);
        p_7_m_axi_awvalid->set_sv_netview_offsetfromdp(8475288);
        xsim_sc_channel<0, bool > *p_7_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_awready.bind(*p_7_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_7_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_7->m_axi_wdata.bind(*p_7_m_axi_wdata);
        p_7_m_axi_wdata->set_sv_netview_offsetfromdp(8475400);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->m_axi_wstrb.bind(*p_7_m_axi_wstrb);
        p_7_m_axi_wstrb->set_sv_netview_offsetfromdp(8475456);
        xsim_sc_channel<0, bool > *p_7_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_wvalid.bind(*p_7_m_axi_wvalid);
        p_7_m_axi_wvalid->set_sv_netview_offsetfromdp(8475512);
        xsim_sc_channel<0, bool > *p_7_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_wready.bind(*p_7_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->m_axi_bresp.bind(*p_7_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_7_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_bvalid.bind(*p_7_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_7_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_bready.bind(*p_7_m_axi_bready);
        p_7_m_axi_bready->set_sv_netview_offsetfromdp(8475736);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_7_m_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_7->m_axi_araddr.bind(*p_7_m_axi_araddr);
        p_7_m_axi_araddr->set_sv_netview_offsetfromdp(8475792);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->m_axi_arprot.bind(*p_7_m_axi_arprot);
        p_7_m_axi_arprot->set_sv_netview_offsetfromdp(8475848);
        xsim_sc_channel<0, bool > *p_7_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_arvalid.bind(*p_7_m_axi_arvalid);
        p_7_m_axi_arvalid->set_sv_netview_offsetfromdp(8475904);
        xsim_sc_channel<0, bool > *p_7_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_arready.bind(*p_7_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_7_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_7->m_axi_rdata.bind(*p_7_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->m_axi_rresp.bind(*p_7_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_7_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_rvalid.bind(*p_7_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_7_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_rready.bind(*p_7_m_axi_rready);
        p_7_m_axi_rready->set_sv_netview_offsetfromdp(8476184);
        sc_inst_8 = new pfm_dynamic_m03_regslice_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.m03_couplers.m03_regslice");
        sc_inst_8->xsim_set_dbg_index(2089);
        xsim_sc_channel<0, bool > *p_8_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_8->aclk.bind(*p_8_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_8_aclk);
        xsim_sc_channel<0, bool > *p_8_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_8->aresetn.bind(*p_8_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_8_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_8_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_8->s_axi_awaddr.bind(*p_8_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->s_axi_awprot.bind(*p_8_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_8_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_axi_awvalid.bind(*p_8_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_8_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_axi_awready.bind(*p_8_s_axi_awready);
        p_8_s_axi_awready->set_sv_netview_offsetfromdp(8476568);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->s_axi_wdata.bind(*p_8_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->s_axi_wstrb.bind(*p_8_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_8_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_axi_wvalid.bind(*p_8_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_8_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_axi_wready.bind(*p_8_s_axi_wready);
        p_8_s_axi_wready->set_sv_netview_offsetfromdp(8476792);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->s_axi_bresp.bind(*p_8_s_axi_bresp);
        p_8_s_axi_bresp->set_sv_netview_offsetfromdp(8476848);
        xsim_sc_channel<0, bool > *p_8_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_axi_bvalid.bind(*p_8_s_axi_bvalid);
        p_8_s_axi_bvalid->set_sv_netview_offsetfromdp(8476904);
        xsim_sc_channel<0, bool > *p_8_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_axi_bready.bind(*p_8_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_axi_bready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_8_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_8->s_axi_araddr.bind(*p_8_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->s_axi_arprot.bind(*p_8_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_8_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_axi_arvalid.bind(*p_8_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_8_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_axi_arready.bind(*p_8_s_axi_arready);
        p_8_s_axi_arready->set_sv_netview_offsetfromdp(8477184);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->s_axi_rdata.bind(*p_8_s_axi_rdata);
        p_8_s_axi_rdata->set_sv_netview_offsetfromdp(8477240);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->s_axi_rresp.bind(*p_8_s_axi_rresp);
        p_8_s_axi_rresp->set_sv_netview_offsetfromdp(8477296);
        xsim_sc_channel<0, bool > *p_8_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_axi_rvalid.bind(*p_8_s_axi_rvalid);
        p_8_s_axi_rvalid->set_sv_netview_offsetfromdp(8477352);
        xsim_sc_channel<0, bool > *p_8_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_axi_rready.bind(*p_8_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_axi_rready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_8_m_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_8->m_axi_awaddr.bind(*p_8_m_axi_awaddr);
        p_8_m_axi_awaddr->set_sv_netview_offsetfromdp(8477464);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->m_axi_awprot.bind(*p_8_m_axi_awprot);
        p_8_m_axi_awprot->set_sv_netview_offsetfromdp(8477520);
        xsim_sc_channel<0, bool > *p_8_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->m_axi_awvalid.bind(*p_8_m_axi_awvalid);
        p_8_m_axi_awvalid->set_sv_netview_offsetfromdp(8477576);
        xsim_sc_channel<0, bool > *p_8_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_8->m_axi_awready.bind(*p_8_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->m_axi_wdata.bind(*p_8_m_axi_wdata);
        p_8_m_axi_wdata->set_sv_netview_offsetfromdp(8477688);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->m_axi_wstrb.bind(*p_8_m_axi_wstrb);
        p_8_m_axi_wstrb->set_sv_netview_offsetfromdp(8477744);
        xsim_sc_channel<0, bool > *p_8_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->m_axi_wvalid.bind(*p_8_m_axi_wvalid);
        p_8_m_axi_wvalid->set_sv_netview_offsetfromdp(8477800);
        xsim_sc_channel<0, bool > *p_8_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_8->m_axi_wready.bind(*p_8_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->m_axi_bresp.bind(*p_8_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_8_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->m_axi_bvalid.bind(*p_8_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_8_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_8->m_axi_bready.bind(*p_8_m_axi_bready);
        p_8_m_axi_bready->set_sv_netview_offsetfromdp(8478024);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_8_m_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_8->m_axi_araddr.bind(*p_8_m_axi_araddr);
        p_8_m_axi_araddr->set_sv_netview_offsetfromdp(8478080);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->m_axi_arprot.bind(*p_8_m_axi_arprot);
        p_8_m_axi_arprot->set_sv_netview_offsetfromdp(8478136);
        xsim_sc_channel<0, bool > *p_8_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->m_axi_arvalid.bind(*p_8_m_axi_arvalid);
        p_8_m_axi_arvalid->set_sv_netview_offsetfromdp(8478192);
        xsim_sc_channel<0, bool > *p_8_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_8->m_axi_arready.bind(*p_8_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->m_axi_rdata.bind(*p_8_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->m_axi_rresp.bind(*p_8_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_8_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->m_axi_rvalid.bind(*p_8_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_8_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_8->m_axi_rready.bind(*p_8_m_axi_rready);
        p_8_m_axi_rready->set_sv_netview_offsetfromdp(8478472);
        sc_inst_9 = new pfm_dynamic_auto_cc_5(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.m04_couplers.auto_cc");
        sc_inst_9->xsim_set_dbg_index(2130);
        xsim_sc_channel<0, bool > *p_9_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_aclk.bind(*p_9_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_9_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_aresetn.bind(*p_9_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_9_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_9->s_axi_awaddr.bind(*p_9_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->s_axi_awprot.bind(*p_9_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_9_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_awvalid.bind(*p_9_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_9_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_awready.bind(*p_9_s_axi_awready);
        p_9_s_axi_awready->set_sv_netview_offsetfromdp(8514344);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->s_axi_wdata.bind(*p_9_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->s_axi_wstrb.bind(*p_9_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_9_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_wvalid.bind(*p_9_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_9_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_wready.bind(*p_9_s_axi_wready);
        p_9_s_axi_wready->set_sv_netview_offsetfromdp(8514568);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->s_axi_bresp.bind(*p_9_s_axi_bresp);
        p_9_s_axi_bresp->set_sv_netview_offsetfromdp(8514624);
        xsim_sc_channel<0, bool > *p_9_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_bvalid.bind(*p_9_s_axi_bvalid);
        p_9_s_axi_bvalid->set_sv_netview_offsetfromdp(8514680);
        xsim_sc_channel<0, bool > *p_9_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_bready.bind(*p_9_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_bready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_9_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_9->s_axi_araddr.bind(*p_9_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->s_axi_arprot.bind(*p_9_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_9_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_arvalid.bind(*p_9_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_9_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_arready.bind(*p_9_s_axi_arready);
        p_9_s_axi_arready->set_sv_netview_offsetfromdp(8514960);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->s_axi_rdata.bind(*p_9_s_axi_rdata);
        p_9_s_axi_rdata->set_sv_netview_offsetfromdp(8515016);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->s_axi_rresp.bind(*p_9_s_axi_rresp);
        p_9_s_axi_rresp->set_sv_netview_offsetfromdp(8515072);
        xsim_sc_channel<0, bool > *p_9_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_rvalid.bind(*p_9_s_axi_rvalid);
        p_9_s_axi_rvalid->set_sv_netview_offsetfromdp(8515128);
        xsim_sc_channel<0, bool > *p_9_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_rready.bind(*p_9_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_rready);
        xsim_sc_channel<0, bool > *p_9_m_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_9->m_axi_aclk.bind(*p_9_m_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_9_m_axi_aclk);
        xsim_sc_channel<0, bool > *p_9_m_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_9->m_axi_aresetn.bind(*p_9_m_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_9_m_axi_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_9_m_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_9->m_axi_awaddr.bind(*p_9_m_axi_awaddr);
        p_9_m_axi_awaddr->set_sv_netview_offsetfromdp(8515352);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->m_axi_awprot.bind(*p_9_m_axi_awprot);
        p_9_m_axi_awprot->set_sv_netview_offsetfromdp(8515408);
        xsim_sc_channel<0, bool > *p_9_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->m_axi_awvalid.bind(*p_9_m_axi_awvalid);
        p_9_m_axi_awvalid->set_sv_netview_offsetfromdp(8515464);
        xsim_sc_channel<0, bool > *p_9_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_9->m_axi_awready.bind(*p_9_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_9_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->m_axi_wdata.bind(*p_9_m_axi_wdata);
        p_9_m_axi_wdata->set_sv_netview_offsetfromdp(8515576);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->m_axi_wstrb.bind(*p_9_m_axi_wstrb);
        p_9_m_axi_wstrb->set_sv_netview_offsetfromdp(8515632);
        xsim_sc_channel<0, bool > *p_9_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->m_axi_wvalid.bind(*p_9_m_axi_wvalid);
        p_9_m_axi_wvalid->set_sv_netview_offsetfromdp(8515688);
        xsim_sc_channel<0, bool > *p_9_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_9->m_axi_wready.bind(*p_9_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_9_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->m_axi_bresp.bind(*p_9_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_9_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_9_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->m_axi_bvalid.bind(*p_9_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_9_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_9->m_axi_bready.bind(*p_9_m_axi_bready);
        p_9_m_axi_bready->set_sv_netview_offsetfromdp(8515912);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_9_m_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_9->m_axi_araddr.bind(*p_9_m_axi_araddr);
        p_9_m_axi_araddr->set_sv_netview_offsetfromdp(8515968);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->m_axi_arprot.bind(*p_9_m_axi_arprot);
        p_9_m_axi_arprot->set_sv_netview_offsetfromdp(8516024);
        xsim_sc_channel<0, bool > *p_9_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->m_axi_arvalid.bind(*p_9_m_axi_arvalid);
        p_9_m_axi_arvalid->set_sv_netview_offsetfromdp(8516080);
        xsim_sc_channel<0, bool > *p_9_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_9->m_axi_arready.bind(*p_9_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_9_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->m_axi_rdata.bind(*p_9_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_9_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->m_axi_rresp.bind(*p_9_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_9_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_9_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->m_axi_rvalid.bind(*p_9_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_9_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_9->m_axi_rready.bind(*p_9_m_axi_rready);
        p_9_m_axi_rready->set_sv_netview_offsetfromdp(8516360);
        sc_inst_10 = new pfm_dynamic_m04_regslice_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.m04_couplers.m04_regslice");
        sc_inst_10->xsim_set_dbg_index(2131);
        xsim_sc_channel<0, bool > *p_10_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_10->aclk.bind(*p_10_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_10_aclk);
        xsim_sc_channel<0, bool > *p_10_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_10->aresetn.bind(*p_10_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_10_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_10_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_10->s_axi_awaddr.bind(*p_10_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->s_axi_awprot.bind(*p_10_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_10_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_axi_awvalid.bind(*p_10_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_10_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_axi_awready.bind(*p_10_s_axi_awready);
        p_10_s_axi_awready->set_sv_netview_offsetfromdp(8516744);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_10_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_10->s_axi_wdata.bind(*p_10_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->s_axi_wstrb.bind(*p_10_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_10_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_axi_wvalid.bind(*p_10_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_10_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_axi_wready.bind(*p_10_s_axi_wready);
        p_10_s_axi_wready->set_sv_netview_offsetfromdp(8516968);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->s_axi_bresp.bind(*p_10_s_axi_bresp);
        p_10_s_axi_bresp->set_sv_netview_offsetfromdp(8517024);
        xsim_sc_channel<0, bool > *p_10_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_axi_bvalid.bind(*p_10_s_axi_bvalid);
        p_10_s_axi_bvalid->set_sv_netview_offsetfromdp(8517080);
        xsim_sc_channel<0, bool > *p_10_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_axi_bready.bind(*p_10_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_bready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_10_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_10->s_axi_araddr.bind(*p_10_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->s_axi_arprot.bind(*p_10_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_10_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_axi_arvalid.bind(*p_10_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_10_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_axi_arready.bind(*p_10_s_axi_arready);
        p_10_s_axi_arready->set_sv_netview_offsetfromdp(8517360);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_10_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_10->s_axi_rdata.bind(*p_10_s_axi_rdata);
        p_10_s_axi_rdata->set_sv_netview_offsetfromdp(8517416);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->s_axi_rresp.bind(*p_10_s_axi_rresp);
        p_10_s_axi_rresp->set_sv_netview_offsetfromdp(8517472);
        xsim_sc_channel<0, bool > *p_10_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_axi_rvalid.bind(*p_10_s_axi_rvalid);
        p_10_s_axi_rvalid->set_sv_netview_offsetfromdp(8517528);
        xsim_sc_channel<0, bool > *p_10_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_axi_rready.bind(*p_10_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_rready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_10_m_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_10->m_axi_awaddr.bind(*p_10_m_axi_awaddr);
        p_10_m_axi_awaddr->set_sv_netview_offsetfromdp(8517640);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->m_axi_awprot.bind(*p_10_m_axi_awprot);
        p_10_m_axi_awprot->set_sv_netview_offsetfromdp(8517696);
        xsim_sc_channel<0, bool > *p_10_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->m_axi_awvalid.bind(*p_10_m_axi_awvalid);
        p_10_m_axi_awvalid->set_sv_netview_offsetfromdp(8517752);
        xsim_sc_channel<0, bool > *p_10_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_10->m_axi_awready.bind(*p_10_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_10_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_10->m_axi_wdata.bind(*p_10_m_axi_wdata);
        p_10_m_axi_wdata->set_sv_netview_offsetfromdp(8517864);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->m_axi_wstrb.bind(*p_10_m_axi_wstrb);
        p_10_m_axi_wstrb->set_sv_netview_offsetfromdp(8517920);
        xsim_sc_channel<0, bool > *p_10_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->m_axi_wvalid.bind(*p_10_m_axi_wvalid);
        p_10_m_axi_wvalid->set_sv_netview_offsetfromdp(8517976);
        xsim_sc_channel<0, bool > *p_10_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_10->m_axi_wready.bind(*p_10_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->m_axi_bresp.bind(*p_10_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_10_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->m_axi_bvalid.bind(*p_10_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_10_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_10->m_axi_bready.bind(*p_10_m_axi_bready);
        p_10_m_axi_bready->set_sv_netview_offsetfromdp(8518200);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_10_m_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_10->m_axi_araddr.bind(*p_10_m_axi_araddr);
        p_10_m_axi_araddr->set_sv_netview_offsetfromdp(8518256);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->m_axi_arprot.bind(*p_10_m_axi_arprot);
        p_10_m_axi_arprot->set_sv_netview_offsetfromdp(8518312);
        xsim_sc_channel<0, bool > *p_10_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->m_axi_arvalid.bind(*p_10_m_axi_arvalid);
        p_10_m_axi_arvalid->set_sv_netview_offsetfromdp(8518368);
        xsim_sc_channel<0, bool > *p_10_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_10->m_axi_arready.bind(*p_10_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_10_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_10->m_axi_rdata.bind(*p_10_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->m_axi_rresp.bind(*p_10_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_10_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->m_axi_rvalid.bind(*p_10_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_10_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_10->m_axi_rready.bind(*p_10_m_axi_rready);
        p_10_m_axi_rready->set_sv_netview_offsetfromdp(8518648);
        sc_inst_11 = new pfm_dynamic_auto_cc_6(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.m05_couplers.auto_cc");
        sc_inst_11->xsim_set_dbg_index(2172);
        xsim_sc_channel<0, bool > *p_11_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axi_aclk.bind(*p_11_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_11_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axi_aresetn.bind(*p_11_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axi_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_11_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_11->s_axi_awaddr.bind(*p_11_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_11_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_11->s_axi_awprot.bind(*p_11_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_11_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axi_awvalid.bind(*p_11_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_11_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axi_awready.bind(*p_11_s_axi_awready);
        p_11_s_axi_awready->set_sv_netview_offsetfromdp(8554520);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_11_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_11->s_axi_wdata.bind(*p_11_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->s_axi_wstrb.bind(*p_11_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_11_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axi_wvalid.bind(*p_11_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_11_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axi_wready.bind(*p_11_s_axi_wready);
        p_11_s_axi_wready->set_sv_netview_offsetfromdp(8554744);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->s_axi_bresp.bind(*p_11_s_axi_bresp);
        p_11_s_axi_bresp->set_sv_netview_offsetfromdp(8554800);
        xsim_sc_channel<0, bool > *p_11_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axi_bvalid.bind(*p_11_s_axi_bvalid);
        p_11_s_axi_bvalid->set_sv_netview_offsetfromdp(8554856);
        xsim_sc_channel<0, bool > *p_11_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axi_bready.bind(*p_11_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axi_bready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_11_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_11->s_axi_araddr.bind(*p_11_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_11_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_11->s_axi_arprot.bind(*p_11_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_11_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axi_arvalid.bind(*p_11_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_11_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axi_arready.bind(*p_11_s_axi_arready);
        p_11_s_axi_arready->set_sv_netview_offsetfromdp(8555136);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_11_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_11->s_axi_rdata.bind(*p_11_s_axi_rdata);
        p_11_s_axi_rdata->set_sv_netview_offsetfromdp(8555192);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->s_axi_rresp.bind(*p_11_s_axi_rresp);
        p_11_s_axi_rresp->set_sv_netview_offsetfromdp(8555248);
        xsim_sc_channel<0, bool > *p_11_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axi_rvalid.bind(*p_11_s_axi_rvalid);
        p_11_s_axi_rvalid->set_sv_netview_offsetfromdp(8555304);
        xsim_sc_channel<0, bool > *p_11_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axi_rready.bind(*p_11_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axi_rready);
        xsim_sc_channel<0, bool > *p_11_m_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_11->m_axi_aclk.bind(*p_11_m_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_11_m_axi_aclk);
        xsim_sc_channel<0, bool > *p_11_m_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_11->m_axi_aresetn.bind(*p_11_m_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_11_m_axi_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_11_m_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_11->m_axi_awaddr.bind(*p_11_m_axi_awaddr);
        p_11_m_axi_awaddr->set_sv_netview_offsetfromdp(8555528);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_11_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_11->m_axi_awprot.bind(*p_11_m_axi_awprot);
        p_11_m_axi_awprot->set_sv_netview_offsetfromdp(8555584);
        xsim_sc_channel<0, bool > *p_11_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->m_axi_awvalid.bind(*p_11_m_axi_awvalid);
        p_11_m_axi_awvalid->set_sv_netview_offsetfromdp(8555640);
        xsim_sc_channel<0, bool > *p_11_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_11->m_axi_awready.bind(*p_11_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_11_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_11_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_11->m_axi_wdata.bind(*p_11_m_axi_wdata);
        p_11_m_axi_wdata->set_sv_netview_offsetfromdp(8555752);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->m_axi_wstrb.bind(*p_11_m_axi_wstrb);
        p_11_m_axi_wstrb->set_sv_netview_offsetfromdp(8555808);
        xsim_sc_channel<0, bool > *p_11_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->m_axi_wvalid.bind(*p_11_m_axi_wvalid);
        p_11_m_axi_wvalid->set_sv_netview_offsetfromdp(8555864);
        xsim_sc_channel<0, bool > *p_11_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_11->m_axi_wready.bind(*p_11_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_11_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->m_axi_bresp.bind(*p_11_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_11_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_11_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->m_axi_bvalid.bind(*p_11_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_11_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_11_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_11->m_axi_bready.bind(*p_11_m_axi_bready);
        p_11_m_axi_bready->set_sv_netview_offsetfromdp(8556088);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_11_m_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_11->m_axi_araddr.bind(*p_11_m_axi_araddr);
        p_11_m_axi_araddr->set_sv_netview_offsetfromdp(8556144);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_11_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_11->m_axi_arprot.bind(*p_11_m_axi_arprot);
        p_11_m_axi_arprot->set_sv_netview_offsetfromdp(8556200);
        xsim_sc_channel<0, bool > *p_11_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->m_axi_arvalid.bind(*p_11_m_axi_arvalid);
        p_11_m_axi_arvalid->set_sv_netview_offsetfromdp(8556256);
        xsim_sc_channel<0, bool > *p_11_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_11->m_axi_arready.bind(*p_11_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_11_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_11_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_11->m_axi_rdata.bind(*p_11_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_11_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->m_axi_rresp.bind(*p_11_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_11_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_11_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->m_axi_rvalid.bind(*p_11_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_11_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_11_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_11->m_axi_rready.bind(*p_11_m_axi_rready);
        p_11_m_axi_rready->set_sv_netview_offsetfromdp(8556536);
        sc_inst_12 = new pfm_dynamic_m05_regslice_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.m05_couplers.m05_regslice");
        sc_inst_12->xsim_set_dbg_index(2173);
        xsim_sc_channel<0, bool > *p_12_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_12->aclk.bind(*p_12_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_12_aclk);
        xsim_sc_channel<0, bool > *p_12_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_12->aresetn.bind(*p_12_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_12_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_12_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_12->s_axi_awaddr.bind(*p_12_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->s_axi_awprot.bind(*p_12_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_12_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->s_axi_awvalid.bind(*p_12_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_12_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_12->s_axi_awready.bind(*p_12_s_axi_awready);
        p_12_s_axi_awready->set_sv_netview_offsetfromdp(8556920);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_12_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_12->s_axi_wdata.bind(*p_12_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->s_axi_wstrb.bind(*p_12_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_12_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->s_axi_wvalid.bind(*p_12_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_12_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_12->s_axi_wready.bind(*p_12_s_axi_wready);
        p_12_s_axi_wready->set_sv_netview_offsetfromdp(8557144);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->s_axi_bresp.bind(*p_12_s_axi_bresp);
        p_12_s_axi_bresp->set_sv_netview_offsetfromdp(8557200);
        xsim_sc_channel<0, bool > *p_12_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->s_axi_bvalid.bind(*p_12_s_axi_bvalid);
        p_12_s_axi_bvalid->set_sv_netview_offsetfromdp(8557256);
        xsim_sc_channel<0, bool > *p_12_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_12->s_axi_bready.bind(*p_12_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_axi_bready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_12_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_12->s_axi_araddr.bind(*p_12_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->s_axi_arprot.bind(*p_12_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_12_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->s_axi_arvalid.bind(*p_12_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_12_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_12->s_axi_arready.bind(*p_12_s_axi_arready);
        p_12_s_axi_arready->set_sv_netview_offsetfromdp(8557536);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_12_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_12->s_axi_rdata.bind(*p_12_s_axi_rdata);
        p_12_s_axi_rdata->set_sv_netview_offsetfromdp(8557592);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->s_axi_rresp.bind(*p_12_s_axi_rresp);
        p_12_s_axi_rresp->set_sv_netview_offsetfromdp(8557648);
        xsim_sc_channel<0, bool > *p_12_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->s_axi_rvalid.bind(*p_12_s_axi_rvalid);
        p_12_s_axi_rvalid->set_sv_netview_offsetfromdp(8557704);
        xsim_sc_channel<0, bool > *p_12_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_12->s_axi_rready.bind(*p_12_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_axi_rready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_12_m_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_12->m_axi_awaddr.bind(*p_12_m_axi_awaddr);
        p_12_m_axi_awaddr->set_sv_netview_offsetfromdp(8557816);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->m_axi_awprot.bind(*p_12_m_axi_awprot);
        p_12_m_axi_awprot->set_sv_netview_offsetfromdp(8557872);
        xsim_sc_channel<0, bool > *p_12_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->m_axi_awvalid.bind(*p_12_m_axi_awvalid);
        p_12_m_axi_awvalid->set_sv_netview_offsetfromdp(8557928);
        xsim_sc_channel<0, bool > *p_12_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_12->m_axi_awready.bind(*p_12_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_12_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_12->m_axi_wdata.bind(*p_12_m_axi_wdata);
        p_12_m_axi_wdata->set_sv_netview_offsetfromdp(8558040);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->m_axi_wstrb.bind(*p_12_m_axi_wstrb);
        p_12_m_axi_wstrb->set_sv_netview_offsetfromdp(8558096);
        xsim_sc_channel<0, bool > *p_12_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->m_axi_wvalid.bind(*p_12_m_axi_wvalid);
        p_12_m_axi_wvalid->set_sv_netview_offsetfromdp(8558152);
        xsim_sc_channel<0, bool > *p_12_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_12->m_axi_wready.bind(*p_12_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->m_axi_bresp.bind(*p_12_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_12_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->m_axi_bvalid.bind(*p_12_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_12_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_12->m_axi_bready.bind(*p_12_m_axi_bready);
        p_12_m_axi_bready->set_sv_netview_offsetfromdp(8558376);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_12_m_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_12->m_axi_araddr.bind(*p_12_m_axi_araddr);
        p_12_m_axi_araddr->set_sv_netview_offsetfromdp(8558432);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->m_axi_arprot.bind(*p_12_m_axi_arprot);
        p_12_m_axi_arprot->set_sv_netview_offsetfromdp(8558488);
        xsim_sc_channel<0, bool > *p_12_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->m_axi_arvalid.bind(*p_12_m_axi_arvalid);
        p_12_m_axi_arvalid->set_sv_netview_offsetfromdp(8558544);
        xsim_sc_channel<0, bool > *p_12_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_12->m_axi_arready.bind(*p_12_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_12_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_12->m_axi_rdata.bind(*p_12_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->m_axi_rresp.bind(*p_12_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_12_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->m_axi_rvalid.bind(*p_12_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_12_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_12->m_axi_rready.bind(*p_12_m_axi_rready);
        p_12_m_axi_rready->set_sv_netview_offsetfromdp(8558824);
        sc_inst_13 = new pfm_dynamic_s00_regslice_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.s00_couplers.s00_regslice");
        sc_inst_13->xsim_set_dbg_index(2214);
        xsim_sc_channel<0, bool > *p_13_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_13->aclk.bind(*p_13_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_13_aclk);
        xsim_sc_channel<0, bool > *p_13_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_13->aresetn.bind(*p_13_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_13_aresetn);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_13_s_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_13->s_axi_awaddr.bind(*p_13_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->s_axi_awprot.bind(*p_13_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_13_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axi_awvalid.bind(*p_13_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_13_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axi_awready.bind(*p_13_s_axi_awready);
        p_13_s_axi_awready->set_sv_netview_offsetfromdp(8582464);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_13_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_13->s_axi_wdata.bind(*p_13_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->s_axi_wstrb.bind(*p_13_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_13_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axi_wvalid.bind(*p_13_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_13_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axi_wready.bind(*p_13_s_axi_wready);
        p_13_s_axi_wready->set_sv_netview_offsetfromdp(8582688);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->s_axi_bresp.bind(*p_13_s_axi_bresp);
        p_13_s_axi_bresp->set_sv_netview_offsetfromdp(8582744);
        xsim_sc_channel<0, bool > *p_13_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axi_bvalid.bind(*p_13_s_axi_bvalid);
        p_13_s_axi_bvalid->set_sv_netview_offsetfromdp(8582800);
        xsim_sc_channel<0, bool > *p_13_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axi_bready.bind(*p_13_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_13_s_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_13->s_axi_araddr.bind(*p_13_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->s_axi_arprot.bind(*p_13_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_13_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axi_arvalid.bind(*p_13_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_13_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axi_arready.bind(*p_13_s_axi_arready);
        p_13_s_axi_arready->set_sv_netview_offsetfromdp(8583080);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_13_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_13->s_axi_rdata.bind(*p_13_s_axi_rdata);
        p_13_s_axi_rdata->set_sv_netview_offsetfromdp(8583136);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->s_axi_rresp.bind(*p_13_s_axi_rresp);
        p_13_s_axi_rresp->set_sv_netview_offsetfromdp(8583192);
        xsim_sc_channel<0, bool > *p_13_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axi_rvalid.bind(*p_13_s_axi_rvalid);
        p_13_s_axi_rvalid->set_sv_netview_offsetfromdp(8583248);
        xsim_sc_channel<0, bool > *p_13_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axi_rready.bind(*p_13_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_rready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_13_m_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_13->m_axi_awaddr.bind(*p_13_m_axi_awaddr);
        p_13_m_axi_awaddr->set_sv_netview_offsetfromdp(8583360);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->m_axi_awprot.bind(*p_13_m_axi_awprot);
        p_13_m_axi_awprot->set_sv_netview_offsetfromdp(8583416);
        xsim_sc_channel<0, bool > *p_13_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->m_axi_awvalid.bind(*p_13_m_axi_awvalid);
        p_13_m_axi_awvalid->set_sv_netview_offsetfromdp(8583472);
        xsim_sc_channel<0, bool > *p_13_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_13->m_axi_awready.bind(*p_13_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_13_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_13->m_axi_wdata.bind(*p_13_m_axi_wdata);
        p_13_m_axi_wdata->set_sv_netview_offsetfromdp(8583584);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->m_axi_wstrb.bind(*p_13_m_axi_wstrb);
        p_13_m_axi_wstrb->set_sv_netview_offsetfromdp(8583640);
        xsim_sc_channel<0, bool > *p_13_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->m_axi_wvalid.bind(*p_13_m_axi_wvalid);
        p_13_m_axi_wvalid->set_sv_netview_offsetfromdp(8583696);
        xsim_sc_channel<0, bool > *p_13_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_13->m_axi_wready.bind(*p_13_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->m_axi_bresp.bind(*p_13_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_13_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->m_axi_bvalid.bind(*p_13_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_13_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_13->m_axi_bready.bind(*p_13_m_axi_bready);
        p_13_m_axi_bready->set_sv_netview_offsetfromdp(8583920);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_13_m_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_13->m_axi_araddr.bind(*p_13_m_axi_araddr);
        p_13_m_axi_araddr->set_sv_netview_offsetfromdp(8583976);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->m_axi_arprot.bind(*p_13_m_axi_arprot);
        p_13_m_axi_arprot->set_sv_netview_offsetfromdp(8584032);
        xsim_sc_channel<0, bool > *p_13_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->m_axi_arvalid.bind(*p_13_m_axi_arvalid);
        p_13_m_axi_arvalid->set_sv_netview_offsetfromdp(8584088);
        xsim_sc_channel<0, bool > *p_13_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_13->m_axi_arready.bind(*p_13_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_13_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_13->m_axi_rdata.bind(*p_13_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->m_axi_rresp.bind(*p_13_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_13_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->m_axi_rvalid.bind(*p_13_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_13_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_13->m_axi_rready.bind(*p_13_m_axi_rready);
        p_13_m_axi_rready->set_sv_netview_offsetfromdp(8584368);
        sc_inst_14 = new pfm_dynamic_xbar_4(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.xbar");
        sc_inst_14->xsim_set_dbg_index(788);
        xsim_sc_channel<0, bool > *p_14_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_14->aclk.bind(*p_14_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_14_aclk);
        xsim_sc_channel<0, bool > *p_14_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_14->aresetn.bind(*p_14_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_14_aresetn);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_14_s_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_14->s_axi_awaddr.bind(*p_14_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->s_axi_awprot.bind(*p_14_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_awprot);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s_axi_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s_axi_awvalid.bind(*p_14_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_awvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s_axi_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s_axi_awready.bind(*p_14_s_axi_awready);
        p_14_s_axi_awready->set_sv_netview_offsetfromdp(8584752);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_14_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_14->s_axi_wdata.bind(*p_14_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s_axi_wstrb.bind(*p_14_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_wstrb);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s_axi_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s_axi_wvalid.bind(*p_14_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_wvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s_axi_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s_axi_wready.bind(*p_14_s_axi_wready);
        p_14_s_axi_wready->set_sv_netview_offsetfromdp(8584976);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->s_axi_bresp.bind(*p_14_s_axi_bresp);
        p_14_s_axi_bresp->set_sv_netview_offsetfromdp(8585032);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s_axi_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s_axi_bvalid.bind(*p_14_s_axi_bvalid);
        p_14_s_axi_bvalid->set_sv_netview_offsetfromdp(8585088);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s_axi_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s_axi_bready.bind(*p_14_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_14_s_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_14->s_axi_araddr.bind(*p_14_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->s_axi_arprot.bind(*p_14_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_arprot);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s_axi_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s_axi_arvalid.bind(*p_14_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_arvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s_axi_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s_axi_arready.bind(*p_14_s_axi_arready);
        p_14_s_axi_arready->set_sv_netview_offsetfromdp(8585368);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_14_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_14->s_axi_rdata.bind(*p_14_s_axi_rdata);
        p_14_s_axi_rdata->set_sv_netview_offsetfromdp(8585424);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->s_axi_rresp.bind(*p_14_s_axi_rresp);
        p_14_s_axi_rresp->set_sv_netview_offsetfromdp(8585480);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s_axi_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s_axi_rvalid.bind(*p_14_s_axi_rvalid);
        p_14_s_axi_rvalid->set_sv_netview_offsetfromdp(8585536);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s_axi_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s_axi_rready.bind(*p_14_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_rready);
        xsim_sc_channel<384, sc_dt::sc_bv<384> > *p_14_m_axi_awaddr = new xsim_sc_channel<384, sc_dt::sc_bv<384> >();
        sc_inst_14->m_axi_awaddr.bind(*p_14_m_axi_awaddr);
        p_14_m_axi_awaddr->set_sv_netview_offsetfromdp(8585648);
        xsim_sc_channel<18, sc_dt::sc_bv<18> > *p_14_m_axi_awprot = new xsim_sc_channel<18, sc_dt::sc_bv<18> >();
        sc_inst_14->m_axi_awprot.bind(*p_14_m_axi_awprot);
        p_14_m_axi_awprot->set_sv_netview_offsetfromdp(8585704);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_14_m_axi_awvalid = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_14->m_axi_awvalid.bind(*p_14_m_axi_awvalid);
        p_14_m_axi_awvalid->set_sv_netview_offsetfromdp(8585760);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_14_m_axi_awready = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_14->m_axi_awready.bind(*p_14_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m_axi_awready);
        xsim_sc_channel<192, sc_dt::sc_bv<192> > *p_14_m_axi_wdata = new xsim_sc_channel<192, sc_dt::sc_bv<192> >();
        sc_inst_14->m_axi_wdata.bind(*p_14_m_axi_wdata);
        p_14_m_axi_wdata->set_sv_netview_offsetfromdp(8585872);
        xsim_sc_channel<24, sc_dt::sc_bv<24> > *p_14_m_axi_wstrb = new xsim_sc_channel<24, sc_dt::sc_bv<24> >();
        sc_inst_14->m_axi_wstrb.bind(*p_14_m_axi_wstrb);
        p_14_m_axi_wstrb->set_sv_netview_offsetfromdp(8585928);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_14_m_axi_wvalid = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_14->m_axi_wvalid.bind(*p_14_m_axi_wvalid);
        p_14_m_axi_wvalid->set_sv_netview_offsetfromdp(8585984);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_14_m_axi_wready = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_14->m_axi_wready.bind(*p_14_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m_axi_wready);
        xsim_sc_channel<12, sc_dt::sc_bv<12> > *p_14_m_axi_bresp = new xsim_sc_channel<12, sc_dt::sc_bv<12> >();
        sc_inst_14->m_axi_bresp.bind(*p_14_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m_axi_bresp);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_14_m_axi_bvalid = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_14->m_axi_bvalid.bind(*p_14_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m_axi_bvalid);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_14_m_axi_bready = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_14->m_axi_bready.bind(*p_14_m_axi_bready);
        p_14_m_axi_bready->set_sv_netview_offsetfromdp(8586208);
        xsim_sc_channel<384, sc_dt::sc_bv<384> > *p_14_m_axi_araddr = new xsim_sc_channel<384, sc_dt::sc_bv<384> >();
        sc_inst_14->m_axi_araddr.bind(*p_14_m_axi_araddr);
        p_14_m_axi_araddr->set_sv_netview_offsetfromdp(8586264);
        xsim_sc_channel<18, sc_dt::sc_bv<18> > *p_14_m_axi_arprot = new xsim_sc_channel<18, sc_dt::sc_bv<18> >();
        sc_inst_14->m_axi_arprot.bind(*p_14_m_axi_arprot);
        p_14_m_axi_arprot->set_sv_netview_offsetfromdp(8586320);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_14_m_axi_arvalid = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_14->m_axi_arvalid.bind(*p_14_m_axi_arvalid);
        p_14_m_axi_arvalid->set_sv_netview_offsetfromdp(8586376);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_14_m_axi_arready = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_14->m_axi_arready.bind(*p_14_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m_axi_arready);
        xsim_sc_channel<192, sc_dt::sc_bv<192> > *p_14_m_axi_rdata = new xsim_sc_channel<192, sc_dt::sc_bv<192> >();
        sc_inst_14->m_axi_rdata.bind(*p_14_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m_axi_rdata);
        xsim_sc_channel<12, sc_dt::sc_bv<12> > *p_14_m_axi_rresp = new xsim_sc_channel<12, sc_dt::sc_bv<12> >();
        sc_inst_14->m_axi_rresp.bind(*p_14_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m_axi_rresp);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_14_m_axi_rvalid = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_14->m_axi_rvalid.bind(*p_14_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m_axi_rvalid);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_14_m_axi_rready = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_14->m_axi_rready.bind(*p_14_m_axi_rready);
        p_14_m_axi_rready->set_sv_netview_offsetfromdp(8586656);
        sc_inst_15 = new pfm_dynamic_dpa_hub_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_hub");
        sc_inst_15->xsim_set_dbg_index(399);
        xsim_sc_channel<0, bool > *p_15_s_aximm_clk = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_aximm_clk.bind(*p_15_s_aximm_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_aximm_clk);
        xsim_sc_channel<0, bool > *p_15_s_aximm_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_aximm_aresetn.bind(*p_15_s_aximm_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_aximm_aresetn);
        xsim_sc_channel<0, bool > *p_15_trace_clk = new xsim_sc_channel<0, bool >();
        sc_inst_15->trace_clk.bind(*p_15_trace_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_15_trace_clk);
        xsim_sc_channel<0, bool > *p_15_trace_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_15->trace_aresetn.bind(*p_15_trace_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_15_trace_aresetn);
        xsim_sc_channel<0, bool > *p_15_axilite_clk = new xsim_sc_channel<0, bool >();
        sc_inst_15->axilite_clk.bind(*p_15_axilite_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_15_axilite_clk);
        xsim_sc_channel<0, bool > *p_15_axilite_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_15->axilite_aresetn.bind(*p_15_axilite_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_15_axilite_aresetn);
        xsim_sc_channel<0, bool > *p_15_trace_tready0 = new xsim_sc_channel<0, bool >();
        sc_inst_15->trace_tready0.bind(*p_15_trace_tready0);
        p_15_trace_tready0->set_sv_netview_offsetfromdp(8587096);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_trace_tdata0 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->trace_tdata0.bind(*p_15_trace_tdata0);
        (*_glb_hdl_sc_channel_map).push_back(p_15_trace_tdata0);
        xsim_sc_channel<0, bool > *p_15_trace_tlast0 = new xsim_sc_channel<0, bool >();
        sc_inst_15->trace_tlast0.bind(*p_15_trace_tlast0);
        (*_glb_hdl_sc_channel_map).push_back(p_15_trace_tlast0);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_trace_tid0 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->trace_tid0.bind(*p_15_trace_tid0);
        (*_glb_hdl_sc_channel_map).push_back(p_15_trace_tid0);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_trace_tdest0 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->trace_tdest0.bind(*p_15_trace_tdest0);
        (*_glb_hdl_sc_channel_map).push_back(p_15_trace_tdest0);
        xsim_sc_channel<0, bool > *p_15_trace_tvalid0 = new xsim_sc_channel<0, bool >();
        sc_inst_15->trace_tvalid0.bind(*p_15_trace_tvalid0);
        (*_glb_hdl_sc_channel_map).push_back(p_15_trace_tvalid0);
        xsim_sc_channel<0, bool > *p_15_trace_tready1 = new xsim_sc_channel<0, bool >();
        sc_inst_15->trace_tready1.bind(*p_15_trace_tready1);
        p_15_trace_tready1->set_sv_netview_offsetfromdp(8587432);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_trace_tdata1 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->trace_tdata1.bind(*p_15_trace_tdata1);
        p_15_trace_tdata1->set_sv_netview_offsetfromdp(8587488);
        xsim_sc_channel<0, bool > *p_15_trace_tlast1 = new xsim_sc_channel<0, bool >();
        sc_inst_15->trace_tlast1.bind(*p_15_trace_tlast1);
        (*_glb_hdl_sc_channel_map).push_back(p_15_trace_tlast1);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_trace_tid1 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->trace_tid1.bind(*p_15_trace_tid1);
        (*_glb_hdl_sc_channel_map).push_back(p_15_trace_tid1);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_trace_tdest1 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->trace_tdest1.bind(*p_15_trace_tdest1);
        (*_glb_hdl_sc_channel_map).push_back(p_15_trace_tdest1);
        xsim_sc_channel<0, bool > *p_15_trace_tvalid1 = new xsim_sc_channel<0, bool >();
        sc_inst_15->trace_tvalid1.bind(*p_15_trace_tvalid1);
        (*_glb_hdl_sc_channel_map).push_back(p_15_trace_tvalid1);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_trace_tdata2 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->trace_tdata2.bind(*p_15_trace_tdata2);
        (*_glb_hdl_sc_channel_map).push_back(p_15_trace_tdata2);
        xsim_sc_channel<0, bool > *p_15_trace_tready2 = new xsim_sc_channel<0, bool >();
        sc_inst_15->trace_tready2.bind(*p_15_trace_tready2);
        p_15_trace_tready2->set_sv_netview_offsetfromdp(8587824);
        xsim_sc_channel<0, bool > *p_15_trace_tlast2 = new xsim_sc_channel<0, bool >();
        sc_inst_15->trace_tlast2.bind(*p_15_trace_tlast2);
        (*_glb_hdl_sc_channel_map).push_back(p_15_trace_tlast2);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_trace_tid2 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->trace_tid2.bind(*p_15_trace_tid2);
        (*_glb_hdl_sc_channel_map).push_back(p_15_trace_tid2);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_trace_tdest2 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->trace_tdest2.bind(*p_15_trace_tdest2);
        (*_glb_hdl_sc_channel_map).push_back(p_15_trace_tdest2);
        xsim_sc_channel<0, bool > *p_15_trace_tvalid2 = new xsim_sc_channel<0, bool >();
        sc_inst_15->trace_tvalid2.bind(*p_15_trace_tvalid2);
        (*_glb_hdl_sc_channel_map).push_back(p_15_trace_tvalid2);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_trace_tdata3 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->trace_tdata3.bind(*p_15_trace_tdata3);
        (*_glb_hdl_sc_channel_map).push_back(p_15_trace_tdata3);
        xsim_sc_channel<0, bool > *p_15_trace_tready3 = new xsim_sc_channel<0, bool >();
        sc_inst_15->trace_tready3.bind(*p_15_trace_tready3);
        p_15_trace_tready3->set_sv_netview_offsetfromdp(8588160);
        xsim_sc_channel<0, bool > *p_15_trace_tlast3 = new xsim_sc_channel<0, bool >();
        sc_inst_15->trace_tlast3.bind(*p_15_trace_tlast3);
        (*_glb_hdl_sc_channel_map).push_back(p_15_trace_tlast3);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_trace_tid3 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->trace_tid3.bind(*p_15_trace_tid3);
        (*_glb_hdl_sc_channel_map).push_back(p_15_trace_tid3);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_trace_tdest3 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->trace_tdest3.bind(*p_15_trace_tdest3);
        (*_glb_hdl_sc_channel_map).push_back(p_15_trace_tdest3);
        xsim_sc_channel<0, bool > *p_15_trace_tvalid3 = new xsim_sc_channel<0, bool >();
        sc_inst_15->trace_tvalid3.bind(*p_15_trace_tvalid3);
        (*_glb_hdl_sc_channel_map).push_back(p_15_trace_tvalid3);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_trace_tdata4 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->trace_tdata4.bind(*p_15_trace_tdata4);
        (*_glb_hdl_sc_channel_map).push_back(p_15_trace_tdata4);
        xsim_sc_channel<0, bool > *p_15_trace_tready4 = new xsim_sc_channel<0, bool >();
        sc_inst_15->trace_tready4.bind(*p_15_trace_tready4);
        p_15_trace_tready4->set_sv_netview_offsetfromdp(8588496);
        xsim_sc_channel<0, bool > *p_15_trace_tlast4 = new xsim_sc_channel<0, bool >();
        sc_inst_15->trace_tlast4.bind(*p_15_trace_tlast4);
        (*_glb_hdl_sc_channel_map).push_back(p_15_trace_tlast4);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_trace_tid4 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->trace_tid4.bind(*p_15_trace_tid4);
        (*_glb_hdl_sc_channel_map).push_back(p_15_trace_tid4);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_trace_tdest4 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->trace_tdest4.bind(*p_15_trace_tdest4);
        (*_glb_hdl_sc_channel_map).push_back(p_15_trace_tdest4);
        xsim_sc_channel<0, bool > *p_15_trace_tvalid4 = new xsim_sc_channel<0, bool >();
        sc_inst_15->trace_tvalid4.bind(*p_15_trace_tvalid4);
        (*_glb_hdl_sc_channel_map).push_back(p_15_trace_tvalid4);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_trace_tdata5 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->trace_tdata5.bind(*p_15_trace_tdata5);
        (*_glb_hdl_sc_channel_map).push_back(p_15_trace_tdata5);
        xsim_sc_channel<0, bool > *p_15_trace_tready5 = new xsim_sc_channel<0, bool >();
        sc_inst_15->trace_tready5.bind(*p_15_trace_tready5);
        p_15_trace_tready5->set_sv_netview_offsetfromdp(8588832);
        xsim_sc_channel<0, bool > *p_15_trace_tlast5 = new xsim_sc_channel<0, bool >();
        sc_inst_15->trace_tlast5.bind(*p_15_trace_tlast5);
        (*_glb_hdl_sc_channel_map).push_back(p_15_trace_tlast5);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_trace_tid5 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->trace_tid5.bind(*p_15_trace_tid5);
        (*_glb_hdl_sc_channel_map).push_back(p_15_trace_tid5);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_trace_tdest5 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->trace_tdest5.bind(*p_15_trace_tdest5);
        (*_glb_hdl_sc_channel_map).push_back(p_15_trace_tdest5);
        xsim_sc_channel<0, bool > *p_15_trace_tvalid5 = new xsim_sc_channel<0, bool >();
        sc_inst_15->trace_tvalid5.bind(*p_15_trace_tvalid5);
        (*_glb_hdl_sc_channel_map).push_back(p_15_trace_tvalid5);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_trace_tdata6 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->trace_tdata6.bind(*p_15_trace_tdata6);
        (*_glb_hdl_sc_channel_map).push_back(p_15_trace_tdata6);
        xsim_sc_channel<0, bool > *p_15_trace_tready6 = new xsim_sc_channel<0, bool >();
        sc_inst_15->trace_tready6.bind(*p_15_trace_tready6);
        p_15_trace_tready6->set_sv_netview_offsetfromdp(8589168);
        xsim_sc_channel<0, bool > *p_15_trace_tlast6 = new xsim_sc_channel<0, bool >();
        sc_inst_15->trace_tlast6.bind(*p_15_trace_tlast6);
        (*_glb_hdl_sc_channel_map).push_back(p_15_trace_tlast6);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_trace_tid6 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->trace_tid6.bind(*p_15_trace_tid6);
        (*_glb_hdl_sc_channel_map).push_back(p_15_trace_tid6);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_trace_tdest6 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->trace_tdest6.bind(*p_15_trace_tdest6);
        (*_glb_hdl_sc_channel_map).push_back(p_15_trace_tdest6);
        xsim_sc_channel<0, bool > *p_15_trace_tvalid6 = new xsim_sc_channel<0, bool >();
        sc_inst_15->trace_tvalid6.bind(*p_15_trace_tvalid6);
        (*_glb_hdl_sc_channel_map).push_back(p_15_trace_tvalid6);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->s_axi_awaddr.bind(*p_15_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_awaddr);
        xsim_sc_channel<0, bool > *p_15_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_awvalid.bind(*p_15_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_15_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_awready.bind(*p_15_s_axi_awready);
        p_15_s_axi_awready->set_sv_netview_offsetfromdp(8589560);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_15_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_15->s_axi_wdata.bind(*p_15_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s_axi_wstrb.bind(*p_15_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_15_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_wvalid.bind(*p_15_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_15_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_wready.bind(*p_15_s_axi_wready);
        p_15_s_axi_wready->set_sv_netview_offsetfromdp(8589784);
        xsim_sc_channel<0, bool > *p_15_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_bvalid.bind(*p_15_s_axi_bvalid);
        p_15_s_axi_bvalid->set_sv_netview_offsetfromdp(8589840);
        xsim_sc_channel<0, bool > *p_15_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_bready.bind(*p_15_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s_axi_bresp.bind(*p_15_s_axi_bresp);
        p_15_s_axi_bresp->set_sv_netview_offsetfromdp(8589952);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->s_axi_araddr.bind(*p_15_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_araddr);
        xsim_sc_channel<0, bool > *p_15_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_arvalid.bind(*p_15_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_15_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_arready.bind(*p_15_s_axi_arready);
        p_15_s_axi_arready->set_sv_netview_offsetfromdp(8590120);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_15_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_15->s_axi_rdata.bind(*p_15_s_axi_rdata);
        p_15_s_axi_rdata->set_sv_netview_offsetfromdp(8590176);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s_axi_rresp.bind(*p_15_s_axi_rresp);
        p_15_s_axi_rresp->set_sv_netview_offsetfromdp(8590232);
        xsim_sc_channel<0, bool > *p_15_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_rvalid.bind(*p_15_s_axi_rvalid);
        p_15_s_axi_rvalid->set_sv_netview_offsetfromdp(8590288);
        xsim_sc_channel<0, bool > *p_15_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_rready.bind(*p_15_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_rready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_s_axihub_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->s_axihub_awaddr.bind(*p_15_s_axihub_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axihub_awaddr);
        xsim_sc_channel<0, bool > *p_15_s_axihub_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axihub_awvalid.bind(*p_15_s_axihub_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axihub_awvalid);
        xsim_sc_channel<0, bool > *p_15_s_axihub_awready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axihub_awready.bind(*p_15_s_axihub_awready);
        p_15_s_axihub_awready->set_sv_netview_offsetfromdp(8590512);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_15_s_axihub_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_15->s_axihub_wdata.bind(*p_15_s_axihub_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axihub_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s_axihub_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s_axihub_wstrb.bind(*p_15_s_axihub_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axihub_wstrb);
        xsim_sc_channel<0, bool > *p_15_s_axihub_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axihub_wvalid.bind(*p_15_s_axihub_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axihub_wvalid);
        xsim_sc_channel<0, bool > *p_15_s_axihub_wready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axihub_wready.bind(*p_15_s_axihub_wready);
        p_15_s_axihub_wready->set_sv_netview_offsetfromdp(8590736);
        xsim_sc_channel<0, bool > *p_15_s_axihub_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axihub_bvalid.bind(*p_15_s_axihub_bvalid);
        p_15_s_axihub_bvalid->set_sv_netview_offsetfromdp(8590792);
        xsim_sc_channel<0, bool > *p_15_s_axihub_bready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axihub_bready.bind(*p_15_s_axihub_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axihub_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s_axihub_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s_axihub_bresp.bind(*p_15_s_axihub_bresp);
        p_15_s_axihub_bresp->set_sv_netview_offsetfromdp(8590904);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_s_axihub_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->s_axihub_araddr.bind(*p_15_s_axihub_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axihub_araddr);
        xsim_sc_channel<0, bool > *p_15_s_axihub_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axihub_arvalid.bind(*p_15_s_axihub_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axihub_arvalid);
        xsim_sc_channel<0, bool > *p_15_s_axihub_arready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axihub_arready.bind(*p_15_s_axihub_arready);
        p_15_s_axihub_arready->set_sv_netview_offsetfromdp(8591072);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_15_s_axihub_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_15->s_axihub_rdata.bind(*p_15_s_axihub_rdata);
        p_15_s_axihub_rdata->set_sv_netview_offsetfromdp(8591128);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s_axihub_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s_axihub_rresp.bind(*p_15_s_axihub_rresp);
        p_15_s_axihub_rresp->set_sv_netview_offsetfromdp(8591184);
        xsim_sc_channel<0, bool > *p_15_s_axihub_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axihub_rvalid.bind(*p_15_s_axihub_rvalid);
        p_15_s_axihub_rvalid->set_sv_netview_offsetfromdp(8591240);
        xsim_sc_channel<0, bool > *p_15_s_axihub_rready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axihub_rready.bind(*p_15_s_axihub_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axihub_rready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_15_s_aximm_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_15->s_aximm_awaddr.bind(*p_15_s_aximm_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_aximm_awaddr);
        xsim_sc_channel<0, bool > *p_15_s_aximm_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_aximm_awvalid.bind(*p_15_s_aximm_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_aximm_awvalid);
        xsim_sc_channel<0, bool > *p_15_s_aximm_awready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_aximm_awready.bind(*p_15_s_aximm_awready);
        p_15_s_aximm_awready->set_sv_netview_offsetfromdp(8591464);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_s_aximm_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->s_aximm_awlen.bind(*p_15_s_aximm_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_aximm_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_s_aximm_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->s_aximm_awsize.bind(*p_15_s_aximm_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_aximm_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s_aximm_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s_aximm_awburst.bind(*p_15_s_aximm_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_aximm_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_s_aximm_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->s_aximm_awid.bind(*p_15_s_aximm_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_aximm_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_s_aximm_wdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->s_aximm_wdata.bind(*p_15_s_aximm_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_aximm_wdata);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_s_aximm_wstrb = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->s_aximm_wstrb.bind(*p_15_s_aximm_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_aximm_wstrb);
        xsim_sc_channel<0, bool > *p_15_s_aximm_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_aximm_wvalid.bind(*p_15_s_aximm_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_aximm_wvalid);
        xsim_sc_channel<0, bool > *p_15_s_aximm_wready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_aximm_wready.bind(*p_15_s_aximm_wready);
        p_15_s_aximm_wready->set_sv_netview_offsetfromdp(8591912);
        xsim_sc_channel<0, bool > *p_15_s_aximm_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_aximm_bvalid.bind(*p_15_s_aximm_bvalid);
        p_15_s_aximm_bvalid->set_sv_netview_offsetfromdp(8591968);
        xsim_sc_channel<0, bool > *p_15_s_aximm_bready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_aximm_bready.bind(*p_15_s_aximm_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_aximm_bready);
        xsim_sc_channel<0, bool > *p_15_s_aximm_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_aximm_wlast.bind(*p_15_s_aximm_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_aximm_wlast);
        xsim_sc_channel<0, bool > *p_15_s_aximm_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_aximm_rlast.bind(*p_15_s_aximm_rlast);
        p_15_s_aximm_rlast->set_sv_netview_offsetfromdp(8592136);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s_aximm_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s_aximm_bresp.bind(*p_15_s_aximm_bresp);
        p_15_s_aximm_bresp->set_sv_netview_offsetfromdp(8592192);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_s_aximm_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->s_aximm_bid.bind(*p_15_s_aximm_bid);
        p_15_s_aximm_bid->set_sv_netview_offsetfromdp(8592248);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_15_s_aximm_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_15->s_aximm_araddr.bind(*p_15_s_aximm_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_aximm_araddr);
        xsim_sc_channel<0, bool > *p_15_s_aximm_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_aximm_arvalid.bind(*p_15_s_aximm_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_aximm_arvalid);
        xsim_sc_channel<0, bool > *p_15_s_aximm_arready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_aximm_arready.bind(*p_15_s_aximm_arready);
        p_15_s_aximm_arready->set_sv_netview_offsetfromdp(8592416);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_s_aximm_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->s_aximm_arlen.bind(*p_15_s_aximm_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_aximm_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_s_aximm_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->s_aximm_arsize.bind(*p_15_s_aximm_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_aximm_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s_aximm_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s_aximm_arburst.bind(*p_15_s_aximm_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_aximm_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_s_aximm_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->s_aximm_arid.bind(*p_15_s_aximm_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_aximm_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_s_aximm_rdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->s_aximm_rdata.bind(*p_15_s_aximm_rdata);
        p_15_s_aximm_rdata->set_sv_netview_offsetfromdp(8592696);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_s_aximm_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->s_aximm_rid.bind(*p_15_s_aximm_rid);
        p_15_s_aximm_rid->set_sv_netview_offsetfromdp(8592752);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s_aximm_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s_aximm_rresp.bind(*p_15_s_aximm_rresp);
        p_15_s_aximm_rresp->set_sv_netview_offsetfromdp(8592808);
        xsim_sc_channel<0, bool > *p_15_s_aximm_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_aximm_rvalid.bind(*p_15_s_aximm_rvalid);
        p_15_s_aximm_rvalid->set_sv_netview_offsetfromdp(8592864);
        xsim_sc_channel<0, bool > *p_15_s_aximm_rready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_aximm_rready.bind(*p_15_s_aximm_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_aximm_rready);
        sc_inst_16 = new pfm_dynamic_dpa_mon0_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_mon0");
        sc_inst_16->xsim_set_dbg_index(400);
        xsim_sc_channel<0, bool > *p_16_mon_clk = new xsim_sc_channel<0, bool >();
        sc_inst_16->mon_clk.bind(*p_16_mon_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_clk);
        xsim_sc_channel<0, bool > *p_16_mon_resetn = new xsim_sc_channel<0, bool >();
        sc_inst_16->mon_resetn.bind(*p_16_mon_resetn);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_resetn);
        xsim_sc_channel<0, bool > *p_16_trace_clk = new xsim_sc_channel<0, bool >();
        sc_inst_16->trace_clk.bind(*p_16_trace_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_16_trace_clk);
        xsim_sc_channel<0, bool > *p_16_trace_rst = new xsim_sc_channel<0, bool >();
        sc_inst_16->trace_rst.bind(*p_16_trace_rst);
        (*_glb_hdl_sc_channel_map).push_back(p_16_trace_rst);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_16_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_16->s_axi_awaddr.bind(*p_16_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_16_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_16->s_axi_awprot.bind(*p_16_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_16_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_awvalid.bind(*p_16_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_16_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_awready.bind(*p_16_s_axi_awready);
        p_16_s_axi_awready->set_sv_netview_offsetfromdp(8593416);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_16_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_16->s_axi_wdata.bind(*p_16_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->s_axi_wstrb.bind(*p_16_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_16_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_wvalid.bind(*p_16_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_16_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_wready.bind(*p_16_s_axi_wready);
        p_16_s_axi_wready->set_sv_netview_offsetfromdp(8593640);
        xsim_sc_channel<0, bool > *p_16_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_bvalid.bind(*p_16_s_axi_bvalid);
        p_16_s_axi_bvalid->set_sv_netview_offsetfromdp(8593696);
        xsim_sc_channel<0, bool > *p_16_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_bready.bind(*p_16_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->s_axi_bresp.bind(*p_16_s_axi_bresp);
        p_16_s_axi_bresp->set_sv_netview_offsetfromdp(8593808);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_16_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_16->s_axi_araddr.bind(*p_16_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_16_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_16->s_axi_arprot.bind(*p_16_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_16_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_arvalid.bind(*p_16_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_16_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_arready.bind(*p_16_s_axi_arready);
        p_16_s_axi_arready->set_sv_netview_offsetfromdp(8594032);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_16_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_16->s_axi_rdata.bind(*p_16_s_axi_rdata);
        p_16_s_axi_rdata->set_sv_netview_offsetfromdp(8594088);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->s_axi_rresp.bind(*p_16_s_axi_rresp);
        p_16_s_axi_rresp->set_sv_netview_offsetfromdp(8594144);
        xsim_sc_channel<0, bool > *p_16_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_rvalid.bind(*p_16_s_axi_rvalid);
        p_16_s_axi_rvalid->set_sv_netview_offsetfromdp(8594200);
        xsim_sc_channel<0, bool > *p_16_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_rready.bind(*p_16_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_rready);
        xsim_sc_channel<0, bool > *p_16_mon_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_16->mon_AWVALID.bind(*p_16_mon_AWVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_AWVALID);
        xsim_sc_channel<0, bool > *p_16_mon_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_16->mon_AWREADY.bind(*p_16_mon_AWREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_AWREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_16_mon_AWADDR = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_16->mon_AWADDR.bind(*p_16_mon_AWADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_AWADDR);
        xsim_sc_channel<0, bool > *p_16_mon_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_16->mon_WVALID.bind(*p_16_mon_WVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_WVALID);
        xsim_sc_channel<0, bool > *p_16_mon_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_16->mon_WREADY.bind(*p_16_mon_WREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_WREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_16_mon_WDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_16->mon_WDATA.bind(*p_16_mon_WDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_WDATA);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_mon_WSTRB = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->mon_WSTRB.bind(*p_16_mon_WSTRB);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_WSTRB);
        xsim_sc_channel<0, bool > *p_16_mon_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_16->mon_ARVALID.bind(*p_16_mon_ARVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_ARVALID);
        xsim_sc_channel<0, bool > *p_16_mon_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_16->mon_ARREADY.bind(*p_16_mon_ARREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_ARREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_16_mon_ARADDR = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_16->mon_ARADDR.bind(*p_16_mon_ARADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_ARADDR);
        xsim_sc_channel<0, bool > *p_16_mon_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_16->mon_RVALID.bind(*p_16_mon_RVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_RVALID);
        xsim_sc_channel<0, bool > *p_16_mon_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_16->mon_RREADY.bind(*p_16_mon_RREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_RREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_16_mon_RDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_16->mon_RDATA.bind(*p_16_mon_RDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_RDATA);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_mon_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->mon_RRESP.bind(*p_16_mon_RRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_RRESP);
        xsim_sc_channel<0, bool > *p_16_mon_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_16->mon_BVALID.bind(*p_16_mon_BVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_BVALID);
        xsim_sc_channel<0, bool > *p_16_mon_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_16->mon_BREADY.bind(*p_16_mon_BREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_BREADY);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_mon_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->mon_BRESP.bind(*p_16_mon_BRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_BRESP);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_m_axis_tready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->m_axis_tready.bind(*p_16_m_axis_tready);
        (*_glb_hdl_sc_channel_map).push_back(p_16_m_axis_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_16_m_axis_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_16->m_axis_tdata.bind(*p_16_m_axis_tdata);
        p_16_m_axis_tdata->set_sv_netview_offsetfromdp(8595320);
        xsim_sc_channel<0, bool > *p_16_m_axis_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_16->m_axis_tlast.bind(*p_16_m_axis_tlast);
        p_16_m_axis_tlast->set_sv_netview_offsetfromdp(8595376);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_16_m_axis_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_16->m_axis_tid.bind(*p_16_m_axis_tid);
        p_16_m_axis_tid->set_sv_netview_offsetfromdp(8595432);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_16_m_axis_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_16->m_axis_tdest.bind(*p_16_m_axis_tdest);
        p_16_m_axis_tdest->set_sv_netview_offsetfromdp(8595488);
        xsim_sc_channel<0, bool > *p_16_m_axis_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->m_axis_tvalid.bind(*p_16_m_axis_tvalid);
        p_16_m_axis_tvalid->set_sv_netview_offsetfromdp(8595544);
        xsim_sc_channel<0, bool > *p_16_ap_continue = new xsim_sc_channel<0, bool >();
        sc_inst_16->ap_continue.bind(*p_16_ap_continue);
        (*_glb_hdl_sc_channel_map).push_back(p_16_ap_continue);
        xsim_sc_channel<0, bool > *p_16_ap_ready = new xsim_sc_channel<0, bool >();
        sc_inst_16->ap_ready.bind(*p_16_ap_ready);
        (*_glb_hdl_sc_channel_map).push_back(p_16_ap_ready);
        xsim_sc_channel<0, bool > *p_16_ap_start = new xsim_sc_channel<0, bool >();
        sc_inst_16->ap_start.bind(*p_16_ap_start);
        (*_glb_hdl_sc_channel_map).push_back(p_16_ap_start);
        xsim_sc_channel<0, bool > *p_16_ap_idle = new xsim_sc_channel<0, bool >();
        sc_inst_16->ap_idle.bind(*p_16_ap_idle);
        (*_glb_hdl_sc_channel_map).push_back(p_16_ap_idle);
        xsim_sc_channel<0, bool > *p_16_ap_done = new xsim_sc_channel<0, bool >();
        sc_inst_16->ap_done.bind(*p_16_ap_done);
        (*_glb_hdl_sc_channel_map).push_back(p_16_ap_done);
        sc_inst_17 = new pfm_dynamic_dpa_mon1_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_mon1");
        sc_inst_17->xsim_set_dbg_index(401);
        xsim_sc_channel<0, bool > *p_17_mon_clk = new xsim_sc_channel<0, bool >();
        sc_inst_17->mon_clk.bind(*p_17_mon_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_17_mon_clk);
        xsim_sc_channel<0, bool > *p_17_mon_resetn = new xsim_sc_channel<0, bool >();
        sc_inst_17->mon_resetn.bind(*p_17_mon_resetn);
        (*_glb_hdl_sc_channel_map).push_back(p_17_mon_resetn);
        xsim_sc_channel<0, bool > *p_17_trace_clk = new xsim_sc_channel<0, bool >();
        sc_inst_17->trace_clk.bind(*p_17_trace_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_17_trace_clk);
        xsim_sc_channel<0, bool > *p_17_trace_rst = new xsim_sc_channel<0, bool >();
        sc_inst_17->trace_rst.bind(*p_17_trace_rst);
        (*_glb_hdl_sc_channel_map).push_back(p_17_trace_rst);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_17_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_17->s_axi_awaddr.bind(*p_17_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_awaddr);
        xsim_sc_channel<0, bool > *p_17_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_awvalid.bind(*p_17_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_17_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_awready.bind(*p_17_s_axi_awready);
        p_17_s_axi_awready->set_sv_netview_offsetfromdp(8596264);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_17_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_17->s_axi_wdata.bind(*p_17_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->s_axi_wstrb.bind(*p_17_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_17_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_wvalid.bind(*p_17_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_17_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_wready.bind(*p_17_s_axi_wready);
        p_17_s_axi_wready->set_sv_netview_offsetfromdp(8596488);
        xsim_sc_channel<0, bool > *p_17_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_bvalid.bind(*p_17_s_axi_bvalid);
        p_17_s_axi_bvalid->set_sv_netview_offsetfromdp(8596544);
        xsim_sc_channel<0, bool > *p_17_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_bready.bind(*p_17_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->s_axi_bresp.bind(*p_17_s_axi_bresp);
        p_17_s_axi_bresp->set_sv_netview_offsetfromdp(8596656);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_17_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_17->s_axi_araddr.bind(*p_17_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_araddr);
        xsim_sc_channel<0, bool > *p_17_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_arvalid.bind(*p_17_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_17_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_arready.bind(*p_17_s_axi_arready);
        p_17_s_axi_arready->set_sv_netview_offsetfromdp(8596824);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_17_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_17->s_axi_rdata.bind(*p_17_s_axi_rdata);
        p_17_s_axi_rdata->set_sv_netview_offsetfromdp(8596880);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->s_axi_rresp.bind(*p_17_s_axi_rresp);
        p_17_s_axi_rresp->set_sv_netview_offsetfromdp(8596936);
        xsim_sc_channel<0, bool > *p_17_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_rvalid.bind(*p_17_s_axi_rvalid);
        p_17_s_axi_rvalid->set_sv_netview_offsetfromdp(8596992);
        xsim_sc_channel<0, bool > *p_17_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_rready.bind(*p_17_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_rready);
        xsim_sc_channel<0, bool > *p_17_mon_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_17->mon_AWVALID.bind(*p_17_mon_AWVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_17_mon_AWVALID);
        xsim_sc_channel<0, bool > *p_17_mon_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_17->mon_AWREADY.bind(*p_17_mon_AWREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_17_mon_AWREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_17_mon_AWADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_17->mon_AWADDR.bind(*p_17_mon_AWADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_17_mon_AWADDR);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_17_mon_AWID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_17->mon_AWID.bind(*p_17_mon_AWID);
        (*_glb_hdl_sc_channel_map).push_back(p_17_mon_AWID);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_17_mon_AWLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_17->mon_AWLEN.bind(*p_17_mon_AWLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_17_mon_AWLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_17_mon_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_17->mon_AWSIZE.bind(*p_17_mon_AWSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_17_mon_AWSIZE);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_mon_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->mon_AWBURST.bind(*p_17_mon_AWBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_17_mon_AWBURST);
        xsim_sc_channel<0, bool > *p_17_mon_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_17->mon_WVALID.bind(*p_17_mon_WVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_17_mon_WVALID);
        xsim_sc_channel<0, bool > *p_17_mon_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_17->mon_WREADY.bind(*p_17_mon_WREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_17_mon_WREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_17_mon_WDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_17->mon_WDATA.bind(*p_17_mon_WDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_17_mon_WDATA);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_mon_WSTRB = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->mon_WSTRB.bind(*p_17_mon_WSTRB);
        (*_glb_hdl_sc_channel_map).push_back(p_17_mon_WSTRB);
        xsim_sc_channel<0, bool > *p_17_mon_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_17->mon_WLAST.bind(*p_17_mon_WLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_17_mon_WLAST);
        xsim_sc_channel<0, bool > *p_17_mon_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_17->mon_ARVALID.bind(*p_17_mon_ARVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_17_mon_ARVALID);
        xsim_sc_channel<0, bool > *p_17_mon_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_17->mon_ARREADY.bind(*p_17_mon_ARREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_17_mon_ARREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_17_mon_ARADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_17->mon_ARADDR.bind(*p_17_mon_ARADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_17_mon_ARADDR);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_17_mon_ARID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_17->mon_ARID.bind(*p_17_mon_ARID);
        (*_glb_hdl_sc_channel_map).push_back(p_17_mon_ARID);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_17_mon_ARLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_17->mon_ARLEN.bind(*p_17_mon_ARLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_17_mon_ARLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_17_mon_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_17->mon_ARSIZE.bind(*p_17_mon_ARSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_17_mon_ARSIZE);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_mon_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->mon_ARBURST.bind(*p_17_mon_ARBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_17_mon_ARBURST);
        xsim_sc_channel<0, bool > *p_17_mon_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_17->mon_RVALID.bind(*p_17_mon_RVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_17_mon_RVALID);
        xsim_sc_channel<0, bool > *p_17_mon_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_17->mon_RREADY.bind(*p_17_mon_RREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_17_mon_RREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_17_mon_RDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_17->mon_RDATA.bind(*p_17_mon_RDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_17_mon_RDATA);
        xsim_sc_channel<0, bool > *p_17_mon_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_17->mon_RLAST.bind(*p_17_mon_RLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_17_mon_RLAST);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_17_mon_RID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_17->mon_RID.bind(*p_17_mon_RID);
        (*_glb_hdl_sc_channel_map).push_back(p_17_mon_RID);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_mon_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->mon_RRESP.bind(*p_17_mon_RRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_17_mon_RRESP);
        xsim_sc_channel<0, bool > *p_17_mon_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_17->mon_BVALID.bind(*p_17_mon_BVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_17_mon_BVALID);
        xsim_sc_channel<0, bool > *p_17_mon_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_17->mon_BREADY.bind(*p_17_mon_BREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_17_mon_BREADY);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_mon_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->mon_BRESP.bind(*p_17_mon_BRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_17_mon_BRESP);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_17_mon_BID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_17->mon_BID.bind(*p_17_mon_BID);
        (*_glb_hdl_sc_channel_map).push_back(p_17_mon_BID);
        xsim_sc_channel<0, bool > *p_17_m_axis_rd_tready = new xsim_sc_channel<0, bool >();
        sc_inst_17->m_axis_rd_tready.bind(*p_17_m_axis_rd_tready);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m_axis_rd_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_17_m_axis_rd_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_17->m_axis_rd_tdata.bind(*p_17_m_axis_rd_tdata);
        p_17_m_axis_rd_tdata->set_sv_netview_offsetfromdp(8598784);
        xsim_sc_channel<0, bool > *p_17_m_axis_rd_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_17->m_axis_rd_tlast.bind(*p_17_m_axis_rd_tlast);
        p_17_m_axis_rd_tlast->set_sv_netview_offsetfromdp(8598840);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_17_m_axis_rd_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_17->m_axis_rd_tid.bind(*p_17_m_axis_rd_tid);
        p_17_m_axis_rd_tid->set_sv_netview_offsetfromdp(8598896);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_17_m_axis_rd_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_17->m_axis_rd_tdest.bind(*p_17_m_axis_rd_tdest);
        p_17_m_axis_rd_tdest->set_sv_netview_offsetfromdp(8598952);
        xsim_sc_channel<0, bool > *p_17_m_axis_wr_tready = new xsim_sc_channel<0, bool >();
        sc_inst_17->m_axis_wr_tready.bind(*p_17_m_axis_wr_tready);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m_axis_wr_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_17_m_axis_wr_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_17->m_axis_wr_tdata.bind(*p_17_m_axis_wr_tdata);
        p_17_m_axis_wr_tdata->set_sv_netview_offsetfromdp(8599064);
        xsim_sc_channel<0, bool > *p_17_m_axis_wr_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_17->m_axis_wr_tlast.bind(*p_17_m_axis_wr_tlast);
        p_17_m_axis_wr_tlast->set_sv_netview_offsetfromdp(8599120);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_17_m_axis_wr_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_17->m_axis_wr_tid.bind(*p_17_m_axis_wr_tid);
        p_17_m_axis_wr_tid->set_sv_netview_offsetfromdp(8599176);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_17_m_axis_wr_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_17->m_axis_wr_tdest.bind(*p_17_m_axis_wr_tdest);
        p_17_m_axis_wr_tdest->set_sv_netview_offsetfromdp(8599232);
        xsim_sc_channel<0, bool > *p_17_m_axis_wr_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->m_axis_wr_tvalid.bind(*p_17_m_axis_wr_tvalid);
        p_17_m_axis_wr_tvalid->set_sv_netview_offsetfromdp(8599288);
        xsim_sc_channel<0, bool > *p_17_m_axis_rd_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->m_axis_rd_tvalid.bind(*p_17_m_axis_rd_tvalid);
        p_17_m_axis_rd_tvalid->set_sv_netview_offsetfromdp(8599344);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_17_s_axi_awaddr_mon = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_17->s_axi_awaddr_mon.bind(*p_17_s_axi_awaddr_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_awaddr_mon);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_17_s_axi_awprot_mon = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_17->s_axi_awprot_mon.bind(*p_17_s_axi_awprot_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_awprot_mon);
        xsim_sc_channel<0, bool > *p_17_s_axi_awvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_awvalid_mon.bind(*p_17_s_axi_awvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_awvalid_mon);
        xsim_sc_channel<0, bool > *p_17_s_axi_awready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_awready_mon.bind(*p_17_s_axi_awready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_awready_mon);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_17_s_axi_wdata_mon = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_17->s_axi_wdata_mon.bind(*p_17_s_axi_wdata_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_wdata_mon);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_s_axi_wstrb_mon = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->s_axi_wstrb_mon.bind(*p_17_s_axi_wstrb_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_wstrb_mon);
        xsim_sc_channel<0, bool > *p_17_s_axi_wvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_wvalid_mon.bind(*p_17_s_axi_wvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_wvalid_mon);
        xsim_sc_channel<0, bool > *p_17_s_axi_wready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_wready_mon.bind(*p_17_s_axi_wready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_wready_mon);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_s_axi_bresp_mon = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->s_axi_bresp_mon.bind(*p_17_s_axi_bresp_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_bresp_mon);
        xsim_sc_channel<0, bool > *p_17_s_axi_bvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_bvalid_mon.bind(*p_17_s_axi_bvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_bvalid_mon);
        xsim_sc_channel<0, bool > *p_17_s_axi_bready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_bready_mon.bind(*p_17_s_axi_bready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_bready_mon);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_17_s_axi_araddr_mon = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_17->s_axi_araddr_mon.bind(*p_17_s_axi_araddr_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_araddr_mon);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_17_s_axi_arprot_mon = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_17->s_axi_arprot_mon.bind(*p_17_s_axi_arprot_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_arprot_mon);
        xsim_sc_channel<0, bool > *p_17_s_axi_arvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_arvalid_mon.bind(*p_17_s_axi_arvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_arvalid_mon);
        xsim_sc_channel<0, bool > *p_17_s_axi_arready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_arready_mon.bind(*p_17_s_axi_arready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_arready_mon);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_17_s_axi_rdata_mon = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_17->s_axi_rdata_mon.bind(*p_17_s_axi_rdata_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_rdata_mon);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_s_axi_rresp_mon = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->s_axi_rresp_mon.bind(*p_17_s_axi_rresp_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_rresp_mon);
        xsim_sc_channel<0, bool > *p_17_s_axi_rvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_rvalid_mon.bind(*p_17_s_axi_rvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_rvalid_mon);
        xsim_sc_channel<0, bool > *p_17_s_axi_rready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_rready_mon.bind(*p_17_s_axi_rready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_rready_mon);
        sc_inst_18 = new pfm_dynamic_dpa_mon2_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_mon2");
        sc_inst_18->xsim_set_dbg_index(402);
        xsim_sc_channel<0, bool > *p_18_mon_clk = new xsim_sc_channel<0, bool >();
        sc_inst_18->mon_clk.bind(*p_18_mon_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_18_mon_clk);
        xsim_sc_channel<0, bool > *p_18_mon_resetn = new xsim_sc_channel<0, bool >();
        sc_inst_18->mon_resetn.bind(*p_18_mon_resetn);
        (*_glb_hdl_sc_channel_map).push_back(p_18_mon_resetn);
        xsim_sc_channel<0, bool > *p_18_trace_clk = new xsim_sc_channel<0, bool >();
        sc_inst_18->trace_clk.bind(*p_18_trace_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_18_trace_clk);
        xsim_sc_channel<0, bool > *p_18_trace_rst = new xsim_sc_channel<0, bool >();
        sc_inst_18->trace_rst.bind(*p_18_trace_rst);
        (*_glb_hdl_sc_channel_map).push_back(p_18_trace_rst);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_18_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_18->s_axi_awaddr.bind(*p_18_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_awaddr);
        xsim_sc_channel<0, bool > *p_18_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_awvalid.bind(*p_18_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_18_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_awready.bind(*p_18_s_axi_awready);
        p_18_s_axi_awready->set_sv_netview_offsetfromdp(8600848);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_18_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_18->s_axi_wdata.bind(*p_18_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->s_axi_wstrb.bind(*p_18_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_18_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_wvalid.bind(*p_18_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_18_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_wready.bind(*p_18_s_axi_wready);
        p_18_s_axi_wready->set_sv_netview_offsetfromdp(8601072);
        xsim_sc_channel<0, bool > *p_18_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_bvalid.bind(*p_18_s_axi_bvalid);
        p_18_s_axi_bvalid->set_sv_netview_offsetfromdp(8601128);
        xsim_sc_channel<0, bool > *p_18_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_bready.bind(*p_18_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->s_axi_bresp.bind(*p_18_s_axi_bresp);
        p_18_s_axi_bresp->set_sv_netview_offsetfromdp(8601240);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_18_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_18->s_axi_araddr.bind(*p_18_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_araddr);
        xsim_sc_channel<0, bool > *p_18_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_arvalid.bind(*p_18_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_18_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_arready.bind(*p_18_s_axi_arready);
        p_18_s_axi_arready->set_sv_netview_offsetfromdp(8601408);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_18_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_18->s_axi_rdata.bind(*p_18_s_axi_rdata);
        p_18_s_axi_rdata->set_sv_netview_offsetfromdp(8601464);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->s_axi_rresp.bind(*p_18_s_axi_rresp);
        p_18_s_axi_rresp->set_sv_netview_offsetfromdp(8601520);
        xsim_sc_channel<0, bool > *p_18_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_rvalid.bind(*p_18_s_axi_rvalid);
        p_18_s_axi_rvalid->set_sv_netview_offsetfromdp(8601576);
        xsim_sc_channel<0, bool > *p_18_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_rready.bind(*p_18_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_rready);
        xsim_sc_channel<0, bool > *p_18_mon_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_18->mon_AWVALID.bind(*p_18_mon_AWVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_18_mon_AWVALID);
        xsim_sc_channel<0, bool > *p_18_mon_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->mon_AWREADY.bind(*p_18_mon_AWREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_18_mon_AWREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_18_mon_AWADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_18->mon_AWADDR.bind(*p_18_mon_AWADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_18_mon_AWADDR);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_18_mon_AWID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_18->mon_AWID.bind(*p_18_mon_AWID);
        (*_glb_hdl_sc_channel_map).push_back(p_18_mon_AWID);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_18_mon_AWLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_18->mon_AWLEN.bind(*p_18_mon_AWLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_18_mon_AWLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_18_mon_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_18->mon_AWSIZE.bind(*p_18_mon_AWSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_18_mon_AWSIZE);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_mon_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->mon_AWBURST.bind(*p_18_mon_AWBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_18_mon_AWBURST);
        xsim_sc_channel<0, bool > *p_18_mon_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_18->mon_WVALID.bind(*p_18_mon_WVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_18_mon_WVALID);
        xsim_sc_channel<0, bool > *p_18_mon_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->mon_WREADY.bind(*p_18_mon_WREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_18_mon_WREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_18_mon_WDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_18->mon_WDATA.bind(*p_18_mon_WDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_18_mon_WDATA);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_mon_WSTRB = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->mon_WSTRB.bind(*p_18_mon_WSTRB);
        (*_glb_hdl_sc_channel_map).push_back(p_18_mon_WSTRB);
        xsim_sc_channel<0, bool > *p_18_mon_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_18->mon_WLAST.bind(*p_18_mon_WLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_18_mon_WLAST);
        xsim_sc_channel<0, bool > *p_18_mon_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_18->mon_ARVALID.bind(*p_18_mon_ARVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_18_mon_ARVALID);
        xsim_sc_channel<0, bool > *p_18_mon_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->mon_ARREADY.bind(*p_18_mon_ARREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_18_mon_ARREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_18_mon_ARADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_18->mon_ARADDR.bind(*p_18_mon_ARADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_18_mon_ARADDR);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_18_mon_ARID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_18->mon_ARID.bind(*p_18_mon_ARID);
        (*_glb_hdl_sc_channel_map).push_back(p_18_mon_ARID);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_18_mon_ARLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_18->mon_ARLEN.bind(*p_18_mon_ARLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_18_mon_ARLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_18_mon_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_18->mon_ARSIZE.bind(*p_18_mon_ARSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_18_mon_ARSIZE);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_mon_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->mon_ARBURST.bind(*p_18_mon_ARBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_18_mon_ARBURST);
        xsim_sc_channel<0, bool > *p_18_mon_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_18->mon_RVALID.bind(*p_18_mon_RVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_18_mon_RVALID);
        xsim_sc_channel<0, bool > *p_18_mon_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->mon_RREADY.bind(*p_18_mon_RREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_18_mon_RREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_18_mon_RDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_18->mon_RDATA.bind(*p_18_mon_RDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_18_mon_RDATA);
        xsim_sc_channel<0, bool > *p_18_mon_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_18->mon_RLAST.bind(*p_18_mon_RLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_18_mon_RLAST);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_18_mon_RID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_18->mon_RID.bind(*p_18_mon_RID);
        (*_glb_hdl_sc_channel_map).push_back(p_18_mon_RID);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_mon_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->mon_RRESP.bind(*p_18_mon_RRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_18_mon_RRESP);
        xsim_sc_channel<0, bool > *p_18_mon_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_18->mon_BVALID.bind(*p_18_mon_BVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_18_mon_BVALID);
        xsim_sc_channel<0, bool > *p_18_mon_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->mon_BREADY.bind(*p_18_mon_BREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_18_mon_BREADY);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_mon_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->mon_BRESP.bind(*p_18_mon_BRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_18_mon_BRESP);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_18_mon_BID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_18->mon_BID.bind(*p_18_mon_BID);
        (*_glb_hdl_sc_channel_map).push_back(p_18_mon_BID);
        xsim_sc_channel<0, bool > *p_18_m_axis_rd_tready = new xsim_sc_channel<0, bool >();
        sc_inst_18->m_axis_rd_tready.bind(*p_18_m_axis_rd_tready);
        (*_glb_hdl_sc_channel_map).push_back(p_18_m_axis_rd_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_18_m_axis_rd_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_18->m_axis_rd_tdata.bind(*p_18_m_axis_rd_tdata);
        p_18_m_axis_rd_tdata->set_sv_netview_offsetfromdp(8603368);
        xsim_sc_channel<0, bool > *p_18_m_axis_rd_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_18->m_axis_rd_tlast.bind(*p_18_m_axis_rd_tlast);
        p_18_m_axis_rd_tlast->set_sv_netview_offsetfromdp(8603424);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_18_m_axis_rd_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_18->m_axis_rd_tid.bind(*p_18_m_axis_rd_tid);
        p_18_m_axis_rd_tid->set_sv_netview_offsetfromdp(8603480);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_18_m_axis_rd_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_18->m_axis_rd_tdest.bind(*p_18_m_axis_rd_tdest);
        p_18_m_axis_rd_tdest->set_sv_netview_offsetfromdp(8603536);
        xsim_sc_channel<0, bool > *p_18_m_axis_wr_tready = new xsim_sc_channel<0, bool >();
        sc_inst_18->m_axis_wr_tready.bind(*p_18_m_axis_wr_tready);
        (*_glb_hdl_sc_channel_map).push_back(p_18_m_axis_wr_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_18_m_axis_wr_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_18->m_axis_wr_tdata.bind(*p_18_m_axis_wr_tdata);
        p_18_m_axis_wr_tdata->set_sv_netview_offsetfromdp(8603648);
        xsim_sc_channel<0, bool > *p_18_m_axis_wr_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_18->m_axis_wr_tlast.bind(*p_18_m_axis_wr_tlast);
        p_18_m_axis_wr_tlast->set_sv_netview_offsetfromdp(8603704);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_18_m_axis_wr_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_18->m_axis_wr_tid.bind(*p_18_m_axis_wr_tid);
        p_18_m_axis_wr_tid->set_sv_netview_offsetfromdp(8603760);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_18_m_axis_wr_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_18->m_axis_wr_tdest.bind(*p_18_m_axis_wr_tdest);
        p_18_m_axis_wr_tdest->set_sv_netview_offsetfromdp(8603816);
        xsim_sc_channel<0, bool > *p_18_m_axis_wr_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_18->m_axis_wr_tvalid.bind(*p_18_m_axis_wr_tvalid);
        p_18_m_axis_wr_tvalid->set_sv_netview_offsetfromdp(8603872);
        xsim_sc_channel<0, bool > *p_18_m_axis_rd_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_18->m_axis_rd_tvalid.bind(*p_18_m_axis_rd_tvalid);
        p_18_m_axis_rd_tvalid->set_sv_netview_offsetfromdp(8603928);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_18_s_axi_awaddr_mon = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_18->s_axi_awaddr_mon.bind(*p_18_s_axi_awaddr_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_awaddr_mon);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_18_s_axi_awprot_mon = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_18->s_axi_awprot_mon.bind(*p_18_s_axi_awprot_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_awprot_mon);
        xsim_sc_channel<0, bool > *p_18_s_axi_awvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_awvalid_mon.bind(*p_18_s_axi_awvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_awvalid_mon);
        xsim_sc_channel<0, bool > *p_18_s_axi_awready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_awready_mon.bind(*p_18_s_axi_awready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_awready_mon);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_18_s_axi_wdata_mon = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_18->s_axi_wdata_mon.bind(*p_18_s_axi_wdata_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_wdata_mon);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_s_axi_wstrb_mon = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->s_axi_wstrb_mon.bind(*p_18_s_axi_wstrb_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_wstrb_mon);
        xsim_sc_channel<0, bool > *p_18_s_axi_wvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_wvalid_mon.bind(*p_18_s_axi_wvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_wvalid_mon);
        xsim_sc_channel<0, bool > *p_18_s_axi_wready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_wready_mon.bind(*p_18_s_axi_wready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_wready_mon);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_s_axi_bresp_mon = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->s_axi_bresp_mon.bind(*p_18_s_axi_bresp_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_bresp_mon);
        xsim_sc_channel<0, bool > *p_18_s_axi_bvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_bvalid_mon.bind(*p_18_s_axi_bvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_bvalid_mon);
        xsim_sc_channel<0, bool > *p_18_s_axi_bready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_bready_mon.bind(*p_18_s_axi_bready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_bready_mon);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_18_s_axi_araddr_mon = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_18->s_axi_araddr_mon.bind(*p_18_s_axi_araddr_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_araddr_mon);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_18_s_axi_arprot_mon = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_18->s_axi_arprot_mon.bind(*p_18_s_axi_arprot_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_arprot_mon);
        xsim_sc_channel<0, bool > *p_18_s_axi_arvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_arvalid_mon.bind(*p_18_s_axi_arvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_arvalid_mon);
        xsim_sc_channel<0, bool > *p_18_s_axi_arready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_arready_mon.bind(*p_18_s_axi_arready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_arready_mon);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_18_s_axi_rdata_mon = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_18->s_axi_rdata_mon.bind(*p_18_s_axi_rdata_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_rdata_mon);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_s_axi_rresp_mon = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->s_axi_rresp_mon.bind(*p_18_s_axi_rresp_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_rresp_mon);
        xsim_sc_channel<0, bool > *p_18_s_axi_rvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_rvalid_mon.bind(*p_18_s_axi_rvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_rvalid_mon);
        xsim_sc_channel<0, bool > *p_18_s_axi_rready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_rready_mon.bind(*p_18_s_axi_rready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_rready_mon);
        sc_inst_19 = new pfm_dynamic_dpa_mon3_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_mon3");
        sc_inst_19->xsim_set_dbg_index(403);
        xsim_sc_channel<0, bool > *p_19_mon_clk = new xsim_sc_channel<0, bool >();
        sc_inst_19->mon_clk.bind(*p_19_mon_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_19_mon_clk);
        xsim_sc_channel<0, bool > *p_19_mon_resetn = new xsim_sc_channel<0, bool >();
        sc_inst_19->mon_resetn.bind(*p_19_mon_resetn);
        (*_glb_hdl_sc_channel_map).push_back(p_19_mon_resetn);
        xsim_sc_channel<0, bool > *p_19_trace_clk = new xsim_sc_channel<0, bool >();
        sc_inst_19->trace_clk.bind(*p_19_trace_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_19_trace_clk);
        xsim_sc_channel<0, bool > *p_19_trace_rst = new xsim_sc_channel<0, bool >();
        sc_inst_19->trace_rst.bind(*p_19_trace_rst);
        (*_glb_hdl_sc_channel_map).push_back(p_19_trace_rst);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_19_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_19->s_axi_awaddr.bind(*p_19_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_awaddr);
        xsim_sc_channel<0, bool > *p_19_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_awvalid.bind(*p_19_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_19_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_awready.bind(*p_19_s_axi_awready);
        p_19_s_axi_awready->set_sv_netview_offsetfromdp(8605432);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_19_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_19->s_axi_wdata.bind(*p_19_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->s_axi_wstrb.bind(*p_19_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_19_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_wvalid.bind(*p_19_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_19_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_wready.bind(*p_19_s_axi_wready);
        p_19_s_axi_wready->set_sv_netview_offsetfromdp(8605656);
        xsim_sc_channel<0, bool > *p_19_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_bvalid.bind(*p_19_s_axi_bvalid);
        p_19_s_axi_bvalid->set_sv_netview_offsetfromdp(8605712);
        xsim_sc_channel<0, bool > *p_19_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_bready.bind(*p_19_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->s_axi_bresp.bind(*p_19_s_axi_bresp);
        p_19_s_axi_bresp->set_sv_netview_offsetfromdp(8605824);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_19_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_19->s_axi_araddr.bind(*p_19_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_araddr);
        xsim_sc_channel<0, bool > *p_19_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_arvalid.bind(*p_19_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_19_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_arready.bind(*p_19_s_axi_arready);
        p_19_s_axi_arready->set_sv_netview_offsetfromdp(8605992);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_19_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_19->s_axi_rdata.bind(*p_19_s_axi_rdata);
        p_19_s_axi_rdata->set_sv_netview_offsetfromdp(8606048);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->s_axi_rresp.bind(*p_19_s_axi_rresp);
        p_19_s_axi_rresp->set_sv_netview_offsetfromdp(8606104);
        xsim_sc_channel<0, bool > *p_19_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_rvalid.bind(*p_19_s_axi_rvalid);
        p_19_s_axi_rvalid->set_sv_netview_offsetfromdp(8606160);
        xsim_sc_channel<0, bool > *p_19_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_rready.bind(*p_19_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_rready);
        xsim_sc_channel<0, bool > *p_19_mon_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_19->mon_AWVALID.bind(*p_19_mon_AWVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_19_mon_AWVALID);
        xsim_sc_channel<0, bool > *p_19_mon_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_19->mon_AWREADY.bind(*p_19_mon_AWREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_19_mon_AWREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_19_mon_AWADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_19->mon_AWADDR.bind(*p_19_mon_AWADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_19_mon_AWADDR);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_19_mon_AWID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_19->mon_AWID.bind(*p_19_mon_AWID);
        (*_glb_hdl_sc_channel_map).push_back(p_19_mon_AWID);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_19_mon_AWLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_19->mon_AWLEN.bind(*p_19_mon_AWLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_19_mon_AWLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_19_mon_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_19->mon_AWSIZE.bind(*p_19_mon_AWSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_19_mon_AWSIZE);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_mon_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->mon_AWBURST.bind(*p_19_mon_AWBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_19_mon_AWBURST);
        xsim_sc_channel<0, bool > *p_19_mon_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_19->mon_WVALID.bind(*p_19_mon_WVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_19_mon_WVALID);
        xsim_sc_channel<0, bool > *p_19_mon_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_19->mon_WREADY.bind(*p_19_mon_WREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_19_mon_WREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_19_mon_WDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_19->mon_WDATA.bind(*p_19_mon_WDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_19_mon_WDATA);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_mon_WSTRB = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->mon_WSTRB.bind(*p_19_mon_WSTRB);
        (*_glb_hdl_sc_channel_map).push_back(p_19_mon_WSTRB);
        xsim_sc_channel<0, bool > *p_19_mon_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_19->mon_WLAST.bind(*p_19_mon_WLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_19_mon_WLAST);
        xsim_sc_channel<0, bool > *p_19_mon_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_19->mon_ARVALID.bind(*p_19_mon_ARVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_19_mon_ARVALID);
        xsim_sc_channel<0, bool > *p_19_mon_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_19->mon_ARREADY.bind(*p_19_mon_ARREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_19_mon_ARREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_19_mon_ARADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_19->mon_ARADDR.bind(*p_19_mon_ARADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_19_mon_ARADDR);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_19_mon_ARID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_19->mon_ARID.bind(*p_19_mon_ARID);
        (*_glb_hdl_sc_channel_map).push_back(p_19_mon_ARID);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_19_mon_ARLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_19->mon_ARLEN.bind(*p_19_mon_ARLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_19_mon_ARLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_19_mon_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_19->mon_ARSIZE.bind(*p_19_mon_ARSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_19_mon_ARSIZE);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_mon_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->mon_ARBURST.bind(*p_19_mon_ARBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_19_mon_ARBURST);
        xsim_sc_channel<0, bool > *p_19_mon_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_19->mon_RVALID.bind(*p_19_mon_RVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_19_mon_RVALID);
        xsim_sc_channel<0, bool > *p_19_mon_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_19->mon_RREADY.bind(*p_19_mon_RREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_19_mon_RREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_19_mon_RDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_19->mon_RDATA.bind(*p_19_mon_RDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_19_mon_RDATA);
        xsim_sc_channel<0, bool > *p_19_mon_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_19->mon_RLAST.bind(*p_19_mon_RLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_19_mon_RLAST);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_19_mon_RID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_19->mon_RID.bind(*p_19_mon_RID);
        (*_glb_hdl_sc_channel_map).push_back(p_19_mon_RID);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_mon_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->mon_RRESP.bind(*p_19_mon_RRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_19_mon_RRESP);
        xsim_sc_channel<0, bool > *p_19_mon_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_19->mon_BVALID.bind(*p_19_mon_BVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_19_mon_BVALID);
        xsim_sc_channel<0, bool > *p_19_mon_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_19->mon_BREADY.bind(*p_19_mon_BREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_19_mon_BREADY);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_mon_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->mon_BRESP.bind(*p_19_mon_BRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_19_mon_BRESP);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_19_mon_BID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_19->mon_BID.bind(*p_19_mon_BID);
        (*_glb_hdl_sc_channel_map).push_back(p_19_mon_BID);
        xsim_sc_channel<0, bool > *p_19_m_axis_rd_tready = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axis_rd_tready.bind(*p_19_m_axis_rd_tready);
        (*_glb_hdl_sc_channel_map).push_back(p_19_m_axis_rd_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_19_m_axis_rd_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_19->m_axis_rd_tdata.bind(*p_19_m_axis_rd_tdata);
        p_19_m_axis_rd_tdata->set_sv_netview_offsetfromdp(8607952);
        xsim_sc_channel<0, bool > *p_19_m_axis_rd_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axis_rd_tlast.bind(*p_19_m_axis_rd_tlast);
        p_19_m_axis_rd_tlast->set_sv_netview_offsetfromdp(8608008);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_19_m_axis_rd_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_19->m_axis_rd_tid.bind(*p_19_m_axis_rd_tid);
        p_19_m_axis_rd_tid->set_sv_netview_offsetfromdp(8608064);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_19_m_axis_rd_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_19->m_axis_rd_tdest.bind(*p_19_m_axis_rd_tdest);
        p_19_m_axis_rd_tdest->set_sv_netview_offsetfromdp(8608120);
        xsim_sc_channel<0, bool > *p_19_m_axis_wr_tready = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axis_wr_tready.bind(*p_19_m_axis_wr_tready);
        (*_glb_hdl_sc_channel_map).push_back(p_19_m_axis_wr_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_19_m_axis_wr_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_19->m_axis_wr_tdata.bind(*p_19_m_axis_wr_tdata);
        p_19_m_axis_wr_tdata->set_sv_netview_offsetfromdp(8608232);
        xsim_sc_channel<0, bool > *p_19_m_axis_wr_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axis_wr_tlast.bind(*p_19_m_axis_wr_tlast);
        p_19_m_axis_wr_tlast->set_sv_netview_offsetfromdp(8608288);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_19_m_axis_wr_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_19->m_axis_wr_tid.bind(*p_19_m_axis_wr_tid);
        p_19_m_axis_wr_tid->set_sv_netview_offsetfromdp(8608344);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_19_m_axis_wr_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_19->m_axis_wr_tdest.bind(*p_19_m_axis_wr_tdest);
        p_19_m_axis_wr_tdest->set_sv_netview_offsetfromdp(8608400);
        xsim_sc_channel<0, bool > *p_19_m_axis_wr_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axis_wr_tvalid.bind(*p_19_m_axis_wr_tvalid);
        p_19_m_axis_wr_tvalid->set_sv_netview_offsetfromdp(8608456);
        xsim_sc_channel<0, bool > *p_19_m_axis_rd_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axis_rd_tvalid.bind(*p_19_m_axis_rd_tvalid);
        p_19_m_axis_rd_tvalid->set_sv_netview_offsetfromdp(8608512);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_19_s_axi_awaddr_mon = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_19->s_axi_awaddr_mon.bind(*p_19_s_axi_awaddr_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_awaddr_mon);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_19_s_axi_awprot_mon = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_19->s_axi_awprot_mon.bind(*p_19_s_axi_awprot_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_awprot_mon);
        xsim_sc_channel<0, bool > *p_19_s_axi_awvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_awvalid_mon.bind(*p_19_s_axi_awvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_awvalid_mon);
        xsim_sc_channel<0, bool > *p_19_s_axi_awready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_awready_mon.bind(*p_19_s_axi_awready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_awready_mon);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_19_s_axi_wdata_mon = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_19->s_axi_wdata_mon.bind(*p_19_s_axi_wdata_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_wdata_mon);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_s_axi_wstrb_mon = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->s_axi_wstrb_mon.bind(*p_19_s_axi_wstrb_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_wstrb_mon);
        xsim_sc_channel<0, bool > *p_19_s_axi_wvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_wvalid_mon.bind(*p_19_s_axi_wvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_wvalid_mon);
        xsim_sc_channel<0, bool > *p_19_s_axi_wready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_wready_mon.bind(*p_19_s_axi_wready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_wready_mon);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_s_axi_bresp_mon = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->s_axi_bresp_mon.bind(*p_19_s_axi_bresp_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_bresp_mon);
        xsim_sc_channel<0, bool > *p_19_s_axi_bvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_bvalid_mon.bind(*p_19_s_axi_bvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_bvalid_mon);
        xsim_sc_channel<0, bool > *p_19_s_axi_bready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_bready_mon.bind(*p_19_s_axi_bready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_bready_mon);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_19_s_axi_araddr_mon = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_19->s_axi_araddr_mon.bind(*p_19_s_axi_araddr_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_araddr_mon);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_19_s_axi_arprot_mon = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_19->s_axi_arprot_mon.bind(*p_19_s_axi_arprot_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_arprot_mon);
        xsim_sc_channel<0, bool > *p_19_s_axi_arvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_arvalid_mon.bind(*p_19_s_axi_arvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_arvalid_mon);
        xsim_sc_channel<0, bool > *p_19_s_axi_arready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_arready_mon.bind(*p_19_s_axi_arready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_arready_mon);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_19_s_axi_rdata_mon = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_19->s_axi_rdata_mon.bind(*p_19_s_axi_rdata_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_rdata_mon);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_s_axi_rresp_mon = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->s_axi_rresp_mon.bind(*p_19_s_axi_rresp_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_rresp_mon);
        xsim_sc_channel<0, bool > *p_19_s_axi_rvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_rvalid_mon.bind(*p_19_s_axi_rvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_rvalid_mon);
        xsim_sc_channel<0, bool > *p_19_s_axi_rready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_rready_mon.bind(*p_19_s_axi_rready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_rready_mon);
        sc_inst_20 = new bd_5dca_sci(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.hmss_0.inst.bd_5dca_sci_inst");
        sc_inst_20->xsim_set_dbg_index(949);
        sc_inst_21 = new bd_5dca_hbm_inst_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.hmss_0.inst.hbm_inst");
        sc_inst_21->xsim_set_dbg_index(950);
        xsim_sc_channel<0, bool > *p_21_HBM_REF_CLK_0 = new xsim_sc_channel<0, bool >();
        sc_inst_21->HBM_REF_CLK_0.bind(*p_21_HBM_REF_CLK_0);
        (*_glb_hdl_sc_channel_map).push_back(p_21_HBM_REF_CLK_0);
        xsim_sc_channel<0, bool > *p_21_AXI_00_ACLK = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_00_ACLK.bind(*p_21_AXI_00_ACLK);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_00_ACLK);
        xsim_sc_channel<0, bool > *p_21_AXI_00_ARESET_N = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_00_ARESET_N.bind(*p_21_AXI_00_ARESET_N);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_00_ARESET_N);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_21_AXI_00_ARADDR = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_21->AXI_00_ARADDR.bind(*p_21_AXI_00_ARADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_00_ARADDR);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_AXI_00_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->AXI_00_ARBURST.bind(*p_21_AXI_00_ARBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_00_ARBURST);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_21_AXI_00_ARID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_21->AXI_00_ARID.bind(*p_21_AXI_00_ARID);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_00_ARID);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_AXI_00_ARLEN = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->AXI_00_ARLEN.bind(*p_21_AXI_00_ARLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_00_ARLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_21_AXI_00_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_21->AXI_00_ARSIZE.bind(*p_21_AXI_00_ARSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_00_ARSIZE);
        xsim_sc_channel<0, bool > *p_21_AXI_00_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_00_ARVALID.bind(*p_21_AXI_00_ARVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_00_ARVALID);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_21_AXI_00_AWADDR = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_21->AXI_00_AWADDR.bind(*p_21_AXI_00_AWADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_00_AWADDR);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_AXI_00_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->AXI_00_AWBURST.bind(*p_21_AXI_00_AWBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_00_AWBURST);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_21_AXI_00_AWID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_21->AXI_00_AWID.bind(*p_21_AXI_00_AWID);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_00_AWID);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_AXI_00_AWLEN = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->AXI_00_AWLEN.bind(*p_21_AXI_00_AWLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_00_AWLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_21_AXI_00_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_21->AXI_00_AWSIZE.bind(*p_21_AXI_00_AWSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_00_AWSIZE);
        xsim_sc_channel<0, bool > *p_21_AXI_00_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_00_AWVALID.bind(*p_21_AXI_00_AWVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_00_AWVALID);
        xsim_sc_channel<0, bool > *p_21_AXI_00_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_00_RREADY.bind(*p_21_AXI_00_RREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_00_RREADY);
        xsim_sc_channel<0, bool > *p_21_AXI_00_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_00_BREADY.bind(*p_21_AXI_00_BREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_00_BREADY);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_21_AXI_00_WDATA = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_21->AXI_00_WDATA.bind(*p_21_AXI_00_WDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_00_WDATA);
        xsim_sc_channel<0, bool > *p_21_AXI_00_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_00_WLAST.bind(*p_21_AXI_00_WLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_00_WLAST);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_21_AXI_00_WSTRB = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_21->AXI_00_WSTRB.bind(*p_21_AXI_00_WSTRB);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_00_WSTRB);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_21_AXI_00_WDATA_PARITY = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_21->AXI_00_WDATA_PARITY.bind(*p_21_AXI_00_WDATA_PARITY);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_00_WDATA_PARITY);
        xsim_sc_channel<0, bool > *p_21_AXI_00_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_00_WVALID.bind(*p_21_AXI_00_WVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_00_WVALID);
        xsim_sc_channel<0, bool > *p_21_AXI_01_ACLK = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_01_ACLK.bind(*p_21_AXI_01_ACLK);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_01_ACLK);
        xsim_sc_channel<0, bool > *p_21_AXI_01_ARESET_N = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_01_ARESET_N.bind(*p_21_AXI_01_ARESET_N);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_01_ARESET_N);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_21_AXI_01_ARADDR = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_21->AXI_01_ARADDR.bind(*p_21_AXI_01_ARADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_01_ARADDR);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_AXI_01_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->AXI_01_ARBURST.bind(*p_21_AXI_01_ARBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_01_ARBURST);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_21_AXI_01_ARID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_21->AXI_01_ARID.bind(*p_21_AXI_01_ARID);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_01_ARID);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_AXI_01_ARLEN = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->AXI_01_ARLEN.bind(*p_21_AXI_01_ARLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_01_ARLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_21_AXI_01_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_21->AXI_01_ARSIZE.bind(*p_21_AXI_01_ARSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_01_ARSIZE);
        xsim_sc_channel<0, bool > *p_21_AXI_01_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_01_ARVALID.bind(*p_21_AXI_01_ARVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_01_ARVALID);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_21_AXI_01_AWADDR = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_21->AXI_01_AWADDR.bind(*p_21_AXI_01_AWADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_01_AWADDR);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_AXI_01_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->AXI_01_AWBURST.bind(*p_21_AXI_01_AWBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_01_AWBURST);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_21_AXI_01_AWID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_21->AXI_01_AWID.bind(*p_21_AXI_01_AWID);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_01_AWID);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_AXI_01_AWLEN = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->AXI_01_AWLEN.bind(*p_21_AXI_01_AWLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_01_AWLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_21_AXI_01_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_21->AXI_01_AWSIZE.bind(*p_21_AXI_01_AWSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_01_AWSIZE);
        xsim_sc_channel<0, bool > *p_21_AXI_01_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_01_AWVALID.bind(*p_21_AXI_01_AWVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_01_AWVALID);
        xsim_sc_channel<0, bool > *p_21_AXI_01_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_01_RREADY.bind(*p_21_AXI_01_RREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_01_RREADY);
        xsim_sc_channel<0, bool > *p_21_AXI_01_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_01_BREADY.bind(*p_21_AXI_01_BREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_01_BREADY);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_21_AXI_01_WDATA = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_21->AXI_01_WDATA.bind(*p_21_AXI_01_WDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_01_WDATA);
        xsim_sc_channel<0, bool > *p_21_AXI_01_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_01_WLAST.bind(*p_21_AXI_01_WLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_01_WLAST);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_21_AXI_01_WSTRB = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_21->AXI_01_WSTRB.bind(*p_21_AXI_01_WSTRB);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_01_WSTRB);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_21_AXI_01_WDATA_PARITY = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_21->AXI_01_WDATA_PARITY.bind(*p_21_AXI_01_WDATA_PARITY);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_01_WDATA_PARITY);
        xsim_sc_channel<0, bool > *p_21_AXI_01_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_01_WVALID.bind(*p_21_AXI_01_WVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_01_WVALID);
        xsim_sc_channel<0, bool > *p_21_AXI_02_ACLK = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_02_ACLK.bind(*p_21_AXI_02_ACLK);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_02_ACLK);
        xsim_sc_channel<0, bool > *p_21_AXI_02_ARESET_N = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_02_ARESET_N.bind(*p_21_AXI_02_ARESET_N);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_02_ARESET_N);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_21_AXI_02_ARADDR = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_21->AXI_02_ARADDR.bind(*p_21_AXI_02_ARADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_02_ARADDR);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_AXI_02_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->AXI_02_ARBURST.bind(*p_21_AXI_02_ARBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_02_ARBURST);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_21_AXI_02_ARID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_21->AXI_02_ARID.bind(*p_21_AXI_02_ARID);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_02_ARID);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_AXI_02_ARLEN = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->AXI_02_ARLEN.bind(*p_21_AXI_02_ARLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_02_ARLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_21_AXI_02_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_21->AXI_02_ARSIZE.bind(*p_21_AXI_02_ARSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_02_ARSIZE);
        xsim_sc_channel<0, bool > *p_21_AXI_02_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_02_ARVALID.bind(*p_21_AXI_02_ARVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_02_ARVALID);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_21_AXI_02_AWADDR = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_21->AXI_02_AWADDR.bind(*p_21_AXI_02_AWADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_02_AWADDR);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_AXI_02_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->AXI_02_AWBURST.bind(*p_21_AXI_02_AWBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_02_AWBURST);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_21_AXI_02_AWID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_21->AXI_02_AWID.bind(*p_21_AXI_02_AWID);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_02_AWID);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_AXI_02_AWLEN = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->AXI_02_AWLEN.bind(*p_21_AXI_02_AWLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_02_AWLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_21_AXI_02_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_21->AXI_02_AWSIZE.bind(*p_21_AXI_02_AWSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_02_AWSIZE);
        xsim_sc_channel<0, bool > *p_21_AXI_02_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_02_AWVALID.bind(*p_21_AXI_02_AWVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_02_AWVALID);
        xsim_sc_channel<0, bool > *p_21_AXI_02_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_02_RREADY.bind(*p_21_AXI_02_RREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_02_RREADY);
        xsim_sc_channel<0, bool > *p_21_AXI_02_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_02_BREADY.bind(*p_21_AXI_02_BREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_02_BREADY);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_21_AXI_02_WDATA = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_21->AXI_02_WDATA.bind(*p_21_AXI_02_WDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_02_WDATA);
        xsim_sc_channel<0, bool > *p_21_AXI_02_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_02_WLAST.bind(*p_21_AXI_02_WLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_02_WLAST);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_21_AXI_02_WSTRB = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_21->AXI_02_WSTRB.bind(*p_21_AXI_02_WSTRB);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_02_WSTRB);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_21_AXI_02_WDATA_PARITY = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_21->AXI_02_WDATA_PARITY.bind(*p_21_AXI_02_WDATA_PARITY);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_02_WDATA_PARITY);
        xsim_sc_channel<0, bool > *p_21_AXI_02_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_02_WVALID.bind(*p_21_AXI_02_WVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_02_WVALID);
        xsim_sc_channel<0, bool > *p_21_AXI_03_ACLK = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_03_ACLK.bind(*p_21_AXI_03_ACLK);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_03_ACLK);
        xsim_sc_channel<0, bool > *p_21_AXI_03_ARESET_N = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_03_ARESET_N.bind(*p_21_AXI_03_ARESET_N);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_03_ARESET_N);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_21_AXI_03_ARADDR = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_21->AXI_03_ARADDR.bind(*p_21_AXI_03_ARADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_03_ARADDR);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_AXI_03_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->AXI_03_ARBURST.bind(*p_21_AXI_03_ARBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_03_ARBURST);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_21_AXI_03_ARID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_21->AXI_03_ARID.bind(*p_21_AXI_03_ARID);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_03_ARID);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_AXI_03_ARLEN = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->AXI_03_ARLEN.bind(*p_21_AXI_03_ARLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_03_ARLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_21_AXI_03_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_21->AXI_03_ARSIZE.bind(*p_21_AXI_03_ARSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_03_ARSIZE);
        xsim_sc_channel<0, bool > *p_21_AXI_03_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_03_ARVALID.bind(*p_21_AXI_03_ARVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_03_ARVALID);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_21_AXI_03_AWADDR = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_21->AXI_03_AWADDR.bind(*p_21_AXI_03_AWADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_03_AWADDR);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_AXI_03_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->AXI_03_AWBURST.bind(*p_21_AXI_03_AWBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_03_AWBURST);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_21_AXI_03_AWID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_21->AXI_03_AWID.bind(*p_21_AXI_03_AWID);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_03_AWID);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_AXI_03_AWLEN = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->AXI_03_AWLEN.bind(*p_21_AXI_03_AWLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_03_AWLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_21_AXI_03_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_21->AXI_03_AWSIZE.bind(*p_21_AXI_03_AWSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_03_AWSIZE);
        xsim_sc_channel<0, bool > *p_21_AXI_03_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_03_AWVALID.bind(*p_21_AXI_03_AWVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_03_AWVALID);
        xsim_sc_channel<0, bool > *p_21_AXI_03_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_03_RREADY.bind(*p_21_AXI_03_RREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_03_RREADY);
        xsim_sc_channel<0, bool > *p_21_AXI_03_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_03_BREADY.bind(*p_21_AXI_03_BREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_03_BREADY);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_21_AXI_03_WDATA = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_21->AXI_03_WDATA.bind(*p_21_AXI_03_WDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_03_WDATA);
        xsim_sc_channel<0, bool > *p_21_AXI_03_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_03_WLAST.bind(*p_21_AXI_03_WLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_03_WLAST);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_21_AXI_03_WSTRB = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_21->AXI_03_WSTRB.bind(*p_21_AXI_03_WSTRB);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_03_WSTRB);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_21_AXI_03_WDATA_PARITY = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_21->AXI_03_WDATA_PARITY.bind(*p_21_AXI_03_WDATA_PARITY);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_03_WDATA_PARITY);
        xsim_sc_channel<0, bool > *p_21_AXI_03_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_03_WVALID.bind(*p_21_AXI_03_WVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_03_WVALID);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_21_APB_0_PWDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_21->APB_0_PWDATA.bind(*p_21_APB_0_PWDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_21_APB_0_PWDATA);
        xsim_sc_channel<22, sc_dt::sc_bv<22> > *p_21_APB_0_PADDR = new xsim_sc_channel<22, sc_dt::sc_bv<22> >();
        sc_inst_21->APB_0_PADDR.bind(*p_21_APB_0_PADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_21_APB_0_PADDR);
        xsim_sc_channel<0, bool > *p_21_APB_0_PCLK = new xsim_sc_channel<0, bool >();
        sc_inst_21->APB_0_PCLK.bind(*p_21_APB_0_PCLK);
        (*_glb_hdl_sc_channel_map).push_back(p_21_APB_0_PCLK);
        xsim_sc_channel<0, bool > *p_21_APB_0_PENABLE = new xsim_sc_channel<0, bool >();
        sc_inst_21->APB_0_PENABLE.bind(*p_21_APB_0_PENABLE);
        (*_glb_hdl_sc_channel_map).push_back(p_21_APB_0_PENABLE);
        xsim_sc_channel<0, bool > *p_21_APB_0_PRESET_N = new xsim_sc_channel<0, bool >();
        sc_inst_21->APB_0_PRESET_N.bind(*p_21_APB_0_PRESET_N);
        (*_glb_hdl_sc_channel_map).push_back(p_21_APB_0_PRESET_N);
        xsim_sc_channel<0, bool > *p_21_APB_0_PSEL = new xsim_sc_channel<0, bool >();
        sc_inst_21->APB_0_PSEL.bind(*p_21_APB_0_PSEL);
        (*_glb_hdl_sc_channel_map).push_back(p_21_APB_0_PSEL);
        xsim_sc_channel<0, bool > *p_21_APB_0_PWRITE = new xsim_sc_channel<0, bool >();
        sc_inst_21->APB_0_PWRITE.bind(*p_21_APB_0_PWRITE);
        (*_glb_hdl_sc_channel_map).push_back(p_21_APB_0_PWRITE);
        xsim_sc_channel<0, bool > *p_21_AXI_00_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_00_ARREADY.bind(*p_21_AXI_00_ARREADY);
        p_21_AXI_00_ARREADY->set_sv_netview_offsetfromdp(8805144);
        xsim_sc_channel<0, bool > *p_21_AXI_00_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_00_AWREADY.bind(*p_21_AXI_00_AWREADY);
        p_21_AXI_00_AWREADY->set_sv_netview_offsetfromdp(8805200);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_21_AXI_00_RDATA_PARITY = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_21->AXI_00_RDATA_PARITY.bind(*p_21_AXI_00_RDATA_PARITY);
        p_21_AXI_00_RDATA_PARITY->set_sv_netview_offsetfromdp(8805256);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_21_AXI_00_RDATA = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_21->AXI_00_RDATA.bind(*p_21_AXI_00_RDATA);
        p_21_AXI_00_RDATA->set_sv_netview_offsetfromdp(8805312);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_21_AXI_00_RID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_21->AXI_00_RID.bind(*p_21_AXI_00_RID);
        p_21_AXI_00_RID->set_sv_netview_offsetfromdp(8805368);
        xsim_sc_channel<0, bool > *p_21_AXI_00_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_00_RLAST.bind(*p_21_AXI_00_RLAST);
        p_21_AXI_00_RLAST->set_sv_netview_offsetfromdp(8805424);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_AXI_00_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->AXI_00_RRESP.bind(*p_21_AXI_00_RRESP);
        p_21_AXI_00_RRESP->set_sv_netview_offsetfromdp(8805480);
        xsim_sc_channel<0, bool > *p_21_AXI_00_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_00_RVALID.bind(*p_21_AXI_00_RVALID);
        p_21_AXI_00_RVALID->set_sv_netview_offsetfromdp(8805536);
        xsim_sc_channel<0, bool > *p_21_AXI_00_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_00_WREADY.bind(*p_21_AXI_00_WREADY);
        p_21_AXI_00_WREADY->set_sv_netview_offsetfromdp(8805592);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_21_AXI_00_BID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_21->AXI_00_BID.bind(*p_21_AXI_00_BID);
        p_21_AXI_00_BID->set_sv_netview_offsetfromdp(8805648);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_AXI_00_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->AXI_00_BRESP.bind(*p_21_AXI_00_BRESP);
        p_21_AXI_00_BRESP->set_sv_netview_offsetfromdp(8805704);
        xsim_sc_channel<0, bool > *p_21_AXI_00_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_00_BVALID.bind(*p_21_AXI_00_BVALID);
        p_21_AXI_00_BVALID->set_sv_netview_offsetfromdp(8805760);
        xsim_sc_channel<0, bool > *p_21_AXI_01_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_01_ARREADY.bind(*p_21_AXI_01_ARREADY);
        p_21_AXI_01_ARREADY->set_sv_netview_offsetfromdp(8805816);
        xsim_sc_channel<0, bool > *p_21_AXI_01_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_01_AWREADY.bind(*p_21_AXI_01_AWREADY);
        p_21_AXI_01_AWREADY->set_sv_netview_offsetfromdp(8805872);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_21_AXI_01_RDATA_PARITY = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_21->AXI_01_RDATA_PARITY.bind(*p_21_AXI_01_RDATA_PARITY);
        p_21_AXI_01_RDATA_PARITY->set_sv_netview_offsetfromdp(8805928);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_21_AXI_01_RDATA = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_21->AXI_01_RDATA.bind(*p_21_AXI_01_RDATA);
        p_21_AXI_01_RDATA->set_sv_netview_offsetfromdp(8805984);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_21_AXI_01_RID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_21->AXI_01_RID.bind(*p_21_AXI_01_RID);
        p_21_AXI_01_RID->set_sv_netview_offsetfromdp(8806040);
        xsim_sc_channel<0, bool > *p_21_AXI_01_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_01_RLAST.bind(*p_21_AXI_01_RLAST);
        p_21_AXI_01_RLAST->set_sv_netview_offsetfromdp(8806096);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_AXI_01_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->AXI_01_RRESP.bind(*p_21_AXI_01_RRESP);
        p_21_AXI_01_RRESP->set_sv_netview_offsetfromdp(8806152);
        xsim_sc_channel<0, bool > *p_21_AXI_01_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_01_RVALID.bind(*p_21_AXI_01_RVALID);
        p_21_AXI_01_RVALID->set_sv_netview_offsetfromdp(8806208);
        xsim_sc_channel<0, bool > *p_21_AXI_01_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_01_WREADY.bind(*p_21_AXI_01_WREADY);
        p_21_AXI_01_WREADY->set_sv_netview_offsetfromdp(8806264);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_21_AXI_01_BID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_21->AXI_01_BID.bind(*p_21_AXI_01_BID);
        p_21_AXI_01_BID->set_sv_netview_offsetfromdp(8806320);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_AXI_01_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->AXI_01_BRESP.bind(*p_21_AXI_01_BRESP);
        p_21_AXI_01_BRESP->set_sv_netview_offsetfromdp(8806376);
        xsim_sc_channel<0, bool > *p_21_AXI_01_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_01_BVALID.bind(*p_21_AXI_01_BVALID);
        p_21_AXI_01_BVALID->set_sv_netview_offsetfromdp(8806432);
        xsim_sc_channel<0, bool > *p_21_AXI_02_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_02_ARREADY.bind(*p_21_AXI_02_ARREADY);
        p_21_AXI_02_ARREADY->set_sv_netview_offsetfromdp(8806488);
        xsim_sc_channel<0, bool > *p_21_AXI_02_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_02_AWREADY.bind(*p_21_AXI_02_AWREADY);
        p_21_AXI_02_AWREADY->set_sv_netview_offsetfromdp(8806544);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_21_AXI_02_RDATA_PARITY = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_21->AXI_02_RDATA_PARITY.bind(*p_21_AXI_02_RDATA_PARITY);
        p_21_AXI_02_RDATA_PARITY->set_sv_netview_offsetfromdp(8806600);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_21_AXI_02_RDATA = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_21->AXI_02_RDATA.bind(*p_21_AXI_02_RDATA);
        p_21_AXI_02_RDATA->set_sv_netview_offsetfromdp(8806656);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_21_AXI_02_RID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_21->AXI_02_RID.bind(*p_21_AXI_02_RID);
        p_21_AXI_02_RID->set_sv_netview_offsetfromdp(8806712);
        xsim_sc_channel<0, bool > *p_21_AXI_02_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_02_RLAST.bind(*p_21_AXI_02_RLAST);
        p_21_AXI_02_RLAST->set_sv_netview_offsetfromdp(8806768);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_AXI_02_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->AXI_02_RRESP.bind(*p_21_AXI_02_RRESP);
        p_21_AXI_02_RRESP->set_sv_netview_offsetfromdp(8806824);
        xsim_sc_channel<0, bool > *p_21_AXI_02_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_02_RVALID.bind(*p_21_AXI_02_RVALID);
        p_21_AXI_02_RVALID->set_sv_netview_offsetfromdp(8806880);
        xsim_sc_channel<0, bool > *p_21_AXI_02_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_02_WREADY.bind(*p_21_AXI_02_WREADY);
        p_21_AXI_02_WREADY->set_sv_netview_offsetfromdp(8806936);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_21_AXI_02_BID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_21->AXI_02_BID.bind(*p_21_AXI_02_BID);
        p_21_AXI_02_BID->set_sv_netview_offsetfromdp(8806992);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_AXI_02_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->AXI_02_BRESP.bind(*p_21_AXI_02_BRESP);
        p_21_AXI_02_BRESP->set_sv_netview_offsetfromdp(8807048);
        xsim_sc_channel<0, bool > *p_21_AXI_02_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_02_BVALID.bind(*p_21_AXI_02_BVALID);
        p_21_AXI_02_BVALID->set_sv_netview_offsetfromdp(8807104);
        xsim_sc_channel<0, bool > *p_21_AXI_03_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_03_ARREADY.bind(*p_21_AXI_03_ARREADY);
        p_21_AXI_03_ARREADY->set_sv_netview_offsetfromdp(8807160);
        xsim_sc_channel<0, bool > *p_21_AXI_03_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_03_AWREADY.bind(*p_21_AXI_03_AWREADY);
        p_21_AXI_03_AWREADY->set_sv_netview_offsetfromdp(8807216);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_21_AXI_03_RDATA_PARITY = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_21->AXI_03_RDATA_PARITY.bind(*p_21_AXI_03_RDATA_PARITY);
        p_21_AXI_03_RDATA_PARITY->set_sv_netview_offsetfromdp(8807272);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_21_AXI_03_RDATA = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_21->AXI_03_RDATA.bind(*p_21_AXI_03_RDATA);
        p_21_AXI_03_RDATA->set_sv_netview_offsetfromdp(8807328);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_21_AXI_03_RID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_21->AXI_03_RID.bind(*p_21_AXI_03_RID);
        p_21_AXI_03_RID->set_sv_netview_offsetfromdp(8807384);
        xsim_sc_channel<0, bool > *p_21_AXI_03_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_03_RLAST.bind(*p_21_AXI_03_RLAST);
        p_21_AXI_03_RLAST->set_sv_netview_offsetfromdp(8807440);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_AXI_03_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->AXI_03_RRESP.bind(*p_21_AXI_03_RRESP);
        p_21_AXI_03_RRESP->set_sv_netview_offsetfromdp(8807496);
        xsim_sc_channel<0, bool > *p_21_AXI_03_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_03_RVALID.bind(*p_21_AXI_03_RVALID);
        p_21_AXI_03_RVALID->set_sv_netview_offsetfromdp(8807552);
        xsim_sc_channel<0, bool > *p_21_AXI_03_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_03_WREADY.bind(*p_21_AXI_03_WREADY);
        p_21_AXI_03_WREADY->set_sv_netview_offsetfromdp(8807608);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_21_AXI_03_BID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_21->AXI_03_BID.bind(*p_21_AXI_03_BID);
        p_21_AXI_03_BID->set_sv_netview_offsetfromdp(8807664);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_AXI_03_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->AXI_03_BRESP.bind(*p_21_AXI_03_BRESP);
        p_21_AXI_03_BRESP->set_sv_netview_offsetfromdp(8807720);
        xsim_sc_channel<0, bool > *p_21_AXI_03_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_03_BVALID.bind(*p_21_AXI_03_BVALID);
        p_21_AXI_03_BVALID->set_sv_netview_offsetfromdp(8807776);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_21_APB_0_PRDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_21->APB_0_PRDATA.bind(*p_21_APB_0_PRDATA);
        p_21_APB_0_PRDATA->set_sv_netview_offsetfromdp(8807832);
        xsim_sc_channel<0, bool > *p_21_APB_0_PREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->APB_0_PREADY.bind(*p_21_APB_0_PREADY);
        p_21_APB_0_PREADY->set_sv_netview_offsetfromdp(8807888);
        xsim_sc_channel<0, bool > *p_21_APB_0_PSLVERR = new xsim_sc_channel<0, bool >();
        sc_inst_21->APB_0_PSLVERR.bind(*p_21_APB_0_PSLVERR);
        p_21_APB_0_PSLVERR->set_sv_netview_offsetfromdp(8807944);
        xsim_sc_channel<0, bool > *p_21_apb_complete_0 = new xsim_sc_channel<0, bool >();
        sc_inst_21->apb_complete_0.bind(*p_21_apb_complete_0);
        p_21_apb_complete_0->set_sv_netview_offsetfromdp(8808000);
        xsim_sc_channel<0, bool > *p_21_DRAM_0_STAT_CATTRIP = new xsim_sc_channel<0, bool >();
        sc_inst_21->DRAM_0_STAT_CATTRIP.bind(*p_21_DRAM_0_STAT_CATTRIP);
        p_21_DRAM_0_STAT_CATTRIP->set_sv_netview_offsetfromdp(8808056);
        xsim_sc_channel<7, sc_dt::sc_bv<7> > *p_21_DRAM_0_STAT_TEMP = new xsim_sc_channel<7, sc_dt::sc_bv<7> >();
        sc_inst_21->DRAM_0_STAT_TEMP.bind(*p_21_DRAM_0_STAT_TEMP);
        p_21_DRAM_0_STAT_TEMP->set_sv_netview_offsetfromdp(8808112);
        sc_inst_22 = new bd_5dca_interconnect1_0_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.hmss_0.inst.path_0.interconnect1_0");
        sc_inst_22->xsim_set_dbg_index(2262);
        xsim_sc_channel<0, bool > *p_22_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_22->aclk.bind(*p_22_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_22_aclk);
        xsim_sc_channel<0, bool > *p_22_aclk1 = new xsim_sc_channel<0, bool >();
        sc_inst_22->aclk1.bind(*p_22_aclk1);
        (*_glb_hdl_sc_channel_map).push_back(p_22_aclk1);
        xsim_sc_channel<0, bool > *p_22_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_22->aresetn.bind(*p_22_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_22_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_22_S00_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_22->S00_AXI_arid.bind(*p_22_S00_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_22_S00_AXI_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_22_S00_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_22->S00_AXI_araddr.bind(*p_22_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_22_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_22_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_22->S00_AXI_arlen.bind(*p_22_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_22_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_22_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_22->S00_AXI_arsize.bind(*p_22_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_22_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->S00_AXI_arburst.bind(*p_22_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_22_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_22_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_22->S00_AXI_arlock.bind(*p_22_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_22_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->S00_AXI_arcache.bind(*p_22_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_22_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_22_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_22->S00_AXI_arprot.bind(*p_22_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_22_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->S00_AXI_arqos.bind(*p_22_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_22_S00_AXI_arqos);
        xsim_sc_channel<0, bool > *p_22_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_22->S00_AXI_arvalid.bind(*p_22_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_22_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_22_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_22->S00_AXI_arready.bind(*p_22_S00_AXI_arready);
        p_22_S00_AXI_arready->set_sv_netview_offsetfromdp(8983664);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_22_S00_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_22->S00_AXI_rid.bind(*p_22_S00_AXI_rid);
        p_22_S00_AXI_rid->set_sv_netview_offsetfromdp(8983720);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_22_S00_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_22->S00_AXI_rdata.bind(*p_22_S00_AXI_rdata);
        p_22_S00_AXI_rdata->set_sv_netview_offsetfromdp(8983776);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->S00_AXI_rresp.bind(*p_22_S00_AXI_rresp);
        p_22_S00_AXI_rresp->set_sv_netview_offsetfromdp(8983832);
        xsim_sc_channel<0, bool > *p_22_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_22->S00_AXI_rlast.bind(*p_22_S00_AXI_rlast);
        p_22_S00_AXI_rlast->set_sv_netview_offsetfromdp(8983888);
        xsim_sc_channel<0, bool > *p_22_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_22->S00_AXI_rvalid.bind(*p_22_S00_AXI_rvalid);
        p_22_S00_AXI_rvalid->set_sv_netview_offsetfromdp(8983944);
        xsim_sc_channel<0, bool > *p_22_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_22->S00_AXI_rready.bind(*p_22_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_22_S00_AXI_rready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_22_M00_AXI_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_22->M00_AXI_araddr.bind(*p_22_M00_AXI_araddr);
        p_22_M00_AXI_araddr->set_sv_netview_offsetfromdp(8984056);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_M00_AXI_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->M00_AXI_arlen.bind(*p_22_M00_AXI_arlen);
        p_22_M00_AXI_arlen->set_sv_netview_offsetfromdp(8984112);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_22_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_22->M00_AXI_arsize.bind(*p_22_M00_AXI_arsize);
        p_22_M00_AXI_arsize->set_sv_netview_offsetfromdp(8984168);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->M00_AXI_arburst.bind(*p_22_M00_AXI_arburst);
        p_22_M00_AXI_arburst->set_sv_netview_offsetfromdp(8984224);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_M00_AXI_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->M00_AXI_arlock.bind(*p_22_M00_AXI_arlock);
        p_22_M00_AXI_arlock->set_sv_netview_offsetfromdp(8984280);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->M00_AXI_arcache.bind(*p_22_M00_AXI_arcache);
        p_22_M00_AXI_arcache->set_sv_netview_offsetfromdp(8984336);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_22_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_22->M00_AXI_arprot.bind(*p_22_M00_AXI_arprot);
        p_22_M00_AXI_arprot->set_sv_netview_offsetfromdp(8984392);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->M00_AXI_arqos.bind(*p_22_M00_AXI_arqos);
        p_22_M00_AXI_arqos->set_sv_netview_offsetfromdp(8984448);
        xsim_sc_channel<0, bool > *p_22_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_22->M00_AXI_arvalid.bind(*p_22_M00_AXI_arvalid);
        p_22_M00_AXI_arvalid->set_sv_netview_offsetfromdp(8984504);
        xsim_sc_channel<0, bool > *p_22_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_22->M00_AXI_arready.bind(*p_22_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_22_M00_AXI_arready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_22_M00_AXI_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_22->M00_AXI_rdata.bind(*p_22_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_22_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->M00_AXI_rresp.bind(*p_22_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_22_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_22_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_22->M00_AXI_rlast.bind(*p_22_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_22_M00_AXI_rlast);
        xsim_sc_channel<0, bool > *p_22_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_22->M00_AXI_rvalid.bind(*p_22_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_22_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_22_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_22->M00_AXI_rready.bind(*p_22_M00_AXI_rready);
        p_22_M00_AXI_rready->set_sv_netview_offsetfromdp(8984840);
        sc_inst_23 = new bd_5dca_slice1_0_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.hmss_0.inst.path_0.slice1_0");
        sc_inst_23->xsim_set_dbg_index(2263);
        xsim_sc_channel<0, bool > *p_23_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_23->aclk.bind(*p_23_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_23_aclk);
        xsim_sc_channel<0, bool > *p_23_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_23->aresetn.bind(*p_23_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_23_aresetn);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_23_s_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_23->s_axi_awaddr.bind(*p_23_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_23_s_axi_awaddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_s_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->s_axi_awlen.bind(*p_23_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_23_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->s_axi_awsize.bind(*p_23_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_23_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->s_axi_awburst.bind(*p_23_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_23_s_axi_awburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_s_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->s_axi_awlock.bind(*p_23_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_23_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->s_axi_awcache.bind(*p_23_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_23_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->s_axi_awprot.bind(*p_23_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_23_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->s_axi_awqos.bind(*p_23_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_23_s_axi_awqos);
        xsim_sc_channel<0, bool > *p_23_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_axi_awvalid.bind(*p_23_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_23_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_23_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_axi_awready.bind(*p_23_s_axi_awready);
        p_23_s_axi_awready->set_sv_netview_offsetfromdp(8985560);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_23_s_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_23->s_axi_wdata.bind(*p_23_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_23_s_axi_wdata);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_23_s_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_23->s_axi_wstrb.bind(*p_23_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_23_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_23_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_axi_wlast.bind(*p_23_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_23_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_23_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_axi_wvalid.bind(*p_23_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_23_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_23_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_axi_wready.bind(*p_23_s_axi_wready);
        p_23_s_axi_wready->set_sv_netview_offsetfromdp(8985840);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->s_axi_bresp.bind(*p_23_s_axi_bresp);
        p_23_s_axi_bresp->set_sv_netview_offsetfromdp(8985896);
        xsim_sc_channel<0, bool > *p_23_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_axi_bvalid.bind(*p_23_s_axi_bvalid);
        p_23_s_axi_bvalid->set_sv_netview_offsetfromdp(8985952);
        xsim_sc_channel<0, bool > *p_23_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_axi_bready.bind(*p_23_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_23_s_axi_bready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_23_s_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_23->s_axi_araddr.bind(*p_23_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_23_s_axi_araddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_s_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->s_axi_arlen.bind(*p_23_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_23_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->s_axi_arsize.bind(*p_23_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_23_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->s_axi_arburst.bind(*p_23_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_23_s_axi_arburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_s_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->s_axi_arlock.bind(*p_23_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_23_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->s_axi_arcache.bind(*p_23_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_23_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->s_axi_arprot.bind(*p_23_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_23_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->s_axi_arqos.bind(*p_23_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_23_s_axi_arqos);
        xsim_sc_channel<0, bool > *p_23_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_axi_arvalid.bind(*p_23_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_23_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_23_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_axi_arready.bind(*p_23_s_axi_arready);
        p_23_s_axi_arready->set_sv_netview_offsetfromdp(8986568);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_23_s_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_23->s_axi_rdata.bind(*p_23_s_axi_rdata);
        p_23_s_axi_rdata->set_sv_netview_offsetfromdp(8986624);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->s_axi_rresp.bind(*p_23_s_axi_rresp);
        p_23_s_axi_rresp->set_sv_netview_offsetfromdp(8986680);
        xsim_sc_channel<0, bool > *p_23_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_axi_rlast.bind(*p_23_s_axi_rlast);
        p_23_s_axi_rlast->set_sv_netview_offsetfromdp(8986736);
        xsim_sc_channel<0, bool > *p_23_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_axi_rvalid.bind(*p_23_s_axi_rvalid);
        p_23_s_axi_rvalid->set_sv_netview_offsetfromdp(8986792);
        xsim_sc_channel<0, bool > *p_23_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_axi_rready.bind(*p_23_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_23_s_axi_rready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_23_m_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_23->m_axi_awaddr.bind(*p_23_m_axi_awaddr);
        p_23_m_axi_awaddr->set_sv_netview_offsetfromdp(8986904);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_m_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->m_axi_awlen.bind(*p_23_m_axi_awlen);
        p_23_m_axi_awlen->set_sv_netview_offsetfromdp(8986960);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_m_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->m_axi_awsize.bind(*p_23_m_axi_awsize);
        p_23_m_axi_awsize->set_sv_netview_offsetfromdp(8987016);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_m_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->m_axi_awburst.bind(*p_23_m_axi_awburst);
        p_23_m_axi_awburst->set_sv_netview_offsetfromdp(8987072);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_m_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->m_axi_awlock.bind(*p_23_m_axi_awlock);
        p_23_m_axi_awlock->set_sv_netview_offsetfromdp(8987128);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_m_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->m_axi_awcache.bind(*p_23_m_axi_awcache);
        p_23_m_axi_awcache->set_sv_netview_offsetfromdp(8987184);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->m_axi_awprot.bind(*p_23_m_axi_awprot);
        p_23_m_axi_awprot->set_sv_netview_offsetfromdp(8987240);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_m_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->m_axi_awqos.bind(*p_23_m_axi_awqos);
        p_23_m_axi_awqos->set_sv_netview_offsetfromdp(8987296);
        xsim_sc_channel<0, bool > *p_23_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_axi_awvalid.bind(*p_23_m_axi_awvalid);
        p_23_m_axi_awvalid->set_sv_netview_offsetfromdp(8987352);
        xsim_sc_channel<0, bool > *p_23_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_axi_awready.bind(*p_23_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_23_m_axi_awready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_23_m_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_23->m_axi_wdata.bind(*p_23_m_axi_wdata);
        p_23_m_axi_wdata->set_sv_netview_offsetfromdp(8987464);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_23_m_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_23->m_axi_wstrb.bind(*p_23_m_axi_wstrb);
        p_23_m_axi_wstrb->set_sv_netview_offsetfromdp(8987520);
        xsim_sc_channel<0, bool > *p_23_m_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_axi_wlast.bind(*p_23_m_axi_wlast);
        p_23_m_axi_wlast->set_sv_netview_offsetfromdp(8987576);
        xsim_sc_channel<0, bool > *p_23_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_axi_wvalid.bind(*p_23_m_axi_wvalid);
        p_23_m_axi_wvalid->set_sv_netview_offsetfromdp(8987632);
        xsim_sc_channel<0, bool > *p_23_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_axi_wready.bind(*p_23_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_23_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->m_axi_bresp.bind(*p_23_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_23_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_23_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_axi_bvalid.bind(*p_23_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_23_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_23_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_axi_bready.bind(*p_23_m_axi_bready);
        p_23_m_axi_bready->set_sv_netview_offsetfromdp(8987856);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_23_m_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_23->m_axi_araddr.bind(*p_23_m_axi_araddr);
        p_23_m_axi_araddr->set_sv_netview_offsetfromdp(8987912);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_m_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->m_axi_arlen.bind(*p_23_m_axi_arlen);
        p_23_m_axi_arlen->set_sv_netview_offsetfromdp(8987968);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_m_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->m_axi_arsize.bind(*p_23_m_axi_arsize);
        p_23_m_axi_arsize->set_sv_netview_offsetfromdp(8988024);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_m_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->m_axi_arburst.bind(*p_23_m_axi_arburst);
        p_23_m_axi_arburst->set_sv_netview_offsetfromdp(8988080);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_m_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->m_axi_arlock.bind(*p_23_m_axi_arlock);
        p_23_m_axi_arlock->set_sv_netview_offsetfromdp(8988136);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_m_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->m_axi_arcache.bind(*p_23_m_axi_arcache);
        p_23_m_axi_arcache->set_sv_netview_offsetfromdp(8988192);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->m_axi_arprot.bind(*p_23_m_axi_arprot);
        p_23_m_axi_arprot->set_sv_netview_offsetfromdp(8988248);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_m_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->m_axi_arqos.bind(*p_23_m_axi_arqos);
        p_23_m_axi_arqos->set_sv_netview_offsetfromdp(8988304);
        xsim_sc_channel<0, bool > *p_23_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_axi_arvalid.bind(*p_23_m_axi_arvalid);
        p_23_m_axi_arvalid->set_sv_netview_offsetfromdp(8988360);
        xsim_sc_channel<0, bool > *p_23_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_axi_arready.bind(*p_23_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_23_m_axi_arready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_23_m_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_23->m_axi_rdata.bind(*p_23_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_23_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->m_axi_rresp.bind(*p_23_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_23_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_23_m_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_axi_rlast.bind(*p_23_m_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_23_m_axi_rlast);
        xsim_sc_channel<0, bool > *p_23_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_axi_rvalid.bind(*p_23_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_23_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_23_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_axi_rready.bind(*p_23_m_axi_rready);
        p_23_m_axi_rready->set_sv_netview_offsetfromdp(8988696);
        sc_inst_24 = new bd_5dca_interconnect2_1_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.hmss_0.inst.path_1.interconnect2_1");
        sc_inst_24->xsim_set_dbg_index(2316);
        xsim_sc_channel<0, bool > *p_24_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_24->aclk.bind(*p_24_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_24_aclk);
        xsim_sc_channel<0, bool > *p_24_aclk1 = new xsim_sc_channel<0, bool >();
        sc_inst_24->aclk1.bind(*p_24_aclk1);
        (*_glb_hdl_sc_channel_map).push_back(p_24_aclk1);
        xsim_sc_channel<0, bool > *p_24_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_24->aresetn.bind(*p_24_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_24_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_24_S00_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_24->S00_AXI_arid.bind(*p_24_S00_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_24_S00_AXI_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_24_S00_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_24->S00_AXI_araddr.bind(*p_24_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_24_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_24_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_24->S00_AXI_arlen.bind(*p_24_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_24_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_24_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_24->S00_AXI_arsize.bind(*p_24_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_24_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_24_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_24->S00_AXI_arburst.bind(*p_24_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_24_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_24_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_24->S00_AXI_arlock.bind(*p_24_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_24_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_24_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_24->S00_AXI_arcache.bind(*p_24_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_24_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_24_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_24->S00_AXI_arprot.bind(*p_24_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_24_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_24_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_24->S00_AXI_arqos.bind(*p_24_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_24_S00_AXI_arqos);
        xsim_sc_channel<0, bool > *p_24_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_24->S00_AXI_arvalid.bind(*p_24_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_24_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_24_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_24->S00_AXI_arready.bind(*p_24_S00_AXI_arready);
        p_24_S00_AXI_arready->set_sv_netview_offsetfromdp(9032376);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_24_S00_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_24->S00_AXI_rid.bind(*p_24_S00_AXI_rid);
        p_24_S00_AXI_rid->set_sv_netview_offsetfromdp(9032432);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_24_S00_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_24->S00_AXI_rdata.bind(*p_24_S00_AXI_rdata);
        p_24_S00_AXI_rdata->set_sv_netview_offsetfromdp(9032488);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_24_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_24->S00_AXI_rresp.bind(*p_24_S00_AXI_rresp);
        p_24_S00_AXI_rresp->set_sv_netview_offsetfromdp(9032544);
        xsim_sc_channel<0, bool > *p_24_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_24->S00_AXI_rlast.bind(*p_24_S00_AXI_rlast);
        p_24_S00_AXI_rlast->set_sv_netview_offsetfromdp(9032600);
        xsim_sc_channel<0, bool > *p_24_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_24->S00_AXI_rvalid.bind(*p_24_S00_AXI_rvalid);
        p_24_S00_AXI_rvalid->set_sv_netview_offsetfromdp(9032656);
        xsim_sc_channel<0, bool > *p_24_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_24->S00_AXI_rready.bind(*p_24_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_24_S00_AXI_rready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_24_M00_AXI_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_24->M00_AXI_araddr.bind(*p_24_M00_AXI_araddr);
        p_24_M00_AXI_araddr->set_sv_netview_offsetfromdp(9032768);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_24_M00_AXI_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_24->M00_AXI_arlen.bind(*p_24_M00_AXI_arlen);
        p_24_M00_AXI_arlen->set_sv_netview_offsetfromdp(9032824);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_24_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_24->M00_AXI_arsize.bind(*p_24_M00_AXI_arsize);
        p_24_M00_AXI_arsize->set_sv_netview_offsetfromdp(9032880);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_24_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_24->M00_AXI_arburst.bind(*p_24_M00_AXI_arburst);
        p_24_M00_AXI_arburst->set_sv_netview_offsetfromdp(9032936);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_24_M00_AXI_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_24->M00_AXI_arlock.bind(*p_24_M00_AXI_arlock);
        p_24_M00_AXI_arlock->set_sv_netview_offsetfromdp(9032992);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_24_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_24->M00_AXI_arcache.bind(*p_24_M00_AXI_arcache);
        p_24_M00_AXI_arcache->set_sv_netview_offsetfromdp(9033048);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_24_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_24->M00_AXI_arprot.bind(*p_24_M00_AXI_arprot);
        p_24_M00_AXI_arprot->set_sv_netview_offsetfromdp(9033104);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_24_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_24->M00_AXI_arqos.bind(*p_24_M00_AXI_arqos);
        p_24_M00_AXI_arqos->set_sv_netview_offsetfromdp(9033160);
        xsim_sc_channel<0, bool > *p_24_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_24->M00_AXI_arvalid.bind(*p_24_M00_AXI_arvalid);
        p_24_M00_AXI_arvalid->set_sv_netview_offsetfromdp(9033216);
        xsim_sc_channel<0, bool > *p_24_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_24->M00_AXI_arready.bind(*p_24_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_24_M00_AXI_arready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_24_M00_AXI_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_24->M00_AXI_rdata.bind(*p_24_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_24_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_24_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_24->M00_AXI_rresp.bind(*p_24_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_24_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_24_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_24->M00_AXI_rlast.bind(*p_24_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_24_M00_AXI_rlast);
        xsim_sc_channel<0, bool > *p_24_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_24->M00_AXI_rvalid.bind(*p_24_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_24_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_24_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_24->M00_AXI_rready.bind(*p_24_M00_AXI_rready);
        p_24_M00_AXI_rready->set_sv_netview_offsetfromdp(9033552);
        sc_inst_25 = new bd_5dca_slice2_1_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.hmss_0.inst.path_1.slice2_1");
        sc_inst_25->xsim_set_dbg_index(2317);
        xsim_sc_channel<0, bool > *p_25_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_25->aclk.bind(*p_25_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_25_aclk);
        xsim_sc_channel<0, bool > *p_25_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_25->aresetn.bind(*p_25_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_25_aresetn);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_25_s_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_25->s_axi_awaddr.bind(*p_25_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_awaddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_25_s_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_25->s_axi_awlen.bind(*p_25_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_25_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_25->s_axi_awsize.bind(*p_25_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_25_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_25->s_axi_awburst.bind(*p_25_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_awburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_25_s_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_25->s_axi_awlock.bind(*p_25_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_25_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_25->s_axi_awcache.bind(*p_25_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_25_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_25->s_axi_awprot.bind(*p_25_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_25_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_25->s_axi_awqos.bind(*p_25_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_awqos);
        xsim_sc_channel<0, bool > *p_25_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_axi_awvalid.bind(*p_25_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_25_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_axi_awready.bind(*p_25_s_axi_awready);
        p_25_s_axi_awready->set_sv_netview_offsetfromdp(9034272);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_25_s_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_25->s_axi_wdata.bind(*p_25_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_wdata);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_25_s_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_25->s_axi_wstrb.bind(*p_25_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_25_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_axi_wlast.bind(*p_25_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_25_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_axi_wvalid.bind(*p_25_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_25_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_axi_wready.bind(*p_25_s_axi_wready);
        p_25_s_axi_wready->set_sv_netview_offsetfromdp(9034552);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_25_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_25->s_axi_bresp.bind(*p_25_s_axi_bresp);
        p_25_s_axi_bresp->set_sv_netview_offsetfromdp(9034608);
        xsim_sc_channel<0, bool > *p_25_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_axi_bvalid.bind(*p_25_s_axi_bvalid);
        p_25_s_axi_bvalid->set_sv_netview_offsetfromdp(9034664);
        xsim_sc_channel<0, bool > *p_25_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_axi_bready.bind(*p_25_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_bready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_25_s_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_25->s_axi_araddr.bind(*p_25_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_araddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_25_s_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_25->s_axi_arlen.bind(*p_25_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_25_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_25->s_axi_arsize.bind(*p_25_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_25_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_25->s_axi_arburst.bind(*p_25_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_arburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_25_s_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_25->s_axi_arlock.bind(*p_25_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_25_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_25->s_axi_arcache.bind(*p_25_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_25_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_25->s_axi_arprot.bind(*p_25_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_25_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_25->s_axi_arqos.bind(*p_25_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_arqos);
        xsim_sc_channel<0, bool > *p_25_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_axi_arvalid.bind(*p_25_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_25_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_axi_arready.bind(*p_25_s_axi_arready);
        p_25_s_axi_arready->set_sv_netview_offsetfromdp(9035280);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_25_s_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_25->s_axi_rdata.bind(*p_25_s_axi_rdata);
        p_25_s_axi_rdata->set_sv_netview_offsetfromdp(9035336);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_25_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_25->s_axi_rresp.bind(*p_25_s_axi_rresp);
        p_25_s_axi_rresp->set_sv_netview_offsetfromdp(9035392);
        xsim_sc_channel<0, bool > *p_25_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_axi_rlast.bind(*p_25_s_axi_rlast);
        p_25_s_axi_rlast->set_sv_netview_offsetfromdp(9035448);
        xsim_sc_channel<0, bool > *p_25_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_axi_rvalid.bind(*p_25_s_axi_rvalid);
        p_25_s_axi_rvalid->set_sv_netview_offsetfromdp(9035504);
        xsim_sc_channel<0, bool > *p_25_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_axi_rready.bind(*p_25_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_rready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_25_m_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_25->m_axi_awaddr.bind(*p_25_m_axi_awaddr);
        p_25_m_axi_awaddr->set_sv_netview_offsetfromdp(9035616);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_25_m_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_25->m_axi_awlen.bind(*p_25_m_axi_awlen);
        p_25_m_axi_awlen->set_sv_netview_offsetfromdp(9035672);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_25_m_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_25->m_axi_awsize.bind(*p_25_m_axi_awsize);
        p_25_m_axi_awsize->set_sv_netview_offsetfromdp(9035728);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_25_m_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_25->m_axi_awburst.bind(*p_25_m_axi_awburst);
        p_25_m_axi_awburst->set_sv_netview_offsetfromdp(9035784);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_25_m_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_25->m_axi_awlock.bind(*p_25_m_axi_awlock);
        p_25_m_axi_awlock->set_sv_netview_offsetfromdp(9035840);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_25_m_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_25->m_axi_awcache.bind(*p_25_m_axi_awcache);
        p_25_m_axi_awcache->set_sv_netview_offsetfromdp(9035896);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_25_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_25->m_axi_awprot.bind(*p_25_m_axi_awprot);
        p_25_m_axi_awprot->set_sv_netview_offsetfromdp(9035952);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_25_m_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_25->m_axi_awqos.bind(*p_25_m_axi_awqos);
        p_25_m_axi_awqos->set_sv_netview_offsetfromdp(9036008);
        xsim_sc_channel<0, bool > *p_25_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_25->m_axi_awvalid.bind(*p_25_m_axi_awvalid);
        p_25_m_axi_awvalid->set_sv_netview_offsetfromdp(9036064);
        xsim_sc_channel<0, bool > *p_25_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_25->m_axi_awready.bind(*p_25_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_25_m_axi_awready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_25_m_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_25->m_axi_wdata.bind(*p_25_m_axi_wdata);
        p_25_m_axi_wdata->set_sv_netview_offsetfromdp(9036176);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_25_m_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_25->m_axi_wstrb.bind(*p_25_m_axi_wstrb);
        p_25_m_axi_wstrb->set_sv_netview_offsetfromdp(9036232);
        xsim_sc_channel<0, bool > *p_25_m_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_25->m_axi_wlast.bind(*p_25_m_axi_wlast);
        p_25_m_axi_wlast->set_sv_netview_offsetfromdp(9036288);
        xsim_sc_channel<0, bool > *p_25_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_25->m_axi_wvalid.bind(*p_25_m_axi_wvalid);
        p_25_m_axi_wvalid->set_sv_netview_offsetfromdp(9036344);
        xsim_sc_channel<0, bool > *p_25_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_25->m_axi_wready.bind(*p_25_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_25_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_25_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_25->m_axi_bresp.bind(*p_25_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_25_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_25_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_25->m_axi_bvalid.bind(*p_25_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_25_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_25_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_25->m_axi_bready.bind(*p_25_m_axi_bready);
        p_25_m_axi_bready->set_sv_netview_offsetfromdp(9036568);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_25_m_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_25->m_axi_araddr.bind(*p_25_m_axi_araddr);
        p_25_m_axi_araddr->set_sv_netview_offsetfromdp(9036624);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_25_m_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_25->m_axi_arlen.bind(*p_25_m_axi_arlen);
        p_25_m_axi_arlen->set_sv_netview_offsetfromdp(9036680);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_25_m_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_25->m_axi_arsize.bind(*p_25_m_axi_arsize);
        p_25_m_axi_arsize->set_sv_netview_offsetfromdp(9036736);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_25_m_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_25->m_axi_arburst.bind(*p_25_m_axi_arburst);
        p_25_m_axi_arburst->set_sv_netview_offsetfromdp(9036792);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_25_m_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_25->m_axi_arlock.bind(*p_25_m_axi_arlock);
        p_25_m_axi_arlock->set_sv_netview_offsetfromdp(9036848);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_25_m_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_25->m_axi_arcache.bind(*p_25_m_axi_arcache);
        p_25_m_axi_arcache->set_sv_netview_offsetfromdp(9036904);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_25_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_25->m_axi_arprot.bind(*p_25_m_axi_arprot);
        p_25_m_axi_arprot->set_sv_netview_offsetfromdp(9036960);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_25_m_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_25->m_axi_arqos.bind(*p_25_m_axi_arqos);
        p_25_m_axi_arqos->set_sv_netview_offsetfromdp(9037016);
        xsim_sc_channel<0, bool > *p_25_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_25->m_axi_arvalid.bind(*p_25_m_axi_arvalid);
        p_25_m_axi_arvalid->set_sv_netview_offsetfromdp(9037072);
        xsim_sc_channel<0, bool > *p_25_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_25->m_axi_arready.bind(*p_25_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_25_m_axi_arready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_25_m_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_25->m_axi_rdata.bind(*p_25_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_25_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_25_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_25->m_axi_rresp.bind(*p_25_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_25_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_25_m_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_25->m_axi_rlast.bind(*p_25_m_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_25_m_axi_rlast);
        xsim_sc_channel<0, bool > *p_25_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_25->m_axi_rvalid.bind(*p_25_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_25_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_25_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_25->m_axi_rready.bind(*p_25_m_axi_rready);
        p_25_m_axi_rready->set_sv_netview_offsetfromdp(9037408);
        sc_inst_26 = new bd_5dca_interconnect3_2_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.hmss_0.inst.path_2.interconnect3_2");
        sc_inst_26->xsim_set_dbg_index(2370);
        xsim_sc_channel<0, bool > *p_26_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_26->aclk.bind(*p_26_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_26_aclk);
        xsim_sc_channel<0, bool > *p_26_aclk1 = new xsim_sc_channel<0, bool >();
        sc_inst_26->aclk1.bind(*p_26_aclk1);
        (*_glb_hdl_sc_channel_map).push_back(p_26_aclk1);
        xsim_sc_channel<0, bool > *p_26_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_26->aresetn.bind(*p_26_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_26_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_26_S00_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_26->S00_AXI_awid.bind(*p_26_S00_AXI_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S00_AXI_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_26_S00_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_26->S00_AXI_awaddr.bind(*p_26_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_26_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_26->S00_AXI_awlen.bind(*p_26_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_26_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_26->S00_AXI_awsize.bind(*p_26_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_26_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_26->S00_AXI_awburst.bind(*p_26_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S00_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_26_S00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_26->S00_AXI_awlock.bind(*p_26_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->S00_AXI_awcache.bind(*p_26_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_26_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_26->S00_AXI_awprot.bind(*p_26_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->S00_AXI_awqos.bind(*p_26_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S00_AXI_awqos);
        xsim_sc_channel<0, bool > *p_26_S00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->S00_AXI_awvalid.bind(*p_26_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S00_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_26_S00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_26->S00_AXI_awready.bind(*p_26_S00_AXI_awready);
        p_26_S00_AXI_awready->set_sv_netview_offsetfromdp(9083944);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_26_S00_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_26->S00_AXI_wdata.bind(*p_26_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S00_AXI_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_S00_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->S00_AXI_wstrb.bind(*p_26_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S00_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_26_S00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_26->S00_AXI_wlast.bind(*p_26_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S00_AXI_wlast);
        xsim_sc_channel<0, bool > *p_26_S00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->S00_AXI_wvalid.bind(*p_26_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S00_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_26_S00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_26->S00_AXI_wready.bind(*p_26_S00_AXI_wready);
        p_26_S00_AXI_wready->set_sv_netview_offsetfromdp(9084224);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_26_S00_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_26->S00_AXI_bid.bind(*p_26_S00_AXI_bid);
        p_26_S00_AXI_bid->set_sv_netview_offsetfromdp(9084280);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_26_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_26->S00_AXI_bresp.bind(*p_26_S00_AXI_bresp);
        p_26_S00_AXI_bresp->set_sv_netview_offsetfromdp(9084336);
        xsim_sc_channel<0, bool > *p_26_S00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->S00_AXI_bvalid.bind(*p_26_S00_AXI_bvalid);
        p_26_S00_AXI_bvalid->set_sv_netview_offsetfromdp(9084392);
        xsim_sc_channel<0, bool > *p_26_S00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_26->S00_AXI_bready.bind(*p_26_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S00_AXI_bready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_26_M00_AXI_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_26->M00_AXI_awaddr.bind(*p_26_M00_AXI_awaddr);
        p_26_M00_AXI_awaddr->set_sv_netview_offsetfromdp(9084504);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_M00_AXI_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->M00_AXI_awlen.bind(*p_26_M00_AXI_awlen);
        p_26_M00_AXI_awlen->set_sv_netview_offsetfromdp(9084560);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_26_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_26->M00_AXI_awsize.bind(*p_26_M00_AXI_awsize);
        p_26_M00_AXI_awsize->set_sv_netview_offsetfromdp(9084616);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_26_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_26->M00_AXI_awburst.bind(*p_26_M00_AXI_awburst);
        p_26_M00_AXI_awburst->set_sv_netview_offsetfromdp(9084672);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_26_M00_AXI_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_26->M00_AXI_awlock.bind(*p_26_M00_AXI_awlock);
        p_26_M00_AXI_awlock->set_sv_netview_offsetfromdp(9084728);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->M00_AXI_awcache.bind(*p_26_M00_AXI_awcache);
        p_26_M00_AXI_awcache->set_sv_netview_offsetfromdp(9084784);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_26_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_26->M00_AXI_awprot.bind(*p_26_M00_AXI_awprot);
        p_26_M00_AXI_awprot->set_sv_netview_offsetfromdp(9084840);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->M00_AXI_awqos.bind(*p_26_M00_AXI_awqos);
        p_26_M00_AXI_awqos->set_sv_netview_offsetfromdp(9084896);
        xsim_sc_channel<0, bool > *p_26_M00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->M00_AXI_awvalid.bind(*p_26_M00_AXI_awvalid);
        p_26_M00_AXI_awvalid->set_sv_netview_offsetfromdp(9084952);
        xsim_sc_channel<0, bool > *p_26_M00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_26->M00_AXI_awready.bind(*p_26_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_26_M00_AXI_awready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_26_M00_AXI_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_26->M00_AXI_wdata.bind(*p_26_M00_AXI_wdata);
        p_26_M00_AXI_wdata->set_sv_netview_offsetfromdp(9085064);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_26_M00_AXI_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_26->M00_AXI_wstrb.bind(*p_26_M00_AXI_wstrb);
        p_26_M00_AXI_wstrb->set_sv_netview_offsetfromdp(9085120);
        xsim_sc_channel<0, bool > *p_26_M00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_26->M00_AXI_wlast.bind(*p_26_M00_AXI_wlast);
        p_26_M00_AXI_wlast->set_sv_netview_offsetfromdp(9085176);
        xsim_sc_channel<0, bool > *p_26_M00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->M00_AXI_wvalid.bind(*p_26_M00_AXI_wvalid);
        p_26_M00_AXI_wvalid->set_sv_netview_offsetfromdp(9085232);
        xsim_sc_channel<0, bool > *p_26_M00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_26->M00_AXI_wready.bind(*p_26_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_26_M00_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_26_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_26->M00_AXI_bresp.bind(*p_26_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_26_M00_AXI_bresp);
        xsim_sc_channel<0, bool > *p_26_M00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->M00_AXI_bvalid.bind(*p_26_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_26_M00_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_26_M00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_26->M00_AXI_bready.bind(*p_26_M00_AXI_bready);
        p_26_M00_AXI_bready->set_sv_netview_offsetfromdp(9085456);
        sc_inst_27 = new bd_5dca_slice3_2_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.hmss_0.inst.path_2.slice3_2");
        sc_inst_27->xsim_set_dbg_index(2371);
        xsim_sc_channel<0, bool > *p_27_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_27->aclk.bind(*p_27_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_27_aclk);
        xsim_sc_channel<0, bool > *p_27_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_27->aresetn.bind(*p_27_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_27_aresetn);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_27_s_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_27->s_axi_awaddr.bind(*p_27_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_awaddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_27_s_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_27->s_axi_awlen.bind(*p_27_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_27_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_27->s_axi_awsize.bind(*p_27_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_27_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_27->s_axi_awburst.bind(*p_27_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_awburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_27_s_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_27->s_axi_awlock.bind(*p_27_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_27_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_27->s_axi_awcache.bind(*p_27_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_27_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_27->s_axi_awprot.bind(*p_27_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_27_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_27->s_axi_awqos.bind(*p_27_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_awqos);
        xsim_sc_channel<0, bool > *p_27_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_27->s_axi_awvalid.bind(*p_27_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_27_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_27->s_axi_awready.bind(*p_27_s_axi_awready);
        p_27_s_axi_awready->set_sv_netview_offsetfromdp(9086176);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_27_s_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_27->s_axi_wdata.bind(*p_27_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_wdata);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_27_s_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_27->s_axi_wstrb.bind(*p_27_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_27_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_27->s_axi_wlast.bind(*p_27_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_27_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_27->s_axi_wvalid.bind(*p_27_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_27_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_27->s_axi_wready.bind(*p_27_s_axi_wready);
        p_27_s_axi_wready->set_sv_netview_offsetfromdp(9086456);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_27_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_27->s_axi_bresp.bind(*p_27_s_axi_bresp);
        p_27_s_axi_bresp->set_sv_netview_offsetfromdp(9086512);
        xsim_sc_channel<0, bool > *p_27_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_27->s_axi_bvalid.bind(*p_27_s_axi_bvalid);
        p_27_s_axi_bvalid->set_sv_netview_offsetfromdp(9086568);
        xsim_sc_channel<0, bool > *p_27_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_27->s_axi_bready.bind(*p_27_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_bready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_27_s_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_27->s_axi_araddr.bind(*p_27_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_araddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_27_s_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_27->s_axi_arlen.bind(*p_27_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_27_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_27->s_axi_arsize.bind(*p_27_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_27_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_27->s_axi_arburst.bind(*p_27_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_arburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_27_s_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_27->s_axi_arlock.bind(*p_27_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_27_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_27->s_axi_arcache.bind(*p_27_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_27_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_27->s_axi_arprot.bind(*p_27_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_27_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_27->s_axi_arqos.bind(*p_27_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_arqos);
        xsim_sc_channel<0, bool > *p_27_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_27->s_axi_arvalid.bind(*p_27_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_27_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_27->s_axi_arready.bind(*p_27_s_axi_arready);
        p_27_s_axi_arready->set_sv_netview_offsetfromdp(9087184);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_27_s_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_27->s_axi_rdata.bind(*p_27_s_axi_rdata);
        p_27_s_axi_rdata->set_sv_netview_offsetfromdp(9087240);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_27_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_27->s_axi_rresp.bind(*p_27_s_axi_rresp);
        p_27_s_axi_rresp->set_sv_netview_offsetfromdp(9087296);
        xsim_sc_channel<0, bool > *p_27_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_27->s_axi_rlast.bind(*p_27_s_axi_rlast);
        p_27_s_axi_rlast->set_sv_netview_offsetfromdp(9087352);
        xsim_sc_channel<0, bool > *p_27_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_27->s_axi_rvalid.bind(*p_27_s_axi_rvalid);
        p_27_s_axi_rvalid->set_sv_netview_offsetfromdp(9087408);
        xsim_sc_channel<0, bool > *p_27_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_27->s_axi_rready.bind(*p_27_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_rready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_27_m_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_27->m_axi_awaddr.bind(*p_27_m_axi_awaddr);
        p_27_m_axi_awaddr->set_sv_netview_offsetfromdp(9087520);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_27_m_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_27->m_axi_awlen.bind(*p_27_m_axi_awlen);
        p_27_m_axi_awlen->set_sv_netview_offsetfromdp(9087576);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_27_m_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_27->m_axi_awsize.bind(*p_27_m_axi_awsize);
        p_27_m_axi_awsize->set_sv_netview_offsetfromdp(9087632);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_27_m_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_27->m_axi_awburst.bind(*p_27_m_axi_awburst);
        p_27_m_axi_awburst->set_sv_netview_offsetfromdp(9087688);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_27_m_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_27->m_axi_awlock.bind(*p_27_m_axi_awlock);
        p_27_m_axi_awlock->set_sv_netview_offsetfromdp(9087744);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_27_m_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_27->m_axi_awcache.bind(*p_27_m_axi_awcache);
        p_27_m_axi_awcache->set_sv_netview_offsetfromdp(9087800);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_27_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_27->m_axi_awprot.bind(*p_27_m_axi_awprot);
        p_27_m_axi_awprot->set_sv_netview_offsetfromdp(9087856);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_27_m_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_27->m_axi_awqos.bind(*p_27_m_axi_awqos);
        p_27_m_axi_awqos->set_sv_netview_offsetfromdp(9087912);
        xsim_sc_channel<0, bool > *p_27_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_27->m_axi_awvalid.bind(*p_27_m_axi_awvalid);
        p_27_m_axi_awvalid->set_sv_netview_offsetfromdp(9087968);
        xsim_sc_channel<0, bool > *p_27_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_27->m_axi_awready.bind(*p_27_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_27_m_axi_awready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_27_m_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_27->m_axi_wdata.bind(*p_27_m_axi_wdata);
        p_27_m_axi_wdata->set_sv_netview_offsetfromdp(9088080);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_27_m_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_27->m_axi_wstrb.bind(*p_27_m_axi_wstrb);
        p_27_m_axi_wstrb->set_sv_netview_offsetfromdp(9088136);
        xsim_sc_channel<0, bool > *p_27_m_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_27->m_axi_wlast.bind(*p_27_m_axi_wlast);
        p_27_m_axi_wlast->set_sv_netview_offsetfromdp(9088192);
        xsim_sc_channel<0, bool > *p_27_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_27->m_axi_wvalid.bind(*p_27_m_axi_wvalid);
        p_27_m_axi_wvalid->set_sv_netview_offsetfromdp(9088248);
        xsim_sc_channel<0, bool > *p_27_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_27->m_axi_wready.bind(*p_27_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_27_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_27_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_27->m_axi_bresp.bind(*p_27_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_27_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_27_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_27->m_axi_bvalid.bind(*p_27_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_27_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_27_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_27->m_axi_bready.bind(*p_27_m_axi_bready);
        p_27_m_axi_bready->set_sv_netview_offsetfromdp(9088472);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_27_m_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_27->m_axi_araddr.bind(*p_27_m_axi_araddr);
        p_27_m_axi_araddr->set_sv_netview_offsetfromdp(9088528);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_27_m_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_27->m_axi_arlen.bind(*p_27_m_axi_arlen);
        p_27_m_axi_arlen->set_sv_netview_offsetfromdp(9088584);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_27_m_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_27->m_axi_arsize.bind(*p_27_m_axi_arsize);
        p_27_m_axi_arsize->set_sv_netview_offsetfromdp(9088640);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_27_m_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_27->m_axi_arburst.bind(*p_27_m_axi_arburst);
        p_27_m_axi_arburst->set_sv_netview_offsetfromdp(9088696);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_27_m_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_27->m_axi_arlock.bind(*p_27_m_axi_arlock);
        p_27_m_axi_arlock->set_sv_netview_offsetfromdp(9088752);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_27_m_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_27->m_axi_arcache.bind(*p_27_m_axi_arcache);
        p_27_m_axi_arcache->set_sv_netview_offsetfromdp(9088808);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_27_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_27->m_axi_arprot.bind(*p_27_m_axi_arprot);
        p_27_m_axi_arprot->set_sv_netview_offsetfromdp(9088864);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_27_m_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_27->m_axi_arqos.bind(*p_27_m_axi_arqos);
        p_27_m_axi_arqos->set_sv_netview_offsetfromdp(9088920);
        xsim_sc_channel<0, bool > *p_27_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_27->m_axi_arvalid.bind(*p_27_m_axi_arvalid);
        p_27_m_axi_arvalid->set_sv_netview_offsetfromdp(9088976);
        xsim_sc_channel<0, bool > *p_27_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_27->m_axi_arready.bind(*p_27_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_27_m_axi_arready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_27_m_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_27->m_axi_rdata.bind(*p_27_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_27_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_27_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_27->m_axi_rresp.bind(*p_27_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_27_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_27_m_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_27->m_axi_rlast.bind(*p_27_m_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_27_m_axi_rlast);
        xsim_sc_channel<0, bool > *p_27_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_27->m_axi_rvalid.bind(*p_27_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_27_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_27_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_27->m_axi_rready.bind(*p_27_m_axi_rready);
        p_27_m_axi_rready->set_sv_netview_offsetfromdp(9089312);
        sc_inst_28 = new bd_5dca_interconnect0_3_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.hmss_0.inst.path_3.interconnect0_3");
        sc_inst_28->xsim_set_dbg_index(2427);
        xsim_sc_channel<0, bool > *p_28_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_28->aclk.bind(*p_28_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_28_aclk);
        xsim_sc_channel<0, bool > *p_28_aclk1 = new xsim_sc_channel<0, bool >();
        sc_inst_28->aclk1.bind(*p_28_aclk1);
        (*_glb_hdl_sc_channel_map).push_back(p_28_aclk1);
        xsim_sc_channel<0, bool > *p_28_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_28->aresetn.bind(*p_28_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_28_aresetn);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_28_S00_AXI_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_28->S00_AXI_awaddr.bind(*p_28_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_28_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_28_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_28->S00_AXI_awlen.bind(*p_28_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_28_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_28_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_28->S00_AXI_awsize.bind(*p_28_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_28_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_28_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_28->S00_AXI_awburst.bind(*p_28_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_28_S00_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_28_S00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_28->S00_AXI_awlock.bind(*p_28_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_28_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_28_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_28->S00_AXI_awcache.bind(*p_28_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_28_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_28_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_28->S00_AXI_awprot.bind(*p_28_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_28_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_28_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_28->S00_AXI_awqos.bind(*p_28_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_28_S00_AXI_awqos);
        xsim_sc_channel<0, bool > *p_28_S00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_28->S00_AXI_awvalid.bind(*p_28_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_28_S00_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_28_S00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_28->S00_AXI_awready.bind(*p_28_S00_AXI_awready);
        p_28_S00_AXI_awready->set_sv_netview_offsetfromdp(9151480);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_28_S00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_28->S00_AXI_wdata.bind(*p_28_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_28_S00_AXI_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_28_S00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_28->S00_AXI_wstrb.bind(*p_28_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_28_S00_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_28_S00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_28->S00_AXI_wlast.bind(*p_28_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_28_S00_AXI_wlast);
        xsim_sc_channel<0, bool > *p_28_S00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_28->S00_AXI_wvalid.bind(*p_28_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_28_S00_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_28_S00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_28->S00_AXI_wready.bind(*p_28_S00_AXI_wready);
        p_28_S00_AXI_wready->set_sv_netview_offsetfromdp(9151760);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_28_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_28->S00_AXI_bresp.bind(*p_28_S00_AXI_bresp);
        p_28_S00_AXI_bresp->set_sv_netview_offsetfromdp(9151816);
        xsim_sc_channel<0, bool > *p_28_S00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_28->S00_AXI_bvalid.bind(*p_28_S00_AXI_bvalid);
        p_28_S00_AXI_bvalid->set_sv_netview_offsetfromdp(9151872);
        xsim_sc_channel<0, bool > *p_28_S00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_28->S00_AXI_bready.bind(*p_28_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_28_S00_AXI_bready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_28_S00_AXI_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_28->S00_AXI_araddr.bind(*p_28_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_28_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_28_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_28->S00_AXI_arlen.bind(*p_28_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_28_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_28_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_28->S00_AXI_arsize.bind(*p_28_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_28_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_28_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_28->S00_AXI_arburst.bind(*p_28_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_28_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_28_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_28->S00_AXI_arlock.bind(*p_28_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_28_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_28_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_28->S00_AXI_arcache.bind(*p_28_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_28_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_28_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_28->S00_AXI_arprot.bind(*p_28_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_28_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_28_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_28->S00_AXI_arqos.bind(*p_28_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_28_S00_AXI_arqos);
        xsim_sc_channel<0, bool > *p_28_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_28->S00_AXI_arvalid.bind(*p_28_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_28_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_28_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_28->S00_AXI_arready.bind(*p_28_S00_AXI_arready);
        p_28_S00_AXI_arready->set_sv_netview_offsetfromdp(9152488);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_28_S00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_28->S00_AXI_rdata.bind(*p_28_S00_AXI_rdata);
        p_28_S00_AXI_rdata->set_sv_netview_offsetfromdp(9152544);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_28_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_28->S00_AXI_rresp.bind(*p_28_S00_AXI_rresp);
        p_28_S00_AXI_rresp->set_sv_netview_offsetfromdp(9152600);
        xsim_sc_channel<0, bool > *p_28_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_28->S00_AXI_rlast.bind(*p_28_S00_AXI_rlast);
        p_28_S00_AXI_rlast->set_sv_netview_offsetfromdp(9152656);
        xsim_sc_channel<0, bool > *p_28_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_28->S00_AXI_rvalid.bind(*p_28_S00_AXI_rvalid);
        p_28_S00_AXI_rvalid->set_sv_netview_offsetfromdp(9152712);
        xsim_sc_channel<0, bool > *p_28_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_28->S00_AXI_rready.bind(*p_28_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_28_S00_AXI_rready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_28_M00_AXI_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_28->M00_AXI_awaddr.bind(*p_28_M00_AXI_awaddr);
        p_28_M00_AXI_awaddr->set_sv_netview_offsetfromdp(9152824);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_28_M00_AXI_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_28->M00_AXI_awlen.bind(*p_28_M00_AXI_awlen);
        p_28_M00_AXI_awlen->set_sv_netview_offsetfromdp(9152880);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_28_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_28->M00_AXI_awsize.bind(*p_28_M00_AXI_awsize);
        p_28_M00_AXI_awsize->set_sv_netview_offsetfromdp(9152936);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_28_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_28->M00_AXI_awburst.bind(*p_28_M00_AXI_awburst);
        p_28_M00_AXI_awburst->set_sv_netview_offsetfromdp(9152992);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_28_M00_AXI_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_28->M00_AXI_awlock.bind(*p_28_M00_AXI_awlock);
        p_28_M00_AXI_awlock->set_sv_netview_offsetfromdp(9153048);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_28_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_28->M00_AXI_awcache.bind(*p_28_M00_AXI_awcache);
        p_28_M00_AXI_awcache->set_sv_netview_offsetfromdp(9153104);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_28_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_28->M00_AXI_awprot.bind(*p_28_M00_AXI_awprot);
        p_28_M00_AXI_awprot->set_sv_netview_offsetfromdp(9153160);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_28_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_28->M00_AXI_awqos.bind(*p_28_M00_AXI_awqos);
        p_28_M00_AXI_awqos->set_sv_netview_offsetfromdp(9153216);
        xsim_sc_channel<0, bool > *p_28_M00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_28->M00_AXI_awvalid.bind(*p_28_M00_AXI_awvalid);
        p_28_M00_AXI_awvalid->set_sv_netview_offsetfromdp(9153272);
        xsim_sc_channel<0, bool > *p_28_M00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_28->M00_AXI_awready.bind(*p_28_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_28_M00_AXI_awready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_28_M00_AXI_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_28->M00_AXI_wdata.bind(*p_28_M00_AXI_wdata);
        p_28_M00_AXI_wdata->set_sv_netview_offsetfromdp(9153384);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_28_M00_AXI_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_28->M00_AXI_wstrb.bind(*p_28_M00_AXI_wstrb);
        p_28_M00_AXI_wstrb->set_sv_netview_offsetfromdp(9153440);
        xsim_sc_channel<0, bool > *p_28_M00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_28->M00_AXI_wlast.bind(*p_28_M00_AXI_wlast);
        p_28_M00_AXI_wlast->set_sv_netview_offsetfromdp(9153496);
        xsim_sc_channel<0, bool > *p_28_M00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_28->M00_AXI_wvalid.bind(*p_28_M00_AXI_wvalid);
        p_28_M00_AXI_wvalid->set_sv_netview_offsetfromdp(9153552);
        xsim_sc_channel<0, bool > *p_28_M00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_28->M00_AXI_wready.bind(*p_28_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_28_M00_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_28_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_28->M00_AXI_bresp.bind(*p_28_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_28_M00_AXI_bresp);
        xsim_sc_channel<0, bool > *p_28_M00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_28->M00_AXI_bvalid.bind(*p_28_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_28_M00_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_28_M00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_28->M00_AXI_bready.bind(*p_28_M00_AXI_bready);
        p_28_M00_AXI_bready->set_sv_netview_offsetfromdp(9153776);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_28_M00_AXI_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_28->M00_AXI_araddr.bind(*p_28_M00_AXI_araddr);
        p_28_M00_AXI_araddr->set_sv_netview_offsetfromdp(9153832);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_28_M00_AXI_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_28->M00_AXI_arlen.bind(*p_28_M00_AXI_arlen);
        p_28_M00_AXI_arlen->set_sv_netview_offsetfromdp(9153888);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_28_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_28->M00_AXI_arsize.bind(*p_28_M00_AXI_arsize);
        p_28_M00_AXI_arsize->set_sv_netview_offsetfromdp(9153944);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_28_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_28->M00_AXI_arburst.bind(*p_28_M00_AXI_arburst);
        p_28_M00_AXI_arburst->set_sv_netview_offsetfromdp(9154000);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_28_M00_AXI_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_28->M00_AXI_arlock.bind(*p_28_M00_AXI_arlock);
        p_28_M00_AXI_arlock->set_sv_netview_offsetfromdp(9154056);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_28_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_28->M00_AXI_arcache.bind(*p_28_M00_AXI_arcache);
        p_28_M00_AXI_arcache->set_sv_netview_offsetfromdp(9154112);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_28_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_28->M00_AXI_arprot.bind(*p_28_M00_AXI_arprot);
        p_28_M00_AXI_arprot->set_sv_netview_offsetfromdp(9154168);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_28_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_28->M00_AXI_arqos.bind(*p_28_M00_AXI_arqos);
        p_28_M00_AXI_arqos->set_sv_netview_offsetfromdp(9154224);
        xsim_sc_channel<0, bool > *p_28_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_28->M00_AXI_arvalid.bind(*p_28_M00_AXI_arvalid);
        p_28_M00_AXI_arvalid->set_sv_netview_offsetfromdp(9154280);
        xsim_sc_channel<0, bool > *p_28_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_28->M00_AXI_arready.bind(*p_28_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_28_M00_AXI_arready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_28_M00_AXI_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_28->M00_AXI_rdata.bind(*p_28_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_28_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_28_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_28->M00_AXI_rresp.bind(*p_28_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_28_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_28_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_28->M00_AXI_rlast.bind(*p_28_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_28_M00_AXI_rlast);
        xsim_sc_channel<0, bool > *p_28_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_28->M00_AXI_rvalid.bind(*p_28_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_28_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_28_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_28->M00_AXI_rready.bind(*p_28_M00_AXI_rready);
        p_28_M00_AXI_rready->set_sv_netview_offsetfromdp(9154616);
        sc_inst_29 = new bd_5dca_slice0_3_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.hmss_0.inst.path_3.slice0_3");
        sc_inst_29->xsim_set_dbg_index(2428);
        xsim_sc_channel<0, bool > *p_29_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_29->aclk.bind(*p_29_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_29_aclk);
        xsim_sc_channel<0, bool > *p_29_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_29->aresetn.bind(*p_29_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_29_aresetn);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_29_s_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_29->s_axi_awaddr.bind(*p_29_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_awaddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_29_s_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_29->s_axi_awlen.bind(*p_29_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_29_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_29->s_axi_awsize.bind(*p_29_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_29_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_29->s_axi_awburst.bind(*p_29_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_awburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_29_s_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_29->s_axi_awlock.bind(*p_29_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_29_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_29->s_axi_awcache.bind(*p_29_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_29_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_29->s_axi_awprot.bind(*p_29_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_29_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_29->s_axi_awqos.bind(*p_29_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_awqos);
        xsim_sc_channel<0, bool > *p_29_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_29->s_axi_awvalid.bind(*p_29_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_29_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_29->s_axi_awready.bind(*p_29_s_axi_awready);
        p_29_s_axi_awready->set_sv_netview_offsetfromdp(9155336);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_29_s_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_29->s_axi_wdata.bind(*p_29_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_wdata);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_29_s_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_29->s_axi_wstrb.bind(*p_29_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_29_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_29->s_axi_wlast.bind(*p_29_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_29_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_29->s_axi_wvalid.bind(*p_29_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_29_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_29->s_axi_wready.bind(*p_29_s_axi_wready);
        p_29_s_axi_wready->set_sv_netview_offsetfromdp(9155616);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_29_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_29->s_axi_bresp.bind(*p_29_s_axi_bresp);
        p_29_s_axi_bresp->set_sv_netview_offsetfromdp(9155672);
        xsim_sc_channel<0, bool > *p_29_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_29->s_axi_bvalid.bind(*p_29_s_axi_bvalid);
        p_29_s_axi_bvalid->set_sv_netview_offsetfromdp(9155728);
        xsim_sc_channel<0, bool > *p_29_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_29->s_axi_bready.bind(*p_29_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_bready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_29_s_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_29->s_axi_araddr.bind(*p_29_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_araddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_29_s_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_29->s_axi_arlen.bind(*p_29_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_29_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_29->s_axi_arsize.bind(*p_29_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_29_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_29->s_axi_arburst.bind(*p_29_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_arburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_29_s_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_29->s_axi_arlock.bind(*p_29_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_29_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_29->s_axi_arcache.bind(*p_29_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_29_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_29->s_axi_arprot.bind(*p_29_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_29_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_29->s_axi_arqos.bind(*p_29_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_arqos);
        xsim_sc_channel<0, bool > *p_29_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_29->s_axi_arvalid.bind(*p_29_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_29_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_29->s_axi_arready.bind(*p_29_s_axi_arready);
        p_29_s_axi_arready->set_sv_netview_offsetfromdp(9156344);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_29_s_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_29->s_axi_rdata.bind(*p_29_s_axi_rdata);
        p_29_s_axi_rdata->set_sv_netview_offsetfromdp(9156400);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_29_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_29->s_axi_rresp.bind(*p_29_s_axi_rresp);
        p_29_s_axi_rresp->set_sv_netview_offsetfromdp(9156456);
        xsim_sc_channel<0, bool > *p_29_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_29->s_axi_rlast.bind(*p_29_s_axi_rlast);
        p_29_s_axi_rlast->set_sv_netview_offsetfromdp(9156512);
        xsim_sc_channel<0, bool > *p_29_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_29->s_axi_rvalid.bind(*p_29_s_axi_rvalid);
        p_29_s_axi_rvalid->set_sv_netview_offsetfromdp(9156568);
        xsim_sc_channel<0, bool > *p_29_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_29->s_axi_rready.bind(*p_29_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_rready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_29_m_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_29->m_axi_awaddr.bind(*p_29_m_axi_awaddr);
        p_29_m_axi_awaddr->set_sv_netview_offsetfromdp(9156680);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_29_m_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_29->m_axi_awlen.bind(*p_29_m_axi_awlen);
        p_29_m_axi_awlen->set_sv_netview_offsetfromdp(9156736);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_29_m_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_29->m_axi_awsize.bind(*p_29_m_axi_awsize);
        p_29_m_axi_awsize->set_sv_netview_offsetfromdp(9156792);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_29_m_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_29->m_axi_awburst.bind(*p_29_m_axi_awburst);
        p_29_m_axi_awburst->set_sv_netview_offsetfromdp(9156848);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_29_m_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_29->m_axi_awlock.bind(*p_29_m_axi_awlock);
        p_29_m_axi_awlock->set_sv_netview_offsetfromdp(9156904);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_29_m_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_29->m_axi_awcache.bind(*p_29_m_axi_awcache);
        p_29_m_axi_awcache->set_sv_netview_offsetfromdp(9156960);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_29_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_29->m_axi_awprot.bind(*p_29_m_axi_awprot);
        p_29_m_axi_awprot->set_sv_netview_offsetfromdp(9157016);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_29_m_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_29->m_axi_awqos.bind(*p_29_m_axi_awqos);
        p_29_m_axi_awqos->set_sv_netview_offsetfromdp(9157072);
        xsim_sc_channel<0, bool > *p_29_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_29->m_axi_awvalid.bind(*p_29_m_axi_awvalid);
        p_29_m_axi_awvalid->set_sv_netview_offsetfromdp(9157128);
        xsim_sc_channel<0, bool > *p_29_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_29->m_axi_awready.bind(*p_29_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_29_m_axi_awready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_29_m_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_29->m_axi_wdata.bind(*p_29_m_axi_wdata);
        p_29_m_axi_wdata->set_sv_netview_offsetfromdp(9157240);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_29_m_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_29->m_axi_wstrb.bind(*p_29_m_axi_wstrb);
        p_29_m_axi_wstrb->set_sv_netview_offsetfromdp(9157296);
        xsim_sc_channel<0, bool > *p_29_m_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_29->m_axi_wlast.bind(*p_29_m_axi_wlast);
        p_29_m_axi_wlast->set_sv_netview_offsetfromdp(9157352);
        xsim_sc_channel<0, bool > *p_29_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_29->m_axi_wvalid.bind(*p_29_m_axi_wvalid);
        p_29_m_axi_wvalid->set_sv_netview_offsetfromdp(9157408);
        xsim_sc_channel<0, bool > *p_29_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_29->m_axi_wready.bind(*p_29_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_29_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_29_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_29->m_axi_bresp.bind(*p_29_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_29_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_29_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_29->m_axi_bvalid.bind(*p_29_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_29_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_29_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_29->m_axi_bready.bind(*p_29_m_axi_bready);
        p_29_m_axi_bready->set_sv_netview_offsetfromdp(9157632);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_29_m_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_29->m_axi_araddr.bind(*p_29_m_axi_araddr);
        p_29_m_axi_araddr->set_sv_netview_offsetfromdp(9157688);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_29_m_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_29->m_axi_arlen.bind(*p_29_m_axi_arlen);
        p_29_m_axi_arlen->set_sv_netview_offsetfromdp(9157744);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_29_m_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_29->m_axi_arsize.bind(*p_29_m_axi_arsize);
        p_29_m_axi_arsize->set_sv_netview_offsetfromdp(9157800);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_29_m_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_29->m_axi_arburst.bind(*p_29_m_axi_arburst);
        p_29_m_axi_arburst->set_sv_netview_offsetfromdp(9157856);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_29_m_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_29->m_axi_arlock.bind(*p_29_m_axi_arlock);
        p_29_m_axi_arlock->set_sv_netview_offsetfromdp(9157912);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_29_m_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_29->m_axi_arcache.bind(*p_29_m_axi_arcache);
        p_29_m_axi_arcache->set_sv_netview_offsetfromdp(9157968);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_29_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_29->m_axi_arprot.bind(*p_29_m_axi_arprot);
        p_29_m_axi_arprot->set_sv_netview_offsetfromdp(9158024);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_29_m_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_29->m_axi_arqos.bind(*p_29_m_axi_arqos);
        p_29_m_axi_arqos->set_sv_netview_offsetfromdp(9158080);
        xsim_sc_channel<0, bool > *p_29_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_29->m_axi_arvalid.bind(*p_29_m_axi_arvalid);
        p_29_m_axi_arvalid->set_sv_netview_offsetfromdp(9158136);
        xsim_sc_channel<0, bool > *p_29_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_29->m_axi_arready.bind(*p_29_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_29_m_axi_arready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_29_m_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_29->m_axi_rdata.bind(*p_29_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_29_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_29_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_29->m_axi_rresp.bind(*p_29_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_29_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_29_m_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_29->m_axi_rlast.bind(*p_29_m_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_29_m_axi_rlast);
        xsim_sc_channel<0, bool > *p_29_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_29->m_axi_rvalid.bind(*p_29_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_29_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_29_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_29->m_axi_rready.bind(*p_29_m_axi_rready);
        p_29_m_axi_rready->set_sv_netview_offsetfromdp(9158472);
        sc_inst_30 = new bd_5dca_vip_S00_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.hmss_0.inst.vip_S00");
        sc_inst_30->xsim_set_dbg_index(958);
        xsim_sc_channel<0, bool > *p_30_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_30->aclk.bind(*p_30_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_30_aclk);
        xsim_sc_channel<0, bool > *p_30_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_30->aresetn.bind(*p_30_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_30_aresetn);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_30_s_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_30->s_axi_awaddr.bind(*p_30_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_awaddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_30_s_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_30->s_axi_awlen.bind(*p_30_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_awlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_30_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_30->s_axi_awburst.bind(*p_30_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_awburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_30_s_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_30->s_axi_awlock.bind(*p_30_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_30_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_30->s_axi_awcache.bind(*p_30_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_30_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_30->s_axi_awprot.bind(*p_30_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_30_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_30->s_axi_awqos.bind(*p_30_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_awqos);
        xsim_sc_channel<0, bool > *p_30_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_30->s_axi_awvalid.bind(*p_30_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_30_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_30->s_axi_awready.bind(*p_30_s_axi_awready);
        p_30_s_axi_awready->set_sv_netview_offsetfromdp(9159136);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_30_s_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_30->s_axi_wdata.bind(*p_30_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_wdata);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_30_s_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_30->s_axi_wstrb.bind(*p_30_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_30_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_30->s_axi_wlast.bind(*p_30_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_30_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_30->s_axi_wvalid.bind(*p_30_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_30_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_30->s_axi_wready.bind(*p_30_s_axi_wready);
        p_30_s_axi_wready->set_sv_netview_offsetfromdp(9159416);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_30_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_30->s_axi_bresp.bind(*p_30_s_axi_bresp);
        p_30_s_axi_bresp->set_sv_netview_offsetfromdp(9159472);
        xsim_sc_channel<0, bool > *p_30_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_30->s_axi_bvalid.bind(*p_30_s_axi_bvalid);
        p_30_s_axi_bvalid->set_sv_netview_offsetfromdp(9159528);
        xsim_sc_channel<0, bool > *p_30_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_30->s_axi_bready.bind(*p_30_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_bready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_30_s_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_30->s_axi_araddr.bind(*p_30_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_araddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_30_s_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_30->s_axi_arlen.bind(*p_30_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_arlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_30_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_30->s_axi_arburst.bind(*p_30_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_arburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_30_s_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_30->s_axi_arlock.bind(*p_30_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_30_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_30->s_axi_arcache.bind(*p_30_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_30_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_30->s_axi_arprot.bind(*p_30_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_30_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_30->s_axi_arqos.bind(*p_30_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_arqos);
        xsim_sc_channel<0, bool > *p_30_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_30->s_axi_arvalid.bind(*p_30_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_30_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_30->s_axi_arready.bind(*p_30_s_axi_arready);
        p_30_s_axi_arready->set_sv_netview_offsetfromdp(9160088);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_30_s_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_30->s_axi_rdata.bind(*p_30_s_axi_rdata);
        p_30_s_axi_rdata->set_sv_netview_offsetfromdp(9160144);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_30_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_30->s_axi_rresp.bind(*p_30_s_axi_rresp);
        p_30_s_axi_rresp->set_sv_netview_offsetfromdp(9160200);
        xsim_sc_channel<0, bool > *p_30_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_30->s_axi_rlast.bind(*p_30_s_axi_rlast);
        p_30_s_axi_rlast->set_sv_netview_offsetfromdp(9160256);
        xsim_sc_channel<0, bool > *p_30_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_30->s_axi_rvalid.bind(*p_30_s_axi_rvalid);
        p_30_s_axi_rvalid->set_sv_netview_offsetfromdp(9160312);
        xsim_sc_channel<0, bool > *p_30_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_30->s_axi_rready.bind(*p_30_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_rready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_30_m_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_30->m_axi_awaddr.bind(*p_30_m_axi_awaddr);
        p_30_m_axi_awaddr->set_sv_netview_offsetfromdp(9160424);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_30_m_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_30->m_axi_awlen.bind(*p_30_m_axi_awlen);
        p_30_m_axi_awlen->set_sv_netview_offsetfromdp(9160480);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_30_m_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_30->m_axi_awburst.bind(*p_30_m_axi_awburst);
        p_30_m_axi_awburst->set_sv_netview_offsetfromdp(9160536);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_30_m_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_30->m_axi_awlock.bind(*p_30_m_axi_awlock);
        p_30_m_axi_awlock->set_sv_netview_offsetfromdp(9160592);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_30_m_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_30->m_axi_awcache.bind(*p_30_m_axi_awcache);
        p_30_m_axi_awcache->set_sv_netview_offsetfromdp(9160648);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_30_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_30->m_axi_awprot.bind(*p_30_m_axi_awprot);
        p_30_m_axi_awprot->set_sv_netview_offsetfromdp(9160704);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_30_m_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_30->m_axi_awqos.bind(*p_30_m_axi_awqos);
        p_30_m_axi_awqos->set_sv_netview_offsetfromdp(9160760);
        xsim_sc_channel<0, bool > *p_30_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_30->m_axi_awvalid.bind(*p_30_m_axi_awvalid);
        p_30_m_axi_awvalid->set_sv_netview_offsetfromdp(9160816);
        xsim_sc_channel<0, bool > *p_30_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_30->m_axi_awready.bind(*p_30_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_30_m_axi_awready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_30_m_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_30->m_axi_wdata.bind(*p_30_m_axi_wdata);
        p_30_m_axi_wdata->set_sv_netview_offsetfromdp(9160928);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_30_m_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_30->m_axi_wstrb.bind(*p_30_m_axi_wstrb);
        p_30_m_axi_wstrb->set_sv_netview_offsetfromdp(9160984);
        xsim_sc_channel<0, bool > *p_30_m_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_30->m_axi_wlast.bind(*p_30_m_axi_wlast);
        p_30_m_axi_wlast->set_sv_netview_offsetfromdp(9161040);
        xsim_sc_channel<0, bool > *p_30_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_30->m_axi_wvalid.bind(*p_30_m_axi_wvalid);
        p_30_m_axi_wvalid->set_sv_netview_offsetfromdp(9161096);
        xsim_sc_channel<0, bool > *p_30_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_30->m_axi_wready.bind(*p_30_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_30_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_30_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_30->m_axi_bresp.bind(*p_30_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_30_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_30_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_30->m_axi_bvalid.bind(*p_30_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_30_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_30_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_30->m_axi_bready.bind(*p_30_m_axi_bready);
        p_30_m_axi_bready->set_sv_netview_offsetfromdp(9161320);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_30_m_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_30->m_axi_araddr.bind(*p_30_m_axi_araddr);
        p_30_m_axi_araddr->set_sv_netview_offsetfromdp(9161376);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_30_m_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_30->m_axi_arlen.bind(*p_30_m_axi_arlen);
        p_30_m_axi_arlen->set_sv_netview_offsetfromdp(9161432);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_30_m_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_30->m_axi_arburst.bind(*p_30_m_axi_arburst);
        p_30_m_axi_arburst->set_sv_netview_offsetfromdp(9161488);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_30_m_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_30->m_axi_arlock.bind(*p_30_m_axi_arlock);
        p_30_m_axi_arlock->set_sv_netview_offsetfromdp(9161544);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_30_m_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_30->m_axi_arcache.bind(*p_30_m_axi_arcache);
        p_30_m_axi_arcache->set_sv_netview_offsetfromdp(9161600);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_30_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_30->m_axi_arprot.bind(*p_30_m_axi_arprot);
        p_30_m_axi_arprot->set_sv_netview_offsetfromdp(9161656);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_30_m_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_30->m_axi_arqos.bind(*p_30_m_axi_arqos);
        p_30_m_axi_arqos->set_sv_netview_offsetfromdp(9161712);
        xsim_sc_channel<0, bool > *p_30_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_30->m_axi_arvalid.bind(*p_30_m_axi_arvalid);
        p_30_m_axi_arvalid->set_sv_netview_offsetfromdp(9161768);
        xsim_sc_channel<0, bool > *p_30_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_30->m_axi_arready.bind(*p_30_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_30_m_axi_arready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_30_m_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_30->m_axi_rdata.bind(*p_30_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_30_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_30_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_30->m_axi_rresp.bind(*p_30_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_30_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_30_m_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_30->m_axi_rlast.bind(*p_30_m_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_30_m_axi_rlast);
        xsim_sc_channel<0, bool > *p_30_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_30->m_axi_rvalid.bind(*p_30_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_30_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_30_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_30->m_axi_rready.bind(*p_30_m_axi_rready);
        p_30_m_axi_rready->set_sv_netview_offsetfromdp(9162104);
        sc_inst_31 = new bd_5dca_vip_S01_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.hmss_0.inst.vip_S01");
        sc_inst_31->xsim_set_dbg_index(959);
        xsim_sc_channel<0, bool > *p_31_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_31->aclk.bind(*p_31_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_31_aclk);
        xsim_sc_channel<0, bool > *p_31_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_31->aresetn.bind(*p_31_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_31_aresetn);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_31_s_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_31->s_axi_awaddr.bind(*p_31_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_awaddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_31_s_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_31->s_axi_awlen.bind(*p_31_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_awlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_31_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_31->s_axi_awburst.bind(*p_31_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_awburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_31_s_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_31->s_axi_awlock.bind(*p_31_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_31_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_31->s_axi_awcache.bind(*p_31_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_31_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_31->s_axi_awprot.bind(*p_31_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_31_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_31->s_axi_awqos.bind(*p_31_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_awqos);
        xsim_sc_channel<0, bool > *p_31_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_31->s_axi_awvalid.bind(*p_31_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_31_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_31->s_axi_awready.bind(*p_31_s_axi_awready);
        p_31_s_axi_awready->set_sv_netview_offsetfromdp(9162768);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_31_s_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_31->s_axi_wdata.bind(*p_31_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_wdata);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_31_s_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_31->s_axi_wstrb.bind(*p_31_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_31_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_31->s_axi_wlast.bind(*p_31_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_31_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_31->s_axi_wvalid.bind(*p_31_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_31_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_31->s_axi_wready.bind(*p_31_s_axi_wready);
        p_31_s_axi_wready->set_sv_netview_offsetfromdp(9163048);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_31_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_31->s_axi_bresp.bind(*p_31_s_axi_bresp);
        p_31_s_axi_bresp->set_sv_netview_offsetfromdp(9163104);
        xsim_sc_channel<0, bool > *p_31_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_31->s_axi_bvalid.bind(*p_31_s_axi_bvalid);
        p_31_s_axi_bvalid->set_sv_netview_offsetfromdp(9163160);
        xsim_sc_channel<0, bool > *p_31_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_31->s_axi_bready.bind(*p_31_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_bready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_31_s_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_31->s_axi_araddr.bind(*p_31_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_araddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_31_s_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_31->s_axi_arlen.bind(*p_31_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_arlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_31_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_31->s_axi_arburst.bind(*p_31_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_arburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_31_s_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_31->s_axi_arlock.bind(*p_31_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_31_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_31->s_axi_arcache.bind(*p_31_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_31_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_31->s_axi_arprot.bind(*p_31_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_31_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_31->s_axi_arqos.bind(*p_31_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_arqos);
        xsim_sc_channel<0, bool > *p_31_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_31->s_axi_arvalid.bind(*p_31_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_31_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_31->s_axi_arready.bind(*p_31_s_axi_arready);
        p_31_s_axi_arready->set_sv_netview_offsetfromdp(9163720);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_31_s_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_31->s_axi_rdata.bind(*p_31_s_axi_rdata);
        p_31_s_axi_rdata->set_sv_netview_offsetfromdp(9163776);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_31_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_31->s_axi_rresp.bind(*p_31_s_axi_rresp);
        p_31_s_axi_rresp->set_sv_netview_offsetfromdp(9163832);
        xsim_sc_channel<0, bool > *p_31_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_31->s_axi_rlast.bind(*p_31_s_axi_rlast);
        p_31_s_axi_rlast->set_sv_netview_offsetfromdp(9163888);
        xsim_sc_channel<0, bool > *p_31_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_31->s_axi_rvalid.bind(*p_31_s_axi_rvalid);
        p_31_s_axi_rvalid->set_sv_netview_offsetfromdp(9163944);
        xsim_sc_channel<0, bool > *p_31_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_31->s_axi_rready.bind(*p_31_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_rready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_31_m_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_31->m_axi_awaddr.bind(*p_31_m_axi_awaddr);
        p_31_m_axi_awaddr->set_sv_netview_offsetfromdp(9164056);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_31_m_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_31->m_axi_awlen.bind(*p_31_m_axi_awlen);
        p_31_m_axi_awlen->set_sv_netview_offsetfromdp(9164112);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_31_m_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_31->m_axi_awburst.bind(*p_31_m_axi_awburst);
        p_31_m_axi_awburst->set_sv_netview_offsetfromdp(9164168);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_31_m_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_31->m_axi_awlock.bind(*p_31_m_axi_awlock);
        p_31_m_axi_awlock->set_sv_netview_offsetfromdp(9164224);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_31_m_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_31->m_axi_awcache.bind(*p_31_m_axi_awcache);
        p_31_m_axi_awcache->set_sv_netview_offsetfromdp(9164280);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_31_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_31->m_axi_awprot.bind(*p_31_m_axi_awprot);
        p_31_m_axi_awprot->set_sv_netview_offsetfromdp(9164336);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_31_m_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_31->m_axi_awqos.bind(*p_31_m_axi_awqos);
        p_31_m_axi_awqos->set_sv_netview_offsetfromdp(9164392);
        xsim_sc_channel<0, bool > *p_31_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_31->m_axi_awvalid.bind(*p_31_m_axi_awvalid);
        p_31_m_axi_awvalid->set_sv_netview_offsetfromdp(9164448);
        xsim_sc_channel<0, bool > *p_31_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_31->m_axi_awready.bind(*p_31_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_31_m_axi_awready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_31_m_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_31->m_axi_wdata.bind(*p_31_m_axi_wdata);
        p_31_m_axi_wdata->set_sv_netview_offsetfromdp(9164560);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_31_m_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_31->m_axi_wstrb.bind(*p_31_m_axi_wstrb);
        p_31_m_axi_wstrb->set_sv_netview_offsetfromdp(9164616);
        xsim_sc_channel<0, bool > *p_31_m_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_31->m_axi_wlast.bind(*p_31_m_axi_wlast);
        p_31_m_axi_wlast->set_sv_netview_offsetfromdp(9164672);
        xsim_sc_channel<0, bool > *p_31_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_31->m_axi_wvalid.bind(*p_31_m_axi_wvalid);
        p_31_m_axi_wvalid->set_sv_netview_offsetfromdp(9164728);
        xsim_sc_channel<0, bool > *p_31_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_31->m_axi_wready.bind(*p_31_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_31_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_31_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_31->m_axi_bresp.bind(*p_31_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_31_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_31_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_31->m_axi_bvalid.bind(*p_31_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_31_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_31_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_31->m_axi_bready.bind(*p_31_m_axi_bready);
        p_31_m_axi_bready->set_sv_netview_offsetfromdp(9164952);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_31_m_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_31->m_axi_araddr.bind(*p_31_m_axi_araddr);
        p_31_m_axi_araddr->set_sv_netview_offsetfromdp(9165008);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_31_m_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_31->m_axi_arlen.bind(*p_31_m_axi_arlen);
        p_31_m_axi_arlen->set_sv_netview_offsetfromdp(9165064);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_31_m_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_31->m_axi_arburst.bind(*p_31_m_axi_arburst);
        p_31_m_axi_arburst->set_sv_netview_offsetfromdp(9165120);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_31_m_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_31->m_axi_arlock.bind(*p_31_m_axi_arlock);
        p_31_m_axi_arlock->set_sv_netview_offsetfromdp(9165176);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_31_m_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_31->m_axi_arcache.bind(*p_31_m_axi_arcache);
        p_31_m_axi_arcache->set_sv_netview_offsetfromdp(9165232);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_31_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_31->m_axi_arprot.bind(*p_31_m_axi_arprot);
        p_31_m_axi_arprot->set_sv_netview_offsetfromdp(9165288);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_31_m_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_31->m_axi_arqos.bind(*p_31_m_axi_arqos);
        p_31_m_axi_arqos->set_sv_netview_offsetfromdp(9165344);
        xsim_sc_channel<0, bool > *p_31_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_31->m_axi_arvalid.bind(*p_31_m_axi_arvalid);
        p_31_m_axi_arvalid->set_sv_netview_offsetfromdp(9165400);
        xsim_sc_channel<0, bool > *p_31_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_31->m_axi_arready.bind(*p_31_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_31_m_axi_arready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_31_m_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_31->m_axi_rdata.bind(*p_31_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_31_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_31_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_31->m_axi_rresp.bind(*p_31_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_31_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_31_m_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_31->m_axi_rlast.bind(*p_31_m_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_31_m_axi_rlast);
        xsim_sc_channel<0, bool > *p_31_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_31->m_axi_rvalid.bind(*p_31_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_31_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_31_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_31->m_axi_rready.bind(*p_31_m_axi_rready);
        p_31_m_axi_rready->set_sv_netview_offsetfromdp(9165736);
        sc_inst_32 = new bd_5dca_vip_S02_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.hmss_0.inst.vip_S02");
        sc_inst_32->xsim_set_dbg_index(960);
        xsim_sc_channel<0, bool > *p_32_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_32->aclk.bind(*p_32_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_32_aclk);
        xsim_sc_channel<0, bool > *p_32_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_32->aresetn.bind(*p_32_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_32_aresetn);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_32_s_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_32->s_axi_awaddr.bind(*p_32_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_awaddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_32_s_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_32->s_axi_awlen.bind(*p_32_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_awlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_32_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_32->s_axi_awburst.bind(*p_32_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_awburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_32_s_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_32->s_axi_awlock.bind(*p_32_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_32_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_32->s_axi_awcache.bind(*p_32_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_32_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_32->s_axi_awprot.bind(*p_32_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_32_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_32->s_axi_awqos.bind(*p_32_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_awqos);
        xsim_sc_channel<0, bool > *p_32_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_32->s_axi_awvalid.bind(*p_32_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_32_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_32->s_axi_awready.bind(*p_32_s_axi_awready);
        p_32_s_axi_awready->set_sv_netview_offsetfromdp(9166400);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_32_s_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_32->s_axi_wdata.bind(*p_32_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_wdata);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_32_s_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_32->s_axi_wstrb.bind(*p_32_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_32_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_32->s_axi_wlast.bind(*p_32_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_32_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_32->s_axi_wvalid.bind(*p_32_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_32_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_32->s_axi_wready.bind(*p_32_s_axi_wready);
        p_32_s_axi_wready->set_sv_netview_offsetfromdp(9166680);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_32_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_32->s_axi_bresp.bind(*p_32_s_axi_bresp);
        p_32_s_axi_bresp->set_sv_netview_offsetfromdp(9166736);
        xsim_sc_channel<0, bool > *p_32_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_32->s_axi_bvalid.bind(*p_32_s_axi_bvalid);
        p_32_s_axi_bvalid->set_sv_netview_offsetfromdp(9166792);
        xsim_sc_channel<0, bool > *p_32_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_32->s_axi_bready.bind(*p_32_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_bready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_32_s_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_32->s_axi_araddr.bind(*p_32_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_araddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_32_s_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_32->s_axi_arlen.bind(*p_32_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_arlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_32_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_32->s_axi_arburst.bind(*p_32_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_arburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_32_s_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_32->s_axi_arlock.bind(*p_32_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_32_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_32->s_axi_arcache.bind(*p_32_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_32_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_32->s_axi_arprot.bind(*p_32_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_32_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_32->s_axi_arqos.bind(*p_32_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_arqos);
        xsim_sc_channel<0, bool > *p_32_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_32->s_axi_arvalid.bind(*p_32_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_32_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_32->s_axi_arready.bind(*p_32_s_axi_arready);
        p_32_s_axi_arready->set_sv_netview_offsetfromdp(9167352);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_32_s_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_32->s_axi_rdata.bind(*p_32_s_axi_rdata);
        p_32_s_axi_rdata->set_sv_netview_offsetfromdp(9167408);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_32_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_32->s_axi_rresp.bind(*p_32_s_axi_rresp);
        p_32_s_axi_rresp->set_sv_netview_offsetfromdp(9167464);
        xsim_sc_channel<0, bool > *p_32_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_32->s_axi_rlast.bind(*p_32_s_axi_rlast);
        p_32_s_axi_rlast->set_sv_netview_offsetfromdp(9167520);
        xsim_sc_channel<0, bool > *p_32_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_32->s_axi_rvalid.bind(*p_32_s_axi_rvalid);
        p_32_s_axi_rvalid->set_sv_netview_offsetfromdp(9167576);
        xsim_sc_channel<0, bool > *p_32_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_32->s_axi_rready.bind(*p_32_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_rready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_32_m_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_32->m_axi_awaddr.bind(*p_32_m_axi_awaddr);
        p_32_m_axi_awaddr->set_sv_netview_offsetfromdp(9167688);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_32_m_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_32->m_axi_awlen.bind(*p_32_m_axi_awlen);
        p_32_m_axi_awlen->set_sv_netview_offsetfromdp(9167744);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_32_m_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_32->m_axi_awburst.bind(*p_32_m_axi_awburst);
        p_32_m_axi_awburst->set_sv_netview_offsetfromdp(9167800);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_32_m_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_32->m_axi_awlock.bind(*p_32_m_axi_awlock);
        p_32_m_axi_awlock->set_sv_netview_offsetfromdp(9167856);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_32_m_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_32->m_axi_awcache.bind(*p_32_m_axi_awcache);
        p_32_m_axi_awcache->set_sv_netview_offsetfromdp(9167912);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_32_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_32->m_axi_awprot.bind(*p_32_m_axi_awprot);
        p_32_m_axi_awprot->set_sv_netview_offsetfromdp(9167968);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_32_m_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_32->m_axi_awqos.bind(*p_32_m_axi_awqos);
        p_32_m_axi_awqos->set_sv_netview_offsetfromdp(9168024);
        xsim_sc_channel<0, bool > *p_32_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_32->m_axi_awvalid.bind(*p_32_m_axi_awvalid);
        p_32_m_axi_awvalid->set_sv_netview_offsetfromdp(9168080);
        xsim_sc_channel<0, bool > *p_32_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_32->m_axi_awready.bind(*p_32_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_32_m_axi_awready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_32_m_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_32->m_axi_wdata.bind(*p_32_m_axi_wdata);
        p_32_m_axi_wdata->set_sv_netview_offsetfromdp(9168192);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_32_m_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_32->m_axi_wstrb.bind(*p_32_m_axi_wstrb);
        p_32_m_axi_wstrb->set_sv_netview_offsetfromdp(9168248);
        xsim_sc_channel<0, bool > *p_32_m_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_32->m_axi_wlast.bind(*p_32_m_axi_wlast);
        p_32_m_axi_wlast->set_sv_netview_offsetfromdp(9168304);
        xsim_sc_channel<0, bool > *p_32_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_32->m_axi_wvalid.bind(*p_32_m_axi_wvalid);
        p_32_m_axi_wvalid->set_sv_netview_offsetfromdp(9168360);
        xsim_sc_channel<0, bool > *p_32_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_32->m_axi_wready.bind(*p_32_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_32_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_32_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_32->m_axi_bresp.bind(*p_32_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_32_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_32_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_32->m_axi_bvalid.bind(*p_32_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_32_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_32_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_32->m_axi_bready.bind(*p_32_m_axi_bready);
        p_32_m_axi_bready->set_sv_netview_offsetfromdp(9168584);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_32_m_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_32->m_axi_araddr.bind(*p_32_m_axi_araddr);
        p_32_m_axi_araddr->set_sv_netview_offsetfromdp(9168640);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_32_m_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_32->m_axi_arlen.bind(*p_32_m_axi_arlen);
        p_32_m_axi_arlen->set_sv_netview_offsetfromdp(9168696);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_32_m_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_32->m_axi_arburst.bind(*p_32_m_axi_arburst);
        p_32_m_axi_arburst->set_sv_netview_offsetfromdp(9168752);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_32_m_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_32->m_axi_arlock.bind(*p_32_m_axi_arlock);
        p_32_m_axi_arlock->set_sv_netview_offsetfromdp(9168808);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_32_m_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_32->m_axi_arcache.bind(*p_32_m_axi_arcache);
        p_32_m_axi_arcache->set_sv_netview_offsetfromdp(9168864);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_32_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_32->m_axi_arprot.bind(*p_32_m_axi_arprot);
        p_32_m_axi_arprot->set_sv_netview_offsetfromdp(9168920);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_32_m_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_32->m_axi_arqos.bind(*p_32_m_axi_arqos);
        p_32_m_axi_arqos->set_sv_netview_offsetfromdp(9168976);
        xsim_sc_channel<0, bool > *p_32_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_32->m_axi_arvalid.bind(*p_32_m_axi_arvalid);
        p_32_m_axi_arvalid->set_sv_netview_offsetfromdp(9169032);
        xsim_sc_channel<0, bool > *p_32_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_32->m_axi_arready.bind(*p_32_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_32_m_axi_arready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_32_m_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_32->m_axi_rdata.bind(*p_32_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_32_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_32_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_32->m_axi_rresp.bind(*p_32_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_32_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_32_m_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_32->m_axi_rlast.bind(*p_32_m_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_32_m_axi_rlast);
        xsim_sc_channel<0, bool > *p_32_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_32->m_axi_rvalid.bind(*p_32_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_32_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_32_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_32->m_axi_rready.bind(*p_32_m_axi_rready);
        p_32_m_axi_rready->set_sv_netview_offsetfromdp(9169368);
        sc_inst_33 = new bd_5dca_vip_S03_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.hmss_0.inst.vip_S03");
        sc_inst_33->xsim_set_dbg_index(961);
        xsim_sc_channel<0, bool > *p_33_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_33->aclk.bind(*p_33_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_33_aclk);
        xsim_sc_channel<0, bool > *p_33_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_33->aresetn.bind(*p_33_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_33_aresetn);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_33_s_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_33->s_axi_awaddr.bind(*p_33_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_33_s_axi_awaddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_33_s_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_33->s_axi_awlen.bind(*p_33_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_33_s_axi_awlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_33_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_33->s_axi_awburst.bind(*p_33_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_33_s_axi_awburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_33_s_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_33->s_axi_awlock.bind(*p_33_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_33_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_33_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_33->s_axi_awcache.bind(*p_33_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_33_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_33_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_33->s_axi_awprot.bind(*p_33_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_33_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_33_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_33->s_axi_awqos.bind(*p_33_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_33_s_axi_awqos);
        xsim_sc_channel<0, bool > *p_33_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_33->s_axi_awvalid.bind(*p_33_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_33_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_33_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_33->s_axi_awready.bind(*p_33_s_axi_awready);
        p_33_s_axi_awready->set_sv_netview_offsetfromdp(9170032);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_33_s_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_33->s_axi_wdata.bind(*p_33_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_33_s_axi_wdata);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_33_s_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_33->s_axi_wstrb.bind(*p_33_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_33_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_33_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_33->s_axi_wlast.bind(*p_33_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_33_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_33_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_33->s_axi_wvalid.bind(*p_33_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_33_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_33_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_33->s_axi_wready.bind(*p_33_s_axi_wready);
        p_33_s_axi_wready->set_sv_netview_offsetfromdp(9170312);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_33_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_33->s_axi_bresp.bind(*p_33_s_axi_bresp);
        p_33_s_axi_bresp->set_sv_netview_offsetfromdp(9170368);
        xsim_sc_channel<0, bool > *p_33_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_33->s_axi_bvalid.bind(*p_33_s_axi_bvalid);
        p_33_s_axi_bvalid->set_sv_netview_offsetfromdp(9170424);
        xsim_sc_channel<0, bool > *p_33_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_33->s_axi_bready.bind(*p_33_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_33_s_axi_bready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_33_s_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_33->s_axi_araddr.bind(*p_33_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_33_s_axi_araddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_33_s_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_33->s_axi_arlen.bind(*p_33_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_33_s_axi_arlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_33_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_33->s_axi_arburst.bind(*p_33_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_33_s_axi_arburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_33_s_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_33->s_axi_arlock.bind(*p_33_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_33_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_33_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_33->s_axi_arcache.bind(*p_33_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_33_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_33_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_33->s_axi_arprot.bind(*p_33_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_33_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_33_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_33->s_axi_arqos.bind(*p_33_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_33_s_axi_arqos);
        xsim_sc_channel<0, bool > *p_33_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_33->s_axi_arvalid.bind(*p_33_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_33_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_33_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_33->s_axi_arready.bind(*p_33_s_axi_arready);
        p_33_s_axi_arready->set_sv_netview_offsetfromdp(9170984);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_33_s_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_33->s_axi_rdata.bind(*p_33_s_axi_rdata);
        p_33_s_axi_rdata->set_sv_netview_offsetfromdp(9171040);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_33_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_33->s_axi_rresp.bind(*p_33_s_axi_rresp);
        p_33_s_axi_rresp->set_sv_netview_offsetfromdp(9171096);
        xsim_sc_channel<0, bool > *p_33_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_33->s_axi_rlast.bind(*p_33_s_axi_rlast);
        p_33_s_axi_rlast->set_sv_netview_offsetfromdp(9171152);
        xsim_sc_channel<0, bool > *p_33_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_33->s_axi_rvalid.bind(*p_33_s_axi_rvalid);
        p_33_s_axi_rvalid->set_sv_netview_offsetfromdp(9171208);
        xsim_sc_channel<0, bool > *p_33_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_33->s_axi_rready.bind(*p_33_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_33_s_axi_rready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_33_m_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_33->m_axi_awaddr.bind(*p_33_m_axi_awaddr);
        p_33_m_axi_awaddr->set_sv_netview_offsetfromdp(9171320);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_33_m_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_33->m_axi_awlen.bind(*p_33_m_axi_awlen);
        p_33_m_axi_awlen->set_sv_netview_offsetfromdp(9171376);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_33_m_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_33->m_axi_awburst.bind(*p_33_m_axi_awburst);
        p_33_m_axi_awburst->set_sv_netview_offsetfromdp(9171432);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_33_m_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_33->m_axi_awlock.bind(*p_33_m_axi_awlock);
        p_33_m_axi_awlock->set_sv_netview_offsetfromdp(9171488);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_33_m_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_33->m_axi_awcache.bind(*p_33_m_axi_awcache);
        p_33_m_axi_awcache->set_sv_netview_offsetfromdp(9171544);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_33_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_33->m_axi_awprot.bind(*p_33_m_axi_awprot);
        p_33_m_axi_awprot->set_sv_netview_offsetfromdp(9171600);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_33_m_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_33->m_axi_awqos.bind(*p_33_m_axi_awqos);
        p_33_m_axi_awqos->set_sv_netview_offsetfromdp(9171656);
        xsim_sc_channel<0, bool > *p_33_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_33->m_axi_awvalid.bind(*p_33_m_axi_awvalid);
        p_33_m_axi_awvalid->set_sv_netview_offsetfromdp(9171712);
        xsim_sc_channel<0, bool > *p_33_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_33->m_axi_awready.bind(*p_33_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_33_m_axi_awready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_33_m_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_33->m_axi_wdata.bind(*p_33_m_axi_wdata);
        p_33_m_axi_wdata->set_sv_netview_offsetfromdp(9171824);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_33_m_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_33->m_axi_wstrb.bind(*p_33_m_axi_wstrb);
        p_33_m_axi_wstrb->set_sv_netview_offsetfromdp(9171880);
        xsim_sc_channel<0, bool > *p_33_m_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_33->m_axi_wlast.bind(*p_33_m_axi_wlast);
        p_33_m_axi_wlast->set_sv_netview_offsetfromdp(9171936);
        xsim_sc_channel<0, bool > *p_33_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_33->m_axi_wvalid.bind(*p_33_m_axi_wvalid);
        p_33_m_axi_wvalid->set_sv_netview_offsetfromdp(9171992);
        xsim_sc_channel<0, bool > *p_33_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_33->m_axi_wready.bind(*p_33_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_33_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_33_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_33->m_axi_bresp.bind(*p_33_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_33_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_33_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_33->m_axi_bvalid.bind(*p_33_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_33_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_33_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_33->m_axi_bready.bind(*p_33_m_axi_bready);
        p_33_m_axi_bready->set_sv_netview_offsetfromdp(9172216);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_33_m_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_33->m_axi_araddr.bind(*p_33_m_axi_araddr);
        p_33_m_axi_araddr->set_sv_netview_offsetfromdp(9172272);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_33_m_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_33->m_axi_arlen.bind(*p_33_m_axi_arlen);
        p_33_m_axi_arlen->set_sv_netview_offsetfromdp(9172328);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_33_m_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_33->m_axi_arburst.bind(*p_33_m_axi_arburst);
        p_33_m_axi_arburst->set_sv_netview_offsetfromdp(9172384);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_33_m_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_33->m_axi_arlock.bind(*p_33_m_axi_arlock);
        p_33_m_axi_arlock->set_sv_netview_offsetfromdp(9172440);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_33_m_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_33->m_axi_arcache.bind(*p_33_m_axi_arcache);
        p_33_m_axi_arcache->set_sv_netview_offsetfromdp(9172496);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_33_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_33->m_axi_arprot.bind(*p_33_m_axi_arprot);
        p_33_m_axi_arprot->set_sv_netview_offsetfromdp(9172552);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_33_m_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_33->m_axi_arqos.bind(*p_33_m_axi_arqos);
        p_33_m_axi_arqos->set_sv_netview_offsetfromdp(9172608);
        xsim_sc_channel<0, bool > *p_33_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_33->m_axi_arvalid.bind(*p_33_m_axi_arvalid);
        p_33_m_axi_arvalid->set_sv_netview_offsetfromdp(9172664);
        xsim_sc_channel<0, bool > *p_33_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_33->m_axi_arready.bind(*p_33_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_33_m_axi_arready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_33_m_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_33->m_axi_rdata.bind(*p_33_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_33_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_33_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_33->m_axi_rresp.bind(*p_33_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_33_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_33_m_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_33->m_axi_rlast.bind(*p_33_m_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_33_m_axi_rlast);
        xsim_sc_channel<0, bool > *p_33_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_33->m_axi_rvalid.bind(*p_33_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_33_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_33_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_33->m_axi_rready.bind(*p_33_m_axi_rready);
        p_33_m_axi_rready->set_sv_netview_offsetfromdp(9173000);
        sc_inst_34 = new pfm_dynamic_irq_const_tieoff_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.irq_const_tieoff");
        sc_inst_34->xsim_set_dbg_index(56);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_34_dout = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_34->dout.bind(*p_34_dout);
        p_34_dout->set_sv_netview_offsetfromdp(9342152);
        sc_inst_35 = new bd_d216_sci(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.bd_d216_sci_inst");
        sc_inst_35->xsim_set_dbg_index(1350);
        sc_inst_36 = new bd_d216_interconnect_DDR4_MEM00_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.interconnect.interconnect_ddr4_mem00");
        sc_inst_36->xsim_set_dbg_index(3206);
        xsim_sc_channel<0, bool > *p_36_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_36->aclk.bind(*p_36_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_36_aclk);
        xsim_sc_channel<0, bool > *p_36_aclk1 = new xsim_sc_channel<0, bool >();
        sc_inst_36->aclk1.bind(*p_36_aclk1);
        (*_glb_hdl_sc_channel_map).push_back(p_36_aclk1);
        xsim_sc_channel<0, bool > *p_36_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_36->aresetn.bind(*p_36_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_36_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_36_S00_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_36->S00_AXI_awid.bind(*p_36_S00_AXI_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_awid);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_36_S00_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_36->S00_AXI_awaddr.bind(*p_36_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_36_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_36->S00_AXI_awlen.bind(*p_36_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_36_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_36->S00_AXI_awsize.bind(*p_36_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_36_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_36->S00_AXI_awburst.bind(*p_36_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_36_S00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_36->S00_AXI_awlock.bind(*p_36_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_36_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_36->S00_AXI_awcache.bind(*p_36_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_36_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_36->S00_AXI_awprot.bind(*p_36_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_36_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_36->S00_AXI_awqos.bind(*p_36_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_awqos);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_36_S00_AXI_awuser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_36->S00_AXI_awuser.bind(*p_36_S00_AXI_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_awuser);
        xsim_sc_channel<0, bool > *p_36_S00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_36->S00_AXI_awvalid.bind(*p_36_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_36_S00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_36->S00_AXI_awready.bind(*p_36_S00_AXI_awready);
        p_36_S00_AXI_awready->set_sv_netview_offsetfromdp(10608200);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_36_S00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_36->S00_AXI_wdata.bind(*p_36_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_36_S00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_36->S00_AXI_wstrb.bind(*p_36_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_36_S00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_36->S00_AXI_wlast.bind(*p_36_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_wlast);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_36_S00_AXI_wuser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_36->S00_AXI_wuser.bind(*p_36_S00_AXI_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_wuser);
        xsim_sc_channel<0, bool > *p_36_S00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_36->S00_AXI_wvalid.bind(*p_36_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_36_S00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_36->S00_AXI_wready.bind(*p_36_S00_AXI_wready);
        p_36_S00_AXI_wready->set_sv_netview_offsetfromdp(10608536);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_36_S00_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_36->S00_AXI_bid.bind(*p_36_S00_AXI_bid);
        p_36_S00_AXI_bid->set_sv_netview_offsetfromdp(10608592);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_36_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_36->S00_AXI_bresp.bind(*p_36_S00_AXI_bresp);
        p_36_S00_AXI_bresp->set_sv_netview_offsetfromdp(10608648);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_36_S00_AXI_buser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_36->S00_AXI_buser.bind(*p_36_S00_AXI_buser);
        p_36_S00_AXI_buser->set_sv_netview_offsetfromdp(10608704);
        xsim_sc_channel<0, bool > *p_36_S00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_36->S00_AXI_bvalid.bind(*p_36_S00_AXI_bvalid);
        p_36_S00_AXI_bvalid->set_sv_netview_offsetfromdp(10608760);
        xsim_sc_channel<0, bool > *p_36_S00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_36->S00_AXI_bready.bind(*p_36_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_36_S00_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_36->S00_AXI_arid.bind(*p_36_S00_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_arid);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_36_S00_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_36->S00_AXI_araddr.bind(*p_36_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_36_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_36->S00_AXI_arlen.bind(*p_36_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_36_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_36->S00_AXI_arsize.bind(*p_36_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_36_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_36->S00_AXI_arburst.bind(*p_36_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_36_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_36->S00_AXI_arlock.bind(*p_36_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_36_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_36->S00_AXI_arcache.bind(*p_36_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_36_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_36->S00_AXI_arprot.bind(*p_36_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_36_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_36->S00_AXI_arqos.bind(*p_36_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_arqos);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_36_S00_AXI_aruser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_36->S00_AXI_aruser.bind(*p_36_S00_AXI_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_aruser);
        xsim_sc_channel<0, bool > *p_36_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_36->S00_AXI_arvalid.bind(*p_36_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_36_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_36->S00_AXI_arready.bind(*p_36_S00_AXI_arready);
        p_36_S00_AXI_arready->set_sv_netview_offsetfromdp(10609488);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_36_S00_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_36->S00_AXI_rid.bind(*p_36_S00_AXI_rid);
        p_36_S00_AXI_rid->set_sv_netview_offsetfromdp(10609544);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_36_S00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_36->S00_AXI_rdata.bind(*p_36_S00_AXI_rdata);
        p_36_S00_AXI_rdata->set_sv_netview_offsetfromdp(10609600);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_36_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_36->S00_AXI_rresp.bind(*p_36_S00_AXI_rresp);
        p_36_S00_AXI_rresp->set_sv_netview_offsetfromdp(10609656);
        xsim_sc_channel<0, bool > *p_36_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_36->S00_AXI_rlast.bind(*p_36_S00_AXI_rlast);
        p_36_S00_AXI_rlast->set_sv_netview_offsetfromdp(10609712);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_36_S00_AXI_ruser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_36->S00_AXI_ruser.bind(*p_36_S00_AXI_ruser);
        p_36_S00_AXI_ruser->set_sv_netview_offsetfromdp(10609768);
        xsim_sc_channel<0, bool > *p_36_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_36->S00_AXI_rvalid.bind(*p_36_S00_AXI_rvalid);
        p_36_S00_AXI_rvalid->set_sv_netview_offsetfromdp(10609824);
        xsim_sc_channel<0, bool > *p_36_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_36->S00_AXI_rready.bind(*p_36_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_rready);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_36_M00_AXI_awaddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_36->M00_AXI_awaddr.bind(*p_36_M00_AXI_awaddr);
        p_36_M00_AXI_awaddr->set_sv_netview_offsetfromdp(10609936);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_36_M00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_36->M00_AXI_awlen.bind(*p_36_M00_AXI_awlen);
        p_36_M00_AXI_awlen->set_sv_netview_offsetfromdp(10609992);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_36_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_36->M00_AXI_awsize.bind(*p_36_M00_AXI_awsize);
        p_36_M00_AXI_awsize->set_sv_netview_offsetfromdp(10610048);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_36_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_36->M00_AXI_awburst.bind(*p_36_M00_AXI_awburst);
        p_36_M00_AXI_awburst->set_sv_netview_offsetfromdp(10610104);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_36_M00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_36->M00_AXI_awlock.bind(*p_36_M00_AXI_awlock);
        p_36_M00_AXI_awlock->set_sv_netview_offsetfromdp(10610160);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_36_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_36->M00_AXI_awcache.bind(*p_36_M00_AXI_awcache);
        p_36_M00_AXI_awcache->set_sv_netview_offsetfromdp(10610216);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_36_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_36->M00_AXI_awprot.bind(*p_36_M00_AXI_awprot);
        p_36_M00_AXI_awprot->set_sv_netview_offsetfromdp(10610272);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_36_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_36->M00_AXI_awqos.bind(*p_36_M00_AXI_awqos);
        p_36_M00_AXI_awqos->set_sv_netview_offsetfromdp(10610328);
        xsim_sc_channel<0, bool > *p_36_M00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_36->M00_AXI_awvalid.bind(*p_36_M00_AXI_awvalid);
        p_36_M00_AXI_awvalid->set_sv_netview_offsetfromdp(10610384);
        xsim_sc_channel<0, bool > *p_36_M00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_36->M00_AXI_awready.bind(*p_36_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M00_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_36_M00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_36->M00_AXI_wdata.bind(*p_36_M00_AXI_wdata);
        p_36_M00_AXI_wdata->set_sv_netview_offsetfromdp(10610496);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_36_M00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_36->M00_AXI_wstrb.bind(*p_36_M00_AXI_wstrb);
        p_36_M00_AXI_wstrb->set_sv_netview_offsetfromdp(10610552);
        xsim_sc_channel<0, bool > *p_36_M00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_36->M00_AXI_wlast.bind(*p_36_M00_AXI_wlast);
        p_36_M00_AXI_wlast->set_sv_netview_offsetfromdp(10610608);
        xsim_sc_channel<0, bool > *p_36_M00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_36->M00_AXI_wvalid.bind(*p_36_M00_AXI_wvalid);
        p_36_M00_AXI_wvalid->set_sv_netview_offsetfromdp(10610664);
        xsim_sc_channel<0, bool > *p_36_M00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_36->M00_AXI_wready.bind(*p_36_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M00_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_36_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_36->M00_AXI_bresp.bind(*p_36_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M00_AXI_bresp);
        xsim_sc_channel<0, bool > *p_36_M00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_36->M00_AXI_bvalid.bind(*p_36_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M00_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_36_M00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_36->M00_AXI_bready.bind(*p_36_M00_AXI_bready);
        p_36_M00_AXI_bready->set_sv_netview_offsetfromdp(10610888);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_36_M00_AXI_araddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_36->M00_AXI_araddr.bind(*p_36_M00_AXI_araddr);
        p_36_M00_AXI_araddr->set_sv_netview_offsetfromdp(10610944);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_36_M00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_36->M00_AXI_arlen.bind(*p_36_M00_AXI_arlen);
        p_36_M00_AXI_arlen->set_sv_netview_offsetfromdp(10611000);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_36_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_36->M00_AXI_arsize.bind(*p_36_M00_AXI_arsize);
        p_36_M00_AXI_arsize->set_sv_netview_offsetfromdp(10611056);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_36_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_36->M00_AXI_arburst.bind(*p_36_M00_AXI_arburst);
        p_36_M00_AXI_arburst->set_sv_netview_offsetfromdp(10611112);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_36_M00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_36->M00_AXI_arlock.bind(*p_36_M00_AXI_arlock);
        p_36_M00_AXI_arlock->set_sv_netview_offsetfromdp(10611168);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_36_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_36->M00_AXI_arcache.bind(*p_36_M00_AXI_arcache);
        p_36_M00_AXI_arcache->set_sv_netview_offsetfromdp(10611224);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_36_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_36->M00_AXI_arprot.bind(*p_36_M00_AXI_arprot);
        p_36_M00_AXI_arprot->set_sv_netview_offsetfromdp(10611280);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_36_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_36->M00_AXI_arqos.bind(*p_36_M00_AXI_arqos);
        p_36_M00_AXI_arqos->set_sv_netview_offsetfromdp(10611336);
        xsim_sc_channel<0, bool > *p_36_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_36->M00_AXI_arvalid.bind(*p_36_M00_AXI_arvalid);
        p_36_M00_AXI_arvalid->set_sv_netview_offsetfromdp(10611392);
        xsim_sc_channel<0, bool > *p_36_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_36->M00_AXI_arready.bind(*p_36_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M00_AXI_arready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_36_M00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_36->M00_AXI_rdata.bind(*p_36_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_36_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_36->M00_AXI_rresp.bind(*p_36_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_36_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_36->M00_AXI_rlast.bind(*p_36_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M00_AXI_rlast);
        xsim_sc_channel<0, bool > *p_36_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_36->M00_AXI_rvalid.bind(*p_36_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_36_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_36->M00_AXI_rready.bind(*p_36_M00_AXI_rready);
        p_36_M00_AXI_rready->set_sv_netview_offsetfromdp(10611728);
        sc_inst_37 = new bd_d216_interconnect_DDR4_MEM01_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.interconnect.interconnect_ddr4_mem01");
        sc_inst_37->xsim_set_dbg_index(3207);
        xsim_sc_channel<0, bool > *p_37_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_37->aclk.bind(*p_37_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_37_aclk);
        xsim_sc_channel<0, bool > *p_37_aclk1 = new xsim_sc_channel<0, bool >();
        sc_inst_37->aclk1.bind(*p_37_aclk1);
        (*_glb_hdl_sc_channel_map).push_back(p_37_aclk1);
        xsim_sc_channel<0, bool > *p_37_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_37->aresetn.bind(*p_37_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_37_aresetn);
        xsim_sc_channel<37, sc_dt::sc_bv<37> > *p_37_S00_AXI_awaddr = new xsim_sc_channel<37, sc_dt::sc_bv<37> >();
        sc_inst_37->S00_AXI_awaddr.bind(*p_37_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_37_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_37->S00_AXI_awlen.bind(*p_37_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_37_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_37->S00_AXI_awsize.bind(*p_37_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_37_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_37->S00_AXI_awburst.bind(*p_37_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_37_S00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_37->S00_AXI_awlock.bind(*p_37_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_37_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_37->S00_AXI_awcache.bind(*p_37_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_37_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_37->S00_AXI_awprot.bind(*p_37_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_37_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_37->S00_AXI_awqos.bind(*p_37_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_awqos);
        xsim_sc_channel<0, bool > *p_37_S00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_37->S00_AXI_awvalid.bind(*p_37_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_37_S00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_37->S00_AXI_awready.bind(*p_37_S00_AXI_awready);
        p_37_S00_AXI_awready->set_sv_netview_offsetfromdp(10612504);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_37_S00_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_37->S00_AXI_wdata.bind(*p_37_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_37_S00_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_37->S00_AXI_wstrb.bind(*p_37_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_37_S00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_37->S00_AXI_wlast.bind(*p_37_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_wlast);
        xsim_sc_channel<0, bool > *p_37_S00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_37->S00_AXI_wvalid.bind(*p_37_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_37_S00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_37->S00_AXI_wready.bind(*p_37_S00_AXI_wready);
        p_37_S00_AXI_wready->set_sv_netview_offsetfromdp(10612784);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_37_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_37->S00_AXI_bresp.bind(*p_37_S00_AXI_bresp);
        p_37_S00_AXI_bresp->set_sv_netview_offsetfromdp(10612840);
        xsim_sc_channel<0, bool > *p_37_S00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_37->S00_AXI_bvalid.bind(*p_37_S00_AXI_bvalid);
        p_37_S00_AXI_bvalid->set_sv_netview_offsetfromdp(10612896);
        xsim_sc_channel<0, bool > *p_37_S00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_37->S00_AXI_bready.bind(*p_37_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_bready);
        xsim_sc_channel<37, sc_dt::sc_bv<37> > *p_37_S00_AXI_araddr = new xsim_sc_channel<37, sc_dt::sc_bv<37> >();
        sc_inst_37->S00_AXI_araddr.bind(*p_37_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_37_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_37->S00_AXI_arlen.bind(*p_37_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_37_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_37->S00_AXI_arsize.bind(*p_37_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_37_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_37->S00_AXI_arburst.bind(*p_37_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_37_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_37->S00_AXI_arlock.bind(*p_37_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_37_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_37->S00_AXI_arcache.bind(*p_37_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_37_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_37->S00_AXI_arprot.bind(*p_37_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_37_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_37->S00_AXI_arqos.bind(*p_37_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_arqos);
        xsim_sc_channel<0, bool > *p_37_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_37->S00_AXI_arvalid.bind(*p_37_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_37_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_37->S00_AXI_arready.bind(*p_37_S00_AXI_arready);
        p_37_S00_AXI_arready->set_sv_netview_offsetfromdp(10613512);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_37_S00_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_37->S00_AXI_rdata.bind(*p_37_S00_AXI_rdata);
        p_37_S00_AXI_rdata->set_sv_netview_offsetfromdp(10613568);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_37_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_37->S00_AXI_rresp.bind(*p_37_S00_AXI_rresp);
        p_37_S00_AXI_rresp->set_sv_netview_offsetfromdp(10613624);
        xsim_sc_channel<0, bool > *p_37_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_37->S00_AXI_rlast.bind(*p_37_S00_AXI_rlast);
        p_37_S00_AXI_rlast->set_sv_netview_offsetfromdp(10613680);
        xsim_sc_channel<0, bool > *p_37_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_37->S00_AXI_rvalid.bind(*p_37_S00_AXI_rvalid);
        p_37_S00_AXI_rvalid->set_sv_netview_offsetfromdp(10613736);
        xsim_sc_channel<0, bool > *p_37_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_37->S00_AXI_rready.bind(*p_37_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_rready);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_37_M00_AXI_awaddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_37->M00_AXI_awaddr.bind(*p_37_M00_AXI_awaddr);
        p_37_M00_AXI_awaddr->set_sv_netview_offsetfromdp(10613848);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_37_M00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_37->M00_AXI_awlen.bind(*p_37_M00_AXI_awlen);
        p_37_M00_AXI_awlen->set_sv_netview_offsetfromdp(10613904);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_37_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_37->M00_AXI_awsize.bind(*p_37_M00_AXI_awsize);
        p_37_M00_AXI_awsize->set_sv_netview_offsetfromdp(10613960);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_37_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_37->M00_AXI_awburst.bind(*p_37_M00_AXI_awburst);
        p_37_M00_AXI_awburst->set_sv_netview_offsetfromdp(10614016);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_37_M00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_37->M00_AXI_awlock.bind(*p_37_M00_AXI_awlock);
        p_37_M00_AXI_awlock->set_sv_netview_offsetfromdp(10614072);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_37_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_37->M00_AXI_awcache.bind(*p_37_M00_AXI_awcache);
        p_37_M00_AXI_awcache->set_sv_netview_offsetfromdp(10614128);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_37_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_37->M00_AXI_awprot.bind(*p_37_M00_AXI_awprot);
        p_37_M00_AXI_awprot->set_sv_netview_offsetfromdp(10614184);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_37_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_37->M00_AXI_awqos.bind(*p_37_M00_AXI_awqos);
        p_37_M00_AXI_awqos->set_sv_netview_offsetfromdp(10614240);
        xsim_sc_channel<0, bool > *p_37_M00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_37->M00_AXI_awvalid.bind(*p_37_M00_AXI_awvalid);
        p_37_M00_AXI_awvalid->set_sv_netview_offsetfromdp(10614296);
        xsim_sc_channel<0, bool > *p_37_M00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_37->M00_AXI_awready.bind(*p_37_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_37_M00_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_37_M00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_37->M00_AXI_wdata.bind(*p_37_M00_AXI_wdata);
        p_37_M00_AXI_wdata->set_sv_netview_offsetfromdp(10614408);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_37_M00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_37->M00_AXI_wstrb.bind(*p_37_M00_AXI_wstrb);
        p_37_M00_AXI_wstrb->set_sv_netview_offsetfromdp(10614464);
        xsim_sc_channel<0, bool > *p_37_M00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_37->M00_AXI_wlast.bind(*p_37_M00_AXI_wlast);
        p_37_M00_AXI_wlast->set_sv_netview_offsetfromdp(10614520);
        xsim_sc_channel<0, bool > *p_37_M00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_37->M00_AXI_wvalid.bind(*p_37_M00_AXI_wvalid);
        p_37_M00_AXI_wvalid->set_sv_netview_offsetfromdp(10614576);
        xsim_sc_channel<0, bool > *p_37_M00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_37->M00_AXI_wready.bind(*p_37_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_37_M00_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_37_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_37->M00_AXI_bresp.bind(*p_37_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_37_M00_AXI_bresp);
        xsim_sc_channel<0, bool > *p_37_M00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_37->M00_AXI_bvalid.bind(*p_37_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_37_M00_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_37_M00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_37->M00_AXI_bready.bind(*p_37_M00_AXI_bready);
        p_37_M00_AXI_bready->set_sv_netview_offsetfromdp(10614800);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_37_M00_AXI_araddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_37->M00_AXI_araddr.bind(*p_37_M00_AXI_araddr);
        p_37_M00_AXI_araddr->set_sv_netview_offsetfromdp(10614856);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_37_M00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_37->M00_AXI_arlen.bind(*p_37_M00_AXI_arlen);
        p_37_M00_AXI_arlen->set_sv_netview_offsetfromdp(10614912);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_37_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_37->M00_AXI_arsize.bind(*p_37_M00_AXI_arsize);
        p_37_M00_AXI_arsize->set_sv_netview_offsetfromdp(10614968);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_37_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_37->M00_AXI_arburst.bind(*p_37_M00_AXI_arburst);
        p_37_M00_AXI_arburst->set_sv_netview_offsetfromdp(10615024);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_37_M00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_37->M00_AXI_arlock.bind(*p_37_M00_AXI_arlock);
        p_37_M00_AXI_arlock->set_sv_netview_offsetfromdp(10615080);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_37_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_37->M00_AXI_arcache.bind(*p_37_M00_AXI_arcache);
        p_37_M00_AXI_arcache->set_sv_netview_offsetfromdp(10615136);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_37_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_37->M00_AXI_arprot.bind(*p_37_M00_AXI_arprot);
        p_37_M00_AXI_arprot->set_sv_netview_offsetfromdp(10615192);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_37_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_37->M00_AXI_arqos.bind(*p_37_M00_AXI_arqos);
        p_37_M00_AXI_arqos->set_sv_netview_offsetfromdp(10615248);
        xsim_sc_channel<0, bool > *p_37_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_37->M00_AXI_arvalid.bind(*p_37_M00_AXI_arvalid);
        p_37_M00_AXI_arvalid->set_sv_netview_offsetfromdp(10615304);
        xsim_sc_channel<0, bool > *p_37_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_37->M00_AXI_arready.bind(*p_37_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_37_M00_AXI_arready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_37_M00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_37->M00_AXI_rdata.bind(*p_37_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_37_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_37_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_37->M00_AXI_rresp.bind(*p_37_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_37_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_37_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_37->M00_AXI_rlast.bind(*p_37_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_37_M00_AXI_rlast);
        xsim_sc_channel<0, bool > *p_37_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_37->M00_AXI_rvalid.bind(*p_37_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_37_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_37_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_37->M00_AXI_rready.bind(*p_37_M00_AXI_rready);
        p_37_M00_AXI_rready->set_sv_netview_offsetfromdp(10615640);
        sc_inst_38 = new bd_d216_interconnect_M00_AXI_MEM00_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.interconnect.interconnect_m00_axi_mem00");
        sc_inst_38->xsim_set_dbg_index(3208);
        xsim_sc_channel<0, bool > *p_38_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_38->aclk.bind(*p_38_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_38_aclk);
        xsim_sc_channel<0, bool > *p_38_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_38->aresetn.bind(*p_38_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_38_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_38_S00_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_38->S00_AXI_awid.bind(*p_38_S00_AXI_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_awid);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_38_S00_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_38->S00_AXI_awaddr.bind(*p_38_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_38_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_38->S00_AXI_awlen.bind(*p_38_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_38_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_38->S00_AXI_awsize.bind(*p_38_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_38_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_38->S00_AXI_awburst.bind(*p_38_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_38_S00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_38->S00_AXI_awlock.bind(*p_38_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_38_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_38->S00_AXI_awcache.bind(*p_38_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_38_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_38->S00_AXI_awprot.bind(*p_38_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_38_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_38->S00_AXI_awqos.bind(*p_38_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_awqos);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_38_S00_AXI_awuser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_38->S00_AXI_awuser.bind(*p_38_S00_AXI_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_awuser);
        xsim_sc_channel<0, bool > *p_38_S00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_38->S00_AXI_awvalid.bind(*p_38_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_38_S00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_38->S00_AXI_awready.bind(*p_38_S00_AXI_awready);
        p_38_S00_AXI_awready->set_sv_netview_offsetfromdp(10616472);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_38_S00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_38->S00_AXI_wdata.bind(*p_38_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_38_S00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_38->S00_AXI_wstrb.bind(*p_38_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_38_S00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_38->S00_AXI_wlast.bind(*p_38_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_wlast);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_38_S00_AXI_wuser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_38->S00_AXI_wuser.bind(*p_38_S00_AXI_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_wuser);
        xsim_sc_channel<0, bool > *p_38_S00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_38->S00_AXI_wvalid.bind(*p_38_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_38_S00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_38->S00_AXI_wready.bind(*p_38_S00_AXI_wready);
        p_38_S00_AXI_wready->set_sv_netview_offsetfromdp(10616808);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_38_S00_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_38->S00_AXI_bid.bind(*p_38_S00_AXI_bid);
        p_38_S00_AXI_bid->set_sv_netview_offsetfromdp(10616864);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_38_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_38->S00_AXI_bresp.bind(*p_38_S00_AXI_bresp);
        p_38_S00_AXI_bresp->set_sv_netview_offsetfromdp(10616920);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_38_S00_AXI_buser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_38->S00_AXI_buser.bind(*p_38_S00_AXI_buser);
        p_38_S00_AXI_buser->set_sv_netview_offsetfromdp(10616976);
        xsim_sc_channel<0, bool > *p_38_S00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_38->S00_AXI_bvalid.bind(*p_38_S00_AXI_bvalid);
        p_38_S00_AXI_bvalid->set_sv_netview_offsetfromdp(10617032);
        xsim_sc_channel<0, bool > *p_38_S00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_38->S00_AXI_bready.bind(*p_38_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_38_S00_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_38->S00_AXI_arid.bind(*p_38_S00_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_arid);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_38_S00_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_38->S00_AXI_araddr.bind(*p_38_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_38_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_38->S00_AXI_arlen.bind(*p_38_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_38_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_38->S00_AXI_arsize.bind(*p_38_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_38_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_38->S00_AXI_arburst.bind(*p_38_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_38_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_38->S00_AXI_arlock.bind(*p_38_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_38_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_38->S00_AXI_arcache.bind(*p_38_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_38_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_38->S00_AXI_arprot.bind(*p_38_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_38_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_38->S00_AXI_arqos.bind(*p_38_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_arqos);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_38_S00_AXI_aruser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_38->S00_AXI_aruser.bind(*p_38_S00_AXI_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_aruser);
        xsim_sc_channel<0, bool > *p_38_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_38->S00_AXI_arvalid.bind(*p_38_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_38_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_38->S00_AXI_arready.bind(*p_38_S00_AXI_arready);
        p_38_S00_AXI_arready->set_sv_netview_offsetfromdp(10617760);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_38_S00_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_38->S00_AXI_rid.bind(*p_38_S00_AXI_rid);
        p_38_S00_AXI_rid->set_sv_netview_offsetfromdp(10617816);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_38_S00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_38->S00_AXI_rdata.bind(*p_38_S00_AXI_rdata);
        p_38_S00_AXI_rdata->set_sv_netview_offsetfromdp(10617872);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_38_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_38->S00_AXI_rresp.bind(*p_38_S00_AXI_rresp);
        p_38_S00_AXI_rresp->set_sv_netview_offsetfromdp(10617928);
        xsim_sc_channel<0, bool > *p_38_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_38->S00_AXI_rlast.bind(*p_38_S00_AXI_rlast);
        p_38_S00_AXI_rlast->set_sv_netview_offsetfromdp(10617984);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_38_S00_AXI_ruser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_38->S00_AXI_ruser.bind(*p_38_S00_AXI_ruser);
        p_38_S00_AXI_ruser->set_sv_netview_offsetfromdp(10618040);
        xsim_sc_channel<0, bool > *p_38_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_38->S00_AXI_rvalid.bind(*p_38_S00_AXI_rvalid);
        p_38_S00_AXI_rvalid->set_sv_netview_offsetfromdp(10618096);
        xsim_sc_channel<0, bool > *p_38_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_38->S00_AXI_rready.bind(*p_38_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_rready);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_38_M00_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_38->M00_AXI_awaddr.bind(*p_38_M00_AXI_awaddr);
        p_38_M00_AXI_awaddr->set_sv_netview_offsetfromdp(10618208);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_38_M00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_38->M00_AXI_awlen.bind(*p_38_M00_AXI_awlen);
        p_38_M00_AXI_awlen->set_sv_netview_offsetfromdp(10618264);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_38_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_38->M00_AXI_awsize.bind(*p_38_M00_AXI_awsize);
        p_38_M00_AXI_awsize->set_sv_netview_offsetfromdp(10618320);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_38_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_38->M00_AXI_awburst.bind(*p_38_M00_AXI_awburst);
        p_38_M00_AXI_awburst->set_sv_netview_offsetfromdp(10618376);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_38_M00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_38->M00_AXI_awlock.bind(*p_38_M00_AXI_awlock);
        p_38_M00_AXI_awlock->set_sv_netview_offsetfromdp(10618432);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_38_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_38->M00_AXI_awcache.bind(*p_38_M00_AXI_awcache);
        p_38_M00_AXI_awcache->set_sv_netview_offsetfromdp(10618488);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_38_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_38->M00_AXI_awprot.bind(*p_38_M00_AXI_awprot);
        p_38_M00_AXI_awprot->set_sv_netview_offsetfromdp(10618544);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_38_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_38->M00_AXI_awqos.bind(*p_38_M00_AXI_awqos);
        p_38_M00_AXI_awqos->set_sv_netview_offsetfromdp(10618600);
        xsim_sc_channel<0, bool > *p_38_M00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_38->M00_AXI_awvalid.bind(*p_38_M00_AXI_awvalid);
        p_38_M00_AXI_awvalid->set_sv_netview_offsetfromdp(10618656);
        xsim_sc_channel<0, bool > *p_38_M00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_38->M00_AXI_awready.bind(*p_38_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M00_AXI_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_38_M00_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_38->M00_AXI_wdata.bind(*p_38_M00_AXI_wdata);
        p_38_M00_AXI_wdata->set_sv_netview_offsetfromdp(10618768);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_38_M00_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_38->M00_AXI_wstrb.bind(*p_38_M00_AXI_wstrb);
        p_38_M00_AXI_wstrb->set_sv_netview_offsetfromdp(10618824);
        xsim_sc_channel<0, bool > *p_38_M00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_38->M00_AXI_wlast.bind(*p_38_M00_AXI_wlast);
        p_38_M00_AXI_wlast->set_sv_netview_offsetfromdp(10618880);
        xsim_sc_channel<0, bool > *p_38_M00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_38->M00_AXI_wvalid.bind(*p_38_M00_AXI_wvalid);
        p_38_M00_AXI_wvalid->set_sv_netview_offsetfromdp(10618936);
        xsim_sc_channel<0, bool > *p_38_M00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_38->M00_AXI_wready.bind(*p_38_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M00_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_38_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_38->M00_AXI_bresp.bind(*p_38_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M00_AXI_bresp);
        xsim_sc_channel<0, bool > *p_38_M00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_38->M00_AXI_bvalid.bind(*p_38_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M00_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_38_M00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_38->M00_AXI_bready.bind(*p_38_M00_AXI_bready);
        p_38_M00_AXI_bready->set_sv_netview_offsetfromdp(10619160);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_38_M00_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_38->M00_AXI_araddr.bind(*p_38_M00_AXI_araddr);
        p_38_M00_AXI_araddr->set_sv_netview_offsetfromdp(10619216);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_38_M00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_38->M00_AXI_arlen.bind(*p_38_M00_AXI_arlen);
        p_38_M00_AXI_arlen->set_sv_netview_offsetfromdp(10619272);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_38_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_38->M00_AXI_arsize.bind(*p_38_M00_AXI_arsize);
        p_38_M00_AXI_arsize->set_sv_netview_offsetfromdp(10619328);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_38_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_38->M00_AXI_arburst.bind(*p_38_M00_AXI_arburst);
        p_38_M00_AXI_arburst->set_sv_netview_offsetfromdp(10619384);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_38_M00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_38->M00_AXI_arlock.bind(*p_38_M00_AXI_arlock);
        p_38_M00_AXI_arlock->set_sv_netview_offsetfromdp(10619440);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_38_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_38->M00_AXI_arcache.bind(*p_38_M00_AXI_arcache);
        p_38_M00_AXI_arcache->set_sv_netview_offsetfromdp(10619496);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_38_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_38->M00_AXI_arprot.bind(*p_38_M00_AXI_arprot);
        p_38_M00_AXI_arprot->set_sv_netview_offsetfromdp(10619552);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_38_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_38->M00_AXI_arqos.bind(*p_38_M00_AXI_arqos);
        p_38_M00_AXI_arqos->set_sv_netview_offsetfromdp(10619608);
        xsim_sc_channel<0, bool > *p_38_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_38->M00_AXI_arvalid.bind(*p_38_M00_AXI_arvalid);
        p_38_M00_AXI_arvalid->set_sv_netview_offsetfromdp(10619664);
        xsim_sc_channel<0, bool > *p_38_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_38->M00_AXI_arready.bind(*p_38_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M00_AXI_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_38_M00_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_38->M00_AXI_rdata.bind(*p_38_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_38_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_38->M00_AXI_rresp.bind(*p_38_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_38_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_38->M00_AXI_rlast.bind(*p_38_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M00_AXI_rlast);
        xsim_sc_channel<0, bool > *p_38_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_38->M00_AXI_rvalid.bind(*p_38_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_38_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_38->M00_AXI_rready.bind(*p_38_M00_AXI_rready);
        p_38_M00_AXI_rready->set_sv_netview_offsetfromdp(10620000);
        sc_inst_39 = new bd_d216_interconnect_PLRAM_MEM00_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.interconnect.interconnect_plram_mem00");
        sc_inst_39->xsim_set_dbg_index(3209);
        xsim_sc_channel<0, bool > *p_39_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_39->aclk.bind(*p_39_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_39_aclk);
        xsim_sc_channel<0, bool > *p_39_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_39->aresetn.bind(*p_39_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_39_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_39_S00_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_39->S00_AXI_awid.bind(*p_39_S00_AXI_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_awid);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_39_S00_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_39->S00_AXI_awaddr.bind(*p_39_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_39_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_39->S00_AXI_awlen.bind(*p_39_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_39_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_39->S00_AXI_awsize.bind(*p_39_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_39_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_39->S00_AXI_awburst.bind(*p_39_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_39_S00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_39->S00_AXI_awlock.bind(*p_39_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_39_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_39->S00_AXI_awcache.bind(*p_39_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_39_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_39->S00_AXI_awprot.bind(*p_39_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_39_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_39->S00_AXI_awqos.bind(*p_39_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_awqos);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_39_S00_AXI_awuser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_39->S00_AXI_awuser.bind(*p_39_S00_AXI_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_awuser);
        xsim_sc_channel<0, bool > *p_39_S00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->S00_AXI_awvalid.bind(*p_39_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_39_S00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_39->S00_AXI_awready.bind(*p_39_S00_AXI_awready);
        p_39_S00_AXI_awready->set_sv_netview_offsetfromdp(10620832);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_39_S00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_39->S00_AXI_wdata.bind(*p_39_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_39_S00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_39->S00_AXI_wstrb.bind(*p_39_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_39_S00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_39->S00_AXI_wlast.bind(*p_39_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_wlast);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_39_S00_AXI_wuser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_39->S00_AXI_wuser.bind(*p_39_S00_AXI_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_wuser);
        xsim_sc_channel<0, bool > *p_39_S00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->S00_AXI_wvalid.bind(*p_39_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_39_S00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_39->S00_AXI_wready.bind(*p_39_S00_AXI_wready);
        p_39_S00_AXI_wready->set_sv_netview_offsetfromdp(10621168);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_39_S00_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_39->S00_AXI_bid.bind(*p_39_S00_AXI_bid);
        p_39_S00_AXI_bid->set_sv_netview_offsetfromdp(10621224);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_39_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_39->S00_AXI_bresp.bind(*p_39_S00_AXI_bresp);
        p_39_S00_AXI_bresp->set_sv_netview_offsetfromdp(10621280);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_39_S00_AXI_buser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_39->S00_AXI_buser.bind(*p_39_S00_AXI_buser);
        p_39_S00_AXI_buser->set_sv_netview_offsetfromdp(10621336);
        xsim_sc_channel<0, bool > *p_39_S00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->S00_AXI_bvalid.bind(*p_39_S00_AXI_bvalid);
        p_39_S00_AXI_bvalid->set_sv_netview_offsetfromdp(10621392);
        xsim_sc_channel<0, bool > *p_39_S00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_39->S00_AXI_bready.bind(*p_39_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_39_S00_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_39->S00_AXI_arid.bind(*p_39_S00_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_arid);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_39_S00_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_39->S00_AXI_araddr.bind(*p_39_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_39_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_39->S00_AXI_arlen.bind(*p_39_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_39_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_39->S00_AXI_arsize.bind(*p_39_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_39_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_39->S00_AXI_arburst.bind(*p_39_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_39_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_39->S00_AXI_arlock.bind(*p_39_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_39_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_39->S00_AXI_arcache.bind(*p_39_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_39_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_39->S00_AXI_arprot.bind(*p_39_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_39_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_39->S00_AXI_arqos.bind(*p_39_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_arqos);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_39_S00_AXI_aruser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_39->S00_AXI_aruser.bind(*p_39_S00_AXI_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_aruser);
        xsim_sc_channel<0, bool > *p_39_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->S00_AXI_arvalid.bind(*p_39_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_39_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_39->S00_AXI_arready.bind(*p_39_S00_AXI_arready);
        p_39_S00_AXI_arready->set_sv_netview_offsetfromdp(10622120);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_39_S00_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_39->S00_AXI_rid.bind(*p_39_S00_AXI_rid);
        p_39_S00_AXI_rid->set_sv_netview_offsetfromdp(10622176);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_39_S00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_39->S00_AXI_rdata.bind(*p_39_S00_AXI_rdata);
        p_39_S00_AXI_rdata->set_sv_netview_offsetfromdp(10622232);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_39_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_39->S00_AXI_rresp.bind(*p_39_S00_AXI_rresp);
        p_39_S00_AXI_rresp->set_sv_netview_offsetfromdp(10622288);
        xsim_sc_channel<0, bool > *p_39_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_39->S00_AXI_rlast.bind(*p_39_S00_AXI_rlast);
        p_39_S00_AXI_rlast->set_sv_netview_offsetfromdp(10622344);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_39_S00_AXI_ruser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_39->S00_AXI_ruser.bind(*p_39_S00_AXI_ruser);
        p_39_S00_AXI_ruser->set_sv_netview_offsetfromdp(10622400);
        xsim_sc_channel<0, bool > *p_39_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->S00_AXI_rvalid.bind(*p_39_S00_AXI_rvalid);
        p_39_S00_AXI_rvalid->set_sv_netview_offsetfromdp(10622456);
        xsim_sc_channel<0, bool > *p_39_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_39->S00_AXI_rready.bind(*p_39_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_rready);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_39_M00_AXI_awaddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_39->M00_AXI_awaddr.bind(*p_39_M00_AXI_awaddr);
        p_39_M00_AXI_awaddr->set_sv_netview_offsetfromdp(10622568);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_39_M00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_39->M00_AXI_awlen.bind(*p_39_M00_AXI_awlen);
        p_39_M00_AXI_awlen->set_sv_netview_offsetfromdp(10622624);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_39_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_39->M00_AXI_awsize.bind(*p_39_M00_AXI_awsize);
        p_39_M00_AXI_awsize->set_sv_netview_offsetfromdp(10622680);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_39_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_39->M00_AXI_awburst.bind(*p_39_M00_AXI_awburst);
        p_39_M00_AXI_awburst->set_sv_netview_offsetfromdp(10622736);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_39_M00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_39->M00_AXI_awlock.bind(*p_39_M00_AXI_awlock);
        p_39_M00_AXI_awlock->set_sv_netview_offsetfromdp(10622792);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_39_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_39->M00_AXI_awcache.bind(*p_39_M00_AXI_awcache);
        p_39_M00_AXI_awcache->set_sv_netview_offsetfromdp(10622848);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_39_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_39->M00_AXI_awprot.bind(*p_39_M00_AXI_awprot);
        p_39_M00_AXI_awprot->set_sv_netview_offsetfromdp(10622904);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_39_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_39->M00_AXI_awqos.bind(*p_39_M00_AXI_awqos);
        p_39_M00_AXI_awqos->set_sv_netview_offsetfromdp(10622960);
        xsim_sc_channel<0, bool > *p_39_M00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->M00_AXI_awvalid.bind(*p_39_M00_AXI_awvalid);
        p_39_M00_AXI_awvalid->set_sv_netview_offsetfromdp(10623016);
        xsim_sc_channel<0, bool > *p_39_M00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_39->M00_AXI_awready.bind(*p_39_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M00_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_39_M00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_39->M00_AXI_wdata.bind(*p_39_M00_AXI_wdata);
        p_39_M00_AXI_wdata->set_sv_netview_offsetfromdp(10623128);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_39_M00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_39->M00_AXI_wstrb.bind(*p_39_M00_AXI_wstrb);
        p_39_M00_AXI_wstrb->set_sv_netview_offsetfromdp(10623184);
        xsim_sc_channel<0, bool > *p_39_M00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_39->M00_AXI_wlast.bind(*p_39_M00_AXI_wlast);
        p_39_M00_AXI_wlast->set_sv_netview_offsetfromdp(10623240);
        xsim_sc_channel<0, bool > *p_39_M00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->M00_AXI_wvalid.bind(*p_39_M00_AXI_wvalid);
        p_39_M00_AXI_wvalid->set_sv_netview_offsetfromdp(10623296);
        xsim_sc_channel<0, bool > *p_39_M00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_39->M00_AXI_wready.bind(*p_39_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M00_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_39_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_39->M00_AXI_bresp.bind(*p_39_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M00_AXI_bresp);
        xsim_sc_channel<0, bool > *p_39_M00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->M00_AXI_bvalid.bind(*p_39_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M00_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_39_M00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_39->M00_AXI_bready.bind(*p_39_M00_AXI_bready);
        p_39_M00_AXI_bready->set_sv_netview_offsetfromdp(10623520);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_39_M00_AXI_araddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_39->M00_AXI_araddr.bind(*p_39_M00_AXI_araddr);
        p_39_M00_AXI_araddr->set_sv_netview_offsetfromdp(10623576);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_39_M00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_39->M00_AXI_arlen.bind(*p_39_M00_AXI_arlen);
        p_39_M00_AXI_arlen->set_sv_netview_offsetfromdp(10623632);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_39_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_39->M00_AXI_arsize.bind(*p_39_M00_AXI_arsize);
        p_39_M00_AXI_arsize->set_sv_netview_offsetfromdp(10623688);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_39_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_39->M00_AXI_arburst.bind(*p_39_M00_AXI_arburst);
        p_39_M00_AXI_arburst->set_sv_netview_offsetfromdp(10623744);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_39_M00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_39->M00_AXI_arlock.bind(*p_39_M00_AXI_arlock);
        p_39_M00_AXI_arlock->set_sv_netview_offsetfromdp(10623800);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_39_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_39->M00_AXI_arcache.bind(*p_39_M00_AXI_arcache);
        p_39_M00_AXI_arcache->set_sv_netview_offsetfromdp(10623856);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_39_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_39->M00_AXI_arprot.bind(*p_39_M00_AXI_arprot);
        p_39_M00_AXI_arprot->set_sv_netview_offsetfromdp(10623912);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_39_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_39->M00_AXI_arqos.bind(*p_39_M00_AXI_arqos);
        p_39_M00_AXI_arqos->set_sv_netview_offsetfromdp(10623968);
        xsim_sc_channel<0, bool > *p_39_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->M00_AXI_arvalid.bind(*p_39_M00_AXI_arvalid);
        p_39_M00_AXI_arvalid->set_sv_netview_offsetfromdp(10624024);
        xsim_sc_channel<0, bool > *p_39_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_39->M00_AXI_arready.bind(*p_39_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M00_AXI_arready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_39_M00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_39->M00_AXI_rdata.bind(*p_39_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_39_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_39->M00_AXI_rresp.bind(*p_39_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_39_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_39->M00_AXI_rlast.bind(*p_39_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M00_AXI_rlast);
        xsim_sc_channel<0, bool > *p_39_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->M00_AXI_rvalid.bind(*p_39_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_39_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_39->M00_AXI_rready.bind(*p_39_M00_AXI_rready);
        p_39_M00_AXI_rready->set_sv_netview_offsetfromdp(10624360);
        sc_inst_40 = new bd_d216_interconnect_PLRAM_MEM01_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.interconnect.interconnect_plram_mem01");
        sc_inst_40->xsim_set_dbg_index(3210);
        xsim_sc_channel<0, bool > *p_40_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_40->aclk.bind(*p_40_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_40_aclk);
        xsim_sc_channel<0, bool > *p_40_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_40->aresetn.bind(*p_40_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_40_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_40_S00_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_40->S00_AXI_awid.bind(*p_40_S00_AXI_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_40_S00_AXI_awid);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_40_S00_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_40->S00_AXI_awaddr.bind(*p_40_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_40_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_40_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_40->S00_AXI_awlen.bind(*p_40_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_40_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_40_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_40->S00_AXI_awsize.bind(*p_40_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_40_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_40_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_40->S00_AXI_awburst.bind(*p_40_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_40_S00_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_40_S00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_40->S00_AXI_awlock.bind(*p_40_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_40_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_40_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_40->S00_AXI_awcache.bind(*p_40_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_40_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_40_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_40->S00_AXI_awprot.bind(*p_40_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_40_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_40_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_40->S00_AXI_awqos.bind(*p_40_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_40_S00_AXI_awqos);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_40_S00_AXI_awuser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_40->S00_AXI_awuser.bind(*p_40_S00_AXI_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_40_S00_AXI_awuser);
        xsim_sc_channel<0, bool > *p_40_S00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_40->S00_AXI_awvalid.bind(*p_40_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_40_S00_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_40_S00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_40->S00_AXI_awready.bind(*p_40_S00_AXI_awready);
        p_40_S00_AXI_awready->set_sv_netview_offsetfromdp(10625192);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_40_S00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_40->S00_AXI_wdata.bind(*p_40_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_40_S00_AXI_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_40_S00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_40->S00_AXI_wstrb.bind(*p_40_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_40_S00_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_40_S00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_40->S00_AXI_wlast.bind(*p_40_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_40_S00_AXI_wlast);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_40_S00_AXI_wuser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_40->S00_AXI_wuser.bind(*p_40_S00_AXI_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_40_S00_AXI_wuser);
        xsim_sc_channel<0, bool > *p_40_S00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_40->S00_AXI_wvalid.bind(*p_40_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_40_S00_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_40_S00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_40->S00_AXI_wready.bind(*p_40_S00_AXI_wready);
        p_40_S00_AXI_wready->set_sv_netview_offsetfromdp(10625528);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_40_S00_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_40->S00_AXI_bid.bind(*p_40_S00_AXI_bid);
        p_40_S00_AXI_bid->set_sv_netview_offsetfromdp(10625584);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_40_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_40->S00_AXI_bresp.bind(*p_40_S00_AXI_bresp);
        p_40_S00_AXI_bresp->set_sv_netview_offsetfromdp(10625640);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_40_S00_AXI_buser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_40->S00_AXI_buser.bind(*p_40_S00_AXI_buser);
        p_40_S00_AXI_buser->set_sv_netview_offsetfromdp(10625696);
        xsim_sc_channel<0, bool > *p_40_S00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_40->S00_AXI_bvalid.bind(*p_40_S00_AXI_bvalid);
        p_40_S00_AXI_bvalid->set_sv_netview_offsetfromdp(10625752);
        xsim_sc_channel<0, bool > *p_40_S00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_40->S00_AXI_bready.bind(*p_40_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_40_S00_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_40_S00_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_40->S00_AXI_arid.bind(*p_40_S00_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_40_S00_AXI_arid);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_40_S00_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_40->S00_AXI_araddr.bind(*p_40_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_40_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_40_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_40->S00_AXI_arlen.bind(*p_40_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_40_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_40_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_40->S00_AXI_arsize.bind(*p_40_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_40_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_40_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_40->S00_AXI_arburst.bind(*p_40_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_40_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_40_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_40->S00_AXI_arlock.bind(*p_40_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_40_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_40_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_40->S00_AXI_arcache.bind(*p_40_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_40_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_40_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_40->S00_AXI_arprot.bind(*p_40_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_40_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_40_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_40->S00_AXI_arqos.bind(*p_40_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_40_S00_AXI_arqos);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_40_S00_AXI_aruser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_40->S00_AXI_aruser.bind(*p_40_S00_AXI_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_40_S00_AXI_aruser);
        xsim_sc_channel<0, bool > *p_40_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_40->S00_AXI_arvalid.bind(*p_40_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_40_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_40_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_40->S00_AXI_arready.bind(*p_40_S00_AXI_arready);
        p_40_S00_AXI_arready->set_sv_netview_offsetfromdp(10626480);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_40_S00_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_40->S00_AXI_rid.bind(*p_40_S00_AXI_rid);
        p_40_S00_AXI_rid->set_sv_netview_offsetfromdp(10626536);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_40_S00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_40->S00_AXI_rdata.bind(*p_40_S00_AXI_rdata);
        p_40_S00_AXI_rdata->set_sv_netview_offsetfromdp(10626592);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_40_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_40->S00_AXI_rresp.bind(*p_40_S00_AXI_rresp);
        p_40_S00_AXI_rresp->set_sv_netview_offsetfromdp(10626648);
        xsim_sc_channel<0, bool > *p_40_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_40->S00_AXI_rlast.bind(*p_40_S00_AXI_rlast);
        p_40_S00_AXI_rlast->set_sv_netview_offsetfromdp(10626704);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_40_S00_AXI_ruser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_40->S00_AXI_ruser.bind(*p_40_S00_AXI_ruser);
        p_40_S00_AXI_ruser->set_sv_netview_offsetfromdp(10626760);
        xsim_sc_channel<0, bool > *p_40_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_40->S00_AXI_rvalid.bind(*p_40_S00_AXI_rvalid);
        p_40_S00_AXI_rvalid->set_sv_netview_offsetfromdp(10626816);
        xsim_sc_channel<0, bool > *p_40_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_40->S00_AXI_rready.bind(*p_40_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_40_S00_AXI_rready);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_40_M00_AXI_awaddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_40->M00_AXI_awaddr.bind(*p_40_M00_AXI_awaddr);
        p_40_M00_AXI_awaddr->set_sv_netview_offsetfromdp(10626928);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_40_M00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_40->M00_AXI_awlen.bind(*p_40_M00_AXI_awlen);
        p_40_M00_AXI_awlen->set_sv_netview_offsetfromdp(10626984);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_40_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_40->M00_AXI_awsize.bind(*p_40_M00_AXI_awsize);
        p_40_M00_AXI_awsize->set_sv_netview_offsetfromdp(10627040);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_40_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_40->M00_AXI_awburst.bind(*p_40_M00_AXI_awburst);
        p_40_M00_AXI_awburst->set_sv_netview_offsetfromdp(10627096);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_40_M00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_40->M00_AXI_awlock.bind(*p_40_M00_AXI_awlock);
        p_40_M00_AXI_awlock->set_sv_netview_offsetfromdp(10627152);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_40_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_40->M00_AXI_awcache.bind(*p_40_M00_AXI_awcache);
        p_40_M00_AXI_awcache->set_sv_netview_offsetfromdp(10627208);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_40_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_40->M00_AXI_awprot.bind(*p_40_M00_AXI_awprot);
        p_40_M00_AXI_awprot->set_sv_netview_offsetfromdp(10627264);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_40_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_40->M00_AXI_awqos.bind(*p_40_M00_AXI_awqos);
        p_40_M00_AXI_awqos->set_sv_netview_offsetfromdp(10627320);
        xsim_sc_channel<0, bool > *p_40_M00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_40->M00_AXI_awvalid.bind(*p_40_M00_AXI_awvalid);
        p_40_M00_AXI_awvalid->set_sv_netview_offsetfromdp(10627376);
        xsim_sc_channel<0, bool > *p_40_M00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_40->M00_AXI_awready.bind(*p_40_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_40_M00_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_40_M00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_40->M00_AXI_wdata.bind(*p_40_M00_AXI_wdata);
        p_40_M00_AXI_wdata->set_sv_netview_offsetfromdp(10627488);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_40_M00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_40->M00_AXI_wstrb.bind(*p_40_M00_AXI_wstrb);
        p_40_M00_AXI_wstrb->set_sv_netview_offsetfromdp(10627544);
        xsim_sc_channel<0, bool > *p_40_M00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_40->M00_AXI_wlast.bind(*p_40_M00_AXI_wlast);
        p_40_M00_AXI_wlast->set_sv_netview_offsetfromdp(10627600);
        xsim_sc_channel<0, bool > *p_40_M00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_40->M00_AXI_wvalid.bind(*p_40_M00_AXI_wvalid);
        p_40_M00_AXI_wvalid->set_sv_netview_offsetfromdp(10627656);
        xsim_sc_channel<0, bool > *p_40_M00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_40->M00_AXI_wready.bind(*p_40_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_40_M00_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_40_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_40->M00_AXI_bresp.bind(*p_40_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_40_M00_AXI_bresp);
        xsim_sc_channel<0, bool > *p_40_M00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_40->M00_AXI_bvalid.bind(*p_40_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_40_M00_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_40_M00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_40->M00_AXI_bready.bind(*p_40_M00_AXI_bready);
        p_40_M00_AXI_bready->set_sv_netview_offsetfromdp(10627880);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_40_M00_AXI_araddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_40->M00_AXI_araddr.bind(*p_40_M00_AXI_araddr);
        p_40_M00_AXI_araddr->set_sv_netview_offsetfromdp(10627936);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_40_M00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_40->M00_AXI_arlen.bind(*p_40_M00_AXI_arlen);
        p_40_M00_AXI_arlen->set_sv_netview_offsetfromdp(10627992);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_40_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_40->M00_AXI_arsize.bind(*p_40_M00_AXI_arsize);
        p_40_M00_AXI_arsize->set_sv_netview_offsetfromdp(10628048);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_40_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_40->M00_AXI_arburst.bind(*p_40_M00_AXI_arburst);
        p_40_M00_AXI_arburst->set_sv_netview_offsetfromdp(10628104);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_40_M00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_40->M00_AXI_arlock.bind(*p_40_M00_AXI_arlock);
        p_40_M00_AXI_arlock->set_sv_netview_offsetfromdp(10628160);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_40_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_40->M00_AXI_arcache.bind(*p_40_M00_AXI_arcache);
        p_40_M00_AXI_arcache->set_sv_netview_offsetfromdp(10628216);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_40_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_40->M00_AXI_arprot.bind(*p_40_M00_AXI_arprot);
        p_40_M00_AXI_arprot->set_sv_netview_offsetfromdp(10628272);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_40_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_40->M00_AXI_arqos.bind(*p_40_M00_AXI_arqos);
        p_40_M00_AXI_arqos->set_sv_netview_offsetfromdp(10628328);
        xsim_sc_channel<0, bool > *p_40_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_40->M00_AXI_arvalid.bind(*p_40_M00_AXI_arvalid);
        p_40_M00_AXI_arvalid->set_sv_netview_offsetfromdp(10628384);
        xsim_sc_channel<0, bool > *p_40_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_40->M00_AXI_arready.bind(*p_40_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_40_M00_AXI_arready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_40_M00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_40->M00_AXI_rdata.bind(*p_40_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_40_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_40_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_40->M00_AXI_rresp.bind(*p_40_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_40_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_40_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_40->M00_AXI_rlast.bind(*p_40_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_40_M00_AXI_rlast);
        xsim_sc_channel<0, bool > *p_40_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_40->M00_AXI_rvalid.bind(*p_40_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_40_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_40_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_40->M00_AXI_rready.bind(*p_40_M00_AXI_rready);
        p_40_M00_AXI_rready->set_sv_netview_offsetfromdp(10628720);
        sc_inst_41 = new bd_d216_interconnect_PLRAM_MEM02_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.interconnect.interconnect_plram_mem02");
        sc_inst_41->xsim_set_dbg_index(3211);
        xsim_sc_channel<0, bool > *p_41_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_41->aclk.bind(*p_41_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_41_aclk);
        xsim_sc_channel<0, bool > *p_41_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_41->aresetn.bind(*p_41_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_41_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_41_S00_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_41->S00_AXI_awid.bind(*p_41_S00_AXI_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_41_S00_AXI_awid);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_41_S00_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_41->S00_AXI_awaddr.bind(*p_41_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_41_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_41_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_41->S00_AXI_awlen.bind(*p_41_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_41_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_41_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_41->S00_AXI_awsize.bind(*p_41_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_41_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_41_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_41->S00_AXI_awburst.bind(*p_41_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_41_S00_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_41_S00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_41->S00_AXI_awlock.bind(*p_41_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_41_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_41_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_41->S00_AXI_awcache.bind(*p_41_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_41_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_41_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_41->S00_AXI_awprot.bind(*p_41_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_41_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_41_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_41->S00_AXI_awqos.bind(*p_41_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_41_S00_AXI_awqos);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_41_S00_AXI_awuser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_41->S00_AXI_awuser.bind(*p_41_S00_AXI_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_41_S00_AXI_awuser);
        xsim_sc_channel<0, bool > *p_41_S00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_41->S00_AXI_awvalid.bind(*p_41_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_41_S00_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_41_S00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_41->S00_AXI_awready.bind(*p_41_S00_AXI_awready);
        p_41_S00_AXI_awready->set_sv_netview_offsetfromdp(10629552);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_41_S00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_41->S00_AXI_wdata.bind(*p_41_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_41_S00_AXI_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_41_S00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_41->S00_AXI_wstrb.bind(*p_41_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_41_S00_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_41_S00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_41->S00_AXI_wlast.bind(*p_41_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_41_S00_AXI_wlast);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_41_S00_AXI_wuser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_41->S00_AXI_wuser.bind(*p_41_S00_AXI_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_41_S00_AXI_wuser);
        xsim_sc_channel<0, bool > *p_41_S00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_41->S00_AXI_wvalid.bind(*p_41_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_41_S00_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_41_S00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_41->S00_AXI_wready.bind(*p_41_S00_AXI_wready);
        p_41_S00_AXI_wready->set_sv_netview_offsetfromdp(10629888);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_41_S00_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_41->S00_AXI_bid.bind(*p_41_S00_AXI_bid);
        p_41_S00_AXI_bid->set_sv_netview_offsetfromdp(10629944);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_41_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_41->S00_AXI_bresp.bind(*p_41_S00_AXI_bresp);
        p_41_S00_AXI_bresp->set_sv_netview_offsetfromdp(10630000);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_41_S00_AXI_buser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_41->S00_AXI_buser.bind(*p_41_S00_AXI_buser);
        p_41_S00_AXI_buser->set_sv_netview_offsetfromdp(10630056);
        xsim_sc_channel<0, bool > *p_41_S00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_41->S00_AXI_bvalid.bind(*p_41_S00_AXI_bvalid);
        p_41_S00_AXI_bvalid->set_sv_netview_offsetfromdp(10630112);
        xsim_sc_channel<0, bool > *p_41_S00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_41->S00_AXI_bready.bind(*p_41_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_41_S00_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_41_S00_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_41->S00_AXI_arid.bind(*p_41_S00_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_41_S00_AXI_arid);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_41_S00_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_41->S00_AXI_araddr.bind(*p_41_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_41_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_41_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_41->S00_AXI_arlen.bind(*p_41_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_41_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_41_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_41->S00_AXI_arsize.bind(*p_41_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_41_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_41_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_41->S00_AXI_arburst.bind(*p_41_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_41_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_41_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_41->S00_AXI_arlock.bind(*p_41_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_41_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_41_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_41->S00_AXI_arcache.bind(*p_41_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_41_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_41_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_41->S00_AXI_arprot.bind(*p_41_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_41_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_41_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_41->S00_AXI_arqos.bind(*p_41_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_41_S00_AXI_arqos);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_41_S00_AXI_aruser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_41->S00_AXI_aruser.bind(*p_41_S00_AXI_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_41_S00_AXI_aruser);
        xsim_sc_channel<0, bool > *p_41_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_41->S00_AXI_arvalid.bind(*p_41_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_41_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_41_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_41->S00_AXI_arready.bind(*p_41_S00_AXI_arready);
        p_41_S00_AXI_arready->set_sv_netview_offsetfromdp(10630840);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_41_S00_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_41->S00_AXI_rid.bind(*p_41_S00_AXI_rid);
        p_41_S00_AXI_rid->set_sv_netview_offsetfromdp(10630896);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_41_S00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_41->S00_AXI_rdata.bind(*p_41_S00_AXI_rdata);
        p_41_S00_AXI_rdata->set_sv_netview_offsetfromdp(10630952);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_41_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_41->S00_AXI_rresp.bind(*p_41_S00_AXI_rresp);
        p_41_S00_AXI_rresp->set_sv_netview_offsetfromdp(10631008);
        xsim_sc_channel<0, bool > *p_41_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_41->S00_AXI_rlast.bind(*p_41_S00_AXI_rlast);
        p_41_S00_AXI_rlast->set_sv_netview_offsetfromdp(10631064);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_41_S00_AXI_ruser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_41->S00_AXI_ruser.bind(*p_41_S00_AXI_ruser);
        p_41_S00_AXI_ruser->set_sv_netview_offsetfromdp(10631120);
        xsim_sc_channel<0, bool > *p_41_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_41->S00_AXI_rvalid.bind(*p_41_S00_AXI_rvalid);
        p_41_S00_AXI_rvalid->set_sv_netview_offsetfromdp(10631176);
        xsim_sc_channel<0, bool > *p_41_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_41->S00_AXI_rready.bind(*p_41_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_41_S00_AXI_rready);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_41_M00_AXI_awaddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_41->M00_AXI_awaddr.bind(*p_41_M00_AXI_awaddr);
        p_41_M00_AXI_awaddr->set_sv_netview_offsetfromdp(10631288);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_41_M00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_41->M00_AXI_awlen.bind(*p_41_M00_AXI_awlen);
        p_41_M00_AXI_awlen->set_sv_netview_offsetfromdp(10631344);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_41_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_41->M00_AXI_awsize.bind(*p_41_M00_AXI_awsize);
        p_41_M00_AXI_awsize->set_sv_netview_offsetfromdp(10631400);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_41_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_41->M00_AXI_awburst.bind(*p_41_M00_AXI_awburst);
        p_41_M00_AXI_awburst->set_sv_netview_offsetfromdp(10631456);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_41_M00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_41->M00_AXI_awlock.bind(*p_41_M00_AXI_awlock);
        p_41_M00_AXI_awlock->set_sv_netview_offsetfromdp(10631512);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_41_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_41->M00_AXI_awcache.bind(*p_41_M00_AXI_awcache);
        p_41_M00_AXI_awcache->set_sv_netview_offsetfromdp(10631568);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_41_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_41->M00_AXI_awprot.bind(*p_41_M00_AXI_awprot);
        p_41_M00_AXI_awprot->set_sv_netview_offsetfromdp(10631624);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_41_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_41->M00_AXI_awqos.bind(*p_41_M00_AXI_awqos);
        p_41_M00_AXI_awqos->set_sv_netview_offsetfromdp(10631680);
        xsim_sc_channel<0, bool > *p_41_M00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_41->M00_AXI_awvalid.bind(*p_41_M00_AXI_awvalid);
        p_41_M00_AXI_awvalid->set_sv_netview_offsetfromdp(10631736);
        xsim_sc_channel<0, bool > *p_41_M00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_41->M00_AXI_awready.bind(*p_41_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_41_M00_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_41_M00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_41->M00_AXI_wdata.bind(*p_41_M00_AXI_wdata);
        p_41_M00_AXI_wdata->set_sv_netview_offsetfromdp(10631848);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_41_M00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_41->M00_AXI_wstrb.bind(*p_41_M00_AXI_wstrb);
        p_41_M00_AXI_wstrb->set_sv_netview_offsetfromdp(10631904);
        xsim_sc_channel<0, bool > *p_41_M00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_41->M00_AXI_wlast.bind(*p_41_M00_AXI_wlast);
        p_41_M00_AXI_wlast->set_sv_netview_offsetfromdp(10631960);
        xsim_sc_channel<0, bool > *p_41_M00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_41->M00_AXI_wvalid.bind(*p_41_M00_AXI_wvalid);
        p_41_M00_AXI_wvalid->set_sv_netview_offsetfromdp(10632016);
        xsim_sc_channel<0, bool > *p_41_M00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_41->M00_AXI_wready.bind(*p_41_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_41_M00_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_41_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_41->M00_AXI_bresp.bind(*p_41_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_41_M00_AXI_bresp);
        xsim_sc_channel<0, bool > *p_41_M00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_41->M00_AXI_bvalid.bind(*p_41_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_41_M00_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_41_M00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_41->M00_AXI_bready.bind(*p_41_M00_AXI_bready);
        p_41_M00_AXI_bready->set_sv_netview_offsetfromdp(10632240);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_41_M00_AXI_araddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_41->M00_AXI_araddr.bind(*p_41_M00_AXI_araddr);
        p_41_M00_AXI_araddr->set_sv_netview_offsetfromdp(10632296);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_41_M00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_41->M00_AXI_arlen.bind(*p_41_M00_AXI_arlen);
        p_41_M00_AXI_arlen->set_sv_netview_offsetfromdp(10632352);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_41_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_41->M00_AXI_arsize.bind(*p_41_M00_AXI_arsize);
        p_41_M00_AXI_arsize->set_sv_netview_offsetfromdp(10632408);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_41_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_41->M00_AXI_arburst.bind(*p_41_M00_AXI_arburst);
        p_41_M00_AXI_arburst->set_sv_netview_offsetfromdp(10632464);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_41_M00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_41->M00_AXI_arlock.bind(*p_41_M00_AXI_arlock);
        p_41_M00_AXI_arlock->set_sv_netview_offsetfromdp(10632520);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_41_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_41->M00_AXI_arcache.bind(*p_41_M00_AXI_arcache);
        p_41_M00_AXI_arcache->set_sv_netview_offsetfromdp(10632576);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_41_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_41->M00_AXI_arprot.bind(*p_41_M00_AXI_arprot);
        p_41_M00_AXI_arprot->set_sv_netview_offsetfromdp(10632632);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_41_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_41->M00_AXI_arqos.bind(*p_41_M00_AXI_arqos);
        p_41_M00_AXI_arqos->set_sv_netview_offsetfromdp(10632688);
        xsim_sc_channel<0, bool > *p_41_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_41->M00_AXI_arvalid.bind(*p_41_M00_AXI_arvalid);
        p_41_M00_AXI_arvalid->set_sv_netview_offsetfromdp(10632744);
        xsim_sc_channel<0, bool > *p_41_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_41->M00_AXI_arready.bind(*p_41_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_41_M00_AXI_arready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_41_M00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_41->M00_AXI_rdata.bind(*p_41_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_41_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_41_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_41->M00_AXI_rresp.bind(*p_41_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_41_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_41_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_41->M00_AXI_rlast.bind(*p_41_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_41_M00_AXI_rlast);
        xsim_sc_channel<0, bool > *p_41_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_41->M00_AXI_rvalid.bind(*p_41_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_41_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_41_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_41->M00_AXI_rready.bind(*p_41_M00_AXI_rready);
        p_41_M00_AXI_rready->set_sv_netview_offsetfromdp(10633080);
        sc_inst_42 = new bd_d216_interconnect_PLRAM_MEM03_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.interconnect.interconnect_plram_mem03");
        sc_inst_42->xsim_set_dbg_index(3212);
        xsim_sc_channel<0, bool > *p_42_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_42->aclk.bind(*p_42_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_42_aclk);
        xsim_sc_channel<0, bool > *p_42_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_42->aresetn.bind(*p_42_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_42_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_42_S00_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_42->S00_AXI_awid.bind(*p_42_S00_AXI_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_42_S00_AXI_awid);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_42_S00_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_42->S00_AXI_awaddr.bind(*p_42_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_42_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_42_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_42->S00_AXI_awlen.bind(*p_42_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_42_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_42_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_42->S00_AXI_awsize.bind(*p_42_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_42_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_42_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_42->S00_AXI_awburst.bind(*p_42_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_42_S00_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_42_S00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_42->S00_AXI_awlock.bind(*p_42_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_42_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_42_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_42->S00_AXI_awcache.bind(*p_42_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_42_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_42_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_42->S00_AXI_awprot.bind(*p_42_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_42_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_42_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_42->S00_AXI_awqos.bind(*p_42_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_42_S00_AXI_awqos);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_42_S00_AXI_awuser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_42->S00_AXI_awuser.bind(*p_42_S00_AXI_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_42_S00_AXI_awuser);
        xsim_sc_channel<0, bool > *p_42_S00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_42->S00_AXI_awvalid.bind(*p_42_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_42_S00_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_42_S00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_42->S00_AXI_awready.bind(*p_42_S00_AXI_awready);
        p_42_S00_AXI_awready->set_sv_netview_offsetfromdp(10633912);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_42_S00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_42->S00_AXI_wdata.bind(*p_42_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_42_S00_AXI_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_42_S00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_42->S00_AXI_wstrb.bind(*p_42_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_42_S00_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_42_S00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_42->S00_AXI_wlast.bind(*p_42_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_42_S00_AXI_wlast);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_42_S00_AXI_wuser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_42->S00_AXI_wuser.bind(*p_42_S00_AXI_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_42_S00_AXI_wuser);
        xsim_sc_channel<0, bool > *p_42_S00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_42->S00_AXI_wvalid.bind(*p_42_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_42_S00_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_42_S00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_42->S00_AXI_wready.bind(*p_42_S00_AXI_wready);
        p_42_S00_AXI_wready->set_sv_netview_offsetfromdp(10634248);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_42_S00_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_42->S00_AXI_bid.bind(*p_42_S00_AXI_bid);
        p_42_S00_AXI_bid->set_sv_netview_offsetfromdp(10634304);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_42_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_42->S00_AXI_bresp.bind(*p_42_S00_AXI_bresp);
        p_42_S00_AXI_bresp->set_sv_netview_offsetfromdp(10634360);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_42_S00_AXI_buser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_42->S00_AXI_buser.bind(*p_42_S00_AXI_buser);
        p_42_S00_AXI_buser->set_sv_netview_offsetfromdp(10634416);
        xsim_sc_channel<0, bool > *p_42_S00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_42->S00_AXI_bvalid.bind(*p_42_S00_AXI_bvalid);
        p_42_S00_AXI_bvalid->set_sv_netview_offsetfromdp(10634472);
        xsim_sc_channel<0, bool > *p_42_S00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_42->S00_AXI_bready.bind(*p_42_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_42_S00_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_42_S00_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_42->S00_AXI_arid.bind(*p_42_S00_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_42_S00_AXI_arid);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_42_S00_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_42->S00_AXI_araddr.bind(*p_42_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_42_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_42_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_42->S00_AXI_arlen.bind(*p_42_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_42_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_42_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_42->S00_AXI_arsize.bind(*p_42_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_42_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_42_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_42->S00_AXI_arburst.bind(*p_42_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_42_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_42_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_42->S00_AXI_arlock.bind(*p_42_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_42_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_42_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_42->S00_AXI_arcache.bind(*p_42_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_42_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_42_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_42->S00_AXI_arprot.bind(*p_42_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_42_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_42_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_42->S00_AXI_arqos.bind(*p_42_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_42_S00_AXI_arqos);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_42_S00_AXI_aruser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_42->S00_AXI_aruser.bind(*p_42_S00_AXI_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_42_S00_AXI_aruser);
        xsim_sc_channel<0, bool > *p_42_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_42->S00_AXI_arvalid.bind(*p_42_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_42_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_42_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_42->S00_AXI_arready.bind(*p_42_S00_AXI_arready);
        p_42_S00_AXI_arready->set_sv_netview_offsetfromdp(10635200);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_42_S00_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_42->S00_AXI_rid.bind(*p_42_S00_AXI_rid);
        p_42_S00_AXI_rid->set_sv_netview_offsetfromdp(10635256);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_42_S00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_42->S00_AXI_rdata.bind(*p_42_S00_AXI_rdata);
        p_42_S00_AXI_rdata->set_sv_netview_offsetfromdp(10635312);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_42_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_42->S00_AXI_rresp.bind(*p_42_S00_AXI_rresp);
        p_42_S00_AXI_rresp->set_sv_netview_offsetfromdp(10635368);
        xsim_sc_channel<0, bool > *p_42_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_42->S00_AXI_rlast.bind(*p_42_S00_AXI_rlast);
        p_42_S00_AXI_rlast->set_sv_netview_offsetfromdp(10635424);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_42_S00_AXI_ruser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_42->S00_AXI_ruser.bind(*p_42_S00_AXI_ruser);
        p_42_S00_AXI_ruser->set_sv_netview_offsetfromdp(10635480);
        xsim_sc_channel<0, bool > *p_42_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_42->S00_AXI_rvalid.bind(*p_42_S00_AXI_rvalid);
        p_42_S00_AXI_rvalid->set_sv_netview_offsetfromdp(10635536);
        xsim_sc_channel<0, bool > *p_42_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_42->S00_AXI_rready.bind(*p_42_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_42_S00_AXI_rready);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_42_M00_AXI_awaddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_42->M00_AXI_awaddr.bind(*p_42_M00_AXI_awaddr);
        p_42_M00_AXI_awaddr->set_sv_netview_offsetfromdp(10635648);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_42_M00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_42->M00_AXI_awlen.bind(*p_42_M00_AXI_awlen);
        p_42_M00_AXI_awlen->set_sv_netview_offsetfromdp(10635704);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_42_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_42->M00_AXI_awsize.bind(*p_42_M00_AXI_awsize);
        p_42_M00_AXI_awsize->set_sv_netview_offsetfromdp(10635760);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_42_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_42->M00_AXI_awburst.bind(*p_42_M00_AXI_awburst);
        p_42_M00_AXI_awburst->set_sv_netview_offsetfromdp(10635816);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_42_M00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_42->M00_AXI_awlock.bind(*p_42_M00_AXI_awlock);
        p_42_M00_AXI_awlock->set_sv_netview_offsetfromdp(10635872);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_42_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_42->M00_AXI_awcache.bind(*p_42_M00_AXI_awcache);
        p_42_M00_AXI_awcache->set_sv_netview_offsetfromdp(10635928);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_42_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_42->M00_AXI_awprot.bind(*p_42_M00_AXI_awprot);
        p_42_M00_AXI_awprot->set_sv_netview_offsetfromdp(10635984);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_42_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_42->M00_AXI_awqos.bind(*p_42_M00_AXI_awqos);
        p_42_M00_AXI_awqos->set_sv_netview_offsetfromdp(10636040);
        xsim_sc_channel<0, bool > *p_42_M00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_42->M00_AXI_awvalid.bind(*p_42_M00_AXI_awvalid);
        p_42_M00_AXI_awvalid->set_sv_netview_offsetfromdp(10636096);
        xsim_sc_channel<0, bool > *p_42_M00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_42->M00_AXI_awready.bind(*p_42_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_42_M00_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_42_M00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_42->M00_AXI_wdata.bind(*p_42_M00_AXI_wdata);
        p_42_M00_AXI_wdata->set_sv_netview_offsetfromdp(10636208);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_42_M00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_42->M00_AXI_wstrb.bind(*p_42_M00_AXI_wstrb);
        p_42_M00_AXI_wstrb->set_sv_netview_offsetfromdp(10636264);
        xsim_sc_channel<0, bool > *p_42_M00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_42->M00_AXI_wlast.bind(*p_42_M00_AXI_wlast);
        p_42_M00_AXI_wlast->set_sv_netview_offsetfromdp(10636320);
        xsim_sc_channel<0, bool > *p_42_M00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_42->M00_AXI_wvalid.bind(*p_42_M00_AXI_wvalid);
        p_42_M00_AXI_wvalid->set_sv_netview_offsetfromdp(10636376);
        xsim_sc_channel<0, bool > *p_42_M00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_42->M00_AXI_wready.bind(*p_42_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_42_M00_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_42_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_42->M00_AXI_bresp.bind(*p_42_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_42_M00_AXI_bresp);
        xsim_sc_channel<0, bool > *p_42_M00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_42->M00_AXI_bvalid.bind(*p_42_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_42_M00_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_42_M00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_42->M00_AXI_bready.bind(*p_42_M00_AXI_bready);
        p_42_M00_AXI_bready->set_sv_netview_offsetfromdp(10636600);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_42_M00_AXI_araddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_42->M00_AXI_araddr.bind(*p_42_M00_AXI_araddr);
        p_42_M00_AXI_araddr->set_sv_netview_offsetfromdp(10636656);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_42_M00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_42->M00_AXI_arlen.bind(*p_42_M00_AXI_arlen);
        p_42_M00_AXI_arlen->set_sv_netview_offsetfromdp(10636712);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_42_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_42->M00_AXI_arsize.bind(*p_42_M00_AXI_arsize);
        p_42_M00_AXI_arsize->set_sv_netview_offsetfromdp(10636768);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_42_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_42->M00_AXI_arburst.bind(*p_42_M00_AXI_arburst);
        p_42_M00_AXI_arburst->set_sv_netview_offsetfromdp(10636824);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_42_M00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_42->M00_AXI_arlock.bind(*p_42_M00_AXI_arlock);
        p_42_M00_AXI_arlock->set_sv_netview_offsetfromdp(10636880);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_42_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_42->M00_AXI_arcache.bind(*p_42_M00_AXI_arcache);
        p_42_M00_AXI_arcache->set_sv_netview_offsetfromdp(10636936);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_42_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_42->M00_AXI_arprot.bind(*p_42_M00_AXI_arprot);
        p_42_M00_AXI_arprot->set_sv_netview_offsetfromdp(10636992);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_42_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_42->M00_AXI_arqos.bind(*p_42_M00_AXI_arqos);
        p_42_M00_AXI_arqos->set_sv_netview_offsetfromdp(10637048);
        xsim_sc_channel<0, bool > *p_42_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_42->M00_AXI_arvalid.bind(*p_42_M00_AXI_arvalid);
        p_42_M00_AXI_arvalid->set_sv_netview_offsetfromdp(10637104);
        xsim_sc_channel<0, bool > *p_42_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_42->M00_AXI_arready.bind(*p_42_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_42_M00_AXI_arready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_42_M00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_42->M00_AXI_rdata.bind(*p_42_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_42_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_42_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_42->M00_AXI_rresp.bind(*p_42_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_42_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_42_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_42->M00_AXI_rlast.bind(*p_42_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_42_M00_AXI_rlast);
        xsim_sc_channel<0, bool > *p_42_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_42->M00_AXI_rvalid.bind(*p_42_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_42_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_42_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_42->M00_AXI_rready.bind(*p_42_M00_AXI_rready);
        p_42_M00_AXI_rready->set_sv_netview_offsetfromdp(10637440);
        sc_inst_43 = new bd_d216_interconnect_PLRAM_MEM04_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.interconnect.interconnect_plram_mem04");
        sc_inst_43->xsim_set_dbg_index(3213);
        xsim_sc_channel<0, bool > *p_43_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_43->aclk.bind(*p_43_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_43_aclk);
        xsim_sc_channel<0, bool > *p_43_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_43->aresetn.bind(*p_43_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_43_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_43_S00_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_43->S00_AXI_awid.bind(*p_43_S00_AXI_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_43_S00_AXI_awid);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_43_S00_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_43->S00_AXI_awaddr.bind(*p_43_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_43_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_43_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_43->S00_AXI_awlen.bind(*p_43_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_43_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_43_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_43->S00_AXI_awsize.bind(*p_43_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_43_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_43_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_43->S00_AXI_awburst.bind(*p_43_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_43_S00_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_43_S00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_43->S00_AXI_awlock.bind(*p_43_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_43_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_43_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_43->S00_AXI_awcache.bind(*p_43_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_43_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_43_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_43->S00_AXI_awprot.bind(*p_43_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_43_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_43_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_43->S00_AXI_awqos.bind(*p_43_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_43_S00_AXI_awqos);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_43_S00_AXI_awuser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_43->S00_AXI_awuser.bind(*p_43_S00_AXI_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_43_S00_AXI_awuser);
        xsim_sc_channel<0, bool > *p_43_S00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_43->S00_AXI_awvalid.bind(*p_43_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_43_S00_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_43_S00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_43->S00_AXI_awready.bind(*p_43_S00_AXI_awready);
        p_43_S00_AXI_awready->set_sv_netview_offsetfromdp(10638272);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_43_S00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_43->S00_AXI_wdata.bind(*p_43_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_43_S00_AXI_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_43_S00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_43->S00_AXI_wstrb.bind(*p_43_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_43_S00_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_43_S00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_43->S00_AXI_wlast.bind(*p_43_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_43_S00_AXI_wlast);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_43_S00_AXI_wuser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_43->S00_AXI_wuser.bind(*p_43_S00_AXI_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_43_S00_AXI_wuser);
        xsim_sc_channel<0, bool > *p_43_S00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_43->S00_AXI_wvalid.bind(*p_43_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_43_S00_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_43_S00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_43->S00_AXI_wready.bind(*p_43_S00_AXI_wready);
        p_43_S00_AXI_wready->set_sv_netview_offsetfromdp(10638608);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_43_S00_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_43->S00_AXI_bid.bind(*p_43_S00_AXI_bid);
        p_43_S00_AXI_bid->set_sv_netview_offsetfromdp(10638664);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_43_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_43->S00_AXI_bresp.bind(*p_43_S00_AXI_bresp);
        p_43_S00_AXI_bresp->set_sv_netview_offsetfromdp(10638720);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_43_S00_AXI_buser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_43->S00_AXI_buser.bind(*p_43_S00_AXI_buser);
        p_43_S00_AXI_buser->set_sv_netview_offsetfromdp(10638776);
        xsim_sc_channel<0, bool > *p_43_S00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_43->S00_AXI_bvalid.bind(*p_43_S00_AXI_bvalid);
        p_43_S00_AXI_bvalid->set_sv_netview_offsetfromdp(10638832);
        xsim_sc_channel<0, bool > *p_43_S00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_43->S00_AXI_bready.bind(*p_43_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_43_S00_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_43_S00_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_43->S00_AXI_arid.bind(*p_43_S00_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_43_S00_AXI_arid);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_43_S00_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_43->S00_AXI_araddr.bind(*p_43_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_43_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_43_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_43->S00_AXI_arlen.bind(*p_43_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_43_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_43_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_43->S00_AXI_arsize.bind(*p_43_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_43_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_43_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_43->S00_AXI_arburst.bind(*p_43_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_43_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_43_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_43->S00_AXI_arlock.bind(*p_43_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_43_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_43_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_43->S00_AXI_arcache.bind(*p_43_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_43_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_43_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_43->S00_AXI_arprot.bind(*p_43_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_43_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_43_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_43->S00_AXI_arqos.bind(*p_43_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_43_S00_AXI_arqos);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_43_S00_AXI_aruser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_43->S00_AXI_aruser.bind(*p_43_S00_AXI_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_43_S00_AXI_aruser);
        xsim_sc_channel<0, bool > *p_43_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_43->S00_AXI_arvalid.bind(*p_43_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_43_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_43_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_43->S00_AXI_arready.bind(*p_43_S00_AXI_arready);
        p_43_S00_AXI_arready->set_sv_netview_offsetfromdp(10639560);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_43_S00_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_43->S00_AXI_rid.bind(*p_43_S00_AXI_rid);
        p_43_S00_AXI_rid->set_sv_netview_offsetfromdp(10639616);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_43_S00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_43->S00_AXI_rdata.bind(*p_43_S00_AXI_rdata);
        p_43_S00_AXI_rdata->set_sv_netview_offsetfromdp(10639672);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_43_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_43->S00_AXI_rresp.bind(*p_43_S00_AXI_rresp);
        p_43_S00_AXI_rresp->set_sv_netview_offsetfromdp(10639728);
        xsim_sc_channel<0, bool > *p_43_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_43->S00_AXI_rlast.bind(*p_43_S00_AXI_rlast);
        p_43_S00_AXI_rlast->set_sv_netview_offsetfromdp(10639784);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_43_S00_AXI_ruser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_43->S00_AXI_ruser.bind(*p_43_S00_AXI_ruser);
        p_43_S00_AXI_ruser->set_sv_netview_offsetfromdp(10639840);
        xsim_sc_channel<0, bool > *p_43_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_43->S00_AXI_rvalid.bind(*p_43_S00_AXI_rvalid);
        p_43_S00_AXI_rvalid->set_sv_netview_offsetfromdp(10639896);
        xsim_sc_channel<0, bool > *p_43_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_43->S00_AXI_rready.bind(*p_43_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_43_S00_AXI_rready);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_43_M00_AXI_awaddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_43->M00_AXI_awaddr.bind(*p_43_M00_AXI_awaddr);
        p_43_M00_AXI_awaddr->set_sv_netview_offsetfromdp(10640008);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_43_M00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_43->M00_AXI_awlen.bind(*p_43_M00_AXI_awlen);
        p_43_M00_AXI_awlen->set_sv_netview_offsetfromdp(10640064);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_43_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_43->M00_AXI_awsize.bind(*p_43_M00_AXI_awsize);
        p_43_M00_AXI_awsize->set_sv_netview_offsetfromdp(10640120);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_43_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_43->M00_AXI_awburst.bind(*p_43_M00_AXI_awburst);
        p_43_M00_AXI_awburst->set_sv_netview_offsetfromdp(10640176);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_43_M00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_43->M00_AXI_awlock.bind(*p_43_M00_AXI_awlock);
        p_43_M00_AXI_awlock->set_sv_netview_offsetfromdp(10640232);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_43_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_43->M00_AXI_awcache.bind(*p_43_M00_AXI_awcache);
        p_43_M00_AXI_awcache->set_sv_netview_offsetfromdp(10640288);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_43_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_43->M00_AXI_awprot.bind(*p_43_M00_AXI_awprot);
        p_43_M00_AXI_awprot->set_sv_netview_offsetfromdp(10640344);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_43_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_43->M00_AXI_awqos.bind(*p_43_M00_AXI_awqos);
        p_43_M00_AXI_awqos->set_sv_netview_offsetfromdp(10640400);
        xsim_sc_channel<0, bool > *p_43_M00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_43->M00_AXI_awvalid.bind(*p_43_M00_AXI_awvalid);
        p_43_M00_AXI_awvalid->set_sv_netview_offsetfromdp(10640456);
        xsim_sc_channel<0, bool > *p_43_M00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_43->M00_AXI_awready.bind(*p_43_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_43_M00_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_43_M00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_43->M00_AXI_wdata.bind(*p_43_M00_AXI_wdata);
        p_43_M00_AXI_wdata->set_sv_netview_offsetfromdp(10640568);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_43_M00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_43->M00_AXI_wstrb.bind(*p_43_M00_AXI_wstrb);
        p_43_M00_AXI_wstrb->set_sv_netview_offsetfromdp(10640624);
        xsim_sc_channel<0, bool > *p_43_M00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_43->M00_AXI_wlast.bind(*p_43_M00_AXI_wlast);
        p_43_M00_AXI_wlast->set_sv_netview_offsetfromdp(10640680);
        xsim_sc_channel<0, bool > *p_43_M00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_43->M00_AXI_wvalid.bind(*p_43_M00_AXI_wvalid);
        p_43_M00_AXI_wvalid->set_sv_netview_offsetfromdp(10640736);
        xsim_sc_channel<0, bool > *p_43_M00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_43->M00_AXI_wready.bind(*p_43_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_43_M00_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_43_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_43->M00_AXI_bresp.bind(*p_43_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_43_M00_AXI_bresp);
        xsim_sc_channel<0, bool > *p_43_M00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_43->M00_AXI_bvalid.bind(*p_43_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_43_M00_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_43_M00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_43->M00_AXI_bready.bind(*p_43_M00_AXI_bready);
        p_43_M00_AXI_bready->set_sv_netview_offsetfromdp(10640960);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_43_M00_AXI_araddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_43->M00_AXI_araddr.bind(*p_43_M00_AXI_araddr);
        p_43_M00_AXI_araddr->set_sv_netview_offsetfromdp(10641016);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_43_M00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_43->M00_AXI_arlen.bind(*p_43_M00_AXI_arlen);
        p_43_M00_AXI_arlen->set_sv_netview_offsetfromdp(10641072);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_43_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_43->M00_AXI_arsize.bind(*p_43_M00_AXI_arsize);
        p_43_M00_AXI_arsize->set_sv_netview_offsetfromdp(10641128);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_43_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_43->M00_AXI_arburst.bind(*p_43_M00_AXI_arburst);
        p_43_M00_AXI_arburst->set_sv_netview_offsetfromdp(10641184);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_43_M00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_43->M00_AXI_arlock.bind(*p_43_M00_AXI_arlock);
        p_43_M00_AXI_arlock->set_sv_netview_offsetfromdp(10641240);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_43_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_43->M00_AXI_arcache.bind(*p_43_M00_AXI_arcache);
        p_43_M00_AXI_arcache->set_sv_netview_offsetfromdp(10641296);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_43_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_43->M00_AXI_arprot.bind(*p_43_M00_AXI_arprot);
        p_43_M00_AXI_arprot->set_sv_netview_offsetfromdp(10641352);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_43_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_43->M00_AXI_arqos.bind(*p_43_M00_AXI_arqos);
        p_43_M00_AXI_arqos->set_sv_netview_offsetfromdp(10641408);
        xsim_sc_channel<0, bool > *p_43_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_43->M00_AXI_arvalid.bind(*p_43_M00_AXI_arvalid);
        p_43_M00_AXI_arvalid->set_sv_netview_offsetfromdp(10641464);
        xsim_sc_channel<0, bool > *p_43_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_43->M00_AXI_arready.bind(*p_43_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_43_M00_AXI_arready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_43_M00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_43->M00_AXI_rdata.bind(*p_43_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_43_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_43_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_43->M00_AXI_rresp.bind(*p_43_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_43_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_43_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_43->M00_AXI_rlast.bind(*p_43_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_43_M00_AXI_rlast);
        xsim_sc_channel<0, bool > *p_43_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_43->M00_AXI_rvalid.bind(*p_43_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_43_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_43_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_43->M00_AXI_rready.bind(*p_43_M00_AXI_rready);
        p_43_M00_AXI_rready->set_sv_netview_offsetfromdp(10641800);
        sc_inst_44 = new bd_d216_interconnect_PLRAM_MEM05_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.interconnect.interconnect_plram_mem05");
        sc_inst_44->xsim_set_dbg_index(3214);
        xsim_sc_channel<0, bool > *p_44_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_44->aclk.bind(*p_44_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_44_aclk);
        xsim_sc_channel<0, bool > *p_44_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_44->aresetn.bind(*p_44_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_44_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_44_S00_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_44->S00_AXI_awid.bind(*p_44_S00_AXI_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_44_S00_AXI_awid);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_44_S00_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_44->S00_AXI_awaddr.bind(*p_44_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_44_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_44_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_44->S00_AXI_awlen.bind(*p_44_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_44_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_44_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_44->S00_AXI_awsize.bind(*p_44_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_44_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_44_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_44->S00_AXI_awburst.bind(*p_44_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_44_S00_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_44_S00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_44->S00_AXI_awlock.bind(*p_44_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_44_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_44_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_44->S00_AXI_awcache.bind(*p_44_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_44_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_44_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_44->S00_AXI_awprot.bind(*p_44_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_44_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_44_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_44->S00_AXI_awqos.bind(*p_44_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_44_S00_AXI_awqos);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_44_S00_AXI_awuser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_44->S00_AXI_awuser.bind(*p_44_S00_AXI_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_44_S00_AXI_awuser);
        xsim_sc_channel<0, bool > *p_44_S00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_44->S00_AXI_awvalid.bind(*p_44_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_44_S00_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_44_S00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_44->S00_AXI_awready.bind(*p_44_S00_AXI_awready);
        p_44_S00_AXI_awready->set_sv_netview_offsetfromdp(10642632);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_44_S00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_44->S00_AXI_wdata.bind(*p_44_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_44_S00_AXI_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_44_S00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_44->S00_AXI_wstrb.bind(*p_44_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_44_S00_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_44_S00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_44->S00_AXI_wlast.bind(*p_44_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_44_S00_AXI_wlast);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_44_S00_AXI_wuser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_44->S00_AXI_wuser.bind(*p_44_S00_AXI_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_44_S00_AXI_wuser);
        xsim_sc_channel<0, bool > *p_44_S00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_44->S00_AXI_wvalid.bind(*p_44_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_44_S00_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_44_S00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_44->S00_AXI_wready.bind(*p_44_S00_AXI_wready);
        p_44_S00_AXI_wready->set_sv_netview_offsetfromdp(10642968);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_44_S00_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_44->S00_AXI_bid.bind(*p_44_S00_AXI_bid);
        p_44_S00_AXI_bid->set_sv_netview_offsetfromdp(10643024);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_44_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_44->S00_AXI_bresp.bind(*p_44_S00_AXI_bresp);
        p_44_S00_AXI_bresp->set_sv_netview_offsetfromdp(10643080);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_44_S00_AXI_buser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_44->S00_AXI_buser.bind(*p_44_S00_AXI_buser);
        p_44_S00_AXI_buser->set_sv_netview_offsetfromdp(10643136);
        xsim_sc_channel<0, bool > *p_44_S00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_44->S00_AXI_bvalid.bind(*p_44_S00_AXI_bvalid);
        p_44_S00_AXI_bvalid->set_sv_netview_offsetfromdp(10643192);
        xsim_sc_channel<0, bool > *p_44_S00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_44->S00_AXI_bready.bind(*p_44_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_44_S00_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_44_S00_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_44->S00_AXI_arid.bind(*p_44_S00_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_44_S00_AXI_arid);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_44_S00_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_44->S00_AXI_araddr.bind(*p_44_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_44_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_44_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_44->S00_AXI_arlen.bind(*p_44_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_44_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_44_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_44->S00_AXI_arsize.bind(*p_44_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_44_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_44_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_44->S00_AXI_arburst.bind(*p_44_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_44_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_44_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_44->S00_AXI_arlock.bind(*p_44_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_44_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_44_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_44->S00_AXI_arcache.bind(*p_44_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_44_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_44_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_44->S00_AXI_arprot.bind(*p_44_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_44_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_44_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_44->S00_AXI_arqos.bind(*p_44_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_44_S00_AXI_arqos);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_44_S00_AXI_aruser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_44->S00_AXI_aruser.bind(*p_44_S00_AXI_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_44_S00_AXI_aruser);
        xsim_sc_channel<0, bool > *p_44_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_44->S00_AXI_arvalid.bind(*p_44_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_44_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_44_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_44->S00_AXI_arready.bind(*p_44_S00_AXI_arready);
        p_44_S00_AXI_arready->set_sv_netview_offsetfromdp(10643920);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_44_S00_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_44->S00_AXI_rid.bind(*p_44_S00_AXI_rid);
        p_44_S00_AXI_rid->set_sv_netview_offsetfromdp(10643976);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_44_S00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_44->S00_AXI_rdata.bind(*p_44_S00_AXI_rdata);
        p_44_S00_AXI_rdata->set_sv_netview_offsetfromdp(10644032);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_44_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_44->S00_AXI_rresp.bind(*p_44_S00_AXI_rresp);
        p_44_S00_AXI_rresp->set_sv_netview_offsetfromdp(10644088);
        xsim_sc_channel<0, bool > *p_44_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_44->S00_AXI_rlast.bind(*p_44_S00_AXI_rlast);
        p_44_S00_AXI_rlast->set_sv_netview_offsetfromdp(10644144);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_44_S00_AXI_ruser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_44->S00_AXI_ruser.bind(*p_44_S00_AXI_ruser);
        p_44_S00_AXI_ruser->set_sv_netview_offsetfromdp(10644200);
        xsim_sc_channel<0, bool > *p_44_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_44->S00_AXI_rvalid.bind(*p_44_S00_AXI_rvalid);
        p_44_S00_AXI_rvalid->set_sv_netview_offsetfromdp(10644256);
        xsim_sc_channel<0, bool > *p_44_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_44->S00_AXI_rready.bind(*p_44_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_44_S00_AXI_rready);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_44_M00_AXI_awaddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_44->M00_AXI_awaddr.bind(*p_44_M00_AXI_awaddr);
        p_44_M00_AXI_awaddr->set_sv_netview_offsetfromdp(10644368);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_44_M00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_44->M00_AXI_awlen.bind(*p_44_M00_AXI_awlen);
        p_44_M00_AXI_awlen->set_sv_netview_offsetfromdp(10644424);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_44_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_44->M00_AXI_awsize.bind(*p_44_M00_AXI_awsize);
        p_44_M00_AXI_awsize->set_sv_netview_offsetfromdp(10644480);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_44_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_44->M00_AXI_awburst.bind(*p_44_M00_AXI_awburst);
        p_44_M00_AXI_awburst->set_sv_netview_offsetfromdp(10644536);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_44_M00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_44->M00_AXI_awlock.bind(*p_44_M00_AXI_awlock);
        p_44_M00_AXI_awlock->set_sv_netview_offsetfromdp(10644592);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_44_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_44->M00_AXI_awcache.bind(*p_44_M00_AXI_awcache);
        p_44_M00_AXI_awcache->set_sv_netview_offsetfromdp(10644648);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_44_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_44->M00_AXI_awprot.bind(*p_44_M00_AXI_awprot);
        p_44_M00_AXI_awprot->set_sv_netview_offsetfromdp(10644704);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_44_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_44->M00_AXI_awqos.bind(*p_44_M00_AXI_awqos);
        p_44_M00_AXI_awqos->set_sv_netview_offsetfromdp(10644760);
        xsim_sc_channel<0, bool > *p_44_M00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_44->M00_AXI_awvalid.bind(*p_44_M00_AXI_awvalid);
        p_44_M00_AXI_awvalid->set_sv_netview_offsetfromdp(10644816);
        xsim_sc_channel<0, bool > *p_44_M00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_44->M00_AXI_awready.bind(*p_44_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_44_M00_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_44_M00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_44->M00_AXI_wdata.bind(*p_44_M00_AXI_wdata);
        p_44_M00_AXI_wdata->set_sv_netview_offsetfromdp(10644928);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_44_M00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_44->M00_AXI_wstrb.bind(*p_44_M00_AXI_wstrb);
        p_44_M00_AXI_wstrb->set_sv_netview_offsetfromdp(10644984);
        xsim_sc_channel<0, bool > *p_44_M00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_44->M00_AXI_wlast.bind(*p_44_M00_AXI_wlast);
        p_44_M00_AXI_wlast->set_sv_netview_offsetfromdp(10645040);
        xsim_sc_channel<0, bool > *p_44_M00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_44->M00_AXI_wvalid.bind(*p_44_M00_AXI_wvalid);
        p_44_M00_AXI_wvalid->set_sv_netview_offsetfromdp(10645096);
        xsim_sc_channel<0, bool > *p_44_M00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_44->M00_AXI_wready.bind(*p_44_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_44_M00_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_44_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_44->M00_AXI_bresp.bind(*p_44_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_44_M00_AXI_bresp);
        xsim_sc_channel<0, bool > *p_44_M00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_44->M00_AXI_bvalid.bind(*p_44_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_44_M00_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_44_M00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_44->M00_AXI_bready.bind(*p_44_M00_AXI_bready);
        p_44_M00_AXI_bready->set_sv_netview_offsetfromdp(10645320);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_44_M00_AXI_araddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_44->M00_AXI_araddr.bind(*p_44_M00_AXI_araddr);
        p_44_M00_AXI_araddr->set_sv_netview_offsetfromdp(10645376);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_44_M00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_44->M00_AXI_arlen.bind(*p_44_M00_AXI_arlen);
        p_44_M00_AXI_arlen->set_sv_netview_offsetfromdp(10645432);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_44_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_44->M00_AXI_arsize.bind(*p_44_M00_AXI_arsize);
        p_44_M00_AXI_arsize->set_sv_netview_offsetfromdp(10645488);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_44_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_44->M00_AXI_arburst.bind(*p_44_M00_AXI_arburst);
        p_44_M00_AXI_arburst->set_sv_netview_offsetfromdp(10645544);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_44_M00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_44->M00_AXI_arlock.bind(*p_44_M00_AXI_arlock);
        p_44_M00_AXI_arlock->set_sv_netview_offsetfromdp(10645600);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_44_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_44->M00_AXI_arcache.bind(*p_44_M00_AXI_arcache);
        p_44_M00_AXI_arcache->set_sv_netview_offsetfromdp(10645656);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_44_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_44->M00_AXI_arprot.bind(*p_44_M00_AXI_arprot);
        p_44_M00_AXI_arprot->set_sv_netview_offsetfromdp(10645712);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_44_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_44->M00_AXI_arqos.bind(*p_44_M00_AXI_arqos);
        p_44_M00_AXI_arqos->set_sv_netview_offsetfromdp(10645768);
        xsim_sc_channel<0, bool > *p_44_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_44->M00_AXI_arvalid.bind(*p_44_M00_AXI_arvalid);
        p_44_M00_AXI_arvalid->set_sv_netview_offsetfromdp(10645824);
        xsim_sc_channel<0, bool > *p_44_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_44->M00_AXI_arready.bind(*p_44_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_44_M00_AXI_arready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_44_M00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_44->M00_AXI_rdata.bind(*p_44_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_44_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_44_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_44->M00_AXI_rresp.bind(*p_44_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_44_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_44_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_44->M00_AXI_rlast.bind(*p_44_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_44_M00_AXI_rlast);
        xsim_sc_channel<0, bool > *p_44_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_44->M00_AXI_rvalid.bind(*p_44_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_44_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_44_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_44->M00_AXI_rready.bind(*p_44_M00_AXI_rready);
        p_44_M00_AXI_rready->set_sv_netview_offsetfromdp(10646160);
        sc_inst_45 = new bd_d216_interconnect_S00_AXI_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.interconnect.interconnect_s00_axi");
        sc_inst_45->xsim_set_dbg_index(3215);
        xsim_sc_channel<0, bool > *p_45_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_45->aclk.bind(*p_45_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_45_aclk);
        xsim_sc_channel<0, bool > *p_45_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_45->aresetn.bind(*p_45_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_45_aresetn);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_45_S00_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_45->S00_AXI_awaddr.bind(*p_45_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_45_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_45_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_45->S00_AXI_awlen.bind(*p_45_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_45_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_45_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_45->S00_AXI_awsize.bind(*p_45_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_45_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_45_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_45->S00_AXI_awburst.bind(*p_45_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_45_S00_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_S00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->S00_AXI_awlock.bind(*p_45_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_45_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_45_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_45->S00_AXI_awcache.bind(*p_45_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_45_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_45_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_45->S00_AXI_awprot.bind(*p_45_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_45_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_45_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_45->S00_AXI_awqos.bind(*p_45_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_45_S00_AXI_awqos);
        xsim_sc_channel<0, bool > *p_45_S00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->S00_AXI_awvalid.bind(*p_45_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_45_S00_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_45_S00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_45->S00_AXI_awready.bind(*p_45_S00_AXI_awready);
        p_45_S00_AXI_awready->set_sv_netview_offsetfromdp(10646880);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_45_S00_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_45->S00_AXI_wdata.bind(*p_45_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_45_S00_AXI_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_45_S00_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_45->S00_AXI_wstrb.bind(*p_45_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_45_S00_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_45_S00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_45->S00_AXI_wlast.bind(*p_45_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_45_S00_AXI_wlast);
        xsim_sc_channel<0, bool > *p_45_S00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->S00_AXI_wvalid.bind(*p_45_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_45_S00_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_45_S00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_45->S00_AXI_wready.bind(*p_45_S00_AXI_wready);
        p_45_S00_AXI_wready->set_sv_netview_offsetfromdp(10647160);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_45_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_45->S00_AXI_bresp.bind(*p_45_S00_AXI_bresp);
        p_45_S00_AXI_bresp->set_sv_netview_offsetfromdp(10647216);
        xsim_sc_channel<0, bool > *p_45_S00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->S00_AXI_bvalid.bind(*p_45_S00_AXI_bvalid);
        p_45_S00_AXI_bvalid->set_sv_netview_offsetfromdp(10647272);
        xsim_sc_channel<0, bool > *p_45_S00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_45->S00_AXI_bready.bind(*p_45_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_45_S00_AXI_bready);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_45_S00_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_45->S00_AXI_araddr.bind(*p_45_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_45_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_45_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_45->S00_AXI_arlen.bind(*p_45_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_45_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_45_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_45->S00_AXI_arsize.bind(*p_45_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_45_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_45_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_45->S00_AXI_arburst.bind(*p_45_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_45_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->S00_AXI_arlock.bind(*p_45_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_45_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_45_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_45->S00_AXI_arcache.bind(*p_45_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_45_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_45_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_45->S00_AXI_arprot.bind(*p_45_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_45_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_45_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_45->S00_AXI_arqos.bind(*p_45_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_45_S00_AXI_arqos);
        xsim_sc_channel<0, bool > *p_45_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->S00_AXI_arvalid.bind(*p_45_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_45_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_45_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_45->S00_AXI_arready.bind(*p_45_S00_AXI_arready);
        p_45_S00_AXI_arready->set_sv_netview_offsetfromdp(10647888);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_45_S00_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_45->S00_AXI_rdata.bind(*p_45_S00_AXI_rdata);
        p_45_S00_AXI_rdata->set_sv_netview_offsetfromdp(10647944);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_45_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_45->S00_AXI_rresp.bind(*p_45_S00_AXI_rresp);
        p_45_S00_AXI_rresp->set_sv_netview_offsetfromdp(10648000);
        xsim_sc_channel<0, bool > *p_45_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_45->S00_AXI_rlast.bind(*p_45_S00_AXI_rlast);
        p_45_S00_AXI_rlast->set_sv_netview_offsetfromdp(10648056);
        xsim_sc_channel<0, bool > *p_45_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->S00_AXI_rvalid.bind(*p_45_S00_AXI_rvalid);
        p_45_S00_AXI_rvalid->set_sv_netview_offsetfromdp(10648112);
        xsim_sc_channel<0, bool > *p_45_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_45->S00_AXI_rready.bind(*p_45_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_45_S00_AXI_rready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_M00_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->M00_AXI_awid.bind(*p_45_M00_AXI_awid);
        p_45_M00_AXI_awid->set_sv_netview_offsetfromdp(10648224);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_45_M00_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_45->M00_AXI_awaddr.bind(*p_45_M00_AXI_awaddr);
        p_45_M00_AXI_awaddr->set_sv_netview_offsetfromdp(10648280);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_45_M00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_45->M00_AXI_awlen.bind(*p_45_M00_AXI_awlen);
        p_45_M00_AXI_awlen->set_sv_netview_offsetfromdp(10648336);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_45_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_45->M00_AXI_awsize.bind(*p_45_M00_AXI_awsize);
        p_45_M00_AXI_awsize->set_sv_netview_offsetfromdp(10648392);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_45_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_45->M00_AXI_awburst.bind(*p_45_M00_AXI_awburst);
        p_45_M00_AXI_awburst->set_sv_netview_offsetfromdp(10648448);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_M00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->M00_AXI_awlock.bind(*p_45_M00_AXI_awlock);
        p_45_M00_AXI_awlock->set_sv_netview_offsetfromdp(10648504);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_45_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_45->M00_AXI_awcache.bind(*p_45_M00_AXI_awcache);
        p_45_M00_AXI_awcache->set_sv_netview_offsetfromdp(10648560);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_45_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_45->M00_AXI_awprot.bind(*p_45_M00_AXI_awprot);
        p_45_M00_AXI_awprot->set_sv_netview_offsetfromdp(10648616);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_45_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_45->M00_AXI_awqos.bind(*p_45_M00_AXI_awqos);
        p_45_M00_AXI_awqos->set_sv_netview_offsetfromdp(10648672);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_45_M00_AXI_awuser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_45->M00_AXI_awuser.bind(*p_45_M00_AXI_awuser);
        p_45_M00_AXI_awuser->set_sv_netview_offsetfromdp(10648728);
        xsim_sc_channel<0, bool > *p_45_M00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->M00_AXI_awvalid.bind(*p_45_M00_AXI_awvalid);
        p_45_M00_AXI_awvalid->set_sv_netview_offsetfromdp(10648784);
        xsim_sc_channel<0, bool > *p_45_M00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_45->M00_AXI_awready.bind(*p_45_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M00_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_45_M00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_45->M00_AXI_wdata.bind(*p_45_M00_AXI_wdata);
        p_45_M00_AXI_wdata->set_sv_netview_offsetfromdp(10648896);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_45_M00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_45->M00_AXI_wstrb.bind(*p_45_M00_AXI_wstrb);
        p_45_M00_AXI_wstrb->set_sv_netview_offsetfromdp(10648952);
        xsim_sc_channel<0, bool > *p_45_M00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_45->M00_AXI_wlast.bind(*p_45_M00_AXI_wlast);
        p_45_M00_AXI_wlast->set_sv_netview_offsetfromdp(10649008);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_45_M00_AXI_wuser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_45->M00_AXI_wuser.bind(*p_45_M00_AXI_wuser);
        p_45_M00_AXI_wuser->set_sv_netview_offsetfromdp(10649064);
        xsim_sc_channel<0, bool > *p_45_M00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->M00_AXI_wvalid.bind(*p_45_M00_AXI_wvalid);
        p_45_M00_AXI_wvalid->set_sv_netview_offsetfromdp(10649120);
        xsim_sc_channel<0, bool > *p_45_M00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_45->M00_AXI_wready.bind(*p_45_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M00_AXI_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_M00_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->M00_AXI_bid.bind(*p_45_M00_AXI_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M00_AXI_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_45_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_45->M00_AXI_bresp.bind(*p_45_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M00_AXI_bresp);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_45_M00_AXI_buser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_45->M00_AXI_buser.bind(*p_45_M00_AXI_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M00_AXI_buser);
        xsim_sc_channel<0, bool > *p_45_M00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->M00_AXI_bvalid.bind(*p_45_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M00_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_45_M00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_45->M00_AXI_bready.bind(*p_45_M00_AXI_bready);
        p_45_M00_AXI_bready->set_sv_netview_offsetfromdp(10649456);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_M00_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->M00_AXI_arid.bind(*p_45_M00_AXI_arid);
        p_45_M00_AXI_arid->set_sv_netview_offsetfromdp(10649512);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_45_M00_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_45->M00_AXI_araddr.bind(*p_45_M00_AXI_araddr);
        p_45_M00_AXI_araddr->set_sv_netview_offsetfromdp(10649568);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_45_M00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_45->M00_AXI_arlen.bind(*p_45_M00_AXI_arlen);
        p_45_M00_AXI_arlen->set_sv_netview_offsetfromdp(10649624);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_45_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_45->M00_AXI_arsize.bind(*p_45_M00_AXI_arsize);
        p_45_M00_AXI_arsize->set_sv_netview_offsetfromdp(10649680);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_45_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_45->M00_AXI_arburst.bind(*p_45_M00_AXI_arburst);
        p_45_M00_AXI_arburst->set_sv_netview_offsetfromdp(10649736);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_M00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->M00_AXI_arlock.bind(*p_45_M00_AXI_arlock);
        p_45_M00_AXI_arlock->set_sv_netview_offsetfromdp(10649792);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_45_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_45->M00_AXI_arcache.bind(*p_45_M00_AXI_arcache);
        p_45_M00_AXI_arcache->set_sv_netview_offsetfromdp(10649848);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_45_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_45->M00_AXI_arprot.bind(*p_45_M00_AXI_arprot);
        p_45_M00_AXI_arprot->set_sv_netview_offsetfromdp(10649904);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_45_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_45->M00_AXI_arqos.bind(*p_45_M00_AXI_arqos);
        p_45_M00_AXI_arqos->set_sv_netview_offsetfromdp(10649960);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_45_M00_AXI_aruser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_45->M00_AXI_aruser.bind(*p_45_M00_AXI_aruser);
        p_45_M00_AXI_aruser->set_sv_netview_offsetfromdp(10650016);
        xsim_sc_channel<0, bool > *p_45_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->M00_AXI_arvalid.bind(*p_45_M00_AXI_arvalid);
        p_45_M00_AXI_arvalid->set_sv_netview_offsetfromdp(10650072);
        xsim_sc_channel<0, bool > *p_45_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_45->M00_AXI_arready.bind(*p_45_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M00_AXI_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_M00_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->M00_AXI_rid.bind(*p_45_M00_AXI_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M00_AXI_rid);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_45_M00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_45->M00_AXI_rdata.bind(*p_45_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_45_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_45->M00_AXI_rresp.bind(*p_45_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_45_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_45->M00_AXI_rlast.bind(*p_45_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M00_AXI_rlast);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_45_M00_AXI_ruser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_45->M00_AXI_ruser.bind(*p_45_M00_AXI_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M00_AXI_ruser);
        xsim_sc_channel<0, bool > *p_45_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->M00_AXI_rvalid.bind(*p_45_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_45_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_45->M00_AXI_rready.bind(*p_45_M00_AXI_rready);
        p_45_M00_AXI_rready->set_sv_netview_offsetfromdp(10650520);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_M01_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->M01_AXI_awid.bind(*p_45_M01_AXI_awid);
        p_45_M01_AXI_awid->set_sv_netview_offsetfromdp(10650576);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_45_M01_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_45->M01_AXI_awaddr.bind(*p_45_M01_AXI_awaddr);
        p_45_M01_AXI_awaddr->set_sv_netview_offsetfromdp(10650632);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_45_M01_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_45->M01_AXI_awlen.bind(*p_45_M01_AXI_awlen);
        p_45_M01_AXI_awlen->set_sv_netview_offsetfromdp(10650688);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_45_M01_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_45->M01_AXI_awsize.bind(*p_45_M01_AXI_awsize);
        p_45_M01_AXI_awsize->set_sv_netview_offsetfromdp(10650744);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_45_M01_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_45->M01_AXI_awburst.bind(*p_45_M01_AXI_awburst);
        p_45_M01_AXI_awburst->set_sv_netview_offsetfromdp(10650800);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_M01_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->M01_AXI_awlock.bind(*p_45_M01_AXI_awlock);
        p_45_M01_AXI_awlock->set_sv_netview_offsetfromdp(10650856);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_45_M01_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_45->M01_AXI_awcache.bind(*p_45_M01_AXI_awcache);
        p_45_M01_AXI_awcache->set_sv_netview_offsetfromdp(10650912);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_45_M01_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_45->M01_AXI_awprot.bind(*p_45_M01_AXI_awprot);
        p_45_M01_AXI_awprot->set_sv_netview_offsetfromdp(10650968);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_45_M01_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_45->M01_AXI_awqos.bind(*p_45_M01_AXI_awqos);
        p_45_M01_AXI_awqos->set_sv_netview_offsetfromdp(10651024);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_45_M01_AXI_awuser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_45->M01_AXI_awuser.bind(*p_45_M01_AXI_awuser);
        p_45_M01_AXI_awuser->set_sv_netview_offsetfromdp(10651080);
        xsim_sc_channel<0, bool > *p_45_M01_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->M01_AXI_awvalid.bind(*p_45_M01_AXI_awvalid);
        p_45_M01_AXI_awvalid->set_sv_netview_offsetfromdp(10651136);
        xsim_sc_channel<0, bool > *p_45_M01_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_45->M01_AXI_awready.bind(*p_45_M01_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M01_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_45_M01_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_45->M01_AXI_wdata.bind(*p_45_M01_AXI_wdata);
        p_45_M01_AXI_wdata->set_sv_netview_offsetfromdp(10651248);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_45_M01_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_45->M01_AXI_wstrb.bind(*p_45_M01_AXI_wstrb);
        p_45_M01_AXI_wstrb->set_sv_netview_offsetfromdp(10651304);
        xsim_sc_channel<0, bool > *p_45_M01_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_45->M01_AXI_wlast.bind(*p_45_M01_AXI_wlast);
        p_45_M01_AXI_wlast->set_sv_netview_offsetfromdp(10651360);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_45_M01_AXI_wuser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_45->M01_AXI_wuser.bind(*p_45_M01_AXI_wuser);
        p_45_M01_AXI_wuser->set_sv_netview_offsetfromdp(10651416);
        xsim_sc_channel<0, bool > *p_45_M01_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->M01_AXI_wvalid.bind(*p_45_M01_AXI_wvalid);
        p_45_M01_AXI_wvalid->set_sv_netview_offsetfromdp(10651472);
        xsim_sc_channel<0, bool > *p_45_M01_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_45->M01_AXI_wready.bind(*p_45_M01_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M01_AXI_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_M01_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->M01_AXI_bid.bind(*p_45_M01_AXI_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M01_AXI_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_45_M01_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_45->M01_AXI_bresp.bind(*p_45_M01_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M01_AXI_bresp);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_45_M01_AXI_buser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_45->M01_AXI_buser.bind(*p_45_M01_AXI_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M01_AXI_buser);
        xsim_sc_channel<0, bool > *p_45_M01_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->M01_AXI_bvalid.bind(*p_45_M01_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M01_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_45_M01_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_45->M01_AXI_bready.bind(*p_45_M01_AXI_bready);
        p_45_M01_AXI_bready->set_sv_netview_offsetfromdp(10651808);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_M01_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->M01_AXI_arid.bind(*p_45_M01_AXI_arid);
        p_45_M01_AXI_arid->set_sv_netview_offsetfromdp(10651864);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_45_M01_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_45->M01_AXI_araddr.bind(*p_45_M01_AXI_araddr);
        p_45_M01_AXI_araddr->set_sv_netview_offsetfromdp(10651920);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_45_M01_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_45->M01_AXI_arlen.bind(*p_45_M01_AXI_arlen);
        p_45_M01_AXI_arlen->set_sv_netview_offsetfromdp(10651976);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_45_M01_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_45->M01_AXI_arsize.bind(*p_45_M01_AXI_arsize);
        p_45_M01_AXI_arsize->set_sv_netview_offsetfromdp(10652032);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_45_M01_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_45->M01_AXI_arburst.bind(*p_45_M01_AXI_arburst);
        p_45_M01_AXI_arburst->set_sv_netview_offsetfromdp(10652088);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_M01_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->M01_AXI_arlock.bind(*p_45_M01_AXI_arlock);
        p_45_M01_AXI_arlock->set_sv_netview_offsetfromdp(10652144);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_45_M01_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_45->M01_AXI_arcache.bind(*p_45_M01_AXI_arcache);
        p_45_M01_AXI_arcache->set_sv_netview_offsetfromdp(10652200);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_45_M01_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_45->M01_AXI_arprot.bind(*p_45_M01_AXI_arprot);
        p_45_M01_AXI_arprot->set_sv_netview_offsetfromdp(10652256);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_45_M01_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_45->M01_AXI_arqos.bind(*p_45_M01_AXI_arqos);
        p_45_M01_AXI_arqos->set_sv_netview_offsetfromdp(10652312);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_45_M01_AXI_aruser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_45->M01_AXI_aruser.bind(*p_45_M01_AXI_aruser);
        p_45_M01_AXI_aruser->set_sv_netview_offsetfromdp(10652368);
        xsim_sc_channel<0, bool > *p_45_M01_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->M01_AXI_arvalid.bind(*p_45_M01_AXI_arvalid);
        p_45_M01_AXI_arvalid->set_sv_netview_offsetfromdp(10652424);
        xsim_sc_channel<0, bool > *p_45_M01_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_45->M01_AXI_arready.bind(*p_45_M01_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M01_AXI_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_M01_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->M01_AXI_rid.bind(*p_45_M01_AXI_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M01_AXI_rid);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_45_M01_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_45->M01_AXI_rdata.bind(*p_45_M01_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M01_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_45_M01_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_45->M01_AXI_rresp.bind(*p_45_M01_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M01_AXI_rresp);
        xsim_sc_channel<0, bool > *p_45_M01_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_45->M01_AXI_rlast.bind(*p_45_M01_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M01_AXI_rlast);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_45_M01_AXI_ruser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_45->M01_AXI_ruser.bind(*p_45_M01_AXI_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M01_AXI_ruser);
        xsim_sc_channel<0, bool > *p_45_M01_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->M01_AXI_rvalid.bind(*p_45_M01_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M01_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_45_M01_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_45->M01_AXI_rready.bind(*p_45_M01_AXI_rready);
        p_45_M01_AXI_rready->set_sv_netview_offsetfromdp(10652872);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_M02_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->M02_AXI_awid.bind(*p_45_M02_AXI_awid);
        p_45_M02_AXI_awid->set_sv_netview_offsetfromdp(10652928);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_45_M02_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_45->M02_AXI_awaddr.bind(*p_45_M02_AXI_awaddr);
        p_45_M02_AXI_awaddr->set_sv_netview_offsetfromdp(10652984);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_45_M02_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_45->M02_AXI_awlen.bind(*p_45_M02_AXI_awlen);
        p_45_M02_AXI_awlen->set_sv_netview_offsetfromdp(10653040);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_45_M02_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_45->M02_AXI_awsize.bind(*p_45_M02_AXI_awsize);
        p_45_M02_AXI_awsize->set_sv_netview_offsetfromdp(10653096);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_45_M02_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_45->M02_AXI_awburst.bind(*p_45_M02_AXI_awburst);
        p_45_M02_AXI_awburst->set_sv_netview_offsetfromdp(10653152);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_M02_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->M02_AXI_awlock.bind(*p_45_M02_AXI_awlock);
        p_45_M02_AXI_awlock->set_sv_netview_offsetfromdp(10653208);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_45_M02_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_45->M02_AXI_awcache.bind(*p_45_M02_AXI_awcache);
        p_45_M02_AXI_awcache->set_sv_netview_offsetfromdp(10653264);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_45_M02_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_45->M02_AXI_awprot.bind(*p_45_M02_AXI_awprot);
        p_45_M02_AXI_awprot->set_sv_netview_offsetfromdp(10653320);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_45_M02_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_45->M02_AXI_awqos.bind(*p_45_M02_AXI_awqos);
        p_45_M02_AXI_awqos->set_sv_netview_offsetfromdp(10653376);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_45_M02_AXI_awuser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_45->M02_AXI_awuser.bind(*p_45_M02_AXI_awuser);
        p_45_M02_AXI_awuser->set_sv_netview_offsetfromdp(10653432);
        xsim_sc_channel<0, bool > *p_45_M02_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->M02_AXI_awvalid.bind(*p_45_M02_AXI_awvalid);
        p_45_M02_AXI_awvalid->set_sv_netview_offsetfromdp(10653488);
        xsim_sc_channel<0, bool > *p_45_M02_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_45->M02_AXI_awready.bind(*p_45_M02_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M02_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_45_M02_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_45->M02_AXI_wdata.bind(*p_45_M02_AXI_wdata);
        p_45_M02_AXI_wdata->set_sv_netview_offsetfromdp(10653600);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_45_M02_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_45->M02_AXI_wstrb.bind(*p_45_M02_AXI_wstrb);
        p_45_M02_AXI_wstrb->set_sv_netview_offsetfromdp(10653656);
        xsim_sc_channel<0, bool > *p_45_M02_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_45->M02_AXI_wlast.bind(*p_45_M02_AXI_wlast);
        p_45_M02_AXI_wlast->set_sv_netview_offsetfromdp(10653712);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_45_M02_AXI_wuser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_45->M02_AXI_wuser.bind(*p_45_M02_AXI_wuser);
        p_45_M02_AXI_wuser->set_sv_netview_offsetfromdp(10653768);
        xsim_sc_channel<0, bool > *p_45_M02_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->M02_AXI_wvalid.bind(*p_45_M02_AXI_wvalid);
        p_45_M02_AXI_wvalid->set_sv_netview_offsetfromdp(10653824);
        xsim_sc_channel<0, bool > *p_45_M02_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_45->M02_AXI_wready.bind(*p_45_M02_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M02_AXI_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_M02_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->M02_AXI_bid.bind(*p_45_M02_AXI_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M02_AXI_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_45_M02_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_45->M02_AXI_bresp.bind(*p_45_M02_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M02_AXI_bresp);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_45_M02_AXI_buser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_45->M02_AXI_buser.bind(*p_45_M02_AXI_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M02_AXI_buser);
        xsim_sc_channel<0, bool > *p_45_M02_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->M02_AXI_bvalid.bind(*p_45_M02_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M02_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_45_M02_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_45->M02_AXI_bready.bind(*p_45_M02_AXI_bready);
        p_45_M02_AXI_bready->set_sv_netview_offsetfromdp(10654160);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_M02_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->M02_AXI_arid.bind(*p_45_M02_AXI_arid);
        p_45_M02_AXI_arid->set_sv_netview_offsetfromdp(10654216);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_45_M02_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_45->M02_AXI_araddr.bind(*p_45_M02_AXI_araddr);
        p_45_M02_AXI_araddr->set_sv_netview_offsetfromdp(10654272);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_45_M02_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_45->M02_AXI_arlen.bind(*p_45_M02_AXI_arlen);
        p_45_M02_AXI_arlen->set_sv_netview_offsetfromdp(10654328);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_45_M02_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_45->M02_AXI_arsize.bind(*p_45_M02_AXI_arsize);
        p_45_M02_AXI_arsize->set_sv_netview_offsetfromdp(10654384);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_45_M02_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_45->M02_AXI_arburst.bind(*p_45_M02_AXI_arburst);
        p_45_M02_AXI_arburst->set_sv_netview_offsetfromdp(10654440);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_M02_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->M02_AXI_arlock.bind(*p_45_M02_AXI_arlock);
        p_45_M02_AXI_arlock->set_sv_netview_offsetfromdp(10654496);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_45_M02_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_45->M02_AXI_arcache.bind(*p_45_M02_AXI_arcache);
        p_45_M02_AXI_arcache->set_sv_netview_offsetfromdp(10654552);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_45_M02_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_45->M02_AXI_arprot.bind(*p_45_M02_AXI_arprot);
        p_45_M02_AXI_arprot->set_sv_netview_offsetfromdp(10654608);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_45_M02_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_45->M02_AXI_arqos.bind(*p_45_M02_AXI_arqos);
        p_45_M02_AXI_arqos->set_sv_netview_offsetfromdp(10654664);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_45_M02_AXI_aruser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_45->M02_AXI_aruser.bind(*p_45_M02_AXI_aruser);
        p_45_M02_AXI_aruser->set_sv_netview_offsetfromdp(10654720);
        xsim_sc_channel<0, bool > *p_45_M02_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->M02_AXI_arvalid.bind(*p_45_M02_AXI_arvalid);
        p_45_M02_AXI_arvalid->set_sv_netview_offsetfromdp(10654776);
        xsim_sc_channel<0, bool > *p_45_M02_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_45->M02_AXI_arready.bind(*p_45_M02_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M02_AXI_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_M02_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->M02_AXI_rid.bind(*p_45_M02_AXI_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M02_AXI_rid);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_45_M02_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_45->M02_AXI_rdata.bind(*p_45_M02_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M02_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_45_M02_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_45->M02_AXI_rresp.bind(*p_45_M02_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M02_AXI_rresp);
        xsim_sc_channel<0, bool > *p_45_M02_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_45->M02_AXI_rlast.bind(*p_45_M02_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M02_AXI_rlast);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_45_M02_AXI_ruser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_45->M02_AXI_ruser.bind(*p_45_M02_AXI_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M02_AXI_ruser);
        xsim_sc_channel<0, bool > *p_45_M02_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->M02_AXI_rvalid.bind(*p_45_M02_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M02_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_45_M02_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_45->M02_AXI_rready.bind(*p_45_M02_AXI_rready);
        p_45_M02_AXI_rready->set_sv_netview_offsetfromdp(10655224);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_M03_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->M03_AXI_awid.bind(*p_45_M03_AXI_awid);
        p_45_M03_AXI_awid->set_sv_netview_offsetfromdp(10655280);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_45_M03_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_45->M03_AXI_awaddr.bind(*p_45_M03_AXI_awaddr);
        p_45_M03_AXI_awaddr->set_sv_netview_offsetfromdp(10655336);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_45_M03_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_45->M03_AXI_awlen.bind(*p_45_M03_AXI_awlen);
        p_45_M03_AXI_awlen->set_sv_netview_offsetfromdp(10655392);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_45_M03_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_45->M03_AXI_awsize.bind(*p_45_M03_AXI_awsize);
        p_45_M03_AXI_awsize->set_sv_netview_offsetfromdp(10655448);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_45_M03_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_45->M03_AXI_awburst.bind(*p_45_M03_AXI_awburst);
        p_45_M03_AXI_awburst->set_sv_netview_offsetfromdp(10655504);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_M03_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->M03_AXI_awlock.bind(*p_45_M03_AXI_awlock);
        p_45_M03_AXI_awlock->set_sv_netview_offsetfromdp(10655560);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_45_M03_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_45->M03_AXI_awcache.bind(*p_45_M03_AXI_awcache);
        p_45_M03_AXI_awcache->set_sv_netview_offsetfromdp(10655616);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_45_M03_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_45->M03_AXI_awprot.bind(*p_45_M03_AXI_awprot);
        p_45_M03_AXI_awprot->set_sv_netview_offsetfromdp(10655672);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_45_M03_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_45->M03_AXI_awqos.bind(*p_45_M03_AXI_awqos);
        p_45_M03_AXI_awqos->set_sv_netview_offsetfromdp(10655728);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_45_M03_AXI_awuser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_45->M03_AXI_awuser.bind(*p_45_M03_AXI_awuser);
        p_45_M03_AXI_awuser->set_sv_netview_offsetfromdp(10655784);
        xsim_sc_channel<0, bool > *p_45_M03_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->M03_AXI_awvalid.bind(*p_45_M03_AXI_awvalid);
        p_45_M03_AXI_awvalid->set_sv_netview_offsetfromdp(10655840);
        xsim_sc_channel<0, bool > *p_45_M03_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_45->M03_AXI_awready.bind(*p_45_M03_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M03_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_45_M03_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_45->M03_AXI_wdata.bind(*p_45_M03_AXI_wdata);
        p_45_M03_AXI_wdata->set_sv_netview_offsetfromdp(10655952);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_45_M03_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_45->M03_AXI_wstrb.bind(*p_45_M03_AXI_wstrb);
        p_45_M03_AXI_wstrb->set_sv_netview_offsetfromdp(10656008);
        xsim_sc_channel<0, bool > *p_45_M03_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_45->M03_AXI_wlast.bind(*p_45_M03_AXI_wlast);
        p_45_M03_AXI_wlast->set_sv_netview_offsetfromdp(10656064);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_45_M03_AXI_wuser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_45->M03_AXI_wuser.bind(*p_45_M03_AXI_wuser);
        p_45_M03_AXI_wuser->set_sv_netview_offsetfromdp(10656120);
        xsim_sc_channel<0, bool > *p_45_M03_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->M03_AXI_wvalid.bind(*p_45_M03_AXI_wvalid);
        p_45_M03_AXI_wvalid->set_sv_netview_offsetfromdp(10656176);
        xsim_sc_channel<0, bool > *p_45_M03_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_45->M03_AXI_wready.bind(*p_45_M03_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M03_AXI_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_M03_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->M03_AXI_bid.bind(*p_45_M03_AXI_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M03_AXI_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_45_M03_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_45->M03_AXI_bresp.bind(*p_45_M03_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M03_AXI_bresp);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_45_M03_AXI_buser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_45->M03_AXI_buser.bind(*p_45_M03_AXI_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M03_AXI_buser);
        xsim_sc_channel<0, bool > *p_45_M03_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->M03_AXI_bvalid.bind(*p_45_M03_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M03_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_45_M03_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_45->M03_AXI_bready.bind(*p_45_M03_AXI_bready);
        p_45_M03_AXI_bready->set_sv_netview_offsetfromdp(10656512);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_M03_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->M03_AXI_arid.bind(*p_45_M03_AXI_arid);
        p_45_M03_AXI_arid->set_sv_netview_offsetfromdp(10656568);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_45_M03_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_45->M03_AXI_araddr.bind(*p_45_M03_AXI_araddr);
        p_45_M03_AXI_araddr->set_sv_netview_offsetfromdp(10656624);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_45_M03_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_45->M03_AXI_arlen.bind(*p_45_M03_AXI_arlen);
        p_45_M03_AXI_arlen->set_sv_netview_offsetfromdp(10656680);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_45_M03_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_45->M03_AXI_arsize.bind(*p_45_M03_AXI_arsize);
        p_45_M03_AXI_arsize->set_sv_netview_offsetfromdp(10656736);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_45_M03_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_45->M03_AXI_arburst.bind(*p_45_M03_AXI_arburst);
        p_45_M03_AXI_arburst->set_sv_netview_offsetfromdp(10656792);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_M03_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->M03_AXI_arlock.bind(*p_45_M03_AXI_arlock);
        p_45_M03_AXI_arlock->set_sv_netview_offsetfromdp(10656848);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_45_M03_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_45->M03_AXI_arcache.bind(*p_45_M03_AXI_arcache);
        p_45_M03_AXI_arcache->set_sv_netview_offsetfromdp(10656904);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_45_M03_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_45->M03_AXI_arprot.bind(*p_45_M03_AXI_arprot);
        p_45_M03_AXI_arprot->set_sv_netview_offsetfromdp(10656960);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_45_M03_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_45->M03_AXI_arqos.bind(*p_45_M03_AXI_arqos);
        p_45_M03_AXI_arqos->set_sv_netview_offsetfromdp(10657016);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_45_M03_AXI_aruser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_45->M03_AXI_aruser.bind(*p_45_M03_AXI_aruser);
        p_45_M03_AXI_aruser->set_sv_netview_offsetfromdp(10657072);
        xsim_sc_channel<0, bool > *p_45_M03_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->M03_AXI_arvalid.bind(*p_45_M03_AXI_arvalid);
        p_45_M03_AXI_arvalid->set_sv_netview_offsetfromdp(10657128);
        xsim_sc_channel<0, bool > *p_45_M03_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_45->M03_AXI_arready.bind(*p_45_M03_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M03_AXI_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_M03_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->M03_AXI_rid.bind(*p_45_M03_AXI_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M03_AXI_rid);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_45_M03_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_45->M03_AXI_rdata.bind(*p_45_M03_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M03_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_45_M03_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_45->M03_AXI_rresp.bind(*p_45_M03_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M03_AXI_rresp);
        xsim_sc_channel<0, bool > *p_45_M03_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_45->M03_AXI_rlast.bind(*p_45_M03_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M03_AXI_rlast);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_45_M03_AXI_ruser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_45->M03_AXI_ruser.bind(*p_45_M03_AXI_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M03_AXI_ruser);
        xsim_sc_channel<0, bool > *p_45_M03_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->M03_AXI_rvalid.bind(*p_45_M03_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M03_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_45_M03_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_45->M03_AXI_rready.bind(*p_45_M03_AXI_rready);
        p_45_M03_AXI_rready->set_sv_netview_offsetfromdp(10657576);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_M04_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->M04_AXI_awid.bind(*p_45_M04_AXI_awid);
        p_45_M04_AXI_awid->set_sv_netview_offsetfromdp(10657632);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_45_M04_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_45->M04_AXI_awaddr.bind(*p_45_M04_AXI_awaddr);
        p_45_M04_AXI_awaddr->set_sv_netview_offsetfromdp(10657688);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_45_M04_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_45->M04_AXI_awlen.bind(*p_45_M04_AXI_awlen);
        p_45_M04_AXI_awlen->set_sv_netview_offsetfromdp(10657744);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_45_M04_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_45->M04_AXI_awsize.bind(*p_45_M04_AXI_awsize);
        p_45_M04_AXI_awsize->set_sv_netview_offsetfromdp(10657800);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_45_M04_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_45->M04_AXI_awburst.bind(*p_45_M04_AXI_awburst);
        p_45_M04_AXI_awburst->set_sv_netview_offsetfromdp(10657856);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_M04_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->M04_AXI_awlock.bind(*p_45_M04_AXI_awlock);
        p_45_M04_AXI_awlock->set_sv_netview_offsetfromdp(10657912);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_45_M04_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_45->M04_AXI_awcache.bind(*p_45_M04_AXI_awcache);
        p_45_M04_AXI_awcache->set_sv_netview_offsetfromdp(10657968);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_45_M04_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_45->M04_AXI_awprot.bind(*p_45_M04_AXI_awprot);
        p_45_M04_AXI_awprot->set_sv_netview_offsetfromdp(10658024);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_45_M04_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_45->M04_AXI_awqos.bind(*p_45_M04_AXI_awqos);
        p_45_M04_AXI_awqos->set_sv_netview_offsetfromdp(10658080);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_45_M04_AXI_awuser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_45->M04_AXI_awuser.bind(*p_45_M04_AXI_awuser);
        p_45_M04_AXI_awuser->set_sv_netview_offsetfromdp(10658136);
        xsim_sc_channel<0, bool > *p_45_M04_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->M04_AXI_awvalid.bind(*p_45_M04_AXI_awvalid);
        p_45_M04_AXI_awvalid->set_sv_netview_offsetfromdp(10658192);
        xsim_sc_channel<0, bool > *p_45_M04_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_45->M04_AXI_awready.bind(*p_45_M04_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M04_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_45_M04_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_45->M04_AXI_wdata.bind(*p_45_M04_AXI_wdata);
        p_45_M04_AXI_wdata->set_sv_netview_offsetfromdp(10658304);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_45_M04_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_45->M04_AXI_wstrb.bind(*p_45_M04_AXI_wstrb);
        p_45_M04_AXI_wstrb->set_sv_netview_offsetfromdp(10658360);
        xsim_sc_channel<0, bool > *p_45_M04_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_45->M04_AXI_wlast.bind(*p_45_M04_AXI_wlast);
        p_45_M04_AXI_wlast->set_sv_netview_offsetfromdp(10658416);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_45_M04_AXI_wuser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_45->M04_AXI_wuser.bind(*p_45_M04_AXI_wuser);
        p_45_M04_AXI_wuser->set_sv_netview_offsetfromdp(10658472);
        xsim_sc_channel<0, bool > *p_45_M04_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->M04_AXI_wvalid.bind(*p_45_M04_AXI_wvalid);
        p_45_M04_AXI_wvalid->set_sv_netview_offsetfromdp(10658528);
        xsim_sc_channel<0, bool > *p_45_M04_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_45->M04_AXI_wready.bind(*p_45_M04_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M04_AXI_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_M04_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->M04_AXI_bid.bind(*p_45_M04_AXI_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M04_AXI_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_45_M04_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_45->M04_AXI_bresp.bind(*p_45_M04_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M04_AXI_bresp);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_45_M04_AXI_buser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_45->M04_AXI_buser.bind(*p_45_M04_AXI_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M04_AXI_buser);
        xsim_sc_channel<0, bool > *p_45_M04_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->M04_AXI_bvalid.bind(*p_45_M04_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M04_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_45_M04_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_45->M04_AXI_bready.bind(*p_45_M04_AXI_bready);
        p_45_M04_AXI_bready->set_sv_netview_offsetfromdp(10658864);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_M04_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->M04_AXI_arid.bind(*p_45_M04_AXI_arid);
        p_45_M04_AXI_arid->set_sv_netview_offsetfromdp(10658920);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_45_M04_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_45->M04_AXI_araddr.bind(*p_45_M04_AXI_araddr);
        p_45_M04_AXI_araddr->set_sv_netview_offsetfromdp(10658976);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_45_M04_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_45->M04_AXI_arlen.bind(*p_45_M04_AXI_arlen);
        p_45_M04_AXI_arlen->set_sv_netview_offsetfromdp(10659032);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_45_M04_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_45->M04_AXI_arsize.bind(*p_45_M04_AXI_arsize);
        p_45_M04_AXI_arsize->set_sv_netview_offsetfromdp(10659088);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_45_M04_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_45->M04_AXI_arburst.bind(*p_45_M04_AXI_arburst);
        p_45_M04_AXI_arburst->set_sv_netview_offsetfromdp(10659144);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_M04_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->M04_AXI_arlock.bind(*p_45_M04_AXI_arlock);
        p_45_M04_AXI_arlock->set_sv_netview_offsetfromdp(10659200);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_45_M04_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_45->M04_AXI_arcache.bind(*p_45_M04_AXI_arcache);
        p_45_M04_AXI_arcache->set_sv_netview_offsetfromdp(10659256);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_45_M04_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_45->M04_AXI_arprot.bind(*p_45_M04_AXI_arprot);
        p_45_M04_AXI_arprot->set_sv_netview_offsetfromdp(10659312);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_45_M04_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_45->M04_AXI_arqos.bind(*p_45_M04_AXI_arqos);
        p_45_M04_AXI_arqos->set_sv_netview_offsetfromdp(10659368);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_45_M04_AXI_aruser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_45->M04_AXI_aruser.bind(*p_45_M04_AXI_aruser);
        p_45_M04_AXI_aruser->set_sv_netview_offsetfromdp(10659424);
        xsim_sc_channel<0, bool > *p_45_M04_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->M04_AXI_arvalid.bind(*p_45_M04_AXI_arvalid);
        p_45_M04_AXI_arvalid->set_sv_netview_offsetfromdp(10659480);
        xsim_sc_channel<0, bool > *p_45_M04_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_45->M04_AXI_arready.bind(*p_45_M04_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M04_AXI_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_M04_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->M04_AXI_rid.bind(*p_45_M04_AXI_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M04_AXI_rid);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_45_M04_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_45->M04_AXI_rdata.bind(*p_45_M04_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M04_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_45_M04_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_45->M04_AXI_rresp.bind(*p_45_M04_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M04_AXI_rresp);
        xsim_sc_channel<0, bool > *p_45_M04_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_45->M04_AXI_rlast.bind(*p_45_M04_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M04_AXI_rlast);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_45_M04_AXI_ruser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_45->M04_AXI_ruser.bind(*p_45_M04_AXI_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M04_AXI_ruser);
        xsim_sc_channel<0, bool > *p_45_M04_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->M04_AXI_rvalid.bind(*p_45_M04_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M04_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_45_M04_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_45->M04_AXI_rready.bind(*p_45_M04_AXI_rready);
        p_45_M04_AXI_rready->set_sv_netview_offsetfromdp(10659928);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_M05_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->M05_AXI_awid.bind(*p_45_M05_AXI_awid);
        p_45_M05_AXI_awid->set_sv_netview_offsetfromdp(10659984);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_45_M05_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_45->M05_AXI_awaddr.bind(*p_45_M05_AXI_awaddr);
        p_45_M05_AXI_awaddr->set_sv_netview_offsetfromdp(10660040);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_45_M05_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_45->M05_AXI_awlen.bind(*p_45_M05_AXI_awlen);
        p_45_M05_AXI_awlen->set_sv_netview_offsetfromdp(10660096);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_45_M05_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_45->M05_AXI_awsize.bind(*p_45_M05_AXI_awsize);
        p_45_M05_AXI_awsize->set_sv_netview_offsetfromdp(10660152);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_45_M05_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_45->M05_AXI_awburst.bind(*p_45_M05_AXI_awburst);
        p_45_M05_AXI_awburst->set_sv_netview_offsetfromdp(10660208);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_M05_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->M05_AXI_awlock.bind(*p_45_M05_AXI_awlock);
        p_45_M05_AXI_awlock->set_sv_netview_offsetfromdp(10660264);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_45_M05_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_45->M05_AXI_awcache.bind(*p_45_M05_AXI_awcache);
        p_45_M05_AXI_awcache->set_sv_netview_offsetfromdp(10660320);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_45_M05_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_45->M05_AXI_awprot.bind(*p_45_M05_AXI_awprot);
        p_45_M05_AXI_awprot->set_sv_netview_offsetfromdp(10660376);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_45_M05_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_45->M05_AXI_awqos.bind(*p_45_M05_AXI_awqos);
        p_45_M05_AXI_awqos->set_sv_netview_offsetfromdp(10660432);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_45_M05_AXI_awuser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_45->M05_AXI_awuser.bind(*p_45_M05_AXI_awuser);
        p_45_M05_AXI_awuser->set_sv_netview_offsetfromdp(10660488);
        xsim_sc_channel<0, bool > *p_45_M05_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->M05_AXI_awvalid.bind(*p_45_M05_AXI_awvalid);
        p_45_M05_AXI_awvalid->set_sv_netview_offsetfromdp(10660544);
        xsim_sc_channel<0, bool > *p_45_M05_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_45->M05_AXI_awready.bind(*p_45_M05_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M05_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_45_M05_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_45->M05_AXI_wdata.bind(*p_45_M05_AXI_wdata);
        p_45_M05_AXI_wdata->set_sv_netview_offsetfromdp(10660656);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_45_M05_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_45->M05_AXI_wstrb.bind(*p_45_M05_AXI_wstrb);
        p_45_M05_AXI_wstrb->set_sv_netview_offsetfromdp(10660712);
        xsim_sc_channel<0, bool > *p_45_M05_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_45->M05_AXI_wlast.bind(*p_45_M05_AXI_wlast);
        p_45_M05_AXI_wlast->set_sv_netview_offsetfromdp(10660768);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_45_M05_AXI_wuser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_45->M05_AXI_wuser.bind(*p_45_M05_AXI_wuser);
        p_45_M05_AXI_wuser->set_sv_netview_offsetfromdp(10660824);
        xsim_sc_channel<0, bool > *p_45_M05_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->M05_AXI_wvalid.bind(*p_45_M05_AXI_wvalid);
        p_45_M05_AXI_wvalid->set_sv_netview_offsetfromdp(10660880);
        xsim_sc_channel<0, bool > *p_45_M05_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_45->M05_AXI_wready.bind(*p_45_M05_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M05_AXI_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_M05_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->M05_AXI_bid.bind(*p_45_M05_AXI_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M05_AXI_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_45_M05_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_45->M05_AXI_bresp.bind(*p_45_M05_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M05_AXI_bresp);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_45_M05_AXI_buser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_45->M05_AXI_buser.bind(*p_45_M05_AXI_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M05_AXI_buser);
        xsim_sc_channel<0, bool > *p_45_M05_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->M05_AXI_bvalid.bind(*p_45_M05_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M05_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_45_M05_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_45->M05_AXI_bready.bind(*p_45_M05_AXI_bready);
        p_45_M05_AXI_bready->set_sv_netview_offsetfromdp(10661216);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_M05_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->M05_AXI_arid.bind(*p_45_M05_AXI_arid);
        p_45_M05_AXI_arid->set_sv_netview_offsetfromdp(10661272);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_45_M05_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_45->M05_AXI_araddr.bind(*p_45_M05_AXI_araddr);
        p_45_M05_AXI_araddr->set_sv_netview_offsetfromdp(10661328);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_45_M05_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_45->M05_AXI_arlen.bind(*p_45_M05_AXI_arlen);
        p_45_M05_AXI_arlen->set_sv_netview_offsetfromdp(10661384);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_45_M05_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_45->M05_AXI_arsize.bind(*p_45_M05_AXI_arsize);
        p_45_M05_AXI_arsize->set_sv_netview_offsetfromdp(10661440);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_45_M05_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_45->M05_AXI_arburst.bind(*p_45_M05_AXI_arburst);
        p_45_M05_AXI_arburst->set_sv_netview_offsetfromdp(10661496);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_M05_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->M05_AXI_arlock.bind(*p_45_M05_AXI_arlock);
        p_45_M05_AXI_arlock->set_sv_netview_offsetfromdp(10661552);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_45_M05_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_45->M05_AXI_arcache.bind(*p_45_M05_AXI_arcache);
        p_45_M05_AXI_arcache->set_sv_netview_offsetfromdp(10661608);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_45_M05_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_45->M05_AXI_arprot.bind(*p_45_M05_AXI_arprot);
        p_45_M05_AXI_arprot->set_sv_netview_offsetfromdp(10661664);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_45_M05_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_45->M05_AXI_arqos.bind(*p_45_M05_AXI_arqos);
        p_45_M05_AXI_arqos->set_sv_netview_offsetfromdp(10661720);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_45_M05_AXI_aruser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_45->M05_AXI_aruser.bind(*p_45_M05_AXI_aruser);
        p_45_M05_AXI_aruser->set_sv_netview_offsetfromdp(10661776);
        xsim_sc_channel<0, bool > *p_45_M05_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->M05_AXI_arvalid.bind(*p_45_M05_AXI_arvalid);
        p_45_M05_AXI_arvalid->set_sv_netview_offsetfromdp(10661832);
        xsim_sc_channel<0, bool > *p_45_M05_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_45->M05_AXI_arready.bind(*p_45_M05_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M05_AXI_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_M05_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->M05_AXI_rid.bind(*p_45_M05_AXI_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M05_AXI_rid);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_45_M05_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_45->M05_AXI_rdata.bind(*p_45_M05_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M05_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_45_M05_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_45->M05_AXI_rresp.bind(*p_45_M05_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M05_AXI_rresp);
        xsim_sc_channel<0, bool > *p_45_M05_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_45->M05_AXI_rlast.bind(*p_45_M05_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M05_AXI_rlast);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_45_M05_AXI_ruser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_45->M05_AXI_ruser.bind(*p_45_M05_AXI_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M05_AXI_ruser);
        xsim_sc_channel<0, bool > *p_45_M05_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->M05_AXI_rvalid.bind(*p_45_M05_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M05_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_45_M05_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_45->M05_AXI_rready.bind(*p_45_M05_AXI_rready);
        p_45_M05_AXI_rready->set_sv_netview_offsetfromdp(10662280);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_M06_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->M06_AXI_awid.bind(*p_45_M06_AXI_awid);
        p_45_M06_AXI_awid->set_sv_netview_offsetfromdp(10662336);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_45_M06_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_45->M06_AXI_awaddr.bind(*p_45_M06_AXI_awaddr);
        p_45_M06_AXI_awaddr->set_sv_netview_offsetfromdp(10662392);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_45_M06_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_45->M06_AXI_awlen.bind(*p_45_M06_AXI_awlen);
        p_45_M06_AXI_awlen->set_sv_netview_offsetfromdp(10662448);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_45_M06_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_45->M06_AXI_awsize.bind(*p_45_M06_AXI_awsize);
        p_45_M06_AXI_awsize->set_sv_netview_offsetfromdp(10662504);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_45_M06_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_45->M06_AXI_awburst.bind(*p_45_M06_AXI_awburst);
        p_45_M06_AXI_awburst->set_sv_netview_offsetfromdp(10662560);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_M06_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->M06_AXI_awlock.bind(*p_45_M06_AXI_awlock);
        p_45_M06_AXI_awlock->set_sv_netview_offsetfromdp(10662616);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_45_M06_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_45->M06_AXI_awcache.bind(*p_45_M06_AXI_awcache);
        p_45_M06_AXI_awcache->set_sv_netview_offsetfromdp(10662672);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_45_M06_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_45->M06_AXI_awprot.bind(*p_45_M06_AXI_awprot);
        p_45_M06_AXI_awprot->set_sv_netview_offsetfromdp(10662728);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_45_M06_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_45->M06_AXI_awqos.bind(*p_45_M06_AXI_awqos);
        p_45_M06_AXI_awqos->set_sv_netview_offsetfromdp(10662784);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_45_M06_AXI_awuser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_45->M06_AXI_awuser.bind(*p_45_M06_AXI_awuser);
        p_45_M06_AXI_awuser->set_sv_netview_offsetfromdp(10662840);
        xsim_sc_channel<0, bool > *p_45_M06_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->M06_AXI_awvalid.bind(*p_45_M06_AXI_awvalid);
        p_45_M06_AXI_awvalid->set_sv_netview_offsetfromdp(10662896);
        xsim_sc_channel<0, bool > *p_45_M06_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_45->M06_AXI_awready.bind(*p_45_M06_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M06_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_45_M06_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_45->M06_AXI_wdata.bind(*p_45_M06_AXI_wdata);
        p_45_M06_AXI_wdata->set_sv_netview_offsetfromdp(10663008);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_45_M06_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_45->M06_AXI_wstrb.bind(*p_45_M06_AXI_wstrb);
        p_45_M06_AXI_wstrb->set_sv_netview_offsetfromdp(10663064);
        xsim_sc_channel<0, bool > *p_45_M06_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_45->M06_AXI_wlast.bind(*p_45_M06_AXI_wlast);
        p_45_M06_AXI_wlast->set_sv_netview_offsetfromdp(10663120);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_45_M06_AXI_wuser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_45->M06_AXI_wuser.bind(*p_45_M06_AXI_wuser);
        p_45_M06_AXI_wuser->set_sv_netview_offsetfromdp(10663176);
        xsim_sc_channel<0, bool > *p_45_M06_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->M06_AXI_wvalid.bind(*p_45_M06_AXI_wvalid);
        p_45_M06_AXI_wvalid->set_sv_netview_offsetfromdp(10663232);
        xsim_sc_channel<0, bool > *p_45_M06_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_45->M06_AXI_wready.bind(*p_45_M06_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M06_AXI_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_M06_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->M06_AXI_bid.bind(*p_45_M06_AXI_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M06_AXI_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_45_M06_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_45->M06_AXI_bresp.bind(*p_45_M06_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M06_AXI_bresp);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_45_M06_AXI_buser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_45->M06_AXI_buser.bind(*p_45_M06_AXI_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M06_AXI_buser);
        xsim_sc_channel<0, bool > *p_45_M06_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->M06_AXI_bvalid.bind(*p_45_M06_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M06_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_45_M06_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_45->M06_AXI_bready.bind(*p_45_M06_AXI_bready);
        p_45_M06_AXI_bready->set_sv_netview_offsetfromdp(10663568);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_M06_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->M06_AXI_arid.bind(*p_45_M06_AXI_arid);
        p_45_M06_AXI_arid->set_sv_netview_offsetfromdp(10663624);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_45_M06_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_45->M06_AXI_araddr.bind(*p_45_M06_AXI_araddr);
        p_45_M06_AXI_araddr->set_sv_netview_offsetfromdp(10663680);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_45_M06_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_45->M06_AXI_arlen.bind(*p_45_M06_AXI_arlen);
        p_45_M06_AXI_arlen->set_sv_netview_offsetfromdp(10663736);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_45_M06_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_45->M06_AXI_arsize.bind(*p_45_M06_AXI_arsize);
        p_45_M06_AXI_arsize->set_sv_netview_offsetfromdp(10663792);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_45_M06_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_45->M06_AXI_arburst.bind(*p_45_M06_AXI_arburst);
        p_45_M06_AXI_arburst->set_sv_netview_offsetfromdp(10663848);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_M06_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->M06_AXI_arlock.bind(*p_45_M06_AXI_arlock);
        p_45_M06_AXI_arlock->set_sv_netview_offsetfromdp(10663904);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_45_M06_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_45->M06_AXI_arcache.bind(*p_45_M06_AXI_arcache);
        p_45_M06_AXI_arcache->set_sv_netview_offsetfromdp(10663960);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_45_M06_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_45->M06_AXI_arprot.bind(*p_45_M06_AXI_arprot);
        p_45_M06_AXI_arprot->set_sv_netview_offsetfromdp(10664016);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_45_M06_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_45->M06_AXI_arqos.bind(*p_45_M06_AXI_arqos);
        p_45_M06_AXI_arqos->set_sv_netview_offsetfromdp(10664072);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_45_M06_AXI_aruser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_45->M06_AXI_aruser.bind(*p_45_M06_AXI_aruser);
        p_45_M06_AXI_aruser->set_sv_netview_offsetfromdp(10664128);
        xsim_sc_channel<0, bool > *p_45_M06_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->M06_AXI_arvalid.bind(*p_45_M06_AXI_arvalid);
        p_45_M06_AXI_arvalid->set_sv_netview_offsetfromdp(10664184);
        xsim_sc_channel<0, bool > *p_45_M06_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_45->M06_AXI_arready.bind(*p_45_M06_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M06_AXI_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_M06_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->M06_AXI_rid.bind(*p_45_M06_AXI_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M06_AXI_rid);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_45_M06_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_45->M06_AXI_rdata.bind(*p_45_M06_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M06_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_45_M06_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_45->M06_AXI_rresp.bind(*p_45_M06_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M06_AXI_rresp);
        xsim_sc_channel<0, bool > *p_45_M06_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_45->M06_AXI_rlast.bind(*p_45_M06_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M06_AXI_rlast);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_45_M06_AXI_ruser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_45->M06_AXI_ruser.bind(*p_45_M06_AXI_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M06_AXI_ruser);
        xsim_sc_channel<0, bool > *p_45_M06_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->M06_AXI_rvalid.bind(*p_45_M06_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M06_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_45_M06_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_45->M06_AXI_rready.bind(*p_45_M06_AXI_rready);
        p_45_M06_AXI_rready->set_sv_netview_offsetfromdp(10664632);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_M07_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->M07_AXI_awid.bind(*p_45_M07_AXI_awid);
        p_45_M07_AXI_awid->set_sv_netview_offsetfromdp(10664688);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_45_M07_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_45->M07_AXI_awaddr.bind(*p_45_M07_AXI_awaddr);
        p_45_M07_AXI_awaddr->set_sv_netview_offsetfromdp(10664744);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_45_M07_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_45->M07_AXI_awlen.bind(*p_45_M07_AXI_awlen);
        p_45_M07_AXI_awlen->set_sv_netview_offsetfromdp(10664800);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_45_M07_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_45->M07_AXI_awsize.bind(*p_45_M07_AXI_awsize);
        p_45_M07_AXI_awsize->set_sv_netview_offsetfromdp(10664856);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_45_M07_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_45->M07_AXI_awburst.bind(*p_45_M07_AXI_awburst);
        p_45_M07_AXI_awburst->set_sv_netview_offsetfromdp(10664912);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_M07_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->M07_AXI_awlock.bind(*p_45_M07_AXI_awlock);
        p_45_M07_AXI_awlock->set_sv_netview_offsetfromdp(10664968);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_45_M07_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_45->M07_AXI_awcache.bind(*p_45_M07_AXI_awcache);
        p_45_M07_AXI_awcache->set_sv_netview_offsetfromdp(10665024);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_45_M07_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_45->M07_AXI_awprot.bind(*p_45_M07_AXI_awprot);
        p_45_M07_AXI_awprot->set_sv_netview_offsetfromdp(10665080);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_45_M07_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_45->M07_AXI_awqos.bind(*p_45_M07_AXI_awqos);
        p_45_M07_AXI_awqos->set_sv_netview_offsetfromdp(10665136);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_45_M07_AXI_awuser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_45->M07_AXI_awuser.bind(*p_45_M07_AXI_awuser);
        p_45_M07_AXI_awuser->set_sv_netview_offsetfromdp(10665192);
        xsim_sc_channel<0, bool > *p_45_M07_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->M07_AXI_awvalid.bind(*p_45_M07_AXI_awvalid);
        p_45_M07_AXI_awvalid->set_sv_netview_offsetfromdp(10665248);
        xsim_sc_channel<0, bool > *p_45_M07_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_45->M07_AXI_awready.bind(*p_45_M07_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M07_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_45_M07_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_45->M07_AXI_wdata.bind(*p_45_M07_AXI_wdata);
        p_45_M07_AXI_wdata->set_sv_netview_offsetfromdp(10665360);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_45_M07_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_45->M07_AXI_wstrb.bind(*p_45_M07_AXI_wstrb);
        p_45_M07_AXI_wstrb->set_sv_netview_offsetfromdp(10665416);
        xsim_sc_channel<0, bool > *p_45_M07_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_45->M07_AXI_wlast.bind(*p_45_M07_AXI_wlast);
        p_45_M07_AXI_wlast->set_sv_netview_offsetfromdp(10665472);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_45_M07_AXI_wuser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_45->M07_AXI_wuser.bind(*p_45_M07_AXI_wuser);
        p_45_M07_AXI_wuser->set_sv_netview_offsetfromdp(10665528);
        xsim_sc_channel<0, bool > *p_45_M07_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->M07_AXI_wvalid.bind(*p_45_M07_AXI_wvalid);
        p_45_M07_AXI_wvalid->set_sv_netview_offsetfromdp(10665584);
        xsim_sc_channel<0, bool > *p_45_M07_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_45->M07_AXI_wready.bind(*p_45_M07_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M07_AXI_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_M07_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->M07_AXI_bid.bind(*p_45_M07_AXI_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M07_AXI_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_45_M07_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_45->M07_AXI_bresp.bind(*p_45_M07_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M07_AXI_bresp);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_45_M07_AXI_buser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_45->M07_AXI_buser.bind(*p_45_M07_AXI_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M07_AXI_buser);
        xsim_sc_channel<0, bool > *p_45_M07_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->M07_AXI_bvalid.bind(*p_45_M07_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M07_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_45_M07_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_45->M07_AXI_bready.bind(*p_45_M07_AXI_bready);
        p_45_M07_AXI_bready->set_sv_netview_offsetfromdp(10665920);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_M07_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->M07_AXI_arid.bind(*p_45_M07_AXI_arid);
        p_45_M07_AXI_arid->set_sv_netview_offsetfromdp(10665976);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_45_M07_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_45->M07_AXI_araddr.bind(*p_45_M07_AXI_araddr);
        p_45_M07_AXI_araddr->set_sv_netview_offsetfromdp(10666032);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_45_M07_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_45->M07_AXI_arlen.bind(*p_45_M07_AXI_arlen);
        p_45_M07_AXI_arlen->set_sv_netview_offsetfromdp(10666088);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_45_M07_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_45->M07_AXI_arsize.bind(*p_45_M07_AXI_arsize);
        p_45_M07_AXI_arsize->set_sv_netview_offsetfromdp(10666144);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_45_M07_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_45->M07_AXI_arburst.bind(*p_45_M07_AXI_arburst);
        p_45_M07_AXI_arburst->set_sv_netview_offsetfromdp(10666200);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_M07_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->M07_AXI_arlock.bind(*p_45_M07_AXI_arlock);
        p_45_M07_AXI_arlock->set_sv_netview_offsetfromdp(10666256);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_45_M07_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_45->M07_AXI_arcache.bind(*p_45_M07_AXI_arcache);
        p_45_M07_AXI_arcache->set_sv_netview_offsetfromdp(10666312);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_45_M07_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_45->M07_AXI_arprot.bind(*p_45_M07_AXI_arprot);
        p_45_M07_AXI_arprot->set_sv_netview_offsetfromdp(10666368);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_45_M07_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_45->M07_AXI_arqos.bind(*p_45_M07_AXI_arqos);
        p_45_M07_AXI_arqos->set_sv_netview_offsetfromdp(10666424);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_45_M07_AXI_aruser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_45->M07_AXI_aruser.bind(*p_45_M07_AXI_aruser);
        p_45_M07_AXI_aruser->set_sv_netview_offsetfromdp(10666480);
        xsim_sc_channel<0, bool > *p_45_M07_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->M07_AXI_arvalid.bind(*p_45_M07_AXI_arvalid);
        p_45_M07_AXI_arvalid->set_sv_netview_offsetfromdp(10666536);
        xsim_sc_channel<0, bool > *p_45_M07_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_45->M07_AXI_arready.bind(*p_45_M07_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M07_AXI_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_M07_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->M07_AXI_rid.bind(*p_45_M07_AXI_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M07_AXI_rid);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_45_M07_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_45->M07_AXI_rdata.bind(*p_45_M07_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M07_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_45_M07_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_45->M07_AXI_rresp.bind(*p_45_M07_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M07_AXI_rresp);
        xsim_sc_channel<0, bool > *p_45_M07_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_45->M07_AXI_rlast.bind(*p_45_M07_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M07_AXI_rlast);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_45_M07_AXI_ruser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_45->M07_AXI_ruser.bind(*p_45_M07_AXI_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M07_AXI_ruser);
        xsim_sc_channel<0, bool > *p_45_M07_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->M07_AXI_rvalid.bind(*p_45_M07_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M07_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_45_M07_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_45->M07_AXI_rready.bind(*p_45_M07_AXI_rready);
        p_45_M07_AXI_rready->set_sv_netview_offsetfromdp(10666984);
        sc_inst_46 = new bd_d216_rs_M00_AXI_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.interconnect.rs_m00_axi");
        sc_inst_46->xsim_set_dbg_index(3216);
        xsim_sc_channel<0, bool > *p_46_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_46->aclk.bind(*p_46_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_46_aclk);
        xsim_sc_channel<0, bool > *p_46_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_46->aresetn.bind(*p_46_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_46_aresetn);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_46_s_axi_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_46->s_axi_awaddr.bind(*p_46_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_46_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_46->s_axi_awlen.bind(*p_46_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_46_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_46->s_axi_awsize.bind(*p_46_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_46_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_46->s_axi_awburst.bind(*p_46_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_46_s_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_46->s_axi_awlock.bind(*p_46_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_46_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_46->s_axi_awcache.bind(*p_46_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_46_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_46->s_axi_awprot.bind(*p_46_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_46_s_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_46->s_axi_awregion.bind(*p_46_s_axi_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_46_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_46->s_axi_awqos.bind(*p_46_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_awqos);
        xsim_sc_channel<0, bool > *p_46_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_46->s_axi_awvalid.bind(*p_46_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_46_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_46->s_axi_awready.bind(*p_46_s_axi_awready);
        p_46_s_axi_awready->set_sv_netview_offsetfromdp(10667760);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_46_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_46->s_axi_wdata.bind(*p_46_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_46_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_46->s_axi_wstrb.bind(*p_46_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_46_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_46->s_axi_wlast.bind(*p_46_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_46_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_46->s_axi_wvalid.bind(*p_46_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_46_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_46->s_axi_wready.bind(*p_46_s_axi_wready);
        p_46_s_axi_wready->set_sv_netview_offsetfromdp(10668040);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_46_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_46->s_axi_bresp.bind(*p_46_s_axi_bresp);
        p_46_s_axi_bresp->set_sv_netview_offsetfromdp(10668096);
        xsim_sc_channel<0, bool > *p_46_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_46->s_axi_bvalid.bind(*p_46_s_axi_bvalid);
        p_46_s_axi_bvalid->set_sv_netview_offsetfromdp(10668152);
        xsim_sc_channel<0, bool > *p_46_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_46->s_axi_bready.bind(*p_46_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_bready);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_46_s_axi_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_46->s_axi_araddr.bind(*p_46_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_46_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_46->s_axi_arlen.bind(*p_46_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_46_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_46->s_axi_arsize.bind(*p_46_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_46_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_46->s_axi_arburst.bind(*p_46_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_46_s_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_46->s_axi_arlock.bind(*p_46_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_46_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_46->s_axi_arcache.bind(*p_46_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_46_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_46->s_axi_arprot.bind(*p_46_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_46_s_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_46->s_axi_arregion.bind(*p_46_s_axi_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_46_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_46->s_axi_arqos.bind(*p_46_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_arqos);
        xsim_sc_channel<0, bool > *p_46_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_46->s_axi_arvalid.bind(*p_46_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_46_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_46->s_axi_arready.bind(*p_46_s_axi_arready);
        p_46_s_axi_arready->set_sv_netview_offsetfromdp(10668824);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_46_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_46->s_axi_rdata.bind(*p_46_s_axi_rdata);
        p_46_s_axi_rdata->set_sv_netview_offsetfromdp(10668880);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_46_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_46->s_axi_rresp.bind(*p_46_s_axi_rresp);
        p_46_s_axi_rresp->set_sv_netview_offsetfromdp(10668936);
        xsim_sc_channel<0, bool > *p_46_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_46->s_axi_rlast.bind(*p_46_s_axi_rlast);
        p_46_s_axi_rlast->set_sv_netview_offsetfromdp(10668992);
        xsim_sc_channel<0, bool > *p_46_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_46->s_axi_rvalid.bind(*p_46_s_axi_rvalid);
        p_46_s_axi_rvalid->set_sv_netview_offsetfromdp(10669048);
        xsim_sc_channel<0, bool > *p_46_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_46->s_axi_rready.bind(*p_46_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_rready);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_46_m_axi_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_46->m_axi_awaddr.bind(*p_46_m_axi_awaddr);
        p_46_m_axi_awaddr->set_sv_netview_offsetfromdp(10669160);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_46_m_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_46->m_axi_awlen.bind(*p_46_m_axi_awlen);
        p_46_m_axi_awlen->set_sv_netview_offsetfromdp(10669216);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_46_m_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_46->m_axi_awsize.bind(*p_46_m_axi_awsize);
        p_46_m_axi_awsize->set_sv_netview_offsetfromdp(10669272);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_46_m_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_46->m_axi_awburst.bind(*p_46_m_axi_awburst);
        p_46_m_axi_awburst->set_sv_netview_offsetfromdp(10669328);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_46_m_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_46->m_axi_awlock.bind(*p_46_m_axi_awlock);
        p_46_m_axi_awlock->set_sv_netview_offsetfromdp(10669384);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_46_m_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_46->m_axi_awcache.bind(*p_46_m_axi_awcache);
        p_46_m_axi_awcache->set_sv_netview_offsetfromdp(10669440);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_46_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_46->m_axi_awprot.bind(*p_46_m_axi_awprot);
        p_46_m_axi_awprot->set_sv_netview_offsetfromdp(10669496);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_46_m_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_46->m_axi_awregion.bind(*p_46_m_axi_awregion);
        p_46_m_axi_awregion->set_sv_netview_offsetfromdp(10669552);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_46_m_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_46->m_axi_awqos.bind(*p_46_m_axi_awqos);
        p_46_m_axi_awqos->set_sv_netview_offsetfromdp(10669608);
        xsim_sc_channel<0, bool > *p_46_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_46->m_axi_awvalid.bind(*p_46_m_axi_awvalid);
        p_46_m_axi_awvalid->set_sv_netview_offsetfromdp(10669664);
        xsim_sc_channel<0, bool > *p_46_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_46->m_axi_awready.bind(*p_46_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_46_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_46_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_46->m_axi_wdata.bind(*p_46_m_axi_wdata);
        p_46_m_axi_wdata->set_sv_netview_offsetfromdp(10669776);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_46_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_46->m_axi_wstrb.bind(*p_46_m_axi_wstrb);
        p_46_m_axi_wstrb->set_sv_netview_offsetfromdp(10669832);
        xsim_sc_channel<0, bool > *p_46_m_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_46->m_axi_wlast.bind(*p_46_m_axi_wlast);
        p_46_m_axi_wlast->set_sv_netview_offsetfromdp(10669888);
        xsim_sc_channel<0, bool > *p_46_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_46->m_axi_wvalid.bind(*p_46_m_axi_wvalid);
        p_46_m_axi_wvalid->set_sv_netview_offsetfromdp(10669944);
        xsim_sc_channel<0, bool > *p_46_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_46->m_axi_wready.bind(*p_46_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_46_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_46_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_46->m_axi_bresp.bind(*p_46_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_46_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_46_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_46->m_axi_bvalid.bind(*p_46_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_46_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_46_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_46->m_axi_bready.bind(*p_46_m_axi_bready);
        p_46_m_axi_bready->set_sv_netview_offsetfromdp(10670168);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_46_m_axi_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_46->m_axi_araddr.bind(*p_46_m_axi_araddr);
        p_46_m_axi_araddr->set_sv_netview_offsetfromdp(10670224);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_46_m_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_46->m_axi_arlen.bind(*p_46_m_axi_arlen);
        p_46_m_axi_arlen->set_sv_netview_offsetfromdp(10670280);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_46_m_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_46->m_axi_arsize.bind(*p_46_m_axi_arsize);
        p_46_m_axi_arsize->set_sv_netview_offsetfromdp(10670336);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_46_m_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_46->m_axi_arburst.bind(*p_46_m_axi_arburst);
        p_46_m_axi_arburst->set_sv_netview_offsetfromdp(10670392);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_46_m_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_46->m_axi_arlock.bind(*p_46_m_axi_arlock);
        p_46_m_axi_arlock->set_sv_netview_offsetfromdp(10670448);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_46_m_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_46->m_axi_arcache.bind(*p_46_m_axi_arcache);
        p_46_m_axi_arcache->set_sv_netview_offsetfromdp(10670504);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_46_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_46->m_axi_arprot.bind(*p_46_m_axi_arprot);
        p_46_m_axi_arprot->set_sv_netview_offsetfromdp(10670560);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_46_m_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_46->m_axi_arregion.bind(*p_46_m_axi_arregion);
        p_46_m_axi_arregion->set_sv_netview_offsetfromdp(10670616);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_46_m_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_46->m_axi_arqos.bind(*p_46_m_axi_arqos);
        p_46_m_axi_arqos->set_sv_netview_offsetfromdp(10670672);
        xsim_sc_channel<0, bool > *p_46_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_46->m_axi_arvalid.bind(*p_46_m_axi_arvalid);
        p_46_m_axi_arvalid->set_sv_netview_offsetfromdp(10670728);
        xsim_sc_channel<0, bool > *p_46_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_46->m_axi_arready.bind(*p_46_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_46_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_46_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_46->m_axi_rdata.bind(*p_46_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_46_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_46_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_46->m_axi_rresp.bind(*p_46_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_46_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_46_m_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_46->m_axi_rlast.bind(*p_46_m_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_46_m_axi_rlast);
        xsim_sc_channel<0, bool > *p_46_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_46->m_axi_rvalid.bind(*p_46_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_46_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_46_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_46->m_axi_rready.bind(*p_46_m_axi_rready);
        p_46_m_axi_rready->set_sv_netview_offsetfromdp(10671064);
        sc_inst_47 = new bd_d216_ddr4_mem00_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.memory.ddr4_mem00");
        sc_inst_47->xsim_set_dbg_index(3579);
        xsim_sc_channel<0, bool > *p_47_c0_init_calib_complete = new xsim_sc_channel<0, bool >();
        sc_inst_47->c0_init_calib_complete.bind(*p_47_c0_init_calib_complete);
        p_47_c0_init_calib_complete->set_sv_netview_offsetfromdp(11013760);
        xsim_sc_channel<0, bool > *p_47_dbg_clk = new xsim_sc_channel<0, bool >();
        sc_inst_47->dbg_clk.bind(*p_47_dbg_clk);
        p_47_dbg_clk->set_sv_netview_offsetfromdp(11013816);
        xsim_sc_channel<0, bool > *p_47_c0_sys_clk_p = new xsim_sc_channel<0, bool >();
        sc_inst_47->c0_sys_clk_p.bind(*p_47_c0_sys_clk_p);
        (*_glb_hdl_sc_channel_map).push_back(p_47_c0_sys_clk_p);
        xsim_sc_channel<0, bool > *p_47_c0_sys_clk_n = new xsim_sc_channel<0, bool >();
        sc_inst_47->c0_sys_clk_n.bind(*p_47_c0_sys_clk_n);
        (*_glb_hdl_sc_channel_map).push_back(p_47_c0_sys_clk_n);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_47_dbg_bus = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_47->dbg_bus.bind(*p_47_dbg_bus);
        p_47_dbg_bus->set_sv_netview_offsetfromdp(11013984);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_47_c0_ddr4_adr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_47->c0_ddr4_adr.bind(*p_47_c0_ddr4_adr);
        p_47_c0_ddr4_adr->set_sv_netview_offsetfromdp(11014040);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_47_c0_ddr4_ba = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_47->c0_ddr4_ba.bind(*p_47_c0_ddr4_ba);
        p_47_c0_ddr4_ba->set_sv_netview_offsetfromdp(11014096);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_47_c0_ddr4_cke = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_47->c0_ddr4_cke.bind(*p_47_c0_ddr4_cke);
        p_47_c0_ddr4_cke->set_sv_netview_offsetfromdp(11014152);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_47_c0_ddr4_cs_n = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_47->c0_ddr4_cs_n.bind(*p_47_c0_ddr4_cs_n);
        p_47_c0_ddr4_cs_n->set_sv_netview_offsetfromdp(11014208);
        xsim_sc_channel<72, sc_dt::sc_bv<72> > *p_47_c0_ddr4_dq = new xsim_sc_channel<72, sc_dt::sc_bv<72> >();
        sc_inst_47->c0_ddr4_dq.bind(*p_47_c0_ddr4_dq);
        p_47_c0_ddr4_dq->set_sv_netview_offsetfromdp(11014264);
        xsim_sc_channel<18, sc_dt::sc_bv<18> > *p_47_c0_ddr4_dqs_c = new xsim_sc_channel<18, sc_dt::sc_bv<18> >();
        sc_inst_47->c0_ddr4_dqs_c.bind(*p_47_c0_ddr4_dqs_c);
        p_47_c0_ddr4_dqs_c->set_sv_netview_offsetfromdp(11014320);
        xsim_sc_channel<18, sc_dt::sc_bv<18> > *p_47_c0_ddr4_dqs_t = new xsim_sc_channel<18, sc_dt::sc_bv<18> >();
        sc_inst_47->c0_ddr4_dqs_t.bind(*p_47_c0_ddr4_dqs_t);
        p_47_c0_ddr4_dqs_t->set_sv_netview_offsetfromdp(11014376);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_47_c0_ddr4_odt = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_47->c0_ddr4_odt.bind(*p_47_c0_ddr4_odt);
        p_47_c0_ddr4_odt->set_sv_netview_offsetfromdp(11014432);
        xsim_sc_channel<0, bool > *p_47_c0_ddr4_parity = new xsim_sc_channel<0, bool >();
        sc_inst_47->c0_ddr4_parity.bind(*p_47_c0_ddr4_parity);
        p_47_c0_ddr4_parity->set_sv_netview_offsetfromdp(11014488);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_47_c0_ddr4_bg = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_47->c0_ddr4_bg.bind(*p_47_c0_ddr4_bg);
        p_47_c0_ddr4_bg->set_sv_netview_offsetfromdp(11014544);
        xsim_sc_channel<0, bool > *p_47_c0_ddr4_reset_n = new xsim_sc_channel<0, bool >();
        sc_inst_47->c0_ddr4_reset_n.bind(*p_47_c0_ddr4_reset_n);
        p_47_c0_ddr4_reset_n->set_sv_netview_offsetfromdp(11014600);
        xsim_sc_channel<0, bool > *p_47_c0_ddr4_act_n = new xsim_sc_channel<0, bool >();
        sc_inst_47->c0_ddr4_act_n.bind(*p_47_c0_ddr4_act_n);
        p_47_c0_ddr4_act_n->set_sv_netview_offsetfromdp(11014656);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_47_c0_ddr4_ck_c = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_47->c0_ddr4_ck_c.bind(*p_47_c0_ddr4_ck_c);
        p_47_c0_ddr4_ck_c->set_sv_netview_offsetfromdp(11014712);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_47_c0_ddr4_ck_t = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_47->c0_ddr4_ck_t.bind(*p_47_c0_ddr4_ck_t);
        p_47_c0_ddr4_ck_t->set_sv_netview_offsetfromdp(11014768);
        xsim_sc_channel<0, bool > *p_47_c0_ddr4_ui_clk = new xsim_sc_channel<0, bool >();
        sc_inst_47->c0_ddr4_ui_clk.bind(*p_47_c0_ddr4_ui_clk);
        p_47_c0_ddr4_ui_clk->set_sv_netview_offsetfromdp(11014824);
        xsim_sc_channel<0, bool > *p_47_c0_ddr4_ui_clk_sync_rst = new xsim_sc_channel<0, bool >();
        sc_inst_47->c0_ddr4_ui_clk_sync_rst.bind(*p_47_c0_ddr4_ui_clk_sync_rst);
        p_47_c0_ddr4_ui_clk_sync_rst->set_sv_netview_offsetfromdp(11014880);
        xsim_sc_channel<0, bool > *p_47_c0_ddr4_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_47->c0_ddr4_aresetn.bind(*p_47_c0_ddr4_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_47_c0_ddr4_aresetn);
        xsim_sc_channel<0, bool > *p_47_c0_ddr4_s_axi_ctrl_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_47->c0_ddr4_s_axi_ctrl_awvalid.bind(*p_47_c0_ddr4_s_axi_ctrl_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_47_c0_ddr4_s_axi_ctrl_awvalid);
        xsim_sc_channel<0, bool > *p_47_c0_ddr4_s_axi_ctrl_awready = new xsim_sc_channel<0, bool >();
        sc_inst_47->c0_ddr4_s_axi_ctrl_awready.bind(*p_47_c0_ddr4_s_axi_ctrl_awready);
        p_47_c0_ddr4_s_axi_ctrl_awready->set_sv_netview_offsetfromdp(11015048);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_47_c0_ddr4_s_axi_ctrl_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_47->c0_ddr4_s_axi_ctrl_awaddr.bind(*p_47_c0_ddr4_s_axi_ctrl_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_47_c0_ddr4_s_axi_ctrl_awaddr);
        xsim_sc_channel<0, bool > *p_47_c0_ddr4_s_axi_ctrl_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_47->c0_ddr4_s_axi_ctrl_wvalid.bind(*p_47_c0_ddr4_s_axi_ctrl_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_47_c0_ddr4_s_axi_ctrl_wvalid);
        xsim_sc_channel<0, bool > *p_47_c0_ddr4_s_axi_ctrl_wready = new xsim_sc_channel<0, bool >();
        sc_inst_47->c0_ddr4_s_axi_ctrl_wready.bind(*p_47_c0_ddr4_s_axi_ctrl_wready);
        p_47_c0_ddr4_s_axi_ctrl_wready->set_sv_netview_offsetfromdp(11015216);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_47_c0_ddr4_s_axi_ctrl_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_47->c0_ddr4_s_axi_ctrl_wdata.bind(*p_47_c0_ddr4_s_axi_ctrl_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_47_c0_ddr4_s_axi_ctrl_wdata);
        xsim_sc_channel<0, bool > *p_47_c0_ddr4_s_axi_ctrl_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_47->c0_ddr4_s_axi_ctrl_bvalid.bind(*p_47_c0_ddr4_s_axi_ctrl_bvalid);
        p_47_c0_ddr4_s_axi_ctrl_bvalid->set_sv_netview_offsetfromdp(11015328);
        xsim_sc_channel<0, bool > *p_47_c0_ddr4_s_axi_ctrl_bready = new xsim_sc_channel<0, bool >();
        sc_inst_47->c0_ddr4_s_axi_ctrl_bready.bind(*p_47_c0_ddr4_s_axi_ctrl_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_47_c0_ddr4_s_axi_ctrl_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_47_c0_ddr4_s_axi_ctrl_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_47->c0_ddr4_s_axi_ctrl_bresp.bind(*p_47_c0_ddr4_s_axi_ctrl_bresp);
        p_47_c0_ddr4_s_axi_ctrl_bresp->set_sv_netview_offsetfromdp(11015440);
        xsim_sc_channel<0, bool > *p_47_c0_ddr4_s_axi_ctrl_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_47->c0_ddr4_s_axi_ctrl_arvalid.bind(*p_47_c0_ddr4_s_axi_ctrl_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_47_c0_ddr4_s_axi_ctrl_arvalid);
        xsim_sc_channel<0, bool > *p_47_c0_ddr4_s_axi_ctrl_arready = new xsim_sc_channel<0, bool >();
        sc_inst_47->c0_ddr4_s_axi_ctrl_arready.bind(*p_47_c0_ddr4_s_axi_ctrl_arready);
        p_47_c0_ddr4_s_axi_ctrl_arready->set_sv_netview_offsetfromdp(11015552);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_47_c0_ddr4_s_axi_ctrl_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_47->c0_ddr4_s_axi_ctrl_araddr.bind(*p_47_c0_ddr4_s_axi_ctrl_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_47_c0_ddr4_s_axi_ctrl_araddr);
        xsim_sc_channel<0, bool > *p_47_c0_ddr4_s_axi_ctrl_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_47->c0_ddr4_s_axi_ctrl_rvalid.bind(*p_47_c0_ddr4_s_axi_ctrl_rvalid);
        p_47_c0_ddr4_s_axi_ctrl_rvalid->set_sv_netview_offsetfromdp(11015664);
        xsim_sc_channel<0, bool > *p_47_c0_ddr4_s_axi_ctrl_rready = new xsim_sc_channel<0, bool >();
        sc_inst_47->c0_ddr4_s_axi_ctrl_rready.bind(*p_47_c0_ddr4_s_axi_ctrl_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_47_c0_ddr4_s_axi_ctrl_rready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_47_c0_ddr4_s_axi_ctrl_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_47->c0_ddr4_s_axi_ctrl_rdata.bind(*p_47_c0_ddr4_s_axi_ctrl_rdata);
        p_47_c0_ddr4_s_axi_ctrl_rdata->set_sv_netview_offsetfromdp(11015776);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_47_c0_ddr4_s_axi_ctrl_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_47->c0_ddr4_s_axi_ctrl_rresp.bind(*p_47_c0_ddr4_s_axi_ctrl_rresp);
        p_47_c0_ddr4_s_axi_ctrl_rresp->set_sv_netview_offsetfromdp(11015832);
        xsim_sc_channel<0, bool > *p_47_c0_ddr4_interrupt = new xsim_sc_channel<0, bool >();
        sc_inst_47->c0_ddr4_interrupt.bind(*p_47_c0_ddr4_interrupt);
        p_47_c0_ddr4_interrupt->set_sv_netview_offsetfromdp(11015888);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_47_c0_ddr4_s_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_47->c0_ddr4_s_axi_awid.bind(*p_47_c0_ddr4_s_axi_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_47_c0_ddr4_s_axi_awid);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_47_c0_ddr4_s_axi_awaddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_47->c0_ddr4_s_axi_awaddr.bind(*p_47_c0_ddr4_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_47_c0_ddr4_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_47_c0_ddr4_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_47->c0_ddr4_s_axi_awlen.bind(*p_47_c0_ddr4_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_47_c0_ddr4_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_47_c0_ddr4_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_47->c0_ddr4_s_axi_awsize.bind(*p_47_c0_ddr4_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_47_c0_ddr4_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_47_c0_ddr4_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_47->c0_ddr4_s_axi_awburst.bind(*p_47_c0_ddr4_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_47_c0_ddr4_s_axi_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_47_c0_ddr4_s_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_47->c0_ddr4_s_axi_awlock.bind(*p_47_c0_ddr4_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_47_c0_ddr4_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_47_c0_ddr4_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_47->c0_ddr4_s_axi_awcache.bind(*p_47_c0_ddr4_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_47_c0_ddr4_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_47_c0_ddr4_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_47->c0_ddr4_s_axi_awprot.bind(*p_47_c0_ddr4_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_47_c0_ddr4_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_47_c0_ddr4_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_47->c0_ddr4_s_axi_awqos.bind(*p_47_c0_ddr4_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_47_c0_ddr4_s_axi_awqos);
        xsim_sc_channel<0, bool > *p_47_c0_ddr4_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_47->c0_ddr4_s_axi_awvalid.bind(*p_47_c0_ddr4_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_47_c0_ddr4_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_47_c0_ddr4_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_47->c0_ddr4_s_axi_awready.bind(*p_47_c0_ddr4_s_axi_awready);
        p_47_c0_ddr4_s_axi_awready->set_sv_netview_offsetfromdp(11016504);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_47_c0_ddr4_s_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_47->c0_ddr4_s_axi_wdata.bind(*p_47_c0_ddr4_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_47_c0_ddr4_s_axi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_47_c0_ddr4_s_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_47->c0_ddr4_s_axi_wstrb.bind(*p_47_c0_ddr4_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_47_c0_ddr4_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_47_c0_ddr4_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_47->c0_ddr4_s_axi_wlast.bind(*p_47_c0_ddr4_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_47_c0_ddr4_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_47_c0_ddr4_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_47->c0_ddr4_s_axi_wvalid.bind(*p_47_c0_ddr4_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_47_c0_ddr4_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_47_c0_ddr4_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_47->c0_ddr4_s_axi_wready.bind(*p_47_c0_ddr4_s_axi_wready);
        p_47_c0_ddr4_s_axi_wready->set_sv_netview_offsetfromdp(11016784);
        xsim_sc_channel<0, bool > *p_47_c0_ddr4_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_47->c0_ddr4_s_axi_bready.bind(*p_47_c0_ddr4_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_47_c0_ddr4_s_axi_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_47_c0_ddr4_s_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_47->c0_ddr4_s_axi_bid.bind(*p_47_c0_ddr4_s_axi_bid);
        p_47_c0_ddr4_s_axi_bid->set_sv_netview_offsetfromdp(11016896);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_47_c0_ddr4_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_47->c0_ddr4_s_axi_bresp.bind(*p_47_c0_ddr4_s_axi_bresp);
        p_47_c0_ddr4_s_axi_bresp->set_sv_netview_offsetfromdp(11016952);
        xsim_sc_channel<0, bool > *p_47_c0_ddr4_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_47->c0_ddr4_s_axi_bvalid.bind(*p_47_c0_ddr4_s_axi_bvalid);
        p_47_c0_ddr4_s_axi_bvalid->set_sv_netview_offsetfromdp(11017008);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_47_c0_ddr4_s_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_47->c0_ddr4_s_axi_arid.bind(*p_47_c0_ddr4_s_axi_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_47_c0_ddr4_s_axi_arid);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_47_c0_ddr4_s_axi_araddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_47->c0_ddr4_s_axi_araddr.bind(*p_47_c0_ddr4_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_47_c0_ddr4_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_47_c0_ddr4_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_47->c0_ddr4_s_axi_arlen.bind(*p_47_c0_ddr4_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_47_c0_ddr4_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_47_c0_ddr4_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_47->c0_ddr4_s_axi_arsize.bind(*p_47_c0_ddr4_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_47_c0_ddr4_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_47_c0_ddr4_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_47->c0_ddr4_s_axi_arburst.bind(*p_47_c0_ddr4_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_47_c0_ddr4_s_axi_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_47_c0_ddr4_s_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_47->c0_ddr4_s_axi_arlock.bind(*p_47_c0_ddr4_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_47_c0_ddr4_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_47_c0_ddr4_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_47->c0_ddr4_s_axi_arcache.bind(*p_47_c0_ddr4_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_47_c0_ddr4_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_47_c0_ddr4_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_47->c0_ddr4_s_axi_arprot.bind(*p_47_c0_ddr4_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_47_c0_ddr4_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_47_c0_ddr4_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_47->c0_ddr4_s_axi_arqos.bind(*p_47_c0_ddr4_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_47_c0_ddr4_s_axi_arqos);
        xsim_sc_channel<0, bool > *p_47_c0_ddr4_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_47->c0_ddr4_s_axi_arvalid.bind(*p_47_c0_ddr4_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_47_c0_ddr4_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_47_c0_ddr4_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_47->c0_ddr4_s_axi_arready.bind(*p_47_c0_ddr4_s_axi_arready);
        p_47_c0_ddr4_s_axi_arready->set_sv_netview_offsetfromdp(11017624);
        xsim_sc_channel<0, bool > *p_47_c0_ddr4_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_47->c0_ddr4_s_axi_rready.bind(*p_47_c0_ddr4_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_47_c0_ddr4_s_axi_rready);
        xsim_sc_channel<0, bool > *p_47_c0_ddr4_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_47->c0_ddr4_s_axi_rlast.bind(*p_47_c0_ddr4_s_axi_rlast);
        p_47_c0_ddr4_s_axi_rlast->set_sv_netview_offsetfromdp(11017736);
        xsim_sc_channel<0, bool > *p_47_c0_ddr4_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_47->c0_ddr4_s_axi_rvalid.bind(*p_47_c0_ddr4_s_axi_rvalid);
        p_47_c0_ddr4_s_axi_rvalid->set_sv_netview_offsetfromdp(11017792);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_47_c0_ddr4_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_47->c0_ddr4_s_axi_rresp.bind(*p_47_c0_ddr4_s_axi_rresp);
        p_47_c0_ddr4_s_axi_rresp->set_sv_netview_offsetfromdp(11017848);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_47_c0_ddr4_s_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_47->c0_ddr4_s_axi_rid.bind(*p_47_c0_ddr4_s_axi_rid);
        p_47_c0_ddr4_s_axi_rid->set_sv_netview_offsetfromdp(11017904);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_47_c0_ddr4_s_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_47->c0_ddr4_s_axi_rdata.bind(*p_47_c0_ddr4_s_axi_rdata);
        p_47_c0_ddr4_s_axi_rdata->set_sv_netview_offsetfromdp(11017960);
        xsim_sc_channel<0, bool > *p_47_addn_ui_clkout1 = new xsim_sc_channel<0, bool >();
        sc_inst_47->addn_ui_clkout1.bind(*p_47_addn_ui_clkout1);
        p_47_addn_ui_clkout1->set_sv_netview_offsetfromdp(11018016);
        xsim_sc_channel<0, bool > *p_47_sys_rst = new xsim_sc_channel<0, bool >();
        sc_inst_47->sys_rst.bind(*p_47_sys_rst);
        (*_glb_hdl_sc_channel_map).push_back(p_47_sys_rst);
        sc_inst_48 = new bd_d216_ddr4_mem00_ctrl_cc_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.memory.ddr4_mem00_ctrl_cc");
        sc_inst_48->xsim_set_dbg_index(3580);
        xsim_sc_channel<0, bool > *p_48_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_48->s_axi_aclk.bind(*p_48_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_48_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_48->s_axi_aresetn.bind(*p_48_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_aresetn);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_48_s_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_48->s_axi_awaddr.bind(*p_48_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_48_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_48->s_axi_awprot.bind(*p_48_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_48_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_48->s_axi_awvalid.bind(*p_48_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_48_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_48->s_axi_awready.bind(*p_48_s_axi_awready);
        p_48_s_axi_awready->set_sv_netview_offsetfromdp(11018456);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_48_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_48->s_axi_wdata.bind(*p_48_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_48_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_48->s_axi_wstrb.bind(*p_48_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_48_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_48->s_axi_wvalid.bind(*p_48_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_48_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_48->s_axi_wready.bind(*p_48_s_axi_wready);
        p_48_s_axi_wready->set_sv_netview_offsetfromdp(11018680);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_48_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_48->s_axi_bresp.bind(*p_48_s_axi_bresp);
        p_48_s_axi_bresp->set_sv_netview_offsetfromdp(11018736);
        xsim_sc_channel<0, bool > *p_48_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_48->s_axi_bvalid.bind(*p_48_s_axi_bvalid);
        p_48_s_axi_bvalid->set_sv_netview_offsetfromdp(11018792);
        xsim_sc_channel<0, bool > *p_48_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_48->s_axi_bready.bind(*p_48_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_bready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_48_s_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_48->s_axi_araddr.bind(*p_48_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_48_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_48->s_axi_arprot.bind(*p_48_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_48_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_48->s_axi_arvalid.bind(*p_48_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_48_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_48->s_axi_arready.bind(*p_48_s_axi_arready);
        p_48_s_axi_arready->set_sv_netview_offsetfromdp(11019072);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_48_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_48->s_axi_rdata.bind(*p_48_s_axi_rdata);
        p_48_s_axi_rdata->set_sv_netview_offsetfromdp(11019128);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_48_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_48->s_axi_rresp.bind(*p_48_s_axi_rresp);
        p_48_s_axi_rresp->set_sv_netview_offsetfromdp(11019184);
        xsim_sc_channel<0, bool > *p_48_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_48->s_axi_rvalid.bind(*p_48_s_axi_rvalid);
        p_48_s_axi_rvalid->set_sv_netview_offsetfromdp(11019240);
        xsim_sc_channel<0, bool > *p_48_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_48->s_axi_rready.bind(*p_48_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_rready);
        xsim_sc_channel<0, bool > *p_48_m_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_48->m_axi_aclk.bind(*p_48_m_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_48_m_axi_aclk);
        xsim_sc_channel<0, bool > *p_48_m_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_48->m_axi_aresetn.bind(*p_48_m_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_48_m_axi_aresetn);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_48_m_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_48->m_axi_awaddr.bind(*p_48_m_axi_awaddr);
        p_48_m_axi_awaddr->set_sv_netview_offsetfromdp(11019464);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_48_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_48->m_axi_awprot.bind(*p_48_m_axi_awprot);
        p_48_m_axi_awprot->set_sv_netview_offsetfromdp(11019520);
        xsim_sc_channel<0, bool > *p_48_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_48->m_axi_awvalid.bind(*p_48_m_axi_awvalid);
        p_48_m_axi_awvalid->set_sv_netview_offsetfromdp(11019576);
        xsim_sc_channel<0, bool > *p_48_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_48->m_axi_awready.bind(*p_48_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_48_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_48_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_48->m_axi_wdata.bind(*p_48_m_axi_wdata);
        p_48_m_axi_wdata->set_sv_netview_offsetfromdp(11019688);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_48_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_48->m_axi_wstrb.bind(*p_48_m_axi_wstrb);
        p_48_m_axi_wstrb->set_sv_netview_offsetfromdp(11019744);
        xsim_sc_channel<0, bool > *p_48_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_48->m_axi_wvalid.bind(*p_48_m_axi_wvalid);
        p_48_m_axi_wvalid->set_sv_netview_offsetfromdp(11019800);
        xsim_sc_channel<0, bool > *p_48_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_48->m_axi_wready.bind(*p_48_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_48_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_48_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_48->m_axi_bresp.bind(*p_48_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_48_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_48_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_48->m_axi_bvalid.bind(*p_48_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_48_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_48_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_48->m_axi_bready.bind(*p_48_m_axi_bready);
        p_48_m_axi_bready->set_sv_netview_offsetfromdp(11020024);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_48_m_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_48->m_axi_araddr.bind(*p_48_m_axi_araddr);
        p_48_m_axi_araddr->set_sv_netview_offsetfromdp(11020080);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_48_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_48->m_axi_arprot.bind(*p_48_m_axi_arprot);
        p_48_m_axi_arprot->set_sv_netview_offsetfromdp(11020136);
        xsim_sc_channel<0, bool > *p_48_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_48->m_axi_arvalid.bind(*p_48_m_axi_arvalid);
        p_48_m_axi_arvalid->set_sv_netview_offsetfromdp(11020192);
        xsim_sc_channel<0, bool > *p_48_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_48->m_axi_arready.bind(*p_48_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_48_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_48_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_48->m_axi_rdata.bind(*p_48_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_48_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_48_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_48->m_axi_rresp.bind(*p_48_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_48_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_48_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_48->m_axi_rvalid.bind(*p_48_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_48_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_48_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_48->m_axi_rready.bind(*p_48_m_axi_rready);
        p_48_m_axi_rready->set_sv_netview_offsetfromdp(11020472);
        sc_inst_49 = new bd_d216_ddr4_mem01_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.memory.ddr4_mem01");
        sc_inst_49->xsim_set_dbg_index(3581);
        xsim_sc_channel<0, bool > *p_49_c0_init_calib_complete = new xsim_sc_channel<0, bool >();
        sc_inst_49->c0_init_calib_complete.bind(*p_49_c0_init_calib_complete);
        p_49_c0_init_calib_complete->set_sv_netview_offsetfromdp(11020576);
        xsim_sc_channel<0, bool > *p_49_dbg_clk = new xsim_sc_channel<0, bool >();
        sc_inst_49->dbg_clk.bind(*p_49_dbg_clk);
        p_49_dbg_clk->set_sv_netview_offsetfromdp(11020632);
        xsim_sc_channel<0, bool > *p_49_c0_sys_clk_p = new xsim_sc_channel<0, bool >();
        sc_inst_49->c0_sys_clk_p.bind(*p_49_c0_sys_clk_p);
        (*_glb_hdl_sc_channel_map).push_back(p_49_c0_sys_clk_p);
        xsim_sc_channel<0, bool > *p_49_c0_sys_clk_n = new xsim_sc_channel<0, bool >();
        sc_inst_49->c0_sys_clk_n.bind(*p_49_c0_sys_clk_n);
        (*_glb_hdl_sc_channel_map).push_back(p_49_c0_sys_clk_n);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_49_dbg_bus = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_49->dbg_bus.bind(*p_49_dbg_bus);
        p_49_dbg_bus->set_sv_netview_offsetfromdp(11020800);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_49_c0_ddr4_adr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_49->c0_ddr4_adr.bind(*p_49_c0_ddr4_adr);
        p_49_c0_ddr4_adr->set_sv_netview_offsetfromdp(11020856);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_49_c0_ddr4_ba = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_49->c0_ddr4_ba.bind(*p_49_c0_ddr4_ba);
        p_49_c0_ddr4_ba->set_sv_netview_offsetfromdp(11020912);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_49_c0_ddr4_cke = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_49->c0_ddr4_cke.bind(*p_49_c0_ddr4_cke);
        p_49_c0_ddr4_cke->set_sv_netview_offsetfromdp(11020968);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_49_c0_ddr4_cs_n = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_49->c0_ddr4_cs_n.bind(*p_49_c0_ddr4_cs_n);
        p_49_c0_ddr4_cs_n->set_sv_netview_offsetfromdp(11021024);
        xsim_sc_channel<72, sc_dt::sc_bv<72> > *p_49_c0_ddr4_dq = new xsim_sc_channel<72, sc_dt::sc_bv<72> >();
        sc_inst_49->c0_ddr4_dq.bind(*p_49_c0_ddr4_dq);
        p_49_c0_ddr4_dq->set_sv_netview_offsetfromdp(11021080);
        xsim_sc_channel<18, sc_dt::sc_bv<18> > *p_49_c0_ddr4_dqs_c = new xsim_sc_channel<18, sc_dt::sc_bv<18> >();
        sc_inst_49->c0_ddr4_dqs_c.bind(*p_49_c0_ddr4_dqs_c);
        p_49_c0_ddr4_dqs_c->set_sv_netview_offsetfromdp(11021136);
        xsim_sc_channel<18, sc_dt::sc_bv<18> > *p_49_c0_ddr4_dqs_t = new xsim_sc_channel<18, sc_dt::sc_bv<18> >();
        sc_inst_49->c0_ddr4_dqs_t.bind(*p_49_c0_ddr4_dqs_t);
        p_49_c0_ddr4_dqs_t->set_sv_netview_offsetfromdp(11021192);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_49_c0_ddr4_odt = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_49->c0_ddr4_odt.bind(*p_49_c0_ddr4_odt);
        p_49_c0_ddr4_odt->set_sv_netview_offsetfromdp(11021248);
        xsim_sc_channel<0, bool > *p_49_c0_ddr4_parity = new xsim_sc_channel<0, bool >();
        sc_inst_49->c0_ddr4_parity.bind(*p_49_c0_ddr4_parity);
        p_49_c0_ddr4_parity->set_sv_netview_offsetfromdp(11021304);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_49_c0_ddr4_bg = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_49->c0_ddr4_bg.bind(*p_49_c0_ddr4_bg);
        p_49_c0_ddr4_bg->set_sv_netview_offsetfromdp(11021360);
        xsim_sc_channel<0, bool > *p_49_c0_ddr4_reset_n = new xsim_sc_channel<0, bool >();
        sc_inst_49->c0_ddr4_reset_n.bind(*p_49_c0_ddr4_reset_n);
        p_49_c0_ddr4_reset_n->set_sv_netview_offsetfromdp(11021416);
        xsim_sc_channel<0, bool > *p_49_c0_ddr4_act_n = new xsim_sc_channel<0, bool >();
        sc_inst_49->c0_ddr4_act_n.bind(*p_49_c0_ddr4_act_n);
        p_49_c0_ddr4_act_n->set_sv_netview_offsetfromdp(11021472);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_49_c0_ddr4_ck_c = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_49->c0_ddr4_ck_c.bind(*p_49_c0_ddr4_ck_c);
        p_49_c0_ddr4_ck_c->set_sv_netview_offsetfromdp(11021528);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_49_c0_ddr4_ck_t = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_49->c0_ddr4_ck_t.bind(*p_49_c0_ddr4_ck_t);
        p_49_c0_ddr4_ck_t->set_sv_netview_offsetfromdp(11021584);
        xsim_sc_channel<0, bool > *p_49_c0_ddr4_ui_clk = new xsim_sc_channel<0, bool >();
        sc_inst_49->c0_ddr4_ui_clk.bind(*p_49_c0_ddr4_ui_clk);
        p_49_c0_ddr4_ui_clk->set_sv_netview_offsetfromdp(11021640);
        xsim_sc_channel<0, bool > *p_49_c0_ddr4_ui_clk_sync_rst = new xsim_sc_channel<0, bool >();
        sc_inst_49->c0_ddr4_ui_clk_sync_rst.bind(*p_49_c0_ddr4_ui_clk_sync_rst);
        p_49_c0_ddr4_ui_clk_sync_rst->set_sv_netview_offsetfromdp(11021696);
        xsim_sc_channel<0, bool > *p_49_c0_ddr4_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_49->c0_ddr4_aresetn.bind(*p_49_c0_ddr4_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_49_c0_ddr4_aresetn);
        xsim_sc_channel<0, bool > *p_49_c0_ddr4_s_axi_ctrl_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_49->c0_ddr4_s_axi_ctrl_awvalid.bind(*p_49_c0_ddr4_s_axi_ctrl_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_49_c0_ddr4_s_axi_ctrl_awvalid);
        xsim_sc_channel<0, bool > *p_49_c0_ddr4_s_axi_ctrl_awready = new xsim_sc_channel<0, bool >();
        sc_inst_49->c0_ddr4_s_axi_ctrl_awready.bind(*p_49_c0_ddr4_s_axi_ctrl_awready);
        p_49_c0_ddr4_s_axi_ctrl_awready->set_sv_netview_offsetfromdp(11021864);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_49_c0_ddr4_s_axi_ctrl_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_49->c0_ddr4_s_axi_ctrl_awaddr.bind(*p_49_c0_ddr4_s_axi_ctrl_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_49_c0_ddr4_s_axi_ctrl_awaddr);
        xsim_sc_channel<0, bool > *p_49_c0_ddr4_s_axi_ctrl_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_49->c0_ddr4_s_axi_ctrl_wvalid.bind(*p_49_c0_ddr4_s_axi_ctrl_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_49_c0_ddr4_s_axi_ctrl_wvalid);
        xsim_sc_channel<0, bool > *p_49_c0_ddr4_s_axi_ctrl_wready = new xsim_sc_channel<0, bool >();
        sc_inst_49->c0_ddr4_s_axi_ctrl_wready.bind(*p_49_c0_ddr4_s_axi_ctrl_wready);
        p_49_c0_ddr4_s_axi_ctrl_wready->set_sv_netview_offsetfromdp(11022032);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_49_c0_ddr4_s_axi_ctrl_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_49->c0_ddr4_s_axi_ctrl_wdata.bind(*p_49_c0_ddr4_s_axi_ctrl_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_49_c0_ddr4_s_axi_ctrl_wdata);
        xsim_sc_channel<0, bool > *p_49_c0_ddr4_s_axi_ctrl_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_49->c0_ddr4_s_axi_ctrl_bvalid.bind(*p_49_c0_ddr4_s_axi_ctrl_bvalid);
        p_49_c0_ddr4_s_axi_ctrl_bvalid->set_sv_netview_offsetfromdp(11022144);
        xsim_sc_channel<0, bool > *p_49_c0_ddr4_s_axi_ctrl_bready = new xsim_sc_channel<0, bool >();
        sc_inst_49->c0_ddr4_s_axi_ctrl_bready.bind(*p_49_c0_ddr4_s_axi_ctrl_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_49_c0_ddr4_s_axi_ctrl_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_49_c0_ddr4_s_axi_ctrl_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_49->c0_ddr4_s_axi_ctrl_bresp.bind(*p_49_c0_ddr4_s_axi_ctrl_bresp);
        p_49_c0_ddr4_s_axi_ctrl_bresp->set_sv_netview_offsetfromdp(11022256);
        xsim_sc_channel<0, bool > *p_49_c0_ddr4_s_axi_ctrl_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_49->c0_ddr4_s_axi_ctrl_arvalid.bind(*p_49_c0_ddr4_s_axi_ctrl_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_49_c0_ddr4_s_axi_ctrl_arvalid);
        xsim_sc_channel<0, bool > *p_49_c0_ddr4_s_axi_ctrl_arready = new xsim_sc_channel<0, bool >();
        sc_inst_49->c0_ddr4_s_axi_ctrl_arready.bind(*p_49_c0_ddr4_s_axi_ctrl_arready);
        p_49_c0_ddr4_s_axi_ctrl_arready->set_sv_netview_offsetfromdp(11022368);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_49_c0_ddr4_s_axi_ctrl_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_49->c0_ddr4_s_axi_ctrl_araddr.bind(*p_49_c0_ddr4_s_axi_ctrl_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_49_c0_ddr4_s_axi_ctrl_araddr);
        xsim_sc_channel<0, bool > *p_49_c0_ddr4_s_axi_ctrl_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_49->c0_ddr4_s_axi_ctrl_rvalid.bind(*p_49_c0_ddr4_s_axi_ctrl_rvalid);
        p_49_c0_ddr4_s_axi_ctrl_rvalid->set_sv_netview_offsetfromdp(11022480);
        xsim_sc_channel<0, bool > *p_49_c0_ddr4_s_axi_ctrl_rready = new xsim_sc_channel<0, bool >();
        sc_inst_49->c0_ddr4_s_axi_ctrl_rready.bind(*p_49_c0_ddr4_s_axi_ctrl_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_49_c0_ddr4_s_axi_ctrl_rready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_49_c0_ddr4_s_axi_ctrl_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_49->c0_ddr4_s_axi_ctrl_rdata.bind(*p_49_c0_ddr4_s_axi_ctrl_rdata);
        p_49_c0_ddr4_s_axi_ctrl_rdata->set_sv_netview_offsetfromdp(11022592);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_49_c0_ddr4_s_axi_ctrl_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_49->c0_ddr4_s_axi_ctrl_rresp.bind(*p_49_c0_ddr4_s_axi_ctrl_rresp);
        p_49_c0_ddr4_s_axi_ctrl_rresp->set_sv_netview_offsetfromdp(11022648);
        xsim_sc_channel<0, bool > *p_49_c0_ddr4_interrupt = new xsim_sc_channel<0, bool >();
        sc_inst_49->c0_ddr4_interrupt.bind(*p_49_c0_ddr4_interrupt);
        p_49_c0_ddr4_interrupt->set_sv_netview_offsetfromdp(11022704);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_49_c0_ddr4_s_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_49->c0_ddr4_s_axi_awid.bind(*p_49_c0_ddr4_s_axi_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_49_c0_ddr4_s_axi_awid);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_49_c0_ddr4_s_axi_awaddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_49->c0_ddr4_s_axi_awaddr.bind(*p_49_c0_ddr4_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_49_c0_ddr4_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_49_c0_ddr4_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_49->c0_ddr4_s_axi_awlen.bind(*p_49_c0_ddr4_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_49_c0_ddr4_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_49_c0_ddr4_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_49->c0_ddr4_s_axi_awsize.bind(*p_49_c0_ddr4_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_49_c0_ddr4_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_49_c0_ddr4_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_49->c0_ddr4_s_axi_awburst.bind(*p_49_c0_ddr4_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_49_c0_ddr4_s_axi_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_49_c0_ddr4_s_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_49->c0_ddr4_s_axi_awlock.bind(*p_49_c0_ddr4_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_49_c0_ddr4_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_49_c0_ddr4_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_49->c0_ddr4_s_axi_awcache.bind(*p_49_c0_ddr4_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_49_c0_ddr4_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_49_c0_ddr4_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_49->c0_ddr4_s_axi_awprot.bind(*p_49_c0_ddr4_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_49_c0_ddr4_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_49_c0_ddr4_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_49->c0_ddr4_s_axi_awqos.bind(*p_49_c0_ddr4_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_49_c0_ddr4_s_axi_awqos);
        xsim_sc_channel<0, bool > *p_49_c0_ddr4_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_49->c0_ddr4_s_axi_awvalid.bind(*p_49_c0_ddr4_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_49_c0_ddr4_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_49_c0_ddr4_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_49->c0_ddr4_s_axi_awready.bind(*p_49_c0_ddr4_s_axi_awready);
        p_49_c0_ddr4_s_axi_awready->set_sv_netview_offsetfromdp(11023320);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_49_c0_ddr4_s_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_49->c0_ddr4_s_axi_wdata.bind(*p_49_c0_ddr4_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_49_c0_ddr4_s_axi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_49_c0_ddr4_s_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_49->c0_ddr4_s_axi_wstrb.bind(*p_49_c0_ddr4_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_49_c0_ddr4_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_49_c0_ddr4_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_49->c0_ddr4_s_axi_wlast.bind(*p_49_c0_ddr4_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_49_c0_ddr4_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_49_c0_ddr4_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_49->c0_ddr4_s_axi_wvalid.bind(*p_49_c0_ddr4_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_49_c0_ddr4_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_49_c0_ddr4_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_49->c0_ddr4_s_axi_wready.bind(*p_49_c0_ddr4_s_axi_wready);
        p_49_c0_ddr4_s_axi_wready->set_sv_netview_offsetfromdp(11023600);
        xsim_sc_channel<0, bool > *p_49_c0_ddr4_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_49->c0_ddr4_s_axi_bready.bind(*p_49_c0_ddr4_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_49_c0_ddr4_s_axi_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_49_c0_ddr4_s_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_49->c0_ddr4_s_axi_bid.bind(*p_49_c0_ddr4_s_axi_bid);
        p_49_c0_ddr4_s_axi_bid->set_sv_netview_offsetfromdp(11023712);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_49_c0_ddr4_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_49->c0_ddr4_s_axi_bresp.bind(*p_49_c0_ddr4_s_axi_bresp);
        p_49_c0_ddr4_s_axi_bresp->set_sv_netview_offsetfromdp(11023768);
        xsim_sc_channel<0, bool > *p_49_c0_ddr4_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_49->c0_ddr4_s_axi_bvalid.bind(*p_49_c0_ddr4_s_axi_bvalid);
        p_49_c0_ddr4_s_axi_bvalid->set_sv_netview_offsetfromdp(11023824);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_49_c0_ddr4_s_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_49->c0_ddr4_s_axi_arid.bind(*p_49_c0_ddr4_s_axi_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_49_c0_ddr4_s_axi_arid);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_49_c0_ddr4_s_axi_araddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_49->c0_ddr4_s_axi_araddr.bind(*p_49_c0_ddr4_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_49_c0_ddr4_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_49_c0_ddr4_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_49->c0_ddr4_s_axi_arlen.bind(*p_49_c0_ddr4_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_49_c0_ddr4_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_49_c0_ddr4_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_49->c0_ddr4_s_axi_arsize.bind(*p_49_c0_ddr4_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_49_c0_ddr4_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_49_c0_ddr4_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_49->c0_ddr4_s_axi_arburst.bind(*p_49_c0_ddr4_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_49_c0_ddr4_s_axi_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_49_c0_ddr4_s_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_49->c0_ddr4_s_axi_arlock.bind(*p_49_c0_ddr4_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_49_c0_ddr4_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_49_c0_ddr4_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_49->c0_ddr4_s_axi_arcache.bind(*p_49_c0_ddr4_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_49_c0_ddr4_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_49_c0_ddr4_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_49->c0_ddr4_s_axi_arprot.bind(*p_49_c0_ddr4_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_49_c0_ddr4_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_49_c0_ddr4_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_49->c0_ddr4_s_axi_arqos.bind(*p_49_c0_ddr4_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_49_c0_ddr4_s_axi_arqos);
        xsim_sc_channel<0, bool > *p_49_c0_ddr4_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_49->c0_ddr4_s_axi_arvalid.bind(*p_49_c0_ddr4_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_49_c0_ddr4_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_49_c0_ddr4_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_49->c0_ddr4_s_axi_arready.bind(*p_49_c0_ddr4_s_axi_arready);
        p_49_c0_ddr4_s_axi_arready->set_sv_netview_offsetfromdp(11024440);
        xsim_sc_channel<0, bool > *p_49_c0_ddr4_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_49->c0_ddr4_s_axi_rready.bind(*p_49_c0_ddr4_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_49_c0_ddr4_s_axi_rready);
        xsim_sc_channel<0, bool > *p_49_c0_ddr4_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_49->c0_ddr4_s_axi_rlast.bind(*p_49_c0_ddr4_s_axi_rlast);
        p_49_c0_ddr4_s_axi_rlast->set_sv_netview_offsetfromdp(11024552);
        xsim_sc_channel<0, bool > *p_49_c0_ddr4_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_49->c0_ddr4_s_axi_rvalid.bind(*p_49_c0_ddr4_s_axi_rvalid);
        p_49_c0_ddr4_s_axi_rvalid->set_sv_netview_offsetfromdp(11024608);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_49_c0_ddr4_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_49->c0_ddr4_s_axi_rresp.bind(*p_49_c0_ddr4_s_axi_rresp);
        p_49_c0_ddr4_s_axi_rresp->set_sv_netview_offsetfromdp(11024664);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_49_c0_ddr4_s_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_49->c0_ddr4_s_axi_rid.bind(*p_49_c0_ddr4_s_axi_rid);
        p_49_c0_ddr4_s_axi_rid->set_sv_netview_offsetfromdp(11024720);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_49_c0_ddr4_s_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_49->c0_ddr4_s_axi_rdata.bind(*p_49_c0_ddr4_s_axi_rdata);
        p_49_c0_ddr4_s_axi_rdata->set_sv_netview_offsetfromdp(11024776);
        xsim_sc_channel<0, bool > *p_49_addn_ui_clkout1 = new xsim_sc_channel<0, bool >();
        sc_inst_49->addn_ui_clkout1.bind(*p_49_addn_ui_clkout1);
        p_49_addn_ui_clkout1->set_sv_netview_offsetfromdp(11024832);
        xsim_sc_channel<0, bool > *p_49_sys_rst = new xsim_sc_channel<0, bool >();
        sc_inst_49->sys_rst.bind(*p_49_sys_rst);
        (*_glb_hdl_sc_channel_map).push_back(p_49_sys_rst);
        sc_inst_50 = new bd_d216_ddr4_mem01_ctrl_cc_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.memory.ddr4_mem01_ctrl_cc");
        sc_inst_50->xsim_set_dbg_index(3582);
        xsim_sc_channel<0, bool > *p_50_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_50->s_axi_aclk.bind(*p_50_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_50_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_50->s_axi_aresetn.bind(*p_50_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_aresetn);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_50_s_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_50->s_axi_awaddr.bind(*p_50_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_50_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_50->s_axi_awprot.bind(*p_50_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_50_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_50->s_axi_awvalid.bind(*p_50_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_50_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_50->s_axi_awready.bind(*p_50_s_axi_awready);
        p_50_s_axi_awready->set_sv_netview_offsetfromdp(11025272);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_50_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_50->s_axi_wdata.bind(*p_50_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_50_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_50->s_axi_wstrb.bind(*p_50_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_50_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_50->s_axi_wvalid.bind(*p_50_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_50_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_50->s_axi_wready.bind(*p_50_s_axi_wready);
        p_50_s_axi_wready->set_sv_netview_offsetfromdp(11025496);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_50_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_50->s_axi_bresp.bind(*p_50_s_axi_bresp);
        p_50_s_axi_bresp->set_sv_netview_offsetfromdp(11025552);
        xsim_sc_channel<0, bool > *p_50_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_50->s_axi_bvalid.bind(*p_50_s_axi_bvalid);
        p_50_s_axi_bvalid->set_sv_netview_offsetfromdp(11025608);
        xsim_sc_channel<0, bool > *p_50_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_50->s_axi_bready.bind(*p_50_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_bready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_50_s_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_50->s_axi_araddr.bind(*p_50_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_50_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_50->s_axi_arprot.bind(*p_50_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_50_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_50->s_axi_arvalid.bind(*p_50_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_50_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_50->s_axi_arready.bind(*p_50_s_axi_arready);
        p_50_s_axi_arready->set_sv_netview_offsetfromdp(11025888);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_50_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_50->s_axi_rdata.bind(*p_50_s_axi_rdata);
        p_50_s_axi_rdata->set_sv_netview_offsetfromdp(11025944);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_50_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_50->s_axi_rresp.bind(*p_50_s_axi_rresp);
        p_50_s_axi_rresp->set_sv_netview_offsetfromdp(11026000);
        xsim_sc_channel<0, bool > *p_50_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_50->s_axi_rvalid.bind(*p_50_s_axi_rvalid);
        p_50_s_axi_rvalid->set_sv_netview_offsetfromdp(11026056);
        xsim_sc_channel<0, bool > *p_50_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_50->s_axi_rready.bind(*p_50_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_rready);
        xsim_sc_channel<0, bool > *p_50_m_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_50->m_axi_aclk.bind(*p_50_m_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_50_m_axi_aclk);
        xsim_sc_channel<0, bool > *p_50_m_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_50->m_axi_aresetn.bind(*p_50_m_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_50_m_axi_aresetn);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_50_m_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_50->m_axi_awaddr.bind(*p_50_m_axi_awaddr);
        p_50_m_axi_awaddr->set_sv_netview_offsetfromdp(11026280);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_50_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_50->m_axi_awprot.bind(*p_50_m_axi_awprot);
        p_50_m_axi_awprot->set_sv_netview_offsetfromdp(11026336);
        xsim_sc_channel<0, bool > *p_50_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_50->m_axi_awvalid.bind(*p_50_m_axi_awvalid);
        p_50_m_axi_awvalid->set_sv_netview_offsetfromdp(11026392);
        xsim_sc_channel<0, bool > *p_50_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_50->m_axi_awready.bind(*p_50_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_50_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_50_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_50->m_axi_wdata.bind(*p_50_m_axi_wdata);
        p_50_m_axi_wdata->set_sv_netview_offsetfromdp(11026504);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_50_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_50->m_axi_wstrb.bind(*p_50_m_axi_wstrb);
        p_50_m_axi_wstrb->set_sv_netview_offsetfromdp(11026560);
        xsim_sc_channel<0, bool > *p_50_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_50->m_axi_wvalid.bind(*p_50_m_axi_wvalid);
        p_50_m_axi_wvalid->set_sv_netview_offsetfromdp(11026616);
        xsim_sc_channel<0, bool > *p_50_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_50->m_axi_wready.bind(*p_50_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_50_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_50_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_50->m_axi_bresp.bind(*p_50_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_50_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_50_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_50->m_axi_bvalid.bind(*p_50_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_50_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_50_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_50->m_axi_bready.bind(*p_50_m_axi_bready);
        p_50_m_axi_bready->set_sv_netview_offsetfromdp(11026840);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_50_m_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_50->m_axi_araddr.bind(*p_50_m_axi_araddr);
        p_50_m_axi_araddr->set_sv_netview_offsetfromdp(11026896);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_50_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_50->m_axi_arprot.bind(*p_50_m_axi_arprot);
        p_50_m_axi_arprot->set_sv_netview_offsetfromdp(11026952);
        xsim_sc_channel<0, bool > *p_50_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_50->m_axi_arvalid.bind(*p_50_m_axi_arvalid);
        p_50_m_axi_arvalid->set_sv_netview_offsetfromdp(11027008);
        xsim_sc_channel<0, bool > *p_50_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_50->m_axi_arready.bind(*p_50_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_50_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_50_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_50->m_axi_rdata.bind(*p_50_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_50_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_50_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_50->m_axi_rresp.bind(*p_50_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_50_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_50_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_50->m_axi_rvalid.bind(*p_50_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_50_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_50_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_50->m_axi_rready.bind(*p_50_m_axi_rready);
        p_50_m_axi_rready->set_sv_netview_offsetfromdp(11027288);
        sc_inst_51 = new bd_d216_interconnect_ddrmem_ctrl_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.memory.interconnect_ddrmem_ctrl");
        sc_inst_51->xsim_set_dbg_index(3583);
        xsim_sc_channel<0, bool > *p_51_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_51->aclk.bind(*p_51_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_51_aclk);
        xsim_sc_channel<0, bool > *p_51_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_51->aresetn.bind(*p_51_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_51_aresetn);
        xsim_sc_channel<31, sc_dt::sc_bv<31> > *p_51_s_axi_awaddr = new xsim_sc_channel<31, sc_dt::sc_bv<31> >();
        sc_inst_51->s_axi_awaddr.bind(*p_51_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_51_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_51->s_axi_awprot.bind(*p_51_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_awprot);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_51_s_axi_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_51->s_axi_awvalid.bind(*p_51_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_awvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_51_s_axi_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_51->s_axi_awready.bind(*p_51_s_axi_awready);
        p_51_s_axi_awready->set_sv_netview_offsetfromdp(11027672);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_51_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_51->s_axi_wdata.bind(*p_51_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_51_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_51->s_axi_wstrb.bind(*p_51_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_wstrb);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_51_s_axi_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_51->s_axi_wvalid.bind(*p_51_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_wvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_51_s_axi_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_51->s_axi_wready.bind(*p_51_s_axi_wready);
        p_51_s_axi_wready->set_sv_netview_offsetfromdp(11027896);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_51_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_51->s_axi_bresp.bind(*p_51_s_axi_bresp);
        p_51_s_axi_bresp->set_sv_netview_offsetfromdp(11027952);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_51_s_axi_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_51->s_axi_bvalid.bind(*p_51_s_axi_bvalid);
        p_51_s_axi_bvalid->set_sv_netview_offsetfromdp(11028008);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_51_s_axi_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_51->s_axi_bready.bind(*p_51_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_bready);
        xsim_sc_channel<31, sc_dt::sc_bv<31> > *p_51_s_axi_araddr = new xsim_sc_channel<31, sc_dt::sc_bv<31> >();
        sc_inst_51->s_axi_araddr.bind(*p_51_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_51_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_51->s_axi_arprot.bind(*p_51_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_arprot);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_51_s_axi_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_51->s_axi_arvalid.bind(*p_51_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_arvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_51_s_axi_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_51->s_axi_arready.bind(*p_51_s_axi_arready);
        p_51_s_axi_arready->set_sv_netview_offsetfromdp(11028288);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_51_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_51->s_axi_rdata.bind(*p_51_s_axi_rdata);
        p_51_s_axi_rdata->set_sv_netview_offsetfromdp(11028344);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_51_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_51->s_axi_rresp.bind(*p_51_s_axi_rresp);
        p_51_s_axi_rresp->set_sv_netview_offsetfromdp(11028400);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_51_s_axi_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_51->s_axi_rvalid.bind(*p_51_s_axi_rvalid);
        p_51_s_axi_rvalid->set_sv_netview_offsetfromdp(11028456);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_51_s_axi_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_51->s_axi_rready.bind(*p_51_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_rready);
        xsim_sc_channel<62, sc_dt::sc_bv<62> > *p_51_m_axi_awaddr = new xsim_sc_channel<62, sc_dt::sc_bv<62> >();
        sc_inst_51->m_axi_awaddr.bind(*p_51_m_axi_awaddr);
        p_51_m_axi_awaddr->set_sv_netview_offsetfromdp(11028568);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_51_m_axi_awprot = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_51->m_axi_awprot.bind(*p_51_m_axi_awprot);
        p_51_m_axi_awprot->set_sv_netview_offsetfromdp(11028624);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_51_m_axi_awvalid = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_51->m_axi_awvalid.bind(*p_51_m_axi_awvalid);
        p_51_m_axi_awvalid->set_sv_netview_offsetfromdp(11028680);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_51_m_axi_awready = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_51->m_axi_awready.bind(*p_51_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_51_m_axi_awready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_51_m_axi_wdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_51->m_axi_wdata.bind(*p_51_m_axi_wdata);
        p_51_m_axi_wdata->set_sv_netview_offsetfromdp(11028792);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_51_m_axi_wstrb = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_51->m_axi_wstrb.bind(*p_51_m_axi_wstrb);
        p_51_m_axi_wstrb->set_sv_netview_offsetfromdp(11028848);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_51_m_axi_wvalid = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_51->m_axi_wvalid.bind(*p_51_m_axi_wvalid);
        p_51_m_axi_wvalid->set_sv_netview_offsetfromdp(11028904);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_51_m_axi_wready = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_51->m_axi_wready.bind(*p_51_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_51_m_axi_wready);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_51_m_axi_bresp = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_51->m_axi_bresp.bind(*p_51_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_51_m_axi_bresp);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_51_m_axi_bvalid = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_51->m_axi_bvalid.bind(*p_51_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_51_m_axi_bvalid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_51_m_axi_bready = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_51->m_axi_bready.bind(*p_51_m_axi_bready);
        p_51_m_axi_bready->set_sv_netview_offsetfromdp(11029128);
        xsim_sc_channel<62, sc_dt::sc_bv<62> > *p_51_m_axi_araddr = new xsim_sc_channel<62, sc_dt::sc_bv<62> >();
        sc_inst_51->m_axi_araddr.bind(*p_51_m_axi_araddr);
        p_51_m_axi_araddr->set_sv_netview_offsetfromdp(11029184);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_51_m_axi_arprot = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_51->m_axi_arprot.bind(*p_51_m_axi_arprot);
        p_51_m_axi_arprot->set_sv_netview_offsetfromdp(11029240);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_51_m_axi_arvalid = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_51->m_axi_arvalid.bind(*p_51_m_axi_arvalid);
        p_51_m_axi_arvalid->set_sv_netview_offsetfromdp(11029296);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_51_m_axi_arready = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_51->m_axi_arready.bind(*p_51_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_51_m_axi_arready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_51_m_axi_rdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_51->m_axi_rdata.bind(*p_51_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_51_m_axi_rdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_51_m_axi_rresp = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_51->m_axi_rresp.bind(*p_51_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_51_m_axi_rresp);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_51_m_axi_rvalid = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_51->m_axi_rvalid.bind(*p_51_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_51_m_axi_rvalid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_51_m_axi_rready = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_51->m_axi_rready.bind(*p_51_m_axi_rready);
        p_51_m_axi_rready->set_sv_netview_offsetfromdp(11029576);
        sc_inst_52 = new bd_d216_plram_mem00_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.memory.plram_mem00");
        sc_inst_52->xsim_set_dbg_index(3584);
        xsim_sc_channel<0, bool > *p_52_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_52->s_axi_aclk.bind(*p_52_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_52_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_52_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_52->s_axi_aresetn.bind(*p_52_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_52_s_axi_aresetn);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_52_s_axi_awaddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_52->s_axi_awaddr.bind(*p_52_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_52_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_52_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_52->s_axi_awlen.bind(*p_52_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_52_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_52_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_52->s_axi_awsize.bind(*p_52_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_52_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_52_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_52->s_axi_awburst.bind(*p_52_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_52_s_axi_awburst);
        xsim_sc_channel<0, bool > *p_52_s_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_52->s_axi_awlock.bind(*p_52_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_52_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_52_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_52->s_axi_awcache.bind(*p_52_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_52_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_52_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_52->s_axi_awprot.bind(*p_52_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_52_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_52_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_52->s_axi_awvalid.bind(*p_52_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_52_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_52_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_52->s_axi_awready.bind(*p_52_s_axi_awready);
        p_52_s_axi_awready->set_sv_netview_offsetfromdp(11030240);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_52_s_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_52->s_axi_wdata.bind(*p_52_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_52_s_axi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_52_s_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_52->s_axi_wstrb.bind(*p_52_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_52_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_52_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_52->s_axi_wlast.bind(*p_52_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_52_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_52_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_52->s_axi_wvalid.bind(*p_52_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_52_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_52_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_52->s_axi_wready.bind(*p_52_s_axi_wready);
        p_52_s_axi_wready->set_sv_netview_offsetfromdp(11030520);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_52_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_52->s_axi_bresp.bind(*p_52_s_axi_bresp);
        p_52_s_axi_bresp->set_sv_netview_offsetfromdp(11030576);
        xsim_sc_channel<0, bool > *p_52_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_52->s_axi_bvalid.bind(*p_52_s_axi_bvalid);
        p_52_s_axi_bvalid->set_sv_netview_offsetfromdp(11030632);
        xsim_sc_channel<0, bool > *p_52_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_52->s_axi_bready.bind(*p_52_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_52_s_axi_bready);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_52_s_axi_araddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_52->s_axi_araddr.bind(*p_52_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_52_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_52_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_52->s_axi_arlen.bind(*p_52_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_52_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_52_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_52->s_axi_arsize.bind(*p_52_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_52_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_52_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_52->s_axi_arburst.bind(*p_52_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_52_s_axi_arburst);
        xsim_sc_channel<0, bool > *p_52_s_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_52->s_axi_arlock.bind(*p_52_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_52_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_52_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_52->s_axi_arcache.bind(*p_52_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_52_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_52_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_52->s_axi_arprot.bind(*p_52_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_52_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_52_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_52->s_axi_arvalid.bind(*p_52_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_52_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_52_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_52->s_axi_arready.bind(*p_52_s_axi_arready);
        p_52_s_axi_arready->set_sv_netview_offsetfromdp(11031192);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_52_s_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_52->s_axi_rdata.bind(*p_52_s_axi_rdata);
        p_52_s_axi_rdata->set_sv_netview_offsetfromdp(11031248);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_52_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_52->s_axi_rresp.bind(*p_52_s_axi_rresp);
        p_52_s_axi_rresp->set_sv_netview_offsetfromdp(11031304);
        xsim_sc_channel<0, bool > *p_52_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_52->s_axi_rlast.bind(*p_52_s_axi_rlast);
        p_52_s_axi_rlast->set_sv_netview_offsetfromdp(11031360);
        xsim_sc_channel<0, bool > *p_52_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_52->s_axi_rvalid.bind(*p_52_s_axi_rvalid);
        p_52_s_axi_rvalid->set_sv_netview_offsetfromdp(11031416);
        xsim_sc_channel<0, bool > *p_52_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_52->s_axi_rready.bind(*p_52_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_52_s_axi_rready);
        xsim_sc_channel<0, bool > *p_52_bram_rst_a = new xsim_sc_channel<0, bool >();
        sc_inst_52->bram_rst_a.bind(*p_52_bram_rst_a);
        p_52_bram_rst_a->set_sv_netview_offsetfromdp(11031528);
        xsim_sc_channel<0, bool > *p_52_bram_clk_a = new xsim_sc_channel<0, bool >();
        sc_inst_52->bram_clk_a.bind(*p_52_bram_clk_a);
        p_52_bram_clk_a->set_sv_netview_offsetfromdp(11031584);
        xsim_sc_channel<0, bool > *p_52_bram_en_a = new xsim_sc_channel<0, bool >();
        sc_inst_52->bram_en_a.bind(*p_52_bram_en_a);
        p_52_bram_en_a->set_sv_netview_offsetfromdp(11031640);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_52_bram_we_a = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_52->bram_we_a.bind(*p_52_bram_we_a);
        p_52_bram_we_a->set_sv_netview_offsetfromdp(11031696);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_52_bram_addr_a = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_52->bram_addr_a.bind(*p_52_bram_addr_a);
        p_52_bram_addr_a->set_sv_netview_offsetfromdp(11031752);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_52_bram_wrdata_a = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_52->bram_wrdata_a.bind(*p_52_bram_wrdata_a);
        p_52_bram_wrdata_a->set_sv_netview_offsetfromdp(11031808);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_52_bram_rddata_a = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_52->bram_rddata_a.bind(*p_52_bram_rddata_a);
        (*_glb_hdl_sc_channel_map).push_back(p_52_bram_rddata_a);
        xsim_sc_channel<0, bool > *p_52_bram_rst_b = new xsim_sc_channel<0, bool >();
        sc_inst_52->bram_rst_b.bind(*p_52_bram_rst_b);
        p_52_bram_rst_b->set_sv_netview_offsetfromdp(11031920);
        xsim_sc_channel<0, bool > *p_52_bram_clk_b = new xsim_sc_channel<0, bool >();
        sc_inst_52->bram_clk_b.bind(*p_52_bram_clk_b);
        p_52_bram_clk_b->set_sv_netview_offsetfromdp(11031976);
        xsim_sc_channel<0, bool > *p_52_bram_en_b = new xsim_sc_channel<0, bool >();
        sc_inst_52->bram_en_b.bind(*p_52_bram_en_b);
        p_52_bram_en_b->set_sv_netview_offsetfromdp(11032032);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_52_bram_we_b = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_52->bram_we_b.bind(*p_52_bram_we_b);
        p_52_bram_we_b->set_sv_netview_offsetfromdp(11032088);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_52_bram_addr_b = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_52->bram_addr_b.bind(*p_52_bram_addr_b);
        p_52_bram_addr_b->set_sv_netview_offsetfromdp(11032144);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_52_bram_wrdata_b = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_52->bram_wrdata_b.bind(*p_52_bram_wrdata_b);
        p_52_bram_wrdata_b->set_sv_netview_offsetfromdp(11032200);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_52_bram_rddata_b = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_52->bram_rddata_b.bind(*p_52_bram_rddata_b);
        (*_glb_hdl_sc_channel_map).push_back(p_52_bram_rddata_b);
        sc_inst_53 = new bd_d216_plram_mem01_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.memory.plram_mem01");
        sc_inst_53->xsim_set_dbg_index(3586);
        xsim_sc_channel<0, bool > *p_53_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_53->s_axi_aclk.bind(*p_53_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_53_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_53->s_axi_aresetn.bind(*p_53_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_aresetn);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_53_s_axi_awaddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_53->s_axi_awaddr.bind(*p_53_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_53_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_53->s_axi_awlen.bind(*p_53_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_53_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_53->s_axi_awsize.bind(*p_53_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_53_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_53->s_axi_awburst.bind(*p_53_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_awburst);
        xsim_sc_channel<0, bool > *p_53_s_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_53->s_axi_awlock.bind(*p_53_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_53_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_53->s_axi_awcache.bind(*p_53_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_53_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_53->s_axi_awprot.bind(*p_53_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_53_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_53->s_axi_awvalid.bind(*p_53_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_53_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_53->s_axi_awready.bind(*p_53_s_axi_awready);
        p_53_s_axi_awready->set_sv_netview_offsetfromdp(11094040);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_53_s_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_53->s_axi_wdata.bind(*p_53_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_53_s_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_53->s_axi_wstrb.bind(*p_53_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_53_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_53->s_axi_wlast.bind(*p_53_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_53_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_53->s_axi_wvalid.bind(*p_53_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_53_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_53->s_axi_wready.bind(*p_53_s_axi_wready);
        p_53_s_axi_wready->set_sv_netview_offsetfromdp(11094320);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_53_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_53->s_axi_bresp.bind(*p_53_s_axi_bresp);
        p_53_s_axi_bresp->set_sv_netview_offsetfromdp(11094376);
        xsim_sc_channel<0, bool > *p_53_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_53->s_axi_bvalid.bind(*p_53_s_axi_bvalid);
        p_53_s_axi_bvalid->set_sv_netview_offsetfromdp(11094432);
        xsim_sc_channel<0, bool > *p_53_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_53->s_axi_bready.bind(*p_53_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_bready);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_53_s_axi_araddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_53->s_axi_araddr.bind(*p_53_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_53_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_53->s_axi_arlen.bind(*p_53_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_53_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_53->s_axi_arsize.bind(*p_53_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_53_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_53->s_axi_arburst.bind(*p_53_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_arburst);
        xsim_sc_channel<0, bool > *p_53_s_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_53->s_axi_arlock.bind(*p_53_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_53_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_53->s_axi_arcache.bind(*p_53_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_53_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_53->s_axi_arprot.bind(*p_53_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_53_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_53->s_axi_arvalid.bind(*p_53_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_53_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_53->s_axi_arready.bind(*p_53_s_axi_arready);
        p_53_s_axi_arready->set_sv_netview_offsetfromdp(11094992);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_53_s_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_53->s_axi_rdata.bind(*p_53_s_axi_rdata);
        p_53_s_axi_rdata->set_sv_netview_offsetfromdp(11095048);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_53_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_53->s_axi_rresp.bind(*p_53_s_axi_rresp);
        p_53_s_axi_rresp->set_sv_netview_offsetfromdp(11095104);
        xsim_sc_channel<0, bool > *p_53_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_53->s_axi_rlast.bind(*p_53_s_axi_rlast);
        p_53_s_axi_rlast->set_sv_netview_offsetfromdp(11095160);
        xsim_sc_channel<0, bool > *p_53_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_53->s_axi_rvalid.bind(*p_53_s_axi_rvalid);
        p_53_s_axi_rvalid->set_sv_netview_offsetfromdp(11095216);
        xsim_sc_channel<0, bool > *p_53_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_53->s_axi_rready.bind(*p_53_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_rready);
        xsim_sc_channel<0, bool > *p_53_bram_rst_a = new xsim_sc_channel<0, bool >();
        sc_inst_53->bram_rst_a.bind(*p_53_bram_rst_a);
        p_53_bram_rst_a->set_sv_netview_offsetfromdp(11095328);
        xsim_sc_channel<0, bool > *p_53_bram_clk_a = new xsim_sc_channel<0, bool >();
        sc_inst_53->bram_clk_a.bind(*p_53_bram_clk_a);
        p_53_bram_clk_a->set_sv_netview_offsetfromdp(11095384);
        xsim_sc_channel<0, bool > *p_53_bram_en_a = new xsim_sc_channel<0, bool >();
        sc_inst_53->bram_en_a.bind(*p_53_bram_en_a);
        p_53_bram_en_a->set_sv_netview_offsetfromdp(11095440);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_53_bram_we_a = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_53->bram_we_a.bind(*p_53_bram_we_a);
        p_53_bram_we_a->set_sv_netview_offsetfromdp(11095496);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_53_bram_addr_a = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_53->bram_addr_a.bind(*p_53_bram_addr_a);
        p_53_bram_addr_a->set_sv_netview_offsetfromdp(11095552);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_53_bram_wrdata_a = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_53->bram_wrdata_a.bind(*p_53_bram_wrdata_a);
        p_53_bram_wrdata_a->set_sv_netview_offsetfromdp(11095608);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_53_bram_rddata_a = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_53->bram_rddata_a.bind(*p_53_bram_rddata_a);
        (*_glb_hdl_sc_channel_map).push_back(p_53_bram_rddata_a);
        xsim_sc_channel<0, bool > *p_53_bram_rst_b = new xsim_sc_channel<0, bool >();
        sc_inst_53->bram_rst_b.bind(*p_53_bram_rst_b);
        p_53_bram_rst_b->set_sv_netview_offsetfromdp(11095720);
        xsim_sc_channel<0, bool > *p_53_bram_clk_b = new xsim_sc_channel<0, bool >();
        sc_inst_53->bram_clk_b.bind(*p_53_bram_clk_b);
        p_53_bram_clk_b->set_sv_netview_offsetfromdp(11095776);
        xsim_sc_channel<0, bool > *p_53_bram_en_b = new xsim_sc_channel<0, bool >();
        sc_inst_53->bram_en_b.bind(*p_53_bram_en_b);
        p_53_bram_en_b->set_sv_netview_offsetfromdp(11095832);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_53_bram_we_b = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_53->bram_we_b.bind(*p_53_bram_we_b);
        p_53_bram_we_b->set_sv_netview_offsetfromdp(11095888);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_53_bram_addr_b = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_53->bram_addr_b.bind(*p_53_bram_addr_b);
        p_53_bram_addr_b->set_sv_netview_offsetfromdp(11095944);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_53_bram_wrdata_b = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_53->bram_wrdata_b.bind(*p_53_bram_wrdata_b);
        p_53_bram_wrdata_b->set_sv_netview_offsetfromdp(11096000);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_53_bram_rddata_b = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_53->bram_rddata_b.bind(*p_53_bram_rddata_b);
        (*_glb_hdl_sc_channel_map).push_back(p_53_bram_rddata_b);
        sc_inst_54 = new bd_d216_plram_mem02_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.memory.plram_mem02");
        sc_inst_54->xsim_set_dbg_index(3588);
        xsim_sc_channel<0, bool > *p_54_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_54->s_axi_aclk.bind(*p_54_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_54_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_54->s_axi_aresetn.bind(*p_54_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_aresetn);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_54_s_axi_awaddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_54->s_axi_awaddr.bind(*p_54_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_54_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_54->s_axi_awlen.bind(*p_54_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_54_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_54->s_axi_awsize.bind(*p_54_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_54_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_54->s_axi_awburst.bind(*p_54_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_awburst);
        xsim_sc_channel<0, bool > *p_54_s_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_54->s_axi_awlock.bind(*p_54_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_54_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_54->s_axi_awcache.bind(*p_54_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_54_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_54->s_axi_awprot.bind(*p_54_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_54_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_54->s_axi_awvalid.bind(*p_54_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_54_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_54->s_axi_awready.bind(*p_54_s_axi_awready);
        p_54_s_axi_awready->set_sv_netview_offsetfromdp(11157840);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_54_s_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_54->s_axi_wdata.bind(*p_54_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_54_s_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_54->s_axi_wstrb.bind(*p_54_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_54_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_54->s_axi_wlast.bind(*p_54_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_54_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_54->s_axi_wvalid.bind(*p_54_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_54_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_54->s_axi_wready.bind(*p_54_s_axi_wready);
        p_54_s_axi_wready->set_sv_netview_offsetfromdp(11158120);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_54_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_54->s_axi_bresp.bind(*p_54_s_axi_bresp);
        p_54_s_axi_bresp->set_sv_netview_offsetfromdp(11158176);
        xsim_sc_channel<0, bool > *p_54_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_54->s_axi_bvalid.bind(*p_54_s_axi_bvalid);
        p_54_s_axi_bvalid->set_sv_netview_offsetfromdp(11158232);
        xsim_sc_channel<0, bool > *p_54_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_54->s_axi_bready.bind(*p_54_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_bready);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_54_s_axi_araddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_54->s_axi_araddr.bind(*p_54_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_54_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_54->s_axi_arlen.bind(*p_54_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_54_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_54->s_axi_arsize.bind(*p_54_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_54_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_54->s_axi_arburst.bind(*p_54_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_arburst);
        xsim_sc_channel<0, bool > *p_54_s_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_54->s_axi_arlock.bind(*p_54_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_54_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_54->s_axi_arcache.bind(*p_54_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_54_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_54->s_axi_arprot.bind(*p_54_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_54_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_54->s_axi_arvalid.bind(*p_54_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_54_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_54->s_axi_arready.bind(*p_54_s_axi_arready);
        p_54_s_axi_arready->set_sv_netview_offsetfromdp(11158792);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_54_s_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_54->s_axi_rdata.bind(*p_54_s_axi_rdata);
        p_54_s_axi_rdata->set_sv_netview_offsetfromdp(11158848);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_54_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_54->s_axi_rresp.bind(*p_54_s_axi_rresp);
        p_54_s_axi_rresp->set_sv_netview_offsetfromdp(11158904);
        xsim_sc_channel<0, bool > *p_54_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_54->s_axi_rlast.bind(*p_54_s_axi_rlast);
        p_54_s_axi_rlast->set_sv_netview_offsetfromdp(11158960);
        xsim_sc_channel<0, bool > *p_54_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_54->s_axi_rvalid.bind(*p_54_s_axi_rvalid);
        p_54_s_axi_rvalid->set_sv_netview_offsetfromdp(11159016);
        xsim_sc_channel<0, bool > *p_54_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_54->s_axi_rready.bind(*p_54_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_rready);
        xsim_sc_channel<0, bool > *p_54_bram_rst_a = new xsim_sc_channel<0, bool >();
        sc_inst_54->bram_rst_a.bind(*p_54_bram_rst_a);
        p_54_bram_rst_a->set_sv_netview_offsetfromdp(11159128);
        xsim_sc_channel<0, bool > *p_54_bram_clk_a = new xsim_sc_channel<0, bool >();
        sc_inst_54->bram_clk_a.bind(*p_54_bram_clk_a);
        p_54_bram_clk_a->set_sv_netview_offsetfromdp(11159184);
        xsim_sc_channel<0, bool > *p_54_bram_en_a = new xsim_sc_channel<0, bool >();
        sc_inst_54->bram_en_a.bind(*p_54_bram_en_a);
        p_54_bram_en_a->set_sv_netview_offsetfromdp(11159240);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_54_bram_we_a = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_54->bram_we_a.bind(*p_54_bram_we_a);
        p_54_bram_we_a->set_sv_netview_offsetfromdp(11159296);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_54_bram_addr_a = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_54->bram_addr_a.bind(*p_54_bram_addr_a);
        p_54_bram_addr_a->set_sv_netview_offsetfromdp(11159352);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_54_bram_wrdata_a = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_54->bram_wrdata_a.bind(*p_54_bram_wrdata_a);
        p_54_bram_wrdata_a->set_sv_netview_offsetfromdp(11159408);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_54_bram_rddata_a = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_54->bram_rddata_a.bind(*p_54_bram_rddata_a);
        (*_glb_hdl_sc_channel_map).push_back(p_54_bram_rddata_a);
        xsim_sc_channel<0, bool > *p_54_bram_rst_b = new xsim_sc_channel<0, bool >();
        sc_inst_54->bram_rst_b.bind(*p_54_bram_rst_b);
        p_54_bram_rst_b->set_sv_netview_offsetfromdp(11159520);
        xsim_sc_channel<0, bool > *p_54_bram_clk_b = new xsim_sc_channel<0, bool >();
        sc_inst_54->bram_clk_b.bind(*p_54_bram_clk_b);
        p_54_bram_clk_b->set_sv_netview_offsetfromdp(11159576);
        xsim_sc_channel<0, bool > *p_54_bram_en_b = new xsim_sc_channel<0, bool >();
        sc_inst_54->bram_en_b.bind(*p_54_bram_en_b);
        p_54_bram_en_b->set_sv_netview_offsetfromdp(11159632);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_54_bram_we_b = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_54->bram_we_b.bind(*p_54_bram_we_b);
        p_54_bram_we_b->set_sv_netview_offsetfromdp(11159688);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_54_bram_addr_b = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_54->bram_addr_b.bind(*p_54_bram_addr_b);
        p_54_bram_addr_b->set_sv_netview_offsetfromdp(11159744);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_54_bram_wrdata_b = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_54->bram_wrdata_b.bind(*p_54_bram_wrdata_b);
        p_54_bram_wrdata_b->set_sv_netview_offsetfromdp(11159800);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_54_bram_rddata_b = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_54->bram_rddata_b.bind(*p_54_bram_rddata_b);
        (*_glb_hdl_sc_channel_map).push_back(p_54_bram_rddata_b);
        sc_inst_55 = new bd_d216_plram_mem03_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.memory.plram_mem03");
        sc_inst_55->xsim_set_dbg_index(3590);
        xsim_sc_channel<0, bool > *p_55_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_55->s_axi_aclk.bind(*p_55_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_55_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_55->s_axi_aresetn.bind(*p_55_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_aresetn);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_55_s_axi_awaddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_55->s_axi_awaddr.bind(*p_55_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_55_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_55->s_axi_awlen.bind(*p_55_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_55_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_55->s_axi_awsize.bind(*p_55_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_55_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_55->s_axi_awburst.bind(*p_55_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_awburst);
        xsim_sc_channel<0, bool > *p_55_s_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_55->s_axi_awlock.bind(*p_55_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_55_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_55->s_axi_awcache.bind(*p_55_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_55_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_55->s_axi_awprot.bind(*p_55_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_55_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_55->s_axi_awvalid.bind(*p_55_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_55_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_55->s_axi_awready.bind(*p_55_s_axi_awready);
        p_55_s_axi_awready->set_sv_netview_offsetfromdp(11221640);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_55_s_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_55->s_axi_wdata.bind(*p_55_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_55_s_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_55->s_axi_wstrb.bind(*p_55_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_55_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_55->s_axi_wlast.bind(*p_55_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_55_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_55->s_axi_wvalid.bind(*p_55_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_55_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_55->s_axi_wready.bind(*p_55_s_axi_wready);
        p_55_s_axi_wready->set_sv_netview_offsetfromdp(11221920);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_55_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_55->s_axi_bresp.bind(*p_55_s_axi_bresp);
        p_55_s_axi_bresp->set_sv_netview_offsetfromdp(11221976);
        xsim_sc_channel<0, bool > *p_55_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_55->s_axi_bvalid.bind(*p_55_s_axi_bvalid);
        p_55_s_axi_bvalid->set_sv_netview_offsetfromdp(11222032);
        xsim_sc_channel<0, bool > *p_55_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_55->s_axi_bready.bind(*p_55_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_bready);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_55_s_axi_araddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_55->s_axi_araddr.bind(*p_55_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_55_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_55->s_axi_arlen.bind(*p_55_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_55_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_55->s_axi_arsize.bind(*p_55_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_55_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_55->s_axi_arburst.bind(*p_55_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_arburst);
        xsim_sc_channel<0, bool > *p_55_s_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_55->s_axi_arlock.bind(*p_55_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_55_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_55->s_axi_arcache.bind(*p_55_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_55_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_55->s_axi_arprot.bind(*p_55_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_55_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_55->s_axi_arvalid.bind(*p_55_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_55_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_55->s_axi_arready.bind(*p_55_s_axi_arready);
        p_55_s_axi_arready->set_sv_netview_offsetfromdp(11222592);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_55_s_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_55->s_axi_rdata.bind(*p_55_s_axi_rdata);
        p_55_s_axi_rdata->set_sv_netview_offsetfromdp(11222648);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_55_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_55->s_axi_rresp.bind(*p_55_s_axi_rresp);
        p_55_s_axi_rresp->set_sv_netview_offsetfromdp(11222704);
        xsim_sc_channel<0, bool > *p_55_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_55->s_axi_rlast.bind(*p_55_s_axi_rlast);
        p_55_s_axi_rlast->set_sv_netview_offsetfromdp(11222760);
        xsim_sc_channel<0, bool > *p_55_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_55->s_axi_rvalid.bind(*p_55_s_axi_rvalid);
        p_55_s_axi_rvalid->set_sv_netview_offsetfromdp(11222816);
        xsim_sc_channel<0, bool > *p_55_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_55->s_axi_rready.bind(*p_55_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_rready);
        xsim_sc_channel<0, bool > *p_55_bram_rst_a = new xsim_sc_channel<0, bool >();
        sc_inst_55->bram_rst_a.bind(*p_55_bram_rst_a);
        p_55_bram_rst_a->set_sv_netview_offsetfromdp(11222928);
        xsim_sc_channel<0, bool > *p_55_bram_clk_a = new xsim_sc_channel<0, bool >();
        sc_inst_55->bram_clk_a.bind(*p_55_bram_clk_a);
        p_55_bram_clk_a->set_sv_netview_offsetfromdp(11222984);
        xsim_sc_channel<0, bool > *p_55_bram_en_a = new xsim_sc_channel<0, bool >();
        sc_inst_55->bram_en_a.bind(*p_55_bram_en_a);
        p_55_bram_en_a->set_sv_netview_offsetfromdp(11223040);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_55_bram_we_a = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_55->bram_we_a.bind(*p_55_bram_we_a);
        p_55_bram_we_a->set_sv_netview_offsetfromdp(11223096);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_55_bram_addr_a = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_55->bram_addr_a.bind(*p_55_bram_addr_a);
        p_55_bram_addr_a->set_sv_netview_offsetfromdp(11223152);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_55_bram_wrdata_a = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_55->bram_wrdata_a.bind(*p_55_bram_wrdata_a);
        p_55_bram_wrdata_a->set_sv_netview_offsetfromdp(11223208);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_55_bram_rddata_a = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_55->bram_rddata_a.bind(*p_55_bram_rddata_a);
        (*_glb_hdl_sc_channel_map).push_back(p_55_bram_rddata_a);
        xsim_sc_channel<0, bool > *p_55_bram_rst_b = new xsim_sc_channel<0, bool >();
        sc_inst_55->bram_rst_b.bind(*p_55_bram_rst_b);
        p_55_bram_rst_b->set_sv_netview_offsetfromdp(11223320);
        xsim_sc_channel<0, bool > *p_55_bram_clk_b = new xsim_sc_channel<0, bool >();
        sc_inst_55->bram_clk_b.bind(*p_55_bram_clk_b);
        p_55_bram_clk_b->set_sv_netview_offsetfromdp(11223376);
        xsim_sc_channel<0, bool > *p_55_bram_en_b = new xsim_sc_channel<0, bool >();
        sc_inst_55->bram_en_b.bind(*p_55_bram_en_b);
        p_55_bram_en_b->set_sv_netview_offsetfromdp(11223432);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_55_bram_we_b = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_55->bram_we_b.bind(*p_55_bram_we_b);
        p_55_bram_we_b->set_sv_netview_offsetfromdp(11223488);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_55_bram_addr_b = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_55->bram_addr_b.bind(*p_55_bram_addr_b);
        p_55_bram_addr_b->set_sv_netview_offsetfromdp(11223544);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_55_bram_wrdata_b = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_55->bram_wrdata_b.bind(*p_55_bram_wrdata_b);
        p_55_bram_wrdata_b->set_sv_netview_offsetfromdp(11223600);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_55_bram_rddata_b = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_55->bram_rddata_b.bind(*p_55_bram_rddata_b);
        (*_glb_hdl_sc_channel_map).push_back(p_55_bram_rddata_b);
        sc_inst_56 = new bd_d216_plram_mem04_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.memory.plram_mem04");
        sc_inst_56->xsim_set_dbg_index(3592);
        xsim_sc_channel<0, bool > *p_56_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_56->s_axi_aclk.bind(*p_56_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_56_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_56->s_axi_aresetn.bind(*p_56_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_aresetn);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_56_s_axi_awaddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_56->s_axi_awaddr.bind(*p_56_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_56_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_56->s_axi_awlen.bind(*p_56_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_56_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_56->s_axi_awsize.bind(*p_56_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_56_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_56->s_axi_awburst.bind(*p_56_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_awburst);
        xsim_sc_channel<0, bool > *p_56_s_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_56->s_axi_awlock.bind(*p_56_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_56_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_56->s_axi_awcache.bind(*p_56_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_56_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_56->s_axi_awprot.bind(*p_56_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_56_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_56->s_axi_awvalid.bind(*p_56_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_56_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_56->s_axi_awready.bind(*p_56_s_axi_awready);
        p_56_s_axi_awready->set_sv_netview_offsetfromdp(11285440);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_56_s_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_56->s_axi_wdata.bind(*p_56_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_56_s_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_56->s_axi_wstrb.bind(*p_56_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_56_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_56->s_axi_wlast.bind(*p_56_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_56_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_56->s_axi_wvalid.bind(*p_56_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_56_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_56->s_axi_wready.bind(*p_56_s_axi_wready);
        p_56_s_axi_wready->set_sv_netview_offsetfromdp(11285720);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_56_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_56->s_axi_bresp.bind(*p_56_s_axi_bresp);
        p_56_s_axi_bresp->set_sv_netview_offsetfromdp(11285776);
        xsim_sc_channel<0, bool > *p_56_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_56->s_axi_bvalid.bind(*p_56_s_axi_bvalid);
        p_56_s_axi_bvalid->set_sv_netview_offsetfromdp(11285832);
        xsim_sc_channel<0, bool > *p_56_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_56->s_axi_bready.bind(*p_56_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_bready);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_56_s_axi_araddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_56->s_axi_araddr.bind(*p_56_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_56_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_56->s_axi_arlen.bind(*p_56_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_56_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_56->s_axi_arsize.bind(*p_56_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_56_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_56->s_axi_arburst.bind(*p_56_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_arburst);
        xsim_sc_channel<0, bool > *p_56_s_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_56->s_axi_arlock.bind(*p_56_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_56_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_56->s_axi_arcache.bind(*p_56_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_56_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_56->s_axi_arprot.bind(*p_56_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_56_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_56->s_axi_arvalid.bind(*p_56_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_56_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_56->s_axi_arready.bind(*p_56_s_axi_arready);
        p_56_s_axi_arready->set_sv_netview_offsetfromdp(11286392);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_56_s_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_56->s_axi_rdata.bind(*p_56_s_axi_rdata);
        p_56_s_axi_rdata->set_sv_netview_offsetfromdp(11286448);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_56_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_56->s_axi_rresp.bind(*p_56_s_axi_rresp);
        p_56_s_axi_rresp->set_sv_netview_offsetfromdp(11286504);
        xsim_sc_channel<0, bool > *p_56_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_56->s_axi_rlast.bind(*p_56_s_axi_rlast);
        p_56_s_axi_rlast->set_sv_netview_offsetfromdp(11286560);
        xsim_sc_channel<0, bool > *p_56_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_56->s_axi_rvalid.bind(*p_56_s_axi_rvalid);
        p_56_s_axi_rvalid->set_sv_netview_offsetfromdp(11286616);
        xsim_sc_channel<0, bool > *p_56_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_56->s_axi_rready.bind(*p_56_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_rready);
        xsim_sc_channel<0, bool > *p_56_bram_rst_a = new xsim_sc_channel<0, bool >();
        sc_inst_56->bram_rst_a.bind(*p_56_bram_rst_a);
        p_56_bram_rst_a->set_sv_netview_offsetfromdp(11286728);
        xsim_sc_channel<0, bool > *p_56_bram_clk_a = new xsim_sc_channel<0, bool >();
        sc_inst_56->bram_clk_a.bind(*p_56_bram_clk_a);
        p_56_bram_clk_a->set_sv_netview_offsetfromdp(11286784);
        xsim_sc_channel<0, bool > *p_56_bram_en_a = new xsim_sc_channel<0, bool >();
        sc_inst_56->bram_en_a.bind(*p_56_bram_en_a);
        p_56_bram_en_a->set_sv_netview_offsetfromdp(11286840);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_56_bram_we_a = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_56->bram_we_a.bind(*p_56_bram_we_a);
        p_56_bram_we_a->set_sv_netview_offsetfromdp(11286896);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_56_bram_addr_a = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_56->bram_addr_a.bind(*p_56_bram_addr_a);
        p_56_bram_addr_a->set_sv_netview_offsetfromdp(11286952);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_56_bram_wrdata_a = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_56->bram_wrdata_a.bind(*p_56_bram_wrdata_a);
        p_56_bram_wrdata_a->set_sv_netview_offsetfromdp(11287008);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_56_bram_rddata_a = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_56->bram_rddata_a.bind(*p_56_bram_rddata_a);
        (*_glb_hdl_sc_channel_map).push_back(p_56_bram_rddata_a);
        xsim_sc_channel<0, bool > *p_56_bram_rst_b = new xsim_sc_channel<0, bool >();
        sc_inst_56->bram_rst_b.bind(*p_56_bram_rst_b);
        p_56_bram_rst_b->set_sv_netview_offsetfromdp(11287120);
        xsim_sc_channel<0, bool > *p_56_bram_clk_b = new xsim_sc_channel<0, bool >();
        sc_inst_56->bram_clk_b.bind(*p_56_bram_clk_b);
        p_56_bram_clk_b->set_sv_netview_offsetfromdp(11287176);
        xsim_sc_channel<0, bool > *p_56_bram_en_b = new xsim_sc_channel<0, bool >();
        sc_inst_56->bram_en_b.bind(*p_56_bram_en_b);
        p_56_bram_en_b->set_sv_netview_offsetfromdp(11287232);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_56_bram_we_b = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_56->bram_we_b.bind(*p_56_bram_we_b);
        p_56_bram_we_b->set_sv_netview_offsetfromdp(11287288);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_56_bram_addr_b = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_56->bram_addr_b.bind(*p_56_bram_addr_b);
        p_56_bram_addr_b->set_sv_netview_offsetfromdp(11287344);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_56_bram_wrdata_b = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_56->bram_wrdata_b.bind(*p_56_bram_wrdata_b);
        p_56_bram_wrdata_b->set_sv_netview_offsetfromdp(11287400);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_56_bram_rddata_b = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_56->bram_rddata_b.bind(*p_56_bram_rddata_b);
        (*_glb_hdl_sc_channel_map).push_back(p_56_bram_rddata_b);
        sc_inst_57 = new bd_d216_plram_mem05_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.memory.plram_mem05");
        sc_inst_57->xsim_set_dbg_index(3594);
        xsim_sc_channel<0, bool > *p_57_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_57->s_axi_aclk.bind(*p_57_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_57_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_57->s_axi_aresetn.bind(*p_57_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_aresetn);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_57_s_axi_awaddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_57->s_axi_awaddr.bind(*p_57_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_57_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_57->s_axi_awlen.bind(*p_57_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_57_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_57->s_axi_awsize.bind(*p_57_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_57_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_57->s_axi_awburst.bind(*p_57_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_awburst);
        xsim_sc_channel<0, bool > *p_57_s_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_57->s_axi_awlock.bind(*p_57_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_57_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_57->s_axi_awcache.bind(*p_57_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_57_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_57->s_axi_awprot.bind(*p_57_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_57_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_57->s_axi_awvalid.bind(*p_57_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_57_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_57->s_axi_awready.bind(*p_57_s_axi_awready);
        p_57_s_axi_awready->set_sv_netview_offsetfromdp(11349240);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_57_s_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_57->s_axi_wdata.bind(*p_57_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_57_s_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_57->s_axi_wstrb.bind(*p_57_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_57_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_57->s_axi_wlast.bind(*p_57_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_57_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_57->s_axi_wvalid.bind(*p_57_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_57_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_57->s_axi_wready.bind(*p_57_s_axi_wready);
        p_57_s_axi_wready->set_sv_netview_offsetfromdp(11349520);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_57_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_57->s_axi_bresp.bind(*p_57_s_axi_bresp);
        p_57_s_axi_bresp->set_sv_netview_offsetfromdp(11349576);
        xsim_sc_channel<0, bool > *p_57_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_57->s_axi_bvalid.bind(*p_57_s_axi_bvalid);
        p_57_s_axi_bvalid->set_sv_netview_offsetfromdp(11349632);
        xsim_sc_channel<0, bool > *p_57_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_57->s_axi_bready.bind(*p_57_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_bready);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_57_s_axi_araddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_57->s_axi_araddr.bind(*p_57_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_57_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_57->s_axi_arlen.bind(*p_57_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_57_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_57->s_axi_arsize.bind(*p_57_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_57_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_57->s_axi_arburst.bind(*p_57_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_arburst);
        xsim_sc_channel<0, bool > *p_57_s_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_57->s_axi_arlock.bind(*p_57_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_57_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_57->s_axi_arcache.bind(*p_57_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_57_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_57->s_axi_arprot.bind(*p_57_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_57_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_57->s_axi_arvalid.bind(*p_57_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_57_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_57->s_axi_arready.bind(*p_57_s_axi_arready);
        p_57_s_axi_arready->set_sv_netview_offsetfromdp(11350192);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_57_s_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_57->s_axi_rdata.bind(*p_57_s_axi_rdata);
        p_57_s_axi_rdata->set_sv_netview_offsetfromdp(11350248);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_57_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_57->s_axi_rresp.bind(*p_57_s_axi_rresp);
        p_57_s_axi_rresp->set_sv_netview_offsetfromdp(11350304);
        xsim_sc_channel<0, bool > *p_57_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_57->s_axi_rlast.bind(*p_57_s_axi_rlast);
        p_57_s_axi_rlast->set_sv_netview_offsetfromdp(11350360);
        xsim_sc_channel<0, bool > *p_57_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_57->s_axi_rvalid.bind(*p_57_s_axi_rvalid);
        p_57_s_axi_rvalid->set_sv_netview_offsetfromdp(11350416);
        xsim_sc_channel<0, bool > *p_57_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_57->s_axi_rready.bind(*p_57_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_rready);
        xsim_sc_channel<0, bool > *p_57_bram_rst_a = new xsim_sc_channel<0, bool >();
        sc_inst_57->bram_rst_a.bind(*p_57_bram_rst_a);
        p_57_bram_rst_a->set_sv_netview_offsetfromdp(11350528);
        xsim_sc_channel<0, bool > *p_57_bram_clk_a = new xsim_sc_channel<0, bool >();
        sc_inst_57->bram_clk_a.bind(*p_57_bram_clk_a);
        p_57_bram_clk_a->set_sv_netview_offsetfromdp(11350584);
        xsim_sc_channel<0, bool > *p_57_bram_en_a = new xsim_sc_channel<0, bool >();
        sc_inst_57->bram_en_a.bind(*p_57_bram_en_a);
        p_57_bram_en_a->set_sv_netview_offsetfromdp(11350640);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_57_bram_we_a = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_57->bram_we_a.bind(*p_57_bram_we_a);
        p_57_bram_we_a->set_sv_netview_offsetfromdp(11350696);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_57_bram_addr_a = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_57->bram_addr_a.bind(*p_57_bram_addr_a);
        p_57_bram_addr_a->set_sv_netview_offsetfromdp(11350752);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_57_bram_wrdata_a = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_57->bram_wrdata_a.bind(*p_57_bram_wrdata_a);
        p_57_bram_wrdata_a->set_sv_netview_offsetfromdp(11350808);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_57_bram_rddata_a = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_57->bram_rddata_a.bind(*p_57_bram_rddata_a);
        (*_glb_hdl_sc_channel_map).push_back(p_57_bram_rddata_a);
        xsim_sc_channel<0, bool > *p_57_bram_rst_b = new xsim_sc_channel<0, bool >();
        sc_inst_57->bram_rst_b.bind(*p_57_bram_rst_b);
        p_57_bram_rst_b->set_sv_netview_offsetfromdp(11350920);
        xsim_sc_channel<0, bool > *p_57_bram_clk_b = new xsim_sc_channel<0, bool >();
        sc_inst_57->bram_clk_b.bind(*p_57_bram_clk_b);
        p_57_bram_clk_b->set_sv_netview_offsetfromdp(11350976);
        xsim_sc_channel<0, bool > *p_57_bram_en_b = new xsim_sc_channel<0, bool >();
        sc_inst_57->bram_en_b.bind(*p_57_bram_en_b);
        p_57_bram_en_b->set_sv_netview_offsetfromdp(11351032);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_57_bram_we_b = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_57->bram_we_b.bind(*p_57_bram_we_b);
        p_57_bram_we_b->set_sv_netview_offsetfromdp(11351088);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_57_bram_addr_b = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_57->bram_addr_b.bind(*p_57_bram_addr_b);
        p_57_bram_addr_b->set_sv_netview_offsetfromdp(11351144);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_57_bram_wrdata_b = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_57->bram_wrdata_b.bind(*p_57_bram_wrdata_b);
        p_57_bram_wrdata_b->set_sv_netview_offsetfromdp(11351200);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_57_bram_rddata_b = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_57->bram_rddata_b.bind(*p_57_bram_rddata_b);
        (*_glb_hdl_sc_channel_map).push_back(p_57_bram_rddata_b);
        sc_inst_58 = new pfm_dynamic_sci(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.pfm_dynamic_sci_inst");
        sc_inst_58->xsim_set_dbg_index(63);
        sc_inst_59 = new pfm_dynamic_profile_vip_0_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.profile_vip_0");
        sc_inst_59->xsim_set_dbg_index(64);
        xsim_sc_channel<0, bool > *p_59_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_59->aclk.bind(*p_59_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_59_aclk);
        xsim_sc_channel<0, bool > *p_59_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_59->aresetn.bind(*p_59_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_59_aresetn);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_59_s_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_59->s_axi_awaddr.bind(*p_59_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_59_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_59_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_59->s_axi_awlen.bind(*p_59_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_59_s_axi_awlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_59_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_59->s_axi_awburst.bind(*p_59_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_59_s_axi_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_59_s_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_59->s_axi_awlock.bind(*p_59_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_59_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_59_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_59->s_axi_awcache.bind(*p_59_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_59_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_59_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_59->s_axi_awprot.bind(*p_59_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_59_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_59_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_59->s_axi_awqos.bind(*p_59_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_59_s_axi_awqos);
        xsim_sc_channel<0, bool > *p_59_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_59->s_axi_awvalid.bind(*p_59_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_59_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_59_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_59->s_axi_awready.bind(*p_59_s_axi_awready);
        p_59_s_axi_awready->set_sv_netview_offsetfromdp(11697168);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_59_s_axi_wdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_59->s_axi_wdata.bind(*p_59_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_59_s_axi_wdata);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_59_s_axi_wstrb = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_59->s_axi_wstrb.bind(*p_59_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_59_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_59_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_59->s_axi_wlast.bind(*p_59_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_59_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_59_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_59->s_axi_wvalid.bind(*p_59_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_59_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_59_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_59->s_axi_wready.bind(*p_59_s_axi_wready);
        p_59_s_axi_wready->set_sv_netview_offsetfromdp(11697448);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_59_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_59->s_axi_bresp.bind(*p_59_s_axi_bresp);
        p_59_s_axi_bresp->set_sv_netview_offsetfromdp(11697504);
        xsim_sc_channel<0, bool > *p_59_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_59->s_axi_bvalid.bind(*p_59_s_axi_bvalid);
        p_59_s_axi_bvalid->set_sv_netview_offsetfromdp(11697560);
        xsim_sc_channel<0, bool > *p_59_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_59->s_axi_bready.bind(*p_59_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_59_s_axi_bready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_59_s_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_59->s_axi_araddr.bind(*p_59_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_59_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_59_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_59->s_axi_arlen.bind(*p_59_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_59_s_axi_arlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_59_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_59->s_axi_arburst.bind(*p_59_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_59_s_axi_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_59_s_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_59->s_axi_arlock.bind(*p_59_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_59_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_59_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_59->s_axi_arcache.bind(*p_59_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_59_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_59_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_59->s_axi_arprot.bind(*p_59_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_59_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_59_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_59->s_axi_arqos.bind(*p_59_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_59_s_axi_arqos);
        xsim_sc_channel<0, bool > *p_59_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_59->s_axi_arvalid.bind(*p_59_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_59_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_59_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_59->s_axi_arready.bind(*p_59_s_axi_arready);
        p_59_s_axi_arready->set_sv_netview_offsetfromdp(11698120);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_59_s_axi_rdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_59->s_axi_rdata.bind(*p_59_s_axi_rdata);
        p_59_s_axi_rdata->set_sv_netview_offsetfromdp(11698176);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_59_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_59->s_axi_rresp.bind(*p_59_s_axi_rresp);
        p_59_s_axi_rresp->set_sv_netview_offsetfromdp(11698232);
        xsim_sc_channel<0, bool > *p_59_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_59->s_axi_rlast.bind(*p_59_s_axi_rlast);
        p_59_s_axi_rlast->set_sv_netview_offsetfromdp(11698288);
        xsim_sc_channel<0, bool > *p_59_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_59->s_axi_rvalid.bind(*p_59_s_axi_rvalid);
        p_59_s_axi_rvalid->set_sv_netview_offsetfromdp(11698344);
        xsim_sc_channel<0, bool > *p_59_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_59->s_axi_rready.bind(*p_59_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_59_s_axi_rready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_59_m_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_59->m_axi_awaddr.bind(*p_59_m_axi_awaddr);
        p_59_m_axi_awaddr->set_sv_netview_offsetfromdp(11698456);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_59_m_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_59->m_axi_awlen.bind(*p_59_m_axi_awlen);
        p_59_m_axi_awlen->set_sv_netview_offsetfromdp(11698512);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_59_m_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_59->m_axi_awburst.bind(*p_59_m_axi_awburst);
        p_59_m_axi_awburst->set_sv_netview_offsetfromdp(11698568);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_59_m_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_59->m_axi_awlock.bind(*p_59_m_axi_awlock);
        p_59_m_axi_awlock->set_sv_netview_offsetfromdp(11698624);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_59_m_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_59->m_axi_awcache.bind(*p_59_m_axi_awcache);
        p_59_m_axi_awcache->set_sv_netview_offsetfromdp(11698680);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_59_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_59->m_axi_awprot.bind(*p_59_m_axi_awprot);
        p_59_m_axi_awprot->set_sv_netview_offsetfromdp(11698736);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_59_m_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_59->m_axi_awqos.bind(*p_59_m_axi_awqos);
        p_59_m_axi_awqos->set_sv_netview_offsetfromdp(11698792);
        xsim_sc_channel<0, bool > *p_59_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_59->m_axi_awvalid.bind(*p_59_m_axi_awvalid);
        p_59_m_axi_awvalid->set_sv_netview_offsetfromdp(11698848);
        xsim_sc_channel<0, bool > *p_59_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_59->m_axi_awready.bind(*p_59_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_59_m_axi_awready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_59_m_axi_wdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_59->m_axi_wdata.bind(*p_59_m_axi_wdata);
        p_59_m_axi_wdata->set_sv_netview_offsetfromdp(11698960);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_59_m_axi_wstrb = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_59->m_axi_wstrb.bind(*p_59_m_axi_wstrb);
        p_59_m_axi_wstrb->set_sv_netview_offsetfromdp(11699016);
        xsim_sc_channel<0, bool > *p_59_m_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_59->m_axi_wlast.bind(*p_59_m_axi_wlast);
        p_59_m_axi_wlast->set_sv_netview_offsetfromdp(11699072);
        xsim_sc_channel<0, bool > *p_59_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_59->m_axi_wvalid.bind(*p_59_m_axi_wvalid);
        p_59_m_axi_wvalid->set_sv_netview_offsetfromdp(11699128);
        xsim_sc_channel<0, bool > *p_59_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_59->m_axi_wready.bind(*p_59_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_59_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_59_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_59->m_axi_bresp.bind(*p_59_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_59_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_59_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_59->m_axi_bvalid.bind(*p_59_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_59_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_59_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_59->m_axi_bready.bind(*p_59_m_axi_bready);
        p_59_m_axi_bready->set_sv_netview_offsetfromdp(11699352);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_59_m_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_59->m_axi_araddr.bind(*p_59_m_axi_araddr);
        p_59_m_axi_araddr->set_sv_netview_offsetfromdp(11699408);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_59_m_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_59->m_axi_arlen.bind(*p_59_m_axi_arlen);
        p_59_m_axi_arlen->set_sv_netview_offsetfromdp(11699464);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_59_m_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_59->m_axi_arburst.bind(*p_59_m_axi_arburst);
        p_59_m_axi_arburst->set_sv_netview_offsetfromdp(11699520);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_59_m_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_59->m_axi_arlock.bind(*p_59_m_axi_arlock);
        p_59_m_axi_arlock->set_sv_netview_offsetfromdp(11699576);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_59_m_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_59->m_axi_arcache.bind(*p_59_m_axi_arcache);
        p_59_m_axi_arcache->set_sv_netview_offsetfromdp(11699632);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_59_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_59->m_axi_arprot.bind(*p_59_m_axi_arprot);
        p_59_m_axi_arprot->set_sv_netview_offsetfromdp(11699688);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_59_m_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_59->m_axi_arqos.bind(*p_59_m_axi_arqos);
        p_59_m_axi_arqos->set_sv_netview_offsetfromdp(11699744);
        xsim_sc_channel<0, bool > *p_59_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_59->m_axi_arvalid.bind(*p_59_m_axi_arvalid);
        p_59_m_axi_arvalid->set_sv_netview_offsetfromdp(11699800);
        xsim_sc_channel<0, bool > *p_59_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_59->m_axi_arready.bind(*p_59_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_59_m_axi_arready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_59_m_axi_rdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_59->m_axi_rdata.bind(*p_59_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_59_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_59_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_59->m_axi_rresp.bind(*p_59_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_59_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_59_m_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_59->m_axi_rlast.bind(*p_59_m_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_59_m_axi_rlast);
        xsim_sc_channel<0, bool > *p_59_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_59->m_axi_rvalid.bind(*p_59_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_59_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_59_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_59->m_axi_rready.bind(*p_59_m_axi_rready);
        p_59_m_axi_rready->set_sv_netview_offsetfromdp(11700136);
        sc_inst_60 = new pfm_dynamic_m01_regslice_4(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.slr0.interconnect_axilite_user_0.m01_couplers.m01_regslice");
        sc_inst_60->xsim_set_dbg_index(4073);
        xsim_sc_channel<0, bool > *p_60_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_60->aclk.bind(*p_60_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_60_aclk);
        xsim_sc_channel<0, bool > *p_60_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_60->aresetn.bind(*p_60_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_60_aresetn);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_60_s_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_60->s_axi_awaddr.bind(*p_60_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_60_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_60_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_60->s_axi_awprot.bind(*p_60_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_60_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_60_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_60->s_axi_awvalid.bind(*p_60_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_60_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_60_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_60->s_axi_awready.bind(*p_60_s_axi_awready);
        p_60_s_axi_awready->set_sv_netview_offsetfromdp(11976672);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_60_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_60->s_axi_wdata.bind(*p_60_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_60_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_60_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_60->s_axi_wstrb.bind(*p_60_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_60_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_60_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_60->s_axi_wvalid.bind(*p_60_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_60_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_60_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_60->s_axi_wready.bind(*p_60_s_axi_wready);
        p_60_s_axi_wready->set_sv_netview_offsetfromdp(11976896);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_60_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_60->s_axi_bresp.bind(*p_60_s_axi_bresp);
        p_60_s_axi_bresp->set_sv_netview_offsetfromdp(11976952);
        xsim_sc_channel<0, bool > *p_60_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_60->s_axi_bvalid.bind(*p_60_s_axi_bvalid);
        p_60_s_axi_bvalid->set_sv_netview_offsetfromdp(11977008);
        xsim_sc_channel<0, bool > *p_60_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_60->s_axi_bready.bind(*p_60_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_60_s_axi_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_60_s_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_60->s_axi_araddr.bind(*p_60_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_60_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_60_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_60->s_axi_arprot.bind(*p_60_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_60_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_60_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_60->s_axi_arvalid.bind(*p_60_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_60_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_60_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_60->s_axi_arready.bind(*p_60_s_axi_arready);
        p_60_s_axi_arready->set_sv_netview_offsetfromdp(11977288);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_60_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_60->s_axi_rdata.bind(*p_60_s_axi_rdata);
        p_60_s_axi_rdata->set_sv_netview_offsetfromdp(11977344);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_60_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_60->s_axi_rresp.bind(*p_60_s_axi_rresp);
        p_60_s_axi_rresp->set_sv_netview_offsetfromdp(11977400);
        xsim_sc_channel<0, bool > *p_60_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_60->s_axi_rvalid.bind(*p_60_s_axi_rvalid);
        p_60_s_axi_rvalid->set_sv_netview_offsetfromdp(11977456);
        xsim_sc_channel<0, bool > *p_60_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_60->s_axi_rready.bind(*p_60_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_60_s_axi_rready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_60_m_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_60->m_axi_awaddr.bind(*p_60_m_axi_awaddr);
        p_60_m_axi_awaddr->set_sv_netview_offsetfromdp(11977568);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_60_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_60->m_axi_awprot.bind(*p_60_m_axi_awprot);
        p_60_m_axi_awprot->set_sv_netview_offsetfromdp(11977624);
        xsim_sc_channel<0, bool > *p_60_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_60->m_axi_awvalid.bind(*p_60_m_axi_awvalid);
        p_60_m_axi_awvalid->set_sv_netview_offsetfromdp(11977680);
        xsim_sc_channel<0, bool > *p_60_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_60->m_axi_awready.bind(*p_60_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_60_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_60_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_60->m_axi_wdata.bind(*p_60_m_axi_wdata);
        p_60_m_axi_wdata->set_sv_netview_offsetfromdp(11977792);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_60_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_60->m_axi_wstrb.bind(*p_60_m_axi_wstrb);
        p_60_m_axi_wstrb->set_sv_netview_offsetfromdp(11977848);
        xsim_sc_channel<0, bool > *p_60_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_60->m_axi_wvalid.bind(*p_60_m_axi_wvalid);
        p_60_m_axi_wvalid->set_sv_netview_offsetfromdp(11977904);
        xsim_sc_channel<0, bool > *p_60_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_60->m_axi_wready.bind(*p_60_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_60_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_60_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_60->m_axi_bresp.bind(*p_60_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_60_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_60_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_60->m_axi_bvalid.bind(*p_60_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_60_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_60_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_60->m_axi_bready.bind(*p_60_m_axi_bready);
        p_60_m_axi_bready->set_sv_netview_offsetfromdp(11978128);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_60_m_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_60->m_axi_araddr.bind(*p_60_m_axi_araddr);
        p_60_m_axi_araddr->set_sv_netview_offsetfromdp(11978184);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_60_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_60->m_axi_arprot.bind(*p_60_m_axi_arprot);
        p_60_m_axi_arprot->set_sv_netview_offsetfromdp(11978240);
        xsim_sc_channel<0, bool > *p_60_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_60->m_axi_arvalid.bind(*p_60_m_axi_arvalid);
        p_60_m_axi_arvalid->set_sv_netview_offsetfromdp(11978296);
        xsim_sc_channel<0, bool > *p_60_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_60->m_axi_arready.bind(*p_60_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_60_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_60_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_60->m_axi_rdata.bind(*p_60_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_60_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_60_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_60->m_axi_rresp.bind(*p_60_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_60_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_60_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_60->m_axi_rvalid.bind(*p_60_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_60_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_60_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_60->m_axi_rready.bind(*p_60_m_axi_rready);
        p_60_m_axi_rready->set_sv_netview_offsetfromdp(11978576);
        sc_inst_61 = new pfm_dynamic_auto_cc_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.slr0.interconnect_axilite_user_0.m02_couplers.auto_cc");
        sc_inst_61->xsim_set_dbg_index(4114);
        xsim_sc_channel<0, bool > *p_61_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_61->s_axi_aclk.bind(*p_61_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_61_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_61_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_61->s_axi_aresetn.bind(*p_61_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_61_s_axi_aresetn);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_61_s_axi_awaddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_61->s_axi_awaddr.bind(*p_61_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_61_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_61_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_61->s_axi_awprot.bind(*p_61_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_61_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_61_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_61->s_axi_awvalid.bind(*p_61_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_61_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_61_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_61->s_axi_awready.bind(*p_61_s_axi_awready);
        p_61_s_axi_awready->set_sv_netview_offsetfromdp(12015600);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_61_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_61->s_axi_wdata.bind(*p_61_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_61_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_61_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_61->s_axi_wstrb.bind(*p_61_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_61_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_61_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_61->s_axi_wvalid.bind(*p_61_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_61_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_61_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_61->s_axi_wready.bind(*p_61_s_axi_wready);
        p_61_s_axi_wready->set_sv_netview_offsetfromdp(12015824);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_61_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_61->s_axi_bresp.bind(*p_61_s_axi_bresp);
        p_61_s_axi_bresp->set_sv_netview_offsetfromdp(12015880);
        xsim_sc_channel<0, bool > *p_61_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_61->s_axi_bvalid.bind(*p_61_s_axi_bvalid);
        p_61_s_axi_bvalid->set_sv_netview_offsetfromdp(12015936);
        xsim_sc_channel<0, bool > *p_61_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_61->s_axi_bready.bind(*p_61_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_61_s_axi_bready);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_61_s_axi_araddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_61->s_axi_araddr.bind(*p_61_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_61_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_61_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_61->s_axi_arprot.bind(*p_61_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_61_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_61_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_61->s_axi_arvalid.bind(*p_61_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_61_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_61_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_61->s_axi_arready.bind(*p_61_s_axi_arready);
        p_61_s_axi_arready->set_sv_netview_offsetfromdp(12016216);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_61_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_61->s_axi_rdata.bind(*p_61_s_axi_rdata);
        p_61_s_axi_rdata->set_sv_netview_offsetfromdp(12016272);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_61_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_61->s_axi_rresp.bind(*p_61_s_axi_rresp);
        p_61_s_axi_rresp->set_sv_netview_offsetfromdp(12016328);
        xsim_sc_channel<0, bool > *p_61_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_61->s_axi_rvalid.bind(*p_61_s_axi_rvalid);
        p_61_s_axi_rvalid->set_sv_netview_offsetfromdp(12016384);
        xsim_sc_channel<0, bool > *p_61_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_61->s_axi_rready.bind(*p_61_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_61_s_axi_rready);
        xsim_sc_channel<0, bool > *p_61_m_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_61->m_axi_aclk.bind(*p_61_m_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_61_m_axi_aclk);
        xsim_sc_channel<0, bool > *p_61_m_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_61->m_axi_aresetn.bind(*p_61_m_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_61_m_axi_aresetn);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_61_m_axi_awaddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_61->m_axi_awaddr.bind(*p_61_m_axi_awaddr);
        p_61_m_axi_awaddr->set_sv_netview_offsetfromdp(12016608);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_61_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_61->m_axi_awprot.bind(*p_61_m_axi_awprot);
        p_61_m_axi_awprot->set_sv_netview_offsetfromdp(12016664);
        xsim_sc_channel<0, bool > *p_61_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_61->m_axi_awvalid.bind(*p_61_m_axi_awvalid);
        p_61_m_axi_awvalid->set_sv_netview_offsetfromdp(12016720);
        xsim_sc_channel<0, bool > *p_61_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_61->m_axi_awready.bind(*p_61_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_61_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_61_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_61->m_axi_wdata.bind(*p_61_m_axi_wdata);
        p_61_m_axi_wdata->set_sv_netview_offsetfromdp(12016832);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_61_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_61->m_axi_wstrb.bind(*p_61_m_axi_wstrb);
        p_61_m_axi_wstrb->set_sv_netview_offsetfromdp(12016888);
        xsim_sc_channel<0, bool > *p_61_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_61->m_axi_wvalid.bind(*p_61_m_axi_wvalid);
        p_61_m_axi_wvalid->set_sv_netview_offsetfromdp(12016944);
        xsim_sc_channel<0, bool > *p_61_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_61->m_axi_wready.bind(*p_61_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_61_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_61_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_61->m_axi_bresp.bind(*p_61_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_61_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_61_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_61->m_axi_bvalid.bind(*p_61_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_61_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_61_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_61->m_axi_bready.bind(*p_61_m_axi_bready);
        p_61_m_axi_bready->set_sv_netview_offsetfromdp(12017168);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_61_m_axi_araddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_61->m_axi_araddr.bind(*p_61_m_axi_araddr);
        p_61_m_axi_araddr->set_sv_netview_offsetfromdp(12017224);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_61_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_61->m_axi_arprot.bind(*p_61_m_axi_arprot);
        p_61_m_axi_arprot->set_sv_netview_offsetfromdp(12017280);
        xsim_sc_channel<0, bool > *p_61_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_61->m_axi_arvalid.bind(*p_61_m_axi_arvalid);
        p_61_m_axi_arvalid->set_sv_netview_offsetfromdp(12017336);
        xsim_sc_channel<0, bool > *p_61_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_61->m_axi_arready.bind(*p_61_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_61_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_61_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_61->m_axi_rdata.bind(*p_61_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_61_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_61_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_61->m_axi_rresp.bind(*p_61_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_61_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_61_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_61->m_axi_rvalid.bind(*p_61_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_61_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_61_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_61->m_axi_rready.bind(*p_61_m_axi_rready);
        p_61_m_axi_rready->set_sv_netview_offsetfromdp(12017616);
        sc_inst_62 = new pfm_dynamic_m02_regslice_4(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.slr0.interconnect_axilite_user_0.m02_couplers.m02_regslice");
        sc_inst_62->xsim_set_dbg_index(4115);
        xsim_sc_channel<0, bool > *p_62_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_62->aclk.bind(*p_62_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_62_aclk);
        xsim_sc_channel<0, bool > *p_62_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_62->aresetn.bind(*p_62_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_62_aresetn);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_62_s_axi_awaddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_62->s_axi_awaddr.bind(*p_62_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_62_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_62_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_62->s_axi_awprot.bind(*p_62_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_62_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_62_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_62->s_axi_awvalid.bind(*p_62_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_62_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_62_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_62->s_axi_awready.bind(*p_62_s_axi_awready);
        p_62_s_axi_awready->set_sv_netview_offsetfromdp(12018000);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_62_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_62->s_axi_wdata.bind(*p_62_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_62_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_62_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_62->s_axi_wstrb.bind(*p_62_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_62_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_62_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_62->s_axi_wvalid.bind(*p_62_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_62_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_62_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_62->s_axi_wready.bind(*p_62_s_axi_wready);
        p_62_s_axi_wready->set_sv_netview_offsetfromdp(12018224);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_62_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_62->s_axi_bresp.bind(*p_62_s_axi_bresp);
        p_62_s_axi_bresp->set_sv_netview_offsetfromdp(12018280);
        xsim_sc_channel<0, bool > *p_62_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_62->s_axi_bvalid.bind(*p_62_s_axi_bvalid);
        p_62_s_axi_bvalid->set_sv_netview_offsetfromdp(12018336);
        xsim_sc_channel<0, bool > *p_62_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_62->s_axi_bready.bind(*p_62_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_62_s_axi_bready);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_62_s_axi_araddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_62->s_axi_araddr.bind(*p_62_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_62_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_62_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_62->s_axi_arprot.bind(*p_62_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_62_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_62_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_62->s_axi_arvalid.bind(*p_62_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_62_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_62_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_62->s_axi_arready.bind(*p_62_s_axi_arready);
        p_62_s_axi_arready->set_sv_netview_offsetfromdp(12018616);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_62_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_62->s_axi_rdata.bind(*p_62_s_axi_rdata);
        p_62_s_axi_rdata->set_sv_netview_offsetfromdp(12018672);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_62_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_62->s_axi_rresp.bind(*p_62_s_axi_rresp);
        p_62_s_axi_rresp->set_sv_netview_offsetfromdp(12018728);
        xsim_sc_channel<0, bool > *p_62_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_62->s_axi_rvalid.bind(*p_62_s_axi_rvalid);
        p_62_s_axi_rvalid->set_sv_netview_offsetfromdp(12018784);
        xsim_sc_channel<0, bool > *p_62_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_62->s_axi_rready.bind(*p_62_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_62_s_axi_rready);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_62_m_axi_awaddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_62->m_axi_awaddr.bind(*p_62_m_axi_awaddr);
        p_62_m_axi_awaddr->set_sv_netview_offsetfromdp(12018896);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_62_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_62->m_axi_awprot.bind(*p_62_m_axi_awprot);
        p_62_m_axi_awprot->set_sv_netview_offsetfromdp(12018952);
        xsim_sc_channel<0, bool > *p_62_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_62->m_axi_awvalid.bind(*p_62_m_axi_awvalid);
        p_62_m_axi_awvalid->set_sv_netview_offsetfromdp(12019008);
        xsim_sc_channel<0, bool > *p_62_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_62->m_axi_awready.bind(*p_62_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_62_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_62_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_62->m_axi_wdata.bind(*p_62_m_axi_wdata);
        p_62_m_axi_wdata->set_sv_netview_offsetfromdp(12019120);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_62_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_62->m_axi_wstrb.bind(*p_62_m_axi_wstrb);
        p_62_m_axi_wstrb->set_sv_netview_offsetfromdp(12019176);
        xsim_sc_channel<0, bool > *p_62_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_62->m_axi_wvalid.bind(*p_62_m_axi_wvalid);
        p_62_m_axi_wvalid->set_sv_netview_offsetfromdp(12019232);
        xsim_sc_channel<0, bool > *p_62_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_62->m_axi_wready.bind(*p_62_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_62_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_62_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_62->m_axi_bresp.bind(*p_62_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_62_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_62_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_62->m_axi_bvalid.bind(*p_62_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_62_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_62_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_62->m_axi_bready.bind(*p_62_m_axi_bready);
        p_62_m_axi_bready->set_sv_netview_offsetfromdp(12019456);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_62_m_axi_araddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_62->m_axi_araddr.bind(*p_62_m_axi_araddr);
        p_62_m_axi_araddr->set_sv_netview_offsetfromdp(12019512);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_62_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_62->m_axi_arprot.bind(*p_62_m_axi_arprot);
        p_62_m_axi_arprot->set_sv_netview_offsetfromdp(12019568);
        xsim_sc_channel<0, bool > *p_62_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_62->m_axi_arvalid.bind(*p_62_m_axi_arvalid);
        p_62_m_axi_arvalid->set_sv_netview_offsetfromdp(12019624);
        xsim_sc_channel<0, bool > *p_62_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_62->m_axi_arready.bind(*p_62_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_62_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_62_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_62->m_axi_rdata.bind(*p_62_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_62_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_62_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_62->m_axi_rresp.bind(*p_62_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_62_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_62_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_62->m_axi_rvalid.bind(*p_62_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_62_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_62_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_62->m_axi_rready.bind(*p_62_m_axi_rready);
        p_62_m_axi_rready->set_sv_netview_offsetfromdp(12019904);
        sc_inst_63 = new pfm_dynamic_xbar_3(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.slr0.interconnect_axilite_user_0.xbar");
        sc_inst_63->xsim_set_dbg_index(1568);
        xsim_sc_channel<0, bool > *p_63_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_63->aclk.bind(*p_63_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_63_aclk);
        xsim_sc_channel<0, bool > *p_63_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_63->aresetn.bind(*p_63_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_63_aresetn);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_63_s_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_63->s_axi_awaddr.bind(*p_63_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_63_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_63_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_63->s_axi_awprot.bind(*p_63_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_63_s_axi_awprot);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_63_s_axi_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_63->s_axi_awvalid.bind(*p_63_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_63_s_axi_awvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_63_s_axi_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_63->s_axi_awready.bind(*p_63_s_axi_awready);
        p_63_s_axi_awready->set_sv_netview_offsetfromdp(12030464);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_63_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_63->s_axi_wdata.bind(*p_63_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_63_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_63_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_63->s_axi_wstrb.bind(*p_63_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_63_s_axi_wstrb);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_63_s_axi_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_63->s_axi_wvalid.bind(*p_63_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_63_s_axi_wvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_63_s_axi_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_63->s_axi_wready.bind(*p_63_s_axi_wready);
        p_63_s_axi_wready->set_sv_netview_offsetfromdp(12030688);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_63_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_63->s_axi_bresp.bind(*p_63_s_axi_bresp);
        p_63_s_axi_bresp->set_sv_netview_offsetfromdp(12030744);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_63_s_axi_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_63->s_axi_bvalid.bind(*p_63_s_axi_bvalid);
        p_63_s_axi_bvalid->set_sv_netview_offsetfromdp(12030800);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_63_s_axi_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_63->s_axi_bready.bind(*p_63_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_63_s_axi_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_63_s_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_63->s_axi_araddr.bind(*p_63_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_63_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_63_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_63->s_axi_arprot.bind(*p_63_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_63_s_axi_arprot);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_63_s_axi_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_63->s_axi_arvalid.bind(*p_63_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_63_s_axi_arvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_63_s_axi_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_63->s_axi_arready.bind(*p_63_s_axi_arready);
        p_63_s_axi_arready->set_sv_netview_offsetfromdp(12031080);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_63_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_63->s_axi_rdata.bind(*p_63_s_axi_rdata);
        p_63_s_axi_rdata->set_sv_netview_offsetfromdp(12031136);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_63_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_63->s_axi_rresp.bind(*p_63_s_axi_rresp);
        p_63_s_axi_rresp->set_sv_netview_offsetfromdp(12031192);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_63_s_axi_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_63->s_axi_rvalid.bind(*p_63_s_axi_rvalid);
        p_63_s_axi_rvalid->set_sv_netview_offsetfromdp(12031248);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_63_s_axi_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_63->s_axi_rready.bind(*p_63_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_63_s_axi_rready);
        xsim_sc_channel<192, sc_dt::sc_bv<192> > *p_63_m_axi_awaddr = new xsim_sc_channel<192, sc_dt::sc_bv<192> >();
        sc_inst_63->m_axi_awaddr.bind(*p_63_m_axi_awaddr);
        p_63_m_axi_awaddr->set_sv_netview_offsetfromdp(12031360);
        xsim_sc_channel<9, sc_dt::sc_bv<9> > *p_63_m_axi_awprot = new xsim_sc_channel<9, sc_dt::sc_bv<9> >();
        sc_inst_63->m_axi_awprot.bind(*p_63_m_axi_awprot);
        p_63_m_axi_awprot->set_sv_netview_offsetfromdp(12031416);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_63_m_axi_awvalid = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_63->m_axi_awvalid.bind(*p_63_m_axi_awvalid);
        p_63_m_axi_awvalid->set_sv_netview_offsetfromdp(12031472);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_63_m_axi_awready = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_63->m_axi_awready.bind(*p_63_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_63_m_axi_awready);
        xsim_sc_channel<96, sc_dt::sc_bv<96> > *p_63_m_axi_wdata = new xsim_sc_channel<96, sc_dt::sc_bv<96> >();
        sc_inst_63->m_axi_wdata.bind(*p_63_m_axi_wdata);
        p_63_m_axi_wdata->set_sv_netview_offsetfromdp(12031584);
        xsim_sc_channel<12, sc_dt::sc_bv<12> > *p_63_m_axi_wstrb = new xsim_sc_channel<12, sc_dt::sc_bv<12> >();
        sc_inst_63->m_axi_wstrb.bind(*p_63_m_axi_wstrb);
        p_63_m_axi_wstrb->set_sv_netview_offsetfromdp(12031640);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_63_m_axi_wvalid = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_63->m_axi_wvalid.bind(*p_63_m_axi_wvalid);
        p_63_m_axi_wvalid->set_sv_netview_offsetfromdp(12031696);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_63_m_axi_wready = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_63->m_axi_wready.bind(*p_63_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_63_m_axi_wready);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_63_m_axi_bresp = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_63->m_axi_bresp.bind(*p_63_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_63_m_axi_bresp);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_63_m_axi_bvalid = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_63->m_axi_bvalid.bind(*p_63_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_63_m_axi_bvalid);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_63_m_axi_bready = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_63->m_axi_bready.bind(*p_63_m_axi_bready);
        p_63_m_axi_bready->set_sv_netview_offsetfromdp(12031920);
        xsim_sc_channel<192, sc_dt::sc_bv<192> > *p_63_m_axi_araddr = new xsim_sc_channel<192, sc_dt::sc_bv<192> >();
        sc_inst_63->m_axi_araddr.bind(*p_63_m_axi_araddr);
        p_63_m_axi_araddr->set_sv_netview_offsetfromdp(12031976);
        xsim_sc_channel<9, sc_dt::sc_bv<9> > *p_63_m_axi_arprot = new xsim_sc_channel<9, sc_dt::sc_bv<9> >();
        sc_inst_63->m_axi_arprot.bind(*p_63_m_axi_arprot);
        p_63_m_axi_arprot->set_sv_netview_offsetfromdp(12032032);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_63_m_axi_arvalid = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_63->m_axi_arvalid.bind(*p_63_m_axi_arvalid);
        p_63_m_axi_arvalid->set_sv_netview_offsetfromdp(12032088);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_63_m_axi_arready = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_63->m_axi_arready.bind(*p_63_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_63_m_axi_arready);
        xsim_sc_channel<96, sc_dt::sc_bv<96> > *p_63_m_axi_rdata = new xsim_sc_channel<96, sc_dt::sc_bv<96> >();
        sc_inst_63->m_axi_rdata.bind(*p_63_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_63_m_axi_rdata);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_63_m_axi_rresp = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_63->m_axi_rresp.bind(*p_63_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_63_m_axi_rresp);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_63_m_axi_rvalid = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_63->m_axi_rvalid.bind(*p_63_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_63_m_axi_rvalid);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_63_m_axi_rready = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_63->m_axi_rready.bind(*p_63_m_axi_rready);
        p_63_m_axi_rready->set_sv_netview_offsetfromdp(12032368);
        sc_inst_64 = new pfm_dynamic_smartconn_data_0_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.smartconn_data_0");
        sc_inst_64->xsim_set_dbg_index(72);
        xsim_sc_channel<0, bool > *p_64_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_64->aclk.bind(*p_64_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_64_aclk);
        xsim_sc_channel<0, bool > *p_64_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_64->aresetn.bind(*p_64_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_64_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_64_S00_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_64->S00_AXI_awid.bind(*p_64_S00_AXI_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_64_S00_AXI_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_64_S00_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_64->S00_AXI_awaddr.bind(*p_64_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_64_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_64_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_64->S00_AXI_awlen.bind(*p_64_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_64_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_64_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_64->S00_AXI_awsize.bind(*p_64_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_64_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_64_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_64->S00_AXI_awburst.bind(*p_64_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_64_S00_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_64_S00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_64->S00_AXI_awlock.bind(*p_64_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_64_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_64_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_64->S00_AXI_awcache.bind(*p_64_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_64_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_64_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_64->S00_AXI_awprot.bind(*p_64_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_64_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_64_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_64->S00_AXI_awqos.bind(*p_64_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_64_S00_AXI_awqos);
        xsim_sc_channel<0, bool > *p_64_S00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_64->S00_AXI_awvalid.bind(*p_64_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_64_S00_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_64_S00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_64->S00_AXI_awready.bind(*p_64_S00_AXI_awready);
        p_64_S00_AXI_awready->set_sv_netview_offsetfromdp(13289072);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_64_S00_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_64->S00_AXI_wdata.bind(*p_64_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_64_S00_AXI_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_64_S00_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_64->S00_AXI_wstrb.bind(*p_64_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_64_S00_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_64_S00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_64->S00_AXI_wlast.bind(*p_64_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_64_S00_AXI_wlast);
        xsim_sc_channel<0, bool > *p_64_S00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_64->S00_AXI_wvalid.bind(*p_64_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_64_S00_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_64_S00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_64->S00_AXI_wready.bind(*p_64_S00_AXI_wready);
        p_64_S00_AXI_wready->set_sv_netview_offsetfromdp(13289352);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_64_S00_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_64->S00_AXI_bid.bind(*p_64_S00_AXI_bid);
        p_64_S00_AXI_bid->set_sv_netview_offsetfromdp(13289408);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_64_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_64->S00_AXI_bresp.bind(*p_64_S00_AXI_bresp);
        p_64_S00_AXI_bresp->set_sv_netview_offsetfromdp(13289464);
        xsim_sc_channel<0, bool > *p_64_S00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_64->S00_AXI_bvalid.bind(*p_64_S00_AXI_bvalid);
        p_64_S00_AXI_bvalid->set_sv_netview_offsetfromdp(13289520);
        xsim_sc_channel<0, bool > *p_64_S00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_64->S00_AXI_bready.bind(*p_64_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_64_S00_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_64_S00_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_64->S00_AXI_arid.bind(*p_64_S00_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_64_S00_AXI_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_64_S00_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_64->S00_AXI_araddr.bind(*p_64_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_64_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_64_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_64->S00_AXI_arlen.bind(*p_64_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_64_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_64_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_64->S00_AXI_arsize.bind(*p_64_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_64_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_64_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_64->S00_AXI_arburst.bind(*p_64_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_64_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_64_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_64->S00_AXI_arlock.bind(*p_64_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_64_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_64_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_64->S00_AXI_arcache.bind(*p_64_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_64_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_64_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_64->S00_AXI_arprot.bind(*p_64_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_64_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_64_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_64->S00_AXI_arqos.bind(*p_64_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_64_S00_AXI_arqos);
        xsim_sc_channel<0, bool > *p_64_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_64->S00_AXI_arvalid.bind(*p_64_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_64_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_64_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_64->S00_AXI_arready.bind(*p_64_S00_AXI_arready);
        p_64_S00_AXI_arready->set_sv_netview_offsetfromdp(13290192);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_64_S00_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_64->S00_AXI_rid.bind(*p_64_S00_AXI_rid);
        p_64_S00_AXI_rid->set_sv_netview_offsetfromdp(13290248);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_64_S00_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_64->S00_AXI_rdata.bind(*p_64_S00_AXI_rdata);
        p_64_S00_AXI_rdata->set_sv_netview_offsetfromdp(13290304);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_64_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_64->S00_AXI_rresp.bind(*p_64_S00_AXI_rresp);
        p_64_S00_AXI_rresp->set_sv_netview_offsetfromdp(13290360);
        xsim_sc_channel<0, bool > *p_64_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_64->S00_AXI_rlast.bind(*p_64_S00_AXI_rlast);
        p_64_S00_AXI_rlast->set_sv_netview_offsetfromdp(13290416);
        xsim_sc_channel<0, bool > *p_64_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_64->S00_AXI_rvalid.bind(*p_64_S00_AXI_rvalid);
        p_64_S00_AXI_rvalid->set_sv_netview_offsetfromdp(13290472);
        xsim_sc_channel<0, bool > *p_64_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_64->S00_AXI_rready.bind(*p_64_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_64_S00_AXI_rready);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_64_M00_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_64->M00_AXI_awaddr.bind(*p_64_M00_AXI_awaddr);
        p_64_M00_AXI_awaddr->set_sv_netview_offsetfromdp(13290584);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_64_M00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_64->M00_AXI_awlen.bind(*p_64_M00_AXI_awlen);
        p_64_M00_AXI_awlen->set_sv_netview_offsetfromdp(13290640);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_64_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_64->M00_AXI_awsize.bind(*p_64_M00_AXI_awsize);
        p_64_M00_AXI_awsize->set_sv_netview_offsetfromdp(13290696);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_64_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_64->M00_AXI_awburst.bind(*p_64_M00_AXI_awburst);
        p_64_M00_AXI_awburst->set_sv_netview_offsetfromdp(13290752);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_64_M00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_64->M00_AXI_awlock.bind(*p_64_M00_AXI_awlock);
        p_64_M00_AXI_awlock->set_sv_netview_offsetfromdp(13290808);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_64_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_64->M00_AXI_awcache.bind(*p_64_M00_AXI_awcache);
        p_64_M00_AXI_awcache->set_sv_netview_offsetfromdp(13290864);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_64_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_64->M00_AXI_awprot.bind(*p_64_M00_AXI_awprot);
        p_64_M00_AXI_awprot->set_sv_netview_offsetfromdp(13290920);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_64_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_64->M00_AXI_awqos.bind(*p_64_M00_AXI_awqos);
        p_64_M00_AXI_awqos->set_sv_netview_offsetfromdp(13290976);
        xsim_sc_channel<0, bool > *p_64_M00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_64->M00_AXI_awvalid.bind(*p_64_M00_AXI_awvalid);
        p_64_M00_AXI_awvalid->set_sv_netview_offsetfromdp(13291032);
        xsim_sc_channel<0, bool > *p_64_M00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_64->M00_AXI_awready.bind(*p_64_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_64_M00_AXI_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_64_M00_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_64->M00_AXI_wdata.bind(*p_64_M00_AXI_wdata);
        p_64_M00_AXI_wdata->set_sv_netview_offsetfromdp(13291144);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_64_M00_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_64->M00_AXI_wstrb.bind(*p_64_M00_AXI_wstrb);
        p_64_M00_AXI_wstrb->set_sv_netview_offsetfromdp(13291200);
        xsim_sc_channel<0, bool > *p_64_M00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_64->M00_AXI_wlast.bind(*p_64_M00_AXI_wlast);
        p_64_M00_AXI_wlast->set_sv_netview_offsetfromdp(13291256);
        xsim_sc_channel<0, bool > *p_64_M00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_64->M00_AXI_wvalid.bind(*p_64_M00_AXI_wvalid);
        p_64_M00_AXI_wvalid->set_sv_netview_offsetfromdp(13291312);
        xsim_sc_channel<0, bool > *p_64_M00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_64->M00_AXI_wready.bind(*p_64_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_64_M00_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_64_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_64->M00_AXI_bresp.bind(*p_64_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_64_M00_AXI_bresp);
        xsim_sc_channel<0, bool > *p_64_M00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_64->M00_AXI_bvalid.bind(*p_64_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_64_M00_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_64_M00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_64->M00_AXI_bready.bind(*p_64_M00_AXI_bready);
        p_64_M00_AXI_bready->set_sv_netview_offsetfromdp(13291536);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_64_M00_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_64->M00_AXI_araddr.bind(*p_64_M00_AXI_araddr);
        p_64_M00_AXI_araddr->set_sv_netview_offsetfromdp(13291592);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_64_M00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_64->M00_AXI_arlen.bind(*p_64_M00_AXI_arlen);
        p_64_M00_AXI_arlen->set_sv_netview_offsetfromdp(13291648);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_64_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_64->M00_AXI_arsize.bind(*p_64_M00_AXI_arsize);
        p_64_M00_AXI_arsize->set_sv_netview_offsetfromdp(13291704);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_64_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_64->M00_AXI_arburst.bind(*p_64_M00_AXI_arburst);
        p_64_M00_AXI_arburst->set_sv_netview_offsetfromdp(13291760);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_64_M00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_64->M00_AXI_arlock.bind(*p_64_M00_AXI_arlock);
        p_64_M00_AXI_arlock->set_sv_netview_offsetfromdp(13291816);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_64_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_64->M00_AXI_arcache.bind(*p_64_M00_AXI_arcache);
        p_64_M00_AXI_arcache->set_sv_netview_offsetfromdp(13291872);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_64_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_64->M00_AXI_arprot.bind(*p_64_M00_AXI_arprot);
        p_64_M00_AXI_arprot->set_sv_netview_offsetfromdp(13291928);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_64_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_64->M00_AXI_arqos.bind(*p_64_M00_AXI_arqos);
        p_64_M00_AXI_arqos->set_sv_netview_offsetfromdp(13291984);
        xsim_sc_channel<0, bool > *p_64_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_64->M00_AXI_arvalid.bind(*p_64_M00_AXI_arvalid);
        p_64_M00_AXI_arvalid->set_sv_netview_offsetfromdp(13292040);
        xsim_sc_channel<0, bool > *p_64_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_64->M00_AXI_arready.bind(*p_64_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_64_M00_AXI_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_64_M00_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_64->M00_AXI_rdata.bind(*p_64_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_64_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_64_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_64->M00_AXI_rresp.bind(*p_64_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_64_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_64_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_64->M00_AXI_rlast.bind(*p_64_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_64_M00_AXI_rlast);
        xsim_sc_channel<0, bool > *p_64_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_64->M00_AXI_rvalid.bind(*p_64_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_64_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_64_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_64->M00_AXI_rready.bind(*p_64_M00_AXI_rready);
        p_64_M00_AXI_rready->set_sv_netview_offsetfromdp(13292376);
        xsim_sc_channel<37, sc_dt::sc_bv<37> > *p_64_M01_AXI_awaddr = new xsim_sc_channel<37, sc_dt::sc_bv<37> >();
        sc_inst_64->M01_AXI_awaddr.bind(*p_64_M01_AXI_awaddr);
        p_64_M01_AXI_awaddr->set_sv_netview_offsetfromdp(13292432);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_64_M01_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_64->M01_AXI_awlen.bind(*p_64_M01_AXI_awlen);
        p_64_M01_AXI_awlen->set_sv_netview_offsetfromdp(13292488);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_64_M01_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_64->M01_AXI_awsize.bind(*p_64_M01_AXI_awsize);
        p_64_M01_AXI_awsize->set_sv_netview_offsetfromdp(13292544);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_64_M01_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_64->M01_AXI_awburst.bind(*p_64_M01_AXI_awburst);
        p_64_M01_AXI_awburst->set_sv_netview_offsetfromdp(13292600);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_64_M01_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_64->M01_AXI_awlock.bind(*p_64_M01_AXI_awlock);
        p_64_M01_AXI_awlock->set_sv_netview_offsetfromdp(13292656);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_64_M01_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_64->M01_AXI_awcache.bind(*p_64_M01_AXI_awcache);
        p_64_M01_AXI_awcache->set_sv_netview_offsetfromdp(13292712);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_64_M01_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_64->M01_AXI_awprot.bind(*p_64_M01_AXI_awprot);
        p_64_M01_AXI_awprot->set_sv_netview_offsetfromdp(13292768);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_64_M01_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_64->M01_AXI_awqos.bind(*p_64_M01_AXI_awqos);
        p_64_M01_AXI_awqos->set_sv_netview_offsetfromdp(13292824);
        xsim_sc_channel<0, bool > *p_64_M01_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_64->M01_AXI_awvalid.bind(*p_64_M01_AXI_awvalid);
        p_64_M01_AXI_awvalid->set_sv_netview_offsetfromdp(13292880);
        xsim_sc_channel<0, bool > *p_64_M01_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_64->M01_AXI_awready.bind(*p_64_M01_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_64_M01_AXI_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_64_M01_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_64->M01_AXI_wdata.bind(*p_64_M01_AXI_wdata);
        p_64_M01_AXI_wdata->set_sv_netview_offsetfromdp(13292992);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_64_M01_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_64->M01_AXI_wstrb.bind(*p_64_M01_AXI_wstrb);
        p_64_M01_AXI_wstrb->set_sv_netview_offsetfromdp(13293048);
        xsim_sc_channel<0, bool > *p_64_M01_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_64->M01_AXI_wlast.bind(*p_64_M01_AXI_wlast);
        p_64_M01_AXI_wlast->set_sv_netview_offsetfromdp(13293104);
        xsim_sc_channel<0, bool > *p_64_M01_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_64->M01_AXI_wvalid.bind(*p_64_M01_AXI_wvalid);
        p_64_M01_AXI_wvalid->set_sv_netview_offsetfromdp(13293160);
        xsim_sc_channel<0, bool > *p_64_M01_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_64->M01_AXI_wready.bind(*p_64_M01_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_64_M01_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_64_M01_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_64->M01_AXI_bresp.bind(*p_64_M01_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_64_M01_AXI_bresp);
        xsim_sc_channel<0, bool > *p_64_M01_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_64->M01_AXI_bvalid.bind(*p_64_M01_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_64_M01_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_64_M01_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_64->M01_AXI_bready.bind(*p_64_M01_AXI_bready);
        p_64_M01_AXI_bready->set_sv_netview_offsetfromdp(13293384);
        xsim_sc_channel<37, sc_dt::sc_bv<37> > *p_64_M01_AXI_araddr = new xsim_sc_channel<37, sc_dt::sc_bv<37> >();
        sc_inst_64->M01_AXI_araddr.bind(*p_64_M01_AXI_araddr);
        p_64_M01_AXI_araddr->set_sv_netview_offsetfromdp(13293440);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_64_M01_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_64->M01_AXI_arlen.bind(*p_64_M01_AXI_arlen);
        p_64_M01_AXI_arlen->set_sv_netview_offsetfromdp(13293496);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_64_M01_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_64->M01_AXI_arsize.bind(*p_64_M01_AXI_arsize);
        p_64_M01_AXI_arsize->set_sv_netview_offsetfromdp(13293552);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_64_M01_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_64->M01_AXI_arburst.bind(*p_64_M01_AXI_arburst);
        p_64_M01_AXI_arburst->set_sv_netview_offsetfromdp(13293608);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_64_M01_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_64->M01_AXI_arlock.bind(*p_64_M01_AXI_arlock);
        p_64_M01_AXI_arlock->set_sv_netview_offsetfromdp(13293664);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_64_M01_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_64->M01_AXI_arcache.bind(*p_64_M01_AXI_arcache);
        p_64_M01_AXI_arcache->set_sv_netview_offsetfromdp(13293720);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_64_M01_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_64->M01_AXI_arprot.bind(*p_64_M01_AXI_arprot);
        p_64_M01_AXI_arprot->set_sv_netview_offsetfromdp(13293776);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_64_M01_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_64->M01_AXI_arqos.bind(*p_64_M01_AXI_arqos);
        p_64_M01_AXI_arqos->set_sv_netview_offsetfromdp(13293832);
        xsim_sc_channel<0, bool > *p_64_M01_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_64->M01_AXI_arvalid.bind(*p_64_M01_AXI_arvalid);
        p_64_M01_AXI_arvalid->set_sv_netview_offsetfromdp(13293888);
        xsim_sc_channel<0, bool > *p_64_M01_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_64->M01_AXI_arready.bind(*p_64_M01_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_64_M01_AXI_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_64_M01_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_64->M01_AXI_rdata.bind(*p_64_M01_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_64_M01_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_64_M01_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_64->M01_AXI_rresp.bind(*p_64_M01_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_64_M01_AXI_rresp);
        xsim_sc_channel<0, bool > *p_64_M01_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_64->M01_AXI_rlast.bind(*p_64_M01_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_64_M01_AXI_rlast);
        xsim_sc_channel<0, bool > *p_64_M01_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_64->M01_AXI_rvalid.bind(*p_64_M01_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_64_M01_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_64_M01_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_64->M01_AXI_rready.bind(*p_64_M01_AXI_rready);
        p_64_M01_AXI_rready->set_sv_netview_offsetfromdp(13294224);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_64_M02_AXI_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_64->M02_AXI_awaddr.bind(*p_64_M02_AXI_awaddr);
        p_64_M02_AXI_awaddr->set_sv_netview_offsetfromdp(13294280);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_64_M02_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_64->M02_AXI_awlen.bind(*p_64_M02_AXI_awlen);
        p_64_M02_AXI_awlen->set_sv_netview_offsetfromdp(13294336);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_64_M02_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_64->M02_AXI_awsize.bind(*p_64_M02_AXI_awsize);
        p_64_M02_AXI_awsize->set_sv_netview_offsetfromdp(13294392);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_64_M02_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_64->M02_AXI_awburst.bind(*p_64_M02_AXI_awburst);
        p_64_M02_AXI_awburst->set_sv_netview_offsetfromdp(13294448);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_64_M02_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_64->M02_AXI_awlock.bind(*p_64_M02_AXI_awlock);
        p_64_M02_AXI_awlock->set_sv_netview_offsetfromdp(13294504);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_64_M02_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_64->M02_AXI_awcache.bind(*p_64_M02_AXI_awcache);
        p_64_M02_AXI_awcache->set_sv_netview_offsetfromdp(13294560);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_64_M02_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_64->M02_AXI_awprot.bind(*p_64_M02_AXI_awprot);
        p_64_M02_AXI_awprot->set_sv_netview_offsetfromdp(13294616);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_64_M02_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_64->M02_AXI_awqos.bind(*p_64_M02_AXI_awqos);
        p_64_M02_AXI_awqos->set_sv_netview_offsetfromdp(13294672);
        xsim_sc_channel<0, bool > *p_64_M02_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_64->M02_AXI_awvalid.bind(*p_64_M02_AXI_awvalid);
        p_64_M02_AXI_awvalid->set_sv_netview_offsetfromdp(13294728);
        xsim_sc_channel<0, bool > *p_64_M02_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_64->M02_AXI_awready.bind(*p_64_M02_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_64_M02_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_64_M02_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_64->M02_AXI_wdata.bind(*p_64_M02_AXI_wdata);
        p_64_M02_AXI_wdata->set_sv_netview_offsetfromdp(13294840);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_64_M02_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_64->M02_AXI_wstrb.bind(*p_64_M02_AXI_wstrb);
        p_64_M02_AXI_wstrb->set_sv_netview_offsetfromdp(13294896);
        xsim_sc_channel<0, bool > *p_64_M02_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_64->M02_AXI_wlast.bind(*p_64_M02_AXI_wlast);
        p_64_M02_AXI_wlast->set_sv_netview_offsetfromdp(13294952);
        xsim_sc_channel<0, bool > *p_64_M02_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_64->M02_AXI_wvalid.bind(*p_64_M02_AXI_wvalid);
        p_64_M02_AXI_wvalid->set_sv_netview_offsetfromdp(13295008);
        xsim_sc_channel<0, bool > *p_64_M02_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_64->M02_AXI_wready.bind(*p_64_M02_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_64_M02_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_64_M02_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_64->M02_AXI_bresp.bind(*p_64_M02_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_64_M02_AXI_bresp);
        xsim_sc_channel<0, bool > *p_64_M02_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_64->M02_AXI_bvalid.bind(*p_64_M02_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_64_M02_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_64_M02_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_64->M02_AXI_bready.bind(*p_64_M02_AXI_bready);
        p_64_M02_AXI_bready->set_sv_netview_offsetfromdp(13295232);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_64_M02_AXI_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_64->M02_AXI_araddr.bind(*p_64_M02_AXI_araddr);
        p_64_M02_AXI_araddr->set_sv_netview_offsetfromdp(13295288);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_64_M02_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_64->M02_AXI_arlen.bind(*p_64_M02_AXI_arlen);
        p_64_M02_AXI_arlen->set_sv_netview_offsetfromdp(13295344);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_64_M02_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_64->M02_AXI_arsize.bind(*p_64_M02_AXI_arsize);
        p_64_M02_AXI_arsize->set_sv_netview_offsetfromdp(13295400);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_64_M02_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_64->M02_AXI_arburst.bind(*p_64_M02_AXI_arburst);
        p_64_M02_AXI_arburst->set_sv_netview_offsetfromdp(13295456);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_64_M02_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_64->M02_AXI_arlock.bind(*p_64_M02_AXI_arlock);
        p_64_M02_AXI_arlock->set_sv_netview_offsetfromdp(13295512);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_64_M02_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_64->M02_AXI_arcache.bind(*p_64_M02_AXI_arcache);
        p_64_M02_AXI_arcache->set_sv_netview_offsetfromdp(13295568);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_64_M02_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_64->M02_AXI_arprot.bind(*p_64_M02_AXI_arprot);
        p_64_M02_AXI_arprot->set_sv_netview_offsetfromdp(13295624);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_64_M02_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_64->M02_AXI_arqos.bind(*p_64_M02_AXI_arqos);
        p_64_M02_AXI_arqos->set_sv_netview_offsetfromdp(13295680);
        xsim_sc_channel<0, bool > *p_64_M02_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_64->M02_AXI_arvalid.bind(*p_64_M02_AXI_arvalid);
        p_64_M02_AXI_arvalid->set_sv_netview_offsetfromdp(13295736);
        xsim_sc_channel<0, bool > *p_64_M02_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_64->M02_AXI_arready.bind(*p_64_M02_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_64_M02_AXI_arready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_64_M02_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_64->M02_AXI_rdata.bind(*p_64_M02_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_64_M02_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_64_M02_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_64->M02_AXI_rresp.bind(*p_64_M02_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_64_M02_AXI_rresp);
        xsim_sc_channel<0, bool > *p_64_M02_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_64->M02_AXI_rlast.bind(*p_64_M02_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_64_M02_AXI_rlast);
        xsim_sc_channel<0, bool > *p_64_M02_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_64->M02_AXI_rvalid.bind(*p_64_M02_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_64_M02_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_64_M02_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_64->M02_AXI_rready.bind(*p_64_M02_AXI_rready);
        p_64_M02_AXI_rready->set_sv_netview_offsetfromdp(13296072);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_64_M03_AXI_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_64->M03_AXI_awaddr.bind(*p_64_M03_AXI_awaddr);
        p_64_M03_AXI_awaddr->set_sv_netview_offsetfromdp(13296128);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_64_M03_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_64->M03_AXI_awlen.bind(*p_64_M03_AXI_awlen);
        p_64_M03_AXI_awlen->set_sv_netview_offsetfromdp(13296184);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_64_M03_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_64->M03_AXI_awsize.bind(*p_64_M03_AXI_awsize);
        p_64_M03_AXI_awsize->set_sv_netview_offsetfromdp(13296240);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_64_M03_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_64->M03_AXI_awburst.bind(*p_64_M03_AXI_awburst);
        p_64_M03_AXI_awburst->set_sv_netview_offsetfromdp(13296296);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_64_M03_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_64->M03_AXI_awlock.bind(*p_64_M03_AXI_awlock);
        p_64_M03_AXI_awlock->set_sv_netview_offsetfromdp(13296352);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_64_M03_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_64->M03_AXI_awcache.bind(*p_64_M03_AXI_awcache);
        p_64_M03_AXI_awcache->set_sv_netview_offsetfromdp(13296408);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_64_M03_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_64->M03_AXI_awprot.bind(*p_64_M03_AXI_awprot);
        p_64_M03_AXI_awprot->set_sv_netview_offsetfromdp(13296464);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_64_M03_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_64->M03_AXI_awqos.bind(*p_64_M03_AXI_awqos);
        p_64_M03_AXI_awqos->set_sv_netview_offsetfromdp(13296520);
        xsim_sc_channel<0, bool > *p_64_M03_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_64->M03_AXI_awvalid.bind(*p_64_M03_AXI_awvalid);
        p_64_M03_AXI_awvalid->set_sv_netview_offsetfromdp(13296576);
        xsim_sc_channel<0, bool > *p_64_M03_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_64->M03_AXI_awready.bind(*p_64_M03_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_64_M03_AXI_awready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_64_M03_AXI_wdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_64->M03_AXI_wdata.bind(*p_64_M03_AXI_wdata);
        p_64_M03_AXI_wdata->set_sv_netview_offsetfromdp(13296688);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_64_M03_AXI_wstrb = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_64->M03_AXI_wstrb.bind(*p_64_M03_AXI_wstrb);
        p_64_M03_AXI_wstrb->set_sv_netview_offsetfromdp(13296744);
        xsim_sc_channel<0, bool > *p_64_M03_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_64->M03_AXI_wlast.bind(*p_64_M03_AXI_wlast);
        p_64_M03_AXI_wlast->set_sv_netview_offsetfromdp(13296800);
        xsim_sc_channel<0, bool > *p_64_M03_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_64->M03_AXI_wvalid.bind(*p_64_M03_AXI_wvalid);
        p_64_M03_AXI_wvalid->set_sv_netview_offsetfromdp(13296856);
        xsim_sc_channel<0, bool > *p_64_M03_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_64->M03_AXI_wready.bind(*p_64_M03_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_64_M03_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_64_M03_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_64->M03_AXI_bresp.bind(*p_64_M03_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_64_M03_AXI_bresp);
        xsim_sc_channel<0, bool > *p_64_M03_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_64->M03_AXI_bvalid.bind(*p_64_M03_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_64_M03_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_64_M03_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_64->M03_AXI_bready.bind(*p_64_M03_AXI_bready);
        p_64_M03_AXI_bready->set_sv_netview_offsetfromdp(13297080);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_64_M03_AXI_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_64->M03_AXI_araddr.bind(*p_64_M03_AXI_araddr);
        p_64_M03_AXI_araddr->set_sv_netview_offsetfromdp(13297136);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_64_M03_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_64->M03_AXI_arlen.bind(*p_64_M03_AXI_arlen);
        p_64_M03_AXI_arlen->set_sv_netview_offsetfromdp(13297192);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_64_M03_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_64->M03_AXI_arsize.bind(*p_64_M03_AXI_arsize);
        p_64_M03_AXI_arsize->set_sv_netview_offsetfromdp(13297248);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_64_M03_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_64->M03_AXI_arburst.bind(*p_64_M03_AXI_arburst);
        p_64_M03_AXI_arburst->set_sv_netview_offsetfromdp(13297304);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_64_M03_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_64->M03_AXI_arlock.bind(*p_64_M03_AXI_arlock);
        p_64_M03_AXI_arlock->set_sv_netview_offsetfromdp(13297360);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_64_M03_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_64->M03_AXI_arcache.bind(*p_64_M03_AXI_arcache);
        p_64_M03_AXI_arcache->set_sv_netview_offsetfromdp(13297416);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_64_M03_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_64->M03_AXI_arprot.bind(*p_64_M03_AXI_arprot);
        p_64_M03_AXI_arprot->set_sv_netview_offsetfromdp(13297472);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_64_M03_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_64->M03_AXI_arqos.bind(*p_64_M03_AXI_arqos);
        p_64_M03_AXI_arqos->set_sv_netview_offsetfromdp(13297528);
        xsim_sc_channel<0, bool > *p_64_M03_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_64->M03_AXI_arvalid.bind(*p_64_M03_AXI_arvalid);
        p_64_M03_AXI_arvalid->set_sv_netview_offsetfromdp(13297584);
        xsim_sc_channel<0, bool > *p_64_M03_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_64->M03_AXI_arready.bind(*p_64_M03_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_64_M03_AXI_arready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_64_M03_AXI_rdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_64->M03_AXI_rdata.bind(*p_64_M03_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_64_M03_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_64_M03_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_64->M03_AXI_rresp.bind(*p_64_M03_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_64_M03_AXI_rresp);
        xsim_sc_channel<0, bool > *p_64_M03_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_64->M03_AXI_rlast.bind(*p_64_M03_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_64_M03_AXI_rlast);
        xsim_sc_channel<0, bool > *p_64_M03_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_64->M03_AXI_rvalid.bind(*p_64_M03_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_64_M03_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_64_M03_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_64->M03_AXI_rready.bind(*p_64_M03_AXI_rready);
        p_64_M03_AXI_rready->set_sv_netview_offsetfromdp(13297920);
        sc_inst_65 = new pfm_top_sci(".pfm_top_wrapper.pfm_top_i.pfm_top_sci_inst");
        sc_inst_65->xsim_set_dbg_index(46);
        sc_inst_66 = new pfm_top_axi_vip_0_0(".pfm_top_wrapper.pfm_top_i.static_region.axi_vip_0");
        sc_inst_66->xsim_set_dbg_index(258);
        xsim_sc_channel<0, bool > *p_66_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_66->aclk.bind(*p_66_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_66_aclk);
        xsim_sc_channel<0, bool > *p_66_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_66->aresetn.bind(*p_66_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_66_aresetn);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_66_s_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_66->s_axi_awaddr.bind(*p_66_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_66_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_66_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_66->s_axi_awlen.bind(*p_66_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_66_s_axi_awlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_66_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_66->s_axi_awburst.bind(*p_66_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_66_s_axi_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_66_s_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_66->s_axi_awlock.bind(*p_66_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_66_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_66_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_66->s_axi_awcache.bind(*p_66_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_66_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_66_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_66->s_axi_awprot.bind(*p_66_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_66_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_66_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_66->s_axi_awqos.bind(*p_66_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_66_s_axi_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_66_s_axi_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_66->s_axi_awuser.bind(*p_66_s_axi_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_66_s_axi_awuser);
        xsim_sc_channel<0, bool > *p_66_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_66->s_axi_awvalid.bind(*p_66_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_66_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_66_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_66->s_axi_awready.bind(*p_66_s_axi_awready);
        p_66_s_axi_awready->set_sv_netview_offsetfromdp(13477776);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_66_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_66->s_axi_wdata.bind(*p_66_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_66_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_66_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_66->s_axi_wstrb.bind(*p_66_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_66_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_66_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_66->s_axi_wlast.bind(*p_66_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_66_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_66_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_66->s_axi_wvalid.bind(*p_66_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_66_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_66_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_66->s_axi_wready.bind(*p_66_s_axi_wready);
        p_66_s_axi_wready->set_sv_netview_offsetfromdp(13478056);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_66_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_66->s_axi_bresp.bind(*p_66_s_axi_bresp);
        p_66_s_axi_bresp->set_sv_netview_offsetfromdp(13478112);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_66_s_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_66->s_axi_buser.bind(*p_66_s_axi_buser);
        p_66_s_axi_buser->set_sv_netview_offsetfromdp(13478168);
        xsim_sc_channel<0, bool > *p_66_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_66->s_axi_bvalid.bind(*p_66_s_axi_bvalid);
        p_66_s_axi_bvalid->set_sv_netview_offsetfromdp(13478224);
        xsim_sc_channel<0, bool > *p_66_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_66->s_axi_bready.bind(*p_66_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_66_s_axi_bready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_66_s_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_66->s_axi_araddr.bind(*p_66_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_66_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_66_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_66->s_axi_arlen.bind(*p_66_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_66_s_axi_arlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_66_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_66->s_axi_arburst.bind(*p_66_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_66_s_axi_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_66_s_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_66->s_axi_arlock.bind(*p_66_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_66_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_66_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_66->s_axi_arcache.bind(*p_66_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_66_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_66_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_66->s_axi_arprot.bind(*p_66_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_66_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_66_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_66->s_axi_arqos.bind(*p_66_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_66_s_axi_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_66_s_axi_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_66->s_axi_aruser.bind(*p_66_s_axi_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_66_s_axi_aruser);
        xsim_sc_channel<0, bool > *p_66_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_66->s_axi_arvalid.bind(*p_66_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_66_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_66_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_66->s_axi_arready.bind(*p_66_s_axi_arready);
        p_66_s_axi_arready->set_sv_netview_offsetfromdp(13478840);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_66_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_66->s_axi_rdata.bind(*p_66_s_axi_rdata);
        p_66_s_axi_rdata->set_sv_netview_offsetfromdp(13478896);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_66_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_66->s_axi_rresp.bind(*p_66_s_axi_rresp);
        p_66_s_axi_rresp->set_sv_netview_offsetfromdp(13478952);
        xsim_sc_channel<0, bool > *p_66_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_66->s_axi_rlast.bind(*p_66_s_axi_rlast);
        p_66_s_axi_rlast->set_sv_netview_offsetfromdp(13479008);
        xsim_sc_channel<0, bool > *p_66_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_66->s_axi_rvalid.bind(*p_66_s_axi_rvalid);
        p_66_s_axi_rvalid->set_sv_netview_offsetfromdp(13479064);
        xsim_sc_channel<0, bool > *p_66_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_66->s_axi_rready.bind(*p_66_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_66_s_axi_rready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_66_m_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_66->m_axi_awaddr.bind(*p_66_m_axi_awaddr);
        p_66_m_axi_awaddr->set_sv_netview_offsetfromdp(13479176);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_66_m_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_66->m_axi_awlen.bind(*p_66_m_axi_awlen);
        p_66_m_axi_awlen->set_sv_netview_offsetfromdp(13479232);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_66_m_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_66->m_axi_awburst.bind(*p_66_m_axi_awburst);
        p_66_m_axi_awburst->set_sv_netview_offsetfromdp(13479288);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_66_m_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_66->m_axi_awlock.bind(*p_66_m_axi_awlock);
        p_66_m_axi_awlock->set_sv_netview_offsetfromdp(13479344);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_66_m_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_66->m_axi_awcache.bind(*p_66_m_axi_awcache);
        p_66_m_axi_awcache->set_sv_netview_offsetfromdp(13479400);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_66_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_66->m_axi_awprot.bind(*p_66_m_axi_awprot);
        p_66_m_axi_awprot->set_sv_netview_offsetfromdp(13479456);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_66_m_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_66->m_axi_awqos.bind(*p_66_m_axi_awqos);
        p_66_m_axi_awqos->set_sv_netview_offsetfromdp(13479512);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_66_m_axi_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_66->m_axi_awuser.bind(*p_66_m_axi_awuser);
        p_66_m_axi_awuser->set_sv_netview_offsetfromdp(13479568);
        xsim_sc_channel<0, bool > *p_66_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_66->m_axi_awvalid.bind(*p_66_m_axi_awvalid);
        p_66_m_axi_awvalid->set_sv_netview_offsetfromdp(13479624);
        xsim_sc_channel<0, bool > *p_66_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_66->m_axi_awready.bind(*p_66_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_66_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_66_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_66->m_axi_wdata.bind(*p_66_m_axi_wdata);
        p_66_m_axi_wdata->set_sv_netview_offsetfromdp(13479736);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_66_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_66->m_axi_wstrb.bind(*p_66_m_axi_wstrb);
        p_66_m_axi_wstrb->set_sv_netview_offsetfromdp(13479792);
        xsim_sc_channel<0, bool > *p_66_m_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_66->m_axi_wlast.bind(*p_66_m_axi_wlast);
        p_66_m_axi_wlast->set_sv_netview_offsetfromdp(13479848);
        xsim_sc_channel<0, bool > *p_66_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_66->m_axi_wvalid.bind(*p_66_m_axi_wvalid);
        p_66_m_axi_wvalid->set_sv_netview_offsetfromdp(13479904);
        xsim_sc_channel<0, bool > *p_66_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_66->m_axi_wready.bind(*p_66_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_66_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_66_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_66->m_axi_bresp.bind(*p_66_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_66_m_axi_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_66_m_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_66->m_axi_buser.bind(*p_66_m_axi_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_66_m_axi_buser);
        xsim_sc_channel<0, bool > *p_66_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_66->m_axi_bvalid.bind(*p_66_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_66_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_66_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_66->m_axi_bready.bind(*p_66_m_axi_bready);
        p_66_m_axi_bready->set_sv_netview_offsetfromdp(13480184);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_66_m_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_66->m_axi_araddr.bind(*p_66_m_axi_araddr);
        p_66_m_axi_araddr->set_sv_netview_offsetfromdp(13480240);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_66_m_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_66->m_axi_arlen.bind(*p_66_m_axi_arlen);
        p_66_m_axi_arlen->set_sv_netview_offsetfromdp(13480296);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_66_m_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_66->m_axi_arburst.bind(*p_66_m_axi_arburst);
        p_66_m_axi_arburst->set_sv_netview_offsetfromdp(13480352);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_66_m_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_66->m_axi_arlock.bind(*p_66_m_axi_arlock);
        p_66_m_axi_arlock->set_sv_netview_offsetfromdp(13480408);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_66_m_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_66->m_axi_arcache.bind(*p_66_m_axi_arcache);
        p_66_m_axi_arcache->set_sv_netview_offsetfromdp(13480464);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_66_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_66->m_axi_arprot.bind(*p_66_m_axi_arprot);
        p_66_m_axi_arprot->set_sv_netview_offsetfromdp(13480520);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_66_m_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_66->m_axi_arqos.bind(*p_66_m_axi_arqos);
        p_66_m_axi_arqos->set_sv_netview_offsetfromdp(13480576);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_66_m_axi_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_66->m_axi_aruser.bind(*p_66_m_axi_aruser);
        p_66_m_axi_aruser->set_sv_netview_offsetfromdp(13480632);
        xsim_sc_channel<0, bool > *p_66_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_66->m_axi_arvalid.bind(*p_66_m_axi_arvalid);
        p_66_m_axi_arvalid->set_sv_netview_offsetfromdp(13480688);
        xsim_sc_channel<0, bool > *p_66_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_66->m_axi_arready.bind(*p_66_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_66_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_66_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_66->m_axi_rdata.bind(*p_66_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_66_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_66_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_66->m_axi_rresp.bind(*p_66_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_66_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_66_m_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_66->m_axi_rlast.bind(*p_66_m_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_66_m_axi_rlast);
        xsim_sc_channel<0, bool > *p_66_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_66->m_axi_rvalid.bind(*p_66_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_66_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_66_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_66->m_axi_rready.bind(*p_66_m_axi_rready);
        p_66_m_axi_rready->set_sv_netview_offsetfromdp(13481024);
        sc_inst_67 = new pfm_top_xbar_0(".pfm_top_wrapper.pfm_top_i.static_region.connect_to_es_cu.xbar");
        sc_inst_67->xsim_set_dbg_index(667);
        xsim_sc_channel<0, bool > *p_67_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_67->aclk.bind(*p_67_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_67_aclk);
        xsim_sc_channel<0, bool > *p_67_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_67->aresetn.bind(*p_67_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_67_aresetn);
        xsim_sc_channel<128, sc_dt::sc_bv<128> > *p_67_s_axi_awaddr = new xsim_sc_channel<128, sc_dt::sc_bv<128> >();
        sc_inst_67->s_axi_awaddr.bind(*p_67_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_67_s_axi_awaddr);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_67_s_axi_awprot = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_67->s_axi_awprot.bind(*p_67_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_67_s_axi_awprot);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_67_s_axi_awvalid = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_67->s_axi_awvalid.bind(*p_67_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_67_s_axi_awvalid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_67_s_axi_awready = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_67->s_axi_awready.bind(*p_67_s_axi_awready);
        p_67_s_axi_awready->set_sv_netview_offsetfromdp(13596160);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_67_s_axi_wdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_67->s_axi_wdata.bind(*p_67_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_67_s_axi_wdata);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_67_s_axi_wstrb = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_67->s_axi_wstrb.bind(*p_67_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_67_s_axi_wstrb);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_67_s_axi_wvalid = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_67->s_axi_wvalid.bind(*p_67_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_67_s_axi_wvalid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_67_s_axi_wready = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_67->s_axi_wready.bind(*p_67_s_axi_wready);
        p_67_s_axi_wready->set_sv_netview_offsetfromdp(13596384);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_67_s_axi_bresp = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_67->s_axi_bresp.bind(*p_67_s_axi_bresp);
        p_67_s_axi_bresp->set_sv_netview_offsetfromdp(13596440);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_67_s_axi_bvalid = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_67->s_axi_bvalid.bind(*p_67_s_axi_bvalid);
        p_67_s_axi_bvalid->set_sv_netview_offsetfromdp(13596496);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_67_s_axi_bready = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_67->s_axi_bready.bind(*p_67_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_67_s_axi_bready);
        xsim_sc_channel<128, sc_dt::sc_bv<128> > *p_67_s_axi_araddr = new xsim_sc_channel<128, sc_dt::sc_bv<128> >();
        sc_inst_67->s_axi_araddr.bind(*p_67_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_67_s_axi_araddr);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_67_s_axi_arprot = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_67->s_axi_arprot.bind(*p_67_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_67_s_axi_arprot);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_67_s_axi_arvalid = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_67->s_axi_arvalid.bind(*p_67_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_67_s_axi_arvalid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_67_s_axi_arready = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_67->s_axi_arready.bind(*p_67_s_axi_arready);
        p_67_s_axi_arready->set_sv_netview_offsetfromdp(13596776);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_67_s_axi_rdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_67->s_axi_rdata.bind(*p_67_s_axi_rdata);
        p_67_s_axi_rdata->set_sv_netview_offsetfromdp(13596832);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_67_s_axi_rresp = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_67->s_axi_rresp.bind(*p_67_s_axi_rresp);
        p_67_s_axi_rresp->set_sv_netview_offsetfromdp(13596888);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_67_s_axi_rvalid = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_67->s_axi_rvalid.bind(*p_67_s_axi_rvalid);
        p_67_s_axi_rvalid->set_sv_netview_offsetfromdp(13596944);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_67_s_axi_rready = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_67->s_axi_rready.bind(*p_67_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_67_s_axi_rready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_67_m_axi_awaddr = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_67->m_axi_awaddr.bind(*p_67_m_axi_awaddr);
        p_67_m_axi_awaddr->set_sv_netview_offsetfromdp(13597056);
        xsim_sc_channel<12, sc_dt::sc_bv<12> > *p_67_m_axi_awprot = new xsim_sc_channel<12, sc_dt::sc_bv<12> >();
        sc_inst_67->m_axi_awprot.bind(*p_67_m_axi_awprot);
        p_67_m_axi_awprot->set_sv_netview_offsetfromdp(13597112);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_67_m_axi_awvalid = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_67->m_axi_awvalid.bind(*p_67_m_axi_awvalid);
        p_67_m_axi_awvalid->set_sv_netview_offsetfromdp(13597168);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_67_m_axi_awready = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_67->m_axi_awready.bind(*p_67_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_67_m_axi_awready);
        xsim_sc_channel<128, sc_dt::sc_bv<128> > *p_67_m_axi_wdata = new xsim_sc_channel<128, sc_dt::sc_bv<128> >();
        sc_inst_67->m_axi_wdata.bind(*p_67_m_axi_wdata);
        p_67_m_axi_wdata->set_sv_netview_offsetfromdp(13597280);
        xsim_sc_channel<16, sc_dt::sc_bv<16> > *p_67_m_axi_wstrb = new xsim_sc_channel<16, sc_dt::sc_bv<16> >();
        sc_inst_67->m_axi_wstrb.bind(*p_67_m_axi_wstrb);
        p_67_m_axi_wstrb->set_sv_netview_offsetfromdp(13597336);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_67_m_axi_wvalid = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_67->m_axi_wvalid.bind(*p_67_m_axi_wvalid);
        p_67_m_axi_wvalid->set_sv_netview_offsetfromdp(13597392);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_67_m_axi_wready = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_67->m_axi_wready.bind(*p_67_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_67_m_axi_wready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_67_m_axi_bresp = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_67->m_axi_bresp.bind(*p_67_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_67_m_axi_bresp);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_67_m_axi_bvalid = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_67->m_axi_bvalid.bind(*p_67_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_67_m_axi_bvalid);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_67_m_axi_bready = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_67->m_axi_bready.bind(*p_67_m_axi_bready);
        p_67_m_axi_bready->set_sv_netview_offsetfromdp(13597616);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_67_m_axi_araddr = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_67->m_axi_araddr.bind(*p_67_m_axi_araddr);
        p_67_m_axi_araddr->set_sv_netview_offsetfromdp(13597672);
        xsim_sc_channel<12, sc_dt::sc_bv<12> > *p_67_m_axi_arprot = new xsim_sc_channel<12, sc_dt::sc_bv<12> >();
        sc_inst_67->m_axi_arprot.bind(*p_67_m_axi_arprot);
        p_67_m_axi_arprot->set_sv_netview_offsetfromdp(13597728);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_67_m_axi_arvalid = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_67->m_axi_arvalid.bind(*p_67_m_axi_arvalid);
        p_67_m_axi_arvalid->set_sv_netview_offsetfromdp(13597784);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_67_m_axi_arready = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_67->m_axi_arready.bind(*p_67_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_67_m_axi_arready);
        xsim_sc_channel<128, sc_dt::sc_bv<128> > *p_67_m_axi_rdata = new xsim_sc_channel<128, sc_dt::sc_bv<128> >();
        sc_inst_67->m_axi_rdata.bind(*p_67_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_67_m_axi_rdata);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_67_m_axi_rresp = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_67->m_axi_rresp.bind(*p_67_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_67_m_axi_rresp);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_67_m_axi_rvalid = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_67->m_axi_rvalid.bind(*p_67_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_67_m_axi_rvalid);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_67_m_axi_rready = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_67->m_axi_rready.bind(*p_67_m_axi_rready);
        p_67_m_axi_rready->set_sv_netview_offsetfromdp(13598064);
        sc_inst_68 = new pfm_top_embedded_schedular_0(".pfm_top_wrapper.pfm_top_i.static_region.embedded_schedular");
        sc_inst_68->xsim_set_dbg_index(262);
        xsim_sc_channel<128, sc_dt::sc_bv<128> > *p_68_interrupt_cu = new xsim_sc_channel<128, sc_dt::sc_bv<128> >();
        sc_inst_68->interrupt_cu.bind(*p_68_interrupt_cu);
        (*_glb_hdl_sc_channel_map).push_back(p_68_interrupt_cu);
        xsim_sc_channel<0, bool > *p_68_interrupt_m2m = new xsim_sc_channel<0, bool >();
        sc_inst_68->interrupt_m2m.bind(*p_68_interrupt_m2m);
        p_68_interrupt_m2m->set_sv_netview_offsetfromdp(13599952);
        xsim_sc_channel<0, bool > *p_68_s_axi_ctrl_user_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_68->s_axi_ctrl_user_aresetn.bind(*p_68_s_axi_ctrl_user_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_68_s_axi_ctrl_user_aresetn);
        xsim_sc_channel<0, bool > *p_68_s_axi_data_p2p_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_68->s_axi_data_p2p_aresetn.bind(*p_68_s_axi_data_p2p_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_68_s_axi_data_p2p_aresetn);
        xsim_sc_channel<0, bool > *p_68_maxi_lite_mb_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_68->maxi_lite_mb_aresetn.bind(*p_68_maxi_lite_mb_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_68_maxi_lite_mb_aresetn);
        xsim_sc_channel<0, bool > *p_68_m_axi_data_m2m_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_68->m_axi_data_m2m_aresetn.bind(*p_68_m_axi_data_m2m_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_68_m_axi_data_m2m_aresetn);
        xsim_sc_channel<0, bool > *p_68_s_axi_ctrl_user_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_68->s_axi_ctrl_user_aclk.bind(*p_68_s_axi_ctrl_user_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_68_s_axi_ctrl_user_aclk);
        xsim_sc_channel<0, bool > *p_68_s_axi_data_p2p_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_68->s_axi_data_p2p_aclk.bind(*p_68_s_axi_data_p2p_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_68_s_axi_data_p2p_aclk);
        xsim_sc_channel<0, bool > *p_68_maxi_lite_mb_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_68->maxi_lite_mb_aclk.bind(*p_68_maxi_lite_mb_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_68_maxi_lite_mb_aclk);
        xsim_sc_channel<0, bool > *p_68_m_axi_data_m2m_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_68->m_axi_data_m2m_aclk.bind(*p_68_m_axi_data_m2m_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_68_m_axi_data_m2m_aclk);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_68_s_axi_data_p2p_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_68->s_axi_data_p2p_awaddr.bind(*p_68_s_axi_data_p2p_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_68_s_axi_data_p2p_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_68_s_axi_data_p2p_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_68->s_axi_data_p2p_awlen.bind(*p_68_s_axi_data_p2p_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_68_s_axi_data_p2p_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_68_s_axi_data_p2p_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_68->s_axi_data_p2p_awsize.bind(*p_68_s_axi_data_p2p_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_68_s_axi_data_p2p_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_68_s_axi_data_p2p_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_68->s_axi_data_p2p_awburst.bind(*p_68_s_axi_data_p2p_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_68_s_axi_data_p2p_awburst);
        xsim_sc_channel<0, bool > *p_68_s_axi_data_p2p_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_68->s_axi_data_p2p_awlock.bind(*p_68_s_axi_data_p2p_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_68_s_axi_data_p2p_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_68_s_axi_data_p2p_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_68->s_axi_data_p2p_awcache.bind(*p_68_s_axi_data_p2p_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_68_s_axi_data_p2p_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_68_s_axi_data_p2p_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_68->s_axi_data_p2p_awprot.bind(*p_68_s_axi_data_p2p_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_68_s_axi_data_p2p_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_68_s_axi_data_p2p_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_68->s_axi_data_p2p_awregion.bind(*p_68_s_axi_data_p2p_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_68_s_axi_data_p2p_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_68_s_axi_data_p2p_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_68->s_axi_data_p2p_awqos.bind(*p_68_s_axi_data_p2p_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_68_s_axi_data_p2p_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_68_s_axi_data_p2p_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_68->s_axi_data_p2p_awuser.bind(*p_68_s_axi_data_p2p_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_68_s_axi_data_p2p_awuser);
        xsim_sc_channel<0, bool > *p_68_s_axi_data_p2p_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_68->s_axi_data_p2p_awvalid.bind(*p_68_s_axi_data_p2p_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_68_s_axi_data_p2p_awvalid);
        xsim_sc_channel<0, bool > *p_68_s_axi_data_p2p_awready = new xsim_sc_channel<0, bool >();
        sc_inst_68->s_axi_data_p2p_awready.bind(*p_68_s_axi_data_p2p_awready);
        p_68_s_axi_data_p2p_awready->set_sv_netview_offsetfromdp(13601072);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_68_s_axi_data_p2p_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_68->s_axi_data_p2p_wdata.bind(*p_68_s_axi_data_p2p_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_68_s_axi_data_p2p_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_68_s_axi_data_p2p_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_68->s_axi_data_p2p_wstrb.bind(*p_68_s_axi_data_p2p_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_68_s_axi_data_p2p_wstrb);
        xsim_sc_channel<0, bool > *p_68_s_axi_data_p2p_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_68->s_axi_data_p2p_wlast.bind(*p_68_s_axi_data_p2p_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_68_s_axi_data_p2p_wlast);
        xsim_sc_channel<0, bool > *p_68_s_axi_data_p2p_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_68->s_axi_data_p2p_wvalid.bind(*p_68_s_axi_data_p2p_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_68_s_axi_data_p2p_wvalid);
        xsim_sc_channel<0, bool > *p_68_s_axi_data_p2p_wready = new xsim_sc_channel<0, bool >();
        sc_inst_68->s_axi_data_p2p_wready.bind(*p_68_s_axi_data_p2p_wready);
        p_68_s_axi_data_p2p_wready->set_sv_netview_offsetfromdp(13601352);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_68_s_axi_data_p2p_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_68->s_axi_data_p2p_bresp.bind(*p_68_s_axi_data_p2p_bresp);
        p_68_s_axi_data_p2p_bresp->set_sv_netview_offsetfromdp(13601408);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_68_s_axi_data_p2p_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_68->s_axi_data_p2p_buser.bind(*p_68_s_axi_data_p2p_buser);
        p_68_s_axi_data_p2p_buser->set_sv_netview_offsetfromdp(13601464);
        xsim_sc_channel<0, bool > *p_68_s_axi_data_p2p_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_68->s_axi_data_p2p_bvalid.bind(*p_68_s_axi_data_p2p_bvalid);
        p_68_s_axi_data_p2p_bvalid->set_sv_netview_offsetfromdp(13601520);
        xsim_sc_channel<0, bool > *p_68_s_axi_data_p2p_bready = new xsim_sc_channel<0, bool >();
        sc_inst_68->s_axi_data_p2p_bready.bind(*p_68_s_axi_data_p2p_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_68_s_axi_data_p2p_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_68_s_axi_data_p2p_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_68->s_axi_data_p2p_araddr.bind(*p_68_s_axi_data_p2p_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_68_s_axi_data_p2p_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_68_s_axi_data_p2p_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_68->s_axi_data_p2p_arlen.bind(*p_68_s_axi_data_p2p_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_68_s_axi_data_p2p_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_68_s_axi_data_p2p_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_68->s_axi_data_p2p_arsize.bind(*p_68_s_axi_data_p2p_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_68_s_axi_data_p2p_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_68_s_axi_data_p2p_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_68->s_axi_data_p2p_arburst.bind(*p_68_s_axi_data_p2p_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_68_s_axi_data_p2p_arburst);
        xsim_sc_channel<0, bool > *p_68_s_axi_data_p2p_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_68->s_axi_data_p2p_arlock.bind(*p_68_s_axi_data_p2p_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_68_s_axi_data_p2p_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_68_s_axi_data_p2p_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_68->s_axi_data_p2p_arcache.bind(*p_68_s_axi_data_p2p_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_68_s_axi_data_p2p_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_68_s_axi_data_p2p_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_68->s_axi_data_p2p_arprot.bind(*p_68_s_axi_data_p2p_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_68_s_axi_data_p2p_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_68_s_axi_data_p2p_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_68->s_axi_data_p2p_arregion.bind(*p_68_s_axi_data_p2p_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_68_s_axi_data_p2p_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_68_s_axi_data_p2p_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_68->s_axi_data_p2p_arqos.bind(*p_68_s_axi_data_p2p_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_68_s_axi_data_p2p_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_68_s_axi_data_p2p_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_68->s_axi_data_p2p_aruser.bind(*p_68_s_axi_data_p2p_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_68_s_axi_data_p2p_aruser);
        xsim_sc_channel<0, bool > *p_68_s_axi_data_p2p_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_68->s_axi_data_p2p_arvalid.bind(*p_68_s_axi_data_p2p_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_68_s_axi_data_p2p_arvalid);
        xsim_sc_channel<0, bool > *p_68_s_axi_data_p2p_arready = new xsim_sc_channel<0, bool >();
        sc_inst_68->s_axi_data_p2p_arready.bind(*p_68_s_axi_data_p2p_arready);
        p_68_s_axi_data_p2p_arready->set_sv_netview_offsetfromdp(13602248);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_68_s_axi_data_p2p_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_68->s_axi_data_p2p_rdata.bind(*p_68_s_axi_data_p2p_rdata);
        p_68_s_axi_data_p2p_rdata->set_sv_netview_offsetfromdp(13602304);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_68_s_axi_data_p2p_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_68->s_axi_data_p2p_rresp.bind(*p_68_s_axi_data_p2p_rresp);
        p_68_s_axi_data_p2p_rresp->set_sv_netview_offsetfromdp(13602360);
        xsim_sc_channel<0, bool > *p_68_s_axi_data_p2p_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_68->s_axi_data_p2p_rlast.bind(*p_68_s_axi_data_p2p_rlast);
        p_68_s_axi_data_p2p_rlast->set_sv_netview_offsetfromdp(13602416);
        xsim_sc_channel<0, bool > *p_68_s_axi_data_p2p_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_68->s_axi_data_p2p_rvalid.bind(*p_68_s_axi_data_p2p_rvalid);
        p_68_s_axi_data_p2p_rvalid->set_sv_netview_offsetfromdp(13602472);
        xsim_sc_channel<0, bool > *p_68_s_axi_data_p2p_rready = new xsim_sc_channel<0, bool >();
        sc_inst_68->s_axi_data_p2p_rready.bind(*p_68_s_axi_data_p2p_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_68_s_axi_data_p2p_rready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_68_maxi_lite_mb_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_68->maxi_lite_mb_awaddr.bind(*p_68_maxi_lite_mb_awaddr);
        p_68_maxi_lite_mb_awaddr->set_sv_netview_offsetfromdp(13602584);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_68_maxi_lite_mb_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_68->maxi_lite_mb_awprot.bind(*p_68_maxi_lite_mb_awprot);
        p_68_maxi_lite_mb_awprot->set_sv_netview_offsetfromdp(13602640);
        xsim_sc_channel<0, bool > *p_68_maxi_lite_mb_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_68->maxi_lite_mb_awvalid.bind(*p_68_maxi_lite_mb_awvalid);
        p_68_maxi_lite_mb_awvalid->set_sv_netview_offsetfromdp(13602696);
        xsim_sc_channel<0, bool > *p_68_maxi_lite_mb_awready = new xsim_sc_channel<0, bool >();
        sc_inst_68->maxi_lite_mb_awready.bind(*p_68_maxi_lite_mb_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_68_maxi_lite_mb_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_68_maxi_lite_mb_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_68->maxi_lite_mb_wdata.bind(*p_68_maxi_lite_mb_wdata);
        p_68_maxi_lite_mb_wdata->set_sv_netview_offsetfromdp(13602808);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_68_maxi_lite_mb_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_68->maxi_lite_mb_wstrb.bind(*p_68_maxi_lite_mb_wstrb);
        p_68_maxi_lite_mb_wstrb->set_sv_netview_offsetfromdp(13602864);
        xsim_sc_channel<0, bool > *p_68_maxi_lite_mb_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_68->maxi_lite_mb_wvalid.bind(*p_68_maxi_lite_mb_wvalid);
        p_68_maxi_lite_mb_wvalid->set_sv_netview_offsetfromdp(13602920);
        xsim_sc_channel<0, bool > *p_68_maxi_lite_mb_wready = new xsim_sc_channel<0, bool >();
        sc_inst_68->maxi_lite_mb_wready.bind(*p_68_maxi_lite_mb_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_68_maxi_lite_mb_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_68_maxi_lite_mb_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_68->maxi_lite_mb_bresp.bind(*p_68_maxi_lite_mb_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_68_maxi_lite_mb_bresp);
        xsim_sc_channel<0, bool > *p_68_maxi_lite_mb_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_68->maxi_lite_mb_bvalid.bind(*p_68_maxi_lite_mb_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_68_maxi_lite_mb_bvalid);
        xsim_sc_channel<0, bool > *p_68_maxi_lite_mb_bready = new xsim_sc_channel<0, bool >();
        sc_inst_68->maxi_lite_mb_bready.bind(*p_68_maxi_lite_mb_bready);
        p_68_maxi_lite_mb_bready->set_sv_netview_offsetfromdp(13603144);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_68_maxi_lite_mb_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_68->maxi_lite_mb_araddr.bind(*p_68_maxi_lite_mb_araddr);
        p_68_maxi_lite_mb_araddr->set_sv_netview_offsetfromdp(13603200);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_68_maxi_lite_mb_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_68->maxi_lite_mb_arprot.bind(*p_68_maxi_lite_mb_arprot);
        p_68_maxi_lite_mb_arprot->set_sv_netview_offsetfromdp(13603256);
        xsim_sc_channel<0, bool > *p_68_maxi_lite_mb_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_68->maxi_lite_mb_arvalid.bind(*p_68_maxi_lite_mb_arvalid);
        p_68_maxi_lite_mb_arvalid->set_sv_netview_offsetfromdp(13603312);
        xsim_sc_channel<0, bool > *p_68_maxi_lite_mb_arready = new xsim_sc_channel<0, bool >();
        sc_inst_68->maxi_lite_mb_arready.bind(*p_68_maxi_lite_mb_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_68_maxi_lite_mb_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_68_maxi_lite_mb_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_68->maxi_lite_mb_rdata.bind(*p_68_maxi_lite_mb_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_68_maxi_lite_mb_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_68_maxi_lite_mb_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_68->maxi_lite_mb_rresp.bind(*p_68_maxi_lite_mb_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_68_maxi_lite_mb_rresp);
        xsim_sc_channel<0, bool > *p_68_maxi_lite_mb_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_68->maxi_lite_mb_rvalid.bind(*p_68_maxi_lite_mb_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_68_maxi_lite_mb_rvalid);
        xsim_sc_channel<0, bool > *p_68_maxi_lite_mb_rready = new xsim_sc_channel<0, bool >();
        sc_inst_68->maxi_lite_mb_rready.bind(*p_68_maxi_lite_mb_rready);
        p_68_maxi_lite_mb_rready->set_sv_netview_offsetfromdp(13603592);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_68_s_axi_ctrl_user_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_68->s_axi_ctrl_user_awaddr.bind(*p_68_s_axi_ctrl_user_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_68_s_axi_ctrl_user_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_68_s_axi_ctrl_user_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_68->s_axi_ctrl_user_awprot.bind(*p_68_s_axi_ctrl_user_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_68_s_axi_ctrl_user_awprot);
        xsim_sc_channel<0, bool > *p_68_s_axi_ctrl_user_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_68->s_axi_ctrl_user_awvalid.bind(*p_68_s_axi_ctrl_user_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_68_s_axi_ctrl_user_awvalid);
        xsim_sc_channel<0, bool > *p_68_s_axi_ctrl_user_awready = new xsim_sc_channel<0, bool >();
        sc_inst_68->s_axi_ctrl_user_awready.bind(*p_68_s_axi_ctrl_user_awready);
        p_68_s_axi_ctrl_user_awready->set_sv_netview_offsetfromdp(13603816);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_68_s_axi_ctrl_user_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_68->s_axi_ctrl_user_wdata.bind(*p_68_s_axi_ctrl_user_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_68_s_axi_ctrl_user_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_68_s_axi_ctrl_user_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_68->s_axi_ctrl_user_wstrb.bind(*p_68_s_axi_ctrl_user_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_68_s_axi_ctrl_user_wstrb);
        xsim_sc_channel<0, bool > *p_68_s_axi_ctrl_user_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_68->s_axi_ctrl_user_wvalid.bind(*p_68_s_axi_ctrl_user_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_68_s_axi_ctrl_user_wvalid);
        xsim_sc_channel<0, bool > *p_68_s_axi_ctrl_user_wready = new xsim_sc_channel<0, bool >();
        sc_inst_68->s_axi_ctrl_user_wready.bind(*p_68_s_axi_ctrl_user_wready);
        p_68_s_axi_ctrl_user_wready->set_sv_netview_offsetfromdp(13604040);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_68_s_axi_ctrl_user_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_68->s_axi_ctrl_user_bresp.bind(*p_68_s_axi_ctrl_user_bresp);
        p_68_s_axi_ctrl_user_bresp->set_sv_netview_offsetfromdp(13604096);
        xsim_sc_channel<0, bool > *p_68_s_axi_ctrl_user_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_68->s_axi_ctrl_user_bvalid.bind(*p_68_s_axi_ctrl_user_bvalid);
        p_68_s_axi_ctrl_user_bvalid->set_sv_netview_offsetfromdp(13604152);
        xsim_sc_channel<0, bool > *p_68_s_axi_ctrl_user_bready = new xsim_sc_channel<0, bool >();
        sc_inst_68->s_axi_ctrl_user_bready.bind(*p_68_s_axi_ctrl_user_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_68_s_axi_ctrl_user_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_68_s_axi_ctrl_user_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_68->s_axi_ctrl_user_araddr.bind(*p_68_s_axi_ctrl_user_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_68_s_axi_ctrl_user_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_68_s_axi_ctrl_user_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_68->s_axi_ctrl_user_arprot.bind(*p_68_s_axi_ctrl_user_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_68_s_axi_ctrl_user_arprot);
        xsim_sc_channel<0, bool > *p_68_s_axi_ctrl_user_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_68->s_axi_ctrl_user_arvalid.bind(*p_68_s_axi_ctrl_user_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_68_s_axi_ctrl_user_arvalid);
        xsim_sc_channel<0, bool > *p_68_s_axi_ctrl_user_arready = new xsim_sc_channel<0, bool >();
        sc_inst_68->s_axi_ctrl_user_arready.bind(*p_68_s_axi_ctrl_user_arready);
        p_68_s_axi_ctrl_user_arready->set_sv_netview_offsetfromdp(13604432);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_68_s_axi_ctrl_user_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_68->s_axi_ctrl_user_rdata.bind(*p_68_s_axi_ctrl_user_rdata);
        p_68_s_axi_ctrl_user_rdata->set_sv_netview_offsetfromdp(13604488);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_68_s_axi_ctrl_user_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_68->s_axi_ctrl_user_rresp.bind(*p_68_s_axi_ctrl_user_rresp);
        p_68_s_axi_ctrl_user_rresp->set_sv_netview_offsetfromdp(13604544);
        xsim_sc_channel<0, bool > *p_68_s_axi_ctrl_user_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_68->s_axi_ctrl_user_rvalid.bind(*p_68_s_axi_ctrl_user_rvalid);
        p_68_s_axi_ctrl_user_rvalid->set_sv_netview_offsetfromdp(13604600);
        xsim_sc_channel<0, bool > *p_68_s_axi_ctrl_user_rready = new xsim_sc_channel<0, bool >();
        sc_inst_68->s_axi_ctrl_user_rready.bind(*p_68_s_axi_ctrl_user_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_68_s_axi_ctrl_user_rready);
        sc_inst_69 = new pfm_top_sim_address_0_0(".pfm_top_wrapper.pfm_top_i.static_region.sim_address_0");
        sc_inst_69->xsim_set_dbg_index(263);
        xsim_sc_channel<0, bool > *p_69_m_aximm_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_69->m_aximm_aclk.bind(*p_69_m_aximm_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_69_m_aximm_aclk);
        xsim_sc_channel<0, bool > *p_69_m_aximm_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_69->m_aximm_aresetn.bind(*p_69_m_aximm_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_69_m_aximm_aresetn);
        xsim_sc_channel<0, bool > *p_69_s_aximm_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_69->s_aximm_aclk.bind(*p_69_s_aximm_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_69_s_aximm_aclk);
        xsim_sc_channel<0, bool > *p_69_s_aximm_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_69->s_aximm_aresetn.bind(*p_69_s_aximm_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_69_s_aximm_aresetn);
        xsim_sc_channel<0, bool > *p_69_m_aximm_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_69->m_aximm_AWVALID.bind(*p_69_m_aximm_AWVALID);
        p_69_m_aximm_AWVALID->set_sv_netview_offsetfromdp(13604984);
        xsim_sc_channel<0, bool > *p_69_m_aximm_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_69->m_aximm_AWREADY.bind(*p_69_m_aximm_AWREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_69_m_aximm_AWREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_69_m_aximm_AWADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_69->m_aximm_AWADDR.bind(*p_69_m_aximm_AWADDR);
        p_69_m_aximm_AWADDR->set_sv_netview_offsetfromdp(13605096);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_69_m_aximm_AWID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_69->m_aximm_AWID.bind(*p_69_m_aximm_AWID);
        p_69_m_aximm_AWID->set_sv_netview_offsetfromdp(13605152);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_69_m_aximm_AWLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_69->m_aximm_AWLEN.bind(*p_69_m_aximm_AWLEN);
        p_69_m_aximm_AWLEN->set_sv_netview_offsetfromdp(13605208);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_69_m_aximm_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_69->m_aximm_AWSIZE.bind(*p_69_m_aximm_AWSIZE);
        p_69_m_aximm_AWSIZE->set_sv_netview_offsetfromdp(13605264);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_69_m_aximm_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_69->m_aximm_AWBURST.bind(*p_69_m_aximm_AWBURST);
        p_69_m_aximm_AWBURST->set_sv_netview_offsetfromdp(13605320);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_69_m_aximm_AWLOCK = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_69->m_aximm_AWLOCK.bind(*p_69_m_aximm_AWLOCK);
        p_69_m_aximm_AWLOCK->set_sv_netview_offsetfromdp(13605376);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_69_m_aximm_AWCACHE = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_69->m_aximm_AWCACHE.bind(*p_69_m_aximm_AWCACHE);
        p_69_m_aximm_AWCACHE->set_sv_netview_offsetfromdp(13605432);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_69_m_aximm_AWPROT = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_69->m_aximm_AWPROT.bind(*p_69_m_aximm_AWPROT);
        p_69_m_aximm_AWPROT->set_sv_netview_offsetfromdp(13605488);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_69_m_aximm_AWREGION = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_69->m_aximm_AWREGION.bind(*p_69_m_aximm_AWREGION);
        p_69_m_aximm_AWREGION->set_sv_netview_offsetfromdp(13605544);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_69_m_aximm_AWQOS = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_69->m_aximm_AWQOS.bind(*p_69_m_aximm_AWQOS);
        p_69_m_aximm_AWQOS->set_sv_netview_offsetfromdp(13605600);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_69_m_aximm_AWUSER = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_69->m_aximm_AWUSER.bind(*p_69_m_aximm_AWUSER);
        p_69_m_aximm_AWUSER->set_sv_netview_offsetfromdp(13605656);
        xsim_sc_channel<0, bool > *p_69_m_aximm_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_69->m_aximm_WVALID.bind(*p_69_m_aximm_WVALID);
        p_69_m_aximm_WVALID->set_sv_netview_offsetfromdp(13605712);
        xsim_sc_channel<0, bool > *p_69_m_aximm_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_69->m_aximm_WREADY.bind(*p_69_m_aximm_WREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_69_m_aximm_WREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_69_m_aximm_WDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_69->m_aximm_WDATA.bind(*p_69_m_aximm_WDATA);
        p_69_m_aximm_WDATA->set_sv_netview_offsetfromdp(13605824);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_69_m_aximm_WSTRB = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_69->m_aximm_WSTRB.bind(*p_69_m_aximm_WSTRB);
        p_69_m_aximm_WSTRB->set_sv_netview_offsetfromdp(13605880);
        xsim_sc_channel<0, bool > *p_69_m_aximm_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_69->m_aximm_WLAST.bind(*p_69_m_aximm_WLAST);
        p_69_m_aximm_WLAST->set_sv_netview_offsetfromdp(13605936);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_69_m_aximm_WUSER = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_69->m_aximm_WUSER.bind(*p_69_m_aximm_WUSER);
        p_69_m_aximm_WUSER->set_sv_netview_offsetfromdp(13605992);
        xsim_sc_channel<0, bool > *p_69_m_aximm_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_69->m_aximm_ARVALID.bind(*p_69_m_aximm_ARVALID);
        p_69_m_aximm_ARVALID->set_sv_netview_offsetfromdp(13606048);
        xsim_sc_channel<0, bool > *p_69_m_aximm_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_69->m_aximm_ARREADY.bind(*p_69_m_aximm_ARREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_69_m_aximm_ARREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_69_m_aximm_ARADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_69->m_aximm_ARADDR.bind(*p_69_m_aximm_ARADDR);
        p_69_m_aximm_ARADDR->set_sv_netview_offsetfromdp(13606160);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_69_m_aximm_ARID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_69->m_aximm_ARID.bind(*p_69_m_aximm_ARID);
        p_69_m_aximm_ARID->set_sv_netview_offsetfromdp(13606216);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_69_m_aximm_ARLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_69->m_aximm_ARLEN.bind(*p_69_m_aximm_ARLEN);
        p_69_m_aximm_ARLEN->set_sv_netview_offsetfromdp(13606272);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_69_m_aximm_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_69->m_aximm_ARSIZE.bind(*p_69_m_aximm_ARSIZE);
        p_69_m_aximm_ARSIZE->set_sv_netview_offsetfromdp(13606328);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_69_m_aximm_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_69->m_aximm_ARBURST.bind(*p_69_m_aximm_ARBURST);
        p_69_m_aximm_ARBURST->set_sv_netview_offsetfromdp(13606384);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_69_m_aximm_ARLOCK = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_69->m_aximm_ARLOCK.bind(*p_69_m_aximm_ARLOCK);
        p_69_m_aximm_ARLOCK->set_sv_netview_offsetfromdp(13606440);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_69_m_aximm_ARCACHE = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_69->m_aximm_ARCACHE.bind(*p_69_m_aximm_ARCACHE);
        p_69_m_aximm_ARCACHE->set_sv_netview_offsetfromdp(13606496);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_69_m_aximm_ARPROT = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_69->m_aximm_ARPROT.bind(*p_69_m_aximm_ARPROT);
        p_69_m_aximm_ARPROT->set_sv_netview_offsetfromdp(13606552);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_69_m_aximm_ARREGION = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_69->m_aximm_ARREGION.bind(*p_69_m_aximm_ARREGION);
        p_69_m_aximm_ARREGION->set_sv_netview_offsetfromdp(13606608);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_69_m_aximm_ARQOS = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_69->m_aximm_ARQOS.bind(*p_69_m_aximm_ARQOS);
        p_69_m_aximm_ARQOS->set_sv_netview_offsetfromdp(13606664);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_69_m_aximm_ARUSER = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_69->m_aximm_ARUSER.bind(*p_69_m_aximm_ARUSER);
        p_69_m_aximm_ARUSER->set_sv_netview_offsetfromdp(13606720);
        xsim_sc_channel<0, bool > *p_69_m_aximm_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_69->m_aximm_RVALID.bind(*p_69_m_aximm_RVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_69_m_aximm_RVALID);
        xsim_sc_channel<0, bool > *p_69_m_aximm_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_69->m_aximm_RREADY.bind(*p_69_m_aximm_RREADY);
        p_69_m_aximm_RREADY->set_sv_netview_offsetfromdp(13606832);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_69_m_aximm_RDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_69->m_aximm_RDATA.bind(*p_69_m_aximm_RDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_69_m_aximm_RDATA);
        xsim_sc_channel<0, bool > *p_69_m_aximm_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_69->m_aximm_RLAST.bind(*p_69_m_aximm_RLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_69_m_aximm_RLAST);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_69_m_aximm_RID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_69->m_aximm_RID.bind(*p_69_m_aximm_RID);
        (*_glb_hdl_sc_channel_map).push_back(p_69_m_aximm_RID);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_69_m_aximm_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_69->m_aximm_RRESP.bind(*p_69_m_aximm_RRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_69_m_aximm_RRESP);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_69_m_aximm_RUSER = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_69->m_aximm_RUSER.bind(*p_69_m_aximm_RUSER);
        (*_glb_hdl_sc_channel_map).push_back(p_69_m_aximm_RUSER);
        xsim_sc_channel<0, bool > *p_69_m_aximm_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_69->m_aximm_BVALID.bind(*p_69_m_aximm_BVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_69_m_aximm_BVALID);
        xsim_sc_channel<0, bool > *p_69_m_aximm_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_69->m_aximm_BREADY.bind(*p_69_m_aximm_BREADY);
        p_69_m_aximm_BREADY->set_sv_netview_offsetfromdp(13607224);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_69_m_aximm_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_69->m_aximm_BRESP.bind(*p_69_m_aximm_BRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_69_m_aximm_BRESP);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_69_m_aximm_BID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_69->m_aximm_BID.bind(*p_69_m_aximm_BID);
        (*_glb_hdl_sc_channel_map).push_back(p_69_m_aximm_BID);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_69_m_aximm_BUSER = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_69->m_aximm_BUSER.bind(*p_69_m_aximm_BUSER);
        (*_glb_hdl_sc_channel_map).push_back(p_69_m_aximm_BUSER);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_69_s_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_69->s_axi_awaddr.bind(*p_69_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_69_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_69_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_69->s_axi_awlen.bind(*p_69_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_69_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_69_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_69->s_axi_awsize.bind(*p_69_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_69_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_69_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_69->s_axi_awburst.bind(*p_69_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_69_s_axi_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_69_s_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_69->s_axi_awlock.bind(*p_69_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_69_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_69_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_69->s_axi_awcache.bind(*p_69_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_69_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_69_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_69->s_axi_awprot.bind(*p_69_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_69_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_69_s_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_69->s_axi_awregion.bind(*p_69_s_axi_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_69_s_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_69_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_69->s_axi_awqos.bind(*p_69_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_69_s_axi_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_69_s_axi_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_69->s_axi_awuser.bind(*p_69_s_axi_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_69_s_axi_awuser);
        xsim_sc_channel<0, bool > *p_69_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_69->s_axi_awvalid.bind(*p_69_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_69_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_69_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_69->s_axi_awready.bind(*p_69_s_axi_awready);
        p_69_s_axi_awready->set_sv_netview_offsetfromdp(13608064);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_69_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_69->s_axi_wdata.bind(*p_69_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_69_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_69_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_69->s_axi_wstrb.bind(*p_69_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_69_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_69_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_69->s_axi_wlast.bind(*p_69_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_69_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_69_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_69->s_axi_wvalid.bind(*p_69_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_69_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_69_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_69->s_axi_wready.bind(*p_69_s_axi_wready);
        p_69_s_axi_wready->set_sv_netview_offsetfromdp(13608344);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_69_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_69->s_axi_bresp.bind(*p_69_s_axi_bresp);
        p_69_s_axi_bresp->set_sv_netview_offsetfromdp(13608400);
        xsim_sc_channel<0, bool > *p_69_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_69->s_axi_bvalid.bind(*p_69_s_axi_bvalid);
        p_69_s_axi_bvalid->set_sv_netview_offsetfromdp(13608456);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_69_s_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_69->s_axi_buser.bind(*p_69_s_axi_buser);
        p_69_s_axi_buser->set_sv_netview_offsetfromdp(13608512);
        xsim_sc_channel<0, bool > *p_69_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_69->s_axi_bready.bind(*p_69_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_69_s_axi_bready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_69_s_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_69->s_axi_araddr.bind(*p_69_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_69_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_69_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_69->s_axi_arlen.bind(*p_69_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_69_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_69_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_69->s_axi_arsize.bind(*p_69_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_69_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_69_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_69->s_axi_arburst.bind(*p_69_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_69_s_axi_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_69_s_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_69->s_axi_arlock.bind(*p_69_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_69_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_69_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_69->s_axi_arcache.bind(*p_69_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_69_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_69_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_69->s_axi_arprot.bind(*p_69_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_69_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_69_s_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_69->s_axi_arregion.bind(*p_69_s_axi_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_69_s_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_69_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_69->s_axi_arqos.bind(*p_69_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_69_s_axi_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_69_s_axi_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_69->s_axi_aruser.bind(*p_69_s_axi_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_69_s_axi_aruser);
        xsim_sc_channel<0, bool > *p_69_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_69->s_axi_arvalid.bind(*p_69_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_69_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_69_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_69->s_axi_arready.bind(*p_69_s_axi_arready);
        p_69_s_axi_arready->set_sv_netview_offsetfromdp(13609240);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_69_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_69->s_axi_rdata.bind(*p_69_s_axi_rdata);
        p_69_s_axi_rdata->set_sv_netview_offsetfromdp(13609296);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_69_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_69->s_axi_rresp.bind(*p_69_s_axi_rresp);
        p_69_s_axi_rresp->set_sv_netview_offsetfromdp(13609352);
        xsim_sc_channel<0, bool > *p_69_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_69->s_axi_rlast.bind(*p_69_s_axi_rlast);
        p_69_s_axi_rlast->set_sv_netview_offsetfromdp(13609408);
        xsim_sc_channel<0, bool > *p_69_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_69->s_axi_rvalid.bind(*p_69_s_axi_rvalid);
        p_69_s_axi_rvalid->set_sv_netview_offsetfromdp(13609464);
        xsim_sc_channel<0, bool > *p_69_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_69->s_axi_rready.bind(*p_69_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_69_s_axi_rready);
        sc_inst_70 = new pfm_top_sim_qdma_0_0(".pfm_top_wrapper.pfm_top_i.static_region.sim_qdma_0");
        sc_inst_70->xsim_set_dbg_index(264);
        xsim_sc_channel<0, bool > *p_70_m_aximm_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_70->m_aximm_aclk.bind(*p_70_m_aximm_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_70_m_aximm_aclk);
        xsim_sc_channel<0, bool > *p_70_m_aximm_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_70->m_aximm_aresetn.bind(*p_70_m_aximm_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_70_m_aximm_aresetn);
        xsim_sc_channel<0, bool > *p_70_m_axictrl_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_70->m_axictrl_aclk.bind(*p_70_m_axictrl_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_70_m_axictrl_aclk);
        xsim_sc_channel<0, bool > *p_70_m_axictrl_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_70->m_axictrl_aresetn.bind(*p_70_m_axictrl_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_70_m_axictrl_aresetn);
        xsim_sc_channel<0, bool > *p_70_s_aximm_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_70->s_aximm_aclk.bind(*p_70_s_aximm_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_70_s_aximm_aclk);
        xsim_sc_channel<0, bool > *p_70_s_aximm_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_70->s_aximm_aresetn.bind(*p_70_s_aximm_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_70_s_aximm_aresetn);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_70_m_axictrl_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_70->m_axictrl_awaddr.bind(*p_70_m_axictrl_awaddr);
        p_70_m_axictrl_awaddr->set_sv_netview_offsetfromdp(13609960);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_70_m_axictrl_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_70->m_axictrl_awprot.bind(*p_70_m_axictrl_awprot);
        p_70_m_axictrl_awprot->set_sv_netview_offsetfromdp(13610016);
        xsim_sc_channel<0, bool > *p_70_m_axictrl_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_70->m_axictrl_awvalid.bind(*p_70_m_axictrl_awvalid);
        p_70_m_axictrl_awvalid->set_sv_netview_offsetfromdp(13610072);
        xsim_sc_channel<0, bool > *p_70_m_axictrl_awready = new xsim_sc_channel<0, bool >();
        sc_inst_70->m_axictrl_awready.bind(*p_70_m_axictrl_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_70_m_axictrl_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_70_m_axictrl_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_70->m_axictrl_wdata.bind(*p_70_m_axictrl_wdata);
        p_70_m_axictrl_wdata->set_sv_netview_offsetfromdp(13610184);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_70_m_axictrl_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_70->m_axictrl_wstrb.bind(*p_70_m_axictrl_wstrb);
        p_70_m_axictrl_wstrb->set_sv_netview_offsetfromdp(13610240);
        xsim_sc_channel<0, bool > *p_70_m_axictrl_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_70->m_axictrl_wvalid.bind(*p_70_m_axictrl_wvalid);
        p_70_m_axictrl_wvalid->set_sv_netview_offsetfromdp(13610296);
        xsim_sc_channel<0, bool > *p_70_m_axictrl_wready = new xsim_sc_channel<0, bool >();
        sc_inst_70->m_axictrl_wready.bind(*p_70_m_axictrl_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_70_m_axictrl_wready);
        xsim_sc_channel<0, bool > *p_70_m_axictrl_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_70->m_axictrl_bvalid.bind(*p_70_m_axictrl_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_70_m_axictrl_bvalid);
        xsim_sc_channel<0, bool > *p_70_m_axictrl_bready = new xsim_sc_channel<0, bool >();
        sc_inst_70->m_axictrl_bready.bind(*p_70_m_axictrl_bready);
        p_70_m_axictrl_bready->set_sv_netview_offsetfromdp(13610464);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_70_m_axictrl_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_70->m_axictrl_bresp.bind(*p_70_m_axictrl_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_70_m_axictrl_bresp);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_70_m_axictrl_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_70->m_axictrl_araddr.bind(*p_70_m_axictrl_araddr);
        p_70_m_axictrl_araddr->set_sv_netview_offsetfromdp(13610576);
        xsim_sc_channel<0, bool > *p_70_m_axictrl_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_70->m_axictrl_arvalid.bind(*p_70_m_axictrl_arvalid);
        p_70_m_axictrl_arvalid->set_sv_netview_offsetfromdp(13610632);
        xsim_sc_channel<0, bool > *p_70_m_axictrl_arready = new xsim_sc_channel<0, bool >();
        sc_inst_70->m_axictrl_arready.bind(*p_70_m_axictrl_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_70_m_axictrl_arready);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_70_m_axictrl_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_70->m_axictrl_arprot.bind(*p_70_m_axictrl_arprot);
        p_70_m_axictrl_arprot->set_sv_netview_offsetfromdp(13610744);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_70_m_axictrl_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_70->m_axictrl_rdata.bind(*p_70_m_axictrl_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_70_m_axictrl_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_70_m_axictrl_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_70->m_axictrl_rresp.bind(*p_70_m_axictrl_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_70_m_axictrl_rresp);
        xsim_sc_channel<0, bool > *p_70_m_axictrl_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_70->m_axictrl_rvalid.bind(*p_70_m_axictrl_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_70_m_axictrl_rvalid);
        xsim_sc_channel<0, bool > *p_70_m_axictrl_rready = new xsim_sc_channel<0, bool >();
        sc_inst_70->m_axictrl_rready.bind(*p_70_m_axictrl_rready);
        p_70_m_axictrl_rready->set_sv_netview_offsetfromdp(13610968);
        xsim_sc_channel<0, bool > *p_70_m_aximm_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_70->m_aximm_AWVALID.bind(*p_70_m_aximm_AWVALID);
        p_70_m_aximm_AWVALID->set_sv_netview_offsetfromdp(13611024);
        xsim_sc_channel<0, bool > *p_70_m_aximm_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_70->m_aximm_AWREADY.bind(*p_70_m_aximm_AWREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_70_m_aximm_AWREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_70_m_aximm_AWADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_70->m_aximm_AWADDR.bind(*p_70_m_aximm_AWADDR);
        p_70_m_aximm_AWADDR->set_sv_netview_offsetfromdp(13611136);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_70_m_aximm_AWID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_70->m_aximm_AWID.bind(*p_70_m_aximm_AWID);
        p_70_m_aximm_AWID->set_sv_netview_offsetfromdp(13611192);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_70_m_aximm_AWLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_70->m_aximm_AWLEN.bind(*p_70_m_aximm_AWLEN);
        p_70_m_aximm_AWLEN->set_sv_netview_offsetfromdp(13611248);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_70_m_aximm_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_70->m_aximm_AWSIZE.bind(*p_70_m_aximm_AWSIZE);
        p_70_m_aximm_AWSIZE->set_sv_netview_offsetfromdp(13611304);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_70_m_aximm_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_70->m_aximm_AWBURST.bind(*p_70_m_aximm_AWBURST);
        p_70_m_aximm_AWBURST->set_sv_netview_offsetfromdp(13611360);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_70_m_aximm_AWLOCK = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_70->m_aximm_AWLOCK.bind(*p_70_m_aximm_AWLOCK);
        p_70_m_aximm_AWLOCK->set_sv_netview_offsetfromdp(13611416);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_70_m_aximm_AWCACHE = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_70->m_aximm_AWCACHE.bind(*p_70_m_aximm_AWCACHE);
        p_70_m_aximm_AWCACHE->set_sv_netview_offsetfromdp(13611472);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_70_m_aximm_AWPROT = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_70->m_aximm_AWPROT.bind(*p_70_m_aximm_AWPROT);
        p_70_m_aximm_AWPROT->set_sv_netview_offsetfromdp(13611528);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_70_m_aximm_AWREGION = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_70->m_aximm_AWREGION.bind(*p_70_m_aximm_AWREGION);
        p_70_m_aximm_AWREGION->set_sv_netview_offsetfromdp(13611584);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_70_m_aximm_AWQOS = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_70->m_aximm_AWQOS.bind(*p_70_m_aximm_AWQOS);
        p_70_m_aximm_AWQOS->set_sv_netview_offsetfromdp(13611640);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_70_m_aximm_AWUSER = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_70->m_aximm_AWUSER.bind(*p_70_m_aximm_AWUSER);
        p_70_m_aximm_AWUSER->set_sv_netview_offsetfromdp(13611696);
        xsim_sc_channel<0, bool > *p_70_m_aximm_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_70->m_aximm_WVALID.bind(*p_70_m_aximm_WVALID);
        p_70_m_aximm_WVALID->set_sv_netview_offsetfromdp(13611752);
        xsim_sc_channel<0, bool > *p_70_m_aximm_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_70->m_aximm_WREADY.bind(*p_70_m_aximm_WREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_70_m_aximm_WREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_70_m_aximm_WDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_70->m_aximm_WDATA.bind(*p_70_m_aximm_WDATA);
        p_70_m_aximm_WDATA->set_sv_netview_offsetfromdp(13611864);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_70_m_aximm_WSTRB = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_70->m_aximm_WSTRB.bind(*p_70_m_aximm_WSTRB);
        p_70_m_aximm_WSTRB->set_sv_netview_offsetfromdp(13611920);
        xsim_sc_channel<0, bool > *p_70_m_aximm_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_70->m_aximm_WLAST.bind(*p_70_m_aximm_WLAST);
        p_70_m_aximm_WLAST->set_sv_netview_offsetfromdp(13611976);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_70_m_aximm_WUSER = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_70->m_aximm_WUSER.bind(*p_70_m_aximm_WUSER);
        p_70_m_aximm_WUSER->set_sv_netview_offsetfromdp(13612032);
        xsim_sc_channel<0, bool > *p_70_m_aximm_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_70->m_aximm_ARVALID.bind(*p_70_m_aximm_ARVALID);
        p_70_m_aximm_ARVALID->set_sv_netview_offsetfromdp(13612088);
        xsim_sc_channel<0, bool > *p_70_m_aximm_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_70->m_aximm_ARREADY.bind(*p_70_m_aximm_ARREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_70_m_aximm_ARREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_70_m_aximm_ARADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_70->m_aximm_ARADDR.bind(*p_70_m_aximm_ARADDR);
        p_70_m_aximm_ARADDR->set_sv_netview_offsetfromdp(13612200);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_70_m_aximm_ARID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_70->m_aximm_ARID.bind(*p_70_m_aximm_ARID);
        p_70_m_aximm_ARID->set_sv_netview_offsetfromdp(13612256);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_70_m_aximm_ARLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_70->m_aximm_ARLEN.bind(*p_70_m_aximm_ARLEN);
        p_70_m_aximm_ARLEN->set_sv_netview_offsetfromdp(13612312);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_70_m_aximm_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_70->m_aximm_ARSIZE.bind(*p_70_m_aximm_ARSIZE);
        p_70_m_aximm_ARSIZE->set_sv_netview_offsetfromdp(13612368);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_70_m_aximm_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_70->m_aximm_ARBURST.bind(*p_70_m_aximm_ARBURST);
        p_70_m_aximm_ARBURST->set_sv_netview_offsetfromdp(13612424);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_70_m_aximm_ARLOCK = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_70->m_aximm_ARLOCK.bind(*p_70_m_aximm_ARLOCK);
        p_70_m_aximm_ARLOCK->set_sv_netview_offsetfromdp(13612480);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_70_m_aximm_ARCACHE = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_70->m_aximm_ARCACHE.bind(*p_70_m_aximm_ARCACHE);
        p_70_m_aximm_ARCACHE->set_sv_netview_offsetfromdp(13612536);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_70_m_aximm_ARPROT = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_70->m_aximm_ARPROT.bind(*p_70_m_aximm_ARPROT);
        p_70_m_aximm_ARPROT->set_sv_netview_offsetfromdp(13612592);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_70_m_aximm_ARREGION = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_70->m_aximm_ARREGION.bind(*p_70_m_aximm_ARREGION);
        p_70_m_aximm_ARREGION->set_sv_netview_offsetfromdp(13612648);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_70_m_aximm_ARQOS = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_70->m_aximm_ARQOS.bind(*p_70_m_aximm_ARQOS);
        p_70_m_aximm_ARQOS->set_sv_netview_offsetfromdp(13612704);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_70_m_aximm_ARUSER = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_70->m_aximm_ARUSER.bind(*p_70_m_aximm_ARUSER);
        p_70_m_aximm_ARUSER->set_sv_netview_offsetfromdp(13612760);
        xsim_sc_channel<0, bool > *p_70_m_aximm_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_70->m_aximm_RVALID.bind(*p_70_m_aximm_RVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_70_m_aximm_RVALID);
        xsim_sc_channel<0, bool > *p_70_m_aximm_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_70->m_aximm_RREADY.bind(*p_70_m_aximm_RREADY);
        p_70_m_aximm_RREADY->set_sv_netview_offsetfromdp(13612872);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_70_m_aximm_RDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_70->m_aximm_RDATA.bind(*p_70_m_aximm_RDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_70_m_aximm_RDATA);
        xsim_sc_channel<0, bool > *p_70_m_aximm_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_70->m_aximm_RLAST.bind(*p_70_m_aximm_RLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_70_m_aximm_RLAST);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_70_m_aximm_RID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_70->m_aximm_RID.bind(*p_70_m_aximm_RID);
        (*_glb_hdl_sc_channel_map).push_back(p_70_m_aximm_RID);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_70_m_aximm_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_70->m_aximm_RRESP.bind(*p_70_m_aximm_RRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_70_m_aximm_RRESP);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_70_m_aximm_RUSER = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_70->m_aximm_RUSER.bind(*p_70_m_aximm_RUSER);
        (*_glb_hdl_sc_channel_map).push_back(p_70_m_aximm_RUSER);
        xsim_sc_channel<0, bool > *p_70_m_aximm_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_70->m_aximm_BVALID.bind(*p_70_m_aximm_BVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_70_m_aximm_BVALID);
        xsim_sc_channel<0, bool > *p_70_m_aximm_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_70->m_aximm_BREADY.bind(*p_70_m_aximm_BREADY);
        p_70_m_aximm_BREADY->set_sv_netview_offsetfromdp(13613264);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_70_m_aximm_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_70->m_aximm_BRESP.bind(*p_70_m_aximm_BRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_70_m_aximm_BRESP);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_70_m_aximm_BID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_70->m_aximm_BID.bind(*p_70_m_aximm_BID);
        (*_glb_hdl_sc_channel_map).push_back(p_70_m_aximm_BID);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_70_m_aximm_BUSER = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_70->m_aximm_BUSER.bind(*p_70_m_aximm_BUSER);
        (*_glb_hdl_sc_channel_map).push_back(p_70_m_aximm_BUSER);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_70_s_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_70->s_axi_awaddr.bind(*p_70_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_70_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_70_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_70->s_axi_awlen.bind(*p_70_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_70_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_70_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_70->s_axi_awsize.bind(*p_70_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_70_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_70_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_70->s_axi_awburst.bind(*p_70_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_70_s_axi_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_70_s_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_70->s_axi_awlock.bind(*p_70_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_70_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_70_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_70->s_axi_awcache.bind(*p_70_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_70_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_70_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_70->s_axi_awprot.bind(*p_70_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_70_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_70_s_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_70->s_axi_awregion.bind(*p_70_s_axi_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_70_s_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_70_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_70->s_axi_awqos.bind(*p_70_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_70_s_axi_awqos);
        xsim_sc_channel<0, bool > *p_70_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_70->s_axi_awvalid.bind(*p_70_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_70_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_70_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_70->s_axi_awready.bind(*p_70_s_axi_awready);
        p_70_s_axi_awready->set_sv_netview_offsetfromdp(13614048);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_70_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_70->s_axi_wdata.bind(*p_70_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_70_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_70_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_70->s_axi_wstrb.bind(*p_70_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_70_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_70_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_70->s_axi_wlast.bind(*p_70_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_70_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_70_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_70->s_axi_wvalid.bind(*p_70_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_70_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_70_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_70->s_axi_wready.bind(*p_70_s_axi_wready);
        p_70_s_axi_wready->set_sv_netview_offsetfromdp(13614328);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_70_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_70->s_axi_bresp.bind(*p_70_s_axi_bresp);
        p_70_s_axi_bresp->set_sv_netview_offsetfromdp(13614384);
        xsim_sc_channel<0, bool > *p_70_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_70->s_axi_bvalid.bind(*p_70_s_axi_bvalid);
        p_70_s_axi_bvalid->set_sv_netview_offsetfromdp(13614440);
        xsim_sc_channel<0, bool > *p_70_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_70->s_axi_bready.bind(*p_70_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_70_s_axi_bready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_70_s_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_70->s_axi_araddr.bind(*p_70_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_70_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_70_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_70->s_axi_arlen.bind(*p_70_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_70_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_70_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_70->s_axi_arsize.bind(*p_70_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_70_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_70_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_70->s_axi_arburst.bind(*p_70_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_70_s_axi_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_70_s_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_70->s_axi_arlock.bind(*p_70_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_70_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_70_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_70->s_axi_arcache.bind(*p_70_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_70_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_70_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_70->s_axi_arprot.bind(*p_70_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_70_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_70_s_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_70->s_axi_arregion.bind(*p_70_s_axi_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_70_s_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_70_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_70->s_axi_arqos.bind(*p_70_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_70_s_axi_arqos);
        xsim_sc_channel<0, bool > *p_70_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_70->s_axi_arvalid.bind(*p_70_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_70_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_70_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_70->s_axi_arready.bind(*p_70_s_axi_arready);
        p_70_s_axi_arready->set_sv_netview_offsetfromdp(13615112);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_70_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_70->s_axi_rdata.bind(*p_70_s_axi_rdata);
        p_70_s_axi_rdata->set_sv_netview_offsetfromdp(13615168);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_70_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_70->s_axi_rresp.bind(*p_70_s_axi_rresp);
        p_70_s_axi_rresp->set_sv_netview_offsetfromdp(13615224);
        xsim_sc_channel<0, bool > *p_70_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_70->s_axi_rlast.bind(*p_70_s_axi_rlast);
        p_70_s_axi_rlast->set_sv_netview_offsetfromdp(13615280);
        xsim_sc_channel<0, bool > *p_70_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_70->s_axi_rvalid.bind(*p_70_s_axi_rvalid);
        p_70_s_axi_rvalid->set_sv_netview_offsetfromdp(13615336);
        xsim_sc_channel<0, bool > *p_70_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_70->s_axi_rready.bind(*p_70_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_70_s_axi_rready);
        xsim_sc_channel<16, sc_dt::sc_bv<16> > *p_70_usr_irq_req = new xsim_sc_channel<16, sc_dt::sc_bv<16> >();
        sc_inst_70->usr_irq_req.bind(*p_70_usr_irq_req);
        (*_glb_hdl_sc_channel_map).push_back(p_70_usr_irq_req);
        xsim_sc_channel<16, sc_dt::sc_bv<16> > *p_70_usr_irq_ack = new xsim_sc_channel<16, sc_dt::sc_bv<16> >();
        sc_inst_70->usr_irq_ack.bind(*p_70_usr_irq_ack);
        p_70_usr_irq_ack->set_sv_netview_offsetfromdp(13615504);
        sc_inst_71 = new pfm_top_smartconnect_0_0(".pfm_top_wrapper.pfm_top_i.static_region.smartconnect_0");
        sc_inst_71->xsim_set_dbg_index(265);
        xsim_sc_channel<0, bool > *p_71_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_71->aclk.bind(*p_71_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_71_aclk);
        xsim_sc_channel<0, bool > *p_71_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_71->aresetn.bind(*p_71_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_71_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_71_S00_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_71->S00_AXI_awid.bind(*p_71_S00_AXI_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_71_S00_AXI_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_71_S00_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_71->S00_AXI_awaddr.bind(*p_71_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_71_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_71_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_71->S00_AXI_awlen.bind(*p_71_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_71_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_71_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_71->S00_AXI_awsize.bind(*p_71_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_71_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_71_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_71->S00_AXI_awburst.bind(*p_71_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_71_S00_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_71_S00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_71->S00_AXI_awlock.bind(*p_71_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_71_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_71_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_71->S00_AXI_awcache.bind(*p_71_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_71_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_71_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_71->S00_AXI_awprot.bind(*p_71_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_71_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_71_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_71->S00_AXI_awqos.bind(*p_71_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_71_S00_AXI_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_71_S00_AXI_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_71->S00_AXI_awuser.bind(*p_71_S00_AXI_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_71_S00_AXI_awuser);
        xsim_sc_channel<0, bool > *p_71_S00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_71->S00_AXI_awvalid.bind(*p_71_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_71_S00_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_71_S00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_71->S00_AXI_awready.bind(*p_71_S00_AXI_awready);
        p_71_S00_AXI_awready->set_sv_netview_offsetfromdp(13616336);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_71_S00_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_71->S00_AXI_wdata.bind(*p_71_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_71_S00_AXI_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_71_S00_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_71->S00_AXI_wstrb.bind(*p_71_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_71_S00_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_71_S00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_71->S00_AXI_wlast.bind(*p_71_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_71_S00_AXI_wlast);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_71_S00_AXI_wuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_71->S00_AXI_wuser.bind(*p_71_S00_AXI_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_71_S00_AXI_wuser);
        xsim_sc_channel<0, bool > *p_71_S00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_71->S00_AXI_wvalid.bind(*p_71_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_71_S00_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_71_S00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_71->S00_AXI_wready.bind(*p_71_S00_AXI_wready);
        p_71_S00_AXI_wready->set_sv_netview_offsetfromdp(13616672);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_71_S00_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_71->S00_AXI_bid.bind(*p_71_S00_AXI_bid);
        p_71_S00_AXI_bid->set_sv_netview_offsetfromdp(13616728);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_71_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_71->S00_AXI_bresp.bind(*p_71_S00_AXI_bresp);
        p_71_S00_AXI_bresp->set_sv_netview_offsetfromdp(13616784);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_71_S00_AXI_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_71->S00_AXI_buser.bind(*p_71_S00_AXI_buser);
        p_71_S00_AXI_buser->set_sv_netview_offsetfromdp(13616840);
        xsim_sc_channel<0, bool > *p_71_S00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_71->S00_AXI_bvalid.bind(*p_71_S00_AXI_bvalid);
        p_71_S00_AXI_bvalid->set_sv_netview_offsetfromdp(13616896);
        xsim_sc_channel<0, bool > *p_71_S00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_71->S00_AXI_bready.bind(*p_71_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_71_S00_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_71_S00_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_71->S00_AXI_arid.bind(*p_71_S00_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_71_S00_AXI_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_71_S00_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_71->S00_AXI_araddr.bind(*p_71_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_71_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_71_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_71->S00_AXI_arlen.bind(*p_71_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_71_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_71_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_71->S00_AXI_arsize.bind(*p_71_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_71_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_71_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_71->S00_AXI_arburst.bind(*p_71_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_71_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_71_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_71->S00_AXI_arlock.bind(*p_71_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_71_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_71_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_71->S00_AXI_arcache.bind(*p_71_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_71_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_71_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_71->S00_AXI_arprot.bind(*p_71_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_71_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_71_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_71->S00_AXI_arqos.bind(*p_71_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_71_S00_AXI_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_71_S00_AXI_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_71->S00_AXI_aruser.bind(*p_71_S00_AXI_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_71_S00_AXI_aruser);
        xsim_sc_channel<0, bool > *p_71_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_71->S00_AXI_arvalid.bind(*p_71_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_71_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_71_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_71->S00_AXI_arready.bind(*p_71_S00_AXI_arready);
        p_71_S00_AXI_arready->set_sv_netview_offsetfromdp(13617624);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_71_S00_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_71->S00_AXI_rid.bind(*p_71_S00_AXI_rid);
        p_71_S00_AXI_rid->set_sv_netview_offsetfromdp(13617680);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_71_S00_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_71->S00_AXI_rdata.bind(*p_71_S00_AXI_rdata);
        p_71_S00_AXI_rdata->set_sv_netview_offsetfromdp(13617736);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_71_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_71->S00_AXI_rresp.bind(*p_71_S00_AXI_rresp);
        p_71_S00_AXI_rresp->set_sv_netview_offsetfromdp(13617792);
        xsim_sc_channel<0, bool > *p_71_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_71->S00_AXI_rlast.bind(*p_71_S00_AXI_rlast);
        p_71_S00_AXI_rlast->set_sv_netview_offsetfromdp(13617848);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_71_S00_AXI_ruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_71->S00_AXI_ruser.bind(*p_71_S00_AXI_ruser);
        p_71_S00_AXI_ruser->set_sv_netview_offsetfromdp(13617904);
        xsim_sc_channel<0, bool > *p_71_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_71->S00_AXI_rvalid.bind(*p_71_S00_AXI_rvalid);
        p_71_S00_AXI_rvalid->set_sv_netview_offsetfromdp(13617960);
        xsim_sc_channel<0, bool > *p_71_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_71->S00_AXI_rready.bind(*p_71_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_71_S00_AXI_rready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_71_M00_AXI_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_71->M00_AXI_awaddr.bind(*p_71_M00_AXI_awaddr);
        p_71_M00_AXI_awaddr->set_sv_netview_offsetfromdp(13618072);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_71_M00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_71->M00_AXI_awlen.bind(*p_71_M00_AXI_awlen);
        p_71_M00_AXI_awlen->set_sv_netview_offsetfromdp(13618128);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_71_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_71->M00_AXI_awsize.bind(*p_71_M00_AXI_awsize);
        p_71_M00_AXI_awsize->set_sv_netview_offsetfromdp(13618184);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_71_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_71->M00_AXI_awburst.bind(*p_71_M00_AXI_awburst);
        p_71_M00_AXI_awburst->set_sv_netview_offsetfromdp(13618240);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_71_M00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_71->M00_AXI_awlock.bind(*p_71_M00_AXI_awlock);
        p_71_M00_AXI_awlock->set_sv_netview_offsetfromdp(13618296);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_71_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_71->M00_AXI_awcache.bind(*p_71_M00_AXI_awcache);
        p_71_M00_AXI_awcache->set_sv_netview_offsetfromdp(13618352);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_71_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_71->M00_AXI_awprot.bind(*p_71_M00_AXI_awprot);
        p_71_M00_AXI_awprot->set_sv_netview_offsetfromdp(13618408);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_71_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_71->M00_AXI_awqos.bind(*p_71_M00_AXI_awqos);
        p_71_M00_AXI_awqos->set_sv_netview_offsetfromdp(13618464);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_71_M00_AXI_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_71->M00_AXI_awuser.bind(*p_71_M00_AXI_awuser);
        p_71_M00_AXI_awuser->set_sv_netview_offsetfromdp(13618520);
        xsim_sc_channel<0, bool > *p_71_M00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_71->M00_AXI_awvalid.bind(*p_71_M00_AXI_awvalid);
        p_71_M00_AXI_awvalid->set_sv_netview_offsetfromdp(13618576);
        xsim_sc_channel<0, bool > *p_71_M00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_71->M00_AXI_awready.bind(*p_71_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_71_M00_AXI_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_71_M00_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_71->M00_AXI_wdata.bind(*p_71_M00_AXI_wdata);
        p_71_M00_AXI_wdata->set_sv_netview_offsetfromdp(13618688);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_71_M00_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_71->M00_AXI_wstrb.bind(*p_71_M00_AXI_wstrb);
        p_71_M00_AXI_wstrb->set_sv_netview_offsetfromdp(13618744);
        xsim_sc_channel<0, bool > *p_71_M00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_71->M00_AXI_wlast.bind(*p_71_M00_AXI_wlast);
        p_71_M00_AXI_wlast->set_sv_netview_offsetfromdp(13618800);
        xsim_sc_channel<0, bool > *p_71_M00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_71->M00_AXI_wvalid.bind(*p_71_M00_AXI_wvalid);
        p_71_M00_AXI_wvalid->set_sv_netview_offsetfromdp(13618856);
        xsim_sc_channel<0, bool > *p_71_M00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_71->M00_AXI_wready.bind(*p_71_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_71_M00_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_71_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_71->M00_AXI_bresp.bind(*p_71_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_71_M00_AXI_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_71_M00_AXI_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_71->M00_AXI_buser.bind(*p_71_M00_AXI_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_71_M00_AXI_buser);
        xsim_sc_channel<0, bool > *p_71_M00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_71->M00_AXI_bvalid.bind(*p_71_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_71_M00_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_71_M00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_71->M00_AXI_bready.bind(*p_71_M00_AXI_bready);
        p_71_M00_AXI_bready->set_sv_netview_offsetfromdp(13619136);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_71_M00_AXI_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_71->M00_AXI_araddr.bind(*p_71_M00_AXI_araddr);
        p_71_M00_AXI_araddr->set_sv_netview_offsetfromdp(13619192);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_71_M00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_71->M00_AXI_arlen.bind(*p_71_M00_AXI_arlen);
        p_71_M00_AXI_arlen->set_sv_netview_offsetfromdp(13619248);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_71_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_71->M00_AXI_arsize.bind(*p_71_M00_AXI_arsize);
        p_71_M00_AXI_arsize->set_sv_netview_offsetfromdp(13619304);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_71_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_71->M00_AXI_arburst.bind(*p_71_M00_AXI_arburst);
        p_71_M00_AXI_arburst->set_sv_netview_offsetfromdp(13619360);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_71_M00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_71->M00_AXI_arlock.bind(*p_71_M00_AXI_arlock);
        p_71_M00_AXI_arlock->set_sv_netview_offsetfromdp(13619416);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_71_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_71->M00_AXI_arcache.bind(*p_71_M00_AXI_arcache);
        p_71_M00_AXI_arcache->set_sv_netview_offsetfromdp(13619472);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_71_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_71->M00_AXI_arprot.bind(*p_71_M00_AXI_arprot);
        p_71_M00_AXI_arprot->set_sv_netview_offsetfromdp(13619528);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_71_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_71->M00_AXI_arqos.bind(*p_71_M00_AXI_arqos);
        p_71_M00_AXI_arqos->set_sv_netview_offsetfromdp(13619584);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_71_M00_AXI_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_71->M00_AXI_aruser.bind(*p_71_M00_AXI_aruser);
        p_71_M00_AXI_aruser->set_sv_netview_offsetfromdp(13619640);
        xsim_sc_channel<0, bool > *p_71_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_71->M00_AXI_arvalid.bind(*p_71_M00_AXI_arvalid);
        p_71_M00_AXI_arvalid->set_sv_netview_offsetfromdp(13619696);
        xsim_sc_channel<0, bool > *p_71_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_71->M00_AXI_arready.bind(*p_71_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_71_M00_AXI_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_71_M00_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_71->M00_AXI_rdata.bind(*p_71_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_71_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_71_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_71->M00_AXI_rresp.bind(*p_71_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_71_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_71_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_71->M00_AXI_rlast.bind(*p_71_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_71_M00_AXI_rlast);
        xsim_sc_channel<0, bool > *p_71_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_71->M00_AXI_rvalid.bind(*p_71_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_71_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_71_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_71->M00_AXI_rready.bind(*p_71_M00_AXI_rready);
        p_71_M00_AXI_rready->set_sv_netview_offsetfromdp(13620032);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_71_M01_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_71->M01_AXI_awaddr.bind(*p_71_M01_AXI_awaddr);
        p_71_M01_AXI_awaddr->set_sv_netview_offsetfromdp(13620088);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_71_M01_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_71->M01_AXI_awlen.bind(*p_71_M01_AXI_awlen);
        p_71_M01_AXI_awlen->set_sv_netview_offsetfromdp(13620144);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_71_M01_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_71->M01_AXI_awsize.bind(*p_71_M01_AXI_awsize);
        p_71_M01_AXI_awsize->set_sv_netview_offsetfromdp(13620200);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_71_M01_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_71->M01_AXI_awburst.bind(*p_71_M01_AXI_awburst);
        p_71_M01_AXI_awburst->set_sv_netview_offsetfromdp(13620256);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_71_M01_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_71->M01_AXI_awlock.bind(*p_71_M01_AXI_awlock);
        p_71_M01_AXI_awlock->set_sv_netview_offsetfromdp(13620312);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_71_M01_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_71->M01_AXI_awcache.bind(*p_71_M01_AXI_awcache);
        p_71_M01_AXI_awcache->set_sv_netview_offsetfromdp(13620368);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_71_M01_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_71->M01_AXI_awprot.bind(*p_71_M01_AXI_awprot);
        p_71_M01_AXI_awprot->set_sv_netview_offsetfromdp(13620424);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_71_M01_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_71->M01_AXI_awqos.bind(*p_71_M01_AXI_awqos);
        p_71_M01_AXI_awqos->set_sv_netview_offsetfromdp(13620480);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_71_M01_AXI_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_71->M01_AXI_awuser.bind(*p_71_M01_AXI_awuser);
        p_71_M01_AXI_awuser->set_sv_netview_offsetfromdp(13620536);
        xsim_sc_channel<0, bool > *p_71_M01_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_71->M01_AXI_awvalid.bind(*p_71_M01_AXI_awvalid);
        p_71_M01_AXI_awvalid->set_sv_netview_offsetfromdp(13620592);
        xsim_sc_channel<0, bool > *p_71_M01_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_71->M01_AXI_awready.bind(*p_71_M01_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_71_M01_AXI_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_71_M01_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_71->M01_AXI_wdata.bind(*p_71_M01_AXI_wdata);
        p_71_M01_AXI_wdata->set_sv_netview_offsetfromdp(13620704);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_71_M01_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_71->M01_AXI_wstrb.bind(*p_71_M01_AXI_wstrb);
        p_71_M01_AXI_wstrb->set_sv_netview_offsetfromdp(13620760);
        xsim_sc_channel<0, bool > *p_71_M01_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_71->M01_AXI_wlast.bind(*p_71_M01_AXI_wlast);
        p_71_M01_AXI_wlast->set_sv_netview_offsetfromdp(13620816);
        xsim_sc_channel<0, bool > *p_71_M01_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_71->M01_AXI_wvalid.bind(*p_71_M01_AXI_wvalid);
        p_71_M01_AXI_wvalid->set_sv_netview_offsetfromdp(13620872);
        xsim_sc_channel<0, bool > *p_71_M01_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_71->M01_AXI_wready.bind(*p_71_M01_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_71_M01_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_71_M01_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_71->M01_AXI_bresp.bind(*p_71_M01_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_71_M01_AXI_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_71_M01_AXI_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_71->M01_AXI_buser.bind(*p_71_M01_AXI_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_71_M01_AXI_buser);
        xsim_sc_channel<0, bool > *p_71_M01_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_71->M01_AXI_bvalid.bind(*p_71_M01_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_71_M01_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_71_M01_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_71->M01_AXI_bready.bind(*p_71_M01_AXI_bready);
        p_71_M01_AXI_bready->set_sv_netview_offsetfromdp(13621152);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_71_M01_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_71->M01_AXI_araddr.bind(*p_71_M01_AXI_araddr);
        p_71_M01_AXI_araddr->set_sv_netview_offsetfromdp(13621208);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_71_M01_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_71->M01_AXI_arlen.bind(*p_71_M01_AXI_arlen);
        p_71_M01_AXI_arlen->set_sv_netview_offsetfromdp(13621264);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_71_M01_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_71->M01_AXI_arsize.bind(*p_71_M01_AXI_arsize);
        p_71_M01_AXI_arsize->set_sv_netview_offsetfromdp(13621320);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_71_M01_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_71->M01_AXI_arburst.bind(*p_71_M01_AXI_arburst);
        p_71_M01_AXI_arburst->set_sv_netview_offsetfromdp(13621376);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_71_M01_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_71->M01_AXI_arlock.bind(*p_71_M01_AXI_arlock);
        p_71_M01_AXI_arlock->set_sv_netview_offsetfromdp(13621432);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_71_M01_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_71->M01_AXI_arcache.bind(*p_71_M01_AXI_arcache);
        p_71_M01_AXI_arcache->set_sv_netview_offsetfromdp(13621488);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_71_M01_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_71->M01_AXI_arprot.bind(*p_71_M01_AXI_arprot);
        p_71_M01_AXI_arprot->set_sv_netview_offsetfromdp(13621544);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_71_M01_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_71->M01_AXI_arqos.bind(*p_71_M01_AXI_arqos);
        p_71_M01_AXI_arqos->set_sv_netview_offsetfromdp(13621600);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_71_M01_AXI_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_71->M01_AXI_aruser.bind(*p_71_M01_AXI_aruser);
        p_71_M01_AXI_aruser->set_sv_netview_offsetfromdp(13621656);
        xsim_sc_channel<0, bool > *p_71_M01_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_71->M01_AXI_arvalid.bind(*p_71_M01_AXI_arvalid);
        p_71_M01_AXI_arvalid->set_sv_netview_offsetfromdp(13621712);
        xsim_sc_channel<0, bool > *p_71_M01_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_71->M01_AXI_arready.bind(*p_71_M01_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_71_M01_AXI_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_71_M01_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_71->M01_AXI_rdata.bind(*p_71_M01_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_71_M01_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_71_M01_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_71->M01_AXI_rresp.bind(*p_71_M01_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_71_M01_AXI_rresp);
        xsim_sc_channel<0, bool > *p_71_M01_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_71->M01_AXI_rlast.bind(*p_71_M01_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_71_M01_AXI_rlast);
        xsim_sc_channel<0, bool > *p_71_M01_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_71->M01_AXI_rvalid.bind(*p_71_M01_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_71_M01_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_71_M01_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_71->M01_AXI_rready.bind(*p_71_M01_AXI_rready);
        p_71_M01_AXI_rready->set_sv_netview_offsetfromdp(13622048);
    }


extern "C"
    void implicit_HDL_SCcleanup()
    {
        delete sc_inst_1;
        delete sc_inst_2;
        delete sc_inst_3;
        delete sc_inst_4;
        delete sc_inst_5;
        delete sc_inst_6;
        delete sc_inst_7;
        delete sc_inst_8;
        delete sc_inst_9;
        delete sc_inst_10;
        delete sc_inst_11;
        delete sc_inst_12;
        delete sc_inst_13;
        delete sc_inst_14;
        delete sc_inst_15;
        delete sc_inst_16;
        delete sc_inst_17;
        delete sc_inst_18;
        delete sc_inst_19;
        delete sc_inst_20;
        delete sc_inst_21;
        delete sc_inst_22;
        delete sc_inst_23;
        delete sc_inst_24;
        delete sc_inst_25;
        delete sc_inst_26;
        delete sc_inst_27;
        delete sc_inst_28;
        delete sc_inst_29;
        delete sc_inst_30;
        delete sc_inst_31;
        delete sc_inst_32;
        delete sc_inst_33;
        delete sc_inst_34;
        delete sc_inst_35;
        delete sc_inst_36;
        delete sc_inst_37;
        delete sc_inst_38;
        delete sc_inst_39;
        delete sc_inst_40;
        delete sc_inst_41;
        delete sc_inst_42;
        delete sc_inst_43;
        delete sc_inst_44;
        delete sc_inst_45;
        delete sc_inst_46;
        delete sc_inst_47;
        delete sc_inst_48;
        delete sc_inst_49;
        delete sc_inst_50;
        delete sc_inst_51;
        delete sc_inst_52;
        delete sc_inst_53;
        delete sc_inst_54;
        delete sc_inst_55;
        delete sc_inst_56;
        delete sc_inst_57;
        delete sc_inst_58;
        delete sc_inst_59;
        delete sc_inst_60;
        delete sc_inst_61;
        delete sc_inst_62;
        delete sc_inst_63;
        delete sc_inst_64;
        delete sc_inst_65;
        delete sc_inst_66;
        delete sc_inst_67;
        delete sc_inst_68;
        delete sc_inst_69;
        delete sc_inst_70;
        delete sc_inst_71;
    }
