#pragma GCC diagnostic ignored "-Wdeprecated-declarations" 
#include "xsim.dir/pfm_top_wrapper_behav/obj/sysc_interface.h"
#include <map>
#include <list>


extern "C" { std::vector<void*> *_glb_hdl_sc_channel_map; } 



extern "C"
    void call_HDL_SC_WRITE_bv_1(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<1, sc_dt::sc_bv<1> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_2(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<2, sc_dt::sc_bv<2> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_3(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<3, sc_dt::sc_bv<3> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_4(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<4, sc_dt::sc_bv<4> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_6(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<6, sc_dt::sc_bv<6> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_7(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<7, sc_dt::sc_bv<7> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_8(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<8, sc_dt::sc_bv<8> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_9(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<9, sc_dt::sc_bv<9> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_12(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<12, sc_dt::sc_bv<12> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_14(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<14, sc_dt::sc_bv<14> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_16(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<16, sc_dt::sc_bv<16> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_17(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<17, sc_dt::sc_bv<17> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_18(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<18, sc_dt::sc_bv<18> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_22(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<22, sc_dt::sc_bv<22> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_24(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<24, sc_dt::sc_bv<24> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_31(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<31, sc_dt::sc_bv<31> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_32(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<32, sc_dt::sc_bv<32> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_33(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<33, sc_dt::sc_bv<33> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_34(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<34, sc_dt::sc_bv<34> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_37(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<37, sc_dt::sc_bv<37> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_38(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<38, sc_dt::sc_bv<38> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_62(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<62, sc_dt::sc_bv<62> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_64(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<64, sc_dt::sc_bv<64> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_72(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<72, sc_dt::sc_bv<72> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_96(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<96, sc_dt::sc_bv<96> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_114(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<114, sc_dt::sc_bv<114> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_128(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<128, sc_dt::sc_bv<128> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_192(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<192, sc_dt::sc_bv<192> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_256(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<256, sc_dt::sc_bv<256> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_384(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<384, sc_dt::sc_bv<384> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_512(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<512, sc_dt::sc_bv<512> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_int(unsigned int sc_net_index, char* pval)
    {
          int val = *((int*)(pval));
          ((xsim_sc_channel<0, int>*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(val);
    } 



extern "C"
    void call_HDL_SC_WRITE_bit(unsigned int sc_net_index, char* pval)
    {
            sc_dt::sc_bit val  =  (sc_dt::sc_bit)((*((int*)(pval)) & 0x1));
          ((xsim_sc_channel<0, sc_dt::sc_bit>*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(val);
    } 



extern "C"
    void call_HDL_SC_WRITE_logic(unsigned int sc_net_index, char* pval)
    {
          sc_dt::sc_logic val  =  (sc_dt::sc_logic_value_t) (((*((int*)(pval)+1) & 0x1) << 1) | (*((int*)(pval)) & 0x1));
          ((xsim_sc_channel<0, sc_dt::sc_logic>*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(val);
    } 



extern "C"
    void call_HDL_SC_WRITE_bool(unsigned int sc_net_index, char* pval)
    {
          bool val = *((bool*)(pval));
          ((xsim_sc_channel<0, bool>*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(val);
    } 



extern "C"
    void implicit_HDL_SCinstantiate()
    {
        _glb_hdl_sc_channel_map = new std::vector<void*> ();
        sc_inst_1 = new pfm_dynamic_auto_cc_1(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.m00_couplers.auto_cc");
        sc_inst_1->xsim_set_dbg_index(1923);
        xsim_sc_channel<0, bool > *p_1_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_aclk.bind(*p_1_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_1_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_aresetn.bind(*p_1_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->s_axi_awaddr.bind(*p_1_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_1_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_1->s_axi_awprot.bind(*p_1_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_1_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_awvalid.bind(*p_1_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_1_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_awready.bind(*p_1_s_axi_awready);
        p_1_s_axi_awready->set_sv_netview_offsetfromdp(8317688);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_1_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_1->s_axi_wdata.bind(*p_1_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_1_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_1->s_axi_wstrb.bind(*p_1_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_1_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_wvalid.bind(*p_1_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_1_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_wready.bind(*p_1_s_axi_wready);
        p_1_s_axi_wready->set_sv_netview_offsetfromdp(8317912);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->s_axi_bresp.bind(*p_1_s_axi_bresp);
        p_1_s_axi_bresp->set_sv_netview_offsetfromdp(8317968);
        xsim_sc_channel<0, bool > *p_1_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_bvalid.bind(*p_1_s_axi_bvalid);
        p_1_s_axi_bvalid->set_sv_netview_offsetfromdp(8318024);
        xsim_sc_channel<0, bool > *p_1_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_bready.bind(*p_1_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_bready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->s_axi_araddr.bind(*p_1_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_1_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_1->s_axi_arprot.bind(*p_1_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_1_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_arvalid.bind(*p_1_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_1_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_arready.bind(*p_1_s_axi_arready);
        p_1_s_axi_arready->set_sv_netview_offsetfromdp(8318304);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_1_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_1->s_axi_rdata.bind(*p_1_s_axi_rdata);
        p_1_s_axi_rdata->set_sv_netview_offsetfromdp(8318360);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->s_axi_rresp.bind(*p_1_s_axi_rresp);
        p_1_s_axi_rresp->set_sv_netview_offsetfromdp(8318416);
        xsim_sc_channel<0, bool > *p_1_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_rvalid.bind(*p_1_s_axi_rvalid);
        p_1_s_axi_rvalid->set_sv_netview_offsetfromdp(8318472);
        xsim_sc_channel<0, bool > *p_1_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_rready.bind(*p_1_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_rready);
        xsim_sc_channel<0, bool > *p_1_m_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_aclk.bind(*p_1_m_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_1_m_axi_aclk);
        xsim_sc_channel<0, bool > *p_1_m_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_aresetn.bind(*p_1_m_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_1_m_axi_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_m_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->m_axi_awaddr.bind(*p_1_m_axi_awaddr);
        p_1_m_axi_awaddr->set_sv_netview_offsetfromdp(8318696);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_1_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_1->m_axi_awprot.bind(*p_1_m_axi_awprot);
        p_1_m_axi_awprot->set_sv_netview_offsetfromdp(8318752);
        xsim_sc_channel<0, bool > *p_1_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_awvalid.bind(*p_1_m_axi_awvalid);
        p_1_m_axi_awvalid->set_sv_netview_offsetfromdp(8318808);
        xsim_sc_channel<0, bool > *p_1_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_awready.bind(*p_1_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_1_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_1_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_1->m_axi_wdata.bind(*p_1_m_axi_wdata);
        p_1_m_axi_wdata->set_sv_netview_offsetfromdp(8318920);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_1_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_1->m_axi_wstrb.bind(*p_1_m_axi_wstrb);
        p_1_m_axi_wstrb->set_sv_netview_offsetfromdp(8318976);
        xsim_sc_channel<0, bool > *p_1_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_wvalid.bind(*p_1_m_axi_wvalid);
        p_1_m_axi_wvalid->set_sv_netview_offsetfromdp(8319032);
        xsim_sc_channel<0, bool > *p_1_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_wready.bind(*p_1_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_1_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->m_axi_bresp.bind(*p_1_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_1_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_1_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_bvalid.bind(*p_1_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_1_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_1_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_bready.bind(*p_1_m_axi_bready);
        p_1_m_axi_bready->set_sv_netview_offsetfromdp(8319256);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_m_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->m_axi_araddr.bind(*p_1_m_axi_araddr);
        p_1_m_axi_araddr->set_sv_netview_offsetfromdp(8319312);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_1_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_1->m_axi_arprot.bind(*p_1_m_axi_arprot);
        p_1_m_axi_arprot->set_sv_netview_offsetfromdp(8319368);
        xsim_sc_channel<0, bool > *p_1_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_arvalid.bind(*p_1_m_axi_arvalid);
        p_1_m_axi_arvalid->set_sv_netview_offsetfromdp(8319424);
        xsim_sc_channel<0, bool > *p_1_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_arready.bind(*p_1_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_1_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_1_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_1->m_axi_rdata.bind(*p_1_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_1_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->m_axi_rresp.bind(*p_1_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_1_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_1_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_rvalid.bind(*p_1_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_1_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_1_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_rready.bind(*p_1_m_axi_rready);
        p_1_m_axi_rready->set_sv_netview_offsetfromdp(8319704);
        sc_inst_2 = new pfm_dynamic_m00_regslice_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.m00_couplers.m00_regslice");
        sc_inst_2->xsim_set_dbg_index(1924);
        xsim_sc_channel<0, bool > *p_2_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_2->aclk.bind(*p_2_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_2_aclk);
        xsim_sc_channel<0, bool > *p_2_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_2->aresetn.bind(*p_2_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_2_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_2_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_2->s_axi_awaddr.bind(*p_2_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_2_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_2->s_axi_awprot.bind(*p_2_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_2_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_awvalid.bind(*p_2_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_2_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_awready.bind(*p_2_s_axi_awready);
        p_2_s_axi_awready->set_sv_netview_offsetfromdp(8320088);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_2_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_2->s_axi_wdata.bind(*p_2_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_2_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_2->s_axi_wstrb.bind(*p_2_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_2_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_wvalid.bind(*p_2_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_2_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_wready.bind(*p_2_s_axi_wready);
        p_2_s_axi_wready->set_sv_netview_offsetfromdp(8320312);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_2_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_2->s_axi_bresp.bind(*p_2_s_axi_bresp);
        p_2_s_axi_bresp->set_sv_netview_offsetfromdp(8320368);
        xsim_sc_channel<0, bool > *p_2_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_bvalid.bind(*p_2_s_axi_bvalid);
        p_2_s_axi_bvalid->set_sv_netview_offsetfromdp(8320424);
        xsim_sc_channel<0, bool > *p_2_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_bready.bind(*p_2_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_bready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_2_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_2->s_axi_araddr.bind(*p_2_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_2_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_2->s_axi_arprot.bind(*p_2_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_2_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_arvalid.bind(*p_2_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_2_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_arready.bind(*p_2_s_axi_arready);
        p_2_s_axi_arready->set_sv_netview_offsetfromdp(8320704);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_2_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_2->s_axi_rdata.bind(*p_2_s_axi_rdata);
        p_2_s_axi_rdata->set_sv_netview_offsetfromdp(8320760);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_2_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_2->s_axi_rresp.bind(*p_2_s_axi_rresp);
        p_2_s_axi_rresp->set_sv_netview_offsetfromdp(8320816);
        xsim_sc_channel<0, bool > *p_2_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_rvalid.bind(*p_2_s_axi_rvalid);
        p_2_s_axi_rvalid->set_sv_netview_offsetfromdp(8320872);
        xsim_sc_channel<0, bool > *p_2_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_rready.bind(*p_2_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_rready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_2_m_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_2->m_axi_awaddr.bind(*p_2_m_axi_awaddr);
        p_2_m_axi_awaddr->set_sv_netview_offsetfromdp(8320984);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_2_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_2->m_axi_awprot.bind(*p_2_m_axi_awprot);
        p_2_m_axi_awprot->set_sv_netview_offsetfromdp(8321040);
        xsim_sc_channel<0, bool > *p_2_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axi_awvalid.bind(*p_2_m_axi_awvalid);
        p_2_m_axi_awvalid->set_sv_netview_offsetfromdp(8321096);
        xsim_sc_channel<0, bool > *p_2_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axi_awready.bind(*p_2_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_2_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_2_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_2->m_axi_wdata.bind(*p_2_m_axi_wdata);
        p_2_m_axi_wdata->set_sv_netview_offsetfromdp(8321208);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_2_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_2->m_axi_wstrb.bind(*p_2_m_axi_wstrb);
        p_2_m_axi_wstrb->set_sv_netview_offsetfromdp(8321264);
        xsim_sc_channel<0, bool > *p_2_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axi_wvalid.bind(*p_2_m_axi_wvalid);
        p_2_m_axi_wvalid->set_sv_netview_offsetfromdp(8321320);
        xsim_sc_channel<0, bool > *p_2_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axi_wready.bind(*p_2_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_2_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_2_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_2->m_axi_bresp.bind(*p_2_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_2_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_2_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axi_bvalid.bind(*p_2_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_2_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_2_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axi_bready.bind(*p_2_m_axi_bready);
        p_2_m_axi_bready->set_sv_netview_offsetfromdp(8321544);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_2_m_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_2->m_axi_araddr.bind(*p_2_m_axi_araddr);
        p_2_m_axi_araddr->set_sv_netview_offsetfromdp(8321600);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_2_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_2->m_axi_arprot.bind(*p_2_m_axi_arprot);
        p_2_m_axi_arprot->set_sv_netview_offsetfromdp(8321656);
        xsim_sc_channel<0, bool > *p_2_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axi_arvalid.bind(*p_2_m_axi_arvalid);
        p_2_m_axi_arvalid->set_sv_netview_offsetfromdp(8321712);
        xsim_sc_channel<0, bool > *p_2_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axi_arready.bind(*p_2_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_2_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_2_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_2->m_axi_rdata.bind(*p_2_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_2_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_2_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_2->m_axi_rresp.bind(*p_2_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_2_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_2_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axi_rvalid.bind(*p_2_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_2_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_2_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axi_rready.bind(*p_2_m_axi_rready);
        p_2_m_axi_rready->set_sv_netview_offsetfromdp(8321992);
        sc_inst_3 = new pfm_dynamic_auto_cc_2(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.m01_couplers.auto_cc");
        sc_inst_3->xsim_set_dbg_index(1965);
        xsim_sc_channel<0, bool > *p_3_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_aclk.bind(*p_3_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_3_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_aresetn.bind(*p_3_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->s_axi_awaddr.bind(*p_3_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_3_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_3->s_axi_awprot.bind(*p_3_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_3_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_awvalid.bind(*p_3_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_3_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_awready.bind(*p_3_s_axi_awready);
        p_3_s_axi_awready->set_sv_netview_offsetfromdp(8357864);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_3_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_3->s_axi_wdata.bind(*p_3_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_3_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_3->s_axi_wstrb.bind(*p_3_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_3_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_wvalid.bind(*p_3_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_3_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_wready.bind(*p_3_s_axi_wready);
        p_3_s_axi_wready->set_sv_netview_offsetfromdp(8358088);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->s_axi_bresp.bind(*p_3_s_axi_bresp);
        p_3_s_axi_bresp->set_sv_netview_offsetfromdp(8358144);
        xsim_sc_channel<0, bool > *p_3_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_bvalid.bind(*p_3_s_axi_bvalid);
        p_3_s_axi_bvalid->set_sv_netview_offsetfromdp(8358200);
        xsim_sc_channel<0, bool > *p_3_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_bready.bind(*p_3_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_bready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->s_axi_araddr.bind(*p_3_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_3_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_3->s_axi_arprot.bind(*p_3_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_3_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_arvalid.bind(*p_3_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_3_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_arready.bind(*p_3_s_axi_arready);
        p_3_s_axi_arready->set_sv_netview_offsetfromdp(8358480);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_3_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_3->s_axi_rdata.bind(*p_3_s_axi_rdata);
        p_3_s_axi_rdata->set_sv_netview_offsetfromdp(8358536);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->s_axi_rresp.bind(*p_3_s_axi_rresp);
        p_3_s_axi_rresp->set_sv_netview_offsetfromdp(8358592);
        xsim_sc_channel<0, bool > *p_3_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_rvalid.bind(*p_3_s_axi_rvalid);
        p_3_s_axi_rvalid->set_sv_netview_offsetfromdp(8358648);
        xsim_sc_channel<0, bool > *p_3_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_rready.bind(*p_3_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_rready);
        xsim_sc_channel<0, bool > *p_3_m_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_aclk.bind(*p_3_m_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_3_m_axi_aclk);
        xsim_sc_channel<0, bool > *p_3_m_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_aresetn.bind(*p_3_m_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_3_m_axi_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_m_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->m_axi_awaddr.bind(*p_3_m_axi_awaddr);
        p_3_m_axi_awaddr->set_sv_netview_offsetfromdp(8358872);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_3_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_3->m_axi_awprot.bind(*p_3_m_axi_awprot);
        p_3_m_axi_awprot->set_sv_netview_offsetfromdp(8358928);
        xsim_sc_channel<0, bool > *p_3_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_awvalid.bind(*p_3_m_axi_awvalid);
        p_3_m_axi_awvalid->set_sv_netview_offsetfromdp(8358984);
        xsim_sc_channel<0, bool > *p_3_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_awready.bind(*p_3_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_3_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_3_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_3->m_axi_wdata.bind(*p_3_m_axi_wdata);
        p_3_m_axi_wdata->set_sv_netview_offsetfromdp(8359096);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_3_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_3->m_axi_wstrb.bind(*p_3_m_axi_wstrb);
        p_3_m_axi_wstrb->set_sv_netview_offsetfromdp(8359152);
        xsim_sc_channel<0, bool > *p_3_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_wvalid.bind(*p_3_m_axi_wvalid);
        p_3_m_axi_wvalid->set_sv_netview_offsetfromdp(8359208);
        xsim_sc_channel<0, bool > *p_3_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_wready.bind(*p_3_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_3_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->m_axi_bresp.bind(*p_3_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_3_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_3_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_bvalid.bind(*p_3_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_3_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_3_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_bready.bind(*p_3_m_axi_bready);
        p_3_m_axi_bready->set_sv_netview_offsetfromdp(8359432);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_m_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->m_axi_araddr.bind(*p_3_m_axi_araddr);
        p_3_m_axi_araddr->set_sv_netview_offsetfromdp(8359488);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_3_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_3->m_axi_arprot.bind(*p_3_m_axi_arprot);
        p_3_m_axi_arprot->set_sv_netview_offsetfromdp(8359544);
        xsim_sc_channel<0, bool > *p_3_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_arvalid.bind(*p_3_m_axi_arvalid);
        p_3_m_axi_arvalid->set_sv_netview_offsetfromdp(8359600);
        xsim_sc_channel<0, bool > *p_3_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_arready.bind(*p_3_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_3_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_3_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_3->m_axi_rdata.bind(*p_3_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_3_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->m_axi_rresp.bind(*p_3_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_3_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_3_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_rvalid.bind(*p_3_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_3_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_3_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_rready.bind(*p_3_m_axi_rready);
        p_3_m_axi_rready->set_sv_netview_offsetfromdp(8359880);
        sc_inst_4 = new pfm_dynamic_m01_regslice_5(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.m01_couplers.m01_regslice");
        sc_inst_4->xsim_set_dbg_index(1966);
        xsim_sc_channel<0, bool > *p_4_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_4->aclk.bind(*p_4_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_4_aclk);
        xsim_sc_channel<0, bool > *p_4_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_4->aresetn.bind(*p_4_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_4_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->s_axi_awaddr.bind(*p_4_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->s_axi_awprot.bind(*p_4_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_4_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_awvalid.bind(*p_4_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_4_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_awready.bind(*p_4_s_axi_awready);
        p_4_s_axi_awready->set_sv_netview_offsetfromdp(8360264);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_4_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_4->s_axi_wdata.bind(*p_4_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_4_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_4->s_axi_wstrb.bind(*p_4_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_4_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_wvalid.bind(*p_4_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_4_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_wready.bind(*p_4_s_axi_wready);
        p_4_s_axi_wready->set_sv_netview_offsetfromdp(8360488);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->s_axi_bresp.bind(*p_4_s_axi_bresp);
        p_4_s_axi_bresp->set_sv_netview_offsetfromdp(8360544);
        xsim_sc_channel<0, bool > *p_4_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_bvalid.bind(*p_4_s_axi_bvalid);
        p_4_s_axi_bvalid->set_sv_netview_offsetfromdp(8360600);
        xsim_sc_channel<0, bool > *p_4_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_bready.bind(*p_4_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_bready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->s_axi_araddr.bind(*p_4_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->s_axi_arprot.bind(*p_4_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_4_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_arvalid.bind(*p_4_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_4_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_arready.bind(*p_4_s_axi_arready);
        p_4_s_axi_arready->set_sv_netview_offsetfromdp(8360880);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_4_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_4->s_axi_rdata.bind(*p_4_s_axi_rdata);
        p_4_s_axi_rdata->set_sv_netview_offsetfromdp(8360936);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->s_axi_rresp.bind(*p_4_s_axi_rresp);
        p_4_s_axi_rresp->set_sv_netview_offsetfromdp(8360992);
        xsim_sc_channel<0, bool > *p_4_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_rvalid.bind(*p_4_s_axi_rvalid);
        p_4_s_axi_rvalid->set_sv_netview_offsetfromdp(8361048);
        xsim_sc_channel<0, bool > *p_4_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_rready.bind(*p_4_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_rready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_m_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->m_axi_awaddr.bind(*p_4_m_axi_awaddr);
        p_4_m_axi_awaddr->set_sv_netview_offsetfromdp(8361160);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->m_axi_awprot.bind(*p_4_m_axi_awprot);
        p_4_m_axi_awprot->set_sv_netview_offsetfromdp(8361216);
        xsim_sc_channel<0, bool > *p_4_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axi_awvalid.bind(*p_4_m_axi_awvalid);
        p_4_m_axi_awvalid->set_sv_netview_offsetfromdp(8361272);
        xsim_sc_channel<0, bool > *p_4_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axi_awready.bind(*p_4_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_4_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_4_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_4->m_axi_wdata.bind(*p_4_m_axi_wdata);
        p_4_m_axi_wdata->set_sv_netview_offsetfromdp(8361384);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_4_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_4->m_axi_wstrb.bind(*p_4_m_axi_wstrb);
        p_4_m_axi_wstrb->set_sv_netview_offsetfromdp(8361440);
        xsim_sc_channel<0, bool > *p_4_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axi_wvalid.bind(*p_4_m_axi_wvalid);
        p_4_m_axi_wvalid->set_sv_netview_offsetfromdp(8361496);
        xsim_sc_channel<0, bool > *p_4_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axi_wready.bind(*p_4_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_4_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->m_axi_bresp.bind(*p_4_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_4_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_4_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axi_bvalid.bind(*p_4_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_4_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_4_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axi_bready.bind(*p_4_m_axi_bready);
        p_4_m_axi_bready->set_sv_netview_offsetfromdp(8361720);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_m_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->m_axi_araddr.bind(*p_4_m_axi_araddr);
        p_4_m_axi_araddr->set_sv_netview_offsetfromdp(8361776);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->m_axi_arprot.bind(*p_4_m_axi_arprot);
        p_4_m_axi_arprot->set_sv_netview_offsetfromdp(8361832);
        xsim_sc_channel<0, bool > *p_4_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axi_arvalid.bind(*p_4_m_axi_arvalid);
        p_4_m_axi_arvalid->set_sv_netview_offsetfromdp(8361888);
        xsim_sc_channel<0, bool > *p_4_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axi_arready.bind(*p_4_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_4_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_4_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_4->m_axi_rdata.bind(*p_4_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_4_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->m_axi_rresp.bind(*p_4_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_4_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_4_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axi_rvalid.bind(*p_4_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_4_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_4_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axi_rready.bind(*p_4_m_axi_rready);
        p_4_m_axi_rready->set_sv_netview_offsetfromdp(8362168);
        sc_inst_5 = new pfm_dynamic_auto_cc_3(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.m02_couplers.auto_cc");
        sc_inst_5->xsim_set_dbg_index(2007);
        xsim_sc_channel<0, bool > *p_5_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_aclk.bind(*p_5_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_5_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_aresetn.bind(*p_5_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->s_axi_awaddr.bind(*p_5_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->s_axi_awprot.bind(*p_5_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_5_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_awvalid.bind(*p_5_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_5_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_awready.bind(*p_5_s_axi_awready);
        p_5_s_axi_awready->set_sv_netview_offsetfromdp(8399192);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_5_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_5->s_axi_wdata.bind(*p_5_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->s_axi_wstrb.bind(*p_5_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_5_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_wvalid.bind(*p_5_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_5_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_wready.bind(*p_5_s_axi_wready);
        p_5_s_axi_wready->set_sv_netview_offsetfromdp(8399416);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->s_axi_bresp.bind(*p_5_s_axi_bresp);
        p_5_s_axi_bresp->set_sv_netview_offsetfromdp(8399472);
        xsim_sc_channel<0, bool > *p_5_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_bvalid.bind(*p_5_s_axi_bvalid);
        p_5_s_axi_bvalid->set_sv_netview_offsetfromdp(8399528);
        xsim_sc_channel<0, bool > *p_5_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_bready.bind(*p_5_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_bready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->s_axi_araddr.bind(*p_5_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->s_axi_arprot.bind(*p_5_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_5_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_arvalid.bind(*p_5_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_5_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_arready.bind(*p_5_s_axi_arready);
        p_5_s_axi_arready->set_sv_netview_offsetfromdp(8399808);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_5_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_5->s_axi_rdata.bind(*p_5_s_axi_rdata);
        p_5_s_axi_rdata->set_sv_netview_offsetfromdp(8399864);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->s_axi_rresp.bind(*p_5_s_axi_rresp);
        p_5_s_axi_rresp->set_sv_netview_offsetfromdp(8399920);
        xsim_sc_channel<0, bool > *p_5_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_rvalid.bind(*p_5_s_axi_rvalid);
        p_5_s_axi_rvalid->set_sv_netview_offsetfromdp(8399976);
        xsim_sc_channel<0, bool > *p_5_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_rready.bind(*p_5_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_rready);
        xsim_sc_channel<0, bool > *p_5_m_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_aclk.bind(*p_5_m_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_5_m_axi_aclk);
        xsim_sc_channel<0, bool > *p_5_m_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_aresetn.bind(*p_5_m_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_5_m_axi_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_m_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->m_axi_awaddr.bind(*p_5_m_axi_awaddr);
        p_5_m_axi_awaddr->set_sv_netview_offsetfromdp(8400200);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->m_axi_awprot.bind(*p_5_m_axi_awprot);
        p_5_m_axi_awprot->set_sv_netview_offsetfromdp(8400256);
        xsim_sc_channel<0, bool > *p_5_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_awvalid.bind(*p_5_m_axi_awvalid);
        p_5_m_axi_awvalid->set_sv_netview_offsetfromdp(8400312);
        xsim_sc_channel<0, bool > *p_5_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_awready.bind(*p_5_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_5_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_5_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_5->m_axi_wdata.bind(*p_5_m_axi_wdata);
        p_5_m_axi_wdata->set_sv_netview_offsetfromdp(8400424);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->m_axi_wstrb.bind(*p_5_m_axi_wstrb);
        p_5_m_axi_wstrb->set_sv_netview_offsetfromdp(8400480);
        xsim_sc_channel<0, bool > *p_5_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_wvalid.bind(*p_5_m_axi_wvalid);
        p_5_m_axi_wvalid->set_sv_netview_offsetfromdp(8400536);
        xsim_sc_channel<0, bool > *p_5_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_wready.bind(*p_5_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_5_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->m_axi_bresp.bind(*p_5_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_5_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_5_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_bvalid.bind(*p_5_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_5_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_bready.bind(*p_5_m_axi_bready);
        p_5_m_axi_bready->set_sv_netview_offsetfromdp(8400760);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_m_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->m_axi_araddr.bind(*p_5_m_axi_araddr);
        p_5_m_axi_araddr->set_sv_netview_offsetfromdp(8400816);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->m_axi_arprot.bind(*p_5_m_axi_arprot);
        p_5_m_axi_arprot->set_sv_netview_offsetfromdp(8400872);
        xsim_sc_channel<0, bool > *p_5_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_arvalid.bind(*p_5_m_axi_arvalid);
        p_5_m_axi_arvalid->set_sv_netview_offsetfromdp(8400928);
        xsim_sc_channel<0, bool > *p_5_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_arready.bind(*p_5_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_5_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_5_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_5->m_axi_rdata.bind(*p_5_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_5_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->m_axi_rresp.bind(*p_5_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_5_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_5_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_rvalid.bind(*p_5_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_5_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_rready.bind(*p_5_m_axi_rready);
        p_5_m_axi_rready->set_sv_netview_offsetfromdp(8401208);
        sc_inst_6 = new pfm_dynamic_m02_regslice_5(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.m02_couplers.m02_regslice");
        sc_inst_6->xsim_set_dbg_index(2008);
        xsim_sc_channel<0, bool > *p_6_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_6->aclk.bind(*p_6_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_6_aclk);
        xsim_sc_channel<0, bool > *p_6_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_6->aresetn.bind(*p_6_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_6_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->s_axi_awaddr.bind(*p_6_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->s_axi_awprot.bind(*p_6_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_6_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_awvalid.bind(*p_6_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_6_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_awready.bind(*p_6_s_axi_awready);
        p_6_s_axi_awready->set_sv_netview_offsetfromdp(8401592);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->s_axi_wdata.bind(*p_6_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->s_axi_wstrb.bind(*p_6_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_6_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_wvalid.bind(*p_6_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_6_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_wready.bind(*p_6_s_axi_wready);
        p_6_s_axi_wready->set_sv_netview_offsetfromdp(8401816);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->s_axi_bresp.bind(*p_6_s_axi_bresp);
        p_6_s_axi_bresp->set_sv_netview_offsetfromdp(8401872);
        xsim_sc_channel<0, bool > *p_6_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_bvalid.bind(*p_6_s_axi_bvalid);
        p_6_s_axi_bvalid->set_sv_netview_offsetfromdp(8401928);
        xsim_sc_channel<0, bool > *p_6_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_bready.bind(*p_6_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_bready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->s_axi_araddr.bind(*p_6_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->s_axi_arprot.bind(*p_6_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_6_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_arvalid.bind(*p_6_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_6_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_arready.bind(*p_6_s_axi_arready);
        p_6_s_axi_arready->set_sv_netview_offsetfromdp(8402208);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->s_axi_rdata.bind(*p_6_s_axi_rdata);
        p_6_s_axi_rdata->set_sv_netview_offsetfromdp(8402264);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->s_axi_rresp.bind(*p_6_s_axi_rresp);
        p_6_s_axi_rresp->set_sv_netview_offsetfromdp(8402320);
        xsim_sc_channel<0, bool > *p_6_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_rvalid.bind(*p_6_s_axi_rvalid);
        p_6_s_axi_rvalid->set_sv_netview_offsetfromdp(8402376);
        xsim_sc_channel<0, bool > *p_6_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_rready.bind(*p_6_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_rready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_m_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->m_axi_awaddr.bind(*p_6_m_axi_awaddr);
        p_6_m_axi_awaddr->set_sv_netview_offsetfromdp(8402488);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->m_axi_awprot.bind(*p_6_m_axi_awprot);
        p_6_m_axi_awprot->set_sv_netview_offsetfromdp(8402544);
        xsim_sc_channel<0, bool > *p_6_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axi_awvalid.bind(*p_6_m_axi_awvalid);
        p_6_m_axi_awvalid->set_sv_netview_offsetfromdp(8402600);
        xsim_sc_channel<0, bool > *p_6_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axi_awready.bind(*p_6_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_6_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->m_axi_wdata.bind(*p_6_m_axi_wdata);
        p_6_m_axi_wdata->set_sv_netview_offsetfromdp(8402712);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->m_axi_wstrb.bind(*p_6_m_axi_wstrb);
        p_6_m_axi_wstrb->set_sv_netview_offsetfromdp(8402768);
        xsim_sc_channel<0, bool > *p_6_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axi_wvalid.bind(*p_6_m_axi_wvalid);
        p_6_m_axi_wvalid->set_sv_netview_offsetfromdp(8402824);
        xsim_sc_channel<0, bool > *p_6_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axi_wready.bind(*p_6_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_6_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->m_axi_bresp.bind(*p_6_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_6_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_6_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axi_bvalid.bind(*p_6_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_6_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_6_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axi_bready.bind(*p_6_m_axi_bready);
        p_6_m_axi_bready->set_sv_netview_offsetfromdp(8403048);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_m_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->m_axi_araddr.bind(*p_6_m_axi_araddr);
        p_6_m_axi_araddr->set_sv_netview_offsetfromdp(8403104);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->m_axi_arprot.bind(*p_6_m_axi_arprot);
        p_6_m_axi_arprot->set_sv_netview_offsetfromdp(8403160);
        xsim_sc_channel<0, bool > *p_6_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axi_arvalid.bind(*p_6_m_axi_arvalid);
        p_6_m_axi_arvalid->set_sv_netview_offsetfromdp(8403216);
        xsim_sc_channel<0, bool > *p_6_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axi_arready.bind(*p_6_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_6_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->m_axi_rdata.bind(*p_6_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_6_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->m_axi_rresp.bind(*p_6_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_6_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_6_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axi_rvalid.bind(*p_6_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_6_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_6_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axi_rready.bind(*p_6_m_axi_rready);
        p_6_m_axi_rready->set_sv_netview_offsetfromdp(8403496);
        sc_inst_7 = new pfm_dynamic_auto_cc_4(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.m03_couplers.auto_cc");
        sc_inst_7->xsim_set_dbg_index(2051);
        xsim_sc_channel<0, bool > *p_7_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_aclk.bind(*p_7_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_7_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_aresetn.bind(*p_7_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_7_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_7->s_axi_awaddr.bind(*p_7_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->s_axi_awprot.bind(*p_7_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_7_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_awvalid.bind(*p_7_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_7_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_awready.bind(*p_7_s_axi_awready);
        p_7_s_axi_awready->set_sv_netview_offsetfromdp(8439368);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_7_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_7->s_axi_wdata.bind(*p_7_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->s_axi_wstrb.bind(*p_7_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_7_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_wvalid.bind(*p_7_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_7_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_wready.bind(*p_7_s_axi_wready);
        p_7_s_axi_wready->set_sv_netview_offsetfromdp(8439592);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->s_axi_bresp.bind(*p_7_s_axi_bresp);
        p_7_s_axi_bresp->set_sv_netview_offsetfromdp(8439648);
        xsim_sc_channel<0, bool > *p_7_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_bvalid.bind(*p_7_s_axi_bvalid);
        p_7_s_axi_bvalid->set_sv_netview_offsetfromdp(8439704);
        xsim_sc_channel<0, bool > *p_7_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_bready.bind(*p_7_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_bready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_7_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_7->s_axi_araddr.bind(*p_7_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->s_axi_arprot.bind(*p_7_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_7_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_arvalid.bind(*p_7_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_7_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_arready.bind(*p_7_s_axi_arready);
        p_7_s_axi_arready->set_sv_netview_offsetfromdp(8439984);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_7_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_7->s_axi_rdata.bind(*p_7_s_axi_rdata);
        p_7_s_axi_rdata->set_sv_netview_offsetfromdp(8440040);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->s_axi_rresp.bind(*p_7_s_axi_rresp);
        p_7_s_axi_rresp->set_sv_netview_offsetfromdp(8440096);
        xsim_sc_channel<0, bool > *p_7_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_rvalid.bind(*p_7_s_axi_rvalid);
        p_7_s_axi_rvalid->set_sv_netview_offsetfromdp(8440152);
        xsim_sc_channel<0, bool > *p_7_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_rready.bind(*p_7_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_rready);
        xsim_sc_channel<0, bool > *p_7_m_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_aclk.bind(*p_7_m_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_axi_aclk);
        xsim_sc_channel<0, bool > *p_7_m_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_aresetn.bind(*p_7_m_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_axi_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_7_m_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_7->m_axi_awaddr.bind(*p_7_m_axi_awaddr);
        p_7_m_axi_awaddr->set_sv_netview_offsetfromdp(8440376);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->m_axi_awprot.bind(*p_7_m_axi_awprot);
        p_7_m_axi_awprot->set_sv_netview_offsetfromdp(8440432);
        xsim_sc_channel<0, bool > *p_7_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_awvalid.bind(*p_7_m_axi_awvalid);
        p_7_m_axi_awvalid->set_sv_netview_offsetfromdp(8440488);
        xsim_sc_channel<0, bool > *p_7_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_awready.bind(*p_7_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_7_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_7->m_axi_wdata.bind(*p_7_m_axi_wdata);
        p_7_m_axi_wdata->set_sv_netview_offsetfromdp(8440600);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->m_axi_wstrb.bind(*p_7_m_axi_wstrb);
        p_7_m_axi_wstrb->set_sv_netview_offsetfromdp(8440656);
        xsim_sc_channel<0, bool > *p_7_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_wvalid.bind(*p_7_m_axi_wvalid);
        p_7_m_axi_wvalid->set_sv_netview_offsetfromdp(8440712);
        xsim_sc_channel<0, bool > *p_7_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_wready.bind(*p_7_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->m_axi_bresp.bind(*p_7_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_7_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_bvalid.bind(*p_7_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_7_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_bready.bind(*p_7_m_axi_bready);
        p_7_m_axi_bready->set_sv_netview_offsetfromdp(8440936);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_7_m_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_7->m_axi_araddr.bind(*p_7_m_axi_araddr);
        p_7_m_axi_araddr->set_sv_netview_offsetfromdp(8440992);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->m_axi_arprot.bind(*p_7_m_axi_arprot);
        p_7_m_axi_arprot->set_sv_netview_offsetfromdp(8441048);
        xsim_sc_channel<0, bool > *p_7_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_arvalid.bind(*p_7_m_axi_arvalid);
        p_7_m_axi_arvalid->set_sv_netview_offsetfromdp(8441104);
        xsim_sc_channel<0, bool > *p_7_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_arready.bind(*p_7_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_7_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_7->m_axi_rdata.bind(*p_7_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->m_axi_rresp.bind(*p_7_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_7_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_rvalid.bind(*p_7_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_7_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_rready.bind(*p_7_m_axi_rready);
        p_7_m_axi_rready->set_sv_netview_offsetfromdp(8441384);
        sc_inst_8 = new pfm_dynamic_m03_regslice_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.m03_couplers.m03_regslice");
        sc_inst_8->xsim_set_dbg_index(2052);
        xsim_sc_channel<0, bool > *p_8_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_8->aclk.bind(*p_8_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_8_aclk);
        xsim_sc_channel<0, bool > *p_8_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_8->aresetn.bind(*p_8_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_8_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_8_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_8->s_axi_awaddr.bind(*p_8_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->s_axi_awprot.bind(*p_8_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_8_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_axi_awvalid.bind(*p_8_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_8_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_axi_awready.bind(*p_8_s_axi_awready);
        p_8_s_axi_awready->set_sv_netview_offsetfromdp(8441768);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->s_axi_wdata.bind(*p_8_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->s_axi_wstrb.bind(*p_8_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_8_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_axi_wvalid.bind(*p_8_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_8_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_axi_wready.bind(*p_8_s_axi_wready);
        p_8_s_axi_wready->set_sv_netview_offsetfromdp(8441992);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->s_axi_bresp.bind(*p_8_s_axi_bresp);
        p_8_s_axi_bresp->set_sv_netview_offsetfromdp(8442048);
        xsim_sc_channel<0, bool > *p_8_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_axi_bvalid.bind(*p_8_s_axi_bvalid);
        p_8_s_axi_bvalid->set_sv_netview_offsetfromdp(8442104);
        xsim_sc_channel<0, bool > *p_8_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_axi_bready.bind(*p_8_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_axi_bready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_8_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_8->s_axi_araddr.bind(*p_8_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->s_axi_arprot.bind(*p_8_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_8_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_axi_arvalid.bind(*p_8_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_8_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_axi_arready.bind(*p_8_s_axi_arready);
        p_8_s_axi_arready->set_sv_netview_offsetfromdp(8442384);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->s_axi_rdata.bind(*p_8_s_axi_rdata);
        p_8_s_axi_rdata->set_sv_netview_offsetfromdp(8442440);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->s_axi_rresp.bind(*p_8_s_axi_rresp);
        p_8_s_axi_rresp->set_sv_netview_offsetfromdp(8442496);
        xsim_sc_channel<0, bool > *p_8_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_axi_rvalid.bind(*p_8_s_axi_rvalid);
        p_8_s_axi_rvalid->set_sv_netview_offsetfromdp(8442552);
        xsim_sc_channel<0, bool > *p_8_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_axi_rready.bind(*p_8_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_axi_rready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_8_m_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_8->m_axi_awaddr.bind(*p_8_m_axi_awaddr);
        p_8_m_axi_awaddr->set_sv_netview_offsetfromdp(8442664);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->m_axi_awprot.bind(*p_8_m_axi_awprot);
        p_8_m_axi_awprot->set_sv_netview_offsetfromdp(8442720);
        xsim_sc_channel<0, bool > *p_8_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->m_axi_awvalid.bind(*p_8_m_axi_awvalid);
        p_8_m_axi_awvalid->set_sv_netview_offsetfromdp(8442776);
        xsim_sc_channel<0, bool > *p_8_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_8->m_axi_awready.bind(*p_8_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->m_axi_wdata.bind(*p_8_m_axi_wdata);
        p_8_m_axi_wdata->set_sv_netview_offsetfromdp(8442888);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->m_axi_wstrb.bind(*p_8_m_axi_wstrb);
        p_8_m_axi_wstrb->set_sv_netview_offsetfromdp(8442944);
        xsim_sc_channel<0, bool > *p_8_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->m_axi_wvalid.bind(*p_8_m_axi_wvalid);
        p_8_m_axi_wvalid->set_sv_netview_offsetfromdp(8443000);
        xsim_sc_channel<0, bool > *p_8_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_8->m_axi_wready.bind(*p_8_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->m_axi_bresp.bind(*p_8_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_8_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->m_axi_bvalid.bind(*p_8_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_8_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_8->m_axi_bready.bind(*p_8_m_axi_bready);
        p_8_m_axi_bready->set_sv_netview_offsetfromdp(8443224);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_8_m_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_8->m_axi_araddr.bind(*p_8_m_axi_araddr);
        p_8_m_axi_araddr->set_sv_netview_offsetfromdp(8443280);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->m_axi_arprot.bind(*p_8_m_axi_arprot);
        p_8_m_axi_arprot->set_sv_netview_offsetfromdp(8443336);
        xsim_sc_channel<0, bool > *p_8_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->m_axi_arvalid.bind(*p_8_m_axi_arvalid);
        p_8_m_axi_arvalid->set_sv_netview_offsetfromdp(8443392);
        xsim_sc_channel<0, bool > *p_8_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_8->m_axi_arready.bind(*p_8_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->m_axi_rdata.bind(*p_8_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->m_axi_rresp.bind(*p_8_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_8_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->m_axi_rvalid.bind(*p_8_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_8_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_8->m_axi_rready.bind(*p_8_m_axi_rready);
        p_8_m_axi_rready->set_sv_netview_offsetfromdp(8443672);
        sc_inst_9 = new pfm_dynamic_auto_cc_5(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.m04_couplers.auto_cc");
        sc_inst_9->xsim_set_dbg_index(2093);
        xsim_sc_channel<0, bool > *p_9_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_aclk.bind(*p_9_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_9_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_aresetn.bind(*p_9_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_9_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_9->s_axi_awaddr.bind(*p_9_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->s_axi_awprot.bind(*p_9_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_9_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_awvalid.bind(*p_9_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_9_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_awready.bind(*p_9_s_axi_awready);
        p_9_s_axi_awready->set_sv_netview_offsetfromdp(8479544);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->s_axi_wdata.bind(*p_9_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->s_axi_wstrb.bind(*p_9_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_9_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_wvalid.bind(*p_9_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_9_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_wready.bind(*p_9_s_axi_wready);
        p_9_s_axi_wready->set_sv_netview_offsetfromdp(8479768);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->s_axi_bresp.bind(*p_9_s_axi_bresp);
        p_9_s_axi_bresp->set_sv_netview_offsetfromdp(8479824);
        xsim_sc_channel<0, bool > *p_9_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_bvalid.bind(*p_9_s_axi_bvalid);
        p_9_s_axi_bvalid->set_sv_netview_offsetfromdp(8479880);
        xsim_sc_channel<0, bool > *p_9_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_bready.bind(*p_9_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_bready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_9_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_9->s_axi_araddr.bind(*p_9_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->s_axi_arprot.bind(*p_9_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_9_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_arvalid.bind(*p_9_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_9_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_arready.bind(*p_9_s_axi_arready);
        p_9_s_axi_arready->set_sv_netview_offsetfromdp(8480160);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->s_axi_rdata.bind(*p_9_s_axi_rdata);
        p_9_s_axi_rdata->set_sv_netview_offsetfromdp(8480216);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->s_axi_rresp.bind(*p_9_s_axi_rresp);
        p_9_s_axi_rresp->set_sv_netview_offsetfromdp(8480272);
        xsim_sc_channel<0, bool > *p_9_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_rvalid.bind(*p_9_s_axi_rvalid);
        p_9_s_axi_rvalid->set_sv_netview_offsetfromdp(8480328);
        xsim_sc_channel<0, bool > *p_9_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_rready.bind(*p_9_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_rready);
        xsim_sc_channel<0, bool > *p_9_m_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_9->m_axi_aclk.bind(*p_9_m_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_9_m_axi_aclk);
        xsim_sc_channel<0, bool > *p_9_m_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_9->m_axi_aresetn.bind(*p_9_m_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_9_m_axi_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_9_m_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_9->m_axi_awaddr.bind(*p_9_m_axi_awaddr);
        p_9_m_axi_awaddr->set_sv_netview_offsetfromdp(8480552);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->m_axi_awprot.bind(*p_9_m_axi_awprot);
        p_9_m_axi_awprot->set_sv_netview_offsetfromdp(8480608);
        xsim_sc_channel<0, bool > *p_9_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->m_axi_awvalid.bind(*p_9_m_axi_awvalid);
        p_9_m_axi_awvalid->set_sv_netview_offsetfromdp(8480664);
        xsim_sc_channel<0, bool > *p_9_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_9->m_axi_awready.bind(*p_9_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_9_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->m_axi_wdata.bind(*p_9_m_axi_wdata);
        p_9_m_axi_wdata->set_sv_netview_offsetfromdp(8480776);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->m_axi_wstrb.bind(*p_9_m_axi_wstrb);
        p_9_m_axi_wstrb->set_sv_netview_offsetfromdp(8480832);
        xsim_sc_channel<0, bool > *p_9_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->m_axi_wvalid.bind(*p_9_m_axi_wvalid);
        p_9_m_axi_wvalid->set_sv_netview_offsetfromdp(8480888);
        xsim_sc_channel<0, bool > *p_9_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_9->m_axi_wready.bind(*p_9_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_9_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->m_axi_bresp.bind(*p_9_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_9_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_9_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->m_axi_bvalid.bind(*p_9_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_9_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_9->m_axi_bready.bind(*p_9_m_axi_bready);
        p_9_m_axi_bready->set_sv_netview_offsetfromdp(8481112);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_9_m_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_9->m_axi_araddr.bind(*p_9_m_axi_araddr);
        p_9_m_axi_araddr->set_sv_netview_offsetfromdp(8481168);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->m_axi_arprot.bind(*p_9_m_axi_arprot);
        p_9_m_axi_arprot->set_sv_netview_offsetfromdp(8481224);
        xsim_sc_channel<0, bool > *p_9_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->m_axi_arvalid.bind(*p_9_m_axi_arvalid);
        p_9_m_axi_arvalid->set_sv_netview_offsetfromdp(8481280);
        xsim_sc_channel<0, bool > *p_9_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_9->m_axi_arready.bind(*p_9_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_9_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->m_axi_rdata.bind(*p_9_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_9_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->m_axi_rresp.bind(*p_9_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_9_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_9_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->m_axi_rvalid.bind(*p_9_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_9_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_9->m_axi_rready.bind(*p_9_m_axi_rready);
        p_9_m_axi_rready->set_sv_netview_offsetfromdp(8481560);
        sc_inst_10 = new pfm_dynamic_m04_regslice_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.m04_couplers.m04_regslice");
        sc_inst_10->xsim_set_dbg_index(2094);
        xsim_sc_channel<0, bool > *p_10_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_10->aclk.bind(*p_10_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_10_aclk);
        xsim_sc_channel<0, bool > *p_10_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_10->aresetn.bind(*p_10_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_10_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_10_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_10->s_axi_awaddr.bind(*p_10_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->s_axi_awprot.bind(*p_10_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_10_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_axi_awvalid.bind(*p_10_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_10_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_axi_awready.bind(*p_10_s_axi_awready);
        p_10_s_axi_awready->set_sv_netview_offsetfromdp(8481944);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_10_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_10->s_axi_wdata.bind(*p_10_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->s_axi_wstrb.bind(*p_10_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_10_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_axi_wvalid.bind(*p_10_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_10_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_axi_wready.bind(*p_10_s_axi_wready);
        p_10_s_axi_wready->set_sv_netview_offsetfromdp(8482168);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->s_axi_bresp.bind(*p_10_s_axi_bresp);
        p_10_s_axi_bresp->set_sv_netview_offsetfromdp(8482224);
        xsim_sc_channel<0, bool > *p_10_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_axi_bvalid.bind(*p_10_s_axi_bvalid);
        p_10_s_axi_bvalid->set_sv_netview_offsetfromdp(8482280);
        xsim_sc_channel<0, bool > *p_10_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_axi_bready.bind(*p_10_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_bready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_10_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_10->s_axi_araddr.bind(*p_10_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->s_axi_arprot.bind(*p_10_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_10_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_axi_arvalid.bind(*p_10_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_10_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_axi_arready.bind(*p_10_s_axi_arready);
        p_10_s_axi_arready->set_sv_netview_offsetfromdp(8482560);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_10_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_10->s_axi_rdata.bind(*p_10_s_axi_rdata);
        p_10_s_axi_rdata->set_sv_netview_offsetfromdp(8482616);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->s_axi_rresp.bind(*p_10_s_axi_rresp);
        p_10_s_axi_rresp->set_sv_netview_offsetfromdp(8482672);
        xsim_sc_channel<0, bool > *p_10_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_axi_rvalid.bind(*p_10_s_axi_rvalid);
        p_10_s_axi_rvalid->set_sv_netview_offsetfromdp(8482728);
        xsim_sc_channel<0, bool > *p_10_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_axi_rready.bind(*p_10_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_rready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_10_m_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_10->m_axi_awaddr.bind(*p_10_m_axi_awaddr);
        p_10_m_axi_awaddr->set_sv_netview_offsetfromdp(8482840);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->m_axi_awprot.bind(*p_10_m_axi_awprot);
        p_10_m_axi_awprot->set_sv_netview_offsetfromdp(8482896);
        xsim_sc_channel<0, bool > *p_10_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->m_axi_awvalid.bind(*p_10_m_axi_awvalid);
        p_10_m_axi_awvalid->set_sv_netview_offsetfromdp(8482952);
        xsim_sc_channel<0, bool > *p_10_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_10->m_axi_awready.bind(*p_10_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_10_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_10->m_axi_wdata.bind(*p_10_m_axi_wdata);
        p_10_m_axi_wdata->set_sv_netview_offsetfromdp(8483064);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->m_axi_wstrb.bind(*p_10_m_axi_wstrb);
        p_10_m_axi_wstrb->set_sv_netview_offsetfromdp(8483120);
        xsim_sc_channel<0, bool > *p_10_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->m_axi_wvalid.bind(*p_10_m_axi_wvalid);
        p_10_m_axi_wvalid->set_sv_netview_offsetfromdp(8483176);
        xsim_sc_channel<0, bool > *p_10_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_10->m_axi_wready.bind(*p_10_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->m_axi_bresp.bind(*p_10_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_10_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->m_axi_bvalid.bind(*p_10_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_10_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_10->m_axi_bready.bind(*p_10_m_axi_bready);
        p_10_m_axi_bready->set_sv_netview_offsetfromdp(8483400);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_10_m_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_10->m_axi_araddr.bind(*p_10_m_axi_araddr);
        p_10_m_axi_araddr->set_sv_netview_offsetfromdp(8483456);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->m_axi_arprot.bind(*p_10_m_axi_arprot);
        p_10_m_axi_arprot->set_sv_netview_offsetfromdp(8483512);
        xsim_sc_channel<0, bool > *p_10_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->m_axi_arvalid.bind(*p_10_m_axi_arvalid);
        p_10_m_axi_arvalid->set_sv_netview_offsetfromdp(8483568);
        xsim_sc_channel<0, bool > *p_10_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_10->m_axi_arready.bind(*p_10_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_10_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_10->m_axi_rdata.bind(*p_10_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->m_axi_rresp.bind(*p_10_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_10_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->m_axi_rvalid.bind(*p_10_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_10_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_10->m_axi_rready.bind(*p_10_m_axi_rready);
        p_10_m_axi_rready->set_sv_netview_offsetfromdp(8483848);
        sc_inst_11 = new pfm_dynamic_auto_cc_6(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.m05_couplers.auto_cc");
        sc_inst_11->xsim_set_dbg_index(2135);
        xsim_sc_channel<0, bool > *p_11_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axi_aclk.bind(*p_11_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_11_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axi_aresetn.bind(*p_11_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axi_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_11_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_11->s_axi_awaddr.bind(*p_11_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_11_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_11->s_axi_awprot.bind(*p_11_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_11_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axi_awvalid.bind(*p_11_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_11_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axi_awready.bind(*p_11_s_axi_awready);
        p_11_s_axi_awready->set_sv_netview_offsetfromdp(8519720);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_11_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_11->s_axi_wdata.bind(*p_11_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->s_axi_wstrb.bind(*p_11_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_11_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axi_wvalid.bind(*p_11_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_11_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axi_wready.bind(*p_11_s_axi_wready);
        p_11_s_axi_wready->set_sv_netview_offsetfromdp(8519944);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->s_axi_bresp.bind(*p_11_s_axi_bresp);
        p_11_s_axi_bresp->set_sv_netview_offsetfromdp(8520000);
        xsim_sc_channel<0, bool > *p_11_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axi_bvalid.bind(*p_11_s_axi_bvalid);
        p_11_s_axi_bvalid->set_sv_netview_offsetfromdp(8520056);
        xsim_sc_channel<0, bool > *p_11_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axi_bready.bind(*p_11_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axi_bready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_11_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_11->s_axi_araddr.bind(*p_11_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_11_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_11->s_axi_arprot.bind(*p_11_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_11_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axi_arvalid.bind(*p_11_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_11_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axi_arready.bind(*p_11_s_axi_arready);
        p_11_s_axi_arready->set_sv_netview_offsetfromdp(8520336);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_11_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_11->s_axi_rdata.bind(*p_11_s_axi_rdata);
        p_11_s_axi_rdata->set_sv_netview_offsetfromdp(8520392);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->s_axi_rresp.bind(*p_11_s_axi_rresp);
        p_11_s_axi_rresp->set_sv_netview_offsetfromdp(8520448);
        xsim_sc_channel<0, bool > *p_11_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axi_rvalid.bind(*p_11_s_axi_rvalid);
        p_11_s_axi_rvalid->set_sv_netview_offsetfromdp(8520504);
        xsim_sc_channel<0, bool > *p_11_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axi_rready.bind(*p_11_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axi_rready);
        xsim_sc_channel<0, bool > *p_11_m_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_11->m_axi_aclk.bind(*p_11_m_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_11_m_axi_aclk);
        xsim_sc_channel<0, bool > *p_11_m_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_11->m_axi_aresetn.bind(*p_11_m_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_11_m_axi_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_11_m_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_11->m_axi_awaddr.bind(*p_11_m_axi_awaddr);
        p_11_m_axi_awaddr->set_sv_netview_offsetfromdp(8520728);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_11_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_11->m_axi_awprot.bind(*p_11_m_axi_awprot);
        p_11_m_axi_awprot->set_sv_netview_offsetfromdp(8520784);
        xsim_sc_channel<0, bool > *p_11_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->m_axi_awvalid.bind(*p_11_m_axi_awvalid);
        p_11_m_axi_awvalid->set_sv_netview_offsetfromdp(8520840);
        xsim_sc_channel<0, bool > *p_11_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_11->m_axi_awready.bind(*p_11_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_11_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_11_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_11->m_axi_wdata.bind(*p_11_m_axi_wdata);
        p_11_m_axi_wdata->set_sv_netview_offsetfromdp(8520952);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->m_axi_wstrb.bind(*p_11_m_axi_wstrb);
        p_11_m_axi_wstrb->set_sv_netview_offsetfromdp(8521008);
        xsim_sc_channel<0, bool > *p_11_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->m_axi_wvalid.bind(*p_11_m_axi_wvalid);
        p_11_m_axi_wvalid->set_sv_netview_offsetfromdp(8521064);
        xsim_sc_channel<0, bool > *p_11_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_11->m_axi_wready.bind(*p_11_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_11_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->m_axi_bresp.bind(*p_11_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_11_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_11_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->m_axi_bvalid.bind(*p_11_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_11_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_11_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_11->m_axi_bready.bind(*p_11_m_axi_bready);
        p_11_m_axi_bready->set_sv_netview_offsetfromdp(8521288);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_11_m_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_11->m_axi_araddr.bind(*p_11_m_axi_araddr);
        p_11_m_axi_araddr->set_sv_netview_offsetfromdp(8521344);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_11_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_11->m_axi_arprot.bind(*p_11_m_axi_arprot);
        p_11_m_axi_arprot->set_sv_netview_offsetfromdp(8521400);
        xsim_sc_channel<0, bool > *p_11_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->m_axi_arvalid.bind(*p_11_m_axi_arvalid);
        p_11_m_axi_arvalid->set_sv_netview_offsetfromdp(8521456);
        xsim_sc_channel<0, bool > *p_11_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_11->m_axi_arready.bind(*p_11_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_11_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_11_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_11->m_axi_rdata.bind(*p_11_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_11_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->m_axi_rresp.bind(*p_11_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_11_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_11_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->m_axi_rvalid.bind(*p_11_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_11_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_11_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_11->m_axi_rready.bind(*p_11_m_axi_rready);
        p_11_m_axi_rready->set_sv_netview_offsetfromdp(8521736);
        sc_inst_12 = new pfm_dynamic_m05_regslice_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.m05_couplers.m05_regslice");
        sc_inst_12->xsim_set_dbg_index(2136);
        xsim_sc_channel<0, bool > *p_12_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_12->aclk.bind(*p_12_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_12_aclk);
        xsim_sc_channel<0, bool > *p_12_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_12->aresetn.bind(*p_12_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_12_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_12_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_12->s_axi_awaddr.bind(*p_12_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->s_axi_awprot.bind(*p_12_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_12_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->s_axi_awvalid.bind(*p_12_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_12_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_12->s_axi_awready.bind(*p_12_s_axi_awready);
        p_12_s_axi_awready->set_sv_netview_offsetfromdp(8522120);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_12_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_12->s_axi_wdata.bind(*p_12_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->s_axi_wstrb.bind(*p_12_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_12_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->s_axi_wvalid.bind(*p_12_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_12_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_12->s_axi_wready.bind(*p_12_s_axi_wready);
        p_12_s_axi_wready->set_sv_netview_offsetfromdp(8522344);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->s_axi_bresp.bind(*p_12_s_axi_bresp);
        p_12_s_axi_bresp->set_sv_netview_offsetfromdp(8522400);
        xsim_sc_channel<0, bool > *p_12_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->s_axi_bvalid.bind(*p_12_s_axi_bvalid);
        p_12_s_axi_bvalid->set_sv_netview_offsetfromdp(8522456);
        xsim_sc_channel<0, bool > *p_12_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_12->s_axi_bready.bind(*p_12_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_axi_bready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_12_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_12->s_axi_araddr.bind(*p_12_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->s_axi_arprot.bind(*p_12_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_12_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->s_axi_arvalid.bind(*p_12_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_12_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_12->s_axi_arready.bind(*p_12_s_axi_arready);
        p_12_s_axi_arready->set_sv_netview_offsetfromdp(8522736);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_12_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_12->s_axi_rdata.bind(*p_12_s_axi_rdata);
        p_12_s_axi_rdata->set_sv_netview_offsetfromdp(8522792);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->s_axi_rresp.bind(*p_12_s_axi_rresp);
        p_12_s_axi_rresp->set_sv_netview_offsetfromdp(8522848);
        xsim_sc_channel<0, bool > *p_12_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->s_axi_rvalid.bind(*p_12_s_axi_rvalid);
        p_12_s_axi_rvalid->set_sv_netview_offsetfromdp(8522904);
        xsim_sc_channel<0, bool > *p_12_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_12->s_axi_rready.bind(*p_12_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_axi_rready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_12_m_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_12->m_axi_awaddr.bind(*p_12_m_axi_awaddr);
        p_12_m_axi_awaddr->set_sv_netview_offsetfromdp(8523016);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->m_axi_awprot.bind(*p_12_m_axi_awprot);
        p_12_m_axi_awprot->set_sv_netview_offsetfromdp(8523072);
        xsim_sc_channel<0, bool > *p_12_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->m_axi_awvalid.bind(*p_12_m_axi_awvalid);
        p_12_m_axi_awvalid->set_sv_netview_offsetfromdp(8523128);
        xsim_sc_channel<0, bool > *p_12_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_12->m_axi_awready.bind(*p_12_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_12_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_12->m_axi_wdata.bind(*p_12_m_axi_wdata);
        p_12_m_axi_wdata->set_sv_netview_offsetfromdp(8523240);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->m_axi_wstrb.bind(*p_12_m_axi_wstrb);
        p_12_m_axi_wstrb->set_sv_netview_offsetfromdp(8523296);
        xsim_sc_channel<0, bool > *p_12_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->m_axi_wvalid.bind(*p_12_m_axi_wvalid);
        p_12_m_axi_wvalid->set_sv_netview_offsetfromdp(8523352);
        xsim_sc_channel<0, bool > *p_12_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_12->m_axi_wready.bind(*p_12_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->m_axi_bresp.bind(*p_12_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_12_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->m_axi_bvalid.bind(*p_12_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_12_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_12->m_axi_bready.bind(*p_12_m_axi_bready);
        p_12_m_axi_bready->set_sv_netview_offsetfromdp(8523576);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_12_m_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_12->m_axi_araddr.bind(*p_12_m_axi_araddr);
        p_12_m_axi_araddr->set_sv_netview_offsetfromdp(8523632);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->m_axi_arprot.bind(*p_12_m_axi_arprot);
        p_12_m_axi_arprot->set_sv_netview_offsetfromdp(8523688);
        xsim_sc_channel<0, bool > *p_12_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->m_axi_arvalid.bind(*p_12_m_axi_arvalid);
        p_12_m_axi_arvalid->set_sv_netview_offsetfromdp(8523744);
        xsim_sc_channel<0, bool > *p_12_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_12->m_axi_arready.bind(*p_12_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_12_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_12->m_axi_rdata.bind(*p_12_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->m_axi_rresp.bind(*p_12_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_12_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->m_axi_rvalid.bind(*p_12_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_12_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_12->m_axi_rready.bind(*p_12_m_axi_rready);
        p_12_m_axi_rready->set_sv_netview_offsetfromdp(8524024);
        sc_inst_13 = new pfm_dynamic_s00_regslice_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.s00_couplers.s00_regslice");
        sc_inst_13->xsim_set_dbg_index(2177);
        xsim_sc_channel<0, bool > *p_13_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_13->aclk.bind(*p_13_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_13_aclk);
        xsim_sc_channel<0, bool > *p_13_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_13->aresetn.bind(*p_13_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_13_aresetn);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_13_s_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_13->s_axi_awaddr.bind(*p_13_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->s_axi_awprot.bind(*p_13_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_13_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axi_awvalid.bind(*p_13_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_13_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axi_awready.bind(*p_13_s_axi_awready);
        p_13_s_axi_awready->set_sv_netview_offsetfromdp(8547664);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_13_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_13->s_axi_wdata.bind(*p_13_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->s_axi_wstrb.bind(*p_13_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_13_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axi_wvalid.bind(*p_13_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_13_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axi_wready.bind(*p_13_s_axi_wready);
        p_13_s_axi_wready->set_sv_netview_offsetfromdp(8547888);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->s_axi_bresp.bind(*p_13_s_axi_bresp);
        p_13_s_axi_bresp->set_sv_netview_offsetfromdp(8547944);
        xsim_sc_channel<0, bool > *p_13_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axi_bvalid.bind(*p_13_s_axi_bvalid);
        p_13_s_axi_bvalid->set_sv_netview_offsetfromdp(8548000);
        xsim_sc_channel<0, bool > *p_13_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axi_bready.bind(*p_13_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_13_s_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_13->s_axi_araddr.bind(*p_13_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->s_axi_arprot.bind(*p_13_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_13_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axi_arvalid.bind(*p_13_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_13_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axi_arready.bind(*p_13_s_axi_arready);
        p_13_s_axi_arready->set_sv_netview_offsetfromdp(8548280);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_13_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_13->s_axi_rdata.bind(*p_13_s_axi_rdata);
        p_13_s_axi_rdata->set_sv_netview_offsetfromdp(8548336);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->s_axi_rresp.bind(*p_13_s_axi_rresp);
        p_13_s_axi_rresp->set_sv_netview_offsetfromdp(8548392);
        xsim_sc_channel<0, bool > *p_13_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axi_rvalid.bind(*p_13_s_axi_rvalid);
        p_13_s_axi_rvalid->set_sv_netview_offsetfromdp(8548448);
        xsim_sc_channel<0, bool > *p_13_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axi_rready.bind(*p_13_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_rready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_13_m_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_13->m_axi_awaddr.bind(*p_13_m_axi_awaddr);
        p_13_m_axi_awaddr->set_sv_netview_offsetfromdp(8548560);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->m_axi_awprot.bind(*p_13_m_axi_awprot);
        p_13_m_axi_awprot->set_sv_netview_offsetfromdp(8548616);
        xsim_sc_channel<0, bool > *p_13_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->m_axi_awvalid.bind(*p_13_m_axi_awvalid);
        p_13_m_axi_awvalid->set_sv_netview_offsetfromdp(8548672);
        xsim_sc_channel<0, bool > *p_13_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_13->m_axi_awready.bind(*p_13_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_13_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_13->m_axi_wdata.bind(*p_13_m_axi_wdata);
        p_13_m_axi_wdata->set_sv_netview_offsetfromdp(8548784);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->m_axi_wstrb.bind(*p_13_m_axi_wstrb);
        p_13_m_axi_wstrb->set_sv_netview_offsetfromdp(8548840);
        xsim_sc_channel<0, bool > *p_13_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->m_axi_wvalid.bind(*p_13_m_axi_wvalid);
        p_13_m_axi_wvalid->set_sv_netview_offsetfromdp(8548896);
        xsim_sc_channel<0, bool > *p_13_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_13->m_axi_wready.bind(*p_13_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->m_axi_bresp.bind(*p_13_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_13_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->m_axi_bvalid.bind(*p_13_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_13_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_13->m_axi_bready.bind(*p_13_m_axi_bready);
        p_13_m_axi_bready->set_sv_netview_offsetfromdp(8549120);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_13_m_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_13->m_axi_araddr.bind(*p_13_m_axi_araddr);
        p_13_m_axi_araddr->set_sv_netview_offsetfromdp(8549176);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->m_axi_arprot.bind(*p_13_m_axi_arprot);
        p_13_m_axi_arprot->set_sv_netview_offsetfromdp(8549232);
        xsim_sc_channel<0, bool > *p_13_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->m_axi_arvalid.bind(*p_13_m_axi_arvalid);
        p_13_m_axi_arvalid->set_sv_netview_offsetfromdp(8549288);
        xsim_sc_channel<0, bool > *p_13_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_13->m_axi_arready.bind(*p_13_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_13_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_13->m_axi_rdata.bind(*p_13_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->m_axi_rresp.bind(*p_13_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_13_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->m_axi_rvalid.bind(*p_13_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_13_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_13->m_axi_rready.bind(*p_13_m_axi_rready);
        p_13_m_axi_rready->set_sv_netview_offsetfromdp(8549568);
        sc_inst_14 = new pfm_dynamic_xbar_4(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.xbar");
        sc_inst_14->xsim_set_dbg_index(788);
        xsim_sc_channel<0, bool > *p_14_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_14->aclk.bind(*p_14_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_14_aclk);
        xsim_sc_channel<0, bool > *p_14_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_14->aresetn.bind(*p_14_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_14_aresetn);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_14_s_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_14->s_axi_awaddr.bind(*p_14_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->s_axi_awprot.bind(*p_14_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_awprot);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s_axi_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s_axi_awvalid.bind(*p_14_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_awvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s_axi_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s_axi_awready.bind(*p_14_s_axi_awready);
        p_14_s_axi_awready->set_sv_netview_offsetfromdp(8549952);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_14_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_14->s_axi_wdata.bind(*p_14_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s_axi_wstrb.bind(*p_14_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_wstrb);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s_axi_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s_axi_wvalid.bind(*p_14_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_wvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s_axi_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s_axi_wready.bind(*p_14_s_axi_wready);
        p_14_s_axi_wready->set_sv_netview_offsetfromdp(8550176);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->s_axi_bresp.bind(*p_14_s_axi_bresp);
        p_14_s_axi_bresp->set_sv_netview_offsetfromdp(8550232);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s_axi_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s_axi_bvalid.bind(*p_14_s_axi_bvalid);
        p_14_s_axi_bvalid->set_sv_netview_offsetfromdp(8550288);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s_axi_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s_axi_bready.bind(*p_14_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_14_s_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_14->s_axi_araddr.bind(*p_14_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->s_axi_arprot.bind(*p_14_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_arprot);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s_axi_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s_axi_arvalid.bind(*p_14_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_arvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s_axi_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s_axi_arready.bind(*p_14_s_axi_arready);
        p_14_s_axi_arready->set_sv_netview_offsetfromdp(8550568);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_14_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_14->s_axi_rdata.bind(*p_14_s_axi_rdata);
        p_14_s_axi_rdata->set_sv_netview_offsetfromdp(8550624);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->s_axi_rresp.bind(*p_14_s_axi_rresp);
        p_14_s_axi_rresp->set_sv_netview_offsetfromdp(8550680);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s_axi_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s_axi_rvalid.bind(*p_14_s_axi_rvalid);
        p_14_s_axi_rvalid->set_sv_netview_offsetfromdp(8550736);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s_axi_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s_axi_rready.bind(*p_14_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_rready);
        xsim_sc_channel<384, sc_dt::sc_bv<384> > *p_14_m_axi_awaddr = new xsim_sc_channel<384, sc_dt::sc_bv<384> >();
        sc_inst_14->m_axi_awaddr.bind(*p_14_m_axi_awaddr);
        p_14_m_axi_awaddr->set_sv_netview_offsetfromdp(8550848);
        xsim_sc_channel<18, sc_dt::sc_bv<18> > *p_14_m_axi_awprot = new xsim_sc_channel<18, sc_dt::sc_bv<18> >();
        sc_inst_14->m_axi_awprot.bind(*p_14_m_axi_awprot);
        p_14_m_axi_awprot->set_sv_netview_offsetfromdp(8550904);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_14_m_axi_awvalid = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_14->m_axi_awvalid.bind(*p_14_m_axi_awvalid);
        p_14_m_axi_awvalid->set_sv_netview_offsetfromdp(8550960);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_14_m_axi_awready = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_14->m_axi_awready.bind(*p_14_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m_axi_awready);
        xsim_sc_channel<192, sc_dt::sc_bv<192> > *p_14_m_axi_wdata = new xsim_sc_channel<192, sc_dt::sc_bv<192> >();
        sc_inst_14->m_axi_wdata.bind(*p_14_m_axi_wdata);
        p_14_m_axi_wdata->set_sv_netview_offsetfromdp(8551072);
        xsim_sc_channel<24, sc_dt::sc_bv<24> > *p_14_m_axi_wstrb = new xsim_sc_channel<24, sc_dt::sc_bv<24> >();
        sc_inst_14->m_axi_wstrb.bind(*p_14_m_axi_wstrb);
        p_14_m_axi_wstrb->set_sv_netview_offsetfromdp(8551128);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_14_m_axi_wvalid = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_14->m_axi_wvalid.bind(*p_14_m_axi_wvalid);
        p_14_m_axi_wvalid->set_sv_netview_offsetfromdp(8551184);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_14_m_axi_wready = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_14->m_axi_wready.bind(*p_14_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m_axi_wready);
        xsim_sc_channel<12, sc_dt::sc_bv<12> > *p_14_m_axi_bresp = new xsim_sc_channel<12, sc_dt::sc_bv<12> >();
        sc_inst_14->m_axi_bresp.bind(*p_14_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m_axi_bresp);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_14_m_axi_bvalid = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_14->m_axi_bvalid.bind(*p_14_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m_axi_bvalid);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_14_m_axi_bready = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_14->m_axi_bready.bind(*p_14_m_axi_bready);
        p_14_m_axi_bready->set_sv_netview_offsetfromdp(8551408);
        xsim_sc_channel<384, sc_dt::sc_bv<384> > *p_14_m_axi_araddr = new xsim_sc_channel<384, sc_dt::sc_bv<384> >();
        sc_inst_14->m_axi_araddr.bind(*p_14_m_axi_araddr);
        p_14_m_axi_araddr->set_sv_netview_offsetfromdp(8551464);
        xsim_sc_channel<18, sc_dt::sc_bv<18> > *p_14_m_axi_arprot = new xsim_sc_channel<18, sc_dt::sc_bv<18> >();
        sc_inst_14->m_axi_arprot.bind(*p_14_m_axi_arprot);
        p_14_m_axi_arprot->set_sv_netview_offsetfromdp(8551520);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_14_m_axi_arvalid = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_14->m_axi_arvalid.bind(*p_14_m_axi_arvalid);
        p_14_m_axi_arvalid->set_sv_netview_offsetfromdp(8551576);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_14_m_axi_arready = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_14->m_axi_arready.bind(*p_14_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m_axi_arready);
        xsim_sc_channel<192, sc_dt::sc_bv<192> > *p_14_m_axi_rdata = new xsim_sc_channel<192, sc_dt::sc_bv<192> >();
        sc_inst_14->m_axi_rdata.bind(*p_14_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m_axi_rdata);
        xsim_sc_channel<12, sc_dt::sc_bv<12> > *p_14_m_axi_rresp = new xsim_sc_channel<12, sc_dt::sc_bv<12> >();
        sc_inst_14->m_axi_rresp.bind(*p_14_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m_axi_rresp);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_14_m_axi_rvalid = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_14->m_axi_rvalid.bind(*p_14_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m_axi_rvalid);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_14_m_axi_rready = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_14->m_axi_rready.bind(*p_14_m_axi_rready);
        p_14_m_axi_rready->set_sv_netview_offsetfromdp(8551856);
        sc_inst_15 = new pfm_dynamic_dpa_hub_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_hub");
        sc_inst_15->xsim_set_dbg_index(399);
        xsim_sc_channel<0, bool > *p_15_s_aximm_clk = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_aximm_clk.bind(*p_15_s_aximm_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_aximm_clk);
        xsim_sc_channel<0, bool > *p_15_s_aximm_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_aximm_aresetn.bind(*p_15_s_aximm_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_aximm_aresetn);
        xsim_sc_channel<0, bool > *p_15_trace_clk = new xsim_sc_channel<0, bool >();
        sc_inst_15->trace_clk.bind(*p_15_trace_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_15_trace_clk);
        xsim_sc_channel<0, bool > *p_15_trace_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_15->trace_aresetn.bind(*p_15_trace_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_15_trace_aresetn);
        xsim_sc_channel<0, bool > *p_15_axilite_clk = new xsim_sc_channel<0, bool >();
        sc_inst_15->axilite_clk.bind(*p_15_axilite_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_15_axilite_clk);
        xsim_sc_channel<0, bool > *p_15_axilite_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_15->axilite_aresetn.bind(*p_15_axilite_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_15_axilite_aresetn);
        xsim_sc_channel<0, bool > *p_15_trace_tready0 = new xsim_sc_channel<0, bool >();
        sc_inst_15->trace_tready0.bind(*p_15_trace_tready0);
        p_15_trace_tready0->set_sv_netview_offsetfromdp(8552296);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_trace_tdata0 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->trace_tdata0.bind(*p_15_trace_tdata0);
        (*_glb_hdl_sc_channel_map).push_back(p_15_trace_tdata0);
        xsim_sc_channel<0, bool > *p_15_trace_tlast0 = new xsim_sc_channel<0, bool >();
        sc_inst_15->trace_tlast0.bind(*p_15_trace_tlast0);
        (*_glb_hdl_sc_channel_map).push_back(p_15_trace_tlast0);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_trace_tid0 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->trace_tid0.bind(*p_15_trace_tid0);
        (*_glb_hdl_sc_channel_map).push_back(p_15_trace_tid0);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_trace_tdest0 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->trace_tdest0.bind(*p_15_trace_tdest0);
        (*_glb_hdl_sc_channel_map).push_back(p_15_trace_tdest0);
        xsim_sc_channel<0, bool > *p_15_trace_tvalid0 = new xsim_sc_channel<0, bool >();
        sc_inst_15->trace_tvalid0.bind(*p_15_trace_tvalid0);
        (*_glb_hdl_sc_channel_map).push_back(p_15_trace_tvalid0);
        xsim_sc_channel<0, bool > *p_15_trace_tready1 = new xsim_sc_channel<0, bool >();
        sc_inst_15->trace_tready1.bind(*p_15_trace_tready1);
        p_15_trace_tready1->set_sv_netview_offsetfromdp(8552632);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_trace_tdata1 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->trace_tdata1.bind(*p_15_trace_tdata1);
        p_15_trace_tdata1->set_sv_netview_offsetfromdp(8552688);
        xsim_sc_channel<0, bool > *p_15_trace_tlast1 = new xsim_sc_channel<0, bool >();
        sc_inst_15->trace_tlast1.bind(*p_15_trace_tlast1);
        (*_glb_hdl_sc_channel_map).push_back(p_15_trace_tlast1);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_trace_tid1 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->trace_tid1.bind(*p_15_trace_tid1);
        (*_glb_hdl_sc_channel_map).push_back(p_15_trace_tid1);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_trace_tdest1 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->trace_tdest1.bind(*p_15_trace_tdest1);
        (*_glb_hdl_sc_channel_map).push_back(p_15_trace_tdest1);
        xsim_sc_channel<0, bool > *p_15_trace_tvalid1 = new xsim_sc_channel<0, bool >();
        sc_inst_15->trace_tvalid1.bind(*p_15_trace_tvalid1);
        (*_glb_hdl_sc_channel_map).push_back(p_15_trace_tvalid1);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_trace_tdata2 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->trace_tdata2.bind(*p_15_trace_tdata2);
        (*_glb_hdl_sc_channel_map).push_back(p_15_trace_tdata2);
        xsim_sc_channel<0, bool > *p_15_trace_tready2 = new xsim_sc_channel<0, bool >();
        sc_inst_15->trace_tready2.bind(*p_15_trace_tready2);
        p_15_trace_tready2->set_sv_netview_offsetfromdp(8553024);
        xsim_sc_channel<0, bool > *p_15_trace_tlast2 = new xsim_sc_channel<0, bool >();
        sc_inst_15->trace_tlast2.bind(*p_15_trace_tlast2);
        (*_glb_hdl_sc_channel_map).push_back(p_15_trace_tlast2);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_trace_tid2 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->trace_tid2.bind(*p_15_trace_tid2);
        (*_glb_hdl_sc_channel_map).push_back(p_15_trace_tid2);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_trace_tdest2 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->trace_tdest2.bind(*p_15_trace_tdest2);
        (*_glb_hdl_sc_channel_map).push_back(p_15_trace_tdest2);
        xsim_sc_channel<0, bool > *p_15_trace_tvalid2 = new xsim_sc_channel<0, bool >();
        sc_inst_15->trace_tvalid2.bind(*p_15_trace_tvalid2);
        (*_glb_hdl_sc_channel_map).push_back(p_15_trace_tvalid2);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_trace_tdata3 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->trace_tdata3.bind(*p_15_trace_tdata3);
        (*_glb_hdl_sc_channel_map).push_back(p_15_trace_tdata3);
        xsim_sc_channel<0, bool > *p_15_trace_tready3 = new xsim_sc_channel<0, bool >();
        sc_inst_15->trace_tready3.bind(*p_15_trace_tready3);
        p_15_trace_tready3->set_sv_netview_offsetfromdp(8553360);
        xsim_sc_channel<0, bool > *p_15_trace_tlast3 = new xsim_sc_channel<0, bool >();
        sc_inst_15->trace_tlast3.bind(*p_15_trace_tlast3);
        (*_glb_hdl_sc_channel_map).push_back(p_15_trace_tlast3);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_trace_tid3 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->trace_tid3.bind(*p_15_trace_tid3);
        (*_glb_hdl_sc_channel_map).push_back(p_15_trace_tid3);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_trace_tdest3 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->trace_tdest3.bind(*p_15_trace_tdest3);
        (*_glb_hdl_sc_channel_map).push_back(p_15_trace_tdest3);
        xsim_sc_channel<0, bool > *p_15_trace_tvalid3 = new xsim_sc_channel<0, bool >();
        sc_inst_15->trace_tvalid3.bind(*p_15_trace_tvalid3);
        (*_glb_hdl_sc_channel_map).push_back(p_15_trace_tvalid3);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_trace_tdata4 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->trace_tdata4.bind(*p_15_trace_tdata4);
        (*_glb_hdl_sc_channel_map).push_back(p_15_trace_tdata4);
        xsim_sc_channel<0, bool > *p_15_trace_tready4 = new xsim_sc_channel<0, bool >();
        sc_inst_15->trace_tready4.bind(*p_15_trace_tready4);
        p_15_trace_tready4->set_sv_netview_offsetfromdp(8553696);
        xsim_sc_channel<0, bool > *p_15_trace_tlast4 = new xsim_sc_channel<0, bool >();
        sc_inst_15->trace_tlast4.bind(*p_15_trace_tlast4);
        (*_glb_hdl_sc_channel_map).push_back(p_15_trace_tlast4);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_trace_tid4 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->trace_tid4.bind(*p_15_trace_tid4);
        (*_glb_hdl_sc_channel_map).push_back(p_15_trace_tid4);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_trace_tdest4 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->trace_tdest4.bind(*p_15_trace_tdest4);
        (*_glb_hdl_sc_channel_map).push_back(p_15_trace_tdest4);
        xsim_sc_channel<0, bool > *p_15_trace_tvalid4 = new xsim_sc_channel<0, bool >();
        sc_inst_15->trace_tvalid4.bind(*p_15_trace_tvalid4);
        (*_glb_hdl_sc_channel_map).push_back(p_15_trace_tvalid4);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_trace_tdata5 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->trace_tdata5.bind(*p_15_trace_tdata5);
        (*_glb_hdl_sc_channel_map).push_back(p_15_trace_tdata5);
        xsim_sc_channel<0, bool > *p_15_trace_tready5 = new xsim_sc_channel<0, bool >();
        sc_inst_15->trace_tready5.bind(*p_15_trace_tready5);
        p_15_trace_tready5->set_sv_netview_offsetfromdp(8554032);
        xsim_sc_channel<0, bool > *p_15_trace_tlast5 = new xsim_sc_channel<0, bool >();
        sc_inst_15->trace_tlast5.bind(*p_15_trace_tlast5);
        (*_glb_hdl_sc_channel_map).push_back(p_15_trace_tlast5);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_trace_tid5 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->trace_tid5.bind(*p_15_trace_tid5);
        (*_glb_hdl_sc_channel_map).push_back(p_15_trace_tid5);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_trace_tdest5 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->trace_tdest5.bind(*p_15_trace_tdest5);
        (*_glb_hdl_sc_channel_map).push_back(p_15_trace_tdest5);
        xsim_sc_channel<0, bool > *p_15_trace_tvalid5 = new xsim_sc_channel<0, bool >();
        sc_inst_15->trace_tvalid5.bind(*p_15_trace_tvalid5);
        (*_glb_hdl_sc_channel_map).push_back(p_15_trace_tvalid5);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_trace_tdata6 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->trace_tdata6.bind(*p_15_trace_tdata6);
        (*_glb_hdl_sc_channel_map).push_back(p_15_trace_tdata6);
        xsim_sc_channel<0, bool > *p_15_trace_tready6 = new xsim_sc_channel<0, bool >();
        sc_inst_15->trace_tready6.bind(*p_15_trace_tready6);
        p_15_trace_tready6->set_sv_netview_offsetfromdp(8554368);
        xsim_sc_channel<0, bool > *p_15_trace_tlast6 = new xsim_sc_channel<0, bool >();
        sc_inst_15->trace_tlast6.bind(*p_15_trace_tlast6);
        (*_glb_hdl_sc_channel_map).push_back(p_15_trace_tlast6);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_trace_tid6 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->trace_tid6.bind(*p_15_trace_tid6);
        (*_glb_hdl_sc_channel_map).push_back(p_15_trace_tid6);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_trace_tdest6 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->trace_tdest6.bind(*p_15_trace_tdest6);
        (*_glb_hdl_sc_channel_map).push_back(p_15_trace_tdest6);
        xsim_sc_channel<0, bool > *p_15_trace_tvalid6 = new xsim_sc_channel<0, bool >();
        sc_inst_15->trace_tvalid6.bind(*p_15_trace_tvalid6);
        (*_glb_hdl_sc_channel_map).push_back(p_15_trace_tvalid6);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->s_axi_awaddr.bind(*p_15_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_awaddr);
        xsim_sc_channel<0, bool > *p_15_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_awvalid.bind(*p_15_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_15_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_awready.bind(*p_15_s_axi_awready);
        p_15_s_axi_awready->set_sv_netview_offsetfromdp(8554760);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_15_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_15->s_axi_wdata.bind(*p_15_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s_axi_wstrb.bind(*p_15_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_15_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_wvalid.bind(*p_15_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_15_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_wready.bind(*p_15_s_axi_wready);
        p_15_s_axi_wready->set_sv_netview_offsetfromdp(8554984);
        xsim_sc_channel<0, bool > *p_15_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_bvalid.bind(*p_15_s_axi_bvalid);
        p_15_s_axi_bvalid->set_sv_netview_offsetfromdp(8555040);
        xsim_sc_channel<0, bool > *p_15_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_bready.bind(*p_15_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s_axi_bresp.bind(*p_15_s_axi_bresp);
        p_15_s_axi_bresp->set_sv_netview_offsetfromdp(8555152);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->s_axi_araddr.bind(*p_15_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_araddr);
        xsim_sc_channel<0, bool > *p_15_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_arvalid.bind(*p_15_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_15_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_arready.bind(*p_15_s_axi_arready);
        p_15_s_axi_arready->set_sv_netview_offsetfromdp(8555320);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_15_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_15->s_axi_rdata.bind(*p_15_s_axi_rdata);
        p_15_s_axi_rdata->set_sv_netview_offsetfromdp(8555376);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s_axi_rresp.bind(*p_15_s_axi_rresp);
        p_15_s_axi_rresp->set_sv_netview_offsetfromdp(8555432);
        xsim_sc_channel<0, bool > *p_15_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_rvalid.bind(*p_15_s_axi_rvalid);
        p_15_s_axi_rvalid->set_sv_netview_offsetfromdp(8555488);
        xsim_sc_channel<0, bool > *p_15_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_rready.bind(*p_15_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_rready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_s_axihub_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->s_axihub_awaddr.bind(*p_15_s_axihub_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axihub_awaddr);
        xsim_sc_channel<0, bool > *p_15_s_axihub_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axihub_awvalid.bind(*p_15_s_axihub_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axihub_awvalid);
        xsim_sc_channel<0, bool > *p_15_s_axihub_awready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axihub_awready.bind(*p_15_s_axihub_awready);
        p_15_s_axihub_awready->set_sv_netview_offsetfromdp(8555712);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_15_s_axihub_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_15->s_axihub_wdata.bind(*p_15_s_axihub_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axihub_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s_axihub_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s_axihub_wstrb.bind(*p_15_s_axihub_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axihub_wstrb);
        xsim_sc_channel<0, bool > *p_15_s_axihub_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axihub_wvalid.bind(*p_15_s_axihub_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axihub_wvalid);
        xsim_sc_channel<0, bool > *p_15_s_axihub_wready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axihub_wready.bind(*p_15_s_axihub_wready);
        p_15_s_axihub_wready->set_sv_netview_offsetfromdp(8555936);
        xsim_sc_channel<0, bool > *p_15_s_axihub_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axihub_bvalid.bind(*p_15_s_axihub_bvalid);
        p_15_s_axihub_bvalid->set_sv_netview_offsetfromdp(8555992);
        xsim_sc_channel<0, bool > *p_15_s_axihub_bready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axihub_bready.bind(*p_15_s_axihub_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axihub_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s_axihub_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s_axihub_bresp.bind(*p_15_s_axihub_bresp);
        p_15_s_axihub_bresp->set_sv_netview_offsetfromdp(8556104);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_s_axihub_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->s_axihub_araddr.bind(*p_15_s_axihub_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axihub_araddr);
        xsim_sc_channel<0, bool > *p_15_s_axihub_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axihub_arvalid.bind(*p_15_s_axihub_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axihub_arvalid);
        xsim_sc_channel<0, bool > *p_15_s_axihub_arready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axihub_arready.bind(*p_15_s_axihub_arready);
        p_15_s_axihub_arready->set_sv_netview_offsetfromdp(8556272);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_15_s_axihub_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_15->s_axihub_rdata.bind(*p_15_s_axihub_rdata);
        p_15_s_axihub_rdata->set_sv_netview_offsetfromdp(8556328);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s_axihub_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s_axihub_rresp.bind(*p_15_s_axihub_rresp);
        p_15_s_axihub_rresp->set_sv_netview_offsetfromdp(8556384);
        xsim_sc_channel<0, bool > *p_15_s_axihub_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axihub_rvalid.bind(*p_15_s_axihub_rvalid);
        p_15_s_axihub_rvalid->set_sv_netview_offsetfromdp(8556440);
        xsim_sc_channel<0, bool > *p_15_s_axihub_rready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axihub_rready.bind(*p_15_s_axihub_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axihub_rready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_15_s_aximm_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_15->s_aximm_awaddr.bind(*p_15_s_aximm_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_aximm_awaddr);
        xsim_sc_channel<0, bool > *p_15_s_aximm_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_aximm_awvalid.bind(*p_15_s_aximm_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_aximm_awvalid);
        xsim_sc_channel<0, bool > *p_15_s_aximm_awready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_aximm_awready.bind(*p_15_s_aximm_awready);
        p_15_s_aximm_awready->set_sv_netview_offsetfromdp(8556664);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_s_aximm_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->s_aximm_awlen.bind(*p_15_s_aximm_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_aximm_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_s_aximm_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->s_aximm_awsize.bind(*p_15_s_aximm_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_aximm_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s_aximm_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s_aximm_awburst.bind(*p_15_s_aximm_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_aximm_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_s_aximm_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->s_aximm_awid.bind(*p_15_s_aximm_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_aximm_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_s_aximm_wdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->s_aximm_wdata.bind(*p_15_s_aximm_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_aximm_wdata);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_s_aximm_wstrb = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->s_aximm_wstrb.bind(*p_15_s_aximm_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_aximm_wstrb);
        xsim_sc_channel<0, bool > *p_15_s_aximm_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_aximm_wvalid.bind(*p_15_s_aximm_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_aximm_wvalid);
        xsim_sc_channel<0, bool > *p_15_s_aximm_wready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_aximm_wready.bind(*p_15_s_aximm_wready);
        p_15_s_aximm_wready->set_sv_netview_offsetfromdp(8557112);
        xsim_sc_channel<0, bool > *p_15_s_aximm_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_aximm_bvalid.bind(*p_15_s_aximm_bvalid);
        p_15_s_aximm_bvalid->set_sv_netview_offsetfromdp(8557168);
        xsim_sc_channel<0, bool > *p_15_s_aximm_bready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_aximm_bready.bind(*p_15_s_aximm_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_aximm_bready);
        xsim_sc_channel<0, bool > *p_15_s_aximm_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_aximm_wlast.bind(*p_15_s_aximm_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_aximm_wlast);
        xsim_sc_channel<0, bool > *p_15_s_aximm_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_aximm_rlast.bind(*p_15_s_aximm_rlast);
        p_15_s_aximm_rlast->set_sv_netview_offsetfromdp(8557336);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s_aximm_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s_aximm_bresp.bind(*p_15_s_aximm_bresp);
        p_15_s_aximm_bresp->set_sv_netview_offsetfromdp(8557392);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_s_aximm_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->s_aximm_bid.bind(*p_15_s_aximm_bid);
        p_15_s_aximm_bid->set_sv_netview_offsetfromdp(8557448);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_15_s_aximm_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_15->s_aximm_araddr.bind(*p_15_s_aximm_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_aximm_araddr);
        xsim_sc_channel<0, bool > *p_15_s_aximm_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_aximm_arvalid.bind(*p_15_s_aximm_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_aximm_arvalid);
        xsim_sc_channel<0, bool > *p_15_s_aximm_arready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_aximm_arready.bind(*p_15_s_aximm_arready);
        p_15_s_aximm_arready->set_sv_netview_offsetfromdp(8557616);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_s_aximm_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->s_aximm_arlen.bind(*p_15_s_aximm_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_aximm_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_s_aximm_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->s_aximm_arsize.bind(*p_15_s_aximm_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_aximm_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s_aximm_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s_aximm_arburst.bind(*p_15_s_aximm_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_aximm_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_s_aximm_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->s_aximm_arid.bind(*p_15_s_aximm_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_aximm_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_s_aximm_rdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->s_aximm_rdata.bind(*p_15_s_aximm_rdata);
        p_15_s_aximm_rdata->set_sv_netview_offsetfromdp(8557896);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_s_aximm_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->s_aximm_rid.bind(*p_15_s_aximm_rid);
        p_15_s_aximm_rid->set_sv_netview_offsetfromdp(8557952);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s_aximm_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s_aximm_rresp.bind(*p_15_s_aximm_rresp);
        p_15_s_aximm_rresp->set_sv_netview_offsetfromdp(8558008);
        xsim_sc_channel<0, bool > *p_15_s_aximm_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_aximm_rvalid.bind(*p_15_s_aximm_rvalid);
        p_15_s_aximm_rvalid->set_sv_netview_offsetfromdp(8558064);
        xsim_sc_channel<0, bool > *p_15_s_aximm_rready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_aximm_rready.bind(*p_15_s_aximm_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_aximm_rready);
        sc_inst_16 = new pfm_dynamic_dpa_mon0_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_mon0");
        sc_inst_16->xsim_set_dbg_index(400);
        xsim_sc_channel<0, bool > *p_16_mon_clk = new xsim_sc_channel<0, bool >();
        sc_inst_16->mon_clk.bind(*p_16_mon_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_clk);
        xsim_sc_channel<0, bool > *p_16_mon_resetn = new xsim_sc_channel<0, bool >();
        sc_inst_16->mon_resetn.bind(*p_16_mon_resetn);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_resetn);
        xsim_sc_channel<0, bool > *p_16_trace_clk = new xsim_sc_channel<0, bool >();
        sc_inst_16->trace_clk.bind(*p_16_trace_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_16_trace_clk);
        xsim_sc_channel<0, bool > *p_16_trace_rst = new xsim_sc_channel<0, bool >();
        sc_inst_16->trace_rst.bind(*p_16_trace_rst);
        (*_glb_hdl_sc_channel_map).push_back(p_16_trace_rst);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_16_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_16->s_axi_awaddr.bind(*p_16_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_16_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_16->s_axi_awprot.bind(*p_16_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_16_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_awvalid.bind(*p_16_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_16_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_awready.bind(*p_16_s_axi_awready);
        p_16_s_axi_awready->set_sv_netview_offsetfromdp(8558616);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_16_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_16->s_axi_wdata.bind(*p_16_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->s_axi_wstrb.bind(*p_16_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_16_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_wvalid.bind(*p_16_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_16_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_wready.bind(*p_16_s_axi_wready);
        p_16_s_axi_wready->set_sv_netview_offsetfromdp(8558840);
        xsim_sc_channel<0, bool > *p_16_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_bvalid.bind(*p_16_s_axi_bvalid);
        p_16_s_axi_bvalid->set_sv_netview_offsetfromdp(8558896);
        xsim_sc_channel<0, bool > *p_16_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_bready.bind(*p_16_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->s_axi_bresp.bind(*p_16_s_axi_bresp);
        p_16_s_axi_bresp->set_sv_netview_offsetfromdp(8559008);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_16_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_16->s_axi_araddr.bind(*p_16_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_16_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_16->s_axi_arprot.bind(*p_16_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_16_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_arvalid.bind(*p_16_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_16_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_arready.bind(*p_16_s_axi_arready);
        p_16_s_axi_arready->set_sv_netview_offsetfromdp(8559232);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_16_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_16->s_axi_rdata.bind(*p_16_s_axi_rdata);
        p_16_s_axi_rdata->set_sv_netview_offsetfromdp(8559288);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->s_axi_rresp.bind(*p_16_s_axi_rresp);
        p_16_s_axi_rresp->set_sv_netview_offsetfromdp(8559344);
        xsim_sc_channel<0, bool > *p_16_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_rvalid.bind(*p_16_s_axi_rvalid);
        p_16_s_axi_rvalid->set_sv_netview_offsetfromdp(8559400);
        xsim_sc_channel<0, bool > *p_16_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_rready.bind(*p_16_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_rready);
        xsim_sc_channel<0, bool > *p_16_mon_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_16->mon_AWVALID.bind(*p_16_mon_AWVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_AWVALID);
        xsim_sc_channel<0, bool > *p_16_mon_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_16->mon_AWREADY.bind(*p_16_mon_AWREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_AWREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_16_mon_AWADDR = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_16->mon_AWADDR.bind(*p_16_mon_AWADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_AWADDR);
        xsim_sc_channel<0, bool > *p_16_mon_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_16->mon_WVALID.bind(*p_16_mon_WVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_WVALID);
        xsim_sc_channel<0, bool > *p_16_mon_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_16->mon_WREADY.bind(*p_16_mon_WREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_WREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_16_mon_WDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_16->mon_WDATA.bind(*p_16_mon_WDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_WDATA);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_mon_WSTRB = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->mon_WSTRB.bind(*p_16_mon_WSTRB);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_WSTRB);
        xsim_sc_channel<0, bool > *p_16_mon_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_16->mon_ARVALID.bind(*p_16_mon_ARVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_ARVALID);
        xsim_sc_channel<0, bool > *p_16_mon_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_16->mon_ARREADY.bind(*p_16_mon_ARREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_ARREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_16_mon_ARADDR = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_16->mon_ARADDR.bind(*p_16_mon_ARADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_ARADDR);
        xsim_sc_channel<0, bool > *p_16_mon_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_16->mon_RVALID.bind(*p_16_mon_RVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_RVALID);
        xsim_sc_channel<0, bool > *p_16_mon_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_16->mon_RREADY.bind(*p_16_mon_RREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_RREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_16_mon_RDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_16->mon_RDATA.bind(*p_16_mon_RDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_RDATA);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_mon_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->mon_RRESP.bind(*p_16_mon_RRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_RRESP);
        xsim_sc_channel<0, bool > *p_16_mon_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_16->mon_BVALID.bind(*p_16_mon_BVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_BVALID);
        xsim_sc_channel<0, bool > *p_16_mon_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_16->mon_BREADY.bind(*p_16_mon_BREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_BREADY);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_mon_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->mon_BRESP.bind(*p_16_mon_BRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_BRESP);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_m_axis_tready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->m_axis_tready.bind(*p_16_m_axis_tready);
        (*_glb_hdl_sc_channel_map).push_back(p_16_m_axis_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_16_m_axis_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_16->m_axis_tdata.bind(*p_16_m_axis_tdata);
        p_16_m_axis_tdata->set_sv_netview_offsetfromdp(8560520);
        xsim_sc_channel<0, bool > *p_16_m_axis_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_16->m_axis_tlast.bind(*p_16_m_axis_tlast);
        p_16_m_axis_tlast->set_sv_netview_offsetfromdp(8560576);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_16_m_axis_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_16->m_axis_tid.bind(*p_16_m_axis_tid);
        p_16_m_axis_tid->set_sv_netview_offsetfromdp(8560632);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_16_m_axis_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_16->m_axis_tdest.bind(*p_16_m_axis_tdest);
        p_16_m_axis_tdest->set_sv_netview_offsetfromdp(8560688);
        xsim_sc_channel<0, bool > *p_16_m_axis_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->m_axis_tvalid.bind(*p_16_m_axis_tvalid);
        p_16_m_axis_tvalid->set_sv_netview_offsetfromdp(8560744);
        xsim_sc_channel<0, bool > *p_16_ap_continue = new xsim_sc_channel<0, bool >();
        sc_inst_16->ap_continue.bind(*p_16_ap_continue);
        (*_glb_hdl_sc_channel_map).push_back(p_16_ap_continue);
        xsim_sc_channel<0, bool > *p_16_ap_ready = new xsim_sc_channel<0, bool >();
        sc_inst_16->ap_ready.bind(*p_16_ap_ready);
        (*_glb_hdl_sc_channel_map).push_back(p_16_ap_ready);
        xsim_sc_channel<0, bool > *p_16_ap_start = new xsim_sc_channel<0, bool >();
        sc_inst_16->ap_start.bind(*p_16_ap_start);
        (*_glb_hdl_sc_channel_map).push_back(p_16_ap_start);
        xsim_sc_channel<0, bool > *p_16_ap_idle = new xsim_sc_channel<0, bool >();
        sc_inst_16->ap_idle.bind(*p_16_ap_idle);
        (*_glb_hdl_sc_channel_map).push_back(p_16_ap_idle);
        xsim_sc_channel<0, bool > *p_16_ap_done = new xsim_sc_channel<0, bool >();
        sc_inst_16->ap_done.bind(*p_16_ap_done);
        (*_glb_hdl_sc_channel_map).push_back(p_16_ap_done);
        sc_inst_17 = new pfm_dynamic_dpa_mon1_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_mon1");
        sc_inst_17->xsim_set_dbg_index(401);
        xsim_sc_channel<0, bool > *p_17_mon_clk = new xsim_sc_channel<0, bool >();
        sc_inst_17->mon_clk.bind(*p_17_mon_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_17_mon_clk);
        xsim_sc_channel<0, bool > *p_17_mon_resetn = new xsim_sc_channel<0, bool >();
        sc_inst_17->mon_resetn.bind(*p_17_mon_resetn);
        (*_glb_hdl_sc_channel_map).push_back(p_17_mon_resetn);
        xsim_sc_channel<0, bool > *p_17_trace_clk = new xsim_sc_channel<0, bool >();
        sc_inst_17->trace_clk.bind(*p_17_trace_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_17_trace_clk);
        xsim_sc_channel<0, bool > *p_17_trace_rst = new xsim_sc_channel<0, bool >();
        sc_inst_17->trace_rst.bind(*p_17_trace_rst);
        (*_glb_hdl_sc_channel_map).push_back(p_17_trace_rst);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_17_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_17->s_axi_awaddr.bind(*p_17_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_awaddr);
        xsim_sc_channel<0, bool > *p_17_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_awvalid.bind(*p_17_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_17_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_awready.bind(*p_17_s_axi_awready);
        p_17_s_axi_awready->set_sv_netview_offsetfromdp(8561464);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_17_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_17->s_axi_wdata.bind(*p_17_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->s_axi_wstrb.bind(*p_17_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_17_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_wvalid.bind(*p_17_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_17_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_wready.bind(*p_17_s_axi_wready);
        p_17_s_axi_wready->set_sv_netview_offsetfromdp(8561688);
        xsim_sc_channel<0, bool > *p_17_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_bvalid.bind(*p_17_s_axi_bvalid);
        p_17_s_axi_bvalid->set_sv_netview_offsetfromdp(8561744);
        xsim_sc_channel<0, bool > *p_17_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_bready.bind(*p_17_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->s_axi_bresp.bind(*p_17_s_axi_bresp);
        p_17_s_axi_bresp->set_sv_netview_offsetfromdp(8561856);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_17_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_17->s_axi_araddr.bind(*p_17_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_araddr);
        xsim_sc_channel<0, bool > *p_17_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_arvalid.bind(*p_17_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_17_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_arready.bind(*p_17_s_axi_arready);
        p_17_s_axi_arready->set_sv_netview_offsetfromdp(8562024);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_17_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_17->s_axi_rdata.bind(*p_17_s_axi_rdata);
        p_17_s_axi_rdata->set_sv_netview_offsetfromdp(8562080);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->s_axi_rresp.bind(*p_17_s_axi_rresp);
        p_17_s_axi_rresp->set_sv_netview_offsetfromdp(8562136);
        xsim_sc_channel<0, bool > *p_17_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_rvalid.bind(*p_17_s_axi_rvalid);
        p_17_s_axi_rvalid->set_sv_netview_offsetfromdp(8562192);
        xsim_sc_channel<0, bool > *p_17_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_rready.bind(*p_17_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_rready);
        xsim_sc_channel<0, bool > *p_17_mon_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_17->mon_AWVALID.bind(*p_17_mon_AWVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_17_mon_AWVALID);
        xsim_sc_channel<0, bool > *p_17_mon_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_17->mon_AWREADY.bind(*p_17_mon_AWREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_17_mon_AWREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_17_mon_AWADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_17->mon_AWADDR.bind(*p_17_mon_AWADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_17_mon_AWADDR);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_17_mon_AWID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_17->mon_AWID.bind(*p_17_mon_AWID);
        (*_glb_hdl_sc_channel_map).push_back(p_17_mon_AWID);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_17_mon_AWLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_17->mon_AWLEN.bind(*p_17_mon_AWLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_17_mon_AWLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_17_mon_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_17->mon_AWSIZE.bind(*p_17_mon_AWSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_17_mon_AWSIZE);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_mon_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->mon_AWBURST.bind(*p_17_mon_AWBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_17_mon_AWBURST);
        xsim_sc_channel<0, bool > *p_17_mon_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_17->mon_WVALID.bind(*p_17_mon_WVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_17_mon_WVALID);
        xsim_sc_channel<0, bool > *p_17_mon_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_17->mon_WREADY.bind(*p_17_mon_WREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_17_mon_WREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_17_mon_WDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_17->mon_WDATA.bind(*p_17_mon_WDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_17_mon_WDATA);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_17_mon_WSTRB = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_17->mon_WSTRB.bind(*p_17_mon_WSTRB);
        (*_glb_hdl_sc_channel_map).push_back(p_17_mon_WSTRB);
        xsim_sc_channel<0, bool > *p_17_mon_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_17->mon_WLAST.bind(*p_17_mon_WLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_17_mon_WLAST);
        xsim_sc_channel<0, bool > *p_17_mon_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_17->mon_ARVALID.bind(*p_17_mon_ARVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_17_mon_ARVALID);
        xsim_sc_channel<0, bool > *p_17_mon_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_17->mon_ARREADY.bind(*p_17_mon_ARREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_17_mon_ARREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_17_mon_ARADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_17->mon_ARADDR.bind(*p_17_mon_ARADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_17_mon_ARADDR);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_17_mon_ARID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_17->mon_ARID.bind(*p_17_mon_ARID);
        (*_glb_hdl_sc_channel_map).push_back(p_17_mon_ARID);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_17_mon_ARLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_17->mon_ARLEN.bind(*p_17_mon_ARLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_17_mon_ARLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_17_mon_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_17->mon_ARSIZE.bind(*p_17_mon_ARSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_17_mon_ARSIZE);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_mon_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->mon_ARBURST.bind(*p_17_mon_ARBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_17_mon_ARBURST);
        xsim_sc_channel<0, bool > *p_17_mon_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_17->mon_RVALID.bind(*p_17_mon_RVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_17_mon_RVALID);
        xsim_sc_channel<0, bool > *p_17_mon_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_17->mon_RREADY.bind(*p_17_mon_RREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_17_mon_RREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_17_mon_RDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_17->mon_RDATA.bind(*p_17_mon_RDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_17_mon_RDATA);
        xsim_sc_channel<0, bool > *p_17_mon_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_17->mon_RLAST.bind(*p_17_mon_RLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_17_mon_RLAST);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_17_mon_RID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_17->mon_RID.bind(*p_17_mon_RID);
        (*_glb_hdl_sc_channel_map).push_back(p_17_mon_RID);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_mon_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->mon_RRESP.bind(*p_17_mon_RRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_17_mon_RRESP);
        xsim_sc_channel<0, bool > *p_17_mon_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_17->mon_BVALID.bind(*p_17_mon_BVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_17_mon_BVALID);
        xsim_sc_channel<0, bool > *p_17_mon_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_17->mon_BREADY.bind(*p_17_mon_BREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_17_mon_BREADY);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_mon_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->mon_BRESP.bind(*p_17_mon_BRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_17_mon_BRESP);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_17_mon_BID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_17->mon_BID.bind(*p_17_mon_BID);
        (*_glb_hdl_sc_channel_map).push_back(p_17_mon_BID);
        xsim_sc_channel<0, bool > *p_17_m_axis_rd_tready = new xsim_sc_channel<0, bool >();
        sc_inst_17->m_axis_rd_tready.bind(*p_17_m_axis_rd_tready);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m_axis_rd_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_17_m_axis_rd_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_17->m_axis_rd_tdata.bind(*p_17_m_axis_rd_tdata);
        p_17_m_axis_rd_tdata->set_sv_netview_offsetfromdp(8563984);
        xsim_sc_channel<0, bool > *p_17_m_axis_rd_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_17->m_axis_rd_tlast.bind(*p_17_m_axis_rd_tlast);
        p_17_m_axis_rd_tlast->set_sv_netview_offsetfromdp(8564040);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_17_m_axis_rd_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_17->m_axis_rd_tid.bind(*p_17_m_axis_rd_tid);
        p_17_m_axis_rd_tid->set_sv_netview_offsetfromdp(8564096);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_17_m_axis_rd_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_17->m_axis_rd_tdest.bind(*p_17_m_axis_rd_tdest);
        p_17_m_axis_rd_tdest->set_sv_netview_offsetfromdp(8564152);
        xsim_sc_channel<0, bool > *p_17_m_axis_wr_tready = new xsim_sc_channel<0, bool >();
        sc_inst_17->m_axis_wr_tready.bind(*p_17_m_axis_wr_tready);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m_axis_wr_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_17_m_axis_wr_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_17->m_axis_wr_tdata.bind(*p_17_m_axis_wr_tdata);
        p_17_m_axis_wr_tdata->set_sv_netview_offsetfromdp(8564264);
        xsim_sc_channel<0, bool > *p_17_m_axis_wr_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_17->m_axis_wr_tlast.bind(*p_17_m_axis_wr_tlast);
        p_17_m_axis_wr_tlast->set_sv_netview_offsetfromdp(8564320);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_17_m_axis_wr_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_17->m_axis_wr_tid.bind(*p_17_m_axis_wr_tid);
        p_17_m_axis_wr_tid->set_sv_netview_offsetfromdp(8564376);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_17_m_axis_wr_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_17->m_axis_wr_tdest.bind(*p_17_m_axis_wr_tdest);
        p_17_m_axis_wr_tdest->set_sv_netview_offsetfromdp(8564432);
        xsim_sc_channel<0, bool > *p_17_m_axis_wr_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->m_axis_wr_tvalid.bind(*p_17_m_axis_wr_tvalid);
        p_17_m_axis_wr_tvalid->set_sv_netview_offsetfromdp(8564488);
        xsim_sc_channel<0, bool > *p_17_m_axis_rd_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->m_axis_rd_tvalid.bind(*p_17_m_axis_rd_tvalid);
        p_17_m_axis_rd_tvalid->set_sv_netview_offsetfromdp(8564544);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_17_s_axi_awaddr_mon = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_17->s_axi_awaddr_mon.bind(*p_17_s_axi_awaddr_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_awaddr_mon);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_17_s_axi_awprot_mon = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_17->s_axi_awprot_mon.bind(*p_17_s_axi_awprot_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_awprot_mon);
        xsim_sc_channel<0, bool > *p_17_s_axi_awvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_awvalid_mon.bind(*p_17_s_axi_awvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_awvalid_mon);
        xsim_sc_channel<0, bool > *p_17_s_axi_awready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_awready_mon.bind(*p_17_s_axi_awready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_awready_mon);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_17_s_axi_wdata_mon = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_17->s_axi_wdata_mon.bind(*p_17_s_axi_wdata_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_wdata_mon);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_s_axi_wstrb_mon = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->s_axi_wstrb_mon.bind(*p_17_s_axi_wstrb_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_wstrb_mon);
        xsim_sc_channel<0, bool > *p_17_s_axi_wvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_wvalid_mon.bind(*p_17_s_axi_wvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_wvalid_mon);
        xsim_sc_channel<0, bool > *p_17_s_axi_wready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_wready_mon.bind(*p_17_s_axi_wready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_wready_mon);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_s_axi_bresp_mon = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->s_axi_bresp_mon.bind(*p_17_s_axi_bresp_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_bresp_mon);
        xsim_sc_channel<0, bool > *p_17_s_axi_bvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_bvalid_mon.bind(*p_17_s_axi_bvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_bvalid_mon);
        xsim_sc_channel<0, bool > *p_17_s_axi_bready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_bready_mon.bind(*p_17_s_axi_bready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_bready_mon);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_17_s_axi_araddr_mon = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_17->s_axi_araddr_mon.bind(*p_17_s_axi_araddr_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_araddr_mon);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_17_s_axi_arprot_mon = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_17->s_axi_arprot_mon.bind(*p_17_s_axi_arprot_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_arprot_mon);
        xsim_sc_channel<0, bool > *p_17_s_axi_arvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_arvalid_mon.bind(*p_17_s_axi_arvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_arvalid_mon);
        xsim_sc_channel<0, bool > *p_17_s_axi_arready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_arready_mon.bind(*p_17_s_axi_arready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_arready_mon);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_17_s_axi_rdata_mon = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_17->s_axi_rdata_mon.bind(*p_17_s_axi_rdata_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_rdata_mon);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_s_axi_rresp_mon = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->s_axi_rresp_mon.bind(*p_17_s_axi_rresp_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_rresp_mon);
        xsim_sc_channel<0, bool > *p_17_s_axi_rvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_rvalid_mon.bind(*p_17_s_axi_rvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_rvalid_mon);
        xsim_sc_channel<0, bool > *p_17_s_axi_rready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_rready_mon.bind(*p_17_s_axi_rready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_rready_mon);
        sc_inst_18 = new pfm_dynamic_dpa_mon2_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_mon2");
        sc_inst_18->xsim_set_dbg_index(402);
        xsim_sc_channel<0, bool > *p_18_mon_clk = new xsim_sc_channel<0, bool >();
        sc_inst_18->mon_clk.bind(*p_18_mon_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_18_mon_clk);
        xsim_sc_channel<0, bool > *p_18_mon_resetn = new xsim_sc_channel<0, bool >();
        sc_inst_18->mon_resetn.bind(*p_18_mon_resetn);
        (*_glb_hdl_sc_channel_map).push_back(p_18_mon_resetn);
        xsim_sc_channel<0, bool > *p_18_trace_clk = new xsim_sc_channel<0, bool >();
        sc_inst_18->trace_clk.bind(*p_18_trace_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_18_trace_clk);
        xsim_sc_channel<0, bool > *p_18_trace_rst = new xsim_sc_channel<0, bool >();
        sc_inst_18->trace_rst.bind(*p_18_trace_rst);
        (*_glb_hdl_sc_channel_map).push_back(p_18_trace_rst);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_18_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_18->s_axi_awaddr.bind(*p_18_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_awaddr);
        xsim_sc_channel<0, bool > *p_18_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_awvalid.bind(*p_18_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_18_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_awready.bind(*p_18_s_axi_awready);
        p_18_s_axi_awready->set_sv_netview_offsetfromdp(8566048);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_18_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_18->s_axi_wdata.bind(*p_18_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->s_axi_wstrb.bind(*p_18_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_18_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_wvalid.bind(*p_18_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_18_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_wready.bind(*p_18_s_axi_wready);
        p_18_s_axi_wready->set_sv_netview_offsetfromdp(8566272);
        xsim_sc_channel<0, bool > *p_18_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_bvalid.bind(*p_18_s_axi_bvalid);
        p_18_s_axi_bvalid->set_sv_netview_offsetfromdp(8566328);
        xsim_sc_channel<0, bool > *p_18_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_bready.bind(*p_18_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->s_axi_bresp.bind(*p_18_s_axi_bresp);
        p_18_s_axi_bresp->set_sv_netview_offsetfromdp(8566440);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_18_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_18->s_axi_araddr.bind(*p_18_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_araddr);
        xsim_sc_channel<0, bool > *p_18_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_arvalid.bind(*p_18_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_18_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_arready.bind(*p_18_s_axi_arready);
        p_18_s_axi_arready->set_sv_netview_offsetfromdp(8566608);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_18_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_18->s_axi_rdata.bind(*p_18_s_axi_rdata);
        p_18_s_axi_rdata->set_sv_netview_offsetfromdp(8566664);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->s_axi_rresp.bind(*p_18_s_axi_rresp);
        p_18_s_axi_rresp->set_sv_netview_offsetfromdp(8566720);
        xsim_sc_channel<0, bool > *p_18_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_rvalid.bind(*p_18_s_axi_rvalid);
        p_18_s_axi_rvalid->set_sv_netview_offsetfromdp(8566776);
        xsim_sc_channel<0, bool > *p_18_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_rready.bind(*p_18_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_rready);
        xsim_sc_channel<0, bool > *p_18_mon_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_18->mon_AWVALID.bind(*p_18_mon_AWVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_18_mon_AWVALID);
        xsim_sc_channel<0, bool > *p_18_mon_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->mon_AWREADY.bind(*p_18_mon_AWREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_18_mon_AWREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_18_mon_AWADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_18->mon_AWADDR.bind(*p_18_mon_AWADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_18_mon_AWADDR);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_18_mon_AWID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_18->mon_AWID.bind(*p_18_mon_AWID);
        (*_glb_hdl_sc_channel_map).push_back(p_18_mon_AWID);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_18_mon_AWLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_18->mon_AWLEN.bind(*p_18_mon_AWLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_18_mon_AWLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_18_mon_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_18->mon_AWSIZE.bind(*p_18_mon_AWSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_18_mon_AWSIZE);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_mon_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->mon_AWBURST.bind(*p_18_mon_AWBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_18_mon_AWBURST);
        xsim_sc_channel<0, bool > *p_18_mon_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_18->mon_WVALID.bind(*p_18_mon_WVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_18_mon_WVALID);
        xsim_sc_channel<0, bool > *p_18_mon_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->mon_WREADY.bind(*p_18_mon_WREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_18_mon_WREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_18_mon_WDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_18->mon_WDATA.bind(*p_18_mon_WDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_18_mon_WDATA);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_18_mon_WSTRB = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_18->mon_WSTRB.bind(*p_18_mon_WSTRB);
        (*_glb_hdl_sc_channel_map).push_back(p_18_mon_WSTRB);
        xsim_sc_channel<0, bool > *p_18_mon_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_18->mon_WLAST.bind(*p_18_mon_WLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_18_mon_WLAST);
        xsim_sc_channel<0, bool > *p_18_mon_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_18->mon_ARVALID.bind(*p_18_mon_ARVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_18_mon_ARVALID);
        xsim_sc_channel<0, bool > *p_18_mon_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->mon_ARREADY.bind(*p_18_mon_ARREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_18_mon_ARREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_18_mon_ARADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_18->mon_ARADDR.bind(*p_18_mon_ARADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_18_mon_ARADDR);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_18_mon_ARID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_18->mon_ARID.bind(*p_18_mon_ARID);
        (*_glb_hdl_sc_channel_map).push_back(p_18_mon_ARID);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_18_mon_ARLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_18->mon_ARLEN.bind(*p_18_mon_ARLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_18_mon_ARLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_18_mon_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_18->mon_ARSIZE.bind(*p_18_mon_ARSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_18_mon_ARSIZE);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_mon_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->mon_ARBURST.bind(*p_18_mon_ARBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_18_mon_ARBURST);
        xsim_sc_channel<0, bool > *p_18_mon_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_18->mon_RVALID.bind(*p_18_mon_RVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_18_mon_RVALID);
        xsim_sc_channel<0, bool > *p_18_mon_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->mon_RREADY.bind(*p_18_mon_RREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_18_mon_RREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_18_mon_RDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_18->mon_RDATA.bind(*p_18_mon_RDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_18_mon_RDATA);
        xsim_sc_channel<0, bool > *p_18_mon_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_18->mon_RLAST.bind(*p_18_mon_RLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_18_mon_RLAST);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_18_mon_RID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_18->mon_RID.bind(*p_18_mon_RID);
        (*_glb_hdl_sc_channel_map).push_back(p_18_mon_RID);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_mon_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->mon_RRESP.bind(*p_18_mon_RRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_18_mon_RRESP);
        xsim_sc_channel<0, bool > *p_18_mon_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_18->mon_BVALID.bind(*p_18_mon_BVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_18_mon_BVALID);
        xsim_sc_channel<0, bool > *p_18_mon_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->mon_BREADY.bind(*p_18_mon_BREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_18_mon_BREADY);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_mon_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->mon_BRESP.bind(*p_18_mon_BRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_18_mon_BRESP);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_18_mon_BID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_18->mon_BID.bind(*p_18_mon_BID);
        (*_glb_hdl_sc_channel_map).push_back(p_18_mon_BID);
        xsim_sc_channel<0, bool > *p_18_m_axis_rd_tready = new xsim_sc_channel<0, bool >();
        sc_inst_18->m_axis_rd_tready.bind(*p_18_m_axis_rd_tready);
        (*_glb_hdl_sc_channel_map).push_back(p_18_m_axis_rd_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_18_m_axis_rd_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_18->m_axis_rd_tdata.bind(*p_18_m_axis_rd_tdata);
        p_18_m_axis_rd_tdata->set_sv_netview_offsetfromdp(8568568);
        xsim_sc_channel<0, bool > *p_18_m_axis_rd_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_18->m_axis_rd_tlast.bind(*p_18_m_axis_rd_tlast);
        p_18_m_axis_rd_tlast->set_sv_netview_offsetfromdp(8568624);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_18_m_axis_rd_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_18->m_axis_rd_tid.bind(*p_18_m_axis_rd_tid);
        p_18_m_axis_rd_tid->set_sv_netview_offsetfromdp(8568680);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_18_m_axis_rd_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_18->m_axis_rd_tdest.bind(*p_18_m_axis_rd_tdest);
        p_18_m_axis_rd_tdest->set_sv_netview_offsetfromdp(8568736);
        xsim_sc_channel<0, bool > *p_18_m_axis_wr_tready = new xsim_sc_channel<0, bool >();
        sc_inst_18->m_axis_wr_tready.bind(*p_18_m_axis_wr_tready);
        (*_glb_hdl_sc_channel_map).push_back(p_18_m_axis_wr_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_18_m_axis_wr_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_18->m_axis_wr_tdata.bind(*p_18_m_axis_wr_tdata);
        p_18_m_axis_wr_tdata->set_sv_netview_offsetfromdp(8568848);
        xsim_sc_channel<0, bool > *p_18_m_axis_wr_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_18->m_axis_wr_tlast.bind(*p_18_m_axis_wr_tlast);
        p_18_m_axis_wr_tlast->set_sv_netview_offsetfromdp(8568904);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_18_m_axis_wr_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_18->m_axis_wr_tid.bind(*p_18_m_axis_wr_tid);
        p_18_m_axis_wr_tid->set_sv_netview_offsetfromdp(8568960);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_18_m_axis_wr_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_18->m_axis_wr_tdest.bind(*p_18_m_axis_wr_tdest);
        p_18_m_axis_wr_tdest->set_sv_netview_offsetfromdp(8569016);
        xsim_sc_channel<0, bool > *p_18_m_axis_wr_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_18->m_axis_wr_tvalid.bind(*p_18_m_axis_wr_tvalid);
        p_18_m_axis_wr_tvalid->set_sv_netview_offsetfromdp(8569072);
        xsim_sc_channel<0, bool > *p_18_m_axis_rd_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_18->m_axis_rd_tvalid.bind(*p_18_m_axis_rd_tvalid);
        p_18_m_axis_rd_tvalid->set_sv_netview_offsetfromdp(8569128);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_18_s_axi_awaddr_mon = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_18->s_axi_awaddr_mon.bind(*p_18_s_axi_awaddr_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_awaddr_mon);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_18_s_axi_awprot_mon = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_18->s_axi_awprot_mon.bind(*p_18_s_axi_awprot_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_awprot_mon);
        xsim_sc_channel<0, bool > *p_18_s_axi_awvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_awvalid_mon.bind(*p_18_s_axi_awvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_awvalid_mon);
        xsim_sc_channel<0, bool > *p_18_s_axi_awready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_awready_mon.bind(*p_18_s_axi_awready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_awready_mon);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_18_s_axi_wdata_mon = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_18->s_axi_wdata_mon.bind(*p_18_s_axi_wdata_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_wdata_mon);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_s_axi_wstrb_mon = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->s_axi_wstrb_mon.bind(*p_18_s_axi_wstrb_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_wstrb_mon);
        xsim_sc_channel<0, bool > *p_18_s_axi_wvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_wvalid_mon.bind(*p_18_s_axi_wvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_wvalid_mon);
        xsim_sc_channel<0, bool > *p_18_s_axi_wready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_wready_mon.bind(*p_18_s_axi_wready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_wready_mon);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_s_axi_bresp_mon = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->s_axi_bresp_mon.bind(*p_18_s_axi_bresp_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_bresp_mon);
        xsim_sc_channel<0, bool > *p_18_s_axi_bvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_bvalid_mon.bind(*p_18_s_axi_bvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_bvalid_mon);
        xsim_sc_channel<0, bool > *p_18_s_axi_bready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_bready_mon.bind(*p_18_s_axi_bready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_bready_mon);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_18_s_axi_araddr_mon = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_18->s_axi_araddr_mon.bind(*p_18_s_axi_araddr_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_araddr_mon);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_18_s_axi_arprot_mon = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_18->s_axi_arprot_mon.bind(*p_18_s_axi_arprot_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_arprot_mon);
        xsim_sc_channel<0, bool > *p_18_s_axi_arvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_arvalid_mon.bind(*p_18_s_axi_arvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_arvalid_mon);
        xsim_sc_channel<0, bool > *p_18_s_axi_arready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_arready_mon.bind(*p_18_s_axi_arready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_arready_mon);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_18_s_axi_rdata_mon = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_18->s_axi_rdata_mon.bind(*p_18_s_axi_rdata_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_rdata_mon);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_s_axi_rresp_mon = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->s_axi_rresp_mon.bind(*p_18_s_axi_rresp_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_rresp_mon);
        xsim_sc_channel<0, bool > *p_18_s_axi_rvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_rvalid_mon.bind(*p_18_s_axi_rvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_rvalid_mon);
        xsim_sc_channel<0, bool > *p_18_s_axi_rready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_rready_mon.bind(*p_18_s_axi_rready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_rready_mon);
        sc_inst_19 = new pfm_dynamic_dpa_mon3_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_mon3");
        sc_inst_19->xsim_set_dbg_index(403);
        xsim_sc_channel<0, bool > *p_19_mon_clk = new xsim_sc_channel<0, bool >();
        sc_inst_19->mon_clk.bind(*p_19_mon_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_19_mon_clk);
        xsim_sc_channel<0, bool > *p_19_mon_resetn = new xsim_sc_channel<0, bool >();
        sc_inst_19->mon_resetn.bind(*p_19_mon_resetn);
        (*_glb_hdl_sc_channel_map).push_back(p_19_mon_resetn);
        xsim_sc_channel<0, bool > *p_19_trace_clk = new xsim_sc_channel<0, bool >();
        sc_inst_19->trace_clk.bind(*p_19_trace_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_19_trace_clk);
        xsim_sc_channel<0, bool > *p_19_trace_rst = new xsim_sc_channel<0, bool >();
        sc_inst_19->trace_rst.bind(*p_19_trace_rst);
        (*_glb_hdl_sc_channel_map).push_back(p_19_trace_rst);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_19_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_19->s_axi_awaddr.bind(*p_19_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_awaddr);
        xsim_sc_channel<0, bool > *p_19_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_awvalid.bind(*p_19_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_19_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_awready.bind(*p_19_s_axi_awready);
        p_19_s_axi_awready->set_sv_netview_offsetfromdp(8570632);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_19_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_19->s_axi_wdata.bind(*p_19_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->s_axi_wstrb.bind(*p_19_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_19_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_wvalid.bind(*p_19_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_19_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_wready.bind(*p_19_s_axi_wready);
        p_19_s_axi_wready->set_sv_netview_offsetfromdp(8570856);
        xsim_sc_channel<0, bool > *p_19_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_bvalid.bind(*p_19_s_axi_bvalid);
        p_19_s_axi_bvalid->set_sv_netview_offsetfromdp(8570912);
        xsim_sc_channel<0, bool > *p_19_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_bready.bind(*p_19_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->s_axi_bresp.bind(*p_19_s_axi_bresp);
        p_19_s_axi_bresp->set_sv_netview_offsetfromdp(8571024);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_19_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_19->s_axi_araddr.bind(*p_19_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_araddr);
        xsim_sc_channel<0, bool > *p_19_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_arvalid.bind(*p_19_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_19_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_arready.bind(*p_19_s_axi_arready);
        p_19_s_axi_arready->set_sv_netview_offsetfromdp(8571192);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_19_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_19->s_axi_rdata.bind(*p_19_s_axi_rdata);
        p_19_s_axi_rdata->set_sv_netview_offsetfromdp(8571248);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->s_axi_rresp.bind(*p_19_s_axi_rresp);
        p_19_s_axi_rresp->set_sv_netview_offsetfromdp(8571304);
        xsim_sc_channel<0, bool > *p_19_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_rvalid.bind(*p_19_s_axi_rvalid);
        p_19_s_axi_rvalid->set_sv_netview_offsetfromdp(8571360);
        xsim_sc_channel<0, bool > *p_19_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_rready.bind(*p_19_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_rready);
        xsim_sc_channel<0, bool > *p_19_mon_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_19->mon_AWVALID.bind(*p_19_mon_AWVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_19_mon_AWVALID);
        xsim_sc_channel<0, bool > *p_19_mon_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_19->mon_AWREADY.bind(*p_19_mon_AWREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_19_mon_AWREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_19_mon_AWADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_19->mon_AWADDR.bind(*p_19_mon_AWADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_19_mon_AWADDR);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_19_mon_AWID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_19->mon_AWID.bind(*p_19_mon_AWID);
        (*_glb_hdl_sc_channel_map).push_back(p_19_mon_AWID);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_19_mon_AWLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_19->mon_AWLEN.bind(*p_19_mon_AWLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_19_mon_AWLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_19_mon_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_19->mon_AWSIZE.bind(*p_19_mon_AWSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_19_mon_AWSIZE);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_mon_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->mon_AWBURST.bind(*p_19_mon_AWBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_19_mon_AWBURST);
        xsim_sc_channel<0, bool > *p_19_mon_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_19->mon_WVALID.bind(*p_19_mon_WVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_19_mon_WVALID);
        xsim_sc_channel<0, bool > *p_19_mon_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_19->mon_WREADY.bind(*p_19_mon_WREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_19_mon_WREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_19_mon_WDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_19->mon_WDATA.bind(*p_19_mon_WDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_19_mon_WDATA);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_19_mon_WSTRB = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_19->mon_WSTRB.bind(*p_19_mon_WSTRB);
        (*_glb_hdl_sc_channel_map).push_back(p_19_mon_WSTRB);
        xsim_sc_channel<0, bool > *p_19_mon_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_19->mon_WLAST.bind(*p_19_mon_WLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_19_mon_WLAST);
        xsim_sc_channel<0, bool > *p_19_mon_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_19->mon_ARVALID.bind(*p_19_mon_ARVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_19_mon_ARVALID);
        xsim_sc_channel<0, bool > *p_19_mon_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_19->mon_ARREADY.bind(*p_19_mon_ARREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_19_mon_ARREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_19_mon_ARADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_19->mon_ARADDR.bind(*p_19_mon_ARADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_19_mon_ARADDR);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_19_mon_ARID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_19->mon_ARID.bind(*p_19_mon_ARID);
        (*_glb_hdl_sc_channel_map).push_back(p_19_mon_ARID);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_19_mon_ARLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_19->mon_ARLEN.bind(*p_19_mon_ARLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_19_mon_ARLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_19_mon_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_19->mon_ARSIZE.bind(*p_19_mon_ARSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_19_mon_ARSIZE);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_mon_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->mon_ARBURST.bind(*p_19_mon_ARBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_19_mon_ARBURST);
        xsim_sc_channel<0, bool > *p_19_mon_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_19->mon_RVALID.bind(*p_19_mon_RVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_19_mon_RVALID);
        xsim_sc_channel<0, bool > *p_19_mon_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_19->mon_RREADY.bind(*p_19_mon_RREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_19_mon_RREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_19_mon_RDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_19->mon_RDATA.bind(*p_19_mon_RDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_19_mon_RDATA);
        xsim_sc_channel<0, bool > *p_19_mon_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_19->mon_RLAST.bind(*p_19_mon_RLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_19_mon_RLAST);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_19_mon_RID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_19->mon_RID.bind(*p_19_mon_RID);
        (*_glb_hdl_sc_channel_map).push_back(p_19_mon_RID);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_mon_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->mon_RRESP.bind(*p_19_mon_RRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_19_mon_RRESP);
        xsim_sc_channel<0, bool > *p_19_mon_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_19->mon_BVALID.bind(*p_19_mon_BVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_19_mon_BVALID);
        xsim_sc_channel<0, bool > *p_19_mon_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_19->mon_BREADY.bind(*p_19_mon_BREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_19_mon_BREADY);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_mon_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->mon_BRESP.bind(*p_19_mon_BRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_19_mon_BRESP);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_19_mon_BID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_19->mon_BID.bind(*p_19_mon_BID);
        (*_glb_hdl_sc_channel_map).push_back(p_19_mon_BID);
        xsim_sc_channel<0, bool > *p_19_m_axis_rd_tready = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axis_rd_tready.bind(*p_19_m_axis_rd_tready);
        (*_glb_hdl_sc_channel_map).push_back(p_19_m_axis_rd_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_19_m_axis_rd_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_19->m_axis_rd_tdata.bind(*p_19_m_axis_rd_tdata);
        p_19_m_axis_rd_tdata->set_sv_netview_offsetfromdp(8573152);
        xsim_sc_channel<0, bool > *p_19_m_axis_rd_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axis_rd_tlast.bind(*p_19_m_axis_rd_tlast);
        p_19_m_axis_rd_tlast->set_sv_netview_offsetfromdp(8573208);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_19_m_axis_rd_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_19->m_axis_rd_tid.bind(*p_19_m_axis_rd_tid);
        p_19_m_axis_rd_tid->set_sv_netview_offsetfromdp(8573264);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_19_m_axis_rd_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_19->m_axis_rd_tdest.bind(*p_19_m_axis_rd_tdest);
        p_19_m_axis_rd_tdest->set_sv_netview_offsetfromdp(8573320);
        xsim_sc_channel<0, bool > *p_19_m_axis_wr_tready = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axis_wr_tready.bind(*p_19_m_axis_wr_tready);
        (*_glb_hdl_sc_channel_map).push_back(p_19_m_axis_wr_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_19_m_axis_wr_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_19->m_axis_wr_tdata.bind(*p_19_m_axis_wr_tdata);
        p_19_m_axis_wr_tdata->set_sv_netview_offsetfromdp(8573432);
        xsim_sc_channel<0, bool > *p_19_m_axis_wr_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axis_wr_tlast.bind(*p_19_m_axis_wr_tlast);
        p_19_m_axis_wr_tlast->set_sv_netview_offsetfromdp(8573488);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_19_m_axis_wr_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_19->m_axis_wr_tid.bind(*p_19_m_axis_wr_tid);
        p_19_m_axis_wr_tid->set_sv_netview_offsetfromdp(8573544);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_19_m_axis_wr_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_19->m_axis_wr_tdest.bind(*p_19_m_axis_wr_tdest);
        p_19_m_axis_wr_tdest->set_sv_netview_offsetfromdp(8573600);
        xsim_sc_channel<0, bool > *p_19_m_axis_wr_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axis_wr_tvalid.bind(*p_19_m_axis_wr_tvalid);
        p_19_m_axis_wr_tvalid->set_sv_netview_offsetfromdp(8573656);
        xsim_sc_channel<0, bool > *p_19_m_axis_rd_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axis_rd_tvalid.bind(*p_19_m_axis_rd_tvalid);
        p_19_m_axis_rd_tvalid->set_sv_netview_offsetfromdp(8573712);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_19_s_axi_awaddr_mon = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_19->s_axi_awaddr_mon.bind(*p_19_s_axi_awaddr_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_awaddr_mon);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_19_s_axi_awprot_mon = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_19->s_axi_awprot_mon.bind(*p_19_s_axi_awprot_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_awprot_mon);
        xsim_sc_channel<0, bool > *p_19_s_axi_awvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_awvalid_mon.bind(*p_19_s_axi_awvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_awvalid_mon);
        xsim_sc_channel<0, bool > *p_19_s_axi_awready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_awready_mon.bind(*p_19_s_axi_awready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_awready_mon);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_19_s_axi_wdata_mon = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_19->s_axi_wdata_mon.bind(*p_19_s_axi_wdata_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_wdata_mon);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_s_axi_wstrb_mon = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->s_axi_wstrb_mon.bind(*p_19_s_axi_wstrb_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_wstrb_mon);
        xsim_sc_channel<0, bool > *p_19_s_axi_wvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_wvalid_mon.bind(*p_19_s_axi_wvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_wvalid_mon);
        xsim_sc_channel<0, bool > *p_19_s_axi_wready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_wready_mon.bind(*p_19_s_axi_wready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_wready_mon);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_s_axi_bresp_mon = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->s_axi_bresp_mon.bind(*p_19_s_axi_bresp_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_bresp_mon);
        xsim_sc_channel<0, bool > *p_19_s_axi_bvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_bvalid_mon.bind(*p_19_s_axi_bvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_bvalid_mon);
        xsim_sc_channel<0, bool > *p_19_s_axi_bready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_bready_mon.bind(*p_19_s_axi_bready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_bready_mon);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_19_s_axi_araddr_mon = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_19->s_axi_araddr_mon.bind(*p_19_s_axi_araddr_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_araddr_mon);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_19_s_axi_arprot_mon = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_19->s_axi_arprot_mon.bind(*p_19_s_axi_arprot_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_arprot_mon);
        xsim_sc_channel<0, bool > *p_19_s_axi_arvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_arvalid_mon.bind(*p_19_s_axi_arvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_arvalid_mon);
        xsim_sc_channel<0, bool > *p_19_s_axi_arready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_arready_mon.bind(*p_19_s_axi_arready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_arready_mon);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_19_s_axi_rdata_mon = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_19->s_axi_rdata_mon.bind(*p_19_s_axi_rdata_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_rdata_mon);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_s_axi_rresp_mon = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->s_axi_rresp_mon.bind(*p_19_s_axi_rresp_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_rresp_mon);
        xsim_sc_channel<0, bool > *p_19_s_axi_rvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_rvalid_mon.bind(*p_19_s_axi_rvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_rvalid_mon);
        xsim_sc_channel<0, bool > *p_19_s_axi_rready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_rready_mon.bind(*p_19_s_axi_rready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_rready_mon);
        sc_inst_20 = new bd_5dca_sci(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.hmss_0.inst.bd_5dca_sci_inst");
        sc_inst_20->xsim_set_dbg_index(949);
        sc_inst_21 = new bd_5dca_hbm_inst_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.hmss_0.inst.hbm_inst");
        sc_inst_21->xsim_set_dbg_index(950);
        xsim_sc_channel<0, bool > *p_21_HBM_REF_CLK_0 = new xsim_sc_channel<0, bool >();
        sc_inst_21->HBM_REF_CLK_0.bind(*p_21_HBM_REF_CLK_0);
        (*_glb_hdl_sc_channel_map).push_back(p_21_HBM_REF_CLK_0);
        xsim_sc_channel<0, bool > *p_21_AXI_00_ACLK = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_00_ACLK.bind(*p_21_AXI_00_ACLK);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_00_ACLK);
        xsim_sc_channel<0, bool > *p_21_AXI_00_ARESET_N = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_00_ARESET_N.bind(*p_21_AXI_00_ARESET_N);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_00_ARESET_N);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_21_AXI_00_ARADDR = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_21->AXI_00_ARADDR.bind(*p_21_AXI_00_ARADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_00_ARADDR);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_AXI_00_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->AXI_00_ARBURST.bind(*p_21_AXI_00_ARBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_00_ARBURST);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_21_AXI_00_ARID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_21->AXI_00_ARID.bind(*p_21_AXI_00_ARID);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_00_ARID);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_AXI_00_ARLEN = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->AXI_00_ARLEN.bind(*p_21_AXI_00_ARLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_00_ARLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_21_AXI_00_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_21->AXI_00_ARSIZE.bind(*p_21_AXI_00_ARSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_00_ARSIZE);
        xsim_sc_channel<0, bool > *p_21_AXI_00_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_00_ARVALID.bind(*p_21_AXI_00_ARVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_00_ARVALID);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_21_AXI_00_AWADDR = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_21->AXI_00_AWADDR.bind(*p_21_AXI_00_AWADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_00_AWADDR);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_AXI_00_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->AXI_00_AWBURST.bind(*p_21_AXI_00_AWBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_00_AWBURST);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_21_AXI_00_AWID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_21->AXI_00_AWID.bind(*p_21_AXI_00_AWID);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_00_AWID);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_AXI_00_AWLEN = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->AXI_00_AWLEN.bind(*p_21_AXI_00_AWLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_00_AWLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_21_AXI_00_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_21->AXI_00_AWSIZE.bind(*p_21_AXI_00_AWSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_00_AWSIZE);
        xsim_sc_channel<0, bool > *p_21_AXI_00_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_00_AWVALID.bind(*p_21_AXI_00_AWVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_00_AWVALID);
        xsim_sc_channel<0, bool > *p_21_AXI_00_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_00_RREADY.bind(*p_21_AXI_00_RREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_00_RREADY);
        xsim_sc_channel<0, bool > *p_21_AXI_00_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_00_BREADY.bind(*p_21_AXI_00_BREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_00_BREADY);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_21_AXI_00_WDATA = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_21->AXI_00_WDATA.bind(*p_21_AXI_00_WDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_00_WDATA);
        xsim_sc_channel<0, bool > *p_21_AXI_00_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_00_WLAST.bind(*p_21_AXI_00_WLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_00_WLAST);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_21_AXI_00_WSTRB = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_21->AXI_00_WSTRB.bind(*p_21_AXI_00_WSTRB);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_00_WSTRB);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_21_AXI_00_WDATA_PARITY = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_21->AXI_00_WDATA_PARITY.bind(*p_21_AXI_00_WDATA_PARITY);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_00_WDATA_PARITY);
        xsim_sc_channel<0, bool > *p_21_AXI_00_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_00_WVALID.bind(*p_21_AXI_00_WVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_00_WVALID);
        xsim_sc_channel<0, bool > *p_21_AXI_04_ACLK = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_04_ACLK.bind(*p_21_AXI_04_ACLK);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_04_ACLK);
        xsim_sc_channel<0, bool > *p_21_AXI_04_ARESET_N = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_04_ARESET_N.bind(*p_21_AXI_04_ARESET_N);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_04_ARESET_N);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_21_AXI_04_ARADDR = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_21->AXI_04_ARADDR.bind(*p_21_AXI_04_ARADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_04_ARADDR);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_AXI_04_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->AXI_04_ARBURST.bind(*p_21_AXI_04_ARBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_04_ARBURST);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_21_AXI_04_ARID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_21->AXI_04_ARID.bind(*p_21_AXI_04_ARID);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_04_ARID);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_AXI_04_ARLEN = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->AXI_04_ARLEN.bind(*p_21_AXI_04_ARLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_04_ARLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_21_AXI_04_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_21->AXI_04_ARSIZE.bind(*p_21_AXI_04_ARSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_04_ARSIZE);
        xsim_sc_channel<0, bool > *p_21_AXI_04_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_04_ARVALID.bind(*p_21_AXI_04_ARVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_04_ARVALID);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_21_AXI_04_AWADDR = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_21->AXI_04_AWADDR.bind(*p_21_AXI_04_AWADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_04_AWADDR);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_AXI_04_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->AXI_04_AWBURST.bind(*p_21_AXI_04_AWBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_04_AWBURST);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_21_AXI_04_AWID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_21->AXI_04_AWID.bind(*p_21_AXI_04_AWID);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_04_AWID);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_AXI_04_AWLEN = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->AXI_04_AWLEN.bind(*p_21_AXI_04_AWLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_04_AWLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_21_AXI_04_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_21->AXI_04_AWSIZE.bind(*p_21_AXI_04_AWSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_04_AWSIZE);
        xsim_sc_channel<0, bool > *p_21_AXI_04_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_04_AWVALID.bind(*p_21_AXI_04_AWVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_04_AWVALID);
        xsim_sc_channel<0, bool > *p_21_AXI_04_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_04_RREADY.bind(*p_21_AXI_04_RREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_04_RREADY);
        xsim_sc_channel<0, bool > *p_21_AXI_04_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_04_BREADY.bind(*p_21_AXI_04_BREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_04_BREADY);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_21_AXI_04_WDATA = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_21->AXI_04_WDATA.bind(*p_21_AXI_04_WDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_04_WDATA);
        xsim_sc_channel<0, bool > *p_21_AXI_04_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_04_WLAST.bind(*p_21_AXI_04_WLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_04_WLAST);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_21_AXI_04_WSTRB = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_21->AXI_04_WSTRB.bind(*p_21_AXI_04_WSTRB);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_04_WSTRB);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_21_AXI_04_WDATA_PARITY = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_21->AXI_04_WDATA_PARITY.bind(*p_21_AXI_04_WDATA_PARITY);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_04_WDATA_PARITY);
        xsim_sc_channel<0, bool > *p_21_AXI_04_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_04_WVALID.bind(*p_21_AXI_04_WVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_04_WVALID);
        xsim_sc_channel<0, bool > *p_21_AXI_05_ACLK = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_05_ACLK.bind(*p_21_AXI_05_ACLK);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_05_ACLK);
        xsim_sc_channel<0, bool > *p_21_AXI_05_ARESET_N = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_05_ARESET_N.bind(*p_21_AXI_05_ARESET_N);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_05_ARESET_N);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_21_AXI_05_ARADDR = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_21->AXI_05_ARADDR.bind(*p_21_AXI_05_ARADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_05_ARADDR);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_AXI_05_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->AXI_05_ARBURST.bind(*p_21_AXI_05_ARBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_05_ARBURST);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_21_AXI_05_ARID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_21->AXI_05_ARID.bind(*p_21_AXI_05_ARID);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_05_ARID);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_AXI_05_ARLEN = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->AXI_05_ARLEN.bind(*p_21_AXI_05_ARLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_05_ARLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_21_AXI_05_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_21->AXI_05_ARSIZE.bind(*p_21_AXI_05_ARSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_05_ARSIZE);
        xsim_sc_channel<0, bool > *p_21_AXI_05_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_05_ARVALID.bind(*p_21_AXI_05_ARVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_05_ARVALID);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_21_AXI_05_AWADDR = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_21->AXI_05_AWADDR.bind(*p_21_AXI_05_AWADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_05_AWADDR);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_AXI_05_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->AXI_05_AWBURST.bind(*p_21_AXI_05_AWBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_05_AWBURST);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_21_AXI_05_AWID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_21->AXI_05_AWID.bind(*p_21_AXI_05_AWID);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_05_AWID);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_AXI_05_AWLEN = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->AXI_05_AWLEN.bind(*p_21_AXI_05_AWLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_05_AWLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_21_AXI_05_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_21->AXI_05_AWSIZE.bind(*p_21_AXI_05_AWSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_05_AWSIZE);
        xsim_sc_channel<0, bool > *p_21_AXI_05_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_05_AWVALID.bind(*p_21_AXI_05_AWVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_05_AWVALID);
        xsim_sc_channel<0, bool > *p_21_AXI_05_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_05_RREADY.bind(*p_21_AXI_05_RREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_05_RREADY);
        xsim_sc_channel<0, bool > *p_21_AXI_05_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_05_BREADY.bind(*p_21_AXI_05_BREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_05_BREADY);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_21_AXI_05_WDATA = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_21->AXI_05_WDATA.bind(*p_21_AXI_05_WDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_05_WDATA);
        xsim_sc_channel<0, bool > *p_21_AXI_05_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_05_WLAST.bind(*p_21_AXI_05_WLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_05_WLAST);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_21_AXI_05_WSTRB = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_21->AXI_05_WSTRB.bind(*p_21_AXI_05_WSTRB);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_05_WSTRB);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_21_AXI_05_WDATA_PARITY = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_21->AXI_05_WDATA_PARITY.bind(*p_21_AXI_05_WDATA_PARITY);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_05_WDATA_PARITY);
        xsim_sc_channel<0, bool > *p_21_AXI_05_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_05_WVALID.bind(*p_21_AXI_05_WVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_05_WVALID);
        xsim_sc_channel<0, bool > *p_21_AXI_08_ACLK = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_08_ACLK.bind(*p_21_AXI_08_ACLK);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_08_ACLK);
        xsim_sc_channel<0, bool > *p_21_AXI_08_ARESET_N = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_08_ARESET_N.bind(*p_21_AXI_08_ARESET_N);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_08_ARESET_N);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_21_AXI_08_ARADDR = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_21->AXI_08_ARADDR.bind(*p_21_AXI_08_ARADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_08_ARADDR);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_AXI_08_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->AXI_08_ARBURST.bind(*p_21_AXI_08_ARBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_08_ARBURST);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_21_AXI_08_ARID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_21->AXI_08_ARID.bind(*p_21_AXI_08_ARID);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_08_ARID);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_AXI_08_ARLEN = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->AXI_08_ARLEN.bind(*p_21_AXI_08_ARLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_08_ARLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_21_AXI_08_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_21->AXI_08_ARSIZE.bind(*p_21_AXI_08_ARSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_08_ARSIZE);
        xsim_sc_channel<0, bool > *p_21_AXI_08_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_08_ARVALID.bind(*p_21_AXI_08_ARVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_08_ARVALID);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_21_AXI_08_AWADDR = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_21->AXI_08_AWADDR.bind(*p_21_AXI_08_AWADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_08_AWADDR);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_AXI_08_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->AXI_08_AWBURST.bind(*p_21_AXI_08_AWBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_08_AWBURST);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_21_AXI_08_AWID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_21->AXI_08_AWID.bind(*p_21_AXI_08_AWID);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_08_AWID);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_AXI_08_AWLEN = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->AXI_08_AWLEN.bind(*p_21_AXI_08_AWLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_08_AWLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_21_AXI_08_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_21->AXI_08_AWSIZE.bind(*p_21_AXI_08_AWSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_08_AWSIZE);
        xsim_sc_channel<0, bool > *p_21_AXI_08_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_08_AWVALID.bind(*p_21_AXI_08_AWVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_08_AWVALID);
        xsim_sc_channel<0, bool > *p_21_AXI_08_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_08_RREADY.bind(*p_21_AXI_08_RREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_08_RREADY);
        xsim_sc_channel<0, bool > *p_21_AXI_08_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_08_BREADY.bind(*p_21_AXI_08_BREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_08_BREADY);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_21_AXI_08_WDATA = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_21->AXI_08_WDATA.bind(*p_21_AXI_08_WDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_08_WDATA);
        xsim_sc_channel<0, bool > *p_21_AXI_08_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_08_WLAST.bind(*p_21_AXI_08_WLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_08_WLAST);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_21_AXI_08_WSTRB = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_21->AXI_08_WSTRB.bind(*p_21_AXI_08_WSTRB);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_08_WSTRB);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_21_AXI_08_WDATA_PARITY = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_21->AXI_08_WDATA_PARITY.bind(*p_21_AXI_08_WDATA_PARITY);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_08_WDATA_PARITY);
        xsim_sc_channel<0, bool > *p_21_AXI_08_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_08_WVALID.bind(*p_21_AXI_08_WVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_21_AXI_08_WVALID);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_21_APB_0_PWDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_21->APB_0_PWDATA.bind(*p_21_APB_0_PWDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_21_APB_0_PWDATA);
        xsim_sc_channel<22, sc_dt::sc_bv<22> > *p_21_APB_0_PADDR = new xsim_sc_channel<22, sc_dt::sc_bv<22> >();
        sc_inst_21->APB_0_PADDR.bind(*p_21_APB_0_PADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_21_APB_0_PADDR);
        xsim_sc_channel<0, bool > *p_21_APB_0_PCLK = new xsim_sc_channel<0, bool >();
        sc_inst_21->APB_0_PCLK.bind(*p_21_APB_0_PCLK);
        (*_glb_hdl_sc_channel_map).push_back(p_21_APB_0_PCLK);
        xsim_sc_channel<0, bool > *p_21_APB_0_PENABLE = new xsim_sc_channel<0, bool >();
        sc_inst_21->APB_0_PENABLE.bind(*p_21_APB_0_PENABLE);
        (*_glb_hdl_sc_channel_map).push_back(p_21_APB_0_PENABLE);
        xsim_sc_channel<0, bool > *p_21_APB_0_PRESET_N = new xsim_sc_channel<0, bool >();
        sc_inst_21->APB_0_PRESET_N.bind(*p_21_APB_0_PRESET_N);
        (*_glb_hdl_sc_channel_map).push_back(p_21_APB_0_PRESET_N);
        xsim_sc_channel<0, bool > *p_21_APB_0_PSEL = new xsim_sc_channel<0, bool >();
        sc_inst_21->APB_0_PSEL.bind(*p_21_APB_0_PSEL);
        (*_glb_hdl_sc_channel_map).push_back(p_21_APB_0_PSEL);
        xsim_sc_channel<0, bool > *p_21_APB_0_PWRITE = new xsim_sc_channel<0, bool >();
        sc_inst_21->APB_0_PWRITE.bind(*p_21_APB_0_PWRITE);
        (*_glb_hdl_sc_channel_map).push_back(p_21_APB_0_PWRITE);
        xsim_sc_channel<0, bool > *p_21_AXI_00_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_00_ARREADY.bind(*p_21_AXI_00_ARREADY);
        p_21_AXI_00_ARREADY->set_sv_netview_offsetfromdp(8770712);
        xsim_sc_channel<0, bool > *p_21_AXI_00_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_00_AWREADY.bind(*p_21_AXI_00_AWREADY);
        p_21_AXI_00_AWREADY->set_sv_netview_offsetfromdp(8770768);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_21_AXI_00_RDATA_PARITY = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_21->AXI_00_RDATA_PARITY.bind(*p_21_AXI_00_RDATA_PARITY);
        p_21_AXI_00_RDATA_PARITY->set_sv_netview_offsetfromdp(8770824);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_21_AXI_00_RDATA = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_21->AXI_00_RDATA.bind(*p_21_AXI_00_RDATA);
        p_21_AXI_00_RDATA->set_sv_netview_offsetfromdp(8770880);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_21_AXI_00_RID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_21->AXI_00_RID.bind(*p_21_AXI_00_RID);
        p_21_AXI_00_RID->set_sv_netview_offsetfromdp(8770936);
        xsim_sc_channel<0, bool > *p_21_AXI_00_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_00_RLAST.bind(*p_21_AXI_00_RLAST);
        p_21_AXI_00_RLAST->set_sv_netview_offsetfromdp(8770992);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_AXI_00_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->AXI_00_RRESP.bind(*p_21_AXI_00_RRESP);
        p_21_AXI_00_RRESP->set_sv_netview_offsetfromdp(8771048);
        xsim_sc_channel<0, bool > *p_21_AXI_00_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_00_RVALID.bind(*p_21_AXI_00_RVALID);
        p_21_AXI_00_RVALID->set_sv_netview_offsetfromdp(8771104);
        xsim_sc_channel<0, bool > *p_21_AXI_00_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_00_WREADY.bind(*p_21_AXI_00_WREADY);
        p_21_AXI_00_WREADY->set_sv_netview_offsetfromdp(8771160);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_21_AXI_00_BID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_21->AXI_00_BID.bind(*p_21_AXI_00_BID);
        p_21_AXI_00_BID->set_sv_netview_offsetfromdp(8771216);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_AXI_00_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->AXI_00_BRESP.bind(*p_21_AXI_00_BRESP);
        p_21_AXI_00_BRESP->set_sv_netview_offsetfromdp(8771272);
        xsim_sc_channel<0, bool > *p_21_AXI_00_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_00_BVALID.bind(*p_21_AXI_00_BVALID);
        p_21_AXI_00_BVALID->set_sv_netview_offsetfromdp(8771328);
        xsim_sc_channel<0, bool > *p_21_AXI_04_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_04_ARREADY.bind(*p_21_AXI_04_ARREADY);
        p_21_AXI_04_ARREADY->set_sv_netview_offsetfromdp(8771384);
        xsim_sc_channel<0, bool > *p_21_AXI_04_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_04_AWREADY.bind(*p_21_AXI_04_AWREADY);
        p_21_AXI_04_AWREADY->set_sv_netview_offsetfromdp(8771440);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_21_AXI_04_RDATA_PARITY = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_21->AXI_04_RDATA_PARITY.bind(*p_21_AXI_04_RDATA_PARITY);
        p_21_AXI_04_RDATA_PARITY->set_sv_netview_offsetfromdp(8771496);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_21_AXI_04_RDATA = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_21->AXI_04_RDATA.bind(*p_21_AXI_04_RDATA);
        p_21_AXI_04_RDATA->set_sv_netview_offsetfromdp(8771552);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_21_AXI_04_RID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_21->AXI_04_RID.bind(*p_21_AXI_04_RID);
        p_21_AXI_04_RID->set_sv_netview_offsetfromdp(8771608);
        xsim_sc_channel<0, bool > *p_21_AXI_04_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_04_RLAST.bind(*p_21_AXI_04_RLAST);
        p_21_AXI_04_RLAST->set_sv_netview_offsetfromdp(8771664);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_AXI_04_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->AXI_04_RRESP.bind(*p_21_AXI_04_RRESP);
        p_21_AXI_04_RRESP->set_sv_netview_offsetfromdp(8771720);
        xsim_sc_channel<0, bool > *p_21_AXI_04_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_04_RVALID.bind(*p_21_AXI_04_RVALID);
        p_21_AXI_04_RVALID->set_sv_netview_offsetfromdp(8771776);
        xsim_sc_channel<0, bool > *p_21_AXI_04_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_04_WREADY.bind(*p_21_AXI_04_WREADY);
        p_21_AXI_04_WREADY->set_sv_netview_offsetfromdp(8771832);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_21_AXI_04_BID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_21->AXI_04_BID.bind(*p_21_AXI_04_BID);
        p_21_AXI_04_BID->set_sv_netview_offsetfromdp(8771888);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_AXI_04_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->AXI_04_BRESP.bind(*p_21_AXI_04_BRESP);
        p_21_AXI_04_BRESP->set_sv_netview_offsetfromdp(8771944);
        xsim_sc_channel<0, bool > *p_21_AXI_04_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_04_BVALID.bind(*p_21_AXI_04_BVALID);
        p_21_AXI_04_BVALID->set_sv_netview_offsetfromdp(8772000);
        xsim_sc_channel<0, bool > *p_21_AXI_05_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_05_ARREADY.bind(*p_21_AXI_05_ARREADY);
        p_21_AXI_05_ARREADY->set_sv_netview_offsetfromdp(8772056);
        xsim_sc_channel<0, bool > *p_21_AXI_05_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_05_AWREADY.bind(*p_21_AXI_05_AWREADY);
        p_21_AXI_05_AWREADY->set_sv_netview_offsetfromdp(8772112);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_21_AXI_05_RDATA_PARITY = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_21->AXI_05_RDATA_PARITY.bind(*p_21_AXI_05_RDATA_PARITY);
        p_21_AXI_05_RDATA_PARITY->set_sv_netview_offsetfromdp(8772168);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_21_AXI_05_RDATA = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_21->AXI_05_RDATA.bind(*p_21_AXI_05_RDATA);
        p_21_AXI_05_RDATA->set_sv_netview_offsetfromdp(8772224);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_21_AXI_05_RID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_21->AXI_05_RID.bind(*p_21_AXI_05_RID);
        p_21_AXI_05_RID->set_sv_netview_offsetfromdp(8772280);
        xsim_sc_channel<0, bool > *p_21_AXI_05_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_05_RLAST.bind(*p_21_AXI_05_RLAST);
        p_21_AXI_05_RLAST->set_sv_netview_offsetfromdp(8772336);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_AXI_05_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->AXI_05_RRESP.bind(*p_21_AXI_05_RRESP);
        p_21_AXI_05_RRESP->set_sv_netview_offsetfromdp(8772392);
        xsim_sc_channel<0, bool > *p_21_AXI_05_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_05_RVALID.bind(*p_21_AXI_05_RVALID);
        p_21_AXI_05_RVALID->set_sv_netview_offsetfromdp(8772448);
        xsim_sc_channel<0, bool > *p_21_AXI_05_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_05_WREADY.bind(*p_21_AXI_05_WREADY);
        p_21_AXI_05_WREADY->set_sv_netview_offsetfromdp(8772504);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_21_AXI_05_BID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_21->AXI_05_BID.bind(*p_21_AXI_05_BID);
        p_21_AXI_05_BID->set_sv_netview_offsetfromdp(8772560);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_AXI_05_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->AXI_05_BRESP.bind(*p_21_AXI_05_BRESP);
        p_21_AXI_05_BRESP->set_sv_netview_offsetfromdp(8772616);
        xsim_sc_channel<0, bool > *p_21_AXI_05_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_05_BVALID.bind(*p_21_AXI_05_BVALID);
        p_21_AXI_05_BVALID->set_sv_netview_offsetfromdp(8772672);
        xsim_sc_channel<0, bool > *p_21_AXI_08_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_08_ARREADY.bind(*p_21_AXI_08_ARREADY);
        p_21_AXI_08_ARREADY->set_sv_netview_offsetfromdp(8772728);
        xsim_sc_channel<0, bool > *p_21_AXI_08_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_08_AWREADY.bind(*p_21_AXI_08_AWREADY);
        p_21_AXI_08_AWREADY->set_sv_netview_offsetfromdp(8772784);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_21_AXI_08_RDATA_PARITY = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_21->AXI_08_RDATA_PARITY.bind(*p_21_AXI_08_RDATA_PARITY);
        p_21_AXI_08_RDATA_PARITY->set_sv_netview_offsetfromdp(8772840);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_21_AXI_08_RDATA = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_21->AXI_08_RDATA.bind(*p_21_AXI_08_RDATA);
        p_21_AXI_08_RDATA->set_sv_netview_offsetfromdp(8772896);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_21_AXI_08_RID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_21->AXI_08_RID.bind(*p_21_AXI_08_RID);
        p_21_AXI_08_RID->set_sv_netview_offsetfromdp(8772952);
        xsim_sc_channel<0, bool > *p_21_AXI_08_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_08_RLAST.bind(*p_21_AXI_08_RLAST);
        p_21_AXI_08_RLAST->set_sv_netview_offsetfromdp(8773008);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_AXI_08_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->AXI_08_RRESP.bind(*p_21_AXI_08_RRESP);
        p_21_AXI_08_RRESP->set_sv_netview_offsetfromdp(8773064);
        xsim_sc_channel<0, bool > *p_21_AXI_08_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_08_RVALID.bind(*p_21_AXI_08_RVALID);
        p_21_AXI_08_RVALID->set_sv_netview_offsetfromdp(8773120);
        xsim_sc_channel<0, bool > *p_21_AXI_08_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_08_WREADY.bind(*p_21_AXI_08_WREADY);
        p_21_AXI_08_WREADY->set_sv_netview_offsetfromdp(8773176);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_21_AXI_08_BID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_21->AXI_08_BID.bind(*p_21_AXI_08_BID);
        p_21_AXI_08_BID->set_sv_netview_offsetfromdp(8773232);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_AXI_08_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->AXI_08_BRESP.bind(*p_21_AXI_08_BRESP);
        p_21_AXI_08_BRESP->set_sv_netview_offsetfromdp(8773288);
        xsim_sc_channel<0, bool > *p_21_AXI_08_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->AXI_08_BVALID.bind(*p_21_AXI_08_BVALID);
        p_21_AXI_08_BVALID->set_sv_netview_offsetfromdp(8773344);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_21_APB_0_PRDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_21->APB_0_PRDATA.bind(*p_21_APB_0_PRDATA);
        p_21_APB_0_PRDATA->set_sv_netview_offsetfromdp(8773400);
        xsim_sc_channel<0, bool > *p_21_APB_0_PREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->APB_0_PREADY.bind(*p_21_APB_0_PREADY);
        p_21_APB_0_PREADY->set_sv_netview_offsetfromdp(8773456);
        xsim_sc_channel<0, bool > *p_21_APB_0_PSLVERR = new xsim_sc_channel<0, bool >();
        sc_inst_21->APB_0_PSLVERR.bind(*p_21_APB_0_PSLVERR);
        p_21_APB_0_PSLVERR->set_sv_netview_offsetfromdp(8773512);
        xsim_sc_channel<0, bool > *p_21_apb_complete_0 = new xsim_sc_channel<0, bool >();
        sc_inst_21->apb_complete_0.bind(*p_21_apb_complete_0);
        p_21_apb_complete_0->set_sv_netview_offsetfromdp(8773568);
        xsim_sc_channel<0, bool > *p_21_DRAM_0_STAT_CATTRIP = new xsim_sc_channel<0, bool >();
        sc_inst_21->DRAM_0_STAT_CATTRIP.bind(*p_21_DRAM_0_STAT_CATTRIP);
        p_21_DRAM_0_STAT_CATTRIP->set_sv_netview_offsetfromdp(8773624);
        xsim_sc_channel<7, sc_dt::sc_bv<7> > *p_21_DRAM_0_STAT_TEMP = new xsim_sc_channel<7, sc_dt::sc_bv<7> >();
        sc_inst_21->DRAM_0_STAT_TEMP.bind(*p_21_DRAM_0_STAT_TEMP);
        p_21_DRAM_0_STAT_TEMP->set_sv_netview_offsetfromdp(8773680);
        sc_inst_22 = new bd_5dca_interconnect1_0_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.hmss_0.inst.path_0.interconnect1_0");
        sc_inst_22->xsim_set_dbg_index(2225);
        xsim_sc_channel<0, bool > *p_22_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_22->aclk.bind(*p_22_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_22_aclk);
        xsim_sc_channel<0, bool > *p_22_aclk1 = new xsim_sc_channel<0, bool >();
        sc_inst_22->aclk1.bind(*p_22_aclk1);
        (*_glb_hdl_sc_channel_map).push_back(p_22_aclk1);
        xsim_sc_channel<0, bool > *p_22_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_22->aresetn.bind(*p_22_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_22_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_22_S00_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_22->S00_AXI_arid.bind(*p_22_S00_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_22_S00_AXI_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_22_S00_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_22->S00_AXI_araddr.bind(*p_22_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_22_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_22_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_22->S00_AXI_arlen.bind(*p_22_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_22_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_22_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_22->S00_AXI_arsize.bind(*p_22_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_22_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->S00_AXI_arburst.bind(*p_22_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_22_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_22_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_22->S00_AXI_arlock.bind(*p_22_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_22_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->S00_AXI_arcache.bind(*p_22_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_22_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_22_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_22->S00_AXI_arprot.bind(*p_22_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_22_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->S00_AXI_arqos.bind(*p_22_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_22_S00_AXI_arqos);
        xsim_sc_channel<0, bool > *p_22_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_22->S00_AXI_arvalid.bind(*p_22_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_22_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_22_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_22->S00_AXI_arready.bind(*p_22_S00_AXI_arready);
        p_22_S00_AXI_arready->set_sv_netview_offsetfromdp(8949472);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_22_S00_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_22->S00_AXI_rid.bind(*p_22_S00_AXI_rid);
        p_22_S00_AXI_rid->set_sv_netview_offsetfromdp(8949528);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_22_S00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_22->S00_AXI_rdata.bind(*p_22_S00_AXI_rdata);
        p_22_S00_AXI_rdata->set_sv_netview_offsetfromdp(8949584);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->S00_AXI_rresp.bind(*p_22_S00_AXI_rresp);
        p_22_S00_AXI_rresp->set_sv_netview_offsetfromdp(8949640);
        xsim_sc_channel<0, bool > *p_22_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_22->S00_AXI_rlast.bind(*p_22_S00_AXI_rlast);
        p_22_S00_AXI_rlast->set_sv_netview_offsetfromdp(8949696);
        xsim_sc_channel<0, bool > *p_22_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_22->S00_AXI_rvalid.bind(*p_22_S00_AXI_rvalid);
        p_22_S00_AXI_rvalid->set_sv_netview_offsetfromdp(8949752);
        xsim_sc_channel<0, bool > *p_22_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_22->S00_AXI_rready.bind(*p_22_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_22_S00_AXI_rready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_22_M00_AXI_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_22->M00_AXI_araddr.bind(*p_22_M00_AXI_araddr);
        p_22_M00_AXI_araddr->set_sv_netview_offsetfromdp(8949864);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_M00_AXI_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->M00_AXI_arlen.bind(*p_22_M00_AXI_arlen);
        p_22_M00_AXI_arlen->set_sv_netview_offsetfromdp(8949920);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_22_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_22->M00_AXI_arsize.bind(*p_22_M00_AXI_arsize);
        p_22_M00_AXI_arsize->set_sv_netview_offsetfromdp(8949976);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->M00_AXI_arburst.bind(*p_22_M00_AXI_arburst);
        p_22_M00_AXI_arburst->set_sv_netview_offsetfromdp(8950032);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_M00_AXI_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->M00_AXI_arlock.bind(*p_22_M00_AXI_arlock);
        p_22_M00_AXI_arlock->set_sv_netview_offsetfromdp(8950088);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->M00_AXI_arcache.bind(*p_22_M00_AXI_arcache);
        p_22_M00_AXI_arcache->set_sv_netview_offsetfromdp(8950144);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_22_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_22->M00_AXI_arprot.bind(*p_22_M00_AXI_arprot);
        p_22_M00_AXI_arprot->set_sv_netview_offsetfromdp(8950200);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->M00_AXI_arqos.bind(*p_22_M00_AXI_arqos);
        p_22_M00_AXI_arqos->set_sv_netview_offsetfromdp(8950256);
        xsim_sc_channel<0, bool > *p_22_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_22->M00_AXI_arvalid.bind(*p_22_M00_AXI_arvalid);
        p_22_M00_AXI_arvalid->set_sv_netview_offsetfromdp(8950312);
        xsim_sc_channel<0, bool > *p_22_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_22->M00_AXI_arready.bind(*p_22_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_22_M00_AXI_arready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_22_M00_AXI_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_22->M00_AXI_rdata.bind(*p_22_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_22_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->M00_AXI_rresp.bind(*p_22_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_22_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_22_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_22->M00_AXI_rlast.bind(*p_22_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_22_M00_AXI_rlast);
        xsim_sc_channel<0, bool > *p_22_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_22->M00_AXI_rvalid.bind(*p_22_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_22_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_22_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_22->M00_AXI_rready.bind(*p_22_M00_AXI_rready);
        p_22_M00_AXI_rready->set_sv_netview_offsetfromdp(8950648);
        sc_inst_23 = new bd_5dca_slice1_0_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.hmss_0.inst.path_0.slice1_0");
        sc_inst_23->xsim_set_dbg_index(2226);
        xsim_sc_channel<0, bool > *p_23_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_23->aclk.bind(*p_23_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_23_aclk);
        xsim_sc_channel<0, bool > *p_23_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_23->aresetn.bind(*p_23_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_23_aresetn);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_23_s_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_23->s_axi_awaddr.bind(*p_23_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_23_s_axi_awaddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_s_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->s_axi_awlen.bind(*p_23_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_23_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->s_axi_awsize.bind(*p_23_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_23_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->s_axi_awburst.bind(*p_23_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_23_s_axi_awburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_s_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->s_axi_awlock.bind(*p_23_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_23_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->s_axi_awcache.bind(*p_23_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_23_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->s_axi_awprot.bind(*p_23_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_23_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->s_axi_awqos.bind(*p_23_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_23_s_axi_awqos);
        xsim_sc_channel<0, bool > *p_23_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_axi_awvalid.bind(*p_23_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_23_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_23_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_axi_awready.bind(*p_23_s_axi_awready);
        p_23_s_axi_awready->set_sv_netview_offsetfromdp(8951368);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_23_s_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_23->s_axi_wdata.bind(*p_23_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_23_s_axi_wdata);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_23_s_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_23->s_axi_wstrb.bind(*p_23_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_23_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_23_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_axi_wlast.bind(*p_23_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_23_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_23_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_axi_wvalid.bind(*p_23_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_23_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_23_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_axi_wready.bind(*p_23_s_axi_wready);
        p_23_s_axi_wready->set_sv_netview_offsetfromdp(8951648);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->s_axi_bresp.bind(*p_23_s_axi_bresp);
        p_23_s_axi_bresp->set_sv_netview_offsetfromdp(8951704);
        xsim_sc_channel<0, bool > *p_23_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_axi_bvalid.bind(*p_23_s_axi_bvalid);
        p_23_s_axi_bvalid->set_sv_netview_offsetfromdp(8951760);
        xsim_sc_channel<0, bool > *p_23_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_axi_bready.bind(*p_23_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_23_s_axi_bready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_23_s_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_23->s_axi_araddr.bind(*p_23_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_23_s_axi_araddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_s_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->s_axi_arlen.bind(*p_23_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_23_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->s_axi_arsize.bind(*p_23_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_23_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->s_axi_arburst.bind(*p_23_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_23_s_axi_arburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_s_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->s_axi_arlock.bind(*p_23_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_23_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->s_axi_arcache.bind(*p_23_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_23_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->s_axi_arprot.bind(*p_23_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_23_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->s_axi_arqos.bind(*p_23_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_23_s_axi_arqos);
        xsim_sc_channel<0, bool > *p_23_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_axi_arvalid.bind(*p_23_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_23_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_23_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_axi_arready.bind(*p_23_s_axi_arready);
        p_23_s_axi_arready->set_sv_netview_offsetfromdp(8952376);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_23_s_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_23->s_axi_rdata.bind(*p_23_s_axi_rdata);
        p_23_s_axi_rdata->set_sv_netview_offsetfromdp(8952432);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->s_axi_rresp.bind(*p_23_s_axi_rresp);
        p_23_s_axi_rresp->set_sv_netview_offsetfromdp(8952488);
        xsim_sc_channel<0, bool > *p_23_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_axi_rlast.bind(*p_23_s_axi_rlast);
        p_23_s_axi_rlast->set_sv_netview_offsetfromdp(8952544);
        xsim_sc_channel<0, bool > *p_23_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_axi_rvalid.bind(*p_23_s_axi_rvalid);
        p_23_s_axi_rvalid->set_sv_netview_offsetfromdp(8952600);
        xsim_sc_channel<0, bool > *p_23_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_axi_rready.bind(*p_23_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_23_s_axi_rready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_23_m_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_23->m_axi_awaddr.bind(*p_23_m_axi_awaddr);
        p_23_m_axi_awaddr->set_sv_netview_offsetfromdp(8952712);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_m_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->m_axi_awlen.bind(*p_23_m_axi_awlen);
        p_23_m_axi_awlen->set_sv_netview_offsetfromdp(8952768);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_m_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->m_axi_awsize.bind(*p_23_m_axi_awsize);
        p_23_m_axi_awsize->set_sv_netview_offsetfromdp(8952824);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_m_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->m_axi_awburst.bind(*p_23_m_axi_awburst);
        p_23_m_axi_awburst->set_sv_netview_offsetfromdp(8952880);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_m_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->m_axi_awlock.bind(*p_23_m_axi_awlock);
        p_23_m_axi_awlock->set_sv_netview_offsetfromdp(8952936);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_m_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->m_axi_awcache.bind(*p_23_m_axi_awcache);
        p_23_m_axi_awcache->set_sv_netview_offsetfromdp(8952992);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->m_axi_awprot.bind(*p_23_m_axi_awprot);
        p_23_m_axi_awprot->set_sv_netview_offsetfromdp(8953048);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_m_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->m_axi_awqos.bind(*p_23_m_axi_awqos);
        p_23_m_axi_awqos->set_sv_netview_offsetfromdp(8953104);
        xsim_sc_channel<0, bool > *p_23_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_axi_awvalid.bind(*p_23_m_axi_awvalid);
        p_23_m_axi_awvalid->set_sv_netview_offsetfromdp(8953160);
        xsim_sc_channel<0, bool > *p_23_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_axi_awready.bind(*p_23_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_23_m_axi_awready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_23_m_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_23->m_axi_wdata.bind(*p_23_m_axi_wdata);
        p_23_m_axi_wdata->set_sv_netview_offsetfromdp(8953272);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_23_m_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_23->m_axi_wstrb.bind(*p_23_m_axi_wstrb);
        p_23_m_axi_wstrb->set_sv_netview_offsetfromdp(8953328);
        xsim_sc_channel<0, bool > *p_23_m_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_axi_wlast.bind(*p_23_m_axi_wlast);
        p_23_m_axi_wlast->set_sv_netview_offsetfromdp(8953384);
        xsim_sc_channel<0, bool > *p_23_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_axi_wvalid.bind(*p_23_m_axi_wvalid);
        p_23_m_axi_wvalid->set_sv_netview_offsetfromdp(8953440);
        xsim_sc_channel<0, bool > *p_23_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_axi_wready.bind(*p_23_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_23_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->m_axi_bresp.bind(*p_23_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_23_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_23_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_axi_bvalid.bind(*p_23_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_23_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_23_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_axi_bready.bind(*p_23_m_axi_bready);
        p_23_m_axi_bready->set_sv_netview_offsetfromdp(8953664);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_23_m_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_23->m_axi_araddr.bind(*p_23_m_axi_araddr);
        p_23_m_axi_araddr->set_sv_netview_offsetfromdp(8953720);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_m_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->m_axi_arlen.bind(*p_23_m_axi_arlen);
        p_23_m_axi_arlen->set_sv_netview_offsetfromdp(8953776);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_m_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->m_axi_arsize.bind(*p_23_m_axi_arsize);
        p_23_m_axi_arsize->set_sv_netview_offsetfromdp(8953832);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_m_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->m_axi_arburst.bind(*p_23_m_axi_arburst);
        p_23_m_axi_arburst->set_sv_netview_offsetfromdp(8953888);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_m_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->m_axi_arlock.bind(*p_23_m_axi_arlock);
        p_23_m_axi_arlock->set_sv_netview_offsetfromdp(8953944);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_m_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->m_axi_arcache.bind(*p_23_m_axi_arcache);
        p_23_m_axi_arcache->set_sv_netview_offsetfromdp(8954000);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->m_axi_arprot.bind(*p_23_m_axi_arprot);
        p_23_m_axi_arprot->set_sv_netview_offsetfromdp(8954056);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_m_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->m_axi_arqos.bind(*p_23_m_axi_arqos);
        p_23_m_axi_arqos->set_sv_netview_offsetfromdp(8954112);
        xsim_sc_channel<0, bool > *p_23_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_axi_arvalid.bind(*p_23_m_axi_arvalid);
        p_23_m_axi_arvalid->set_sv_netview_offsetfromdp(8954168);
        xsim_sc_channel<0, bool > *p_23_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_axi_arready.bind(*p_23_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_23_m_axi_arready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_23_m_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_23->m_axi_rdata.bind(*p_23_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_23_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->m_axi_rresp.bind(*p_23_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_23_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_23_m_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_axi_rlast.bind(*p_23_m_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_23_m_axi_rlast);
        xsim_sc_channel<0, bool > *p_23_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_axi_rvalid.bind(*p_23_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_23_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_23_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_axi_rready.bind(*p_23_m_axi_rready);
        p_23_m_axi_rready->set_sv_netview_offsetfromdp(8954504);
        sc_inst_24 = new bd_5dca_interconnect2_4_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.hmss_0.inst.path_4.interconnect2_4");
        sc_inst_24->xsim_set_dbg_index(2279);
        xsim_sc_channel<0, bool > *p_24_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_24->aclk.bind(*p_24_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_24_aclk);
        xsim_sc_channel<0, bool > *p_24_aclk1 = new xsim_sc_channel<0, bool >();
        sc_inst_24->aclk1.bind(*p_24_aclk1);
        (*_glb_hdl_sc_channel_map).push_back(p_24_aclk1);
        xsim_sc_channel<0, bool > *p_24_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_24->aresetn.bind(*p_24_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_24_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_24_S00_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_24->S00_AXI_arid.bind(*p_24_S00_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_24_S00_AXI_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_24_S00_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_24->S00_AXI_araddr.bind(*p_24_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_24_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_24_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_24->S00_AXI_arlen.bind(*p_24_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_24_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_24_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_24->S00_AXI_arsize.bind(*p_24_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_24_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_24_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_24->S00_AXI_arburst.bind(*p_24_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_24_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_24_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_24->S00_AXI_arlock.bind(*p_24_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_24_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_24_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_24->S00_AXI_arcache.bind(*p_24_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_24_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_24_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_24->S00_AXI_arprot.bind(*p_24_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_24_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_24_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_24->S00_AXI_arqos.bind(*p_24_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_24_S00_AXI_arqos);
        xsim_sc_channel<0, bool > *p_24_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_24->S00_AXI_arvalid.bind(*p_24_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_24_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_24_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_24->S00_AXI_arready.bind(*p_24_S00_AXI_arready);
        p_24_S00_AXI_arready->set_sv_netview_offsetfromdp(8998424);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_24_S00_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_24->S00_AXI_rid.bind(*p_24_S00_AXI_rid);
        p_24_S00_AXI_rid->set_sv_netview_offsetfromdp(8998480);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_24_S00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_24->S00_AXI_rdata.bind(*p_24_S00_AXI_rdata);
        p_24_S00_AXI_rdata->set_sv_netview_offsetfromdp(8998536);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_24_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_24->S00_AXI_rresp.bind(*p_24_S00_AXI_rresp);
        p_24_S00_AXI_rresp->set_sv_netview_offsetfromdp(8998592);
        xsim_sc_channel<0, bool > *p_24_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_24->S00_AXI_rlast.bind(*p_24_S00_AXI_rlast);
        p_24_S00_AXI_rlast->set_sv_netview_offsetfromdp(8998648);
        xsim_sc_channel<0, bool > *p_24_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_24->S00_AXI_rvalid.bind(*p_24_S00_AXI_rvalid);
        p_24_S00_AXI_rvalid->set_sv_netview_offsetfromdp(8998704);
        xsim_sc_channel<0, bool > *p_24_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_24->S00_AXI_rready.bind(*p_24_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_24_S00_AXI_rready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_24_M00_AXI_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_24->M00_AXI_araddr.bind(*p_24_M00_AXI_araddr);
        p_24_M00_AXI_araddr->set_sv_netview_offsetfromdp(8998816);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_24_M00_AXI_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_24->M00_AXI_arlen.bind(*p_24_M00_AXI_arlen);
        p_24_M00_AXI_arlen->set_sv_netview_offsetfromdp(8998872);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_24_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_24->M00_AXI_arsize.bind(*p_24_M00_AXI_arsize);
        p_24_M00_AXI_arsize->set_sv_netview_offsetfromdp(8998928);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_24_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_24->M00_AXI_arburst.bind(*p_24_M00_AXI_arburst);
        p_24_M00_AXI_arburst->set_sv_netview_offsetfromdp(8998984);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_24_M00_AXI_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_24->M00_AXI_arlock.bind(*p_24_M00_AXI_arlock);
        p_24_M00_AXI_arlock->set_sv_netview_offsetfromdp(8999040);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_24_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_24->M00_AXI_arcache.bind(*p_24_M00_AXI_arcache);
        p_24_M00_AXI_arcache->set_sv_netview_offsetfromdp(8999096);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_24_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_24->M00_AXI_arprot.bind(*p_24_M00_AXI_arprot);
        p_24_M00_AXI_arprot->set_sv_netview_offsetfromdp(8999152);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_24_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_24->M00_AXI_arqos.bind(*p_24_M00_AXI_arqos);
        p_24_M00_AXI_arqos->set_sv_netview_offsetfromdp(8999208);
        xsim_sc_channel<0, bool > *p_24_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_24->M00_AXI_arvalid.bind(*p_24_M00_AXI_arvalid);
        p_24_M00_AXI_arvalid->set_sv_netview_offsetfromdp(8999264);
        xsim_sc_channel<0, bool > *p_24_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_24->M00_AXI_arready.bind(*p_24_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_24_M00_AXI_arready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_24_M00_AXI_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_24->M00_AXI_rdata.bind(*p_24_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_24_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_24_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_24->M00_AXI_rresp.bind(*p_24_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_24_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_24_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_24->M00_AXI_rlast.bind(*p_24_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_24_M00_AXI_rlast);
        xsim_sc_channel<0, bool > *p_24_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_24->M00_AXI_rvalid.bind(*p_24_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_24_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_24_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_24->M00_AXI_rready.bind(*p_24_M00_AXI_rready);
        p_24_M00_AXI_rready->set_sv_netview_offsetfromdp(8999600);
        sc_inst_25 = new bd_5dca_slice2_4_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.hmss_0.inst.path_4.slice2_4");
        sc_inst_25->xsim_set_dbg_index(2280);
        xsim_sc_channel<0, bool > *p_25_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_25->aclk.bind(*p_25_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_25_aclk);
        xsim_sc_channel<0, bool > *p_25_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_25->aresetn.bind(*p_25_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_25_aresetn);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_25_s_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_25->s_axi_awaddr.bind(*p_25_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_awaddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_25_s_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_25->s_axi_awlen.bind(*p_25_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_25_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_25->s_axi_awsize.bind(*p_25_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_25_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_25->s_axi_awburst.bind(*p_25_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_awburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_25_s_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_25->s_axi_awlock.bind(*p_25_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_25_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_25->s_axi_awcache.bind(*p_25_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_25_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_25->s_axi_awprot.bind(*p_25_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_25_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_25->s_axi_awqos.bind(*p_25_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_awqos);
        xsim_sc_channel<0, bool > *p_25_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_axi_awvalid.bind(*p_25_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_25_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_axi_awready.bind(*p_25_s_axi_awready);
        p_25_s_axi_awready->set_sv_netview_offsetfromdp(9000320);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_25_s_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_25->s_axi_wdata.bind(*p_25_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_wdata);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_25_s_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_25->s_axi_wstrb.bind(*p_25_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_25_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_axi_wlast.bind(*p_25_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_25_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_axi_wvalid.bind(*p_25_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_25_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_axi_wready.bind(*p_25_s_axi_wready);
        p_25_s_axi_wready->set_sv_netview_offsetfromdp(9000600);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_25_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_25->s_axi_bresp.bind(*p_25_s_axi_bresp);
        p_25_s_axi_bresp->set_sv_netview_offsetfromdp(9000656);
        xsim_sc_channel<0, bool > *p_25_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_axi_bvalid.bind(*p_25_s_axi_bvalid);
        p_25_s_axi_bvalid->set_sv_netview_offsetfromdp(9000712);
        xsim_sc_channel<0, bool > *p_25_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_axi_bready.bind(*p_25_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_bready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_25_s_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_25->s_axi_araddr.bind(*p_25_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_araddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_25_s_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_25->s_axi_arlen.bind(*p_25_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_25_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_25->s_axi_arsize.bind(*p_25_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_25_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_25->s_axi_arburst.bind(*p_25_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_arburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_25_s_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_25->s_axi_arlock.bind(*p_25_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_25_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_25->s_axi_arcache.bind(*p_25_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_25_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_25->s_axi_arprot.bind(*p_25_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_25_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_25->s_axi_arqos.bind(*p_25_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_arqos);
        xsim_sc_channel<0, bool > *p_25_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_axi_arvalid.bind(*p_25_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_25_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_axi_arready.bind(*p_25_s_axi_arready);
        p_25_s_axi_arready->set_sv_netview_offsetfromdp(9001328);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_25_s_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_25->s_axi_rdata.bind(*p_25_s_axi_rdata);
        p_25_s_axi_rdata->set_sv_netview_offsetfromdp(9001384);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_25_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_25->s_axi_rresp.bind(*p_25_s_axi_rresp);
        p_25_s_axi_rresp->set_sv_netview_offsetfromdp(9001440);
        xsim_sc_channel<0, bool > *p_25_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_axi_rlast.bind(*p_25_s_axi_rlast);
        p_25_s_axi_rlast->set_sv_netview_offsetfromdp(9001496);
        xsim_sc_channel<0, bool > *p_25_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_axi_rvalid.bind(*p_25_s_axi_rvalid);
        p_25_s_axi_rvalid->set_sv_netview_offsetfromdp(9001552);
        xsim_sc_channel<0, bool > *p_25_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_axi_rready.bind(*p_25_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_rready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_25_m_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_25->m_axi_awaddr.bind(*p_25_m_axi_awaddr);
        p_25_m_axi_awaddr->set_sv_netview_offsetfromdp(9001664);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_25_m_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_25->m_axi_awlen.bind(*p_25_m_axi_awlen);
        p_25_m_axi_awlen->set_sv_netview_offsetfromdp(9001720);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_25_m_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_25->m_axi_awsize.bind(*p_25_m_axi_awsize);
        p_25_m_axi_awsize->set_sv_netview_offsetfromdp(9001776);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_25_m_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_25->m_axi_awburst.bind(*p_25_m_axi_awburst);
        p_25_m_axi_awburst->set_sv_netview_offsetfromdp(9001832);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_25_m_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_25->m_axi_awlock.bind(*p_25_m_axi_awlock);
        p_25_m_axi_awlock->set_sv_netview_offsetfromdp(9001888);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_25_m_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_25->m_axi_awcache.bind(*p_25_m_axi_awcache);
        p_25_m_axi_awcache->set_sv_netview_offsetfromdp(9001944);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_25_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_25->m_axi_awprot.bind(*p_25_m_axi_awprot);
        p_25_m_axi_awprot->set_sv_netview_offsetfromdp(9002000);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_25_m_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_25->m_axi_awqos.bind(*p_25_m_axi_awqos);
        p_25_m_axi_awqos->set_sv_netview_offsetfromdp(9002056);
        xsim_sc_channel<0, bool > *p_25_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_25->m_axi_awvalid.bind(*p_25_m_axi_awvalid);
        p_25_m_axi_awvalid->set_sv_netview_offsetfromdp(9002112);
        xsim_sc_channel<0, bool > *p_25_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_25->m_axi_awready.bind(*p_25_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_25_m_axi_awready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_25_m_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_25->m_axi_wdata.bind(*p_25_m_axi_wdata);
        p_25_m_axi_wdata->set_sv_netview_offsetfromdp(9002224);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_25_m_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_25->m_axi_wstrb.bind(*p_25_m_axi_wstrb);
        p_25_m_axi_wstrb->set_sv_netview_offsetfromdp(9002280);
        xsim_sc_channel<0, bool > *p_25_m_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_25->m_axi_wlast.bind(*p_25_m_axi_wlast);
        p_25_m_axi_wlast->set_sv_netview_offsetfromdp(9002336);
        xsim_sc_channel<0, bool > *p_25_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_25->m_axi_wvalid.bind(*p_25_m_axi_wvalid);
        p_25_m_axi_wvalid->set_sv_netview_offsetfromdp(9002392);
        xsim_sc_channel<0, bool > *p_25_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_25->m_axi_wready.bind(*p_25_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_25_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_25_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_25->m_axi_bresp.bind(*p_25_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_25_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_25_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_25->m_axi_bvalid.bind(*p_25_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_25_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_25_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_25->m_axi_bready.bind(*p_25_m_axi_bready);
        p_25_m_axi_bready->set_sv_netview_offsetfromdp(9002616);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_25_m_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_25->m_axi_araddr.bind(*p_25_m_axi_araddr);
        p_25_m_axi_araddr->set_sv_netview_offsetfromdp(9002672);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_25_m_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_25->m_axi_arlen.bind(*p_25_m_axi_arlen);
        p_25_m_axi_arlen->set_sv_netview_offsetfromdp(9002728);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_25_m_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_25->m_axi_arsize.bind(*p_25_m_axi_arsize);
        p_25_m_axi_arsize->set_sv_netview_offsetfromdp(9002784);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_25_m_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_25->m_axi_arburst.bind(*p_25_m_axi_arburst);
        p_25_m_axi_arburst->set_sv_netview_offsetfromdp(9002840);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_25_m_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_25->m_axi_arlock.bind(*p_25_m_axi_arlock);
        p_25_m_axi_arlock->set_sv_netview_offsetfromdp(9002896);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_25_m_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_25->m_axi_arcache.bind(*p_25_m_axi_arcache);
        p_25_m_axi_arcache->set_sv_netview_offsetfromdp(9002952);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_25_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_25->m_axi_arprot.bind(*p_25_m_axi_arprot);
        p_25_m_axi_arprot->set_sv_netview_offsetfromdp(9003008);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_25_m_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_25->m_axi_arqos.bind(*p_25_m_axi_arqos);
        p_25_m_axi_arqos->set_sv_netview_offsetfromdp(9003064);
        xsim_sc_channel<0, bool > *p_25_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_25->m_axi_arvalid.bind(*p_25_m_axi_arvalid);
        p_25_m_axi_arvalid->set_sv_netview_offsetfromdp(9003120);
        xsim_sc_channel<0, bool > *p_25_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_25->m_axi_arready.bind(*p_25_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_25_m_axi_arready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_25_m_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_25->m_axi_rdata.bind(*p_25_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_25_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_25_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_25->m_axi_rresp.bind(*p_25_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_25_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_25_m_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_25->m_axi_rlast.bind(*p_25_m_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_25_m_axi_rlast);
        xsim_sc_channel<0, bool > *p_25_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_25->m_axi_rvalid.bind(*p_25_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_25_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_25_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_25->m_axi_rready.bind(*p_25_m_axi_rready);
        p_25_m_axi_rready->set_sv_netview_offsetfromdp(9003456);
        sc_inst_26 = new bd_5dca_interconnect0_5_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.hmss_0.inst.path_5.interconnect0_5");
        sc_inst_26->xsim_set_dbg_index(2333);
        xsim_sc_channel<0, bool > *p_26_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_26->aclk.bind(*p_26_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_26_aclk);
        xsim_sc_channel<0, bool > *p_26_aclk1 = new xsim_sc_channel<0, bool >();
        sc_inst_26->aclk1.bind(*p_26_aclk1);
        (*_glb_hdl_sc_channel_map).push_back(p_26_aclk1);
        xsim_sc_channel<0, bool > *p_26_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_26->aresetn.bind(*p_26_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_26_aresetn);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_26_S00_AXI_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_26->S00_AXI_awaddr.bind(*p_26_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_26_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_26->S00_AXI_awlen.bind(*p_26_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_26_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_26->S00_AXI_awsize.bind(*p_26_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_26_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_26->S00_AXI_awburst.bind(*p_26_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S00_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_26_S00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_26->S00_AXI_awlock.bind(*p_26_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->S00_AXI_awcache.bind(*p_26_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_26_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_26->S00_AXI_awprot.bind(*p_26_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->S00_AXI_awqos.bind(*p_26_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S00_AXI_awqos);
        xsim_sc_channel<0, bool > *p_26_S00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->S00_AXI_awvalid.bind(*p_26_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S00_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_26_S00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_26->S00_AXI_awready.bind(*p_26_S00_AXI_awready);
        p_26_S00_AXI_awready->set_sv_netview_offsetfromdp(9065624);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_26_S00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_26->S00_AXI_wdata.bind(*p_26_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S00_AXI_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_26_S00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_26->S00_AXI_wstrb.bind(*p_26_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S00_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_26_S00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_26->S00_AXI_wlast.bind(*p_26_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S00_AXI_wlast);
        xsim_sc_channel<0, bool > *p_26_S00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->S00_AXI_wvalid.bind(*p_26_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S00_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_26_S00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_26->S00_AXI_wready.bind(*p_26_S00_AXI_wready);
        p_26_S00_AXI_wready->set_sv_netview_offsetfromdp(9065904);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_26_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_26->S00_AXI_bresp.bind(*p_26_S00_AXI_bresp);
        p_26_S00_AXI_bresp->set_sv_netview_offsetfromdp(9065960);
        xsim_sc_channel<0, bool > *p_26_S00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->S00_AXI_bvalid.bind(*p_26_S00_AXI_bvalid);
        p_26_S00_AXI_bvalid->set_sv_netview_offsetfromdp(9066016);
        xsim_sc_channel<0, bool > *p_26_S00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_26->S00_AXI_bready.bind(*p_26_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S00_AXI_bready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_26_S00_AXI_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_26->S00_AXI_araddr.bind(*p_26_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_26_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_26->S00_AXI_arlen.bind(*p_26_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_26_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_26->S00_AXI_arsize.bind(*p_26_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_26_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_26->S00_AXI_arburst.bind(*p_26_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_26_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_26->S00_AXI_arlock.bind(*p_26_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->S00_AXI_arcache.bind(*p_26_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_26_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_26->S00_AXI_arprot.bind(*p_26_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->S00_AXI_arqos.bind(*p_26_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S00_AXI_arqos);
        xsim_sc_channel<0, bool > *p_26_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->S00_AXI_arvalid.bind(*p_26_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_26_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_26->S00_AXI_arready.bind(*p_26_S00_AXI_arready);
        p_26_S00_AXI_arready->set_sv_netview_offsetfromdp(9066632);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_26_S00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_26->S00_AXI_rdata.bind(*p_26_S00_AXI_rdata);
        p_26_S00_AXI_rdata->set_sv_netview_offsetfromdp(9066688);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_26_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_26->S00_AXI_rresp.bind(*p_26_S00_AXI_rresp);
        p_26_S00_AXI_rresp->set_sv_netview_offsetfromdp(9066744);
        xsim_sc_channel<0, bool > *p_26_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_26->S00_AXI_rlast.bind(*p_26_S00_AXI_rlast);
        p_26_S00_AXI_rlast->set_sv_netview_offsetfromdp(9066800);
        xsim_sc_channel<0, bool > *p_26_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->S00_AXI_rvalid.bind(*p_26_S00_AXI_rvalid);
        p_26_S00_AXI_rvalid->set_sv_netview_offsetfromdp(9066856);
        xsim_sc_channel<0, bool > *p_26_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_26->S00_AXI_rready.bind(*p_26_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S00_AXI_rready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_26_M00_AXI_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_26->M00_AXI_awaddr.bind(*p_26_M00_AXI_awaddr);
        p_26_M00_AXI_awaddr->set_sv_netview_offsetfromdp(9066968);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_M00_AXI_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->M00_AXI_awlen.bind(*p_26_M00_AXI_awlen);
        p_26_M00_AXI_awlen->set_sv_netview_offsetfromdp(9067024);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_26_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_26->M00_AXI_awsize.bind(*p_26_M00_AXI_awsize);
        p_26_M00_AXI_awsize->set_sv_netview_offsetfromdp(9067080);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_26_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_26->M00_AXI_awburst.bind(*p_26_M00_AXI_awburst);
        p_26_M00_AXI_awburst->set_sv_netview_offsetfromdp(9067136);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_26_M00_AXI_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_26->M00_AXI_awlock.bind(*p_26_M00_AXI_awlock);
        p_26_M00_AXI_awlock->set_sv_netview_offsetfromdp(9067192);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->M00_AXI_awcache.bind(*p_26_M00_AXI_awcache);
        p_26_M00_AXI_awcache->set_sv_netview_offsetfromdp(9067248);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_26_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_26->M00_AXI_awprot.bind(*p_26_M00_AXI_awprot);
        p_26_M00_AXI_awprot->set_sv_netview_offsetfromdp(9067304);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->M00_AXI_awqos.bind(*p_26_M00_AXI_awqos);
        p_26_M00_AXI_awqos->set_sv_netview_offsetfromdp(9067360);
        xsim_sc_channel<0, bool > *p_26_M00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->M00_AXI_awvalid.bind(*p_26_M00_AXI_awvalid);
        p_26_M00_AXI_awvalid->set_sv_netview_offsetfromdp(9067416);
        xsim_sc_channel<0, bool > *p_26_M00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_26->M00_AXI_awready.bind(*p_26_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_26_M00_AXI_awready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_26_M00_AXI_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_26->M00_AXI_wdata.bind(*p_26_M00_AXI_wdata);
        p_26_M00_AXI_wdata->set_sv_netview_offsetfromdp(9067528);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_26_M00_AXI_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_26->M00_AXI_wstrb.bind(*p_26_M00_AXI_wstrb);
        p_26_M00_AXI_wstrb->set_sv_netview_offsetfromdp(9067584);
        xsim_sc_channel<0, bool > *p_26_M00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_26->M00_AXI_wlast.bind(*p_26_M00_AXI_wlast);
        p_26_M00_AXI_wlast->set_sv_netview_offsetfromdp(9067640);
        xsim_sc_channel<0, bool > *p_26_M00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->M00_AXI_wvalid.bind(*p_26_M00_AXI_wvalid);
        p_26_M00_AXI_wvalid->set_sv_netview_offsetfromdp(9067696);
        xsim_sc_channel<0, bool > *p_26_M00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_26->M00_AXI_wready.bind(*p_26_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_26_M00_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_26_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_26->M00_AXI_bresp.bind(*p_26_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_26_M00_AXI_bresp);
        xsim_sc_channel<0, bool > *p_26_M00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->M00_AXI_bvalid.bind(*p_26_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_26_M00_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_26_M00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_26->M00_AXI_bready.bind(*p_26_M00_AXI_bready);
        p_26_M00_AXI_bready->set_sv_netview_offsetfromdp(9067920);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_26_M00_AXI_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_26->M00_AXI_araddr.bind(*p_26_M00_AXI_araddr);
        p_26_M00_AXI_araddr->set_sv_netview_offsetfromdp(9067976);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_M00_AXI_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->M00_AXI_arlen.bind(*p_26_M00_AXI_arlen);
        p_26_M00_AXI_arlen->set_sv_netview_offsetfromdp(9068032);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_26_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_26->M00_AXI_arsize.bind(*p_26_M00_AXI_arsize);
        p_26_M00_AXI_arsize->set_sv_netview_offsetfromdp(9068088);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_26_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_26->M00_AXI_arburst.bind(*p_26_M00_AXI_arburst);
        p_26_M00_AXI_arburst->set_sv_netview_offsetfromdp(9068144);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_26_M00_AXI_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_26->M00_AXI_arlock.bind(*p_26_M00_AXI_arlock);
        p_26_M00_AXI_arlock->set_sv_netview_offsetfromdp(9068200);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->M00_AXI_arcache.bind(*p_26_M00_AXI_arcache);
        p_26_M00_AXI_arcache->set_sv_netview_offsetfromdp(9068256);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_26_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_26->M00_AXI_arprot.bind(*p_26_M00_AXI_arprot);
        p_26_M00_AXI_arprot->set_sv_netview_offsetfromdp(9068312);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->M00_AXI_arqos.bind(*p_26_M00_AXI_arqos);
        p_26_M00_AXI_arqos->set_sv_netview_offsetfromdp(9068368);
        xsim_sc_channel<0, bool > *p_26_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->M00_AXI_arvalid.bind(*p_26_M00_AXI_arvalid);
        p_26_M00_AXI_arvalid->set_sv_netview_offsetfromdp(9068424);
        xsim_sc_channel<0, bool > *p_26_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_26->M00_AXI_arready.bind(*p_26_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_26_M00_AXI_arready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_26_M00_AXI_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_26->M00_AXI_rdata.bind(*p_26_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_26_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_26_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_26->M00_AXI_rresp.bind(*p_26_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_26_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_26_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_26->M00_AXI_rlast.bind(*p_26_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_26_M00_AXI_rlast);
        xsim_sc_channel<0, bool > *p_26_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->M00_AXI_rvalid.bind(*p_26_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_26_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_26_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_26->M00_AXI_rready.bind(*p_26_M00_AXI_rready);
        p_26_M00_AXI_rready->set_sv_netview_offsetfromdp(9068760);
        sc_inst_27 = new bd_5dca_slice0_5_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.hmss_0.inst.path_5.slice0_5");
        sc_inst_27->xsim_set_dbg_index(2334);
        xsim_sc_channel<0, bool > *p_27_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_27->aclk.bind(*p_27_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_27_aclk);
        xsim_sc_channel<0, bool > *p_27_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_27->aresetn.bind(*p_27_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_27_aresetn);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_27_s_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_27->s_axi_awaddr.bind(*p_27_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_awaddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_27_s_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_27->s_axi_awlen.bind(*p_27_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_27_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_27->s_axi_awsize.bind(*p_27_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_27_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_27->s_axi_awburst.bind(*p_27_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_awburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_27_s_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_27->s_axi_awlock.bind(*p_27_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_27_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_27->s_axi_awcache.bind(*p_27_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_27_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_27->s_axi_awprot.bind(*p_27_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_27_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_27->s_axi_awqos.bind(*p_27_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_awqos);
        xsim_sc_channel<0, bool > *p_27_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_27->s_axi_awvalid.bind(*p_27_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_27_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_27->s_axi_awready.bind(*p_27_s_axi_awready);
        p_27_s_axi_awready->set_sv_netview_offsetfromdp(9069480);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_27_s_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_27->s_axi_wdata.bind(*p_27_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_wdata);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_27_s_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_27->s_axi_wstrb.bind(*p_27_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_27_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_27->s_axi_wlast.bind(*p_27_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_27_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_27->s_axi_wvalid.bind(*p_27_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_27_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_27->s_axi_wready.bind(*p_27_s_axi_wready);
        p_27_s_axi_wready->set_sv_netview_offsetfromdp(9069760);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_27_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_27->s_axi_bresp.bind(*p_27_s_axi_bresp);
        p_27_s_axi_bresp->set_sv_netview_offsetfromdp(9069816);
        xsim_sc_channel<0, bool > *p_27_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_27->s_axi_bvalid.bind(*p_27_s_axi_bvalid);
        p_27_s_axi_bvalid->set_sv_netview_offsetfromdp(9069872);
        xsim_sc_channel<0, bool > *p_27_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_27->s_axi_bready.bind(*p_27_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_bready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_27_s_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_27->s_axi_araddr.bind(*p_27_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_araddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_27_s_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_27->s_axi_arlen.bind(*p_27_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_27_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_27->s_axi_arsize.bind(*p_27_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_27_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_27->s_axi_arburst.bind(*p_27_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_arburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_27_s_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_27->s_axi_arlock.bind(*p_27_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_27_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_27->s_axi_arcache.bind(*p_27_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_27_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_27->s_axi_arprot.bind(*p_27_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_27_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_27->s_axi_arqos.bind(*p_27_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_arqos);
        xsim_sc_channel<0, bool > *p_27_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_27->s_axi_arvalid.bind(*p_27_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_27_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_27->s_axi_arready.bind(*p_27_s_axi_arready);
        p_27_s_axi_arready->set_sv_netview_offsetfromdp(9070488);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_27_s_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_27->s_axi_rdata.bind(*p_27_s_axi_rdata);
        p_27_s_axi_rdata->set_sv_netview_offsetfromdp(9070544);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_27_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_27->s_axi_rresp.bind(*p_27_s_axi_rresp);
        p_27_s_axi_rresp->set_sv_netview_offsetfromdp(9070600);
        xsim_sc_channel<0, bool > *p_27_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_27->s_axi_rlast.bind(*p_27_s_axi_rlast);
        p_27_s_axi_rlast->set_sv_netview_offsetfromdp(9070656);
        xsim_sc_channel<0, bool > *p_27_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_27->s_axi_rvalid.bind(*p_27_s_axi_rvalid);
        p_27_s_axi_rvalid->set_sv_netview_offsetfromdp(9070712);
        xsim_sc_channel<0, bool > *p_27_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_27->s_axi_rready.bind(*p_27_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_rready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_27_m_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_27->m_axi_awaddr.bind(*p_27_m_axi_awaddr);
        p_27_m_axi_awaddr->set_sv_netview_offsetfromdp(9070824);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_27_m_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_27->m_axi_awlen.bind(*p_27_m_axi_awlen);
        p_27_m_axi_awlen->set_sv_netview_offsetfromdp(9070880);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_27_m_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_27->m_axi_awsize.bind(*p_27_m_axi_awsize);
        p_27_m_axi_awsize->set_sv_netview_offsetfromdp(9070936);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_27_m_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_27->m_axi_awburst.bind(*p_27_m_axi_awburst);
        p_27_m_axi_awburst->set_sv_netview_offsetfromdp(9070992);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_27_m_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_27->m_axi_awlock.bind(*p_27_m_axi_awlock);
        p_27_m_axi_awlock->set_sv_netview_offsetfromdp(9071048);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_27_m_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_27->m_axi_awcache.bind(*p_27_m_axi_awcache);
        p_27_m_axi_awcache->set_sv_netview_offsetfromdp(9071104);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_27_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_27->m_axi_awprot.bind(*p_27_m_axi_awprot);
        p_27_m_axi_awprot->set_sv_netview_offsetfromdp(9071160);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_27_m_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_27->m_axi_awqos.bind(*p_27_m_axi_awqos);
        p_27_m_axi_awqos->set_sv_netview_offsetfromdp(9071216);
        xsim_sc_channel<0, bool > *p_27_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_27->m_axi_awvalid.bind(*p_27_m_axi_awvalid);
        p_27_m_axi_awvalid->set_sv_netview_offsetfromdp(9071272);
        xsim_sc_channel<0, bool > *p_27_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_27->m_axi_awready.bind(*p_27_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_27_m_axi_awready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_27_m_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_27->m_axi_wdata.bind(*p_27_m_axi_wdata);
        p_27_m_axi_wdata->set_sv_netview_offsetfromdp(9071384);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_27_m_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_27->m_axi_wstrb.bind(*p_27_m_axi_wstrb);
        p_27_m_axi_wstrb->set_sv_netview_offsetfromdp(9071440);
        xsim_sc_channel<0, bool > *p_27_m_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_27->m_axi_wlast.bind(*p_27_m_axi_wlast);
        p_27_m_axi_wlast->set_sv_netview_offsetfromdp(9071496);
        xsim_sc_channel<0, bool > *p_27_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_27->m_axi_wvalid.bind(*p_27_m_axi_wvalid);
        p_27_m_axi_wvalid->set_sv_netview_offsetfromdp(9071552);
        xsim_sc_channel<0, bool > *p_27_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_27->m_axi_wready.bind(*p_27_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_27_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_27_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_27->m_axi_bresp.bind(*p_27_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_27_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_27_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_27->m_axi_bvalid.bind(*p_27_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_27_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_27_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_27->m_axi_bready.bind(*p_27_m_axi_bready);
        p_27_m_axi_bready->set_sv_netview_offsetfromdp(9071776);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_27_m_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_27->m_axi_araddr.bind(*p_27_m_axi_araddr);
        p_27_m_axi_araddr->set_sv_netview_offsetfromdp(9071832);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_27_m_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_27->m_axi_arlen.bind(*p_27_m_axi_arlen);
        p_27_m_axi_arlen->set_sv_netview_offsetfromdp(9071888);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_27_m_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_27->m_axi_arsize.bind(*p_27_m_axi_arsize);
        p_27_m_axi_arsize->set_sv_netview_offsetfromdp(9071944);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_27_m_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_27->m_axi_arburst.bind(*p_27_m_axi_arburst);
        p_27_m_axi_arburst->set_sv_netview_offsetfromdp(9072000);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_27_m_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_27->m_axi_arlock.bind(*p_27_m_axi_arlock);
        p_27_m_axi_arlock->set_sv_netview_offsetfromdp(9072056);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_27_m_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_27->m_axi_arcache.bind(*p_27_m_axi_arcache);
        p_27_m_axi_arcache->set_sv_netview_offsetfromdp(9072112);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_27_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_27->m_axi_arprot.bind(*p_27_m_axi_arprot);
        p_27_m_axi_arprot->set_sv_netview_offsetfromdp(9072168);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_27_m_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_27->m_axi_arqos.bind(*p_27_m_axi_arqos);
        p_27_m_axi_arqos->set_sv_netview_offsetfromdp(9072224);
        xsim_sc_channel<0, bool > *p_27_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_27->m_axi_arvalid.bind(*p_27_m_axi_arvalid);
        p_27_m_axi_arvalid->set_sv_netview_offsetfromdp(9072280);
        xsim_sc_channel<0, bool > *p_27_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_27->m_axi_arready.bind(*p_27_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_27_m_axi_arready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_27_m_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_27->m_axi_rdata.bind(*p_27_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_27_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_27_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_27->m_axi_rresp.bind(*p_27_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_27_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_27_m_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_27->m_axi_rlast.bind(*p_27_m_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_27_m_axi_rlast);
        xsim_sc_channel<0, bool > *p_27_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_27->m_axi_rvalid.bind(*p_27_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_27_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_27_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_27->m_axi_rready.bind(*p_27_m_axi_rready);
        p_27_m_axi_rready->set_sv_netview_offsetfromdp(9072616);
        sc_inst_28 = new bd_5dca_interconnect3_8_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.hmss_0.inst.path_8.interconnect3_8");
        sc_inst_28->xsim_set_dbg_index(2403);
        xsim_sc_channel<0, bool > *p_28_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_28->aclk.bind(*p_28_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_28_aclk);
        xsim_sc_channel<0, bool > *p_28_aclk1 = new xsim_sc_channel<0, bool >();
        sc_inst_28->aclk1.bind(*p_28_aclk1);
        (*_glb_hdl_sc_channel_map).push_back(p_28_aclk1);
        xsim_sc_channel<0, bool > *p_28_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_28->aresetn.bind(*p_28_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_28_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_28_S00_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_28->S00_AXI_awid.bind(*p_28_S00_AXI_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_28_S00_AXI_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_28_S00_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_28->S00_AXI_awaddr.bind(*p_28_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_28_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_28_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_28->S00_AXI_awlen.bind(*p_28_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_28_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_28_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_28->S00_AXI_awsize.bind(*p_28_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_28_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_28_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_28->S00_AXI_awburst.bind(*p_28_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_28_S00_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_28_S00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_28->S00_AXI_awlock.bind(*p_28_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_28_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_28_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_28->S00_AXI_awcache.bind(*p_28_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_28_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_28_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_28->S00_AXI_awprot.bind(*p_28_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_28_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_28_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_28->S00_AXI_awqos.bind(*p_28_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_28_S00_AXI_awqos);
        xsim_sc_channel<0, bool > *p_28_S00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_28->S00_AXI_awvalid.bind(*p_28_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_28_S00_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_28_S00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_28->S00_AXI_awready.bind(*p_28_S00_AXI_awready);
        p_28_S00_AXI_awready->set_sv_netview_offsetfromdp(9119408);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_28_S00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_28->S00_AXI_wdata.bind(*p_28_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_28_S00_AXI_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_28_S00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_28->S00_AXI_wstrb.bind(*p_28_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_28_S00_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_28_S00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_28->S00_AXI_wlast.bind(*p_28_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_28_S00_AXI_wlast);
        xsim_sc_channel<0, bool > *p_28_S00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_28->S00_AXI_wvalid.bind(*p_28_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_28_S00_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_28_S00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_28->S00_AXI_wready.bind(*p_28_S00_AXI_wready);
        p_28_S00_AXI_wready->set_sv_netview_offsetfromdp(9119688);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_28_S00_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_28->S00_AXI_bid.bind(*p_28_S00_AXI_bid);
        p_28_S00_AXI_bid->set_sv_netview_offsetfromdp(9119744);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_28_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_28->S00_AXI_bresp.bind(*p_28_S00_AXI_bresp);
        p_28_S00_AXI_bresp->set_sv_netview_offsetfromdp(9119800);
        xsim_sc_channel<0, bool > *p_28_S00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_28->S00_AXI_bvalid.bind(*p_28_S00_AXI_bvalid);
        p_28_S00_AXI_bvalid->set_sv_netview_offsetfromdp(9119856);
        xsim_sc_channel<0, bool > *p_28_S00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_28->S00_AXI_bready.bind(*p_28_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_28_S00_AXI_bready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_28_M00_AXI_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_28->M00_AXI_awaddr.bind(*p_28_M00_AXI_awaddr);
        p_28_M00_AXI_awaddr->set_sv_netview_offsetfromdp(9119968);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_28_M00_AXI_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_28->M00_AXI_awlen.bind(*p_28_M00_AXI_awlen);
        p_28_M00_AXI_awlen->set_sv_netview_offsetfromdp(9120024);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_28_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_28->M00_AXI_awsize.bind(*p_28_M00_AXI_awsize);
        p_28_M00_AXI_awsize->set_sv_netview_offsetfromdp(9120080);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_28_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_28->M00_AXI_awburst.bind(*p_28_M00_AXI_awburst);
        p_28_M00_AXI_awburst->set_sv_netview_offsetfromdp(9120136);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_28_M00_AXI_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_28->M00_AXI_awlock.bind(*p_28_M00_AXI_awlock);
        p_28_M00_AXI_awlock->set_sv_netview_offsetfromdp(9120192);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_28_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_28->M00_AXI_awcache.bind(*p_28_M00_AXI_awcache);
        p_28_M00_AXI_awcache->set_sv_netview_offsetfromdp(9120248);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_28_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_28->M00_AXI_awprot.bind(*p_28_M00_AXI_awprot);
        p_28_M00_AXI_awprot->set_sv_netview_offsetfromdp(9120304);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_28_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_28->M00_AXI_awqos.bind(*p_28_M00_AXI_awqos);
        p_28_M00_AXI_awqos->set_sv_netview_offsetfromdp(9120360);
        xsim_sc_channel<0, bool > *p_28_M00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_28->M00_AXI_awvalid.bind(*p_28_M00_AXI_awvalid);
        p_28_M00_AXI_awvalid->set_sv_netview_offsetfromdp(9120416);
        xsim_sc_channel<0, bool > *p_28_M00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_28->M00_AXI_awready.bind(*p_28_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_28_M00_AXI_awready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_28_M00_AXI_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_28->M00_AXI_wdata.bind(*p_28_M00_AXI_wdata);
        p_28_M00_AXI_wdata->set_sv_netview_offsetfromdp(9120528);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_28_M00_AXI_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_28->M00_AXI_wstrb.bind(*p_28_M00_AXI_wstrb);
        p_28_M00_AXI_wstrb->set_sv_netview_offsetfromdp(9120584);
        xsim_sc_channel<0, bool > *p_28_M00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_28->M00_AXI_wlast.bind(*p_28_M00_AXI_wlast);
        p_28_M00_AXI_wlast->set_sv_netview_offsetfromdp(9120640);
        xsim_sc_channel<0, bool > *p_28_M00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_28->M00_AXI_wvalid.bind(*p_28_M00_AXI_wvalid);
        p_28_M00_AXI_wvalid->set_sv_netview_offsetfromdp(9120696);
        xsim_sc_channel<0, bool > *p_28_M00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_28->M00_AXI_wready.bind(*p_28_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_28_M00_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_28_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_28->M00_AXI_bresp.bind(*p_28_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_28_M00_AXI_bresp);
        xsim_sc_channel<0, bool > *p_28_M00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_28->M00_AXI_bvalid.bind(*p_28_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_28_M00_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_28_M00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_28->M00_AXI_bready.bind(*p_28_M00_AXI_bready);
        p_28_M00_AXI_bready->set_sv_netview_offsetfromdp(9120920);
        sc_inst_29 = new bd_5dca_slice3_8_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.hmss_0.inst.path_8.slice3_8");
        sc_inst_29->xsim_set_dbg_index(2404);
        xsim_sc_channel<0, bool > *p_29_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_29->aclk.bind(*p_29_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_29_aclk);
        xsim_sc_channel<0, bool > *p_29_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_29->aresetn.bind(*p_29_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_29_aresetn);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_29_s_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_29->s_axi_awaddr.bind(*p_29_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_awaddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_29_s_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_29->s_axi_awlen.bind(*p_29_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_29_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_29->s_axi_awsize.bind(*p_29_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_29_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_29->s_axi_awburst.bind(*p_29_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_awburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_29_s_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_29->s_axi_awlock.bind(*p_29_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_29_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_29->s_axi_awcache.bind(*p_29_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_29_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_29->s_axi_awprot.bind(*p_29_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_29_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_29->s_axi_awqos.bind(*p_29_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_awqos);
        xsim_sc_channel<0, bool > *p_29_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_29->s_axi_awvalid.bind(*p_29_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_29_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_29->s_axi_awready.bind(*p_29_s_axi_awready);
        p_29_s_axi_awready->set_sv_netview_offsetfromdp(9121640);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_29_s_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_29->s_axi_wdata.bind(*p_29_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_wdata);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_29_s_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_29->s_axi_wstrb.bind(*p_29_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_29_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_29->s_axi_wlast.bind(*p_29_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_29_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_29->s_axi_wvalid.bind(*p_29_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_29_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_29->s_axi_wready.bind(*p_29_s_axi_wready);
        p_29_s_axi_wready->set_sv_netview_offsetfromdp(9121920);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_29_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_29->s_axi_bresp.bind(*p_29_s_axi_bresp);
        p_29_s_axi_bresp->set_sv_netview_offsetfromdp(9121976);
        xsim_sc_channel<0, bool > *p_29_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_29->s_axi_bvalid.bind(*p_29_s_axi_bvalid);
        p_29_s_axi_bvalid->set_sv_netview_offsetfromdp(9122032);
        xsim_sc_channel<0, bool > *p_29_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_29->s_axi_bready.bind(*p_29_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_bready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_29_s_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_29->s_axi_araddr.bind(*p_29_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_araddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_29_s_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_29->s_axi_arlen.bind(*p_29_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_29_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_29->s_axi_arsize.bind(*p_29_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_29_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_29->s_axi_arburst.bind(*p_29_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_arburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_29_s_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_29->s_axi_arlock.bind(*p_29_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_29_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_29->s_axi_arcache.bind(*p_29_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_29_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_29->s_axi_arprot.bind(*p_29_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_29_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_29->s_axi_arqos.bind(*p_29_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_arqos);
        xsim_sc_channel<0, bool > *p_29_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_29->s_axi_arvalid.bind(*p_29_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_29_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_29->s_axi_arready.bind(*p_29_s_axi_arready);
        p_29_s_axi_arready->set_sv_netview_offsetfromdp(9122648);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_29_s_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_29->s_axi_rdata.bind(*p_29_s_axi_rdata);
        p_29_s_axi_rdata->set_sv_netview_offsetfromdp(9122704);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_29_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_29->s_axi_rresp.bind(*p_29_s_axi_rresp);
        p_29_s_axi_rresp->set_sv_netview_offsetfromdp(9122760);
        xsim_sc_channel<0, bool > *p_29_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_29->s_axi_rlast.bind(*p_29_s_axi_rlast);
        p_29_s_axi_rlast->set_sv_netview_offsetfromdp(9122816);
        xsim_sc_channel<0, bool > *p_29_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_29->s_axi_rvalid.bind(*p_29_s_axi_rvalid);
        p_29_s_axi_rvalid->set_sv_netview_offsetfromdp(9122872);
        xsim_sc_channel<0, bool > *p_29_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_29->s_axi_rready.bind(*p_29_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_rready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_29_m_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_29->m_axi_awaddr.bind(*p_29_m_axi_awaddr);
        p_29_m_axi_awaddr->set_sv_netview_offsetfromdp(9122984);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_29_m_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_29->m_axi_awlen.bind(*p_29_m_axi_awlen);
        p_29_m_axi_awlen->set_sv_netview_offsetfromdp(9123040);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_29_m_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_29->m_axi_awsize.bind(*p_29_m_axi_awsize);
        p_29_m_axi_awsize->set_sv_netview_offsetfromdp(9123096);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_29_m_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_29->m_axi_awburst.bind(*p_29_m_axi_awburst);
        p_29_m_axi_awburst->set_sv_netview_offsetfromdp(9123152);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_29_m_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_29->m_axi_awlock.bind(*p_29_m_axi_awlock);
        p_29_m_axi_awlock->set_sv_netview_offsetfromdp(9123208);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_29_m_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_29->m_axi_awcache.bind(*p_29_m_axi_awcache);
        p_29_m_axi_awcache->set_sv_netview_offsetfromdp(9123264);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_29_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_29->m_axi_awprot.bind(*p_29_m_axi_awprot);
        p_29_m_axi_awprot->set_sv_netview_offsetfromdp(9123320);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_29_m_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_29->m_axi_awqos.bind(*p_29_m_axi_awqos);
        p_29_m_axi_awqos->set_sv_netview_offsetfromdp(9123376);
        xsim_sc_channel<0, bool > *p_29_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_29->m_axi_awvalid.bind(*p_29_m_axi_awvalid);
        p_29_m_axi_awvalid->set_sv_netview_offsetfromdp(9123432);
        xsim_sc_channel<0, bool > *p_29_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_29->m_axi_awready.bind(*p_29_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_29_m_axi_awready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_29_m_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_29->m_axi_wdata.bind(*p_29_m_axi_wdata);
        p_29_m_axi_wdata->set_sv_netview_offsetfromdp(9123544);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_29_m_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_29->m_axi_wstrb.bind(*p_29_m_axi_wstrb);
        p_29_m_axi_wstrb->set_sv_netview_offsetfromdp(9123600);
        xsim_sc_channel<0, bool > *p_29_m_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_29->m_axi_wlast.bind(*p_29_m_axi_wlast);
        p_29_m_axi_wlast->set_sv_netview_offsetfromdp(9123656);
        xsim_sc_channel<0, bool > *p_29_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_29->m_axi_wvalid.bind(*p_29_m_axi_wvalid);
        p_29_m_axi_wvalid->set_sv_netview_offsetfromdp(9123712);
        xsim_sc_channel<0, bool > *p_29_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_29->m_axi_wready.bind(*p_29_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_29_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_29_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_29->m_axi_bresp.bind(*p_29_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_29_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_29_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_29->m_axi_bvalid.bind(*p_29_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_29_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_29_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_29->m_axi_bready.bind(*p_29_m_axi_bready);
        p_29_m_axi_bready->set_sv_netview_offsetfromdp(9123936);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_29_m_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_29->m_axi_araddr.bind(*p_29_m_axi_araddr);
        p_29_m_axi_araddr->set_sv_netview_offsetfromdp(9123992);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_29_m_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_29->m_axi_arlen.bind(*p_29_m_axi_arlen);
        p_29_m_axi_arlen->set_sv_netview_offsetfromdp(9124048);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_29_m_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_29->m_axi_arsize.bind(*p_29_m_axi_arsize);
        p_29_m_axi_arsize->set_sv_netview_offsetfromdp(9124104);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_29_m_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_29->m_axi_arburst.bind(*p_29_m_axi_arburst);
        p_29_m_axi_arburst->set_sv_netview_offsetfromdp(9124160);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_29_m_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_29->m_axi_arlock.bind(*p_29_m_axi_arlock);
        p_29_m_axi_arlock->set_sv_netview_offsetfromdp(9124216);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_29_m_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_29->m_axi_arcache.bind(*p_29_m_axi_arcache);
        p_29_m_axi_arcache->set_sv_netview_offsetfromdp(9124272);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_29_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_29->m_axi_arprot.bind(*p_29_m_axi_arprot);
        p_29_m_axi_arprot->set_sv_netview_offsetfromdp(9124328);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_29_m_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_29->m_axi_arqos.bind(*p_29_m_axi_arqos);
        p_29_m_axi_arqos->set_sv_netview_offsetfromdp(9124384);
        xsim_sc_channel<0, bool > *p_29_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_29->m_axi_arvalid.bind(*p_29_m_axi_arvalid);
        p_29_m_axi_arvalid->set_sv_netview_offsetfromdp(9124440);
        xsim_sc_channel<0, bool > *p_29_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_29->m_axi_arready.bind(*p_29_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_29_m_axi_arready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_29_m_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_29->m_axi_rdata.bind(*p_29_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_29_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_29_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_29->m_axi_rresp.bind(*p_29_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_29_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_29_m_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_29->m_axi_rlast.bind(*p_29_m_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_29_m_axi_rlast);
        xsim_sc_channel<0, bool > *p_29_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_29->m_axi_rvalid.bind(*p_29_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_29_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_29_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_29->m_axi_rready.bind(*p_29_m_axi_rready);
        p_29_m_axi_rready->set_sv_netview_offsetfromdp(9124776);
        sc_inst_30 = new bd_5dca_vip_S00_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.hmss_0.inst.vip_S00");
        sc_inst_30->xsim_set_dbg_index(958);
        xsim_sc_channel<0, bool > *p_30_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_30->aclk.bind(*p_30_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_30_aclk);
        xsim_sc_channel<0, bool > *p_30_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_30->aresetn.bind(*p_30_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_30_aresetn);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_30_s_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_30->s_axi_awaddr.bind(*p_30_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_awaddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_30_s_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_30->s_axi_awlen.bind(*p_30_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_awlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_30_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_30->s_axi_awburst.bind(*p_30_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_awburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_30_s_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_30->s_axi_awlock.bind(*p_30_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_30_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_30->s_axi_awcache.bind(*p_30_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_30_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_30->s_axi_awprot.bind(*p_30_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_30_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_30->s_axi_awqos.bind(*p_30_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_awqos);
        xsim_sc_channel<0, bool > *p_30_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_30->s_axi_awvalid.bind(*p_30_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_30_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_30->s_axi_awready.bind(*p_30_s_axi_awready);
        p_30_s_axi_awready->set_sv_netview_offsetfromdp(9125440);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_30_s_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_30->s_axi_wdata.bind(*p_30_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_wdata);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_30_s_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_30->s_axi_wstrb.bind(*p_30_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_30_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_30->s_axi_wlast.bind(*p_30_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_30_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_30->s_axi_wvalid.bind(*p_30_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_30_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_30->s_axi_wready.bind(*p_30_s_axi_wready);
        p_30_s_axi_wready->set_sv_netview_offsetfromdp(9125720);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_30_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_30->s_axi_bresp.bind(*p_30_s_axi_bresp);
        p_30_s_axi_bresp->set_sv_netview_offsetfromdp(9125776);
        xsim_sc_channel<0, bool > *p_30_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_30->s_axi_bvalid.bind(*p_30_s_axi_bvalid);
        p_30_s_axi_bvalid->set_sv_netview_offsetfromdp(9125832);
        xsim_sc_channel<0, bool > *p_30_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_30->s_axi_bready.bind(*p_30_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_bready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_30_s_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_30->s_axi_araddr.bind(*p_30_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_araddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_30_s_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_30->s_axi_arlen.bind(*p_30_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_arlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_30_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_30->s_axi_arburst.bind(*p_30_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_arburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_30_s_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_30->s_axi_arlock.bind(*p_30_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_30_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_30->s_axi_arcache.bind(*p_30_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_30_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_30->s_axi_arprot.bind(*p_30_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_30_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_30->s_axi_arqos.bind(*p_30_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_arqos);
        xsim_sc_channel<0, bool > *p_30_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_30->s_axi_arvalid.bind(*p_30_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_30_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_30->s_axi_arready.bind(*p_30_s_axi_arready);
        p_30_s_axi_arready->set_sv_netview_offsetfromdp(9126392);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_30_s_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_30->s_axi_rdata.bind(*p_30_s_axi_rdata);
        p_30_s_axi_rdata->set_sv_netview_offsetfromdp(9126448);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_30_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_30->s_axi_rresp.bind(*p_30_s_axi_rresp);
        p_30_s_axi_rresp->set_sv_netview_offsetfromdp(9126504);
        xsim_sc_channel<0, bool > *p_30_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_30->s_axi_rlast.bind(*p_30_s_axi_rlast);
        p_30_s_axi_rlast->set_sv_netview_offsetfromdp(9126560);
        xsim_sc_channel<0, bool > *p_30_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_30->s_axi_rvalid.bind(*p_30_s_axi_rvalid);
        p_30_s_axi_rvalid->set_sv_netview_offsetfromdp(9126616);
        xsim_sc_channel<0, bool > *p_30_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_30->s_axi_rready.bind(*p_30_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_rready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_30_m_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_30->m_axi_awaddr.bind(*p_30_m_axi_awaddr);
        p_30_m_axi_awaddr->set_sv_netview_offsetfromdp(9126728);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_30_m_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_30->m_axi_awlen.bind(*p_30_m_axi_awlen);
        p_30_m_axi_awlen->set_sv_netview_offsetfromdp(9126784);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_30_m_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_30->m_axi_awburst.bind(*p_30_m_axi_awburst);
        p_30_m_axi_awburst->set_sv_netview_offsetfromdp(9126840);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_30_m_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_30->m_axi_awlock.bind(*p_30_m_axi_awlock);
        p_30_m_axi_awlock->set_sv_netview_offsetfromdp(9126896);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_30_m_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_30->m_axi_awcache.bind(*p_30_m_axi_awcache);
        p_30_m_axi_awcache->set_sv_netview_offsetfromdp(9126952);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_30_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_30->m_axi_awprot.bind(*p_30_m_axi_awprot);
        p_30_m_axi_awprot->set_sv_netview_offsetfromdp(9127008);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_30_m_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_30->m_axi_awqos.bind(*p_30_m_axi_awqos);
        p_30_m_axi_awqos->set_sv_netview_offsetfromdp(9127064);
        xsim_sc_channel<0, bool > *p_30_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_30->m_axi_awvalid.bind(*p_30_m_axi_awvalid);
        p_30_m_axi_awvalid->set_sv_netview_offsetfromdp(9127120);
        xsim_sc_channel<0, bool > *p_30_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_30->m_axi_awready.bind(*p_30_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_30_m_axi_awready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_30_m_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_30->m_axi_wdata.bind(*p_30_m_axi_wdata);
        p_30_m_axi_wdata->set_sv_netview_offsetfromdp(9127232);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_30_m_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_30->m_axi_wstrb.bind(*p_30_m_axi_wstrb);
        p_30_m_axi_wstrb->set_sv_netview_offsetfromdp(9127288);
        xsim_sc_channel<0, bool > *p_30_m_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_30->m_axi_wlast.bind(*p_30_m_axi_wlast);
        p_30_m_axi_wlast->set_sv_netview_offsetfromdp(9127344);
        xsim_sc_channel<0, bool > *p_30_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_30->m_axi_wvalid.bind(*p_30_m_axi_wvalid);
        p_30_m_axi_wvalid->set_sv_netview_offsetfromdp(9127400);
        xsim_sc_channel<0, bool > *p_30_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_30->m_axi_wready.bind(*p_30_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_30_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_30_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_30->m_axi_bresp.bind(*p_30_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_30_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_30_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_30->m_axi_bvalid.bind(*p_30_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_30_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_30_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_30->m_axi_bready.bind(*p_30_m_axi_bready);
        p_30_m_axi_bready->set_sv_netview_offsetfromdp(9127624);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_30_m_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_30->m_axi_araddr.bind(*p_30_m_axi_araddr);
        p_30_m_axi_araddr->set_sv_netview_offsetfromdp(9127680);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_30_m_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_30->m_axi_arlen.bind(*p_30_m_axi_arlen);
        p_30_m_axi_arlen->set_sv_netview_offsetfromdp(9127736);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_30_m_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_30->m_axi_arburst.bind(*p_30_m_axi_arburst);
        p_30_m_axi_arburst->set_sv_netview_offsetfromdp(9127792);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_30_m_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_30->m_axi_arlock.bind(*p_30_m_axi_arlock);
        p_30_m_axi_arlock->set_sv_netview_offsetfromdp(9127848);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_30_m_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_30->m_axi_arcache.bind(*p_30_m_axi_arcache);
        p_30_m_axi_arcache->set_sv_netview_offsetfromdp(9127904);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_30_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_30->m_axi_arprot.bind(*p_30_m_axi_arprot);
        p_30_m_axi_arprot->set_sv_netview_offsetfromdp(9127960);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_30_m_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_30->m_axi_arqos.bind(*p_30_m_axi_arqos);
        p_30_m_axi_arqos->set_sv_netview_offsetfromdp(9128016);
        xsim_sc_channel<0, bool > *p_30_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_30->m_axi_arvalid.bind(*p_30_m_axi_arvalid);
        p_30_m_axi_arvalid->set_sv_netview_offsetfromdp(9128072);
        xsim_sc_channel<0, bool > *p_30_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_30->m_axi_arready.bind(*p_30_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_30_m_axi_arready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_30_m_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_30->m_axi_rdata.bind(*p_30_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_30_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_30_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_30->m_axi_rresp.bind(*p_30_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_30_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_30_m_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_30->m_axi_rlast.bind(*p_30_m_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_30_m_axi_rlast);
        xsim_sc_channel<0, bool > *p_30_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_30->m_axi_rvalid.bind(*p_30_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_30_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_30_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_30->m_axi_rready.bind(*p_30_m_axi_rready);
        p_30_m_axi_rready->set_sv_netview_offsetfromdp(9128408);
        sc_inst_31 = new bd_5dca_vip_S01_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.hmss_0.inst.vip_S01");
        sc_inst_31->xsim_set_dbg_index(959);
        xsim_sc_channel<0, bool > *p_31_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_31->aclk.bind(*p_31_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_31_aclk);
        xsim_sc_channel<0, bool > *p_31_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_31->aresetn.bind(*p_31_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_31_aresetn);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_31_s_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_31->s_axi_awaddr.bind(*p_31_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_awaddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_31_s_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_31->s_axi_awlen.bind(*p_31_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_awlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_31_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_31->s_axi_awburst.bind(*p_31_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_awburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_31_s_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_31->s_axi_awlock.bind(*p_31_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_31_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_31->s_axi_awcache.bind(*p_31_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_31_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_31->s_axi_awprot.bind(*p_31_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_31_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_31->s_axi_awqos.bind(*p_31_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_awqos);
        xsim_sc_channel<0, bool > *p_31_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_31->s_axi_awvalid.bind(*p_31_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_31_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_31->s_axi_awready.bind(*p_31_s_axi_awready);
        p_31_s_axi_awready->set_sv_netview_offsetfromdp(9129072);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_31_s_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_31->s_axi_wdata.bind(*p_31_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_wdata);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_31_s_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_31->s_axi_wstrb.bind(*p_31_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_31_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_31->s_axi_wlast.bind(*p_31_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_31_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_31->s_axi_wvalid.bind(*p_31_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_31_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_31->s_axi_wready.bind(*p_31_s_axi_wready);
        p_31_s_axi_wready->set_sv_netview_offsetfromdp(9129352);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_31_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_31->s_axi_bresp.bind(*p_31_s_axi_bresp);
        p_31_s_axi_bresp->set_sv_netview_offsetfromdp(9129408);
        xsim_sc_channel<0, bool > *p_31_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_31->s_axi_bvalid.bind(*p_31_s_axi_bvalid);
        p_31_s_axi_bvalid->set_sv_netview_offsetfromdp(9129464);
        xsim_sc_channel<0, bool > *p_31_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_31->s_axi_bready.bind(*p_31_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_bready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_31_s_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_31->s_axi_araddr.bind(*p_31_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_araddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_31_s_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_31->s_axi_arlen.bind(*p_31_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_arlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_31_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_31->s_axi_arburst.bind(*p_31_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_arburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_31_s_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_31->s_axi_arlock.bind(*p_31_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_31_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_31->s_axi_arcache.bind(*p_31_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_31_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_31->s_axi_arprot.bind(*p_31_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_31_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_31->s_axi_arqos.bind(*p_31_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_arqos);
        xsim_sc_channel<0, bool > *p_31_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_31->s_axi_arvalid.bind(*p_31_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_31_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_31->s_axi_arready.bind(*p_31_s_axi_arready);
        p_31_s_axi_arready->set_sv_netview_offsetfromdp(9130024);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_31_s_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_31->s_axi_rdata.bind(*p_31_s_axi_rdata);
        p_31_s_axi_rdata->set_sv_netview_offsetfromdp(9130080);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_31_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_31->s_axi_rresp.bind(*p_31_s_axi_rresp);
        p_31_s_axi_rresp->set_sv_netview_offsetfromdp(9130136);
        xsim_sc_channel<0, bool > *p_31_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_31->s_axi_rlast.bind(*p_31_s_axi_rlast);
        p_31_s_axi_rlast->set_sv_netview_offsetfromdp(9130192);
        xsim_sc_channel<0, bool > *p_31_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_31->s_axi_rvalid.bind(*p_31_s_axi_rvalid);
        p_31_s_axi_rvalid->set_sv_netview_offsetfromdp(9130248);
        xsim_sc_channel<0, bool > *p_31_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_31->s_axi_rready.bind(*p_31_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_rready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_31_m_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_31->m_axi_awaddr.bind(*p_31_m_axi_awaddr);
        p_31_m_axi_awaddr->set_sv_netview_offsetfromdp(9130360);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_31_m_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_31->m_axi_awlen.bind(*p_31_m_axi_awlen);
        p_31_m_axi_awlen->set_sv_netview_offsetfromdp(9130416);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_31_m_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_31->m_axi_awburst.bind(*p_31_m_axi_awburst);
        p_31_m_axi_awburst->set_sv_netview_offsetfromdp(9130472);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_31_m_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_31->m_axi_awlock.bind(*p_31_m_axi_awlock);
        p_31_m_axi_awlock->set_sv_netview_offsetfromdp(9130528);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_31_m_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_31->m_axi_awcache.bind(*p_31_m_axi_awcache);
        p_31_m_axi_awcache->set_sv_netview_offsetfromdp(9130584);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_31_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_31->m_axi_awprot.bind(*p_31_m_axi_awprot);
        p_31_m_axi_awprot->set_sv_netview_offsetfromdp(9130640);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_31_m_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_31->m_axi_awqos.bind(*p_31_m_axi_awqos);
        p_31_m_axi_awqos->set_sv_netview_offsetfromdp(9130696);
        xsim_sc_channel<0, bool > *p_31_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_31->m_axi_awvalid.bind(*p_31_m_axi_awvalid);
        p_31_m_axi_awvalid->set_sv_netview_offsetfromdp(9130752);
        xsim_sc_channel<0, bool > *p_31_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_31->m_axi_awready.bind(*p_31_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_31_m_axi_awready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_31_m_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_31->m_axi_wdata.bind(*p_31_m_axi_wdata);
        p_31_m_axi_wdata->set_sv_netview_offsetfromdp(9130864);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_31_m_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_31->m_axi_wstrb.bind(*p_31_m_axi_wstrb);
        p_31_m_axi_wstrb->set_sv_netview_offsetfromdp(9130920);
        xsim_sc_channel<0, bool > *p_31_m_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_31->m_axi_wlast.bind(*p_31_m_axi_wlast);
        p_31_m_axi_wlast->set_sv_netview_offsetfromdp(9130976);
        xsim_sc_channel<0, bool > *p_31_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_31->m_axi_wvalid.bind(*p_31_m_axi_wvalid);
        p_31_m_axi_wvalid->set_sv_netview_offsetfromdp(9131032);
        xsim_sc_channel<0, bool > *p_31_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_31->m_axi_wready.bind(*p_31_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_31_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_31_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_31->m_axi_bresp.bind(*p_31_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_31_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_31_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_31->m_axi_bvalid.bind(*p_31_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_31_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_31_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_31->m_axi_bready.bind(*p_31_m_axi_bready);
        p_31_m_axi_bready->set_sv_netview_offsetfromdp(9131256);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_31_m_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_31->m_axi_araddr.bind(*p_31_m_axi_araddr);
        p_31_m_axi_araddr->set_sv_netview_offsetfromdp(9131312);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_31_m_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_31->m_axi_arlen.bind(*p_31_m_axi_arlen);
        p_31_m_axi_arlen->set_sv_netview_offsetfromdp(9131368);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_31_m_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_31->m_axi_arburst.bind(*p_31_m_axi_arburst);
        p_31_m_axi_arburst->set_sv_netview_offsetfromdp(9131424);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_31_m_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_31->m_axi_arlock.bind(*p_31_m_axi_arlock);
        p_31_m_axi_arlock->set_sv_netview_offsetfromdp(9131480);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_31_m_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_31->m_axi_arcache.bind(*p_31_m_axi_arcache);
        p_31_m_axi_arcache->set_sv_netview_offsetfromdp(9131536);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_31_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_31->m_axi_arprot.bind(*p_31_m_axi_arprot);
        p_31_m_axi_arprot->set_sv_netview_offsetfromdp(9131592);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_31_m_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_31->m_axi_arqos.bind(*p_31_m_axi_arqos);
        p_31_m_axi_arqos->set_sv_netview_offsetfromdp(9131648);
        xsim_sc_channel<0, bool > *p_31_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_31->m_axi_arvalid.bind(*p_31_m_axi_arvalid);
        p_31_m_axi_arvalid->set_sv_netview_offsetfromdp(9131704);
        xsim_sc_channel<0, bool > *p_31_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_31->m_axi_arready.bind(*p_31_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_31_m_axi_arready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_31_m_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_31->m_axi_rdata.bind(*p_31_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_31_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_31_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_31->m_axi_rresp.bind(*p_31_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_31_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_31_m_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_31->m_axi_rlast.bind(*p_31_m_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_31_m_axi_rlast);
        xsim_sc_channel<0, bool > *p_31_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_31->m_axi_rvalid.bind(*p_31_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_31_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_31_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_31->m_axi_rready.bind(*p_31_m_axi_rready);
        p_31_m_axi_rready->set_sv_netview_offsetfromdp(9132040);
        sc_inst_32 = new bd_5dca_vip_S02_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.hmss_0.inst.vip_S02");
        sc_inst_32->xsim_set_dbg_index(960);
        xsim_sc_channel<0, bool > *p_32_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_32->aclk.bind(*p_32_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_32_aclk);
        xsim_sc_channel<0, bool > *p_32_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_32->aresetn.bind(*p_32_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_32_aresetn);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_32_s_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_32->s_axi_awaddr.bind(*p_32_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_awaddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_32_s_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_32->s_axi_awlen.bind(*p_32_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_awlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_32_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_32->s_axi_awburst.bind(*p_32_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_awburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_32_s_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_32->s_axi_awlock.bind(*p_32_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_32_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_32->s_axi_awcache.bind(*p_32_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_32_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_32->s_axi_awprot.bind(*p_32_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_32_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_32->s_axi_awqos.bind(*p_32_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_awqos);
        xsim_sc_channel<0, bool > *p_32_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_32->s_axi_awvalid.bind(*p_32_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_32_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_32->s_axi_awready.bind(*p_32_s_axi_awready);
        p_32_s_axi_awready->set_sv_netview_offsetfromdp(9132704);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_32_s_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_32->s_axi_wdata.bind(*p_32_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_wdata);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_32_s_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_32->s_axi_wstrb.bind(*p_32_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_32_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_32->s_axi_wlast.bind(*p_32_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_32_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_32->s_axi_wvalid.bind(*p_32_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_32_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_32->s_axi_wready.bind(*p_32_s_axi_wready);
        p_32_s_axi_wready->set_sv_netview_offsetfromdp(9132984);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_32_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_32->s_axi_bresp.bind(*p_32_s_axi_bresp);
        p_32_s_axi_bresp->set_sv_netview_offsetfromdp(9133040);
        xsim_sc_channel<0, bool > *p_32_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_32->s_axi_bvalid.bind(*p_32_s_axi_bvalid);
        p_32_s_axi_bvalid->set_sv_netview_offsetfromdp(9133096);
        xsim_sc_channel<0, bool > *p_32_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_32->s_axi_bready.bind(*p_32_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_bready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_32_s_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_32->s_axi_araddr.bind(*p_32_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_araddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_32_s_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_32->s_axi_arlen.bind(*p_32_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_arlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_32_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_32->s_axi_arburst.bind(*p_32_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_arburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_32_s_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_32->s_axi_arlock.bind(*p_32_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_32_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_32->s_axi_arcache.bind(*p_32_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_32_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_32->s_axi_arprot.bind(*p_32_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_32_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_32->s_axi_arqos.bind(*p_32_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_arqos);
        xsim_sc_channel<0, bool > *p_32_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_32->s_axi_arvalid.bind(*p_32_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_32_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_32->s_axi_arready.bind(*p_32_s_axi_arready);
        p_32_s_axi_arready->set_sv_netview_offsetfromdp(9133656);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_32_s_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_32->s_axi_rdata.bind(*p_32_s_axi_rdata);
        p_32_s_axi_rdata->set_sv_netview_offsetfromdp(9133712);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_32_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_32->s_axi_rresp.bind(*p_32_s_axi_rresp);
        p_32_s_axi_rresp->set_sv_netview_offsetfromdp(9133768);
        xsim_sc_channel<0, bool > *p_32_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_32->s_axi_rlast.bind(*p_32_s_axi_rlast);
        p_32_s_axi_rlast->set_sv_netview_offsetfromdp(9133824);
        xsim_sc_channel<0, bool > *p_32_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_32->s_axi_rvalid.bind(*p_32_s_axi_rvalid);
        p_32_s_axi_rvalid->set_sv_netview_offsetfromdp(9133880);
        xsim_sc_channel<0, bool > *p_32_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_32->s_axi_rready.bind(*p_32_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_rready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_32_m_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_32->m_axi_awaddr.bind(*p_32_m_axi_awaddr);
        p_32_m_axi_awaddr->set_sv_netview_offsetfromdp(9133992);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_32_m_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_32->m_axi_awlen.bind(*p_32_m_axi_awlen);
        p_32_m_axi_awlen->set_sv_netview_offsetfromdp(9134048);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_32_m_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_32->m_axi_awburst.bind(*p_32_m_axi_awburst);
        p_32_m_axi_awburst->set_sv_netview_offsetfromdp(9134104);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_32_m_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_32->m_axi_awlock.bind(*p_32_m_axi_awlock);
        p_32_m_axi_awlock->set_sv_netview_offsetfromdp(9134160);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_32_m_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_32->m_axi_awcache.bind(*p_32_m_axi_awcache);
        p_32_m_axi_awcache->set_sv_netview_offsetfromdp(9134216);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_32_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_32->m_axi_awprot.bind(*p_32_m_axi_awprot);
        p_32_m_axi_awprot->set_sv_netview_offsetfromdp(9134272);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_32_m_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_32->m_axi_awqos.bind(*p_32_m_axi_awqos);
        p_32_m_axi_awqos->set_sv_netview_offsetfromdp(9134328);
        xsim_sc_channel<0, bool > *p_32_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_32->m_axi_awvalid.bind(*p_32_m_axi_awvalid);
        p_32_m_axi_awvalid->set_sv_netview_offsetfromdp(9134384);
        xsim_sc_channel<0, bool > *p_32_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_32->m_axi_awready.bind(*p_32_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_32_m_axi_awready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_32_m_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_32->m_axi_wdata.bind(*p_32_m_axi_wdata);
        p_32_m_axi_wdata->set_sv_netview_offsetfromdp(9134496);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_32_m_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_32->m_axi_wstrb.bind(*p_32_m_axi_wstrb);
        p_32_m_axi_wstrb->set_sv_netview_offsetfromdp(9134552);
        xsim_sc_channel<0, bool > *p_32_m_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_32->m_axi_wlast.bind(*p_32_m_axi_wlast);
        p_32_m_axi_wlast->set_sv_netview_offsetfromdp(9134608);
        xsim_sc_channel<0, bool > *p_32_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_32->m_axi_wvalid.bind(*p_32_m_axi_wvalid);
        p_32_m_axi_wvalid->set_sv_netview_offsetfromdp(9134664);
        xsim_sc_channel<0, bool > *p_32_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_32->m_axi_wready.bind(*p_32_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_32_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_32_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_32->m_axi_bresp.bind(*p_32_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_32_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_32_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_32->m_axi_bvalid.bind(*p_32_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_32_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_32_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_32->m_axi_bready.bind(*p_32_m_axi_bready);
        p_32_m_axi_bready->set_sv_netview_offsetfromdp(9134888);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_32_m_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_32->m_axi_araddr.bind(*p_32_m_axi_araddr);
        p_32_m_axi_araddr->set_sv_netview_offsetfromdp(9134944);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_32_m_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_32->m_axi_arlen.bind(*p_32_m_axi_arlen);
        p_32_m_axi_arlen->set_sv_netview_offsetfromdp(9135000);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_32_m_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_32->m_axi_arburst.bind(*p_32_m_axi_arburst);
        p_32_m_axi_arburst->set_sv_netview_offsetfromdp(9135056);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_32_m_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_32->m_axi_arlock.bind(*p_32_m_axi_arlock);
        p_32_m_axi_arlock->set_sv_netview_offsetfromdp(9135112);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_32_m_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_32->m_axi_arcache.bind(*p_32_m_axi_arcache);
        p_32_m_axi_arcache->set_sv_netview_offsetfromdp(9135168);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_32_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_32->m_axi_arprot.bind(*p_32_m_axi_arprot);
        p_32_m_axi_arprot->set_sv_netview_offsetfromdp(9135224);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_32_m_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_32->m_axi_arqos.bind(*p_32_m_axi_arqos);
        p_32_m_axi_arqos->set_sv_netview_offsetfromdp(9135280);
        xsim_sc_channel<0, bool > *p_32_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_32->m_axi_arvalid.bind(*p_32_m_axi_arvalid);
        p_32_m_axi_arvalid->set_sv_netview_offsetfromdp(9135336);
        xsim_sc_channel<0, bool > *p_32_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_32->m_axi_arready.bind(*p_32_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_32_m_axi_arready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_32_m_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_32->m_axi_rdata.bind(*p_32_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_32_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_32_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_32->m_axi_rresp.bind(*p_32_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_32_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_32_m_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_32->m_axi_rlast.bind(*p_32_m_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_32_m_axi_rlast);
        xsim_sc_channel<0, bool > *p_32_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_32->m_axi_rvalid.bind(*p_32_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_32_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_32_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_32->m_axi_rready.bind(*p_32_m_axi_rready);
        p_32_m_axi_rready->set_sv_netview_offsetfromdp(9135672);
        sc_inst_33 = new bd_5dca_vip_S03_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.hmss_0.inst.vip_S03");
        sc_inst_33->xsim_set_dbg_index(961);
        xsim_sc_channel<0, bool > *p_33_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_33->aclk.bind(*p_33_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_33_aclk);
        xsim_sc_channel<0, bool > *p_33_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_33->aresetn.bind(*p_33_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_33_aresetn);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_33_s_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_33->s_axi_awaddr.bind(*p_33_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_33_s_axi_awaddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_33_s_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_33->s_axi_awlen.bind(*p_33_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_33_s_axi_awlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_33_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_33->s_axi_awburst.bind(*p_33_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_33_s_axi_awburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_33_s_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_33->s_axi_awlock.bind(*p_33_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_33_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_33_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_33->s_axi_awcache.bind(*p_33_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_33_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_33_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_33->s_axi_awprot.bind(*p_33_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_33_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_33_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_33->s_axi_awqos.bind(*p_33_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_33_s_axi_awqos);
        xsim_sc_channel<0, bool > *p_33_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_33->s_axi_awvalid.bind(*p_33_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_33_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_33_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_33->s_axi_awready.bind(*p_33_s_axi_awready);
        p_33_s_axi_awready->set_sv_netview_offsetfromdp(9136336);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_33_s_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_33->s_axi_wdata.bind(*p_33_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_33_s_axi_wdata);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_33_s_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_33->s_axi_wstrb.bind(*p_33_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_33_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_33_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_33->s_axi_wlast.bind(*p_33_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_33_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_33_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_33->s_axi_wvalid.bind(*p_33_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_33_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_33_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_33->s_axi_wready.bind(*p_33_s_axi_wready);
        p_33_s_axi_wready->set_sv_netview_offsetfromdp(9136616);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_33_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_33->s_axi_bresp.bind(*p_33_s_axi_bresp);
        p_33_s_axi_bresp->set_sv_netview_offsetfromdp(9136672);
        xsim_sc_channel<0, bool > *p_33_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_33->s_axi_bvalid.bind(*p_33_s_axi_bvalid);
        p_33_s_axi_bvalid->set_sv_netview_offsetfromdp(9136728);
        xsim_sc_channel<0, bool > *p_33_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_33->s_axi_bready.bind(*p_33_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_33_s_axi_bready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_33_s_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_33->s_axi_araddr.bind(*p_33_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_33_s_axi_araddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_33_s_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_33->s_axi_arlen.bind(*p_33_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_33_s_axi_arlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_33_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_33->s_axi_arburst.bind(*p_33_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_33_s_axi_arburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_33_s_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_33->s_axi_arlock.bind(*p_33_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_33_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_33_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_33->s_axi_arcache.bind(*p_33_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_33_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_33_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_33->s_axi_arprot.bind(*p_33_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_33_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_33_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_33->s_axi_arqos.bind(*p_33_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_33_s_axi_arqos);
        xsim_sc_channel<0, bool > *p_33_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_33->s_axi_arvalid.bind(*p_33_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_33_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_33_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_33->s_axi_arready.bind(*p_33_s_axi_arready);
        p_33_s_axi_arready->set_sv_netview_offsetfromdp(9137288);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_33_s_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_33->s_axi_rdata.bind(*p_33_s_axi_rdata);
        p_33_s_axi_rdata->set_sv_netview_offsetfromdp(9137344);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_33_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_33->s_axi_rresp.bind(*p_33_s_axi_rresp);
        p_33_s_axi_rresp->set_sv_netview_offsetfromdp(9137400);
        xsim_sc_channel<0, bool > *p_33_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_33->s_axi_rlast.bind(*p_33_s_axi_rlast);
        p_33_s_axi_rlast->set_sv_netview_offsetfromdp(9137456);
        xsim_sc_channel<0, bool > *p_33_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_33->s_axi_rvalid.bind(*p_33_s_axi_rvalid);
        p_33_s_axi_rvalid->set_sv_netview_offsetfromdp(9137512);
        xsim_sc_channel<0, bool > *p_33_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_33->s_axi_rready.bind(*p_33_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_33_s_axi_rready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_33_m_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_33->m_axi_awaddr.bind(*p_33_m_axi_awaddr);
        p_33_m_axi_awaddr->set_sv_netview_offsetfromdp(9137624);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_33_m_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_33->m_axi_awlen.bind(*p_33_m_axi_awlen);
        p_33_m_axi_awlen->set_sv_netview_offsetfromdp(9137680);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_33_m_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_33->m_axi_awburst.bind(*p_33_m_axi_awburst);
        p_33_m_axi_awburst->set_sv_netview_offsetfromdp(9137736);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_33_m_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_33->m_axi_awlock.bind(*p_33_m_axi_awlock);
        p_33_m_axi_awlock->set_sv_netview_offsetfromdp(9137792);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_33_m_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_33->m_axi_awcache.bind(*p_33_m_axi_awcache);
        p_33_m_axi_awcache->set_sv_netview_offsetfromdp(9137848);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_33_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_33->m_axi_awprot.bind(*p_33_m_axi_awprot);
        p_33_m_axi_awprot->set_sv_netview_offsetfromdp(9137904);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_33_m_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_33->m_axi_awqos.bind(*p_33_m_axi_awqos);
        p_33_m_axi_awqos->set_sv_netview_offsetfromdp(9137960);
        xsim_sc_channel<0, bool > *p_33_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_33->m_axi_awvalid.bind(*p_33_m_axi_awvalid);
        p_33_m_axi_awvalid->set_sv_netview_offsetfromdp(9138016);
        xsim_sc_channel<0, bool > *p_33_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_33->m_axi_awready.bind(*p_33_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_33_m_axi_awready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_33_m_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_33->m_axi_wdata.bind(*p_33_m_axi_wdata);
        p_33_m_axi_wdata->set_sv_netview_offsetfromdp(9138128);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_33_m_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_33->m_axi_wstrb.bind(*p_33_m_axi_wstrb);
        p_33_m_axi_wstrb->set_sv_netview_offsetfromdp(9138184);
        xsim_sc_channel<0, bool > *p_33_m_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_33->m_axi_wlast.bind(*p_33_m_axi_wlast);
        p_33_m_axi_wlast->set_sv_netview_offsetfromdp(9138240);
        xsim_sc_channel<0, bool > *p_33_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_33->m_axi_wvalid.bind(*p_33_m_axi_wvalid);
        p_33_m_axi_wvalid->set_sv_netview_offsetfromdp(9138296);
        xsim_sc_channel<0, bool > *p_33_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_33->m_axi_wready.bind(*p_33_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_33_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_33_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_33->m_axi_bresp.bind(*p_33_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_33_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_33_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_33->m_axi_bvalid.bind(*p_33_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_33_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_33_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_33->m_axi_bready.bind(*p_33_m_axi_bready);
        p_33_m_axi_bready->set_sv_netview_offsetfromdp(9138520);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_33_m_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_33->m_axi_araddr.bind(*p_33_m_axi_araddr);
        p_33_m_axi_araddr->set_sv_netview_offsetfromdp(9138576);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_33_m_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_33->m_axi_arlen.bind(*p_33_m_axi_arlen);
        p_33_m_axi_arlen->set_sv_netview_offsetfromdp(9138632);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_33_m_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_33->m_axi_arburst.bind(*p_33_m_axi_arburst);
        p_33_m_axi_arburst->set_sv_netview_offsetfromdp(9138688);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_33_m_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_33->m_axi_arlock.bind(*p_33_m_axi_arlock);
        p_33_m_axi_arlock->set_sv_netview_offsetfromdp(9138744);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_33_m_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_33->m_axi_arcache.bind(*p_33_m_axi_arcache);
        p_33_m_axi_arcache->set_sv_netview_offsetfromdp(9138800);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_33_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_33->m_axi_arprot.bind(*p_33_m_axi_arprot);
        p_33_m_axi_arprot->set_sv_netview_offsetfromdp(9138856);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_33_m_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_33->m_axi_arqos.bind(*p_33_m_axi_arqos);
        p_33_m_axi_arqos->set_sv_netview_offsetfromdp(9138912);
        xsim_sc_channel<0, bool > *p_33_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_33->m_axi_arvalid.bind(*p_33_m_axi_arvalid);
        p_33_m_axi_arvalid->set_sv_netview_offsetfromdp(9138968);
        xsim_sc_channel<0, bool > *p_33_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_33->m_axi_arready.bind(*p_33_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_33_m_axi_arready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_33_m_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_33->m_axi_rdata.bind(*p_33_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_33_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_33_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_33->m_axi_rresp.bind(*p_33_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_33_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_33_m_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_33->m_axi_rlast.bind(*p_33_m_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_33_m_axi_rlast);
        xsim_sc_channel<0, bool > *p_33_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_33->m_axi_rvalid.bind(*p_33_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_33_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_33_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_33->m_axi_rready.bind(*p_33_m_axi_rready);
        p_33_m_axi_rready->set_sv_netview_offsetfromdp(9139304);
        sc_inst_34 = new pfm_dynamic_irq_const_tieoff_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.irq_const_tieoff");
        sc_inst_34->xsim_set_dbg_index(56);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_34_dout = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_34->dout.bind(*p_34_dout);
        p_34_dout->set_sv_netview_offsetfromdp(9308456);
        sc_inst_35 = new bd_d216_sci(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.bd_d216_sci_inst");
        sc_inst_35->xsim_set_dbg_index(1313);
        sc_inst_36 = new bd_d216_interconnect_DDR4_MEM00_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.interconnect.interconnect_ddr4_mem00");
        sc_inst_36->xsim_set_dbg_index(2685);
        xsim_sc_channel<0, bool > *p_36_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_36->aclk.bind(*p_36_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_36_aclk);
        xsim_sc_channel<0, bool > *p_36_aclk1 = new xsim_sc_channel<0, bool >();
        sc_inst_36->aclk1.bind(*p_36_aclk1);
        (*_glb_hdl_sc_channel_map).push_back(p_36_aclk1);
        xsim_sc_channel<0, bool > *p_36_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_36->aresetn.bind(*p_36_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_36_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_36_S00_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_36->S00_AXI_awid.bind(*p_36_S00_AXI_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_awid);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_36_S00_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_36->S00_AXI_awaddr.bind(*p_36_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_36_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_36->S00_AXI_awlen.bind(*p_36_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_36_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_36->S00_AXI_awsize.bind(*p_36_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_36_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_36->S00_AXI_awburst.bind(*p_36_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_36_S00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_36->S00_AXI_awlock.bind(*p_36_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_36_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_36->S00_AXI_awcache.bind(*p_36_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_36_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_36->S00_AXI_awprot.bind(*p_36_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_36_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_36->S00_AXI_awqos.bind(*p_36_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_awqos);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_36_S00_AXI_awuser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_36->S00_AXI_awuser.bind(*p_36_S00_AXI_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_awuser);
        xsim_sc_channel<0, bool > *p_36_S00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_36->S00_AXI_awvalid.bind(*p_36_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_36_S00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_36->S00_AXI_awready.bind(*p_36_S00_AXI_awready);
        p_36_S00_AXI_awready->set_sv_netview_offsetfromdp(10340312);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_36_S00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_36->S00_AXI_wdata.bind(*p_36_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_36_S00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_36->S00_AXI_wstrb.bind(*p_36_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_36_S00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_36->S00_AXI_wlast.bind(*p_36_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_wlast);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_36_S00_AXI_wuser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_36->S00_AXI_wuser.bind(*p_36_S00_AXI_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_wuser);
        xsim_sc_channel<0, bool > *p_36_S00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_36->S00_AXI_wvalid.bind(*p_36_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_36_S00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_36->S00_AXI_wready.bind(*p_36_S00_AXI_wready);
        p_36_S00_AXI_wready->set_sv_netview_offsetfromdp(10340648);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_36_S00_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_36->S00_AXI_bid.bind(*p_36_S00_AXI_bid);
        p_36_S00_AXI_bid->set_sv_netview_offsetfromdp(10340704);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_36_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_36->S00_AXI_bresp.bind(*p_36_S00_AXI_bresp);
        p_36_S00_AXI_bresp->set_sv_netview_offsetfromdp(10340760);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_36_S00_AXI_buser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_36->S00_AXI_buser.bind(*p_36_S00_AXI_buser);
        p_36_S00_AXI_buser->set_sv_netview_offsetfromdp(10340816);
        xsim_sc_channel<0, bool > *p_36_S00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_36->S00_AXI_bvalid.bind(*p_36_S00_AXI_bvalid);
        p_36_S00_AXI_bvalid->set_sv_netview_offsetfromdp(10340872);
        xsim_sc_channel<0, bool > *p_36_S00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_36->S00_AXI_bready.bind(*p_36_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_36_S00_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_36->S00_AXI_arid.bind(*p_36_S00_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_arid);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_36_S00_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_36->S00_AXI_araddr.bind(*p_36_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_36_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_36->S00_AXI_arlen.bind(*p_36_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_36_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_36->S00_AXI_arsize.bind(*p_36_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_36_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_36->S00_AXI_arburst.bind(*p_36_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_36_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_36->S00_AXI_arlock.bind(*p_36_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_36_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_36->S00_AXI_arcache.bind(*p_36_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_36_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_36->S00_AXI_arprot.bind(*p_36_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_36_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_36->S00_AXI_arqos.bind(*p_36_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_arqos);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_36_S00_AXI_aruser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_36->S00_AXI_aruser.bind(*p_36_S00_AXI_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_aruser);
        xsim_sc_channel<0, bool > *p_36_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_36->S00_AXI_arvalid.bind(*p_36_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_36_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_36->S00_AXI_arready.bind(*p_36_S00_AXI_arready);
        p_36_S00_AXI_arready->set_sv_netview_offsetfromdp(10341600);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_36_S00_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_36->S00_AXI_rid.bind(*p_36_S00_AXI_rid);
        p_36_S00_AXI_rid->set_sv_netview_offsetfromdp(10341656);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_36_S00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_36->S00_AXI_rdata.bind(*p_36_S00_AXI_rdata);
        p_36_S00_AXI_rdata->set_sv_netview_offsetfromdp(10341712);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_36_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_36->S00_AXI_rresp.bind(*p_36_S00_AXI_rresp);
        p_36_S00_AXI_rresp->set_sv_netview_offsetfromdp(10341768);
        xsim_sc_channel<0, bool > *p_36_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_36->S00_AXI_rlast.bind(*p_36_S00_AXI_rlast);
        p_36_S00_AXI_rlast->set_sv_netview_offsetfromdp(10341824);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_36_S00_AXI_ruser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_36->S00_AXI_ruser.bind(*p_36_S00_AXI_ruser);
        p_36_S00_AXI_ruser->set_sv_netview_offsetfromdp(10341880);
        xsim_sc_channel<0, bool > *p_36_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_36->S00_AXI_rvalid.bind(*p_36_S00_AXI_rvalid);
        p_36_S00_AXI_rvalid->set_sv_netview_offsetfromdp(10341936);
        xsim_sc_channel<0, bool > *p_36_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_36->S00_AXI_rready.bind(*p_36_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_rready);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_36_M00_AXI_awaddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_36->M00_AXI_awaddr.bind(*p_36_M00_AXI_awaddr);
        p_36_M00_AXI_awaddr->set_sv_netview_offsetfromdp(10342048);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_36_M00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_36->M00_AXI_awlen.bind(*p_36_M00_AXI_awlen);
        p_36_M00_AXI_awlen->set_sv_netview_offsetfromdp(10342104);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_36_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_36->M00_AXI_awsize.bind(*p_36_M00_AXI_awsize);
        p_36_M00_AXI_awsize->set_sv_netview_offsetfromdp(10342160);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_36_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_36->M00_AXI_awburst.bind(*p_36_M00_AXI_awburst);
        p_36_M00_AXI_awburst->set_sv_netview_offsetfromdp(10342216);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_36_M00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_36->M00_AXI_awlock.bind(*p_36_M00_AXI_awlock);
        p_36_M00_AXI_awlock->set_sv_netview_offsetfromdp(10342272);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_36_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_36->M00_AXI_awcache.bind(*p_36_M00_AXI_awcache);
        p_36_M00_AXI_awcache->set_sv_netview_offsetfromdp(10342328);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_36_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_36->M00_AXI_awprot.bind(*p_36_M00_AXI_awprot);
        p_36_M00_AXI_awprot->set_sv_netview_offsetfromdp(10342384);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_36_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_36->M00_AXI_awqos.bind(*p_36_M00_AXI_awqos);
        p_36_M00_AXI_awqos->set_sv_netview_offsetfromdp(10342440);
        xsim_sc_channel<0, bool > *p_36_M00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_36->M00_AXI_awvalid.bind(*p_36_M00_AXI_awvalid);
        p_36_M00_AXI_awvalid->set_sv_netview_offsetfromdp(10342496);
        xsim_sc_channel<0, bool > *p_36_M00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_36->M00_AXI_awready.bind(*p_36_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M00_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_36_M00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_36->M00_AXI_wdata.bind(*p_36_M00_AXI_wdata);
        p_36_M00_AXI_wdata->set_sv_netview_offsetfromdp(10342608);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_36_M00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_36->M00_AXI_wstrb.bind(*p_36_M00_AXI_wstrb);
        p_36_M00_AXI_wstrb->set_sv_netview_offsetfromdp(10342664);
        xsim_sc_channel<0, bool > *p_36_M00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_36->M00_AXI_wlast.bind(*p_36_M00_AXI_wlast);
        p_36_M00_AXI_wlast->set_sv_netview_offsetfromdp(10342720);
        xsim_sc_channel<0, bool > *p_36_M00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_36->M00_AXI_wvalid.bind(*p_36_M00_AXI_wvalid);
        p_36_M00_AXI_wvalid->set_sv_netview_offsetfromdp(10342776);
        xsim_sc_channel<0, bool > *p_36_M00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_36->M00_AXI_wready.bind(*p_36_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M00_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_36_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_36->M00_AXI_bresp.bind(*p_36_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M00_AXI_bresp);
        xsim_sc_channel<0, bool > *p_36_M00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_36->M00_AXI_bvalid.bind(*p_36_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M00_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_36_M00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_36->M00_AXI_bready.bind(*p_36_M00_AXI_bready);
        p_36_M00_AXI_bready->set_sv_netview_offsetfromdp(10343000);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_36_M00_AXI_araddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_36->M00_AXI_araddr.bind(*p_36_M00_AXI_araddr);
        p_36_M00_AXI_araddr->set_sv_netview_offsetfromdp(10343056);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_36_M00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_36->M00_AXI_arlen.bind(*p_36_M00_AXI_arlen);
        p_36_M00_AXI_arlen->set_sv_netview_offsetfromdp(10343112);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_36_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_36->M00_AXI_arsize.bind(*p_36_M00_AXI_arsize);
        p_36_M00_AXI_arsize->set_sv_netview_offsetfromdp(10343168);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_36_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_36->M00_AXI_arburst.bind(*p_36_M00_AXI_arburst);
        p_36_M00_AXI_arburst->set_sv_netview_offsetfromdp(10343224);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_36_M00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_36->M00_AXI_arlock.bind(*p_36_M00_AXI_arlock);
        p_36_M00_AXI_arlock->set_sv_netview_offsetfromdp(10343280);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_36_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_36->M00_AXI_arcache.bind(*p_36_M00_AXI_arcache);
        p_36_M00_AXI_arcache->set_sv_netview_offsetfromdp(10343336);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_36_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_36->M00_AXI_arprot.bind(*p_36_M00_AXI_arprot);
        p_36_M00_AXI_arprot->set_sv_netview_offsetfromdp(10343392);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_36_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_36->M00_AXI_arqos.bind(*p_36_M00_AXI_arqos);
        p_36_M00_AXI_arqos->set_sv_netview_offsetfromdp(10343448);
        xsim_sc_channel<0, bool > *p_36_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_36->M00_AXI_arvalid.bind(*p_36_M00_AXI_arvalid);
        p_36_M00_AXI_arvalid->set_sv_netview_offsetfromdp(10343504);
        xsim_sc_channel<0, bool > *p_36_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_36->M00_AXI_arready.bind(*p_36_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M00_AXI_arready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_36_M00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_36->M00_AXI_rdata.bind(*p_36_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_36_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_36->M00_AXI_rresp.bind(*p_36_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_36_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_36->M00_AXI_rlast.bind(*p_36_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M00_AXI_rlast);
        xsim_sc_channel<0, bool > *p_36_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_36->M00_AXI_rvalid.bind(*p_36_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_36_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_36->M00_AXI_rready.bind(*p_36_M00_AXI_rready);
        p_36_M00_AXI_rready->set_sv_netview_offsetfromdp(10343840);
        sc_inst_37 = new bd_d216_interconnect_DDR4_MEM01_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.interconnect.interconnect_ddr4_mem01");
        sc_inst_37->xsim_set_dbg_index(2686);
        xsim_sc_channel<0, bool > *p_37_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_37->aclk.bind(*p_37_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_37_aclk);
        xsim_sc_channel<0, bool > *p_37_aclk1 = new xsim_sc_channel<0, bool >();
        sc_inst_37->aclk1.bind(*p_37_aclk1);
        (*_glb_hdl_sc_channel_map).push_back(p_37_aclk1);
        xsim_sc_channel<0, bool > *p_37_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_37->aresetn.bind(*p_37_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_37_aresetn);
        xsim_sc_channel<37, sc_dt::sc_bv<37> > *p_37_S00_AXI_awaddr = new xsim_sc_channel<37, sc_dt::sc_bv<37> >();
        sc_inst_37->S00_AXI_awaddr.bind(*p_37_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_37_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_37->S00_AXI_awlen.bind(*p_37_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_37_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_37->S00_AXI_awsize.bind(*p_37_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_37_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_37->S00_AXI_awburst.bind(*p_37_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_37_S00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_37->S00_AXI_awlock.bind(*p_37_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_37_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_37->S00_AXI_awcache.bind(*p_37_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_37_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_37->S00_AXI_awprot.bind(*p_37_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_37_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_37->S00_AXI_awqos.bind(*p_37_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_awqos);
        xsim_sc_channel<0, bool > *p_37_S00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_37->S00_AXI_awvalid.bind(*p_37_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_37_S00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_37->S00_AXI_awready.bind(*p_37_S00_AXI_awready);
        p_37_S00_AXI_awready->set_sv_netview_offsetfromdp(10344616);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_37_S00_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_37->S00_AXI_wdata.bind(*p_37_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_37_S00_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_37->S00_AXI_wstrb.bind(*p_37_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_37_S00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_37->S00_AXI_wlast.bind(*p_37_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_wlast);
        xsim_sc_channel<0, bool > *p_37_S00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_37->S00_AXI_wvalid.bind(*p_37_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_37_S00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_37->S00_AXI_wready.bind(*p_37_S00_AXI_wready);
        p_37_S00_AXI_wready->set_sv_netview_offsetfromdp(10344896);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_37_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_37->S00_AXI_bresp.bind(*p_37_S00_AXI_bresp);
        p_37_S00_AXI_bresp->set_sv_netview_offsetfromdp(10344952);
        xsim_sc_channel<0, bool > *p_37_S00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_37->S00_AXI_bvalid.bind(*p_37_S00_AXI_bvalid);
        p_37_S00_AXI_bvalid->set_sv_netview_offsetfromdp(10345008);
        xsim_sc_channel<0, bool > *p_37_S00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_37->S00_AXI_bready.bind(*p_37_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_bready);
        xsim_sc_channel<37, sc_dt::sc_bv<37> > *p_37_S00_AXI_araddr = new xsim_sc_channel<37, sc_dt::sc_bv<37> >();
        sc_inst_37->S00_AXI_araddr.bind(*p_37_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_37_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_37->S00_AXI_arlen.bind(*p_37_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_37_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_37->S00_AXI_arsize.bind(*p_37_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_37_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_37->S00_AXI_arburst.bind(*p_37_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_37_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_37->S00_AXI_arlock.bind(*p_37_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_37_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_37->S00_AXI_arcache.bind(*p_37_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_37_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_37->S00_AXI_arprot.bind(*p_37_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_37_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_37->S00_AXI_arqos.bind(*p_37_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_arqos);
        xsim_sc_channel<0, bool > *p_37_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_37->S00_AXI_arvalid.bind(*p_37_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_37_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_37->S00_AXI_arready.bind(*p_37_S00_AXI_arready);
        p_37_S00_AXI_arready->set_sv_netview_offsetfromdp(10345624);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_37_S00_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_37->S00_AXI_rdata.bind(*p_37_S00_AXI_rdata);
        p_37_S00_AXI_rdata->set_sv_netview_offsetfromdp(10345680);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_37_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_37->S00_AXI_rresp.bind(*p_37_S00_AXI_rresp);
        p_37_S00_AXI_rresp->set_sv_netview_offsetfromdp(10345736);
        xsim_sc_channel<0, bool > *p_37_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_37->S00_AXI_rlast.bind(*p_37_S00_AXI_rlast);
        p_37_S00_AXI_rlast->set_sv_netview_offsetfromdp(10345792);
        xsim_sc_channel<0, bool > *p_37_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_37->S00_AXI_rvalid.bind(*p_37_S00_AXI_rvalid);
        p_37_S00_AXI_rvalid->set_sv_netview_offsetfromdp(10345848);
        xsim_sc_channel<0, bool > *p_37_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_37->S00_AXI_rready.bind(*p_37_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_rready);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_37_M00_AXI_awaddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_37->M00_AXI_awaddr.bind(*p_37_M00_AXI_awaddr);
        p_37_M00_AXI_awaddr->set_sv_netview_offsetfromdp(10345960);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_37_M00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_37->M00_AXI_awlen.bind(*p_37_M00_AXI_awlen);
        p_37_M00_AXI_awlen->set_sv_netview_offsetfromdp(10346016);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_37_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_37->M00_AXI_awsize.bind(*p_37_M00_AXI_awsize);
        p_37_M00_AXI_awsize->set_sv_netview_offsetfromdp(10346072);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_37_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_37->M00_AXI_awburst.bind(*p_37_M00_AXI_awburst);
        p_37_M00_AXI_awburst->set_sv_netview_offsetfromdp(10346128);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_37_M00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_37->M00_AXI_awlock.bind(*p_37_M00_AXI_awlock);
        p_37_M00_AXI_awlock->set_sv_netview_offsetfromdp(10346184);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_37_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_37->M00_AXI_awcache.bind(*p_37_M00_AXI_awcache);
        p_37_M00_AXI_awcache->set_sv_netview_offsetfromdp(10346240);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_37_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_37->M00_AXI_awprot.bind(*p_37_M00_AXI_awprot);
        p_37_M00_AXI_awprot->set_sv_netview_offsetfromdp(10346296);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_37_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_37->M00_AXI_awqos.bind(*p_37_M00_AXI_awqos);
        p_37_M00_AXI_awqos->set_sv_netview_offsetfromdp(10346352);
        xsim_sc_channel<0, bool > *p_37_M00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_37->M00_AXI_awvalid.bind(*p_37_M00_AXI_awvalid);
        p_37_M00_AXI_awvalid->set_sv_netview_offsetfromdp(10346408);
        xsim_sc_channel<0, bool > *p_37_M00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_37->M00_AXI_awready.bind(*p_37_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_37_M00_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_37_M00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_37->M00_AXI_wdata.bind(*p_37_M00_AXI_wdata);
        p_37_M00_AXI_wdata->set_sv_netview_offsetfromdp(10346520);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_37_M00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_37->M00_AXI_wstrb.bind(*p_37_M00_AXI_wstrb);
        p_37_M00_AXI_wstrb->set_sv_netview_offsetfromdp(10346576);
        xsim_sc_channel<0, bool > *p_37_M00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_37->M00_AXI_wlast.bind(*p_37_M00_AXI_wlast);
        p_37_M00_AXI_wlast->set_sv_netview_offsetfromdp(10346632);
        xsim_sc_channel<0, bool > *p_37_M00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_37->M00_AXI_wvalid.bind(*p_37_M00_AXI_wvalid);
        p_37_M00_AXI_wvalid->set_sv_netview_offsetfromdp(10346688);
        xsim_sc_channel<0, bool > *p_37_M00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_37->M00_AXI_wready.bind(*p_37_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_37_M00_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_37_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_37->M00_AXI_bresp.bind(*p_37_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_37_M00_AXI_bresp);
        xsim_sc_channel<0, bool > *p_37_M00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_37->M00_AXI_bvalid.bind(*p_37_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_37_M00_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_37_M00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_37->M00_AXI_bready.bind(*p_37_M00_AXI_bready);
        p_37_M00_AXI_bready->set_sv_netview_offsetfromdp(10346912);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_37_M00_AXI_araddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_37->M00_AXI_araddr.bind(*p_37_M00_AXI_araddr);
        p_37_M00_AXI_araddr->set_sv_netview_offsetfromdp(10346968);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_37_M00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_37->M00_AXI_arlen.bind(*p_37_M00_AXI_arlen);
        p_37_M00_AXI_arlen->set_sv_netview_offsetfromdp(10347024);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_37_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_37->M00_AXI_arsize.bind(*p_37_M00_AXI_arsize);
        p_37_M00_AXI_arsize->set_sv_netview_offsetfromdp(10347080);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_37_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_37->M00_AXI_arburst.bind(*p_37_M00_AXI_arburst);
        p_37_M00_AXI_arburst->set_sv_netview_offsetfromdp(10347136);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_37_M00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_37->M00_AXI_arlock.bind(*p_37_M00_AXI_arlock);
        p_37_M00_AXI_arlock->set_sv_netview_offsetfromdp(10347192);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_37_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_37->M00_AXI_arcache.bind(*p_37_M00_AXI_arcache);
        p_37_M00_AXI_arcache->set_sv_netview_offsetfromdp(10347248);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_37_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_37->M00_AXI_arprot.bind(*p_37_M00_AXI_arprot);
        p_37_M00_AXI_arprot->set_sv_netview_offsetfromdp(10347304);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_37_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_37->M00_AXI_arqos.bind(*p_37_M00_AXI_arqos);
        p_37_M00_AXI_arqos->set_sv_netview_offsetfromdp(10347360);
        xsim_sc_channel<0, bool > *p_37_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_37->M00_AXI_arvalid.bind(*p_37_M00_AXI_arvalid);
        p_37_M00_AXI_arvalid->set_sv_netview_offsetfromdp(10347416);
        xsim_sc_channel<0, bool > *p_37_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_37->M00_AXI_arready.bind(*p_37_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_37_M00_AXI_arready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_37_M00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_37->M00_AXI_rdata.bind(*p_37_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_37_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_37_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_37->M00_AXI_rresp.bind(*p_37_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_37_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_37_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_37->M00_AXI_rlast.bind(*p_37_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_37_M00_AXI_rlast);
        xsim_sc_channel<0, bool > *p_37_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_37->M00_AXI_rvalid.bind(*p_37_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_37_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_37_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_37->M00_AXI_rready.bind(*p_37_M00_AXI_rready);
        p_37_M00_AXI_rready->set_sv_netview_offsetfromdp(10347752);
        sc_inst_38 = new bd_d216_interconnect_M00_AXI_MEM00_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.interconnect.interconnect_m00_axi_mem00");
        sc_inst_38->xsim_set_dbg_index(2687);
        xsim_sc_channel<0, bool > *p_38_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_38->aclk.bind(*p_38_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_38_aclk);
        xsim_sc_channel<0, bool > *p_38_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_38->aresetn.bind(*p_38_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_38_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_38_S00_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_38->S00_AXI_awid.bind(*p_38_S00_AXI_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_awid);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_38_S00_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_38->S00_AXI_awaddr.bind(*p_38_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_38_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_38->S00_AXI_awlen.bind(*p_38_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_38_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_38->S00_AXI_awsize.bind(*p_38_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_38_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_38->S00_AXI_awburst.bind(*p_38_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_38_S00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_38->S00_AXI_awlock.bind(*p_38_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_38_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_38->S00_AXI_awcache.bind(*p_38_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_38_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_38->S00_AXI_awprot.bind(*p_38_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_38_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_38->S00_AXI_awqos.bind(*p_38_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_awqos);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_38_S00_AXI_awuser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_38->S00_AXI_awuser.bind(*p_38_S00_AXI_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_awuser);
        xsim_sc_channel<0, bool > *p_38_S00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_38->S00_AXI_awvalid.bind(*p_38_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_38_S00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_38->S00_AXI_awready.bind(*p_38_S00_AXI_awready);
        p_38_S00_AXI_awready->set_sv_netview_offsetfromdp(10348584);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_38_S00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_38->S00_AXI_wdata.bind(*p_38_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_38_S00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_38->S00_AXI_wstrb.bind(*p_38_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_38_S00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_38->S00_AXI_wlast.bind(*p_38_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_wlast);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_38_S00_AXI_wuser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_38->S00_AXI_wuser.bind(*p_38_S00_AXI_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_wuser);
        xsim_sc_channel<0, bool > *p_38_S00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_38->S00_AXI_wvalid.bind(*p_38_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_38_S00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_38->S00_AXI_wready.bind(*p_38_S00_AXI_wready);
        p_38_S00_AXI_wready->set_sv_netview_offsetfromdp(10348920);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_38_S00_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_38->S00_AXI_bid.bind(*p_38_S00_AXI_bid);
        p_38_S00_AXI_bid->set_sv_netview_offsetfromdp(10348976);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_38_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_38->S00_AXI_bresp.bind(*p_38_S00_AXI_bresp);
        p_38_S00_AXI_bresp->set_sv_netview_offsetfromdp(10349032);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_38_S00_AXI_buser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_38->S00_AXI_buser.bind(*p_38_S00_AXI_buser);
        p_38_S00_AXI_buser->set_sv_netview_offsetfromdp(10349088);
        xsim_sc_channel<0, bool > *p_38_S00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_38->S00_AXI_bvalid.bind(*p_38_S00_AXI_bvalid);
        p_38_S00_AXI_bvalid->set_sv_netview_offsetfromdp(10349144);
        xsim_sc_channel<0, bool > *p_38_S00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_38->S00_AXI_bready.bind(*p_38_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_38_S00_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_38->S00_AXI_arid.bind(*p_38_S00_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_arid);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_38_S00_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_38->S00_AXI_araddr.bind(*p_38_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_38_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_38->S00_AXI_arlen.bind(*p_38_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_38_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_38->S00_AXI_arsize.bind(*p_38_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_38_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_38->S00_AXI_arburst.bind(*p_38_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_38_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_38->S00_AXI_arlock.bind(*p_38_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_38_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_38->S00_AXI_arcache.bind(*p_38_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_38_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_38->S00_AXI_arprot.bind(*p_38_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_38_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_38->S00_AXI_arqos.bind(*p_38_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_arqos);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_38_S00_AXI_aruser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_38->S00_AXI_aruser.bind(*p_38_S00_AXI_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_aruser);
        xsim_sc_channel<0, bool > *p_38_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_38->S00_AXI_arvalid.bind(*p_38_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_38_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_38->S00_AXI_arready.bind(*p_38_S00_AXI_arready);
        p_38_S00_AXI_arready->set_sv_netview_offsetfromdp(10349872);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_38_S00_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_38->S00_AXI_rid.bind(*p_38_S00_AXI_rid);
        p_38_S00_AXI_rid->set_sv_netview_offsetfromdp(10349928);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_38_S00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_38->S00_AXI_rdata.bind(*p_38_S00_AXI_rdata);
        p_38_S00_AXI_rdata->set_sv_netview_offsetfromdp(10349984);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_38_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_38->S00_AXI_rresp.bind(*p_38_S00_AXI_rresp);
        p_38_S00_AXI_rresp->set_sv_netview_offsetfromdp(10350040);
        xsim_sc_channel<0, bool > *p_38_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_38->S00_AXI_rlast.bind(*p_38_S00_AXI_rlast);
        p_38_S00_AXI_rlast->set_sv_netview_offsetfromdp(10350096);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_38_S00_AXI_ruser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_38->S00_AXI_ruser.bind(*p_38_S00_AXI_ruser);
        p_38_S00_AXI_ruser->set_sv_netview_offsetfromdp(10350152);
        xsim_sc_channel<0, bool > *p_38_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_38->S00_AXI_rvalid.bind(*p_38_S00_AXI_rvalid);
        p_38_S00_AXI_rvalid->set_sv_netview_offsetfromdp(10350208);
        xsim_sc_channel<0, bool > *p_38_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_38->S00_AXI_rready.bind(*p_38_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_rready);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_38_M00_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_38->M00_AXI_awaddr.bind(*p_38_M00_AXI_awaddr);
        p_38_M00_AXI_awaddr->set_sv_netview_offsetfromdp(10350320);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_38_M00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_38->M00_AXI_awlen.bind(*p_38_M00_AXI_awlen);
        p_38_M00_AXI_awlen->set_sv_netview_offsetfromdp(10350376);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_38_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_38->M00_AXI_awsize.bind(*p_38_M00_AXI_awsize);
        p_38_M00_AXI_awsize->set_sv_netview_offsetfromdp(10350432);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_38_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_38->M00_AXI_awburst.bind(*p_38_M00_AXI_awburst);
        p_38_M00_AXI_awburst->set_sv_netview_offsetfromdp(10350488);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_38_M00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_38->M00_AXI_awlock.bind(*p_38_M00_AXI_awlock);
        p_38_M00_AXI_awlock->set_sv_netview_offsetfromdp(10350544);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_38_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_38->M00_AXI_awcache.bind(*p_38_M00_AXI_awcache);
        p_38_M00_AXI_awcache->set_sv_netview_offsetfromdp(10350600);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_38_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_38->M00_AXI_awprot.bind(*p_38_M00_AXI_awprot);
        p_38_M00_AXI_awprot->set_sv_netview_offsetfromdp(10350656);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_38_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_38->M00_AXI_awqos.bind(*p_38_M00_AXI_awqos);
        p_38_M00_AXI_awqos->set_sv_netview_offsetfromdp(10350712);
        xsim_sc_channel<0, bool > *p_38_M00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_38->M00_AXI_awvalid.bind(*p_38_M00_AXI_awvalid);
        p_38_M00_AXI_awvalid->set_sv_netview_offsetfromdp(10350768);
        xsim_sc_channel<0, bool > *p_38_M00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_38->M00_AXI_awready.bind(*p_38_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M00_AXI_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_38_M00_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_38->M00_AXI_wdata.bind(*p_38_M00_AXI_wdata);
        p_38_M00_AXI_wdata->set_sv_netview_offsetfromdp(10350880);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_38_M00_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_38->M00_AXI_wstrb.bind(*p_38_M00_AXI_wstrb);
        p_38_M00_AXI_wstrb->set_sv_netview_offsetfromdp(10350936);
        xsim_sc_channel<0, bool > *p_38_M00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_38->M00_AXI_wlast.bind(*p_38_M00_AXI_wlast);
        p_38_M00_AXI_wlast->set_sv_netview_offsetfromdp(10350992);
        xsim_sc_channel<0, bool > *p_38_M00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_38->M00_AXI_wvalid.bind(*p_38_M00_AXI_wvalid);
        p_38_M00_AXI_wvalid->set_sv_netview_offsetfromdp(10351048);
        xsim_sc_channel<0, bool > *p_38_M00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_38->M00_AXI_wready.bind(*p_38_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M00_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_38_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_38->M00_AXI_bresp.bind(*p_38_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M00_AXI_bresp);
        xsim_sc_channel<0, bool > *p_38_M00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_38->M00_AXI_bvalid.bind(*p_38_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M00_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_38_M00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_38->M00_AXI_bready.bind(*p_38_M00_AXI_bready);
        p_38_M00_AXI_bready->set_sv_netview_offsetfromdp(10351272);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_38_M00_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_38->M00_AXI_araddr.bind(*p_38_M00_AXI_araddr);
        p_38_M00_AXI_araddr->set_sv_netview_offsetfromdp(10351328);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_38_M00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_38->M00_AXI_arlen.bind(*p_38_M00_AXI_arlen);
        p_38_M00_AXI_arlen->set_sv_netview_offsetfromdp(10351384);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_38_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_38->M00_AXI_arsize.bind(*p_38_M00_AXI_arsize);
        p_38_M00_AXI_arsize->set_sv_netview_offsetfromdp(10351440);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_38_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_38->M00_AXI_arburst.bind(*p_38_M00_AXI_arburst);
        p_38_M00_AXI_arburst->set_sv_netview_offsetfromdp(10351496);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_38_M00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_38->M00_AXI_arlock.bind(*p_38_M00_AXI_arlock);
        p_38_M00_AXI_arlock->set_sv_netview_offsetfromdp(10351552);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_38_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_38->M00_AXI_arcache.bind(*p_38_M00_AXI_arcache);
        p_38_M00_AXI_arcache->set_sv_netview_offsetfromdp(10351608);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_38_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_38->M00_AXI_arprot.bind(*p_38_M00_AXI_arprot);
        p_38_M00_AXI_arprot->set_sv_netview_offsetfromdp(10351664);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_38_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_38->M00_AXI_arqos.bind(*p_38_M00_AXI_arqos);
        p_38_M00_AXI_arqos->set_sv_netview_offsetfromdp(10351720);
        xsim_sc_channel<0, bool > *p_38_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_38->M00_AXI_arvalid.bind(*p_38_M00_AXI_arvalid);
        p_38_M00_AXI_arvalid->set_sv_netview_offsetfromdp(10351776);
        xsim_sc_channel<0, bool > *p_38_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_38->M00_AXI_arready.bind(*p_38_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M00_AXI_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_38_M00_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_38->M00_AXI_rdata.bind(*p_38_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_38_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_38->M00_AXI_rresp.bind(*p_38_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_38_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_38->M00_AXI_rlast.bind(*p_38_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M00_AXI_rlast);
        xsim_sc_channel<0, bool > *p_38_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_38->M00_AXI_rvalid.bind(*p_38_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_38_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_38->M00_AXI_rready.bind(*p_38_M00_AXI_rready);
        p_38_M00_AXI_rready->set_sv_netview_offsetfromdp(10352112);
        sc_inst_39 = new bd_d216_interconnect_PLRAM_MEM00_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.interconnect.interconnect_plram_mem00");
        sc_inst_39->xsim_set_dbg_index(2688);
        xsim_sc_channel<0, bool > *p_39_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_39->aclk.bind(*p_39_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_39_aclk);
        xsim_sc_channel<0, bool > *p_39_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_39->aresetn.bind(*p_39_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_39_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_39_S00_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_39->S00_AXI_awid.bind(*p_39_S00_AXI_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_awid);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_39_S00_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_39->S00_AXI_awaddr.bind(*p_39_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_39_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_39->S00_AXI_awlen.bind(*p_39_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_39_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_39->S00_AXI_awsize.bind(*p_39_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_39_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_39->S00_AXI_awburst.bind(*p_39_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_39_S00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_39->S00_AXI_awlock.bind(*p_39_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_39_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_39->S00_AXI_awcache.bind(*p_39_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_39_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_39->S00_AXI_awprot.bind(*p_39_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_39_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_39->S00_AXI_awqos.bind(*p_39_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_awqos);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_39_S00_AXI_awuser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_39->S00_AXI_awuser.bind(*p_39_S00_AXI_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_awuser);
        xsim_sc_channel<0, bool > *p_39_S00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->S00_AXI_awvalid.bind(*p_39_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_39_S00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_39->S00_AXI_awready.bind(*p_39_S00_AXI_awready);
        p_39_S00_AXI_awready->set_sv_netview_offsetfromdp(10352944);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_39_S00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_39->S00_AXI_wdata.bind(*p_39_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_39_S00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_39->S00_AXI_wstrb.bind(*p_39_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_39_S00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_39->S00_AXI_wlast.bind(*p_39_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_wlast);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_39_S00_AXI_wuser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_39->S00_AXI_wuser.bind(*p_39_S00_AXI_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_wuser);
        xsim_sc_channel<0, bool > *p_39_S00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->S00_AXI_wvalid.bind(*p_39_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_39_S00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_39->S00_AXI_wready.bind(*p_39_S00_AXI_wready);
        p_39_S00_AXI_wready->set_sv_netview_offsetfromdp(10353280);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_39_S00_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_39->S00_AXI_bid.bind(*p_39_S00_AXI_bid);
        p_39_S00_AXI_bid->set_sv_netview_offsetfromdp(10353336);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_39_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_39->S00_AXI_bresp.bind(*p_39_S00_AXI_bresp);
        p_39_S00_AXI_bresp->set_sv_netview_offsetfromdp(10353392);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_39_S00_AXI_buser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_39->S00_AXI_buser.bind(*p_39_S00_AXI_buser);
        p_39_S00_AXI_buser->set_sv_netview_offsetfromdp(10353448);
        xsim_sc_channel<0, bool > *p_39_S00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->S00_AXI_bvalid.bind(*p_39_S00_AXI_bvalid);
        p_39_S00_AXI_bvalid->set_sv_netview_offsetfromdp(10353504);
        xsim_sc_channel<0, bool > *p_39_S00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_39->S00_AXI_bready.bind(*p_39_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_39_S00_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_39->S00_AXI_arid.bind(*p_39_S00_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_arid);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_39_S00_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_39->S00_AXI_araddr.bind(*p_39_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_39_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_39->S00_AXI_arlen.bind(*p_39_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_39_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_39->S00_AXI_arsize.bind(*p_39_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_39_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_39->S00_AXI_arburst.bind(*p_39_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_39_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_39->S00_AXI_arlock.bind(*p_39_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_39_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_39->S00_AXI_arcache.bind(*p_39_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_39_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_39->S00_AXI_arprot.bind(*p_39_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_39_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_39->S00_AXI_arqos.bind(*p_39_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_arqos);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_39_S00_AXI_aruser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_39->S00_AXI_aruser.bind(*p_39_S00_AXI_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_aruser);
        xsim_sc_channel<0, bool > *p_39_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->S00_AXI_arvalid.bind(*p_39_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_39_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_39->S00_AXI_arready.bind(*p_39_S00_AXI_arready);
        p_39_S00_AXI_arready->set_sv_netview_offsetfromdp(10354232);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_39_S00_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_39->S00_AXI_rid.bind(*p_39_S00_AXI_rid);
        p_39_S00_AXI_rid->set_sv_netview_offsetfromdp(10354288);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_39_S00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_39->S00_AXI_rdata.bind(*p_39_S00_AXI_rdata);
        p_39_S00_AXI_rdata->set_sv_netview_offsetfromdp(10354344);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_39_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_39->S00_AXI_rresp.bind(*p_39_S00_AXI_rresp);
        p_39_S00_AXI_rresp->set_sv_netview_offsetfromdp(10354400);
        xsim_sc_channel<0, bool > *p_39_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_39->S00_AXI_rlast.bind(*p_39_S00_AXI_rlast);
        p_39_S00_AXI_rlast->set_sv_netview_offsetfromdp(10354456);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_39_S00_AXI_ruser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_39->S00_AXI_ruser.bind(*p_39_S00_AXI_ruser);
        p_39_S00_AXI_ruser->set_sv_netview_offsetfromdp(10354512);
        xsim_sc_channel<0, bool > *p_39_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->S00_AXI_rvalid.bind(*p_39_S00_AXI_rvalid);
        p_39_S00_AXI_rvalid->set_sv_netview_offsetfromdp(10354568);
        xsim_sc_channel<0, bool > *p_39_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_39->S00_AXI_rready.bind(*p_39_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_rready);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_39_M00_AXI_awaddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_39->M00_AXI_awaddr.bind(*p_39_M00_AXI_awaddr);
        p_39_M00_AXI_awaddr->set_sv_netview_offsetfromdp(10354680);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_39_M00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_39->M00_AXI_awlen.bind(*p_39_M00_AXI_awlen);
        p_39_M00_AXI_awlen->set_sv_netview_offsetfromdp(10354736);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_39_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_39->M00_AXI_awsize.bind(*p_39_M00_AXI_awsize);
        p_39_M00_AXI_awsize->set_sv_netview_offsetfromdp(10354792);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_39_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_39->M00_AXI_awburst.bind(*p_39_M00_AXI_awburst);
        p_39_M00_AXI_awburst->set_sv_netview_offsetfromdp(10354848);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_39_M00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_39->M00_AXI_awlock.bind(*p_39_M00_AXI_awlock);
        p_39_M00_AXI_awlock->set_sv_netview_offsetfromdp(10354904);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_39_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_39->M00_AXI_awcache.bind(*p_39_M00_AXI_awcache);
        p_39_M00_AXI_awcache->set_sv_netview_offsetfromdp(10354960);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_39_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_39->M00_AXI_awprot.bind(*p_39_M00_AXI_awprot);
        p_39_M00_AXI_awprot->set_sv_netview_offsetfromdp(10355016);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_39_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_39->M00_AXI_awqos.bind(*p_39_M00_AXI_awqos);
        p_39_M00_AXI_awqos->set_sv_netview_offsetfromdp(10355072);
        xsim_sc_channel<0, bool > *p_39_M00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->M00_AXI_awvalid.bind(*p_39_M00_AXI_awvalid);
        p_39_M00_AXI_awvalid->set_sv_netview_offsetfromdp(10355128);
        xsim_sc_channel<0, bool > *p_39_M00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_39->M00_AXI_awready.bind(*p_39_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M00_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_39_M00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_39->M00_AXI_wdata.bind(*p_39_M00_AXI_wdata);
        p_39_M00_AXI_wdata->set_sv_netview_offsetfromdp(10355240);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_39_M00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_39->M00_AXI_wstrb.bind(*p_39_M00_AXI_wstrb);
        p_39_M00_AXI_wstrb->set_sv_netview_offsetfromdp(10355296);
        xsim_sc_channel<0, bool > *p_39_M00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_39->M00_AXI_wlast.bind(*p_39_M00_AXI_wlast);
        p_39_M00_AXI_wlast->set_sv_netview_offsetfromdp(10355352);
        xsim_sc_channel<0, bool > *p_39_M00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->M00_AXI_wvalid.bind(*p_39_M00_AXI_wvalid);
        p_39_M00_AXI_wvalid->set_sv_netview_offsetfromdp(10355408);
        xsim_sc_channel<0, bool > *p_39_M00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_39->M00_AXI_wready.bind(*p_39_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M00_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_39_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_39->M00_AXI_bresp.bind(*p_39_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M00_AXI_bresp);
        xsim_sc_channel<0, bool > *p_39_M00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->M00_AXI_bvalid.bind(*p_39_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M00_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_39_M00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_39->M00_AXI_bready.bind(*p_39_M00_AXI_bready);
        p_39_M00_AXI_bready->set_sv_netview_offsetfromdp(10355632);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_39_M00_AXI_araddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_39->M00_AXI_araddr.bind(*p_39_M00_AXI_araddr);
        p_39_M00_AXI_araddr->set_sv_netview_offsetfromdp(10355688);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_39_M00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_39->M00_AXI_arlen.bind(*p_39_M00_AXI_arlen);
        p_39_M00_AXI_arlen->set_sv_netview_offsetfromdp(10355744);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_39_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_39->M00_AXI_arsize.bind(*p_39_M00_AXI_arsize);
        p_39_M00_AXI_arsize->set_sv_netview_offsetfromdp(10355800);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_39_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_39->M00_AXI_arburst.bind(*p_39_M00_AXI_arburst);
        p_39_M00_AXI_arburst->set_sv_netview_offsetfromdp(10355856);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_39_M00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_39->M00_AXI_arlock.bind(*p_39_M00_AXI_arlock);
        p_39_M00_AXI_arlock->set_sv_netview_offsetfromdp(10355912);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_39_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_39->M00_AXI_arcache.bind(*p_39_M00_AXI_arcache);
        p_39_M00_AXI_arcache->set_sv_netview_offsetfromdp(10355968);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_39_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_39->M00_AXI_arprot.bind(*p_39_M00_AXI_arprot);
        p_39_M00_AXI_arprot->set_sv_netview_offsetfromdp(10356024);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_39_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_39->M00_AXI_arqos.bind(*p_39_M00_AXI_arqos);
        p_39_M00_AXI_arqos->set_sv_netview_offsetfromdp(10356080);
        xsim_sc_channel<0, bool > *p_39_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->M00_AXI_arvalid.bind(*p_39_M00_AXI_arvalid);
        p_39_M00_AXI_arvalid->set_sv_netview_offsetfromdp(10356136);
        xsim_sc_channel<0, bool > *p_39_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_39->M00_AXI_arready.bind(*p_39_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M00_AXI_arready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_39_M00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_39->M00_AXI_rdata.bind(*p_39_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_39_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_39->M00_AXI_rresp.bind(*p_39_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_39_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_39->M00_AXI_rlast.bind(*p_39_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M00_AXI_rlast);
        xsim_sc_channel<0, bool > *p_39_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->M00_AXI_rvalid.bind(*p_39_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_39_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_39->M00_AXI_rready.bind(*p_39_M00_AXI_rready);
        p_39_M00_AXI_rready->set_sv_netview_offsetfromdp(10356472);
        sc_inst_40 = new bd_d216_interconnect_PLRAM_MEM01_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.interconnect.interconnect_plram_mem01");
        sc_inst_40->xsim_set_dbg_index(2689);
        xsim_sc_channel<0, bool > *p_40_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_40->aclk.bind(*p_40_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_40_aclk);
        xsim_sc_channel<0, bool > *p_40_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_40->aresetn.bind(*p_40_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_40_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_40_S00_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_40->S00_AXI_awid.bind(*p_40_S00_AXI_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_40_S00_AXI_awid);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_40_S00_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_40->S00_AXI_awaddr.bind(*p_40_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_40_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_40_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_40->S00_AXI_awlen.bind(*p_40_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_40_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_40_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_40->S00_AXI_awsize.bind(*p_40_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_40_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_40_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_40->S00_AXI_awburst.bind(*p_40_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_40_S00_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_40_S00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_40->S00_AXI_awlock.bind(*p_40_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_40_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_40_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_40->S00_AXI_awcache.bind(*p_40_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_40_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_40_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_40->S00_AXI_awprot.bind(*p_40_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_40_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_40_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_40->S00_AXI_awqos.bind(*p_40_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_40_S00_AXI_awqos);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_40_S00_AXI_awuser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_40->S00_AXI_awuser.bind(*p_40_S00_AXI_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_40_S00_AXI_awuser);
        xsim_sc_channel<0, bool > *p_40_S00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_40->S00_AXI_awvalid.bind(*p_40_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_40_S00_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_40_S00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_40->S00_AXI_awready.bind(*p_40_S00_AXI_awready);
        p_40_S00_AXI_awready->set_sv_netview_offsetfromdp(10357304);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_40_S00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_40->S00_AXI_wdata.bind(*p_40_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_40_S00_AXI_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_40_S00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_40->S00_AXI_wstrb.bind(*p_40_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_40_S00_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_40_S00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_40->S00_AXI_wlast.bind(*p_40_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_40_S00_AXI_wlast);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_40_S00_AXI_wuser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_40->S00_AXI_wuser.bind(*p_40_S00_AXI_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_40_S00_AXI_wuser);
        xsim_sc_channel<0, bool > *p_40_S00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_40->S00_AXI_wvalid.bind(*p_40_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_40_S00_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_40_S00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_40->S00_AXI_wready.bind(*p_40_S00_AXI_wready);
        p_40_S00_AXI_wready->set_sv_netview_offsetfromdp(10357640);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_40_S00_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_40->S00_AXI_bid.bind(*p_40_S00_AXI_bid);
        p_40_S00_AXI_bid->set_sv_netview_offsetfromdp(10357696);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_40_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_40->S00_AXI_bresp.bind(*p_40_S00_AXI_bresp);
        p_40_S00_AXI_bresp->set_sv_netview_offsetfromdp(10357752);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_40_S00_AXI_buser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_40->S00_AXI_buser.bind(*p_40_S00_AXI_buser);
        p_40_S00_AXI_buser->set_sv_netview_offsetfromdp(10357808);
        xsim_sc_channel<0, bool > *p_40_S00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_40->S00_AXI_bvalid.bind(*p_40_S00_AXI_bvalid);
        p_40_S00_AXI_bvalid->set_sv_netview_offsetfromdp(10357864);
        xsim_sc_channel<0, bool > *p_40_S00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_40->S00_AXI_bready.bind(*p_40_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_40_S00_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_40_S00_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_40->S00_AXI_arid.bind(*p_40_S00_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_40_S00_AXI_arid);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_40_S00_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_40->S00_AXI_araddr.bind(*p_40_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_40_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_40_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_40->S00_AXI_arlen.bind(*p_40_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_40_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_40_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_40->S00_AXI_arsize.bind(*p_40_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_40_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_40_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_40->S00_AXI_arburst.bind(*p_40_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_40_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_40_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_40->S00_AXI_arlock.bind(*p_40_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_40_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_40_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_40->S00_AXI_arcache.bind(*p_40_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_40_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_40_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_40->S00_AXI_arprot.bind(*p_40_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_40_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_40_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_40->S00_AXI_arqos.bind(*p_40_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_40_S00_AXI_arqos);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_40_S00_AXI_aruser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_40->S00_AXI_aruser.bind(*p_40_S00_AXI_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_40_S00_AXI_aruser);
        xsim_sc_channel<0, bool > *p_40_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_40->S00_AXI_arvalid.bind(*p_40_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_40_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_40_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_40->S00_AXI_arready.bind(*p_40_S00_AXI_arready);
        p_40_S00_AXI_arready->set_sv_netview_offsetfromdp(10358592);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_40_S00_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_40->S00_AXI_rid.bind(*p_40_S00_AXI_rid);
        p_40_S00_AXI_rid->set_sv_netview_offsetfromdp(10358648);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_40_S00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_40->S00_AXI_rdata.bind(*p_40_S00_AXI_rdata);
        p_40_S00_AXI_rdata->set_sv_netview_offsetfromdp(10358704);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_40_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_40->S00_AXI_rresp.bind(*p_40_S00_AXI_rresp);
        p_40_S00_AXI_rresp->set_sv_netview_offsetfromdp(10358760);
        xsim_sc_channel<0, bool > *p_40_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_40->S00_AXI_rlast.bind(*p_40_S00_AXI_rlast);
        p_40_S00_AXI_rlast->set_sv_netview_offsetfromdp(10358816);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_40_S00_AXI_ruser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_40->S00_AXI_ruser.bind(*p_40_S00_AXI_ruser);
        p_40_S00_AXI_ruser->set_sv_netview_offsetfromdp(10358872);
        xsim_sc_channel<0, bool > *p_40_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_40->S00_AXI_rvalid.bind(*p_40_S00_AXI_rvalid);
        p_40_S00_AXI_rvalid->set_sv_netview_offsetfromdp(10358928);
        xsim_sc_channel<0, bool > *p_40_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_40->S00_AXI_rready.bind(*p_40_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_40_S00_AXI_rready);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_40_M00_AXI_awaddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_40->M00_AXI_awaddr.bind(*p_40_M00_AXI_awaddr);
        p_40_M00_AXI_awaddr->set_sv_netview_offsetfromdp(10359040);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_40_M00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_40->M00_AXI_awlen.bind(*p_40_M00_AXI_awlen);
        p_40_M00_AXI_awlen->set_sv_netview_offsetfromdp(10359096);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_40_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_40->M00_AXI_awsize.bind(*p_40_M00_AXI_awsize);
        p_40_M00_AXI_awsize->set_sv_netview_offsetfromdp(10359152);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_40_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_40->M00_AXI_awburst.bind(*p_40_M00_AXI_awburst);
        p_40_M00_AXI_awburst->set_sv_netview_offsetfromdp(10359208);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_40_M00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_40->M00_AXI_awlock.bind(*p_40_M00_AXI_awlock);
        p_40_M00_AXI_awlock->set_sv_netview_offsetfromdp(10359264);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_40_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_40->M00_AXI_awcache.bind(*p_40_M00_AXI_awcache);
        p_40_M00_AXI_awcache->set_sv_netview_offsetfromdp(10359320);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_40_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_40->M00_AXI_awprot.bind(*p_40_M00_AXI_awprot);
        p_40_M00_AXI_awprot->set_sv_netview_offsetfromdp(10359376);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_40_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_40->M00_AXI_awqos.bind(*p_40_M00_AXI_awqos);
        p_40_M00_AXI_awqos->set_sv_netview_offsetfromdp(10359432);
        xsim_sc_channel<0, bool > *p_40_M00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_40->M00_AXI_awvalid.bind(*p_40_M00_AXI_awvalid);
        p_40_M00_AXI_awvalid->set_sv_netview_offsetfromdp(10359488);
        xsim_sc_channel<0, bool > *p_40_M00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_40->M00_AXI_awready.bind(*p_40_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_40_M00_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_40_M00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_40->M00_AXI_wdata.bind(*p_40_M00_AXI_wdata);
        p_40_M00_AXI_wdata->set_sv_netview_offsetfromdp(10359600);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_40_M00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_40->M00_AXI_wstrb.bind(*p_40_M00_AXI_wstrb);
        p_40_M00_AXI_wstrb->set_sv_netview_offsetfromdp(10359656);
        xsim_sc_channel<0, bool > *p_40_M00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_40->M00_AXI_wlast.bind(*p_40_M00_AXI_wlast);
        p_40_M00_AXI_wlast->set_sv_netview_offsetfromdp(10359712);
        xsim_sc_channel<0, bool > *p_40_M00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_40->M00_AXI_wvalid.bind(*p_40_M00_AXI_wvalid);
        p_40_M00_AXI_wvalid->set_sv_netview_offsetfromdp(10359768);
        xsim_sc_channel<0, bool > *p_40_M00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_40->M00_AXI_wready.bind(*p_40_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_40_M00_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_40_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_40->M00_AXI_bresp.bind(*p_40_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_40_M00_AXI_bresp);
        xsim_sc_channel<0, bool > *p_40_M00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_40->M00_AXI_bvalid.bind(*p_40_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_40_M00_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_40_M00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_40->M00_AXI_bready.bind(*p_40_M00_AXI_bready);
        p_40_M00_AXI_bready->set_sv_netview_offsetfromdp(10359992);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_40_M00_AXI_araddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_40->M00_AXI_araddr.bind(*p_40_M00_AXI_araddr);
        p_40_M00_AXI_araddr->set_sv_netview_offsetfromdp(10360048);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_40_M00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_40->M00_AXI_arlen.bind(*p_40_M00_AXI_arlen);
        p_40_M00_AXI_arlen->set_sv_netview_offsetfromdp(10360104);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_40_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_40->M00_AXI_arsize.bind(*p_40_M00_AXI_arsize);
        p_40_M00_AXI_arsize->set_sv_netview_offsetfromdp(10360160);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_40_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_40->M00_AXI_arburst.bind(*p_40_M00_AXI_arburst);
        p_40_M00_AXI_arburst->set_sv_netview_offsetfromdp(10360216);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_40_M00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_40->M00_AXI_arlock.bind(*p_40_M00_AXI_arlock);
        p_40_M00_AXI_arlock->set_sv_netview_offsetfromdp(10360272);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_40_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_40->M00_AXI_arcache.bind(*p_40_M00_AXI_arcache);
        p_40_M00_AXI_arcache->set_sv_netview_offsetfromdp(10360328);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_40_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_40->M00_AXI_arprot.bind(*p_40_M00_AXI_arprot);
        p_40_M00_AXI_arprot->set_sv_netview_offsetfromdp(10360384);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_40_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_40->M00_AXI_arqos.bind(*p_40_M00_AXI_arqos);
        p_40_M00_AXI_arqos->set_sv_netview_offsetfromdp(10360440);
        xsim_sc_channel<0, bool > *p_40_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_40->M00_AXI_arvalid.bind(*p_40_M00_AXI_arvalid);
        p_40_M00_AXI_arvalid->set_sv_netview_offsetfromdp(10360496);
        xsim_sc_channel<0, bool > *p_40_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_40->M00_AXI_arready.bind(*p_40_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_40_M00_AXI_arready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_40_M00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_40->M00_AXI_rdata.bind(*p_40_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_40_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_40_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_40->M00_AXI_rresp.bind(*p_40_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_40_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_40_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_40->M00_AXI_rlast.bind(*p_40_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_40_M00_AXI_rlast);
        xsim_sc_channel<0, bool > *p_40_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_40->M00_AXI_rvalid.bind(*p_40_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_40_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_40_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_40->M00_AXI_rready.bind(*p_40_M00_AXI_rready);
        p_40_M00_AXI_rready->set_sv_netview_offsetfromdp(10360832);
        sc_inst_41 = new bd_d216_interconnect_PLRAM_MEM02_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.interconnect.interconnect_plram_mem02");
        sc_inst_41->xsim_set_dbg_index(2690);
        xsim_sc_channel<0, bool > *p_41_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_41->aclk.bind(*p_41_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_41_aclk);
        xsim_sc_channel<0, bool > *p_41_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_41->aresetn.bind(*p_41_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_41_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_41_S00_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_41->S00_AXI_awid.bind(*p_41_S00_AXI_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_41_S00_AXI_awid);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_41_S00_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_41->S00_AXI_awaddr.bind(*p_41_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_41_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_41_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_41->S00_AXI_awlen.bind(*p_41_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_41_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_41_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_41->S00_AXI_awsize.bind(*p_41_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_41_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_41_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_41->S00_AXI_awburst.bind(*p_41_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_41_S00_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_41_S00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_41->S00_AXI_awlock.bind(*p_41_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_41_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_41_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_41->S00_AXI_awcache.bind(*p_41_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_41_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_41_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_41->S00_AXI_awprot.bind(*p_41_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_41_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_41_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_41->S00_AXI_awqos.bind(*p_41_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_41_S00_AXI_awqos);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_41_S00_AXI_awuser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_41->S00_AXI_awuser.bind(*p_41_S00_AXI_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_41_S00_AXI_awuser);
        xsim_sc_channel<0, bool > *p_41_S00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_41->S00_AXI_awvalid.bind(*p_41_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_41_S00_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_41_S00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_41->S00_AXI_awready.bind(*p_41_S00_AXI_awready);
        p_41_S00_AXI_awready->set_sv_netview_offsetfromdp(10361664);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_41_S00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_41->S00_AXI_wdata.bind(*p_41_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_41_S00_AXI_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_41_S00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_41->S00_AXI_wstrb.bind(*p_41_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_41_S00_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_41_S00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_41->S00_AXI_wlast.bind(*p_41_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_41_S00_AXI_wlast);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_41_S00_AXI_wuser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_41->S00_AXI_wuser.bind(*p_41_S00_AXI_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_41_S00_AXI_wuser);
        xsim_sc_channel<0, bool > *p_41_S00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_41->S00_AXI_wvalid.bind(*p_41_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_41_S00_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_41_S00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_41->S00_AXI_wready.bind(*p_41_S00_AXI_wready);
        p_41_S00_AXI_wready->set_sv_netview_offsetfromdp(10362000);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_41_S00_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_41->S00_AXI_bid.bind(*p_41_S00_AXI_bid);
        p_41_S00_AXI_bid->set_sv_netview_offsetfromdp(10362056);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_41_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_41->S00_AXI_bresp.bind(*p_41_S00_AXI_bresp);
        p_41_S00_AXI_bresp->set_sv_netview_offsetfromdp(10362112);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_41_S00_AXI_buser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_41->S00_AXI_buser.bind(*p_41_S00_AXI_buser);
        p_41_S00_AXI_buser->set_sv_netview_offsetfromdp(10362168);
        xsim_sc_channel<0, bool > *p_41_S00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_41->S00_AXI_bvalid.bind(*p_41_S00_AXI_bvalid);
        p_41_S00_AXI_bvalid->set_sv_netview_offsetfromdp(10362224);
        xsim_sc_channel<0, bool > *p_41_S00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_41->S00_AXI_bready.bind(*p_41_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_41_S00_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_41_S00_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_41->S00_AXI_arid.bind(*p_41_S00_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_41_S00_AXI_arid);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_41_S00_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_41->S00_AXI_araddr.bind(*p_41_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_41_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_41_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_41->S00_AXI_arlen.bind(*p_41_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_41_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_41_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_41->S00_AXI_arsize.bind(*p_41_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_41_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_41_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_41->S00_AXI_arburst.bind(*p_41_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_41_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_41_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_41->S00_AXI_arlock.bind(*p_41_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_41_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_41_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_41->S00_AXI_arcache.bind(*p_41_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_41_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_41_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_41->S00_AXI_arprot.bind(*p_41_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_41_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_41_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_41->S00_AXI_arqos.bind(*p_41_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_41_S00_AXI_arqos);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_41_S00_AXI_aruser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_41->S00_AXI_aruser.bind(*p_41_S00_AXI_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_41_S00_AXI_aruser);
        xsim_sc_channel<0, bool > *p_41_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_41->S00_AXI_arvalid.bind(*p_41_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_41_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_41_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_41->S00_AXI_arready.bind(*p_41_S00_AXI_arready);
        p_41_S00_AXI_arready->set_sv_netview_offsetfromdp(10362952);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_41_S00_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_41->S00_AXI_rid.bind(*p_41_S00_AXI_rid);
        p_41_S00_AXI_rid->set_sv_netview_offsetfromdp(10363008);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_41_S00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_41->S00_AXI_rdata.bind(*p_41_S00_AXI_rdata);
        p_41_S00_AXI_rdata->set_sv_netview_offsetfromdp(10363064);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_41_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_41->S00_AXI_rresp.bind(*p_41_S00_AXI_rresp);
        p_41_S00_AXI_rresp->set_sv_netview_offsetfromdp(10363120);
        xsim_sc_channel<0, bool > *p_41_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_41->S00_AXI_rlast.bind(*p_41_S00_AXI_rlast);
        p_41_S00_AXI_rlast->set_sv_netview_offsetfromdp(10363176);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_41_S00_AXI_ruser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_41->S00_AXI_ruser.bind(*p_41_S00_AXI_ruser);
        p_41_S00_AXI_ruser->set_sv_netview_offsetfromdp(10363232);
        xsim_sc_channel<0, bool > *p_41_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_41->S00_AXI_rvalid.bind(*p_41_S00_AXI_rvalid);
        p_41_S00_AXI_rvalid->set_sv_netview_offsetfromdp(10363288);
        xsim_sc_channel<0, bool > *p_41_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_41->S00_AXI_rready.bind(*p_41_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_41_S00_AXI_rready);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_41_M00_AXI_awaddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_41->M00_AXI_awaddr.bind(*p_41_M00_AXI_awaddr);
        p_41_M00_AXI_awaddr->set_sv_netview_offsetfromdp(10363400);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_41_M00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_41->M00_AXI_awlen.bind(*p_41_M00_AXI_awlen);
        p_41_M00_AXI_awlen->set_sv_netview_offsetfromdp(10363456);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_41_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_41->M00_AXI_awsize.bind(*p_41_M00_AXI_awsize);
        p_41_M00_AXI_awsize->set_sv_netview_offsetfromdp(10363512);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_41_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_41->M00_AXI_awburst.bind(*p_41_M00_AXI_awburst);
        p_41_M00_AXI_awburst->set_sv_netview_offsetfromdp(10363568);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_41_M00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_41->M00_AXI_awlock.bind(*p_41_M00_AXI_awlock);
        p_41_M00_AXI_awlock->set_sv_netview_offsetfromdp(10363624);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_41_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_41->M00_AXI_awcache.bind(*p_41_M00_AXI_awcache);
        p_41_M00_AXI_awcache->set_sv_netview_offsetfromdp(10363680);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_41_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_41->M00_AXI_awprot.bind(*p_41_M00_AXI_awprot);
        p_41_M00_AXI_awprot->set_sv_netview_offsetfromdp(10363736);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_41_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_41->M00_AXI_awqos.bind(*p_41_M00_AXI_awqos);
        p_41_M00_AXI_awqos->set_sv_netview_offsetfromdp(10363792);
        xsim_sc_channel<0, bool > *p_41_M00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_41->M00_AXI_awvalid.bind(*p_41_M00_AXI_awvalid);
        p_41_M00_AXI_awvalid->set_sv_netview_offsetfromdp(10363848);
        xsim_sc_channel<0, bool > *p_41_M00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_41->M00_AXI_awready.bind(*p_41_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_41_M00_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_41_M00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_41->M00_AXI_wdata.bind(*p_41_M00_AXI_wdata);
        p_41_M00_AXI_wdata->set_sv_netview_offsetfromdp(10363960);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_41_M00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_41->M00_AXI_wstrb.bind(*p_41_M00_AXI_wstrb);
        p_41_M00_AXI_wstrb->set_sv_netview_offsetfromdp(10364016);
        xsim_sc_channel<0, bool > *p_41_M00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_41->M00_AXI_wlast.bind(*p_41_M00_AXI_wlast);
        p_41_M00_AXI_wlast->set_sv_netview_offsetfromdp(10364072);
        xsim_sc_channel<0, bool > *p_41_M00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_41->M00_AXI_wvalid.bind(*p_41_M00_AXI_wvalid);
        p_41_M00_AXI_wvalid->set_sv_netview_offsetfromdp(10364128);
        xsim_sc_channel<0, bool > *p_41_M00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_41->M00_AXI_wready.bind(*p_41_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_41_M00_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_41_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_41->M00_AXI_bresp.bind(*p_41_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_41_M00_AXI_bresp);
        xsim_sc_channel<0, bool > *p_41_M00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_41->M00_AXI_bvalid.bind(*p_41_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_41_M00_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_41_M00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_41->M00_AXI_bready.bind(*p_41_M00_AXI_bready);
        p_41_M00_AXI_bready->set_sv_netview_offsetfromdp(10364352);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_41_M00_AXI_araddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_41->M00_AXI_araddr.bind(*p_41_M00_AXI_araddr);
        p_41_M00_AXI_araddr->set_sv_netview_offsetfromdp(10364408);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_41_M00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_41->M00_AXI_arlen.bind(*p_41_M00_AXI_arlen);
        p_41_M00_AXI_arlen->set_sv_netview_offsetfromdp(10364464);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_41_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_41->M00_AXI_arsize.bind(*p_41_M00_AXI_arsize);
        p_41_M00_AXI_arsize->set_sv_netview_offsetfromdp(10364520);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_41_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_41->M00_AXI_arburst.bind(*p_41_M00_AXI_arburst);
        p_41_M00_AXI_arburst->set_sv_netview_offsetfromdp(10364576);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_41_M00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_41->M00_AXI_arlock.bind(*p_41_M00_AXI_arlock);
        p_41_M00_AXI_arlock->set_sv_netview_offsetfromdp(10364632);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_41_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_41->M00_AXI_arcache.bind(*p_41_M00_AXI_arcache);
        p_41_M00_AXI_arcache->set_sv_netview_offsetfromdp(10364688);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_41_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_41->M00_AXI_arprot.bind(*p_41_M00_AXI_arprot);
        p_41_M00_AXI_arprot->set_sv_netview_offsetfromdp(10364744);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_41_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_41->M00_AXI_arqos.bind(*p_41_M00_AXI_arqos);
        p_41_M00_AXI_arqos->set_sv_netview_offsetfromdp(10364800);
        xsim_sc_channel<0, bool > *p_41_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_41->M00_AXI_arvalid.bind(*p_41_M00_AXI_arvalid);
        p_41_M00_AXI_arvalid->set_sv_netview_offsetfromdp(10364856);
        xsim_sc_channel<0, bool > *p_41_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_41->M00_AXI_arready.bind(*p_41_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_41_M00_AXI_arready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_41_M00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_41->M00_AXI_rdata.bind(*p_41_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_41_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_41_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_41->M00_AXI_rresp.bind(*p_41_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_41_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_41_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_41->M00_AXI_rlast.bind(*p_41_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_41_M00_AXI_rlast);
        xsim_sc_channel<0, bool > *p_41_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_41->M00_AXI_rvalid.bind(*p_41_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_41_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_41_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_41->M00_AXI_rready.bind(*p_41_M00_AXI_rready);
        p_41_M00_AXI_rready->set_sv_netview_offsetfromdp(10365192);
        sc_inst_42 = new bd_d216_interconnect_PLRAM_MEM03_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.interconnect.interconnect_plram_mem03");
        sc_inst_42->xsim_set_dbg_index(2691);
        xsim_sc_channel<0, bool > *p_42_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_42->aclk.bind(*p_42_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_42_aclk);
        xsim_sc_channel<0, bool > *p_42_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_42->aresetn.bind(*p_42_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_42_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_42_S00_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_42->S00_AXI_awid.bind(*p_42_S00_AXI_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_42_S00_AXI_awid);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_42_S00_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_42->S00_AXI_awaddr.bind(*p_42_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_42_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_42_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_42->S00_AXI_awlen.bind(*p_42_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_42_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_42_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_42->S00_AXI_awsize.bind(*p_42_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_42_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_42_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_42->S00_AXI_awburst.bind(*p_42_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_42_S00_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_42_S00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_42->S00_AXI_awlock.bind(*p_42_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_42_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_42_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_42->S00_AXI_awcache.bind(*p_42_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_42_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_42_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_42->S00_AXI_awprot.bind(*p_42_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_42_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_42_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_42->S00_AXI_awqos.bind(*p_42_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_42_S00_AXI_awqos);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_42_S00_AXI_awuser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_42->S00_AXI_awuser.bind(*p_42_S00_AXI_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_42_S00_AXI_awuser);
        xsim_sc_channel<0, bool > *p_42_S00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_42->S00_AXI_awvalid.bind(*p_42_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_42_S00_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_42_S00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_42->S00_AXI_awready.bind(*p_42_S00_AXI_awready);
        p_42_S00_AXI_awready->set_sv_netview_offsetfromdp(10366024);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_42_S00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_42->S00_AXI_wdata.bind(*p_42_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_42_S00_AXI_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_42_S00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_42->S00_AXI_wstrb.bind(*p_42_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_42_S00_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_42_S00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_42->S00_AXI_wlast.bind(*p_42_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_42_S00_AXI_wlast);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_42_S00_AXI_wuser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_42->S00_AXI_wuser.bind(*p_42_S00_AXI_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_42_S00_AXI_wuser);
        xsim_sc_channel<0, bool > *p_42_S00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_42->S00_AXI_wvalid.bind(*p_42_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_42_S00_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_42_S00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_42->S00_AXI_wready.bind(*p_42_S00_AXI_wready);
        p_42_S00_AXI_wready->set_sv_netview_offsetfromdp(10366360);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_42_S00_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_42->S00_AXI_bid.bind(*p_42_S00_AXI_bid);
        p_42_S00_AXI_bid->set_sv_netview_offsetfromdp(10366416);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_42_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_42->S00_AXI_bresp.bind(*p_42_S00_AXI_bresp);
        p_42_S00_AXI_bresp->set_sv_netview_offsetfromdp(10366472);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_42_S00_AXI_buser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_42->S00_AXI_buser.bind(*p_42_S00_AXI_buser);
        p_42_S00_AXI_buser->set_sv_netview_offsetfromdp(10366528);
        xsim_sc_channel<0, bool > *p_42_S00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_42->S00_AXI_bvalid.bind(*p_42_S00_AXI_bvalid);
        p_42_S00_AXI_bvalid->set_sv_netview_offsetfromdp(10366584);
        xsim_sc_channel<0, bool > *p_42_S00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_42->S00_AXI_bready.bind(*p_42_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_42_S00_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_42_S00_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_42->S00_AXI_arid.bind(*p_42_S00_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_42_S00_AXI_arid);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_42_S00_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_42->S00_AXI_araddr.bind(*p_42_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_42_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_42_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_42->S00_AXI_arlen.bind(*p_42_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_42_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_42_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_42->S00_AXI_arsize.bind(*p_42_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_42_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_42_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_42->S00_AXI_arburst.bind(*p_42_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_42_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_42_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_42->S00_AXI_arlock.bind(*p_42_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_42_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_42_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_42->S00_AXI_arcache.bind(*p_42_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_42_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_42_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_42->S00_AXI_arprot.bind(*p_42_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_42_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_42_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_42->S00_AXI_arqos.bind(*p_42_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_42_S00_AXI_arqos);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_42_S00_AXI_aruser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_42->S00_AXI_aruser.bind(*p_42_S00_AXI_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_42_S00_AXI_aruser);
        xsim_sc_channel<0, bool > *p_42_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_42->S00_AXI_arvalid.bind(*p_42_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_42_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_42_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_42->S00_AXI_arready.bind(*p_42_S00_AXI_arready);
        p_42_S00_AXI_arready->set_sv_netview_offsetfromdp(10367312);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_42_S00_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_42->S00_AXI_rid.bind(*p_42_S00_AXI_rid);
        p_42_S00_AXI_rid->set_sv_netview_offsetfromdp(10367368);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_42_S00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_42->S00_AXI_rdata.bind(*p_42_S00_AXI_rdata);
        p_42_S00_AXI_rdata->set_sv_netview_offsetfromdp(10367424);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_42_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_42->S00_AXI_rresp.bind(*p_42_S00_AXI_rresp);
        p_42_S00_AXI_rresp->set_sv_netview_offsetfromdp(10367480);
        xsim_sc_channel<0, bool > *p_42_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_42->S00_AXI_rlast.bind(*p_42_S00_AXI_rlast);
        p_42_S00_AXI_rlast->set_sv_netview_offsetfromdp(10367536);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_42_S00_AXI_ruser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_42->S00_AXI_ruser.bind(*p_42_S00_AXI_ruser);
        p_42_S00_AXI_ruser->set_sv_netview_offsetfromdp(10367592);
        xsim_sc_channel<0, bool > *p_42_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_42->S00_AXI_rvalid.bind(*p_42_S00_AXI_rvalid);
        p_42_S00_AXI_rvalid->set_sv_netview_offsetfromdp(10367648);
        xsim_sc_channel<0, bool > *p_42_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_42->S00_AXI_rready.bind(*p_42_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_42_S00_AXI_rready);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_42_M00_AXI_awaddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_42->M00_AXI_awaddr.bind(*p_42_M00_AXI_awaddr);
        p_42_M00_AXI_awaddr->set_sv_netview_offsetfromdp(10367760);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_42_M00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_42->M00_AXI_awlen.bind(*p_42_M00_AXI_awlen);
        p_42_M00_AXI_awlen->set_sv_netview_offsetfromdp(10367816);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_42_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_42->M00_AXI_awsize.bind(*p_42_M00_AXI_awsize);
        p_42_M00_AXI_awsize->set_sv_netview_offsetfromdp(10367872);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_42_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_42->M00_AXI_awburst.bind(*p_42_M00_AXI_awburst);
        p_42_M00_AXI_awburst->set_sv_netview_offsetfromdp(10367928);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_42_M00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_42->M00_AXI_awlock.bind(*p_42_M00_AXI_awlock);
        p_42_M00_AXI_awlock->set_sv_netview_offsetfromdp(10367984);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_42_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_42->M00_AXI_awcache.bind(*p_42_M00_AXI_awcache);
        p_42_M00_AXI_awcache->set_sv_netview_offsetfromdp(10368040);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_42_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_42->M00_AXI_awprot.bind(*p_42_M00_AXI_awprot);
        p_42_M00_AXI_awprot->set_sv_netview_offsetfromdp(10368096);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_42_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_42->M00_AXI_awqos.bind(*p_42_M00_AXI_awqos);
        p_42_M00_AXI_awqos->set_sv_netview_offsetfromdp(10368152);
        xsim_sc_channel<0, bool > *p_42_M00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_42->M00_AXI_awvalid.bind(*p_42_M00_AXI_awvalid);
        p_42_M00_AXI_awvalid->set_sv_netview_offsetfromdp(10368208);
        xsim_sc_channel<0, bool > *p_42_M00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_42->M00_AXI_awready.bind(*p_42_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_42_M00_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_42_M00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_42->M00_AXI_wdata.bind(*p_42_M00_AXI_wdata);
        p_42_M00_AXI_wdata->set_sv_netview_offsetfromdp(10368320);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_42_M00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_42->M00_AXI_wstrb.bind(*p_42_M00_AXI_wstrb);
        p_42_M00_AXI_wstrb->set_sv_netview_offsetfromdp(10368376);
        xsim_sc_channel<0, bool > *p_42_M00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_42->M00_AXI_wlast.bind(*p_42_M00_AXI_wlast);
        p_42_M00_AXI_wlast->set_sv_netview_offsetfromdp(10368432);
        xsim_sc_channel<0, bool > *p_42_M00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_42->M00_AXI_wvalid.bind(*p_42_M00_AXI_wvalid);
        p_42_M00_AXI_wvalid->set_sv_netview_offsetfromdp(10368488);
        xsim_sc_channel<0, bool > *p_42_M00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_42->M00_AXI_wready.bind(*p_42_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_42_M00_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_42_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_42->M00_AXI_bresp.bind(*p_42_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_42_M00_AXI_bresp);
        xsim_sc_channel<0, bool > *p_42_M00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_42->M00_AXI_bvalid.bind(*p_42_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_42_M00_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_42_M00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_42->M00_AXI_bready.bind(*p_42_M00_AXI_bready);
        p_42_M00_AXI_bready->set_sv_netview_offsetfromdp(10368712);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_42_M00_AXI_araddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_42->M00_AXI_araddr.bind(*p_42_M00_AXI_araddr);
        p_42_M00_AXI_araddr->set_sv_netview_offsetfromdp(10368768);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_42_M00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_42->M00_AXI_arlen.bind(*p_42_M00_AXI_arlen);
        p_42_M00_AXI_arlen->set_sv_netview_offsetfromdp(10368824);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_42_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_42->M00_AXI_arsize.bind(*p_42_M00_AXI_arsize);
        p_42_M00_AXI_arsize->set_sv_netview_offsetfromdp(10368880);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_42_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_42->M00_AXI_arburst.bind(*p_42_M00_AXI_arburst);
        p_42_M00_AXI_arburst->set_sv_netview_offsetfromdp(10368936);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_42_M00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_42->M00_AXI_arlock.bind(*p_42_M00_AXI_arlock);
        p_42_M00_AXI_arlock->set_sv_netview_offsetfromdp(10368992);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_42_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_42->M00_AXI_arcache.bind(*p_42_M00_AXI_arcache);
        p_42_M00_AXI_arcache->set_sv_netview_offsetfromdp(10369048);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_42_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_42->M00_AXI_arprot.bind(*p_42_M00_AXI_arprot);
        p_42_M00_AXI_arprot->set_sv_netview_offsetfromdp(10369104);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_42_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_42->M00_AXI_arqos.bind(*p_42_M00_AXI_arqos);
        p_42_M00_AXI_arqos->set_sv_netview_offsetfromdp(10369160);
        xsim_sc_channel<0, bool > *p_42_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_42->M00_AXI_arvalid.bind(*p_42_M00_AXI_arvalid);
        p_42_M00_AXI_arvalid->set_sv_netview_offsetfromdp(10369216);
        xsim_sc_channel<0, bool > *p_42_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_42->M00_AXI_arready.bind(*p_42_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_42_M00_AXI_arready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_42_M00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_42->M00_AXI_rdata.bind(*p_42_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_42_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_42_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_42->M00_AXI_rresp.bind(*p_42_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_42_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_42_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_42->M00_AXI_rlast.bind(*p_42_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_42_M00_AXI_rlast);
        xsim_sc_channel<0, bool > *p_42_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_42->M00_AXI_rvalid.bind(*p_42_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_42_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_42_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_42->M00_AXI_rready.bind(*p_42_M00_AXI_rready);
        p_42_M00_AXI_rready->set_sv_netview_offsetfromdp(10369552);
        sc_inst_43 = new bd_d216_interconnect_PLRAM_MEM04_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.interconnect.interconnect_plram_mem04");
        sc_inst_43->xsim_set_dbg_index(2692);
        xsim_sc_channel<0, bool > *p_43_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_43->aclk.bind(*p_43_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_43_aclk);
        xsim_sc_channel<0, bool > *p_43_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_43->aresetn.bind(*p_43_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_43_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_43_S00_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_43->S00_AXI_awid.bind(*p_43_S00_AXI_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_43_S00_AXI_awid);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_43_S00_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_43->S00_AXI_awaddr.bind(*p_43_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_43_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_43_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_43->S00_AXI_awlen.bind(*p_43_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_43_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_43_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_43->S00_AXI_awsize.bind(*p_43_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_43_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_43_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_43->S00_AXI_awburst.bind(*p_43_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_43_S00_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_43_S00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_43->S00_AXI_awlock.bind(*p_43_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_43_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_43_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_43->S00_AXI_awcache.bind(*p_43_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_43_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_43_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_43->S00_AXI_awprot.bind(*p_43_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_43_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_43_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_43->S00_AXI_awqos.bind(*p_43_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_43_S00_AXI_awqos);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_43_S00_AXI_awuser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_43->S00_AXI_awuser.bind(*p_43_S00_AXI_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_43_S00_AXI_awuser);
        xsim_sc_channel<0, bool > *p_43_S00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_43->S00_AXI_awvalid.bind(*p_43_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_43_S00_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_43_S00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_43->S00_AXI_awready.bind(*p_43_S00_AXI_awready);
        p_43_S00_AXI_awready->set_sv_netview_offsetfromdp(10370384);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_43_S00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_43->S00_AXI_wdata.bind(*p_43_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_43_S00_AXI_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_43_S00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_43->S00_AXI_wstrb.bind(*p_43_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_43_S00_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_43_S00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_43->S00_AXI_wlast.bind(*p_43_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_43_S00_AXI_wlast);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_43_S00_AXI_wuser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_43->S00_AXI_wuser.bind(*p_43_S00_AXI_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_43_S00_AXI_wuser);
        xsim_sc_channel<0, bool > *p_43_S00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_43->S00_AXI_wvalid.bind(*p_43_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_43_S00_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_43_S00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_43->S00_AXI_wready.bind(*p_43_S00_AXI_wready);
        p_43_S00_AXI_wready->set_sv_netview_offsetfromdp(10370720);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_43_S00_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_43->S00_AXI_bid.bind(*p_43_S00_AXI_bid);
        p_43_S00_AXI_bid->set_sv_netview_offsetfromdp(10370776);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_43_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_43->S00_AXI_bresp.bind(*p_43_S00_AXI_bresp);
        p_43_S00_AXI_bresp->set_sv_netview_offsetfromdp(10370832);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_43_S00_AXI_buser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_43->S00_AXI_buser.bind(*p_43_S00_AXI_buser);
        p_43_S00_AXI_buser->set_sv_netview_offsetfromdp(10370888);
        xsim_sc_channel<0, bool > *p_43_S00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_43->S00_AXI_bvalid.bind(*p_43_S00_AXI_bvalid);
        p_43_S00_AXI_bvalid->set_sv_netview_offsetfromdp(10370944);
        xsim_sc_channel<0, bool > *p_43_S00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_43->S00_AXI_bready.bind(*p_43_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_43_S00_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_43_S00_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_43->S00_AXI_arid.bind(*p_43_S00_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_43_S00_AXI_arid);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_43_S00_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_43->S00_AXI_araddr.bind(*p_43_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_43_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_43_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_43->S00_AXI_arlen.bind(*p_43_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_43_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_43_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_43->S00_AXI_arsize.bind(*p_43_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_43_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_43_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_43->S00_AXI_arburst.bind(*p_43_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_43_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_43_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_43->S00_AXI_arlock.bind(*p_43_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_43_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_43_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_43->S00_AXI_arcache.bind(*p_43_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_43_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_43_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_43->S00_AXI_arprot.bind(*p_43_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_43_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_43_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_43->S00_AXI_arqos.bind(*p_43_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_43_S00_AXI_arqos);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_43_S00_AXI_aruser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_43->S00_AXI_aruser.bind(*p_43_S00_AXI_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_43_S00_AXI_aruser);
        xsim_sc_channel<0, bool > *p_43_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_43->S00_AXI_arvalid.bind(*p_43_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_43_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_43_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_43->S00_AXI_arready.bind(*p_43_S00_AXI_arready);
        p_43_S00_AXI_arready->set_sv_netview_offsetfromdp(10371672);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_43_S00_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_43->S00_AXI_rid.bind(*p_43_S00_AXI_rid);
        p_43_S00_AXI_rid->set_sv_netview_offsetfromdp(10371728);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_43_S00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_43->S00_AXI_rdata.bind(*p_43_S00_AXI_rdata);
        p_43_S00_AXI_rdata->set_sv_netview_offsetfromdp(10371784);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_43_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_43->S00_AXI_rresp.bind(*p_43_S00_AXI_rresp);
        p_43_S00_AXI_rresp->set_sv_netview_offsetfromdp(10371840);
        xsim_sc_channel<0, bool > *p_43_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_43->S00_AXI_rlast.bind(*p_43_S00_AXI_rlast);
        p_43_S00_AXI_rlast->set_sv_netview_offsetfromdp(10371896);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_43_S00_AXI_ruser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_43->S00_AXI_ruser.bind(*p_43_S00_AXI_ruser);
        p_43_S00_AXI_ruser->set_sv_netview_offsetfromdp(10371952);
        xsim_sc_channel<0, bool > *p_43_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_43->S00_AXI_rvalid.bind(*p_43_S00_AXI_rvalid);
        p_43_S00_AXI_rvalid->set_sv_netview_offsetfromdp(10372008);
        xsim_sc_channel<0, bool > *p_43_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_43->S00_AXI_rready.bind(*p_43_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_43_S00_AXI_rready);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_43_M00_AXI_awaddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_43->M00_AXI_awaddr.bind(*p_43_M00_AXI_awaddr);
        p_43_M00_AXI_awaddr->set_sv_netview_offsetfromdp(10372120);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_43_M00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_43->M00_AXI_awlen.bind(*p_43_M00_AXI_awlen);
        p_43_M00_AXI_awlen->set_sv_netview_offsetfromdp(10372176);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_43_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_43->M00_AXI_awsize.bind(*p_43_M00_AXI_awsize);
        p_43_M00_AXI_awsize->set_sv_netview_offsetfromdp(10372232);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_43_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_43->M00_AXI_awburst.bind(*p_43_M00_AXI_awburst);
        p_43_M00_AXI_awburst->set_sv_netview_offsetfromdp(10372288);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_43_M00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_43->M00_AXI_awlock.bind(*p_43_M00_AXI_awlock);
        p_43_M00_AXI_awlock->set_sv_netview_offsetfromdp(10372344);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_43_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_43->M00_AXI_awcache.bind(*p_43_M00_AXI_awcache);
        p_43_M00_AXI_awcache->set_sv_netview_offsetfromdp(10372400);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_43_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_43->M00_AXI_awprot.bind(*p_43_M00_AXI_awprot);
        p_43_M00_AXI_awprot->set_sv_netview_offsetfromdp(10372456);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_43_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_43->M00_AXI_awqos.bind(*p_43_M00_AXI_awqos);
        p_43_M00_AXI_awqos->set_sv_netview_offsetfromdp(10372512);
        xsim_sc_channel<0, bool > *p_43_M00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_43->M00_AXI_awvalid.bind(*p_43_M00_AXI_awvalid);
        p_43_M00_AXI_awvalid->set_sv_netview_offsetfromdp(10372568);
        xsim_sc_channel<0, bool > *p_43_M00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_43->M00_AXI_awready.bind(*p_43_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_43_M00_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_43_M00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_43->M00_AXI_wdata.bind(*p_43_M00_AXI_wdata);
        p_43_M00_AXI_wdata->set_sv_netview_offsetfromdp(10372680);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_43_M00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_43->M00_AXI_wstrb.bind(*p_43_M00_AXI_wstrb);
        p_43_M00_AXI_wstrb->set_sv_netview_offsetfromdp(10372736);
        xsim_sc_channel<0, bool > *p_43_M00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_43->M00_AXI_wlast.bind(*p_43_M00_AXI_wlast);
        p_43_M00_AXI_wlast->set_sv_netview_offsetfromdp(10372792);
        xsim_sc_channel<0, bool > *p_43_M00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_43->M00_AXI_wvalid.bind(*p_43_M00_AXI_wvalid);
        p_43_M00_AXI_wvalid->set_sv_netview_offsetfromdp(10372848);
        xsim_sc_channel<0, bool > *p_43_M00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_43->M00_AXI_wready.bind(*p_43_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_43_M00_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_43_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_43->M00_AXI_bresp.bind(*p_43_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_43_M00_AXI_bresp);
        xsim_sc_channel<0, bool > *p_43_M00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_43->M00_AXI_bvalid.bind(*p_43_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_43_M00_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_43_M00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_43->M00_AXI_bready.bind(*p_43_M00_AXI_bready);
        p_43_M00_AXI_bready->set_sv_netview_offsetfromdp(10373072);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_43_M00_AXI_araddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_43->M00_AXI_araddr.bind(*p_43_M00_AXI_araddr);
        p_43_M00_AXI_araddr->set_sv_netview_offsetfromdp(10373128);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_43_M00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_43->M00_AXI_arlen.bind(*p_43_M00_AXI_arlen);
        p_43_M00_AXI_arlen->set_sv_netview_offsetfromdp(10373184);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_43_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_43->M00_AXI_arsize.bind(*p_43_M00_AXI_arsize);
        p_43_M00_AXI_arsize->set_sv_netview_offsetfromdp(10373240);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_43_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_43->M00_AXI_arburst.bind(*p_43_M00_AXI_arburst);
        p_43_M00_AXI_arburst->set_sv_netview_offsetfromdp(10373296);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_43_M00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_43->M00_AXI_arlock.bind(*p_43_M00_AXI_arlock);
        p_43_M00_AXI_arlock->set_sv_netview_offsetfromdp(10373352);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_43_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_43->M00_AXI_arcache.bind(*p_43_M00_AXI_arcache);
        p_43_M00_AXI_arcache->set_sv_netview_offsetfromdp(10373408);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_43_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_43->M00_AXI_arprot.bind(*p_43_M00_AXI_arprot);
        p_43_M00_AXI_arprot->set_sv_netview_offsetfromdp(10373464);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_43_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_43->M00_AXI_arqos.bind(*p_43_M00_AXI_arqos);
        p_43_M00_AXI_arqos->set_sv_netview_offsetfromdp(10373520);
        xsim_sc_channel<0, bool > *p_43_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_43->M00_AXI_arvalid.bind(*p_43_M00_AXI_arvalid);
        p_43_M00_AXI_arvalid->set_sv_netview_offsetfromdp(10373576);
        xsim_sc_channel<0, bool > *p_43_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_43->M00_AXI_arready.bind(*p_43_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_43_M00_AXI_arready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_43_M00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_43->M00_AXI_rdata.bind(*p_43_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_43_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_43_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_43->M00_AXI_rresp.bind(*p_43_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_43_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_43_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_43->M00_AXI_rlast.bind(*p_43_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_43_M00_AXI_rlast);
        xsim_sc_channel<0, bool > *p_43_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_43->M00_AXI_rvalid.bind(*p_43_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_43_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_43_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_43->M00_AXI_rready.bind(*p_43_M00_AXI_rready);
        p_43_M00_AXI_rready->set_sv_netview_offsetfromdp(10373912);
        sc_inst_44 = new bd_d216_interconnect_PLRAM_MEM05_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.interconnect.interconnect_plram_mem05");
        sc_inst_44->xsim_set_dbg_index(2693);
        xsim_sc_channel<0, bool > *p_44_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_44->aclk.bind(*p_44_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_44_aclk);
        xsim_sc_channel<0, bool > *p_44_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_44->aresetn.bind(*p_44_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_44_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_44_S00_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_44->S00_AXI_awid.bind(*p_44_S00_AXI_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_44_S00_AXI_awid);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_44_S00_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_44->S00_AXI_awaddr.bind(*p_44_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_44_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_44_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_44->S00_AXI_awlen.bind(*p_44_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_44_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_44_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_44->S00_AXI_awsize.bind(*p_44_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_44_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_44_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_44->S00_AXI_awburst.bind(*p_44_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_44_S00_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_44_S00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_44->S00_AXI_awlock.bind(*p_44_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_44_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_44_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_44->S00_AXI_awcache.bind(*p_44_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_44_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_44_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_44->S00_AXI_awprot.bind(*p_44_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_44_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_44_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_44->S00_AXI_awqos.bind(*p_44_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_44_S00_AXI_awqos);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_44_S00_AXI_awuser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_44->S00_AXI_awuser.bind(*p_44_S00_AXI_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_44_S00_AXI_awuser);
        xsim_sc_channel<0, bool > *p_44_S00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_44->S00_AXI_awvalid.bind(*p_44_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_44_S00_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_44_S00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_44->S00_AXI_awready.bind(*p_44_S00_AXI_awready);
        p_44_S00_AXI_awready->set_sv_netview_offsetfromdp(10374744);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_44_S00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_44->S00_AXI_wdata.bind(*p_44_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_44_S00_AXI_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_44_S00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_44->S00_AXI_wstrb.bind(*p_44_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_44_S00_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_44_S00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_44->S00_AXI_wlast.bind(*p_44_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_44_S00_AXI_wlast);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_44_S00_AXI_wuser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_44->S00_AXI_wuser.bind(*p_44_S00_AXI_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_44_S00_AXI_wuser);
        xsim_sc_channel<0, bool > *p_44_S00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_44->S00_AXI_wvalid.bind(*p_44_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_44_S00_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_44_S00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_44->S00_AXI_wready.bind(*p_44_S00_AXI_wready);
        p_44_S00_AXI_wready->set_sv_netview_offsetfromdp(10375080);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_44_S00_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_44->S00_AXI_bid.bind(*p_44_S00_AXI_bid);
        p_44_S00_AXI_bid->set_sv_netview_offsetfromdp(10375136);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_44_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_44->S00_AXI_bresp.bind(*p_44_S00_AXI_bresp);
        p_44_S00_AXI_bresp->set_sv_netview_offsetfromdp(10375192);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_44_S00_AXI_buser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_44->S00_AXI_buser.bind(*p_44_S00_AXI_buser);
        p_44_S00_AXI_buser->set_sv_netview_offsetfromdp(10375248);
        xsim_sc_channel<0, bool > *p_44_S00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_44->S00_AXI_bvalid.bind(*p_44_S00_AXI_bvalid);
        p_44_S00_AXI_bvalid->set_sv_netview_offsetfromdp(10375304);
        xsim_sc_channel<0, bool > *p_44_S00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_44->S00_AXI_bready.bind(*p_44_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_44_S00_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_44_S00_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_44->S00_AXI_arid.bind(*p_44_S00_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_44_S00_AXI_arid);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_44_S00_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_44->S00_AXI_araddr.bind(*p_44_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_44_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_44_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_44->S00_AXI_arlen.bind(*p_44_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_44_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_44_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_44->S00_AXI_arsize.bind(*p_44_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_44_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_44_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_44->S00_AXI_arburst.bind(*p_44_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_44_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_44_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_44->S00_AXI_arlock.bind(*p_44_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_44_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_44_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_44->S00_AXI_arcache.bind(*p_44_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_44_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_44_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_44->S00_AXI_arprot.bind(*p_44_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_44_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_44_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_44->S00_AXI_arqos.bind(*p_44_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_44_S00_AXI_arqos);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_44_S00_AXI_aruser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_44->S00_AXI_aruser.bind(*p_44_S00_AXI_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_44_S00_AXI_aruser);
        xsim_sc_channel<0, bool > *p_44_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_44->S00_AXI_arvalid.bind(*p_44_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_44_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_44_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_44->S00_AXI_arready.bind(*p_44_S00_AXI_arready);
        p_44_S00_AXI_arready->set_sv_netview_offsetfromdp(10376032);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_44_S00_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_44->S00_AXI_rid.bind(*p_44_S00_AXI_rid);
        p_44_S00_AXI_rid->set_sv_netview_offsetfromdp(10376088);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_44_S00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_44->S00_AXI_rdata.bind(*p_44_S00_AXI_rdata);
        p_44_S00_AXI_rdata->set_sv_netview_offsetfromdp(10376144);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_44_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_44->S00_AXI_rresp.bind(*p_44_S00_AXI_rresp);
        p_44_S00_AXI_rresp->set_sv_netview_offsetfromdp(10376200);
        xsim_sc_channel<0, bool > *p_44_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_44->S00_AXI_rlast.bind(*p_44_S00_AXI_rlast);
        p_44_S00_AXI_rlast->set_sv_netview_offsetfromdp(10376256);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_44_S00_AXI_ruser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_44->S00_AXI_ruser.bind(*p_44_S00_AXI_ruser);
        p_44_S00_AXI_ruser->set_sv_netview_offsetfromdp(10376312);
        xsim_sc_channel<0, bool > *p_44_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_44->S00_AXI_rvalid.bind(*p_44_S00_AXI_rvalid);
        p_44_S00_AXI_rvalid->set_sv_netview_offsetfromdp(10376368);
        xsim_sc_channel<0, bool > *p_44_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_44->S00_AXI_rready.bind(*p_44_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_44_S00_AXI_rready);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_44_M00_AXI_awaddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_44->M00_AXI_awaddr.bind(*p_44_M00_AXI_awaddr);
        p_44_M00_AXI_awaddr->set_sv_netview_offsetfromdp(10376480);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_44_M00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_44->M00_AXI_awlen.bind(*p_44_M00_AXI_awlen);
        p_44_M00_AXI_awlen->set_sv_netview_offsetfromdp(10376536);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_44_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_44->M00_AXI_awsize.bind(*p_44_M00_AXI_awsize);
        p_44_M00_AXI_awsize->set_sv_netview_offsetfromdp(10376592);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_44_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_44->M00_AXI_awburst.bind(*p_44_M00_AXI_awburst);
        p_44_M00_AXI_awburst->set_sv_netview_offsetfromdp(10376648);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_44_M00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_44->M00_AXI_awlock.bind(*p_44_M00_AXI_awlock);
        p_44_M00_AXI_awlock->set_sv_netview_offsetfromdp(10376704);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_44_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_44->M00_AXI_awcache.bind(*p_44_M00_AXI_awcache);
        p_44_M00_AXI_awcache->set_sv_netview_offsetfromdp(10376760);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_44_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_44->M00_AXI_awprot.bind(*p_44_M00_AXI_awprot);
        p_44_M00_AXI_awprot->set_sv_netview_offsetfromdp(10376816);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_44_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_44->M00_AXI_awqos.bind(*p_44_M00_AXI_awqos);
        p_44_M00_AXI_awqos->set_sv_netview_offsetfromdp(10376872);
        xsim_sc_channel<0, bool > *p_44_M00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_44->M00_AXI_awvalid.bind(*p_44_M00_AXI_awvalid);
        p_44_M00_AXI_awvalid->set_sv_netview_offsetfromdp(10376928);
        xsim_sc_channel<0, bool > *p_44_M00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_44->M00_AXI_awready.bind(*p_44_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_44_M00_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_44_M00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_44->M00_AXI_wdata.bind(*p_44_M00_AXI_wdata);
        p_44_M00_AXI_wdata->set_sv_netview_offsetfromdp(10377040);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_44_M00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_44->M00_AXI_wstrb.bind(*p_44_M00_AXI_wstrb);
        p_44_M00_AXI_wstrb->set_sv_netview_offsetfromdp(10377096);
        xsim_sc_channel<0, bool > *p_44_M00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_44->M00_AXI_wlast.bind(*p_44_M00_AXI_wlast);
        p_44_M00_AXI_wlast->set_sv_netview_offsetfromdp(10377152);
        xsim_sc_channel<0, bool > *p_44_M00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_44->M00_AXI_wvalid.bind(*p_44_M00_AXI_wvalid);
        p_44_M00_AXI_wvalid->set_sv_netview_offsetfromdp(10377208);
        xsim_sc_channel<0, bool > *p_44_M00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_44->M00_AXI_wready.bind(*p_44_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_44_M00_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_44_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_44->M00_AXI_bresp.bind(*p_44_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_44_M00_AXI_bresp);
        xsim_sc_channel<0, bool > *p_44_M00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_44->M00_AXI_bvalid.bind(*p_44_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_44_M00_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_44_M00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_44->M00_AXI_bready.bind(*p_44_M00_AXI_bready);
        p_44_M00_AXI_bready->set_sv_netview_offsetfromdp(10377432);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_44_M00_AXI_araddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_44->M00_AXI_araddr.bind(*p_44_M00_AXI_araddr);
        p_44_M00_AXI_araddr->set_sv_netview_offsetfromdp(10377488);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_44_M00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_44->M00_AXI_arlen.bind(*p_44_M00_AXI_arlen);
        p_44_M00_AXI_arlen->set_sv_netview_offsetfromdp(10377544);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_44_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_44->M00_AXI_arsize.bind(*p_44_M00_AXI_arsize);
        p_44_M00_AXI_arsize->set_sv_netview_offsetfromdp(10377600);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_44_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_44->M00_AXI_arburst.bind(*p_44_M00_AXI_arburst);
        p_44_M00_AXI_arburst->set_sv_netview_offsetfromdp(10377656);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_44_M00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_44->M00_AXI_arlock.bind(*p_44_M00_AXI_arlock);
        p_44_M00_AXI_arlock->set_sv_netview_offsetfromdp(10377712);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_44_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_44->M00_AXI_arcache.bind(*p_44_M00_AXI_arcache);
        p_44_M00_AXI_arcache->set_sv_netview_offsetfromdp(10377768);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_44_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_44->M00_AXI_arprot.bind(*p_44_M00_AXI_arprot);
        p_44_M00_AXI_arprot->set_sv_netview_offsetfromdp(10377824);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_44_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_44->M00_AXI_arqos.bind(*p_44_M00_AXI_arqos);
        p_44_M00_AXI_arqos->set_sv_netview_offsetfromdp(10377880);
        xsim_sc_channel<0, bool > *p_44_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_44->M00_AXI_arvalid.bind(*p_44_M00_AXI_arvalid);
        p_44_M00_AXI_arvalid->set_sv_netview_offsetfromdp(10377936);
        xsim_sc_channel<0, bool > *p_44_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_44->M00_AXI_arready.bind(*p_44_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_44_M00_AXI_arready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_44_M00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_44->M00_AXI_rdata.bind(*p_44_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_44_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_44_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_44->M00_AXI_rresp.bind(*p_44_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_44_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_44_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_44->M00_AXI_rlast.bind(*p_44_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_44_M00_AXI_rlast);
        xsim_sc_channel<0, bool > *p_44_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_44->M00_AXI_rvalid.bind(*p_44_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_44_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_44_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_44->M00_AXI_rready.bind(*p_44_M00_AXI_rready);
        p_44_M00_AXI_rready->set_sv_netview_offsetfromdp(10378272);
        sc_inst_45 = new bd_d216_interconnect_S00_AXI_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.interconnect.interconnect_s00_axi");
        sc_inst_45->xsim_set_dbg_index(2694);
        xsim_sc_channel<0, bool > *p_45_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_45->aclk.bind(*p_45_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_45_aclk);
        xsim_sc_channel<0, bool > *p_45_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_45->aresetn.bind(*p_45_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_45_aresetn);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_45_S00_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_45->S00_AXI_awaddr.bind(*p_45_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_45_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_45_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_45->S00_AXI_awlen.bind(*p_45_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_45_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_45_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_45->S00_AXI_awsize.bind(*p_45_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_45_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_45_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_45->S00_AXI_awburst.bind(*p_45_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_45_S00_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_S00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->S00_AXI_awlock.bind(*p_45_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_45_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_45_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_45->S00_AXI_awcache.bind(*p_45_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_45_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_45_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_45->S00_AXI_awprot.bind(*p_45_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_45_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_45_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_45->S00_AXI_awqos.bind(*p_45_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_45_S00_AXI_awqos);
        xsim_sc_channel<0, bool > *p_45_S00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->S00_AXI_awvalid.bind(*p_45_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_45_S00_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_45_S00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_45->S00_AXI_awready.bind(*p_45_S00_AXI_awready);
        p_45_S00_AXI_awready->set_sv_netview_offsetfromdp(10378992);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_45_S00_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_45->S00_AXI_wdata.bind(*p_45_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_45_S00_AXI_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_45_S00_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_45->S00_AXI_wstrb.bind(*p_45_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_45_S00_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_45_S00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_45->S00_AXI_wlast.bind(*p_45_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_45_S00_AXI_wlast);
        xsim_sc_channel<0, bool > *p_45_S00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->S00_AXI_wvalid.bind(*p_45_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_45_S00_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_45_S00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_45->S00_AXI_wready.bind(*p_45_S00_AXI_wready);
        p_45_S00_AXI_wready->set_sv_netview_offsetfromdp(10379272);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_45_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_45->S00_AXI_bresp.bind(*p_45_S00_AXI_bresp);
        p_45_S00_AXI_bresp->set_sv_netview_offsetfromdp(10379328);
        xsim_sc_channel<0, bool > *p_45_S00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->S00_AXI_bvalid.bind(*p_45_S00_AXI_bvalid);
        p_45_S00_AXI_bvalid->set_sv_netview_offsetfromdp(10379384);
        xsim_sc_channel<0, bool > *p_45_S00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_45->S00_AXI_bready.bind(*p_45_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_45_S00_AXI_bready);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_45_S00_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_45->S00_AXI_araddr.bind(*p_45_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_45_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_45_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_45->S00_AXI_arlen.bind(*p_45_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_45_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_45_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_45->S00_AXI_arsize.bind(*p_45_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_45_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_45_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_45->S00_AXI_arburst.bind(*p_45_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_45_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->S00_AXI_arlock.bind(*p_45_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_45_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_45_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_45->S00_AXI_arcache.bind(*p_45_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_45_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_45_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_45->S00_AXI_arprot.bind(*p_45_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_45_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_45_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_45->S00_AXI_arqos.bind(*p_45_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_45_S00_AXI_arqos);
        xsim_sc_channel<0, bool > *p_45_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->S00_AXI_arvalid.bind(*p_45_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_45_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_45_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_45->S00_AXI_arready.bind(*p_45_S00_AXI_arready);
        p_45_S00_AXI_arready->set_sv_netview_offsetfromdp(10380000);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_45_S00_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_45->S00_AXI_rdata.bind(*p_45_S00_AXI_rdata);
        p_45_S00_AXI_rdata->set_sv_netview_offsetfromdp(10380056);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_45_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_45->S00_AXI_rresp.bind(*p_45_S00_AXI_rresp);
        p_45_S00_AXI_rresp->set_sv_netview_offsetfromdp(10380112);
        xsim_sc_channel<0, bool > *p_45_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_45->S00_AXI_rlast.bind(*p_45_S00_AXI_rlast);
        p_45_S00_AXI_rlast->set_sv_netview_offsetfromdp(10380168);
        xsim_sc_channel<0, bool > *p_45_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->S00_AXI_rvalid.bind(*p_45_S00_AXI_rvalid);
        p_45_S00_AXI_rvalid->set_sv_netview_offsetfromdp(10380224);
        xsim_sc_channel<0, bool > *p_45_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_45->S00_AXI_rready.bind(*p_45_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_45_S00_AXI_rready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_M00_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->M00_AXI_awid.bind(*p_45_M00_AXI_awid);
        p_45_M00_AXI_awid->set_sv_netview_offsetfromdp(10380336);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_45_M00_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_45->M00_AXI_awaddr.bind(*p_45_M00_AXI_awaddr);
        p_45_M00_AXI_awaddr->set_sv_netview_offsetfromdp(10380392);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_45_M00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_45->M00_AXI_awlen.bind(*p_45_M00_AXI_awlen);
        p_45_M00_AXI_awlen->set_sv_netview_offsetfromdp(10380448);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_45_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_45->M00_AXI_awsize.bind(*p_45_M00_AXI_awsize);
        p_45_M00_AXI_awsize->set_sv_netview_offsetfromdp(10380504);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_45_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_45->M00_AXI_awburst.bind(*p_45_M00_AXI_awburst);
        p_45_M00_AXI_awburst->set_sv_netview_offsetfromdp(10380560);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_M00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->M00_AXI_awlock.bind(*p_45_M00_AXI_awlock);
        p_45_M00_AXI_awlock->set_sv_netview_offsetfromdp(10380616);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_45_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_45->M00_AXI_awcache.bind(*p_45_M00_AXI_awcache);
        p_45_M00_AXI_awcache->set_sv_netview_offsetfromdp(10380672);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_45_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_45->M00_AXI_awprot.bind(*p_45_M00_AXI_awprot);
        p_45_M00_AXI_awprot->set_sv_netview_offsetfromdp(10380728);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_45_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_45->M00_AXI_awqos.bind(*p_45_M00_AXI_awqos);
        p_45_M00_AXI_awqos->set_sv_netview_offsetfromdp(10380784);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_45_M00_AXI_awuser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_45->M00_AXI_awuser.bind(*p_45_M00_AXI_awuser);
        p_45_M00_AXI_awuser->set_sv_netview_offsetfromdp(10380840);
        xsim_sc_channel<0, bool > *p_45_M00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->M00_AXI_awvalid.bind(*p_45_M00_AXI_awvalid);
        p_45_M00_AXI_awvalid->set_sv_netview_offsetfromdp(10380896);
        xsim_sc_channel<0, bool > *p_45_M00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_45->M00_AXI_awready.bind(*p_45_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M00_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_45_M00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_45->M00_AXI_wdata.bind(*p_45_M00_AXI_wdata);
        p_45_M00_AXI_wdata->set_sv_netview_offsetfromdp(10381008);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_45_M00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_45->M00_AXI_wstrb.bind(*p_45_M00_AXI_wstrb);
        p_45_M00_AXI_wstrb->set_sv_netview_offsetfromdp(10381064);
        xsim_sc_channel<0, bool > *p_45_M00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_45->M00_AXI_wlast.bind(*p_45_M00_AXI_wlast);
        p_45_M00_AXI_wlast->set_sv_netview_offsetfromdp(10381120);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_45_M00_AXI_wuser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_45->M00_AXI_wuser.bind(*p_45_M00_AXI_wuser);
        p_45_M00_AXI_wuser->set_sv_netview_offsetfromdp(10381176);
        xsim_sc_channel<0, bool > *p_45_M00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->M00_AXI_wvalid.bind(*p_45_M00_AXI_wvalid);
        p_45_M00_AXI_wvalid->set_sv_netview_offsetfromdp(10381232);
        xsim_sc_channel<0, bool > *p_45_M00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_45->M00_AXI_wready.bind(*p_45_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M00_AXI_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_M00_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->M00_AXI_bid.bind(*p_45_M00_AXI_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M00_AXI_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_45_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_45->M00_AXI_bresp.bind(*p_45_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M00_AXI_bresp);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_45_M00_AXI_buser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_45->M00_AXI_buser.bind(*p_45_M00_AXI_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M00_AXI_buser);
        xsim_sc_channel<0, bool > *p_45_M00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->M00_AXI_bvalid.bind(*p_45_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M00_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_45_M00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_45->M00_AXI_bready.bind(*p_45_M00_AXI_bready);
        p_45_M00_AXI_bready->set_sv_netview_offsetfromdp(10381568);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_M00_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->M00_AXI_arid.bind(*p_45_M00_AXI_arid);
        p_45_M00_AXI_arid->set_sv_netview_offsetfromdp(10381624);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_45_M00_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_45->M00_AXI_araddr.bind(*p_45_M00_AXI_araddr);
        p_45_M00_AXI_araddr->set_sv_netview_offsetfromdp(10381680);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_45_M00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_45->M00_AXI_arlen.bind(*p_45_M00_AXI_arlen);
        p_45_M00_AXI_arlen->set_sv_netview_offsetfromdp(10381736);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_45_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_45->M00_AXI_arsize.bind(*p_45_M00_AXI_arsize);
        p_45_M00_AXI_arsize->set_sv_netview_offsetfromdp(10381792);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_45_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_45->M00_AXI_arburst.bind(*p_45_M00_AXI_arburst);
        p_45_M00_AXI_arburst->set_sv_netview_offsetfromdp(10381848);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_M00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->M00_AXI_arlock.bind(*p_45_M00_AXI_arlock);
        p_45_M00_AXI_arlock->set_sv_netview_offsetfromdp(10381904);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_45_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_45->M00_AXI_arcache.bind(*p_45_M00_AXI_arcache);
        p_45_M00_AXI_arcache->set_sv_netview_offsetfromdp(10381960);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_45_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_45->M00_AXI_arprot.bind(*p_45_M00_AXI_arprot);
        p_45_M00_AXI_arprot->set_sv_netview_offsetfromdp(10382016);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_45_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_45->M00_AXI_arqos.bind(*p_45_M00_AXI_arqos);
        p_45_M00_AXI_arqos->set_sv_netview_offsetfromdp(10382072);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_45_M00_AXI_aruser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_45->M00_AXI_aruser.bind(*p_45_M00_AXI_aruser);
        p_45_M00_AXI_aruser->set_sv_netview_offsetfromdp(10382128);
        xsim_sc_channel<0, bool > *p_45_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->M00_AXI_arvalid.bind(*p_45_M00_AXI_arvalid);
        p_45_M00_AXI_arvalid->set_sv_netview_offsetfromdp(10382184);
        xsim_sc_channel<0, bool > *p_45_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_45->M00_AXI_arready.bind(*p_45_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M00_AXI_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_M00_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->M00_AXI_rid.bind(*p_45_M00_AXI_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M00_AXI_rid);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_45_M00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_45->M00_AXI_rdata.bind(*p_45_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_45_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_45->M00_AXI_rresp.bind(*p_45_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_45_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_45->M00_AXI_rlast.bind(*p_45_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M00_AXI_rlast);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_45_M00_AXI_ruser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_45->M00_AXI_ruser.bind(*p_45_M00_AXI_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M00_AXI_ruser);
        xsim_sc_channel<0, bool > *p_45_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->M00_AXI_rvalid.bind(*p_45_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_45_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_45->M00_AXI_rready.bind(*p_45_M00_AXI_rready);
        p_45_M00_AXI_rready->set_sv_netview_offsetfromdp(10382632);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_M01_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->M01_AXI_awid.bind(*p_45_M01_AXI_awid);
        p_45_M01_AXI_awid->set_sv_netview_offsetfromdp(10382688);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_45_M01_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_45->M01_AXI_awaddr.bind(*p_45_M01_AXI_awaddr);
        p_45_M01_AXI_awaddr->set_sv_netview_offsetfromdp(10382744);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_45_M01_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_45->M01_AXI_awlen.bind(*p_45_M01_AXI_awlen);
        p_45_M01_AXI_awlen->set_sv_netview_offsetfromdp(10382800);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_45_M01_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_45->M01_AXI_awsize.bind(*p_45_M01_AXI_awsize);
        p_45_M01_AXI_awsize->set_sv_netview_offsetfromdp(10382856);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_45_M01_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_45->M01_AXI_awburst.bind(*p_45_M01_AXI_awburst);
        p_45_M01_AXI_awburst->set_sv_netview_offsetfromdp(10382912);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_M01_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->M01_AXI_awlock.bind(*p_45_M01_AXI_awlock);
        p_45_M01_AXI_awlock->set_sv_netview_offsetfromdp(10382968);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_45_M01_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_45->M01_AXI_awcache.bind(*p_45_M01_AXI_awcache);
        p_45_M01_AXI_awcache->set_sv_netview_offsetfromdp(10383024);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_45_M01_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_45->M01_AXI_awprot.bind(*p_45_M01_AXI_awprot);
        p_45_M01_AXI_awprot->set_sv_netview_offsetfromdp(10383080);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_45_M01_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_45->M01_AXI_awqos.bind(*p_45_M01_AXI_awqos);
        p_45_M01_AXI_awqos->set_sv_netview_offsetfromdp(10383136);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_45_M01_AXI_awuser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_45->M01_AXI_awuser.bind(*p_45_M01_AXI_awuser);
        p_45_M01_AXI_awuser->set_sv_netview_offsetfromdp(10383192);
        xsim_sc_channel<0, bool > *p_45_M01_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->M01_AXI_awvalid.bind(*p_45_M01_AXI_awvalid);
        p_45_M01_AXI_awvalid->set_sv_netview_offsetfromdp(10383248);
        xsim_sc_channel<0, bool > *p_45_M01_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_45->M01_AXI_awready.bind(*p_45_M01_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M01_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_45_M01_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_45->M01_AXI_wdata.bind(*p_45_M01_AXI_wdata);
        p_45_M01_AXI_wdata->set_sv_netview_offsetfromdp(10383360);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_45_M01_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_45->M01_AXI_wstrb.bind(*p_45_M01_AXI_wstrb);
        p_45_M01_AXI_wstrb->set_sv_netview_offsetfromdp(10383416);
        xsim_sc_channel<0, bool > *p_45_M01_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_45->M01_AXI_wlast.bind(*p_45_M01_AXI_wlast);
        p_45_M01_AXI_wlast->set_sv_netview_offsetfromdp(10383472);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_45_M01_AXI_wuser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_45->M01_AXI_wuser.bind(*p_45_M01_AXI_wuser);
        p_45_M01_AXI_wuser->set_sv_netview_offsetfromdp(10383528);
        xsim_sc_channel<0, bool > *p_45_M01_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->M01_AXI_wvalid.bind(*p_45_M01_AXI_wvalid);
        p_45_M01_AXI_wvalid->set_sv_netview_offsetfromdp(10383584);
        xsim_sc_channel<0, bool > *p_45_M01_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_45->M01_AXI_wready.bind(*p_45_M01_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M01_AXI_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_M01_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->M01_AXI_bid.bind(*p_45_M01_AXI_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M01_AXI_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_45_M01_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_45->M01_AXI_bresp.bind(*p_45_M01_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M01_AXI_bresp);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_45_M01_AXI_buser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_45->M01_AXI_buser.bind(*p_45_M01_AXI_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M01_AXI_buser);
        xsim_sc_channel<0, bool > *p_45_M01_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->M01_AXI_bvalid.bind(*p_45_M01_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M01_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_45_M01_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_45->M01_AXI_bready.bind(*p_45_M01_AXI_bready);
        p_45_M01_AXI_bready->set_sv_netview_offsetfromdp(10383920);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_M01_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->M01_AXI_arid.bind(*p_45_M01_AXI_arid);
        p_45_M01_AXI_arid->set_sv_netview_offsetfromdp(10383976);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_45_M01_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_45->M01_AXI_araddr.bind(*p_45_M01_AXI_araddr);
        p_45_M01_AXI_araddr->set_sv_netview_offsetfromdp(10384032);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_45_M01_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_45->M01_AXI_arlen.bind(*p_45_M01_AXI_arlen);
        p_45_M01_AXI_arlen->set_sv_netview_offsetfromdp(10384088);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_45_M01_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_45->M01_AXI_arsize.bind(*p_45_M01_AXI_arsize);
        p_45_M01_AXI_arsize->set_sv_netview_offsetfromdp(10384144);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_45_M01_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_45->M01_AXI_arburst.bind(*p_45_M01_AXI_arburst);
        p_45_M01_AXI_arburst->set_sv_netview_offsetfromdp(10384200);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_M01_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->M01_AXI_arlock.bind(*p_45_M01_AXI_arlock);
        p_45_M01_AXI_arlock->set_sv_netview_offsetfromdp(10384256);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_45_M01_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_45->M01_AXI_arcache.bind(*p_45_M01_AXI_arcache);
        p_45_M01_AXI_arcache->set_sv_netview_offsetfromdp(10384312);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_45_M01_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_45->M01_AXI_arprot.bind(*p_45_M01_AXI_arprot);
        p_45_M01_AXI_arprot->set_sv_netview_offsetfromdp(10384368);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_45_M01_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_45->M01_AXI_arqos.bind(*p_45_M01_AXI_arqos);
        p_45_M01_AXI_arqos->set_sv_netview_offsetfromdp(10384424);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_45_M01_AXI_aruser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_45->M01_AXI_aruser.bind(*p_45_M01_AXI_aruser);
        p_45_M01_AXI_aruser->set_sv_netview_offsetfromdp(10384480);
        xsim_sc_channel<0, bool > *p_45_M01_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->M01_AXI_arvalid.bind(*p_45_M01_AXI_arvalid);
        p_45_M01_AXI_arvalid->set_sv_netview_offsetfromdp(10384536);
        xsim_sc_channel<0, bool > *p_45_M01_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_45->M01_AXI_arready.bind(*p_45_M01_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M01_AXI_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_M01_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->M01_AXI_rid.bind(*p_45_M01_AXI_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M01_AXI_rid);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_45_M01_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_45->M01_AXI_rdata.bind(*p_45_M01_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M01_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_45_M01_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_45->M01_AXI_rresp.bind(*p_45_M01_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M01_AXI_rresp);
        xsim_sc_channel<0, bool > *p_45_M01_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_45->M01_AXI_rlast.bind(*p_45_M01_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M01_AXI_rlast);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_45_M01_AXI_ruser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_45->M01_AXI_ruser.bind(*p_45_M01_AXI_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M01_AXI_ruser);
        xsim_sc_channel<0, bool > *p_45_M01_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->M01_AXI_rvalid.bind(*p_45_M01_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M01_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_45_M01_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_45->M01_AXI_rready.bind(*p_45_M01_AXI_rready);
        p_45_M01_AXI_rready->set_sv_netview_offsetfromdp(10384984);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_M02_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->M02_AXI_awid.bind(*p_45_M02_AXI_awid);
        p_45_M02_AXI_awid->set_sv_netview_offsetfromdp(10385040);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_45_M02_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_45->M02_AXI_awaddr.bind(*p_45_M02_AXI_awaddr);
        p_45_M02_AXI_awaddr->set_sv_netview_offsetfromdp(10385096);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_45_M02_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_45->M02_AXI_awlen.bind(*p_45_M02_AXI_awlen);
        p_45_M02_AXI_awlen->set_sv_netview_offsetfromdp(10385152);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_45_M02_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_45->M02_AXI_awsize.bind(*p_45_M02_AXI_awsize);
        p_45_M02_AXI_awsize->set_sv_netview_offsetfromdp(10385208);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_45_M02_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_45->M02_AXI_awburst.bind(*p_45_M02_AXI_awburst);
        p_45_M02_AXI_awburst->set_sv_netview_offsetfromdp(10385264);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_M02_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->M02_AXI_awlock.bind(*p_45_M02_AXI_awlock);
        p_45_M02_AXI_awlock->set_sv_netview_offsetfromdp(10385320);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_45_M02_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_45->M02_AXI_awcache.bind(*p_45_M02_AXI_awcache);
        p_45_M02_AXI_awcache->set_sv_netview_offsetfromdp(10385376);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_45_M02_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_45->M02_AXI_awprot.bind(*p_45_M02_AXI_awprot);
        p_45_M02_AXI_awprot->set_sv_netview_offsetfromdp(10385432);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_45_M02_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_45->M02_AXI_awqos.bind(*p_45_M02_AXI_awqos);
        p_45_M02_AXI_awqos->set_sv_netview_offsetfromdp(10385488);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_45_M02_AXI_awuser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_45->M02_AXI_awuser.bind(*p_45_M02_AXI_awuser);
        p_45_M02_AXI_awuser->set_sv_netview_offsetfromdp(10385544);
        xsim_sc_channel<0, bool > *p_45_M02_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->M02_AXI_awvalid.bind(*p_45_M02_AXI_awvalid);
        p_45_M02_AXI_awvalid->set_sv_netview_offsetfromdp(10385600);
        xsim_sc_channel<0, bool > *p_45_M02_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_45->M02_AXI_awready.bind(*p_45_M02_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M02_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_45_M02_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_45->M02_AXI_wdata.bind(*p_45_M02_AXI_wdata);
        p_45_M02_AXI_wdata->set_sv_netview_offsetfromdp(10385712);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_45_M02_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_45->M02_AXI_wstrb.bind(*p_45_M02_AXI_wstrb);
        p_45_M02_AXI_wstrb->set_sv_netview_offsetfromdp(10385768);
        xsim_sc_channel<0, bool > *p_45_M02_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_45->M02_AXI_wlast.bind(*p_45_M02_AXI_wlast);
        p_45_M02_AXI_wlast->set_sv_netview_offsetfromdp(10385824);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_45_M02_AXI_wuser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_45->M02_AXI_wuser.bind(*p_45_M02_AXI_wuser);
        p_45_M02_AXI_wuser->set_sv_netview_offsetfromdp(10385880);
        xsim_sc_channel<0, bool > *p_45_M02_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->M02_AXI_wvalid.bind(*p_45_M02_AXI_wvalid);
        p_45_M02_AXI_wvalid->set_sv_netview_offsetfromdp(10385936);
        xsim_sc_channel<0, bool > *p_45_M02_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_45->M02_AXI_wready.bind(*p_45_M02_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M02_AXI_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_M02_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->M02_AXI_bid.bind(*p_45_M02_AXI_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M02_AXI_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_45_M02_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_45->M02_AXI_bresp.bind(*p_45_M02_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M02_AXI_bresp);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_45_M02_AXI_buser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_45->M02_AXI_buser.bind(*p_45_M02_AXI_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M02_AXI_buser);
        xsim_sc_channel<0, bool > *p_45_M02_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->M02_AXI_bvalid.bind(*p_45_M02_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M02_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_45_M02_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_45->M02_AXI_bready.bind(*p_45_M02_AXI_bready);
        p_45_M02_AXI_bready->set_sv_netview_offsetfromdp(10386272);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_M02_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->M02_AXI_arid.bind(*p_45_M02_AXI_arid);
        p_45_M02_AXI_arid->set_sv_netview_offsetfromdp(10386328);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_45_M02_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_45->M02_AXI_araddr.bind(*p_45_M02_AXI_araddr);
        p_45_M02_AXI_araddr->set_sv_netview_offsetfromdp(10386384);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_45_M02_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_45->M02_AXI_arlen.bind(*p_45_M02_AXI_arlen);
        p_45_M02_AXI_arlen->set_sv_netview_offsetfromdp(10386440);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_45_M02_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_45->M02_AXI_arsize.bind(*p_45_M02_AXI_arsize);
        p_45_M02_AXI_arsize->set_sv_netview_offsetfromdp(10386496);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_45_M02_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_45->M02_AXI_arburst.bind(*p_45_M02_AXI_arburst);
        p_45_M02_AXI_arburst->set_sv_netview_offsetfromdp(10386552);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_M02_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->M02_AXI_arlock.bind(*p_45_M02_AXI_arlock);
        p_45_M02_AXI_arlock->set_sv_netview_offsetfromdp(10386608);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_45_M02_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_45->M02_AXI_arcache.bind(*p_45_M02_AXI_arcache);
        p_45_M02_AXI_arcache->set_sv_netview_offsetfromdp(10386664);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_45_M02_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_45->M02_AXI_arprot.bind(*p_45_M02_AXI_arprot);
        p_45_M02_AXI_arprot->set_sv_netview_offsetfromdp(10386720);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_45_M02_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_45->M02_AXI_arqos.bind(*p_45_M02_AXI_arqos);
        p_45_M02_AXI_arqos->set_sv_netview_offsetfromdp(10386776);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_45_M02_AXI_aruser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_45->M02_AXI_aruser.bind(*p_45_M02_AXI_aruser);
        p_45_M02_AXI_aruser->set_sv_netview_offsetfromdp(10386832);
        xsim_sc_channel<0, bool > *p_45_M02_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->M02_AXI_arvalid.bind(*p_45_M02_AXI_arvalid);
        p_45_M02_AXI_arvalid->set_sv_netview_offsetfromdp(10386888);
        xsim_sc_channel<0, bool > *p_45_M02_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_45->M02_AXI_arready.bind(*p_45_M02_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M02_AXI_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_M02_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->M02_AXI_rid.bind(*p_45_M02_AXI_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M02_AXI_rid);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_45_M02_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_45->M02_AXI_rdata.bind(*p_45_M02_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M02_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_45_M02_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_45->M02_AXI_rresp.bind(*p_45_M02_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M02_AXI_rresp);
        xsim_sc_channel<0, bool > *p_45_M02_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_45->M02_AXI_rlast.bind(*p_45_M02_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M02_AXI_rlast);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_45_M02_AXI_ruser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_45->M02_AXI_ruser.bind(*p_45_M02_AXI_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M02_AXI_ruser);
        xsim_sc_channel<0, bool > *p_45_M02_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->M02_AXI_rvalid.bind(*p_45_M02_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M02_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_45_M02_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_45->M02_AXI_rready.bind(*p_45_M02_AXI_rready);
        p_45_M02_AXI_rready->set_sv_netview_offsetfromdp(10387336);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_M03_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->M03_AXI_awid.bind(*p_45_M03_AXI_awid);
        p_45_M03_AXI_awid->set_sv_netview_offsetfromdp(10387392);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_45_M03_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_45->M03_AXI_awaddr.bind(*p_45_M03_AXI_awaddr);
        p_45_M03_AXI_awaddr->set_sv_netview_offsetfromdp(10387448);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_45_M03_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_45->M03_AXI_awlen.bind(*p_45_M03_AXI_awlen);
        p_45_M03_AXI_awlen->set_sv_netview_offsetfromdp(10387504);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_45_M03_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_45->M03_AXI_awsize.bind(*p_45_M03_AXI_awsize);
        p_45_M03_AXI_awsize->set_sv_netview_offsetfromdp(10387560);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_45_M03_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_45->M03_AXI_awburst.bind(*p_45_M03_AXI_awburst);
        p_45_M03_AXI_awburst->set_sv_netview_offsetfromdp(10387616);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_M03_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->M03_AXI_awlock.bind(*p_45_M03_AXI_awlock);
        p_45_M03_AXI_awlock->set_sv_netview_offsetfromdp(10387672);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_45_M03_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_45->M03_AXI_awcache.bind(*p_45_M03_AXI_awcache);
        p_45_M03_AXI_awcache->set_sv_netview_offsetfromdp(10387728);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_45_M03_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_45->M03_AXI_awprot.bind(*p_45_M03_AXI_awprot);
        p_45_M03_AXI_awprot->set_sv_netview_offsetfromdp(10387784);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_45_M03_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_45->M03_AXI_awqos.bind(*p_45_M03_AXI_awqos);
        p_45_M03_AXI_awqos->set_sv_netview_offsetfromdp(10387840);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_45_M03_AXI_awuser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_45->M03_AXI_awuser.bind(*p_45_M03_AXI_awuser);
        p_45_M03_AXI_awuser->set_sv_netview_offsetfromdp(10387896);
        xsim_sc_channel<0, bool > *p_45_M03_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->M03_AXI_awvalid.bind(*p_45_M03_AXI_awvalid);
        p_45_M03_AXI_awvalid->set_sv_netview_offsetfromdp(10387952);
        xsim_sc_channel<0, bool > *p_45_M03_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_45->M03_AXI_awready.bind(*p_45_M03_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M03_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_45_M03_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_45->M03_AXI_wdata.bind(*p_45_M03_AXI_wdata);
        p_45_M03_AXI_wdata->set_sv_netview_offsetfromdp(10388064);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_45_M03_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_45->M03_AXI_wstrb.bind(*p_45_M03_AXI_wstrb);
        p_45_M03_AXI_wstrb->set_sv_netview_offsetfromdp(10388120);
        xsim_sc_channel<0, bool > *p_45_M03_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_45->M03_AXI_wlast.bind(*p_45_M03_AXI_wlast);
        p_45_M03_AXI_wlast->set_sv_netview_offsetfromdp(10388176);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_45_M03_AXI_wuser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_45->M03_AXI_wuser.bind(*p_45_M03_AXI_wuser);
        p_45_M03_AXI_wuser->set_sv_netview_offsetfromdp(10388232);
        xsim_sc_channel<0, bool > *p_45_M03_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->M03_AXI_wvalid.bind(*p_45_M03_AXI_wvalid);
        p_45_M03_AXI_wvalid->set_sv_netview_offsetfromdp(10388288);
        xsim_sc_channel<0, bool > *p_45_M03_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_45->M03_AXI_wready.bind(*p_45_M03_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M03_AXI_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_M03_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->M03_AXI_bid.bind(*p_45_M03_AXI_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M03_AXI_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_45_M03_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_45->M03_AXI_bresp.bind(*p_45_M03_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M03_AXI_bresp);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_45_M03_AXI_buser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_45->M03_AXI_buser.bind(*p_45_M03_AXI_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M03_AXI_buser);
        xsim_sc_channel<0, bool > *p_45_M03_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->M03_AXI_bvalid.bind(*p_45_M03_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M03_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_45_M03_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_45->M03_AXI_bready.bind(*p_45_M03_AXI_bready);
        p_45_M03_AXI_bready->set_sv_netview_offsetfromdp(10388624);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_M03_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->M03_AXI_arid.bind(*p_45_M03_AXI_arid);
        p_45_M03_AXI_arid->set_sv_netview_offsetfromdp(10388680);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_45_M03_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_45->M03_AXI_araddr.bind(*p_45_M03_AXI_araddr);
        p_45_M03_AXI_araddr->set_sv_netview_offsetfromdp(10388736);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_45_M03_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_45->M03_AXI_arlen.bind(*p_45_M03_AXI_arlen);
        p_45_M03_AXI_arlen->set_sv_netview_offsetfromdp(10388792);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_45_M03_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_45->M03_AXI_arsize.bind(*p_45_M03_AXI_arsize);
        p_45_M03_AXI_arsize->set_sv_netview_offsetfromdp(10388848);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_45_M03_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_45->M03_AXI_arburst.bind(*p_45_M03_AXI_arburst);
        p_45_M03_AXI_arburst->set_sv_netview_offsetfromdp(10388904);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_M03_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->M03_AXI_arlock.bind(*p_45_M03_AXI_arlock);
        p_45_M03_AXI_arlock->set_sv_netview_offsetfromdp(10388960);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_45_M03_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_45->M03_AXI_arcache.bind(*p_45_M03_AXI_arcache);
        p_45_M03_AXI_arcache->set_sv_netview_offsetfromdp(10389016);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_45_M03_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_45->M03_AXI_arprot.bind(*p_45_M03_AXI_arprot);
        p_45_M03_AXI_arprot->set_sv_netview_offsetfromdp(10389072);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_45_M03_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_45->M03_AXI_arqos.bind(*p_45_M03_AXI_arqos);
        p_45_M03_AXI_arqos->set_sv_netview_offsetfromdp(10389128);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_45_M03_AXI_aruser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_45->M03_AXI_aruser.bind(*p_45_M03_AXI_aruser);
        p_45_M03_AXI_aruser->set_sv_netview_offsetfromdp(10389184);
        xsim_sc_channel<0, bool > *p_45_M03_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->M03_AXI_arvalid.bind(*p_45_M03_AXI_arvalid);
        p_45_M03_AXI_arvalid->set_sv_netview_offsetfromdp(10389240);
        xsim_sc_channel<0, bool > *p_45_M03_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_45->M03_AXI_arready.bind(*p_45_M03_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M03_AXI_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_M03_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->M03_AXI_rid.bind(*p_45_M03_AXI_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M03_AXI_rid);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_45_M03_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_45->M03_AXI_rdata.bind(*p_45_M03_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M03_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_45_M03_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_45->M03_AXI_rresp.bind(*p_45_M03_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M03_AXI_rresp);
        xsim_sc_channel<0, bool > *p_45_M03_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_45->M03_AXI_rlast.bind(*p_45_M03_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M03_AXI_rlast);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_45_M03_AXI_ruser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_45->M03_AXI_ruser.bind(*p_45_M03_AXI_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M03_AXI_ruser);
        xsim_sc_channel<0, bool > *p_45_M03_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->M03_AXI_rvalid.bind(*p_45_M03_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M03_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_45_M03_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_45->M03_AXI_rready.bind(*p_45_M03_AXI_rready);
        p_45_M03_AXI_rready->set_sv_netview_offsetfromdp(10389688);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_M04_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->M04_AXI_awid.bind(*p_45_M04_AXI_awid);
        p_45_M04_AXI_awid->set_sv_netview_offsetfromdp(10389744);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_45_M04_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_45->M04_AXI_awaddr.bind(*p_45_M04_AXI_awaddr);
        p_45_M04_AXI_awaddr->set_sv_netview_offsetfromdp(10389800);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_45_M04_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_45->M04_AXI_awlen.bind(*p_45_M04_AXI_awlen);
        p_45_M04_AXI_awlen->set_sv_netview_offsetfromdp(10389856);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_45_M04_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_45->M04_AXI_awsize.bind(*p_45_M04_AXI_awsize);
        p_45_M04_AXI_awsize->set_sv_netview_offsetfromdp(10389912);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_45_M04_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_45->M04_AXI_awburst.bind(*p_45_M04_AXI_awburst);
        p_45_M04_AXI_awburst->set_sv_netview_offsetfromdp(10389968);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_M04_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->M04_AXI_awlock.bind(*p_45_M04_AXI_awlock);
        p_45_M04_AXI_awlock->set_sv_netview_offsetfromdp(10390024);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_45_M04_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_45->M04_AXI_awcache.bind(*p_45_M04_AXI_awcache);
        p_45_M04_AXI_awcache->set_sv_netview_offsetfromdp(10390080);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_45_M04_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_45->M04_AXI_awprot.bind(*p_45_M04_AXI_awprot);
        p_45_M04_AXI_awprot->set_sv_netview_offsetfromdp(10390136);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_45_M04_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_45->M04_AXI_awqos.bind(*p_45_M04_AXI_awqos);
        p_45_M04_AXI_awqos->set_sv_netview_offsetfromdp(10390192);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_45_M04_AXI_awuser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_45->M04_AXI_awuser.bind(*p_45_M04_AXI_awuser);
        p_45_M04_AXI_awuser->set_sv_netview_offsetfromdp(10390248);
        xsim_sc_channel<0, bool > *p_45_M04_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->M04_AXI_awvalid.bind(*p_45_M04_AXI_awvalid);
        p_45_M04_AXI_awvalid->set_sv_netview_offsetfromdp(10390304);
        xsim_sc_channel<0, bool > *p_45_M04_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_45->M04_AXI_awready.bind(*p_45_M04_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M04_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_45_M04_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_45->M04_AXI_wdata.bind(*p_45_M04_AXI_wdata);
        p_45_M04_AXI_wdata->set_sv_netview_offsetfromdp(10390416);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_45_M04_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_45->M04_AXI_wstrb.bind(*p_45_M04_AXI_wstrb);
        p_45_M04_AXI_wstrb->set_sv_netview_offsetfromdp(10390472);
        xsim_sc_channel<0, bool > *p_45_M04_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_45->M04_AXI_wlast.bind(*p_45_M04_AXI_wlast);
        p_45_M04_AXI_wlast->set_sv_netview_offsetfromdp(10390528);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_45_M04_AXI_wuser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_45->M04_AXI_wuser.bind(*p_45_M04_AXI_wuser);
        p_45_M04_AXI_wuser->set_sv_netview_offsetfromdp(10390584);
        xsim_sc_channel<0, bool > *p_45_M04_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->M04_AXI_wvalid.bind(*p_45_M04_AXI_wvalid);
        p_45_M04_AXI_wvalid->set_sv_netview_offsetfromdp(10390640);
        xsim_sc_channel<0, bool > *p_45_M04_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_45->M04_AXI_wready.bind(*p_45_M04_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M04_AXI_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_M04_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->M04_AXI_bid.bind(*p_45_M04_AXI_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M04_AXI_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_45_M04_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_45->M04_AXI_bresp.bind(*p_45_M04_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M04_AXI_bresp);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_45_M04_AXI_buser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_45->M04_AXI_buser.bind(*p_45_M04_AXI_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M04_AXI_buser);
        xsim_sc_channel<0, bool > *p_45_M04_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->M04_AXI_bvalid.bind(*p_45_M04_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M04_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_45_M04_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_45->M04_AXI_bready.bind(*p_45_M04_AXI_bready);
        p_45_M04_AXI_bready->set_sv_netview_offsetfromdp(10390976);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_M04_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->M04_AXI_arid.bind(*p_45_M04_AXI_arid);
        p_45_M04_AXI_arid->set_sv_netview_offsetfromdp(10391032);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_45_M04_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_45->M04_AXI_araddr.bind(*p_45_M04_AXI_araddr);
        p_45_M04_AXI_araddr->set_sv_netview_offsetfromdp(10391088);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_45_M04_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_45->M04_AXI_arlen.bind(*p_45_M04_AXI_arlen);
        p_45_M04_AXI_arlen->set_sv_netview_offsetfromdp(10391144);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_45_M04_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_45->M04_AXI_arsize.bind(*p_45_M04_AXI_arsize);
        p_45_M04_AXI_arsize->set_sv_netview_offsetfromdp(10391200);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_45_M04_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_45->M04_AXI_arburst.bind(*p_45_M04_AXI_arburst);
        p_45_M04_AXI_arburst->set_sv_netview_offsetfromdp(10391256);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_M04_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->M04_AXI_arlock.bind(*p_45_M04_AXI_arlock);
        p_45_M04_AXI_arlock->set_sv_netview_offsetfromdp(10391312);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_45_M04_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_45->M04_AXI_arcache.bind(*p_45_M04_AXI_arcache);
        p_45_M04_AXI_arcache->set_sv_netview_offsetfromdp(10391368);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_45_M04_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_45->M04_AXI_arprot.bind(*p_45_M04_AXI_arprot);
        p_45_M04_AXI_arprot->set_sv_netview_offsetfromdp(10391424);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_45_M04_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_45->M04_AXI_arqos.bind(*p_45_M04_AXI_arqos);
        p_45_M04_AXI_arqos->set_sv_netview_offsetfromdp(10391480);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_45_M04_AXI_aruser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_45->M04_AXI_aruser.bind(*p_45_M04_AXI_aruser);
        p_45_M04_AXI_aruser->set_sv_netview_offsetfromdp(10391536);
        xsim_sc_channel<0, bool > *p_45_M04_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->M04_AXI_arvalid.bind(*p_45_M04_AXI_arvalid);
        p_45_M04_AXI_arvalid->set_sv_netview_offsetfromdp(10391592);
        xsim_sc_channel<0, bool > *p_45_M04_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_45->M04_AXI_arready.bind(*p_45_M04_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M04_AXI_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_M04_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->M04_AXI_rid.bind(*p_45_M04_AXI_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M04_AXI_rid);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_45_M04_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_45->M04_AXI_rdata.bind(*p_45_M04_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M04_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_45_M04_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_45->M04_AXI_rresp.bind(*p_45_M04_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M04_AXI_rresp);
        xsim_sc_channel<0, bool > *p_45_M04_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_45->M04_AXI_rlast.bind(*p_45_M04_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M04_AXI_rlast);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_45_M04_AXI_ruser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_45->M04_AXI_ruser.bind(*p_45_M04_AXI_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M04_AXI_ruser);
        xsim_sc_channel<0, bool > *p_45_M04_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->M04_AXI_rvalid.bind(*p_45_M04_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M04_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_45_M04_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_45->M04_AXI_rready.bind(*p_45_M04_AXI_rready);
        p_45_M04_AXI_rready->set_sv_netview_offsetfromdp(10392040);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_M05_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->M05_AXI_awid.bind(*p_45_M05_AXI_awid);
        p_45_M05_AXI_awid->set_sv_netview_offsetfromdp(10392096);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_45_M05_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_45->M05_AXI_awaddr.bind(*p_45_M05_AXI_awaddr);
        p_45_M05_AXI_awaddr->set_sv_netview_offsetfromdp(10392152);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_45_M05_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_45->M05_AXI_awlen.bind(*p_45_M05_AXI_awlen);
        p_45_M05_AXI_awlen->set_sv_netview_offsetfromdp(10392208);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_45_M05_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_45->M05_AXI_awsize.bind(*p_45_M05_AXI_awsize);
        p_45_M05_AXI_awsize->set_sv_netview_offsetfromdp(10392264);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_45_M05_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_45->M05_AXI_awburst.bind(*p_45_M05_AXI_awburst);
        p_45_M05_AXI_awburst->set_sv_netview_offsetfromdp(10392320);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_M05_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->M05_AXI_awlock.bind(*p_45_M05_AXI_awlock);
        p_45_M05_AXI_awlock->set_sv_netview_offsetfromdp(10392376);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_45_M05_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_45->M05_AXI_awcache.bind(*p_45_M05_AXI_awcache);
        p_45_M05_AXI_awcache->set_sv_netview_offsetfromdp(10392432);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_45_M05_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_45->M05_AXI_awprot.bind(*p_45_M05_AXI_awprot);
        p_45_M05_AXI_awprot->set_sv_netview_offsetfromdp(10392488);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_45_M05_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_45->M05_AXI_awqos.bind(*p_45_M05_AXI_awqos);
        p_45_M05_AXI_awqos->set_sv_netview_offsetfromdp(10392544);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_45_M05_AXI_awuser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_45->M05_AXI_awuser.bind(*p_45_M05_AXI_awuser);
        p_45_M05_AXI_awuser->set_sv_netview_offsetfromdp(10392600);
        xsim_sc_channel<0, bool > *p_45_M05_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->M05_AXI_awvalid.bind(*p_45_M05_AXI_awvalid);
        p_45_M05_AXI_awvalid->set_sv_netview_offsetfromdp(10392656);
        xsim_sc_channel<0, bool > *p_45_M05_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_45->M05_AXI_awready.bind(*p_45_M05_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M05_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_45_M05_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_45->M05_AXI_wdata.bind(*p_45_M05_AXI_wdata);
        p_45_M05_AXI_wdata->set_sv_netview_offsetfromdp(10392768);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_45_M05_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_45->M05_AXI_wstrb.bind(*p_45_M05_AXI_wstrb);
        p_45_M05_AXI_wstrb->set_sv_netview_offsetfromdp(10392824);
        xsim_sc_channel<0, bool > *p_45_M05_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_45->M05_AXI_wlast.bind(*p_45_M05_AXI_wlast);
        p_45_M05_AXI_wlast->set_sv_netview_offsetfromdp(10392880);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_45_M05_AXI_wuser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_45->M05_AXI_wuser.bind(*p_45_M05_AXI_wuser);
        p_45_M05_AXI_wuser->set_sv_netview_offsetfromdp(10392936);
        xsim_sc_channel<0, bool > *p_45_M05_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->M05_AXI_wvalid.bind(*p_45_M05_AXI_wvalid);
        p_45_M05_AXI_wvalid->set_sv_netview_offsetfromdp(10392992);
        xsim_sc_channel<0, bool > *p_45_M05_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_45->M05_AXI_wready.bind(*p_45_M05_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M05_AXI_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_M05_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->M05_AXI_bid.bind(*p_45_M05_AXI_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M05_AXI_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_45_M05_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_45->M05_AXI_bresp.bind(*p_45_M05_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M05_AXI_bresp);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_45_M05_AXI_buser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_45->M05_AXI_buser.bind(*p_45_M05_AXI_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M05_AXI_buser);
        xsim_sc_channel<0, bool > *p_45_M05_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->M05_AXI_bvalid.bind(*p_45_M05_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M05_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_45_M05_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_45->M05_AXI_bready.bind(*p_45_M05_AXI_bready);
        p_45_M05_AXI_bready->set_sv_netview_offsetfromdp(10393328);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_M05_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->M05_AXI_arid.bind(*p_45_M05_AXI_arid);
        p_45_M05_AXI_arid->set_sv_netview_offsetfromdp(10393384);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_45_M05_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_45->M05_AXI_araddr.bind(*p_45_M05_AXI_araddr);
        p_45_M05_AXI_araddr->set_sv_netview_offsetfromdp(10393440);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_45_M05_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_45->M05_AXI_arlen.bind(*p_45_M05_AXI_arlen);
        p_45_M05_AXI_arlen->set_sv_netview_offsetfromdp(10393496);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_45_M05_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_45->M05_AXI_arsize.bind(*p_45_M05_AXI_arsize);
        p_45_M05_AXI_arsize->set_sv_netview_offsetfromdp(10393552);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_45_M05_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_45->M05_AXI_arburst.bind(*p_45_M05_AXI_arburst);
        p_45_M05_AXI_arburst->set_sv_netview_offsetfromdp(10393608);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_M05_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->M05_AXI_arlock.bind(*p_45_M05_AXI_arlock);
        p_45_M05_AXI_arlock->set_sv_netview_offsetfromdp(10393664);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_45_M05_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_45->M05_AXI_arcache.bind(*p_45_M05_AXI_arcache);
        p_45_M05_AXI_arcache->set_sv_netview_offsetfromdp(10393720);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_45_M05_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_45->M05_AXI_arprot.bind(*p_45_M05_AXI_arprot);
        p_45_M05_AXI_arprot->set_sv_netview_offsetfromdp(10393776);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_45_M05_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_45->M05_AXI_arqos.bind(*p_45_M05_AXI_arqos);
        p_45_M05_AXI_arqos->set_sv_netview_offsetfromdp(10393832);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_45_M05_AXI_aruser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_45->M05_AXI_aruser.bind(*p_45_M05_AXI_aruser);
        p_45_M05_AXI_aruser->set_sv_netview_offsetfromdp(10393888);
        xsim_sc_channel<0, bool > *p_45_M05_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->M05_AXI_arvalid.bind(*p_45_M05_AXI_arvalid);
        p_45_M05_AXI_arvalid->set_sv_netview_offsetfromdp(10393944);
        xsim_sc_channel<0, bool > *p_45_M05_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_45->M05_AXI_arready.bind(*p_45_M05_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M05_AXI_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_M05_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->M05_AXI_rid.bind(*p_45_M05_AXI_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M05_AXI_rid);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_45_M05_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_45->M05_AXI_rdata.bind(*p_45_M05_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M05_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_45_M05_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_45->M05_AXI_rresp.bind(*p_45_M05_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M05_AXI_rresp);
        xsim_sc_channel<0, bool > *p_45_M05_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_45->M05_AXI_rlast.bind(*p_45_M05_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M05_AXI_rlast);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_45_M05_AXI_ruser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_45->M05_AXI_ruser.bind(*p_45_M05_AXI_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M05_AXI_ruser);
        xsim_sc_channel<0, bool > *p_45_M05_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->M05_AXI_rvalid.bind(*p_45_M05_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M05_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_45_M05_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_45->M05_AXI_rready.bind(*p_45_M05_AXI_rready);
        p_45_M05_AXI_rready->set_sv_netview_offsetfromdp(10394392);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_M06_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->M06_AXI_awid.bind(*p_45_M06_AXI_awid);
        p_45_M06_AXI_awid->set_sv_netview_offsetfromdp(10394448);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_45_M06_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_45->M06_AXI_awaddr.bind(*p_45_M06_AXI_awaddr);
        p_45_M06_AXI_awaddr->set_sv_netview_offsetfromdp(10394504);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_45_M06_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_45->M06_AXI_awlen.bind(*p_45_M06_AXI_awlen);
        p_45_M06_AXI_awlen->set_sv_netview_offsetfromdp(10394560);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_45_M06_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_45->M06_AXI_awsize.bind(*p_45_M06_AXI_awsize);
        p_45_M06_AXI_awsize->set_sv_netview_offsetfromdp(10394616);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_45_M06_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_45->M06_AXI_awburst.bind(*p_45_M06_AXI_awburst);
        p_45_M06_AXI_awburst->set_sv_netview_offsetfromdp(10394672);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_M06_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->M06_AXI_awlock.bind(*p_45_M06_AXI_awlock);
        p_45_M06_AXI_awlock->set_sv_netview_offsetfromdp(10394728);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_45_M06_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_45->M06_AXI_awcache.bind(*p_45_M06_AXI_awcache);
        p_45_M06_AXI_awcache->set_sv_netview_offsetfromdp(10394784);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_45_M06_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_45->M06_AXI_awprot.bind(*p_45_M06_AXI_awprot);
        p_45_M06_AXI_awprot->set_sv_netview_offsetfromdp(10394840);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_45_M06_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_45->M06_AXI_awqos.bind(*p_45_M06_AXI_awqos);
        p_45_M06_AXI_awqos->set_sv_netview_offsetfromdp(10394896);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_45_M06_AXI_awuser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_45->M06_AXI_awuser.bind(*p_45_M06_AXI_awuser);
        p_45_M06_AXI_awuser->set_sv_netview_offsetfromdp(10394952);
        xsim_sc_channel<0, bool > *p_45_M06_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->M06_AXI_awvalid.bind(*p_45_M06_AXI_awvalid);
        p_45_M06_AXI_awvalid->set_sv_netview_offsetfromdp(10395008);
        xsim_sc_channel<0, bool > *p_45_M06_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_45->M06_AXI_awready.bind(*p_45_M06_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M06_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_45_M06_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_45->M06_AXI_wdata.bind(*p_45_M06_AXI_wdata);
        p_45_M06_AXI_wdata->set_sv_netview_offsetfromdp(10395120);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_45_M06_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_45->M06_AXI_wstrb.bind(*p_45_M06_AXI_wstrb);
        p_45_M06_AXI_wstrb->set_sv_netview_offsetfromdp(10395176);
        xsim_sc_channel<0, bool > *p_45_M06_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_45->M06_AXI_wlast.bind(*p_45_M06_AXI_wlast);
        p_45_M06_AXI_wlast->set_sv_netview_offsetfromdp(10395232);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_45_M06_AXI_wuser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_45->M06_AXI_wuser.bind(*p_45_M06_AXI_wuser);
        p_45_M06_AXI_wuser->set_sv_netview_offsetfromdp(10395288);
        xsim_sc_channel<0, bool > *p_45_M06_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->M06_AXI_wvalid.bind(*p_45_M06_AXI_wvalid);
        p_45_M06_AXI_wvalid->set_sv_netview_offsetfromdp(10395344);
        xsim_sc_channel<0, bool > *p_45_M06_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_45->M06_AXI_wready.bind(*p_45_M06_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M06_AXI_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_M06_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->M06_AXI_bid.bind(*p_45_M06_AXI_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M06_AXI_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_45_M06_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_45->M06_AXI_bresp.bind(*p_45_M06_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M06_AXI_bresp);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_45_M06_AXI_buser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_45->M06_AXI_buser.bind(*p_45_M06_AXI_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M06_AXI_buser);
        xsim_sc_channel<0, bool > *p_45_M06_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->M06_AXI_bvalid.bind(*p_45_M06_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M06_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_45_M06_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_45->M06_AXI_bready.bind(*p_45_M06_AXI_bready);
        p_45_M06_AXI_bready->set_sv_netview_offsetfromdp(10395680);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_M06_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->M06_AXI_arid.bind(*p_45_M06_AXI_arid);
        p_45_M06_AXI_arid->set_sv_netview_offsetfromdp(10395736);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_45_M06_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_45->M06_AXI_araddr.bind(*p_45_M06_AXI_araddr);
        p_45_M06_AXI_araddr->set_sv_netview_offsetfromdp(10395792);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_45_M06_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_45->M06_AXI_arlen.bind(*p_45_M06_AXI_arlen);
        p_45_M06_AXI_arlen->set_sv_netview_offsetfromdp(10395848);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_45_M06_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_45->M06_AXI_arsize.bind(*p_45_M06_AXI_arsize);
        p_45_M06_AXI_arsize->set_sv_netview_offsetfromdp(10395904);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_45_M06_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_45->M06_AXI_arburst.bind(*p_45_M06_AXI_arburst);
        p_45_M06_AXI_arburst->set_sv_netview_offsetfromdp(10395960);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_M06_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->M06_AXI_arlock.bind(*p_45_M06_AXI_arlock);
        p_45_M06_AXI_arlock->set_sv_netview_offsetfromdp(10396016);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_45_M06_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_45->M06_AXI_arcache.bind(*p_45_M06_AXI_arcache);
        p_45_M06_AXI_arcache->set_sv_netview_offsetfromdp(10396072);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_45_M06_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_45->M06_AXI_arprot.bind(*p_45_M06_AXI_arprot);
        p_45_M06_AXI_arprot->set_sv_netview_offsetfromdp(10396128);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_45_M06_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_45->M06_AXI_arqos.bind(*p_45_M06_AXI_arqos);
        p_45_M06_AXI_arqos->set_sv_netview_offsetfromdp(10396184);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_45_M06_AXI_aruser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_45->M06_AXI_aruser.bind(*p_45_M06_AXI_aruser);
        p_45_M06_AXI_aruser->set_sv_netview_offsetfromdp(10396240);
        xsim_sc_channel<0, bool > *p_45_M06_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->M06_AXI_arvalid.bind(*p_45_M06_AXI_arvalid);
        p_45_M06_AXI_arvalid->set_sv_netview_offsetfromdp(10396296);
        xsim_sc_channel<0, bool > *p_45_M06_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_45->M06_AXI_arready.bind(*p_45_M06_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M06_AXI_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_M06_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->M06_AXI_rid.bind(*p_45_M06_AXI_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M06_AXI_rid);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_45_M06_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_45->M06_AXI_rdata.bind(*p_45_M06_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M06_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_45_M06_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_45->M06_AXI_rresp.bind(*p_45_M06_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M06_AXI_rresp);
        xsim_sc_channel<0, bool > *p_45_M06_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_45->M06_AXI_rlast.bind(*p_45_M06_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M06_AXI_rlast);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_45_M06_AXI_ruser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_45->M06_AXI_ruser.bind(*p_45_M06_AXI_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M06_AXI_ruser);
        xsim_sc_channel<0, bool > *p_45_M06_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->M06_AXI_rvalid.bind(*p_45_M06_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M06_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_45_M06_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_45->M06_AXI_rready.bind(*p_45_M06_AXI_rready);
        p_45_M06_AXI_rready->set_sv_netview_offsetfromdp(10396744);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_M07_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->M07_AXI_awid.bind(*p_45_M07_AXI_awid);
        p_45_M07_AXI_awid->set_sv_netview_offsetfromdp(10396800);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_45_M07_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_45->M07_AXI_awaddr.bind(*p_45_M07_AXI_awaddr);
        p_45_M07_AXI_awaddr->set_sv_netview_offsetfromdp(10396856);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_45_M07_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_45->M07_AXI_awlen.bind(*p_45_M07_AXI_awlen);
        p_45_M07_AXI_awlen->set_sv_netview_offsetfromdp(10396912);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_45_M07_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_45->M07_AXI_awsize.bind(*p_45_M07_AXI_awsize);
        p_45_M07_AXI_awsize->set_sv_netview_offsetfromdp(10396968);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_45_M07_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_45->M07_AXI_awburst.bind(*p_45_M07_AXI_awburst);
        p_45_M07_AXI_awburst->set_sv_netview_offsetfromdp(10397024);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_M07_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->M07_AXI_awlock.bind(*p_45_M07_AXI_awlock);
        p_45_M07_AXI_awlock->set_sv_netview_offsetfromdp(10397080);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_45_M07_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_45->M07_AXI_awcache.bind(*p_45_M07_AXI_awcache);
        p_45_M07_AXI_awcache->set_sv_netview_offsetfromdp(10397136);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_45_M07_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_45->M07_AXI_awprot.bind(*p_45_M07_AXI_awprot);
        p_45_M07_AXI_awprot->set_sv_netview_offsetfromdp(10397192);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_45_M07_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_45->M07_AXI_awqos.bind(*p_45_M07_AXI_awqos);
        p_45_M07_AXI_awqos->set_sv_netview_offsetfromdp(10397248);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_45_M07_AXI_awuser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_45->M07_AXI_awuser.bind(*p_45_M07_AXI_awuser);
        p_45_M07_AXI_awuser->set_sv_netview_offsetfromdp(10397304);
        xsim_sc_channel<0, bool > *p_45_M07_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->M07_AXI_awvalid.bind(*p_45_M07_AXI_awvalid);
        p_45_M07_AXI_awvalid->set_sv_netview_offsetfromdp(10397360);
        xsim_sc_channel<0, bool > *p_45_M07_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_45->M07_AXI_awready.bind(*p_45_M07_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M07_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_45_M07_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_45->M07_AXI_wdata.bind(*p_45_M07_AXI_wdata);
        p_45_M07_AXI_wdata->set_sv_netview_offsetfromdp(10397472);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_45_M07_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_45->M07_AXI_wstrb.bind(*p_45_M07_AXI_wstrb);
        p_45_M07_AXI_wstrb->set_sv_netview_offsetfromdp(10397528);
        xsim_sc_channel<0, bool > *p_45_M07_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_45->M07_AXI_wlast.bind(*p_45_M07_AXI_wlast);
        p_45_M07_AXI_wlast->set_sv_netview_offsetfromdp(10397584);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_45_M07_AXI_wuser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_45->M07_AXI_wuser.bind(*p_45_M07_AXI_wuser);
        p_45_M07_AXI_wuser->set_sv_netview_offsetfromdp(10397640);
        xsim_sc_channel<0, bool > *p_45_M07_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->M07_AXI_wvalid.bind(*p_45_M07_AXI_wvalid);
        p_45_M07_AXI_wvalid->set_sv_netview_offsetfromdp(10397696);
        xsim_sc_channel<0, bool > *p_45_M07_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_45->M07_AXI_wready.bind(*p_45_M07_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M07_AXI_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_M07_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->M07_AXI_bid.bind(*p_45_M07_AXI_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M07_AXI_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_45_M07_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_45->M07_AXI_bresp.bind(*p_45_M07_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M07_AXI_bresp);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_45_M07_AXI_buser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_45->M07_AXI_buser.bind(*p_45_M07_AXI_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M07_AXI_buser);
        xsim_sc_channel<0, bool > *p_45_M07_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->M07_AXI_bvalid.bind(*p_45_M07_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M07_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_45_M07_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_45->M07_AXI_bready.bind(*p_45_M07_AXI_bready);
        p_45_M07_AXI_bready->set_sv_netview_offsetfromdp(10398032);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_M07_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->M07_AXI_arid.bind(*p_45_M07_AXI_arid);
        p_45_M07_AXI_arid->set_sv_netview_offsetfromdp(10398088);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_45_M07_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_45->M07_AXI_araddr.bind(*p_45_M07_AXI_araddr);
        p_45_M07_AXI_araddr->set_sv_netview_offsetfromdp(10398144);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_45_M07_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_45->M07_AXI_arlen.bind(*p_45_M07_AXI_arlen);
        p_45_M07_AXI_arlen->set_sv_netview_offsetfromdp(10398200);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_45_M07_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_45->M07_AXI_arsize.bind(*p_45_M07_AXI_arsize);
        p_45_M07_AXI_arsize->set_sv_netview_offsetfromdp(10398256);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_45_M07_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_45->M07_AXI_arburst.bind(*p_45_M07_AXI_arburst);
        p_45_M07_AXI_arburst->set_sv_netview_offsetfromdp(10398312);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_M07_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->M07_AXI_arlock.bind(*p_45_M07_AXI_arlock);
        p_45_M07_AXI_arlock->set_sv_netview_offsetfromdp(10398368);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_45_M07_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_45->M07_AXI_arcache.bind(*p_45_M07_AXI_arcache);
        p_45_M07_AXI_arcache->set_sv_netview_offsetfromdp(10398424);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_45_M07_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_45->M07_AXI_arprot.bind(*p_45_M07_AXI_arprot);
        p_45_M07_AXI_arprot->set_sv_netview_offsetfromdp(10398480);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_45_M07_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_45->M07_AXI_arqos.bind(*p_45_M07_AXI_arqos);
        p_45_M07_AXI_arqos->set_sv_netview_offsetfromdp(10398536);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_45_M07_AXI_aruser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_45->M07_AXI_aruser.bind(*p_45_M07_AXI_aruser);
        p_45_M07_AXI_aruser->set_sv_netview_offsetfromdp(10398592);
        xsim_sc_channel<0, bool > *p_45_M07_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->M07_AXI_arvalid.bind(*p_45_M07_AXI_arvalid);
        p_45_M07_AXI_arvalid->set_sv_netview_offsetfromdp(10398648);
        xsim_sc_channel<0, bool > *p_45_M07_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_45->M07_AXI_arready.bind(*p_45_M07_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M07_AXI_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_M07_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->M07_AXI_rid.bind(*p_45_M07_AXI_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M07_AXI_rid);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_45_M07_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_45->M07_AXI_rdata.bind(*p_45_M07_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M07_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_45_M07_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_45->M07_AXI_rresp.bind(*p_45_M07_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M07_AXI_rresp);
        xsim_sc_channel<0, bool > *p_45_M07_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_45->M07_AXI_rlast.bind(*p_45_M07_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M07_AXI_rlast);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_45_M07_AXI_ruser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_45->M07_AXI_ruser.bind(*p_45_M07_AXI_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M07_AXI_ruser);
        xsim_sc_channel<0, bool > *p_45_M07_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->M07_AXI_rvalid.bind(*p_45_M07_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M07_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_45_M07_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_45->M07_AXI_rready.bind(*p_45_M07_AXI_rready);
        p_45_M07_AXI_rready->set_sv_netview_offsetfromdp(10399096);
        sc_inst_46 = new bd_d216_rs_M00_AXI_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.interconnect.rs_m00_axi");
        sc_inst_46->xsim_set_dbg_index(2695);
        xsim_sc_channel<0, bool > *p_46_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_46->aclk.bind(*p_46_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_46_aclk);
        xsim_sc_channel<0, bool > *p_46_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_46->aresetn.bind(*p_46_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_46_aresetn);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_46_s_axi_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_46->s_axi_awaddr.bind(*p_46_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_46_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_46->s_axi_awlen.bind(*p_46_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_46_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_46->s_axi_awsize.bind(*p_46_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_46_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_46->s_axi_awburst.bind(*p_46_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_46_s_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_46->s_axi_awlock.bind(*p_46_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_46_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_46->s_axi_awcache.bind(*p_46_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_46_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_46->s_axi_awprot.bind(*p_46_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_46_s_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_46->s_axi_awregion.bind(*p_46_s_axi_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_46_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_46->s_axi_awqos.bind(*p_46_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_awqos);
        xsim_sc_channel<0, bool > *p_46_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_46->s_axi_awvalid.bind(*p_46_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_46_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_46->s_axi_awready.bind(*p_46_s_axi_awready);
        p_46_s_axi_awready->set_sv_netview_offsetfromdp(10399872);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_46_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_46->s_axi_wdata.bind(*p_46_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_46_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_46->s_axi_wstrb.bind(*p_46_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_46_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_46->s_axi_wlast.bind(*p_46_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_46_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_46->s_axi_wvalid.bind(*p_46_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_46_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_46->s_axi_wready.bind(*p_46_s_axi_wready);
        p_46_s_axi_wready->set_sv_netview_offsetfromdp(10400152);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_46_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_46->s_axi_bresp.bind(*p_46_s_axi_bresp);
        p_46_s_axi_bresp->set_sv_netview_offsetfromdp(10400208);
        xsim_sc_channel<0, bool > *p_46_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_46->s_axi_bvalid.bind(*p_46_s_axi_bvalid);
        p_46_s_axi_bvalid->set_sv_netview_offsetfromdp(10400264);
        xsim_sc_channel<0, bool > *p_46_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_46->s_axi_bready.bind(*p_46_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_bready);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_46_s_axi_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_46->s_axi_araddr.bind(*p_46_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_46_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_46->s_axi_arlen.bind(*p_46_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_46_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_46->s_axi_arsize.bind(*p_46_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_46_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_46->s_axi_arburst.bind(*p_46_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_46_s_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_46->s_axi_arlock.bind(*p_46_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_46_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_46->s_axi_arcache.bind(*p_46_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_46_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_46->s_axi_arprot.bind(*p_46_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_46_s_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_46->s_axi_arregion.bind(*p_46_s_axi_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_46_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_46->s_axi_arqos.bind(*p_46_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_arqos);
        xsim_sc_channel<0, bool > *p_46_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_46->s_axi_arvalid.bind(*p_46_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_46_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_46->s_axi_arready.bind(*p_46_s_axi_arready);
        p_46_s_axi_arready->set_sv_netview_offsetfromdp(10400936);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_46_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_46->s_axi_rdata.bind(*p_46_s_axi_rdata);
        p_46_s_axi_rdata->set_sv_netview_offsetfromdp(10400992);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_46_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_46->s_axi_rresp.bind(*p_46_s_axi_rresp);
        p_46_s_axi_rresp->set_sv_netview_offsetfromdp(10401048);
        xsim_sc_channel<0, bool > *p_46_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_46->s_axi_rlast.bind(*p_46_s_axi_rlast);
        p_46_s_axi_rlast->set_sv_netview_offsetfromdp(10401104);
        xsim_sc_channel<0, bool > *p_46_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_46->s_axi_rvalid.bind(*p_46_s_axi_rvalid);
        p_46_s_axi_rvalid->set_sv_netview_offsetfromdp(10401160);
        xsim_sc_channel<0, bool > *p_46_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_46->s_axi_rready.bind(*p_46_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_rready);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_46_m_axi_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_46->m_axi_awaddr.bind(*p_46_m_axi_awaddr);
        p_46_m_axi_awaddr->set_sv_netview_offsetfromdp(10401272);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_46_m_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_46->m_axi_awlen.bind(*p_46_m_axi_awlen);
        p_46_m_axi_awlen->set_sv_netview_offsetfromdp(10401328);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_46_m_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_46->m_axi_awsize.bind(*p_46_m_axi_awsize);
        p_46_m_axi_awsize->set_sv_netview_offsetfromdp(10401384);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_46_m_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_46->m_axi_awburst.bind(*p_46_m_axi_awburst);
        p_46_m_axi_awburst->set_sv_netview_offsetfromdp(10401440);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_46_m_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_46->m_axi_awlock.bind(*p_46_m_axi_awlock);
        p_46_m_axi_awlock->set_sv_netview_offsetfromdp(10401496);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_46_m_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_46->m_axi_awcache.bind(*p_46_m_axi_awcache);
        p_46_m_axi_awcache->set_sv_netview_offsetfromdp(10401552);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_46_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_46->m_axi_awprot.bind(*p_46_m_axi_awprot);
        p_46_m_axi_awprot->set_sv_netview_offsetfromdp(10401608);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_46_m_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_46->m_axi_awregion.bind(*p_46_m_axi_awregion);
        p_46_m_axi_awregion->set_sv_netview_offsetfromdp(10401664);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_46_m_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_46->m_axi_awqos.bind(*p_46_m_axi_awqos);
        p_46_m_axi_awqos->set_sv_netview_offsetfromdp(10401720);
        xsim_sc_channel<0, bool > *p_46_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_46->m_axi_awvalid.bind(*p_46_m_axi_awvalid);
        p_46_m_axi_awvalid->set_sv_netview_offsetfromdp(10401776);
        xsim_sc_channel<0, bool > *p_46_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_46->m_axi_awready.bind(*p_46_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_46_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_46_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_46->m_axi_wdata.bind(*p_46_m_axi_wdata);
        p_46_m_axi_wdata->set_sv_netview_offsetfromdp(10401888);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_46_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_46->m_axi_wstrb.bind(*p_46_m_axi_wstrb);
        p_46_m_axi_wstrb->set_sv_netview_offsetfromdp(10401944);
        xsim_sc_channel<0, bool > *p_46_m_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_46->m_axi_wlast.bind(*p_46_m_axi_wlast);
        p_46_m_axi_wlast->set_sv_netview_offsetfromdp(10402000);
        xsim_sc_channel<0, bool > *p_46_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_46->m_axi_wvalid.bind(*p_46_m_axi_wvalid);
        p_46_m_axi_wvalid->set_sv_netview_offsetfromdp(10402056);
        xsim_sc_channel<0, bool > *p_46_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_46->m_axi_wready.bind(*p_46_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_46_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_46_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_46->m_axi_bresp.bind(*p_46_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_46_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_46_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_46->m_axi_bvalid.bind(*p_46_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_46_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_46_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_46->m_axi_bready.bind(*p_46_m_axi_bready);
        p_46_m_axi_bready->set_sv_netview_offsetfromdp(10402280);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_46_m_axi_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_46->m_axi_araddr.bind(*p_46_m_axi_araddr);
        p_46_m_axi_araddr->set_sv_netview_offsetfromdp(10402336);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_46_m_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_46->m_axi_arlen.bind(*p_46_m_axi_arlen);
        p_46_m_axi_arlen->set_sv_netview_offsetfromdp(10402392);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_46_m_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_46->m_axi_arsize.bind(*p_46_m_axi_arsize);
        p_46_m_axi_arsize->set_sv_netview_offsetfromdp(10402448);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_46_m_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_46->m_axi_arburst.bind(*p_46_m_axi_arburst);
        p_46_m_axi_arburst->set_sv_netview_offsetfromdp(10402504);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_46_m_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_46->m_axi_arlock.bind(*p_46_m_axi_arlock);
        p_46_m_axi_arlock->set_sv_netview_offsetfromdp(10402560);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_46_m_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_46->m_axi_arcache.bind(*p_46_m_axi_arcache);
        p_46_m_axi_arcache->set_sv_netview_offsetfromdp(10402616);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_46_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_46->m_axi_arprot.bind(*p_46_m_axi_arprot);
        p_46_m_axi_arprot->set_sv_netview_offsetfromdp(10402672);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_46_m_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_46->m_axi_arregion.bind(*p_46_m_axi_arregion);
        p_46_m_axi_arregion->set_sv_netview_offsetfromdp(10402728);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_46_m_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_46->m_axi_arqos.bind(*p_46_m_axi_arqos);
        p_46_m_axi_arqos->set_sv_netview_offsetfromdp(10402784);
        xsim_sc_channel<0, bool > *p_46_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_46->m_axi_arvalid.bind(*p_46_m_axi_arvalid);
        p_46_m_axi_arvalid->set_sv_netview_offsetfromdp(10402840);
        xsim_sc_channel<0, bool > *p_46_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_46->m_axi_arready.bind(*p_46_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_46_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_46_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_46->m_axi_rdata.bind(*p_46_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_46_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_46_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_46->m_axi_rresp.bind(*p_46_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_46_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_46_m_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_46->m_axi_rlast.bind(*p_46_m_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_46_m_axi_rlast);
        xsim_sc_channel<0, bool > *p_46_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_46->m_axi_rvalid.bind(*p_46_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_46_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_46_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_46->m_axi_rready.bind(*p_46_m_axi_rready);
        p_46_m_axi_rready->set_sv_netview_offsetfromdp(10403176);
        sc_inst_47 = new bd_d216_ddr4_mem00_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.memory.ddr4_mem00");
        sc_inst_47->xsim_set_dbg_index(3058);
        xsim_sc_channel<0, bool > *p_47_c0_init_calib_complete = new xsim_sc_channel<0, bool >();
        sc_inst_47->c0_init_calib_complete.bind(*p_47_c0_init_calib_complete);
        p_47_c0_init_calib_complete->set_sv_netview_offsetfromdp(10745872);
        xsim_sc_channel<0, bool > *p_47_dbg_clk = new xsim_sc_channel<0, bool >();
        sc_inst_47->dbg_clk.bind(*p_47_dbg_clk);
        p_47_dbg_clk->set_sv_netview_offsetfromdp(10745928);
        xsim_sc_channel<0, bool > *p_47_c0_sys_clk_p = new xsim_sc_channel<0, bool >();
        sc_inst_47->c0_sys_clk_p.bind(*p_47_c0_sys_clk_p);
        (*_glb_hdl_sc_channel_map).push_back(p_47_c0_sys_clk_p);
        xsim_sc_channel<0, bool > *p_47_c0_sys_clk_n = new xsim_sc_channel<0, bool >();
        sc_inst_47->c0_sys_clk_n.bind(*p_47_c0_sys_clk_n);
        (*_glb_hdl_sc_channel_map).push_back(p_47_c0_sys_clk_n);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_47_dbg_bus = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_47->dbg_bus.bind(*p_47_dbg_bus);
        p_47_dbg_bus->set_sv_netview_offsetfromdp(10746096);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_47_c0_ddr4_adr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_47->c0_ddr4_adr.bind(*p_47_c0_ddr4_adr);
        p_47_c0_ddr4_adr->set_sv_netview_offsetfromdp(10746152);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_47_c0_ddr4_ba = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_47->c0_ddr4_ba.bind(*p_47_c0_ddr4_ba);
        p_47_c0_ddr4_ba->set_sv_netview_offsetfromdp(10746208);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_47_c0_ddr4_cke = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_47->c0_ddr4_cke.bind(*p_47_c0_ddr4_cke);
        p_47_c0_ddr4_cke->set_sv_netview_offsetfromdp(10746264);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_47_c0_ddr4_cs_n = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_47->c0_ddr4_cs_n.bind(*p_47_c0_ddr4_cs_n);
        p_47_c0_ddr4_cs_n->set_sv_netview_offsetfromdp(10746320);
        xsim_sc_channel<72, sc_dt::sc_bv<72> > *p_47_c0_ddr4_dq = new xsim_sc_channel<72, sc_dt::sc_bv<72> >();
        sc_inst_47->c0_ddr4_dq.bind(*p_47_c0_ddr4_dq);
        p_47_c0_ddr4_dq->set_sv_netview_offsetfromdp(10746376);
        xsim_sc_channel<18, sc_dt::sc_bv<18> > *p_47_c0_ddr4_dqs_c = new xsim_sc_channel<18, sc_dt::sc_bv<18> >();
        sc_inst_47->c0_ddr4_dqs_c.bind(*p_47_c0_ddr4_dqs_c);
        p_47_c0_ddr4_dqs_c->set_sv_netview_offsetfromdp(10746432);
        xsim_sc_channel<18, sc_dt::sc_bv<18> > *p_47_c0_ddr4_dqs_t = new xsim_sc_channel<18, sc_dt::sc_bv<18> >();
        sc_inst_47->c0_ddr4_dqs_t.bind(*p_47_c0_ddr4_dqs_t);
        p_47_c0_ddr4_dqs_t->set_sv_netview_offsetfromdp(10746488);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_47_c0_ddr4_odt = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_47->c0_ddr4_odt.bind(*p_47_c0_ddr4_odt);
        p_47_c0_ddr4_odt->set_sv_netview_offsetfromdp(10746544);
        xsim_sc_channel<0, bool > *p_47_c0_ddr4_parity = new xsim_sc_channel<0, bool >();
        sc_inst_47->c0_ddr4_parity.bind(*p_47_c0_ddr4_parity);
        p_47_c0_ddr4_parity->set_sv_netview_offsetfromdp(10746600);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_47_c0_ddr4_bg = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_47->c0_ddr4_bg.bind(*p_47_c0_ddr4_bg);
        p_47_c0_ddr4_bg->set_sv_netview_offsetfromdp(10746656);
        xsim_sc_channel<0, bool > *p_47_c0_ddr4_reset_n = new xsim_sc_channel<0, bool >();
        sc_inst_47->c0_ddr4_reset_n.bind(*p_47_c0_ddr4_reset_n);
        p_47_c0_ddr4_reset_n->set_sv_netview_offsetfromdp(10746712);
        xsim_sc_channel<0, bool > *p_47_c0_ddr4_act_n = new xsim_sc_channel<0, bool >();
        sc_inst_47->c0_ddr4_act_n.bind(*p_47_c0_ddr4_act_n);
        p_47_c0_ddr4_act_n->set_sv_netview_offsetfromdp(10746768);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_47_c0_ddr4_ck_c = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_47->c0_ddr4_ck_c.bind(*p_47_c0_ddr4_ck_c);
        p_47_c0_ddr4_ck_c->set_sv_netview_offsetfromdp(10746824);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_47_c0_ddr4_ck_t = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_47->c0_ddr4_ck_t.bind(*p_47_c0_ddr4_ck_t);
        p_47_c0_ddr4_ck_t->set_sv_netview_offsetfromdp(10746880);
        xsim_sc_channel<0, bool > *p_47_c0_ddr4_ui_clk = new xsim_sc_channel<0, bool >();
        sc_inst_47->c0_ddr4_ui_clk.bind(*p_47_c0_ddr4_ui_clk);
        p_47_c0_ddr4_ui_clk->set_sv_netview_offsetfromdp(10746936);
        xsim_sc_channel<0, bool > *p_47_c0_ddr4_ui_clk_sync_rst = new xsim_sc_channel<0, bool >();
        sc_inst_47->c0_ddr4_ui_clk_sync_rst.bind(*p_47_c0_ddr4_ui_clk_sync_rst);
        p_47_c0_ddr4_ui_clk_sync_rst->set_sv_netview_offsetfromdp(10746992);
        xsim_sc_channel<0, bool > *p_47_c0_ddr4_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_47->c0_ddr4_aresetn.bind(*p_47_c0_ddr4_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_47_c0_ddr4_aresetn);
        xsim_sc_channel<0, bool > *p_47_c0_ddr4_s_axi_ctrl_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_47->c0_ddr4_s_axi_ctrl_awvalid.bind(*p_47_c0_ddr4_s_axi_ctrl_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_47_c0_ddr4_s_axi_ctrl_awvalid);
        xsim_sc_channel<0, bool > *p_47_c0_ddr4_s_axi_ctrl_awready = new xsim_sc_channel<0, bool >();
        sc_inst_47->c0_ddr4_s_axi_ctrl_awready.bind(*p_47_c0_ddr4_s_axi_ctrl_awready);
        p_47_c0_ddr4_s_axi_ctrl_awready->set_sv_netview_offsetfromdp(10747160);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_47_c0_ddr4_s_axi_ctrl_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_47->c0_ddr4_s_axi_ctrl_awaddr.bind(*p_47_c0_ddr4_s_axi_ctrl_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_47_c0_ddr4_s_axi_ctrl_awaddr);
        xsim_sc_channel<0, bool > *p_47_c0_ddr4_s_axi_ctrl_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_47->c0_ddr4_s_axi_ctrl_wvalid.bind(*p_47_c0_ddr4_s_axi_ctrl_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_47_c0_ddr4_s_axi_ctrl_wvalid);
        xsim_sc_channel<0, bool > *p_47_c0_ddr4_s_axi_ctrl_wready = new xsim_sc_channel<0, bool >();
        sc_inst_47->c0_ddr4_s_axi_ctrl_wready.bind(*p_47_c0_ddr4_s_axi_ctrl_wready);
        p_47_c0_ddr4_s_axi_ctrl_wready->set_sv_netview_offsetfromdp(10747328);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_47_c0_ddr4_s_axi_ctrl_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_47->c0_ddr4_s_axi_ctrl_wdata.bind(*p_47_c0_ddr4_s_axi_ctrl_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_47_c0_ddr4_s_axi_ctrl_wdata);
        xsim_sc_channel<0, bool > *p_47_c0_ddr4_s_axi_ctrl_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_47->c0_ddr4_s_axi_ctrl_bvalid.bind(*p_47_c0_ddr4_s_axi_ctrl_bvalid);
        p_47_c0_ddr4_s_axi_ctrl_bvalid->set_sv_netview_offsetfromdp(10747440);
        xsim_sc_channel<0, bool > *p_47_c0_ddr4_s_axi_ctrl_bready = new xsim_sc_channel<0, bool >();
        sc_inst_47->c0_ddr4_s_axi_ctrl_bready.bind(*p_47_c0_ddr4_s_axi_ctrl_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_47_c0_ddr4_s_axi_ctrl_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_47_c0_ddr4_s_axi_ctrl_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_47->c0_ddr4_s_axi_ctrl_bresp.bind(*p_47_c0_ddr4_s_axi_ctrl_bresp);
        p_47_c0_ddr4_s_axi_ctrl_bresp->set_sv_netview_offsetfromdp(10747552);
        xsim_sc_channel<0, bool > *p_47_c0_ddr4_s_axi_ctrl_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_47->c0_ddr4_s_axi_ctrl_arvalid.bind(*p_47_c0_ddr4_s_axi_ctrl_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_47_c0_ddr4_s_axi_ctrl_arvalid);
        xsim_sc_channel<0, bool > *p_47_c0_ddr4_s_axi_ctrl_arready = new xsim_sc_channel<0, bool >();
        sc_inst_47->c0_ddr4_s_axi_ctrl_arready.bind(*p_47_c0_ddr4_s_axi_ctrl_arready);
        p_47_c0_ddr4_s_axi_ctrl_arready->set_sv_netview_offsetfromdp(10747664);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_47_c0_ddr4_s_axi_ctrl_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_47->c0_ddr4_s_axi_ctrl_araddr.bind(*p_47_c0_ddr4_s_axi_ctrl_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_47_c0_ddr4_s_axi_ctrl_araddr);
        xsim_sc_channel<0, bool > *p_47_c0_ddr4_s_axi_ctrl_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_47->c0_ddr4_s_axi_ctrl_rvalid.bind(*p_47_c0_ddr4_s_axi_ctrl_rvalid);
        p_47_c0_ddr4_s_axi_ctrl_rvalid->set_sv_netview_offsetfromdp(10747776);
        xsim_sc_channel<0, bool > *p_47_c0_ddr4_s_axi_ctrl_rready = new xsim_sc_channel<0, bool >();
        sc_inst_47->c0_ddr4_s_axi_ctrl_rready.bind(*p_47_c0_ddr4_s_axi_ctrl_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_47_c0_ddr4_s_axi_ctrl_rready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_47_c0_ddr4_s_axi_ctrl_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_47->c0_ddr4_s_axi_ctrl_rdata.bind(*p_47_c0_ddr4_s_axi_ctrl_rdata);
        p_47_c0_ddr4_s_axi_ctrl_rdata->set_sv_netview_offsetfromdp(10747888);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_47_c0_ddr4_s_axi_ctrl_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_47->c0_ddr4_s_axi_ctrl_rresp.bind(*p_47_c0_ddr4_s_axi_ctrl_rresp);
        p_47_c0_ddr4_s_axi_ctrl_rresp->set_sv_netview_offsetfromdp(10747944);
        xsim_sc_channel<0, bool > *p_47_c0_ddr4_interrupt = new xsim_sc_channel<0, bool >();
        sc_inst_47->c0_ddr4_interrupt.bind(*p_47_c0_ddr4_interrupt);
        p_47_c0_ddr4_interrupt->set_sv_netview_offsetfromdp(10748000);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_47_c0_ddr4_s_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_47->c0_ddr4_s_axi_awid.bind(*p_47_c0_ddr4_s_axi_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_47_c0_ddr4_s_axi_awid);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_47_c0_ddr4_s_axi_awaddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_47->c0_ddr4_s_axi_awaddr.bind(*p_47_c0_ddr4_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_47_c0_ddr4_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_47_c0_ddr4_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_47->c0_ddr4_s_axi_awlen.bind(*p_47_c0_ddr4_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_47_c0_ddr4_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_47_c0_ddr4_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_47->c0_ddr4_s_axi_awsize.bind(*p_47_c0_ddr4_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_47_c0_ddr4_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_47_c0_ddr4_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_47->c0_ddr4_s_axi_awburst.bind(*p_47_c0_ddr4_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_47_c0_ddr4_s_axi_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_47_c0_ddr4_s_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_47->c0_ddr4_s_axi_awlock.bind(*p_47_c0_ddr4_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_47_c0_ddr4_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_47_c0_ddr4_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_47->c0_ddr4_s_axi_awcache.bind(*p_47_c0_ddr4_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_47_c0_ddr4_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_47_c0_ddr4_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_47->c0_ddr4_s_axi_awprot.bind(*p_47_c0_ddr4_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_47_c0_ddr4_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_47_c0_ddr4_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_47->c0_ddr4_s_axi_awqos.bind(*p_47_c0_ddr4_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_47_c0_ddr4_s_axi_awqos);
        xsim_sc_channel<0, bool > *p_47_c0_ddr4_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_47->c0_ddr4_s_axi_awvalid.bind(*p_47_c0_ddr4_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_47_c0_ddr4_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_47_c0_ddr4_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_47->c0_ddr4_s_axi_awready.bind(*p_47_c0_ddr4_s_axi_awready);
        p_47_c0_ddr4_s_axi_awready->set_sv_netview_offsetfromdp(10748616);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_47_c0_ddr4_s_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_47->c0_ddr4_s_axi_wdata.bind(*p_47_c0_ddr4_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_47_c0_ddr4_s_axi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_47_c0_ddr4_s_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_47->c0_ddr4_s_axi_wstrb.bind(*p_47_c0_ddr4_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_47_c0_ddr4_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_47_c0_ddr4_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_47->c0_ddr4_s_axi_wlast.bind(*p_47_c0_ddr4_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_47_c0_ddr4_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_47_c0_ddr4_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_47->c0_ddr4_s_axi_wvalid.bind(*p_47_c0_ddr4_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_47_c0_ddr4_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_47_c0_ddr4_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_47->c0_ddr4_s_axi_wready.bind(*p_47_c0_ddr4_s_axi_wready);
        p_47_c0_ddr4_s_axi_wready->set_sv_netview_offsetfromdp(10748896);
        xsim_sc_channel<0, bool > *p_47_c0_ddr4_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_47->c0_ddr4_s_axi_bready.bind(*p_47_c0_ddr4_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_47_c0_ddr4_s_axi_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_47_c0_ddr4_s_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_47->c0_ddr4_s_axi_bid.bind(*p_47_c0_ddr4_s_axi_bid);
        p_47_c0_ddr4_s_axi_bid->set_sv_netview_offsetfromdp(10749008);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_47_c0_ddr4_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_47->c0_ddr4_s_axi_bresp.bind(*p_47_c0_ddr4_s_axi_bresp);
        p_47_c0_ddr4_s_axi_bresp->set_sv_netview_offsetfromdp(10749064);
        xsim_sc_channel<0, bool > *p_47_c0_ddr4_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_47->c0_ddr4_s_axi_bvalid.bind(*p_47_c0_ddr4_s_axi_bvalid);
        p_47_c0_ddr4_s_axi_bvalid->set_sv_netview_offsetfromdp(10749120);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_47_c0_ddr4_s_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_47->c0_ddr4_s_axi_arid.bind(*p_47_c0_ddr4_s_axi_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_47_c0_ddr4_s_axi_arid);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_47_c0_ddr4_s_axi_araddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_47->c0_ddr4_s_axi_araddr.bind(*p_47_c0_ddr4_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_47_c0_ddr4_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_47_c0_ddr4_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_47->c0_ddr4_s_axi_arlen.bind(*p_47_c0_ddr4_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_47_c0_ddr4_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_47_c0_ddr4_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_47->c0_ddr4_s_axi_arsize.bind(*p_47_c0_ddr4_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_47_c0_ddr4_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_47_c0_ddr4_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_47->c0_ddr4_s_axi_arburst.bind(*p_47_c0_ddr4_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_47_c0_ddr4_s_axi_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_47_c0_ddr4_s_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_47->c0_ddr4_s_axi_arlock.bind(*p_47_c0_ddr4_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_47_c0_ddr4_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_47_c0_ddr4_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_47->c0_ddr4_s_axi_arcache.bind(*p_47_c0_ddr4_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_47_c0_ddr4_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_47_c0_ddr4_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_47->c0_ddr4_s_axi_arprot.bind(*p_47_c0_ddr4_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_47_c0_ddr4_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_47_c0_ddr4_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_47->c0_ddr4_s_axi_arqos.bind(*p_47_c0_ddr4_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_47_c0_ddr4_s_axi_arqos);
        xsim_sc_channel<0, bool > *p_47_c0_ddr4_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_47->c0_ddr4_s_axi_arvalid.bind(*p_47_c0_ddr4_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_47_c0_ddr4_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_47_c0_ddr4_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_47->c0_ddr4_s_axi_arready.bind(*p_47_c0_ddr4_s_axi_arready);
        p_47_c0_ddr4_s_axi_arready->set_sv_netview_offsetfromdp(10749736);
        xsim_sc_channel<0, bool > *p_47_c0_ddr4_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_47->c0_ddr4_s_axi_rready.bind(*p_47_c0_ddr4_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_47_c0_ddr4_s_axi_rready);
        xsim_sc_channel<0, bool > *p_47_c0_ddr4_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_47->c0_ddr4_s_axi_rlast.bind(*p_47_c0_ddr4_s_axi_rlast);
        p_47_c0_ddr4_s_axi_rlast->set_sv_netview_offsetfromdp(10749848);
        xsim_sc_channel<0, bool > *p_47_c0_ddr4_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_47->c0_ddr4_s_axi_rvalid.bind(*p_47_c0_ddr4_s_axi_rvalid);
        p_47_c0_ddr4_s_axi_rvalid->set_sv_netview_offsetfromdp(10749904);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_47_c0_ddr4_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_47->c0_ddr4_s_axi_rresp.bind(*p_47_c0_ddr4_s_axi_rresp);
        p_47_c0_ddr4_s_axi_rresp->set_sv_netview_offsetfromdp(10749960);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_47_c0_ddr4_s_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_47->c0_ddr4_s_axi_rid.bind(*p_47_c0_ddr4_s_axi_rid);
        p_47_c0_ddr4_s_axi_rid->set_sv_netview_offsetfromdp(10750016);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_47_c0_ddr4_s_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_47->c0_ddr4_s_axi_rdata.bind(*p_47_c0_ddr4_s_axi_rdata);
        p_47_c0_ddr4_s_axi_rdata->set_sv_netview_offsetfromdp(10750072);
        xsim_sc_channel<0, bool > *p_47_addn_ui_clkout1 = new xsim_sc_channel<0, bool >();
        sc_inst_47->addn_ui_clkout1.bind(*p_47_addn_ui_clkout1);
        p_47_addn_ui_clkout1->set_sv_netview_offsetfromdp(10750128);
        xsim_sc_channel<0, bool > *p_47_sys_rst = new xsim_sc_channel<0, bool >();
        sc_inst_47->sys_rst.bind(*p_47_sys_rst);
        (*_glb_hdl_sc_channel_map).push_back(p_47_sys_rst);
        sc_inst_48 = new bd_d216_ddr4_mem00_ctrl_cc_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.memory.ddr4_mem00_ctrl_cc");
        sc_inst_48->xsim_set_dbg_index(3059);
        xsim_sc_channel<0, bool > *p_48_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_48->s_axi_aclk.bind(*p_48_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_48_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_48->s_axi_aresetn.bind(*p_48_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_aresetn);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_48_s_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_48->s_axi_awaddr.bind(*p_48_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_48_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_48->s_axi_awprot.bind(*p_48_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_48_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_48->s_axi_awvalid.bind(*p_48_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_48_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_48->s_axi_awready.bind(*p_48_s_axi_awready);
        p_48_s_axi_awready->set_sv_netview_offsetfromdp(10750568);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_48_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_48->s_axi_wdata.bind(*p_48_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_48_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_48->s_axi_wstrb.bind(*p_48_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_48_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_48->s_axi_wvalid.bind(*p_48_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_48_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_48->s_axi_wready.bind(*p_48_s_axi_wready);
        p_48_s_axi_wready->set_sv_netview_offsetfromdp(10750792);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_48_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_48->s_axi_bresp.bind(*p_48_s_axi_bresp);
        p_48_s_axi_bresp->set_sv_netview_offsetfromdp(10750848);
        xsim_sc_channel<0, bool > *p_48_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_48->s_axi_bvalid.bind(*p_48_s_axi_bvalid);
        p_48_s_axi_bvalid->set_sv_netview_offsetfromdp(10750904);
        xsim_sc_channel<0, bool > *p_48_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_48->s_axi_bready.bind(*p_48_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_bready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_48_s_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_48->s_axi_araddr.bind(*p_48_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_48_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_48->s_axi_arprot.bind(*p_48_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_48_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_48->s_axi_arvalid.bind(*p_48_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_48_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_48->s_axi_arready.bind(*p_48_s_axi_arready);
        p_48_s_axi_arready->set_sv_netview_offsetfromdp(10751184);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_48_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_48->s_axi_rdata.bind(*p_48_s_axi_rdata);
        p_48_s_axi_rdata->set_sv_netview_offsetfromdp(10751240);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_48_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_48->s_axi_rresp.bind(*p_48_s_axi_rresp);
        p_48_s_axi_rresp->set_sv_netview_offsetfromdp(10751296);
        xsim_sc_channel<0, bool > *p_48_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_48->s_axi_rvalid.bind(*p_48_s_axi_rvalid);
        p_48_s_axi_rvalid->set_sv_netview_offsetfromdp(10751352);
        xsim_sc_channel<0, bool > *p_48_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_48->s_axi_rready.bind(*p_48_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_rready);
        xsim_sc_channel<0, bool > *p_48_m_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_48->m_axi_aclk.bind(*p_48_m_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_48_m_axi_aclk);
        xsim_sc_channel<0, bool > *p_48_m_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_48->m_axi_aresetn.bind(*p_48_m_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_48_m_axi_aresetn);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_48_m_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_48->m_axi_awaddr.bind(*p_48_m_axi_awaddr);
        p_48_m_axi_awaddr->set_sv_netview_offsetfromdp(10751576);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_48_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_48->m_axi_awprot.bind(*p_48_m_axi_awprot);
        p_48_m_axi_awprot->set_sv_netview_offsetfromdp(10751632);
        xsim_sc_channel<0, bool > *p_48_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_48->m_axi_awvalid.bind(*p_48_m_axi_awvalid);
        p_48_m_axi_awvalid->set_sv_netview_offsetfromdp(10751688);
        xsim_sc_channel<0, bool > *p_48_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_48->m_axi_awready.bind(*p_48_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_48_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_48_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_48->m_axi_wdata.bind(*p_48_m_axi_wdata);
        p_48_m_axi_wdata->set_sv_netview_offsetfromdp(10751800);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_48_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_48->m_axi_wstrb.bind(*p_48_m_axi_wstrb);
        p_48_m_axi_wstrb->set_sv_netview_offsetfromdp(10751856);
        xsim_sc_channel<0, bool > *p_48_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_48->m_axi_wvalid.bind(*p_48_m_axi_wvalid);
        p_48_m_axi_wvalid->set_sv_netview_offsetfromdp(10751912);
        xsim_sc_channel<0, bool > *p_48_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_48->m_axi_wready.bind(*p_48_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_48_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_48_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_48->m_axi_bresp.bind(*p_48_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_48_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_48_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_48->m_axi_bvalid.bind(*p_48_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_48_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_48_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_48->m_axi_bready.bind(*p_48_m_axi_bready);
        p_48_m_axi_bready->set_sv_netview_offsetfromdp(10752136);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_48_m_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_48->m_axi_araddr.bind(*p_48_m_axi_araddr);
        p_48_m_axi_araddr->set_sv_netview_offsetfromdp(10752192);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_48_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_48->m_axi_arprot.bind(*p_48_m_axi_arprot);
        p_48_m_axi_arprot->set_sv_netview_offsetfromdp(10752248);
        xsim_sc_channel<0, bool > *p_48_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_48->m_axi_arvalid.bind(*p_48_m_axi_arvalid);
        p_48_m_axi_arvalid->set_sv_netview_offsetfromdp(10752304);
        xsim_sc_channel<0, bool > *p_48_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_48->m_axi_arready.bind(*p_48_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_48_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_48_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_48->m_axi_rdata.bind(*p_48_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_48_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_48_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_48->m_axi_rresp.bind(*p_48_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_48_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_48_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_48->m_axi_rvalid.bind(*p_48_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_48_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_48_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_48->m_axi_rready.bind(*p_48_m_axi_rready);
        p_48_m_axi_rready->set_sv_netview_offsetfromdp(10752584);
        sc_inst_49 = new bd_d216_ddr4_mem01_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.memory.ddr4_mem01");
        sc_inst_49->xsim_set_dbg_index(3060);
        xsim_sc_channel<0, bool > *p_49_c0_init_calib_complete = new xsim_sc_channel<0, bool >();
        sc_inst_49->c0_init_calib_complete.bind(*p_49_c0_init_calib_complete);
        p_49_c0_init_calib_complete->set_sv_netview_offsetfromdp(10752688);
        xsim_sc_channel<0, bool > *p_49_dbg_clk = new xsim_sc_channel<0, bool >();
        sc_inst_49->dbg_clk.bind(*p_49_dbg_clk);
        p_49_dbg_clk->set_sv_netview_offsetfromdp(10752744);
        xsim_sc_channel<0, bool > *p_49_c0_sys_clk_p = new xsim_sc_channel<0, bool >();
        sc_inst_49->c0_sys_clk_p.bind(*p_49_c0_sys_clk_p);
        (*_glb_hdl_sc_channel_map).push_back(p_49_c0_sys_clk_p);
        xsim_sc_channel<0, bool > *p_49_c0_sys_clk_n = new xsim_sc_channel<0, bool >();
        sc_inst_49->c0_sys_clk_n.bind(*p_49_c0_sys_clk_n);
        (*_glb_hdl_sc_channel_map).push_back(p_49_c0_sys_clk_n);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_49_dbg_bus = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_49->dbg_bus.bind(*p_49_dbg_bus);
        p_49_dbg_bus->set_sv_netview_offsetfromdp(10752912);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_49_c0_ddr4_adr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_49->c0_ddr4_adr.bind(*p_49_c0_ddr4_adr);
        p_49_c0_ddr4_adr->set_sv_netview_offsetfromdp(10752968);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_49_c0_ddr4_ba = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_49->c0_ddr4_ba.bind(*p_49_c0_ddr4_ba);
        p_49_c0_ddr4_ba->set_sv_netview_offsetfromdp(10753024);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_49_c0_ddr4_cke = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_49->c0_ddr4_cke.bind(*p_49_c0_ddr4_cke);
        p_49_c0_ddr4_cke->set_sv_netview_offsetfromdp(10753080);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_49_c0_ddr4_cs_n = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_49->c0_ddr4_cs_n.bind(*p_49_c0_ddr4_cs_n);
        p_49_c0_ddr4_cs_n->set_sv_netview_offsetfromdp(10753136);
        xsim_sc_channel<72, sc_dt::sc_bv<72> > *p_49_c0_ddr4_dq = new xsim_sc_channel<72, sc_dt::sc_bv<72> >();
        sc_inst_49->c0_ddr4_dq.bind(*p_49_c0_ddr4_dq);
        p_49_c0_ddr4_dq->set_sv_netview_offsetfromdp(10753192);
        xsim_sc_channel<18, sc_dt::sc_bv<18> > *p_49_c0_ddr4_dqs_c = new xsim_sc_channel<18, sc_dt::sc_bv<18> >();
        sc_inst_49->c0_ddr4_dqs_c.bind(*p_49_c0_ddr4_dqs_c);
        p_49_c0_ddr4_dqs_c->set_sv_netview_offsetfromdp(10753248);
        xsim_sc_channel<18, sc_dt::sc_bv<18> > *p_49_c0_ddr4_dqs_t = new xsim_sc_channel<18, sc_dt::sc_bv<18> >();
        sc_inst_49->c0_ddr4_dqs_t.bind(*p_49_c0_ddr4_dqs_t);
        p_49_c0_ddr4_dqs_t->set_sv_netview_offsetfromdp(10753304);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_49_c0_ddr4_odt = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_49->c0_ddr4_odt.bind(*p_49_c0_ddr4_odt);
        p_49_c0_ddr4_odt->set_sv_netview_offsetfromdp(10753360);
        xsim_sc_channel<0, bool > *p_49_c0_ddr4_parity = new xsim_sc_channel<0, bool >();
        sc_inst_49->c0_ddr4_parity.bind(*p_49_c0_ddr4_parity);
        p_49_c0_ddr4_parity->set_sv_netview_offsetfromdp(10753416);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_49_c0_ddr4_bg = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_49->c0_ddr4_bg.bind(*p_49_c0_ddr4_bg);
        p_49_c0_ddr4_bg->set_sv_netview_offsetfromdp(10753472);
        xsim_sc_channel<0, bool > *p_49_c0_ddr4_reset_n = new xsim_sc_channel<0, bool >();
        sc_inst_49->c0_ddr4_reset_n.bind(*p_49_c0_ddr4_reset_n);
        p_49_c0_ddr4_reset_n->set_sv_netview_offsetfromdp(10753528);
        xsim_sc_channel<0, bool > *p_49_c0_ddr4_act_n = new xsim_sc_channel<0, bool >();
        sc_inst_49->c0_ddr4_act_n.bind(*p_49_c0_ddr4_act_n);
        p_49_c0_ddr4_act_n->set_sv_netview_offsetfromdp(10753584);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_49_c0_ddr4_ck_c = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_49->c0_ddr4_ck_c.bind(*p_49_c0_ddr4_ck_c);
        p_49_c0_ddr4_ck_c->set_sv_netview_offsetfromdp(10753640);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_49_c0_ddr4_ck_t = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_49->c0_ddr4_ck_t.bind(*p_49_c0_ddr4_ck_t);
        p_49_c0_ddr4_ck_t->set_sv_netview_offsetfromdp(10753696);
        xsim_sc_channel<0, bool > *p_49_c0_ddr4_ui_clk = new xsim_sc_channel<0, bool >();
        sc_inst_49->c0_ddr4_ui_clk.bind(*p_49_c0_ddr4_ui_clk);
        p_49_c0_ddr4_ui_clk->set_sv_netview_offsetfromdp(10753752);
        xsim_sc_channel<0, bool > *p_49_c0_ddr4_ui_clk_sync_rst = new xsim_sc_channel<0, bool >();
        sc_inst_49->c0_ddr4_ui_clk_sync_rst.bind(*p_49_c0_ddr4_ui_clk_sync_rst);
        p_49_c0_ddr4_ui_clk_sync_rst->set_sv_netview_offsetfromdp(10753808);
        xsim_sc_channel<0, bool > *p_49_c0_ddr4_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_49->c0_ddr4_aresetn.bind(*p_49_c0_ddr4_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_49_c0_ddr4_aresetn);
        xsim_sc_channel<0, bool > *p_49_c0_ddr4_s_axi_ctrl_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_49->c0_ddr4_s_axi_ctrl_awvalid.bind(*p_49_c0_ddr4_s_axi_ctrl_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_49_c0_ddr4_s_axi_ctrl_awvalid);
        xsim_sc_channel<0, bool > *p_49_c0_ddr4_s_axi_ctrl_awready = new xsim_sc_channel<0, bool >();
        sc_inst_49->c0_ddr4_s_axi_ctrl_awready.bind(*p_49_c0_ddr4_s_axi_ctrl_awready);
        p_49_c0_ddr4_s_axi_ctrl_awready->set_sv_netview_offsetfromdp(10753976);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_49_c0_ddr4_s_axi_ctrl_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_49->c0_ddr4_s_axi_ctrl_awaddr.bind(*p_49_c0_ddr4_s_axi_ctrl_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_49_c0_ddr4_s_axi_ctrl_awaddr);
        xsim_sc_channel<0, bool > *p_49_c0_ddr4_s_axi_ctrl_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_49->c0_ddr4_s_axi_ctrl_wvalid.bind(*p_49_c0_ddr4_s_axi_ctrl_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_49_c0_ddr4_s_axi_ctrl_wvalid);
        xsim_sc_channel<0, bool > *p_49_c0_ddr4_s_axi_ctrl_wready = new xsim_sc_channel<0, bool >();
        sc_inst_49->c0_ddr4_s_axi_ctrl_wready.bind(*p_49_c0_ddr4_s_axi_ctrl_wready);
        p_49_c0_ddr4_s_axi_ctrl_wready->set_sv_netview_offsetfromdp(10754144);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_49_c0_ddr4_s_axi_ctrl_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_49->c0_ddr4_s_axi_ctrl_wdata.bind(*p_49_c0_ddr4_s_axi_ctrl_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_49_c0_ddr4_s_axi_ctrl_wdata);
        xsim_sc_channel<0, bool > *p_49_c0_ddr4_s_axi_ctrl_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_49->c0_ddr4_s_axi_ctrl_bvalid.bind(*p_49_c0_ddr4_s_axi_ctrl_bvalid);
        p_49_c0_ddr4_s_axi_ctrl_bvalid->set_sv_netview_offsetfromdp(10754256);
        xsim_sc_channel<0, bool > *p_49_c0_ddr4_s_axi_ctrl_bready = new xsim_sc_channel<0, bool >();
        sc_inst_49->c0_ddr4_s_axi_ctrl_bready.bind(*p_49_c0_ddr4_s_axi_ctrl_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_49_c0_ddr4_s_axi_ctrl_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_49_c0_ddr4_s_axi_ctrl_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_49->c0_ddr4_s_axi_ctrl_bresp.bind(*p_49_c0_ddr4_s_axi_ctrl_bresp);
        p_49_c0_ddr4_s_axi_ctrl_bresp->set_sv_netview_offsetfromdp(10754368);
        xsim_sc_channel<0, bool > *p_49_c0_ddr4_s_axi_ctrl_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_49->c0_ddr4_s_axi_ctrl_arvalid.bind(*p_49_c0_ddr4_s_axi_ctrl_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_49_c0_ddr4_s_axi_ctrl_arvalid);
        xsim_sc_channel<0, bool > *p_49_c0_ddr4_s_axi_ctrl_arready = new xsim_sc_channel<0, bool >();
        sc_inst_49->c0_ddr4_s_axi_ctrl_arready.bind(*p_49_c0_ddr4_s_axi_ctrl_arready);
        p_49_c0_ddr4_s_axi_ctrl_arready->set_sv_netview_offsetfromdp(10754480);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_49_c0_ddr4_s_axi_ctrl_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_49->c0_ddr4_s_axi_ctrl_araddr.bind(*p_49_c0_ddr4_s_axi_ctrl_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_49_c0_ddr4_s_axi_ctrl_araddr);
        xsim_sc_channel<0, bool > *p_49_c0_ddr4_s_axi_ctrl_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_49->c0_ddr4_s_axi_ctrl_rvalid.bind(*p_49_c0_ddr4_s_axi_ctrl_rvalid);
        p_49_c0_ddr4_s_axi_ctrl_rvalid->set_sv_netview_offsetfromdp(10754592);
        xsim_sc_channel<0, bool > *p_49_c0_ddr4_s_axi_ctrl_rready = new xsim_sc_channel<0, bool >();
        sc_inst_49->c0_ddr4_s_axi_ctrl_rready.bind(*p_49_c0_ddr4_s_axi_ctrl_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_49_c0_ddr4_s_axi_ctrl_rready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_49_c0_ddr4_s_axi_ctrl_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_49->c0_ddr4_s_axi_ctrl_rdata.bind(*p_49_c0_ddr4_s_axi_ctrl_rdata);
        p_49_c0_ddr4_s_axi_ctrl_rdata->set_sv_netview_offsetfromdp(10754704);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_49_c0_ddr4_s_axi_ctrl_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_49->c0_ddr4_s_axi_ctrl_rresp.bind(*p_49_c0_ddr4_s_axi_ctrl_rresp);
        p_49_c0_ddr4_s_axi_ctrl_rresp->set_sv_netview_offsetfromdp(10754760);
        xsim_sc_channel<0, bool > *p_49_c0_ddr4_interrupt = new xsim_sc_channel<0, bool >();
        sc_inst_49->c0_ddr4_interrupt.bind(*p_49_c0_ddr4_interrupt);
        p_49_c0_ddr4_interrupt->set_sv_netview_offsetfromdp(10754816);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_49_c0_ddr4_s_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_49->c0_ddr4_s_axi_awid.bind(*p_49_c0_ddr4_s_axi_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_49_c0_ddr4_s_axi_awid);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_49_c0_ddr4_s_axi_awaddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_49->c0_ddr4_s_axi_awaddr.bind(*p_49_c0_ddr4_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_49_c0_ddr4_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_49_c0_ddr4_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_49->c0_ddr4_s_axi_awlen.bind(*p_49_c0_ddr4_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_49_c0_ddr4_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_49_c0_ddr4_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_49->c0_ddr4_s_axi_awsize.bind(*p_49_c0_ddr4_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_49_c0_ddr4_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_49_c0_ddr4_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_49->c0_ddr4_s_axi_awburst.bind(*p_49_c0_ddr4_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_49_c0_ddr4_s_axi_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_49_c0_ddr4_s_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_49->c0_ddr4_s_axi_awlock.bind(*p_49_c0_ddr4_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_49_c0_ddr4_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_49_c0_ddr4_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_49->c0_ddr4_s_axi_awcache.bind(*p_49_c0_ddr4_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_49_c0_ddr4_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_49_c0_ddr4_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_49->c0_ddr4_s_axi_awprot.bind(*p_49_c0_ddr4_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_49_c0_ddr4_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_49_c0_ddr4_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_49->c0_ddr4_s_axi_awqos.bind(*p_49_c0_ddr4_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_49_c0_ddr4_s_axi_awqos);
        xsim_sc_channel<0, bool > *p_49_c0_ddr4_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_49->c0_ddr4_s_axi_awvalid.bind(*p_49_c0_ddr4_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_49_c0_ddr4_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_49_c0_ddr4_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_49->c0_ddr4_s_axi_awready.bind(*p_49_c0_ddr4_s_axi_awready);
        p_49_c0_ddr4_s_axi_awready->set_sv_netview_offsetfromdp(10755432);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_49_c0_ddr4_s_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_49->c0_ddr4_s_axi_wdata.bind(*p_49_c0_ddr4_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_49_c0_ddr4_s_axi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_49_c0_ddr4_s_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_49->c0_ddr4_s_axi_wstrb.bind(*p_49_c0_ddr4_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_49_c0_ddr4_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_49_c0_ddr4_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_49->c0_ddr4_s_axi_wlast.bind(*p_49_c0_ddr4_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_49_c0_ddr4_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_49_c0_ddr4_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_49->c0_ddr4_s_axi_wvalid.bind(*p_49_c0_ddr4_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_49_c0_ddr4_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_49_c0_ddr4_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_49->c0_ddr4_s_axi_wready.bind(*p_49_c0_ddr4_s_axi_wready);
        p_49_c0_ddr4_s_axi_wready->set_sv_netview_offsetfromdp(10755712);
        xsim_sc_channel<0, bool > *p_49_c0_ddr4_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_49->c0_ddr4_s_axi_bready.bind(*p_49_c0_ddr4_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_49_c0_ddr4_s_axi_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_49_c0_ddr4_s_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_49->c0_ddr4_s_axi_bid.bind(*p_49_c0_ddr4_s_axi_bid);
        p_49_c0_ddr4_s_axi_bid->set_sv_netview_offsetfromdp(10755824);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_49_c0_ddr4_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_49->c0_ddr4_s_axi_bresp.bind(*p_49_c0_ddr4_s_axi_bresp);
        p_49_c0_ddr4_s_axi_bresp->set_sv_netview_offsetfromdp(10755880);
        xsim_sc_channel<0, bool > *p_49_c0_ddr4_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_49->c0_ddr4_s_axi_bvalid.bind(*p_49_c0_ddr4_s_axi_bvalid);
        p_49_c0_ddr4_s_axi_bvalid->set_sv_netview_offsetfromdp(10755936);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_49_c0_ddr4_s_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_49->c0_ddr4_s_axi_arid.bind(*p_49_c0_ddr4_s_axi_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_49_c0_ddr4_s_axi_arid);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_49_c0_ddr4_s_axi_araddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_49->c0_ddr4_s_axi_araddr.bind(*p_49_c0_ddr4_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_49_c0_ddr4_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_49_c0_ddr4_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_49->c0_ddr4_s_axi_arlen.bind(*p_49_c0_ddr4_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_49_c0_ddr4_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_49_c0_ddr4_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_49->c0_ddr4_s_axi_arsize.bind(*p_49_c0_ddr4_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_49_c0_ddr4_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_49_c0_ddr4_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_49->c0_ddr4_s_axi_arburst.bind(*p_49_c0_ddr4_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_49_c0_ddr4_s_axi_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_49_c0_ddr4_s_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_49->c0_ddr4_s_axi_arlock.bind(*p_49_c0_ddr4_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_49_c0_ddr4_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_49_c0_ddr4_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_49->c0_ddr4_s_axi_arcache.bind(*p_49_c0_ddr4_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_49_c0_ddr4_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_49_c0_ddr4_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_49->c0_ddr4_s_axi_arprot.bind(*p_49_c0_ddr4_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_49_c0_ddr4_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_49_c0_ddr4_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_49->c0_ddr4_s_axi_arqos.bind(*p_49_c0_ddr4_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_49_c0_ddr4_s_axi_arqos);
        xsim_sc_channel<0, bool > *p_49_c0_ddr4_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_49->c0_ddr4_s_axi_arvalid.bind(*p_49_c0_ddr4_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_49_c0_ddr4_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_49_c0_ddr4_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_49->c0_ddr4_s_axi_arready.bind(*p_49_c0_ddr4_s_axi_arready);
        p_49_c0_ddr4_s_axi_arready->set_sv_netview_offsetfromdp(10756552);
        xsim_sc_channel<0, bool > *p_49_c0_ddr4_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_49->c0_ddr4_s_axi_rready.bind(*p_49_c0_ddr4_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_49_c0_ddr4_s_axi_rready);
        xsim_sc_channel<0, bool > *p_49_c0_ddr4_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_49->c0_ddr4_s_axi_rlast.bind(*p_49_c0_ddr4_s_axi_rlast);
        p_49_c0_ddr4_s_axi_rlast->set_sv_netview_offsetfromdp(10756664);
        xsim_sc_channel<0, bool > *p_49_c0_ddr4_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_49->c0_ddr4_s_axi_rvalid.bind(*p_49_c0_ddr4_s_axi_rvalid);
        p_49_c0_ddr4_s_axi_rvalid->set_sv_netview_offsetfromdp(10756720);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_49_c0_ddr4_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_49->c0_ddr4_s_axi_rresp.bind(*p_49_c0_ddr4_s_axi_rresp);
        p_49_c0_ddr4_s_axi_rresp->set_sv_netview_offsetfromdp(10756776);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_49_c0_ddr4_s_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_49->c0_ddr4_s_axi_rid.bind(*p_49_c0_ddr4_s_axi_rid);
        p_49_c0_ddr4_s_axi_rid->set_sv_netview_offsetfromdp(10756832);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_49_c0_ddr4_s_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_49->c0_ddr4_s_axi_rdata.bind(*p_49_c0_ddr4_s_axi_rdata);
        p_49_c0_ddr4_s_axi_rdata->set_sv_netview_offsetfromdp(10756888);
        xsim_sc_channel<0, bool > *p_49_addn_ui_clkout1 = new xsim_sc_channel<0, bool >();
        sc_inst_49->addn_ui_clkout1.bind(*p_49_addn_ui_clkout1);
        p_49_addn_ui_clkout1->set_sv_netview_offsetfromdp(10756944);
        xsim_sc_channel<0, bool > *p_49_sys_rst = new xsim_sc_channel<0, bool >();
        sc_inst_49->sys_rst.bind(*p_49_sys_rst);
        (*_glb_hdl_sc_channel_map).push_back(p_49_sys_rst);
        sc_inst_50 = new bd_d216_ddr4_mem01_ctrl_cc_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.memory.ddr4_mem01_ctrl_cc");
        sc_inst_50->xsim_set_dbg_index(3061);
        xsim_sc_channel<0, bool > *p_50_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_50->s_axi_aclk.bind(*p_50_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_50_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_50->s_axi_aresetn.bind(*p_50_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_aresetn);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_50_s_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_50->s_axi_awaddr.bind(*p_50_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_50_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_50->s_axi_awprot.bind(*p_50_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_50_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_50->s_axi_awvalid.bind(*p_50_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_50_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_50->s_axi_awready.bind(*p_50_s_axi_awready);
        p_50_s_axi_awready->set_sv_netview_offsetfromdp(10757384);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_50_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_50->s_axi_wdata.bind(*p_50_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_50_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_50->s_axi_wstrb.bind(*p_50_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_50_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_50->s_axi_wvalid.bind(*p_50_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_50_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_50->s_axi_wready.bind(*p_50_s_axi_wready);
        p_50_s_axi_wready->set_sv_netview_offsetfromdp(10757608);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_50_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_50->s_axi_bresp.bind(*p_50_s_axi_bresp);
        p_50_s_axi_bresp->set_sv_netview_offsetfromdp(10757664);
        xsim_sc_channel<0, bool > *p_50_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_50->s_axi_bvalid.bind(*p_50_s_axi_bvalid);
        p_50_s_axi_bvalid->set_sv_netview_offsetfromdp(10757720);
        xsim_sc_channel<0, bool > *p_50_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_50->s_axi_bready.bind(*p_50_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_bready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_50_s_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_50->s_axi_araddr.bind(*p_50_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_50_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_50->s_axi_arprot.bind(*p_50_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_50_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_50->s_axi_arvalid.bind(*p_50_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_50_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_50->s_axi_arready.bind(*p_50_s_axi_arready);
        p_50_s_axi_arready->set_sv_netview_offsetfromdp(10758000);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_50_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_50->s_axi_rdata.bind(*p_50_s_axi_rdata);
        p_50_s_axi_rdata->set_sv_netview_offsetfromdp(10758056);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_50_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_50->s_axi_rresp.bind(*p_50_s_axi_rresp);
        p_50_s_axi_rresp->set_sv_netview_offsetfromdp(10758112);
        xsim_sc_channel<0, bool > *p_50_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_50->s_axi_rvalid.bind(*p_50_s_axi_rvalid);
        p_50_s_axi_rvalid->set_sv_netview_offsetfromdp(10758168);
        xsim_sc_channel<0, bool > *p_50_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_50->s_axi_rready.bind(*p_50_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_rready);
        xsim_sc_channel<0, bool > *p_50_m_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_50->m_axi_aclk.bind(*p_50_m_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_50_m_axi_aclk);
        xsim_sc_channel<0, bool > *p_50_m_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_50->m_axi_aresetn.bind(*p_50_m_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_50_m_axi_aresetn);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_50_m_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_50->m_axi_awaddr.bind(*p_50_m_axi_awaddr);
        p_50_m_axi_awaddr->set_sv_netview_offsetfromdp(10758392);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_50_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_50->m_axi_awprot.bind(*p_50_m_axi_awprot);
        p_50_m_axi_awprot->set_sv_netview_offsetfromdp(10758448);
        xsim_sc_channel<0, bool > *p_50_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_50->m_axi_awvalid.bind(*p_50_m_axi_awvalid);
        p_50_m_axi_awvalid->set_sv_netview_offsetfromdp(10758504);
        xsim_sc_channel<0, bool > *p_50_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_50->m_axi_awready.bind(*p_50_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_50_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_50_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_50->m_axi_wdata.bind(*p_50_m_axi_wdata);
        p_50_m_axi_wdata->set_sv_netview_offsetfromdp(10758616);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_50_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_50->m_axi_wstrb.bind(*p_50_m_axi_wstrb);
        p_50_m_axi_wstrb->set_sv_netview_offsetfromdp(10758672);
        xsim_sc_channel<0, bool > *p_50_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_50->m_axi_wvalid.bind(*p_50_m_axi_wvalid);
        p_50_m_axi_wvalid->set_sv_netview_offsetfromdp(10758728);
        xsim_sc_channel<0, bool > *p_50_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_50->m_axi_wready.bind(*p_50_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_50_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_50_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_50->m_axi_bresp.bind(*p_50_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_50_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_50_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_50->m_axi_bvalid.bind(*p_50_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_50_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_50_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_50->m_axi_bready.bind(*p_50_m_axi_bready);
        p_50_m_axi_bready->set_sv_netview_offsetfromdp(10758952);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_50_m_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_50->m_axi_araddr.bind(*p_50_m_axi_araddr);
        p_50_m_axi_araddr->set_sv_netview_offsetfromdp(10759008);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_50_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_50->m_axi_arprot.bind(*p_50_m_axi_arprot);
        p_50_m_axi_arprot->set_sv_netview_offsetfromdp(10759064);
        xsim_sc_channel<0, bool > *p_50_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_50->m_axi_arvalid.bind(*p_50_m_axi_arvalid);
        p_50_m_axi_arvalid->set_sv_netview_offsetfromdp(10759120);
        xsim_sc_channel<0, bool > *p_50_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_50->m_axi_arready.bind(*p_50_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_50_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_50_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_50->m_axi_rdata.bind(*p_50_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_50_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_50_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_50->m_axi_rresp.bind(*p_50_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_50_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_50_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_50->m_axi_rvalid.bind(*p_50_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_50_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_50_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_50->m_axi_rready.bind(*p_50_m_axi_rready);
        p_50_m_axi_rready->set_sv_netview_offsetfromdp(10759400);
        sc_inst_51 = new bd_d216_interconnect_ddrmem_ctrl_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.memory.interconnect_ddrmem_ctrl");
        sc_inst_51->xsim_set_dbg_index(3062);
        xsim_sc_channel<0, bool > *p_51_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_51->aclk.bind(*p_51_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_51_aclk);
        xsim_sc_channel<0, bool > *p_51_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_51->aresetn.bind(*p_51_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_51_aresetn);
        xsim_sc_channel<31, sc_dt::sc_bv<31> > *p_51_s_axi_awaddr = new xsim_sc_channel<31, sc_dt::sc_bv<31> >();
        sc_inst_51->s_axi_awaddr.bind(*p_51_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_51_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_51->s_axi_awprot.bind(*p_51_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_awprot);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_51_s_axi_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_51->s_axi_awvalid.bind(*p_51_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_awvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_51_s_axi_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_51->s_axi_awready.bind(*p_51_s_axi_awready);
        p_51_s_axi_awready->set_sv_netview_offsetfromdp(10759784);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_51_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_51->s_axi_wdata.bind(*p_51_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_51_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_51->s_axi_wstrb.bind(*p_51_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_wstrb);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_51_s_axi_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_51->s_axi_wvalid.bind(*p_51_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_wvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_51_s_axi_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_51->s_axi_wready.bind(*p_51_s_axi_wready);
        p_51_s_axi_wready->set_sv_netview_offsetfromdp(10760008);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_51_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_51->s_axi_bresp.bind(*p_51_s_axi_bresp);
        p_51_s_axi_bresp->set_sv_netview_offsetfromdp(10760064);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_51_s_axi_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_51->s_axi_bvalid.bind(*p_51_s_axi_bvalid);
        p_51_s_axi_bvalid->set_sv_netview_offsetfromdp(10760120);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_51_s_axi_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_51->s_axi_bready.bind(*p_51_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_bready);
        xsim_sc_channel<31, sc_dt::sc_bv<31> > *p_51_s_axi_araddr = new xsim_sc_channel<31, sc_dt::sc_bv<31> >();
        sc_inst_51->s_axi_araddr.bind(*p_51_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_51_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_51->s_axi_arprot.bind(*p_51_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_arprot);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_51_s_axi_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_51->s_axi_arvalid.bind(*p_51_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_arvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_51_s_axi_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_51->s_axi_arready.bind(*p_51_s_axi_arready);
        p_51_s_axi_arready->set_sv_netview_offsetfromdp(10760400);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_51_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_51->s_axi_rdata.bind(*p_51_s_axi_rdata);
        p_51_s_axi_rdata->set_sv_netview_offsetfromdp(10760456);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_51_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_51->s_axi_rresp.bind(*p_51_s_axi_rresp);
        p_51_s_axi_rresp->set_sv_netview_offsetfromdp(10760512);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_51_s_axi_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_51->s_axi_rvalid.bind(*p_51_s_axi_rvalid);
        p_51_s_axi_rvalid->set_sv_netview_offsetfromdp(10760568);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_51_s_axi_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_51->s_axi_rready.bind(*p_51_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_rready);
        xsim_sc_channel<62, sc_dt::sc_bv<62> > *p_51_m_axi_awaddr = new xsim_sc_channel<62, sc_dt::sc_bv<62> >();
        sc_inst_51->m_axi_awaddr.bind(*p_51_m_axi_awaddr);
        p_51_m_axi_awaddr->set_sv_netview_offsetfromdp(10760680);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_51_m_axi_awprot = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_51->m_axi_awprot.bind(*p_51_m_axi_awprot);
        p_51_m_axi_awprot->set_sv_netview_offsetfromdp(10760736);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_51_m_axi_awvalid = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_51->m_axi_awvalid.bind(*p_51_m_axi_awvalid);
        p_51_m_axi_awvalid->set_sv_netview_offsetfromdp(10760792);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_51_m_axi_awready = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_51->m_axi_awready.bind(*p_51_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_51_m_axi_awready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_51_m_axi_wdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_51->m_axi_wdata.bind(*p_51_m_axi_wdata);
        p_51_m_axi_wdata->set_sv_netview_offsetfromdp(10760904);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_51_m_axi_wstrb = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_51->m_axi_wstrb.bind(*p_51_m_axi_wstrb);
        p_51_m_axi_wstrb->set_sv_netview_offsetfromdp(10760960);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_51_m_axi_wvalid = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_51->m_axi_wvalid.bind(*p_51_m_axi_wvalid);
        p_51_m_axi_wvalid->set_sv_netview_offsetfromdp(10761016);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_51_m_axi_wready = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_51->m_axi_wready.bind(*p_51_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_51_m_axi_wready);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_51_m_axi_bresp = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_51->m_axi_bresp.bind(*p_51_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_51_m_axi_bresp);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_51_m_axi_bvalid = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_51->m_axi_bvalid.bind(*p_51_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_51_m_axi_bvalid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_51_m_axi_bready = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_51->m_axi_bready.bind(*p_51_m_axi_bready);
        p_51_m_axi_bready->set_sv_netview_offsetfromdp(10761240);
        xsim_sc_channel<62, sc_dt::sc_bv<62> > *p_51_m_axi_araddr = new xsim_sc_channel<62, sc_dt::sc_bv<62> >();
        sc_inst_51->m_axi_araddr.bind(*p_51_m_axi_araddr);
        p_51_m_axi_araddr->set_sv_netview_offsetfromdp(10761296);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_51_m_axi_arprot = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_51->m_axi_arprot.bind(*p_51_m_axi_arprot);
        p_51_m_axi_arprot->set_sv_netview_offsetfromdp(10761352);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_51_m_axi_arvalid = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_51->m_axi_arvalid.bind(*p_51_m_axi_arvalid);
        p_51_m_axi_arvalid->set_sv_netview_offsetfromdp(10761408);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_51_m_axi_arready = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_51->m_axi_arready.bind(*p_51_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_51_m_axi_arready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_51_m_axi_rdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_51->m_axi_rdata.bind(*p_51_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_51_m_axi_rdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_51_m_axi_rresp = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_51->m_axi_rresp.bind(*p_51_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_51_m_axi_rresp);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_51_m_axi_rvalid = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_51->m_axi_rvalid.bind(*p_51_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_51_m_axi_rvalid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_51_m_axi_rready = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_51->m_axi_rready.bind(*p_51_m_axi_rready);
        p_51_m_axi_rready->set_sv_netview_offsetfromdp(10761688);
        sc_inst_52 = new bd_d216_plram_mem00_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.memory.plram_mem00");
        sc_inst_52->xsim_set_dbg_index(3063);
        xsim_sc_channel<0, bool > *p_52_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_52->s_axi_aclk.bind(*p_52_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_52_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_52_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_52->s_axi_aresetn.bind(*p_52_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_52_s_axi_aresetn);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_52_s_axi_awaddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_52->s_axi_awaddr.bind(*p_52_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_52_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_52_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_52->s_axi_awlen.bind(*p_52_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_52_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_52_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_52->s_axi_awsize.bind(*p_52_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_52_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_52_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_52->s_axi_awburst.bind(*p_52_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_52_s_axi_awburst);
        xsim_sc_channel<0, bool > *p_52_s_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_52->s_axi_awlock.bind(*p_52_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_52_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_52_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_52->s_axi_awcache.bind(*p_52_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_52_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_52_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_52->s_axi_awprot.bind(*p_52_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_52_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_52_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_52->s_axi_awvalid.bind(*p_52_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_52_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_52_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_52->s_axi_awready.bind(*p_52_s_axi_awready);
        p_52_s_axi_awready->set_sv_netview_offsetfromdp(10762352);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_52_s_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_52->s_axi_wdata.bind(*p_52_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_52_s_axi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_52_s_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_52->s_axi_wstrb.bind(*p_52_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_52_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_52_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_52->s_axi_wlast.bind(*p_52_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_52_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_52_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_52->s_axi_wvalid.bind(*p_52_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_52_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_52_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_52->s_axi_wready.bind(*p_52_s_axi_wready);
        p_52_s_axi_wready->set_sv_netview_offsetfromdp(10762632);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_52_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_52->s_axi_bresp.bind(*p_52_s_axi_bresp);
        p_52_s_axi_bresp->set_sv_netview_offsetfromdp(10762688);
        xsim_sc_channel<0, bool > *p_52_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_52->s_axi_bvalid.bind(*p_52_s_axi_bvalid);
        p_52_s_axi_bvalid->set_sv_netview_offsetfromdp(10762744);
        xsim_sc_channel<0, bool > *p_52_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_52->s_axi_bready.bind(*p_52_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_52_s_axi_bready);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_52_s_axi_araddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_52->s_axi_araddr.bind(*p_52_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_52_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_52_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_52->s_axi_arlen.bind(*p_52_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_52_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_52_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_52->s_axi_arsize.bind(*p_52_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_52_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_52_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_52->s_axi_arburst.bind(*p_52_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_52_s_axi_arburst);
        xsim_sc_channel<0, bool > *p_52_s_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_52->s_axi_arlock.bind(*p_52_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_52_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_52_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_52->s_axi_arcache.bind(*p_52_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_52_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_52_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_52->s_axi_arprot.bind(*p_52_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_52_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_52_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_52->s_axi_arvalid.bind(*p_52_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_52_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_52_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_52->s_axi_arready.bind(*p_52_s_axi_arready);
        p_52_s_axi_arready->set_sv_netview_offsetfromdp(10763304);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_52_s_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_52->s_axi_rdata.bind(*p_52_s_axi_rdata);
        p_52_s_axi_rdata->set_sv_netview_offsetfromdp(10763360);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_52_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_52->s_axi_rresp.bind(*p_52_s_axi_rresp);
        p_52_s_axi_rresp->set_sv_netview_offsetfromdp(10763416);
        xsim_sc_channel<0, bool > *p_52_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_52->s_axi_rlast.bind(*p_52_s_axi_rlast);
        p_52_s_axi_rlast->set_sv_netview_offsetfromdp(10763472);
        xsim_sc_channel<0, bool > *p_52_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_52->s_axi_rvalid.bind(*p_52_s_axi_rvalid);
        p_52_s_axi_rvalid->set_sv_netview_offsetfromdp(10763528);
        xsim_sc_channel<0, bool > *p_52_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_52->s_axi_rready.bind(*p_52_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_52_s_axi_rready);
        xsim_sc_channel<0, bool > *p_52_bram_rst_a = new xsim_sc_channel<0, bool >();
        sc_inst_52->bram_rst_a.bind(*p_52_bram_rst_a);
        p_52_bram_rst_a->set_sv_netview_offsetfromdp(10763640);
        xsim_sc_channel<0, bool > *p_52_bram_clk_a = new xsim_sc_channel<0, bool >();
        sc_inst_52->bram_clk_a.bind(*p_52_bram_clk_a);
        p_52_bram_clk_a->set_sv_netview_offsetfromdp(10763696);
        xsim_sc_channel<0, bool > *p_52_bram_en_a = new xsim_sc_channel<0, bool >();
        sc_inst_52->bram_en_a.bind(*p_52_bram_en_a);
        p_52_bram_en_a->set_sv_netview_offsetfromdp(10763752);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_52_bram_we_a = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_52->bram_we_a.bind(*p_52_bram_we_a);
        p_52_bram_we_a->set_sv_netview_offsetfromdp(10763808);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_52_bram_addr_a = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_52->bram_addr_a.bind(*p_52_bram_addr_a);
        p_52_bram_addr_a->set_sv_netview_offsetfromdp(10763864);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_52_bram_wrdata_a = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_52->bram_wrdata_a.bind(*p_52_bram_wrdata_a);
        p_52_bram_wrdata_a->set_sv_netview_offsetfromdp(10763920);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_52_bram_rddata_a = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_52->bram_rddata_a.bind(*p_52_bram_rddata_a);
        (*_glb_hdl_sc_channel_map).push_back(p_52_bram_rddata_a);
        xsim_sc_channel<0, bool > *p_52_bram_rst_b = new xsim_sc_channel<0, bool >();
        sc_inst_52->bram_rst_b.bind(*p_52_bram_rst_b);
        p_52_bram_rst_b->set_sv_netview_offsetfromdp(10764032);
        xsim_sc_channel<0, bool > *p_52_bram_clk_b = new xsim_sc_channel<0, bool >();
        sc_inst_52->bram_clk_b.bind(*p_52_bram_clk_b);
        p_52_bram_clk_b->set_sv_netview_offsetfromdp(10764088);
        xsim_sc_channel<0, bool > *p_52_bram_en_b = new xsim_sc_channel<0, bool >();
        sc_inst_52->bram_en_b.bind(*p_52_bram_en_b);
        p_52_bram_en_b->set_sv_netview_offsetfromdp(10764144);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_52_bram_we_b = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_52->bram_we_b.bind(*p_52_bram_we_b);
        p_52_bram_we_b->set_sv_netview_offsetfromdp(10764200);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_52_bram_addr_b = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_52->bram_addr_b.bind(*p_52_bram_addr_b);
        p_52_bram_addr_b->set_sv_netview_offsetfromdp(10764256);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_52_bram_wrdata_b = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_52->bram_wrdata_b.bind(*p_52_bram_wrdata_b);
        p_52_bram_wrdata_b->set_sv_netview_offsetfromdp(10764312);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_52_bram_rddata_b = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_52->bram_rddata_b.bind(*p_52_bram_rddata_b);
        (*_glb_hdl_sc_channel_map).push_back(p_52_bram_rddata_b);
        sc_inst_53 = new bd_d216_plram_mem01_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.memory.plram_mem01");
        sc_inst_53->xsim_set_dbg_index(3065);
        xsim_sc_channel<0, bool > *p_53_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_53->s_axi_aclk.bind(*p_53_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_53_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_53->s_axi_aresetn.bind(*p_53_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_aresetn);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_53_s_axi_awaddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_53->s_axi_awaddr.bind(*p_53_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_53_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_53->s_axi_awlen.bind(*p_53_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_53_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_53->s_axi_awsize.bind(*p_53_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_53_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_53->s_axi_awburst.bind(*p_53_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_awburst);
        xsim_sc_channel<0, bool > *p_53_s_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_53->s_axi_awlock.bind(*p_53_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_53_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_53->s_axi_awcache.bind(*p_53_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_53_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_53->s_axi_awprot.bind(*p_53_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_53_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_53->s_axi_awvalid.bind(*p_53_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_53_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_53->s_axi_awready.bind(*p_53_s_axi_awready);
        p_53_s_axi_awready->set_sv_netview_offsetfromdp(10826152);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_53_s_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_53->s_axi_wdata.bind(*p_53_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_53_s_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_53->s_axi_wstrb.bind(*p_53_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_53_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_53->s_axi_wlast.bind(*p_53_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_53_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_53->s_axi_wvalid.bind(*p_53_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_53_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_53->s_axi_wready.bind(*p_53_s_axi_wready);
        p_53_s_axi_wready->set_sv_netview_offsetfromdp(10826432);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_53_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_53->s_axi_bresp.bind(*p_53_s_axi_bresp);
        p_53_s_axi_bresp->set_sv_netview_offsetfromdp(10826488);
        xsim_sc_channel<0, bool > *p_53_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_53->s_axi_bvalid.bind(*p_53_s_axi_bvalid);
        p_53_s_axi_bvalid->set_sv_netview_offsetfromdp(10826544);
        xsim_sc_channel<0, bool > *p_53_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_53->s_axi_bready.bind(*p_53_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_bready);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_53_s_axi_araddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_53->s_axi_araddr.bind(*p_53_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_53_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_53->s_axi_arlen.bind(*p_53_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_53_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_53->s_axi_arsize.bind(*p_53_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_53_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_53->s_axi_arburst.bind(*p_53_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_arburst);
        xsim_sc_channel<0, bool > *p_53_s_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_53->s_axi_arlock.bind(*p_53_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_53_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_53->s_axi_arcache.bind(*p_53_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_53_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_53->s_axi_arprot.bind(*p_53_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_53_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_53->s_axi_arvalid.bind(*p_53_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_53_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_53->s_axi_arready.bind(*p_53_s_axi_arready);
        p_53_s_axi_arready->set_sv_netview_offsetfromdp(10827104);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_53_s_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_53->s_axi_rdata.bind(*p_53_s_axi_rdata);
        p_53_s_axi_rdata->set_sv_netview_offsetfromdp(10827160);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_53_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_53->s_axi_rresp.bind(*p_53_s_axi_rresp);
        p_53_s_axi_rresp->set_sv_netview_offsetfromdp(10827216);
        xsim_sc_channel<0, bool > *p_53_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_53->s_axi_rlast.bind(*p_53_s_axi_rlast);
        p_53_s_axi_rlast->set_sv_netview_offsetfromdp(10827272);
        xsim_sc_channel<0, bool > *p_53_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_53->s_axi_rvalid.bind(*p_53_s_axi_rvalid);
        p_53_s_axi_rvalid->set_sv_netview_offsetfromdp(10827328);
        xsim_sc_channel<0, bool > *p_53_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_53->s_axi_rready.bind(*p_53_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_rready);
        xsim_sc_channel<0, bool > *p_53_bram_rst_a = new xsim_sc_channel<0, bool >();
        sc_inst_53->bram_rst_a.bind(*p_53_bram_rst_a);
        p_53_bram_rst_a->set_sv_netview_offsetfromdp(10827440);
        xsim_sc_channel<0, bool > *p_53_bram_clk_a = new xsim_sc_channel<0, bool >();
        sc_inst_53->bram_clk_a.bind(*p_53_bram_clk_a);
        p_53_bram_clk_a->set_sv_netview_offsetfromdp(10827496);
        xsim_sc_channel<0, bool > *p_53_bram_en_a = new xsim_sc_channel<0, bool >();
        sc_inst_53->bram_en_a.bind(*p_53_bram_en_a);
        p_53_bram_en_a->set_sv_netview_offsetfromdp(10827552);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_53_bram_we_a = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_53->bram_we_a.bind(*p_53_bram_we_a);
        p_53_bram_we_a->set_sv_netview_offsetfromdp(10827608);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_53_bram_addr_a = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_53->bram_addr_a.bind(*p_53_bram_addr_a);
        p_53_bram_addr_a->set_sv_netview_offsetfromdp(10827664);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_53_bram_wrdata_a = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_53->bram_wrdata_a.bind(*p_53_bram_wrdata_a);
        p_53_bram_wrdata_a->set_sv_netview_offsetfromdp(10827720);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_53_bram_rddata_a = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_53->bram_rddata_a.bind(*p_53_bram_rddata_a);
        (*_glb_hdl_sc_channel_map).push_back(p_53_bram_rddata_a);
        xsim_sc_channel<0, bool > *p_53_bram_rst_b = new xsim_sc_channel<0, bool >();
        sc_inst_53->bram_rst_b.bind(*p_53_bram_rst_b);
        p_53_bram_rst_b->set_sv_netview_offsetfromdp(10827832);
        xsim_sc_channel<0, bool > *p_53_bram_clk_b = new xsim_sc_channel<0, bool >();
        sc_inst_53->bram_clk_b.bind(*p_53_bram_clk_b);
        p_53_bram_clk_b->set_sv_netview_offsetfromdp(10827888);
        xsim_sc_channel<0, bool > *p_53_bram_en_b = new xsim_sc_channel<0, bool >();
        sc_inst_53->bram_en_b.bind(*p_53_bram_en_b);
        p_53_bram_en_b->set_sv_netview_offsetfromdp(10827944);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_53_bram_we_b = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_53->bram_we_b.bind(*p_53_bram_we_b);
        p_53_bram_we_b->set_sv_netview_offsetfromdp(10828000);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_53_bram_addr_b = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_53->bram_addr_b.bind(*p_53_bram_addr_b);
        p_53_bram_addr_b->set_sv_netview_offsetfromdp(10828056);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_53_bram_wrdata_b = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_53->bram_wrdata_b.bind(*p_53_bram_wrdata_b);
        p_53_bram_wrdata_b->set_sv_netview_offsetfromdp(10828112);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_53_bram_rddata_b = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_53->bram_rddata_b.bind(*p_53_bram_rddata_b);
        (*_glb_hdl_sc_channel_map).push_back(p_53_bram_rddata_b);
        sc_inst_54 = new bd_d216_plram_mem02_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.memory.plram_mem02");
        sc_inst_54->xsim_set_dbg_index(3067);
        xsim_sc_channel<0, bool > *p_54_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_54->s_axi_aclk.bind(*p_54_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_54_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_54->s_axi_aresetn.bind(*p_54_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_aresetn);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_54_s_axi_awaddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_54->s_axi_awaddr.bind(*p_54_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_54_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_54->s_axi_awlen.bind(*p_54_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_54_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_54->s_axi_awsize.bind(*p_54_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_54_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_54->s_axi_awburst.bind(*p_54_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_awburst);
        xsim_sc_channel<0, bool > *p_54_s_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_54->s_axi_awlock.bind(*p_54_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_54_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_54->s_axi_awcache.bind(*p_54_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_54_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_54->s_axi_awprot.bind(*p_54_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_54_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_54->s_axi_awvalid.bind(*p_54_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_54_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_54->s_axi_awready.bind(*p_54_s_axi_awready);
        p_54_s_axi_awready->set_sv_netview_offsetfromdp(10889952);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_54_s_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_54->s_axi_wdata.bind(*p_54_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_54_s_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_54->s_axi_wstrb.bind(*p_54_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_54_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_54->s_axi_wlast.bind(*p_54_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_54_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_54->s_axi_wvalid.bind(*p_54_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_54_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_54->s_axi_wready.bind(*p_54_s_axi_wready);
        p_54_s_axi_wready->set_sv_netview_offsetfromdp(10890232);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_54_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_54->s_axi_bresp.bind(*p_54_s_axi_bresp);
        p_54_s_axi_bresp->set_sv_netview_offsetfromdp(10890288);
        xsim_sc_channel<0, bool > *p_54_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_54->s_axi_bvalid.bind(*p_54_s_axi_bvalid);
        p_54_s_axi_bvalid->set_sv_netview_offsetfromdp(10890344);
        xsim_sc_channel<0, bool > *p_54_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_54->s_axi_bready.bind(*p_54_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_bready);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_54_s_axi_araddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_54->s_axi_araddr.bind(*p_54_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_54_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_54->s_axi_arlen.bind(*p_54_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_54_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_54->s_axi_arsize.bind(*p_54_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_54_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_54->s_axi_arburst.bind(*p_54_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_arburst);
        xsim_sc_channel<0, bool > *p_54_s_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_54->s_axi_arlock.bind(*p_54_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_54_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_54->s_axi_arcache.bind(*p_54_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_54_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_54->s_axi_arprot.bind(*p_54_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_54_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_54->s_axi_arvalid.bind(*p_54_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_54_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_54->s_axi_arready.bind(*p_54_s_axi_arready);
        p_54_s_axi_arready->set_sv_netview_offsetfromdp(10890904);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_54_s_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_54->s_axi_rdata.bind(*p_54_s_axi_rdata);
        p_54_s_axi_rdata->set_sv_netview_offsetfromdp(10890960);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_54_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_54->s_axi_rresp.bind(*p_54_s_axi_rresp);
        p_54_s_axi_rresp->set_sv_netview_offsetfromdp(10891016);
        xsim_sc_channel<0, bool > *p_54_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_54->s_axi_rlast.bind(*p_54_s_axi_rlast);
        p_54_s_axi_rlast->set_sv_netview_offsetfromdp(10891072);
        xsim_sc_channel<0, bool > *p_54_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_54->s_axi_rvalid.bind(*p_54_s_axi_rvalid);
        p_54_s_axi_rvalid->set_sv_netview_offsetfromdp(10891128);
        xsim_sc_channel<0, bool > *p_54_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_54->s_axi_rready.bind(*p_54_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_rready);
        xsim_sc_channel<0, bool > *p_54_bram_rst_a = new xsim_sc_channel<0, bool >();
        sc_inst_54->bram_rst_a.bind(*p_54_bram_rst_a);
        p_54_bram_rst_a->set_sv_netview_offsetfromdp(10891240);
        xsim_sc_channel<0, bool > *p_54_bram_clk_a = new xsim_sc_channel<0, bool >();
        sc_inst_54->bram_clk_a.bind(*p_54_bram_clk_a);
        p_54_bram_clk_a->set_sv_netview_offsetfromdp(10891296);
        xsim_sc_channel<0, bool > *p_54_bram_en_a = new xsim_sc_channel<0, bool >();
        sc_inst_54->bram_en_a.bind(*p_54_bram_en_a);
        p_54_bram_en_a->set_sv_netview_offsetfromdp(10891352);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_54_bram_we_a = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_54->bram_we_a.bind(*p_54_bram_we_a);
        p_54_bram_we_a->set_sv_netview_offsetfromdp(10891408);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_54_bram_addr_a = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_54->bram_addr_a.bind(*p_54_bram_addr_a);
        p_54_bram_addr_a->set_sv_netview_offsetfromdp(10891464);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_54_bram_wrdata_a = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_54->bram_wrdata_a.bind(*p_54_bram_wrdata_a);
        p_54_bram_wrdata_a->set_sv_netview_offsetfromdp(10891520);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_54_bram_rddata_a = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_54->bram_rddata_a.bind(*p_54_bram_rddata_a);
        (*_glb_hdl_sc_channel_map).push_back(p_54_bram_rddata_a);
        xsim_sc_channel<0, bool > *p_54_bram_rst_b = new xsim_sc_channel<0, bool >();
        sc_inst_54->bram_rst_b.bind(*p_54_bram_rst_b);
        p_54_bram_rst_b->set_sv_netview_offsetfromdp(10891632);
        xsim_sc_channel<0, bool > *p_54_bram_clk_b = new xsim_sc_channel<0, bool >();
        sc_inst_54->bram_clk_b.bind(*p_54_bram_clk_b);
        p_54_bram_clk_b->set_sv_netview_offsetfromdp(10891688);
        xsim_sc_channel<0, bool > *p_54_bram_en_b = new xsim_sc_channel<0, bool >();
        sc_inst_54->bram_en_b.bind(*p_54_bram_en_b);
        p_54_bram_en_b->set_sv_netview_offsetfromdp(10891744);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_54_bram_we_b = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_54->bram_we_b.bind(*p_54_bram_we_b);
        p_54_bram_we_b->set_sv_netview_offsetfromdp(10891800);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_54_bram_addr_b = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_54->bram_addr_b.bind(*p_54_bram_addr_b);
        p_54_bram_addr_b->set_sv_netview_offsetfromdp(10891856);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_54_bram_wrdata_b = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_54->bram_wrdata_b.bind(*p_54_bram_wrdata_b);
        p_54_bram_wrdata_b->set_sv_netview_offsetfromdp(10891912);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_54_bram_rddata_b = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_54->bram_rddata_b.bind(*p_54_bram_rddata_b);
        (*_glb_hdl_sc_channel_map).push_back(p_54_bram_rddata_b);
        sc_inst_55 = new bd_d216_plram_mem03_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.memory.plram_mem03");
        sc_inst_55->xsim_set_dbg_index(3069);
        xsim_sc_channel<0, bool > *p_55_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_55->s_axi_aclk.bind(*p_55_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_55_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_55->s_axi_aresetn.bind(*p_55_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_aresetn);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_55_s_axi_awaddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_55->s_axi_awaddr.bind(*p_55_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_55_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_55->s_axi_awlen.bind(*p_55_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_55_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_55->s_axi_awsize.bind(*p_55_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_55_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_55->s_axi_awburst.bind(*p_55_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_awburst);
        xsim_sc_channel<0, bool > *p_55_s_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_55->s_axi_awlock.bind(*p_55_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_55_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_55->s_axi_awcache.bind(*p_55_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_55_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_55->s_axi_awprot.bind(*p_55_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_55_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_55->s_axi_awvalid.bind(*p_55_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_55_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_55->s_axi_awready.bind(*p_55_s_axi_awready);
        p_55_s_axi_awready->set_sv_netview_offsetfromdp(10953752);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_55_s_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_55->s_axi_wdata.bind(*p_55_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_55_s_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_55->s_axi_wstrb.bind(*p_55_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_55_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_55->s_axi_wlast.bind(*p_55_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_55_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_55->s_axi_wvalid.bind(*p_55_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_55_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_55->s_axi_wready.bind(*p_55_s_axi_wready);
        p_55_s_axi_wready->set_sv_netview_offsetfromdp(10954032);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_55_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_55->s_axi_bresp.bind(*p_55_s_axi_bresp);
        p_55_s_axi_bresp->set_sv_netview_offsetfromdp(10954088);
        xsim_sc_channel<0, bool > *p_55_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_55->s_axi_bvalid.bind(*p_55_s_axi_bvalid);
        p_55_s_axi_bvalid->set_sv_netview_offsetfromdp(10954144);
        xsim_sc_channel<0, bool > *p_55_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_55->s_axi_bready.bind(*p_55_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_bready);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_55_s_axi_araddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_55->s_axi_araddr.bind(*p_55_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_55_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_55->s_axi_arlen.bind(*p_55_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_55_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_55->s_axi_arsize.bind(*p_55_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_55_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_55->s_axi_arburst.bind(*p_55_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_arburst);
        xsim_sc_channel<0, bool > *p_55_s_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_55->s_axi_arlock.bind(*p_55_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_55_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_55->s_axi_arcache.bind(*p_55_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_55_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_55->s_axi_arprot.bind(*p_55_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_55_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_55->s_axi_arvalid.bind(*p_55_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_55_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_55->s_axi_arready.bind(*p_55_s_axi_arready);
        p_55_s_axi_arready->set_sv_netview_offsetfromdp(10954704);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_55_s_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_55->s_axi_rdata.bind(*p_55_s_axi_rdata);
        p_55_s_axi_rdata->set_sv_netview_offsetfromdp(10954760);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_55_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_55->s_axi_rresp.bind(*p_55_s_axi_rresp);
        p_55_s_axi_rresp->set_sv_netview_offsetfromdp(10954816);
        xsim_sc_channel<0, bool > *p_55_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_55->s_axi_rlast.bind(*p_55_s_axi_rlast);
        p_55_s_axi_rlast->set_sv_netview_offsetfromdp(10954872);
        xsim_sc_channel<0, bool > *p_55_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_55->s_axi_rvalid.bind(*p_55_s_axi_rvalid);
        p_55_s_axi_rvalid->set_sv_netview_offsetfromdp(10954928);
        xsim_sc_channel<0, bool > *p_55_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_55->s_axi_rready.bind(*p_55_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_rready);
        xsim_sc_channel<0, bool > *p_55_bram_rst_a = new xsim_sc_channel<0, bool >();
        sc_inst_55->bram_rst_a.bind(*p_55_bram_rst_a);
        p_55_bram_rst_a->set_sv_netview_offsetfromdp(10955040);
        xsim_sc_channel<0, bool > *p_55_bram_clk_a = new xsim_sc_channel<0, bool >();
        sc_inst_55->bram_clk_a.bind(*p_55_bram_clk_a);
        p_55_bram_clk_a->set_sv_netview_offsetfromdp(10955096);
        xsim_sc_channel<0, bool > *p_55_bram_en_a = new xsim_sc_channel<0, bool >();
        sc_inst_55->bram_en_a.bind(*p_55_bram_en_a);
        p_55_bram_en_a->set_sv_netview_offsetfromdp(10955152);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_55_bram_we_a = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_55->bram_we_a.bind(*p_55_bram_we_a);
        p_55_bram_we_a->set_sv_netview_offsetfromdp(10955208);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_55_bram_addr_a = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_55->bram_addr_a.bind(*p_55_bram_addr_a);
        p_55_bram_addr_a->set_sv_netview_offsetfromdp(10955264);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_55_bram_wrdata_a = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_55->bram_wrdata_a.bind(*p_55_bram_wrdata_a);
        p_55_bram_wrdata_a->set_sv_netview_offsetfromdp(10955320);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_55_bram_rddata_a = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_55->bram_rddata_a.bind(*p_55_bram_rddata_a);
        (*_glb_hdl_sc_channel_map).push_back(p_55_bram_rddata_a);
        xsim_sc_channel<0, bool > *p_55_bram_rst_b = new xsim_sc_channel<0, bool >();
        sc_inst_55->bram_rst_b.bind(*p_55_bram_rst_b);
        p_55_bram_rst_b->set_sv_netview_offsetfromdp(10955432);
        xsim_sc_channel<0, bool > *p_55_bram_clk_b = new xsim_sc_channel<0, bool >();
        sc_inst_55->bram_clk_b.bind(*p_55_bram_clk_b);
        p_55_bram_clk_b->set_sv_netview_offsetfromdp(10955488);
        xsim_sc_channel<0, bool > *p_55_bram_en_b = new xsim_sc_channel<0, bool >();
        sc_inst_55->bram_en_b.bind(*p_55_bram_en_b);
        p_55_bram_en_b->set_sv_netview_offsetfromdp(10955544);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_55_bram_we_b = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_55->bram_we_b.bind(*p_55_bram_we_b);
        p_55_bram_we_b->set_sv_netview_offsetfromdp(10955600);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_55_bram_addr_b = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_55->bram_addr_b.bind(*p_55_bram_addr_b);
        p_55_bram_addr_b->set_sv_netview_offsetfromdp(10955656);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_55_bram_wrdata_b = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_55->bram_wrdata_b.bind(*p_55_bram_wrdata_b);
        p_55_bram_wrdata_b->set_sv_netview_offsetfromdp(10955712);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_55_bram_rddata_b = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_55->bram_rddata_b.bind(*p_55_bram_rddata_b);
        (*_glb_hdl_sc_channel_map).push_back(p_55_bram_rddata_b);
        sc_inst_56 = new bd_d216_plram_mem04_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.memory.plram_mem04");
        sc_inst_56->xsim_set_dbg_index(3071);
        xsim_sc_channel<0, bool > *p_56_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_56->s_axi_aclk.bind(*p_56_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_56_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_56->s_axi_aresetn.bind(*p_56_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_aresetn);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_56_s_axi_awaddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_56->s_axi_awaddr.bind(*p_56_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_56_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_56->s_axi_awlen.bind(*p_56_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_56_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_56->s_axi_awsize.bind(*p_56_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_56_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_56->s_axi_awburst.bind(*p_56_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_awburst);
        xsim_sc_channel<0, bool > *p_56_s_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_56->s_axi_awlock.bind(*p_56_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_56_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_56->s_axi_awcache.bind(*p_56_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_56_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_56->s_axi_awprot.bind(*p_56_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_56_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_56->s_axi_awvalid.bind(*p_56_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_56_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_56->s_axi_awready.bind(*p_56_s_axi_awready);
        p_56_s_axi_awready->set_sv_netview_offsetfromdp(11017552);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_56_s_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_56->s_axi_wdata.bind(*p_56_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_56_s_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_56->s_axi_wstrb.bind(*p_56_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_56_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_56->s_axi_wlast.bind(*p_56_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_56_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_56->s_axi_wvalid.bind(*p_56_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_56_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_56->s_axi_wready.bind(*p_56_s_axi_wready);
        p_56_s_axi_wready->set_sv_netview_offsetfromdp(11017832);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_56_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_56->s_axi_bresp.bind(*p_56_s_axi_bresp);
        p_56_s_axi_bresp->set_sv_netview_offsetfromdp(11017888);
        xsim_sc_channel<0, bool > *p_56_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_56->s_axi_bvalid.bind(*p_56_s_axi_bvalid);
        p_56_s_axi_bvalid->set_sv_netview_offsetfromdp(11017944);
        xsim_sc_channel<0, bool > *p_56_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_56->s_axi_bready.bind(*p_56_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_bready);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_56_s_axi_araddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_56->s_axi_araddr.bind(*p_56_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_56_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_56->s_axi_arlen.bind(*p_56_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_56_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_56->s_axi_arsize.bind(*p_56_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_56_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_56->s_axi_arburst.bind(*p_56_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_arburst);
        xsim_sc_channel<0, bool > *p_56_s_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_56->s_axi_arlock.bind(*p_56_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_56_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_56->s_axi_arcache.bind(*p_56_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_56_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_56->s_axi_arprot.bind(*p_56_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_56_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_56->s_axi_arvalid.bind(*p_56_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_56_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_56->s_axi_arready.bind(*p_56_s_axi_arready);
        p_56_s_axi_arready->set_sv_netview_offsetfromdp(11018504);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_56_s_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_56->s_axi_rdata.bind(*p_56_s_axi_rdata);
        p_56_s_axi_rdata->set_sv_netview_offsetfromdp(11018560);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_56_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_56->s_axi_rresp.bind(*p_56_s_axi_rresp);
        p_56_s_axi_rresp->set_sv_netview_offsetfromdp(11018616);
        xsim_sc_channel<0, bool > *p_56_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_56->s_axi_rlast.bind(*p_56_s_axi_rlast);
        p_56_s_axi_rlast->set_sv_netview_offsetfromdp(11018672);
        xsim_sc_channel<0, bool > *p_56_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_56->s_axi_rvalid.bind(*p_56_s_axi_rvalid);
        p_56_s_axi_rvalid->set_sv_netview_offsetfromdp(11018728);
        xsim_sc_channel<0, bool > *p_56_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_56->s_axi_rready.bind(*p_56_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_rready);
        xsim_sc_channel<0, bool > *p_56_bram_rst_a = new xsim_sc_channel<0, bool >();
        sc_inst_56->bram_rst_a.bind(*p_56_bram_rst_a);
        p_56_bram_rst_a->set_sv_netview_offsetfromdp(11018840);
        xsim_sc_channel<0, bool > *p_56_bram_clk_a = new xsim_sc_channel<0, bool >();
        sc_inst_56->bram_clk_a.bind(*p_56_bram_clk_a);
        p_56_bram_clk_a->set_sv_netview_offsetfromdp(11018896);
        xsim_sc_channel<0, bool > *p_56_bram_en_a = new xsim_sc_channel<0, bool >();
        sc_inst_56->bram_en_a.bind(*p_56_bram_en_a);
        p_56_bram_en_a->set_sv_netview_offsetfromdp(11018952);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_56_bram_we_a = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_56->bram_we_a.bind(*p_56_bram_we_a);
        p_56_bram_we_a->set_sv_netview_offsetfromdp(11019008);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_56_bram_addr_a = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_56->bram_addr_a.bind(*p_56_bram_addr_a);
        p_56_bram_addr_a->set_sv_netview_offsetfromdp(11019064);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_56_bram_wrdata_a = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_56->bram_wrdata_a.bind(*p_56_bram_wrdata_a);
        p_56_bram_wrdata_a->set_sv_netview_offsetfromdp(11019120);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_56_bram_rddata_a = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_56->bram_rddata_a.bind(*p_56_bram_rddata_a);
        (*_glb_hdl_sc_channel_map).push_back(p_56_bram_rddata_a);
        xsim_sc_channel<0, bool > *p_56_bram_rst_b = new xsim_sc_channel<0, bool >();
        sc_inst_56->bram_rst_b.bind(*p_56_bram_rst_b);
        p_56_bram_rst_b->set_sv_netview_offsetfromdp(11019232);
        xsim_sc_channel<0, bool > *p_56_bram_clk_b = new xsim_sc_channel<0, bool >();
        sc_inst_56->bram_clk_b.bind(*p_56_bram_clk_b);
        p_56_bram_clk_b->set_sv_netview_offsetfromdp(11019288);
        xsim_sc_channel<0, bool > *p_56_bram_en_b = new xsim_sc_channel<0, bool >();
        sc_inst_56->bram_en_b.bind(*p_56_bram_en_b);
        p_56_bram_en_b->set_sv_netview_offsetfromdp(11019344);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_56_bram_we_b = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_56->bram_we_b.bind(*p_56_bram_we_b);
        p_56_bram_we_b->set_sv_netview_offsetfromdp(11019400);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_56_bram_addr_b = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_56->bram_addr_b.bind(*p_56_bram_addr_b);
        p_56_bram_addr_b->set_sv_netview_offsetfromdp(11019456);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_56_bram_wrdata_b = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_56->bram_wrdata_b.bind(*p_56_bram_wrdata_b);
        p_56_bram_wrdata_b->set_sv_netview_offsetfromdp(11019512);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_56_bram_rddata_b = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_56->bram_rddata_b.bind(*p_56_bram_rddata_b);
        (*_glb_hdl_sc_channel_map).push_back(p_56_bram_rddata_b);
        sc_inst_57 = new bd_d216_plram_mem05_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.memory.plram_mem05");
        sc_inst_57->xsim_set_dbg_index(3073);
        xsim_sc_channel<0, bool > *p_57_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_57->s_axi_aclk.bind(*p_57_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_57_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_57->s_axi_aresetn.bind(*p_57_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_aresetn);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_57_s_axi_awaddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_57->s_axi_awaddr.bind(*p_57_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_57_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_57->s_axi_awlen.bind(*p_57_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_57_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_57->s_axi_awsize.bind(*p_57_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_57_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_57->s_axi_awburst.bind(*p_57_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_awburst);
        xsim_sc_channel<0, bool > *p_57_s_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_57->s_axi_awlock.bind(*p_57_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_57_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_57->s_axi_awcache.bind(*p_57_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_57_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_57->s_axi_awprot.bind(*p_57_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_57_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_57->s_axi_awvalid.bind(*p_57_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_57_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_57->s_axi_awready.bind(*p_57_s_axi_awready);
        p_57_s_axi_awready->set_sv_netview_offsetfromdp(11081352);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_57_s_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_57->s_axi_wdata.bind(*p_57_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_57_s_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_57->s_axi_wstrb.bind(*p_57_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_57_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_57->s_axi_wlast.bind(*p_57_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_57_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_57->s_axi_wvalid.bind(*p_57_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_57_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_57->s_axi_wready.bind(*p_57_s_axi_wready);
        p_57_s_axi_wready->set_sv_netview_offsetfromdp(11081632);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_57_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_57->s_axi_bresp.bind(*p_57_s_axi_bresp);
        p_57_s_axi_bresp->set_sv_netview_offsetfromdp(11081688);
        xsim_sc_channel<0, bool > *p_57_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_57->s_axi_bvalid.bind(*p_57_s_axi_bvalid);
        p_57_s_axi_bvalid->set_sv_netview_offsetfromdp(11081744);
        xsim_sc_channel<0, bool > *p_57_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_57->s_axi_bready.bind(*p_57_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_bready);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_57_s_axi_araddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_57->s_axi_araddr.bind(*p_57_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_57_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_57->s_axi_arlen.bind(*p_57_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_57_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_57->s_axi_arsize.bind(*p_57_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_57_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_57->s_axi_arburst.bind(*p_57_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_arburst);
        xsim_sc_channel<0, bool > *p_57_s_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_57->s_axi_arlock.bind(*p_57_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_57_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_57->s_axi_arcache.bind(*p_57_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_57_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_57->s_axi_arprot.bind(*p_57_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_57_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_57->s_axi_arvalid.bind(*p_57_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_57_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_57->s_axi_arready.bind(*p_57_s_axi_arready);
        p_57_s_axi_arready->set_sv_netview_offsetfromdp(11082304);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_57_s_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_57->s_axi_rdata.bind(*p_57_s_axi_rdata);
        p_57_s_axi_rdata->set_sv_netview_offsetfromdp(11082360);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_57_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_57->s_axi_rresp.bind(*p_57_s_axi_rresp);
        p_57_s_axi_rresp->set_sv_netview_offsetfromdp(11082416);
        xsim_sc_channel<0, bool > *p_57_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_57->s_axi_rlast.bind(*p_57_s_axi_rlast);
        p_57_s_axi_rlast->set_sv_netview_offsetfromdp(11082472);
        xsim_sc_channel<0, bool > *p_57_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_57->s_axi_rvalid.bind(*p_57_s_axi_rvalid);
        p_57_s_axi_rvalid->set_sv_netview_offsetfromdp(11082528);
        xsim_sc_channel<0, bool > *p_57_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_57->s_axi_rready.bind(*p_57_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_rready);
        xsim_sc_channel<0, bool > *p_57_bram_rst_a = new xsim_sc_channel<0, bool >();
        sc_inst_57->bram_rst_a.bind(*p_57_bram_rst_a);
        p_57_bram_rst_a->set_sv_netview_offsetfromdp(11082640);
        xsim_sc_channel<0, bool > *p_57_bram_clk_a = new xsim_sc_channel<0, bool >();
        sc_inst_57->bram_clk_a.bind(*p_57_bram_clk_a);
        p_57_bram_clk_a->set_sv_netview_offsetfromdp(11082696);
        xsim_sc_channel<0, bool > *p_57_bram_en_a = new xsim_sc_channel<0, bool >();
        sc_inst_57->bram_en_a.bind(*p_57_bram_en_a);
        p_57_bram_en_a->set_sv_netview_offsetfromdp(11082752);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_57_bram_we_a = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_57->bram_we_a.bind(*p_57_bram_we_a);
        p_57_bram_we_a->set_sv_netview_offsetfromdp(11082808);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_57_bram_addr_a = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_57->bram_addr_a.bind(*p_57_bram_addr_a);
        p_57_bram_addr_a->set_sv_netview_offsetfromdp(11082864);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_57_bram_wrdata_a = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_57->bram_wrdata_a.bind(*p_57_bram_wrdata_a);
        p_57_bram_wrdata_a->set_sv_netview_offsetfromdp(11082920);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_57_bram_rddata_a = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_57->bram_rddata_a.bind(*p_57_bram_rddata_a);
        (*_glb_hdl_sc_channel_map).push_back(p_57_bram_rddata_a);
        xsim_sc_channel<0, bool > *p_57_bram_rst_b = new xsim_sc_channel<0, bool >();
        sc_inst_57->bram_rst_b.bind(*p_57_bram_rst_b);
        p_57_bram_rst_b->set_sv_netview_offsetfromdp(11083032);
        xsim_sc_channel<0, bool > *p_57_bram_clk_b = new xsim_sc_channel<0, bool >();
        sc_inst_57->bram_clk_b.bind(*p_57_bram_clk_b);
        p_57_bram_clk_b->set_sv_netview_offsetfromdp(11083088);
        xsim_sc_channel<0, bool > *p_57_bram_en_b = new xsim_sc_channel<0, bool >();
        sc_inst_57->bram_en_b.bind(*p_57_bram_en_b);
        p_57_bram_en_b->set_sv_netview_offsetfromdp(11083144);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_57_bram_we_b = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_57->bram_we_b.bind(*p_57_bram_we_b);
        p_57_bram_we_b->set_sv_netview_offsetfromdp(11083200);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_57_bram_addr_b = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_57->bram_addr_b.bind(*p_57_bram_addr_b);
        p_57_bram_addr_b->set_sv_netview_offsetfromdp(11083256);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_57_bram_wrdata_b = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_57->bram_wrdata_b.bind(*p_57_bram_wrdata_b);
        p_57_bram_wrdata_b->set_sv_netview_offsetfromdp(11083312);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_57_bram_rddata_b = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_57->bram_rddata_b.bind(*p_57_bram_rddata_b);
        (*_glb_hdl_sc_channel_map).push_back(p_57_bram_rddata_b);
        sc_inst_58 = new pfm_dynamic_sci(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.pfm_dynamic_sci_inst");
        sc_inst_58->xsim_set_dbg_index(63);
        sc_inst_59 = new pfm_dynamic_profile_vip_0_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.profile_vip_0");
        sc_inst_59->xsim_set_dbg_index(64);
        xsim_sc_channel<0, bool > *p_59_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_59->aclk.bind(*p_59_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_59_aclk);
        xsim_sc_channel<0, bool > *p_59_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_59->aresetn.bind(*p_59_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_59_aresetn);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_59_s_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_59->s_axi_awaddr.bind(*p_59_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_59_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_59_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_59->s_axi_awlen.bind(*p_59_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_59_s_axi_awlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_59_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_59->s_axi_awburst.bind(*p_59_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_59_s_axi_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_59_s_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_59->s_axi_awlock.bind(*p_59_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_59_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_59_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_59->s_axi_awcache.bind(*p_59_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_59_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_59_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_59->s_axi_awprot.bind(*p_59_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_59_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_59_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_59->s_axi_awqos.bind(*p_59_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_59_s_axi_awqos);
        xsim_sc_channel<0, bool > *p_59_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_59->s_axi_awvalid.bind(*p_59_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_59_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_59_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_59->s_axi_awready.bind(*p_59_s_axi_awready);
        p_59_s_axi_awready->set_sv_netview_offsetfromdp(11429280);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_59_s_axi_wdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_59->s_axi_wdata.bind(*p_59_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_59_s_axi_wdata);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_59_s_axi_wstrb = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_59->s_axi_wstrb.bind(*p_59_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_59_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_59_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_59->s_axi_wlast.bind(*p_59_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_59_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_59_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_59->s_axi_wvalid.bind(*p_59_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_59_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_59_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_59->s_axi_wready.bind(*p_59_s_axi_wready);
        p_59_s_axi_wready->set_sv_netview_offsetfromdp(11429560);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_59_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_59->s_axi_bresp.bind(*p_59_s_axi_bresp);
        p_59_s_axi_bresp->set_sv_netview_offsetfromdp(11429616);
        xsim_sc_channel<0, bool > *p_59_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_59->s_axi_bvalid.bind(*p_59_s_axi_bvalid);
        p_59_s_axi_bvalid->set_sv_netview_offsetfromdp(11429672);
        xsim_sc_channel<0, bool > *p_59_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_59->s_axi_bready.bind(*p_59_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_59_s_axi_bready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_59_s_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_59->s_axi_araddr.bind(*p_59_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_59_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_59_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_59->s_axi_arlen.bind(*p_59_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_59_s_axi_arlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_59_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_59->s_axi_arburst.bind(*p_59_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_59_s_axi_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_59_s_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_59->s_axi_arlock.bind(*p_59_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_59_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_59_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_59->s_axi_arcache.bind(*p_59_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_59_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_59_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_59->s_axi_arprot.bind(*p_59_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_59_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_59_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_59->s_axi_arqos.bind(*p_59_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_59_s_axi_arqos);
        xsim_sc_channel<0, bool > *p_59_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_59->s_axi_arvalid.bind(*p_59_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_59_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_59_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_59->s_axi_arready.bind(*p_59_s_axi_arready);
        p_59_s_axi_arready->set_sv_netview_offsetfromdp(11430232);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_59_s_axi_rdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_59->s_axi_rdata.bind(*p_59_s_axi_rdata);
        p_59_s_axi_rdata->set_sv_netview_offsetfromdp(11430288);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_59_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_59->s_axi_rresp.bind(*p_59_s_axi_rresp);
        p_59_s_axi_rresp->set_sv_netview_offsetfromdp(11430344);
        xsim_sc_channel<0, bool > *p_59_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_59->s_axi_rlast.bind(*p_59_s_axi_rlast);
        p_59_s_axi_rlast->set_sv_netview_offsetfromdp(11430400);
        xsim_sc_channel<0, bool > *p_59_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_59->s_axi_rvalid.bind(*p_59_s_axi_rvalid);
        p_59_s_axi_rvalid->set_sv_netview_offsetfromdp(11430456);
        xsim_sc_channel<0, bool > *p_59_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_59->s_axi_rready.bind(*p_59_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_59_s_axi_rready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_59_m_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_59->m_axi_awaddr.bind(*p_59_m_axi_awaddr);
        p_59_m_axi_awaddr->set_sv_netview_offsetfromdp(11430568);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_59_m_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_59->m_axi_awlen.bind(*p_59_m_axi_awlen);
        p_59_m_axi_awlen->set_sv_netview_offsetfromdp(11430624);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_59_m_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_59->m_axi_awburst.bind(*p_59_m_axi_awburst);
        p_59_m_axi_awburst->set_sv_netview_offsetfromdp(11430680);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_59_m_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_59->m_axi_awlock.bind(*p_59_m_axi_awlock);
        p_59_m_axi_awlock->set_sv_netview_offsetfromdp(11430736);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_59_m_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_59->m_axi_awcache.bind(*p_59_m_axi_awcache);
        p_59_m_axi_awcache->set_sv_netview_offsetfromdp(11430792);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_59_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_59->m_axi_awprot.bind(*p_59_m_axi_awprot);
        p_59_m_axi_awprot->set_sv_netview_offsetfromdp(11430848);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_59_m_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_59->m_axi_awqos.bind(*p_59_m_axi_awqos);
        p_59_m_axi_awqos->set_sv_netview_offsetfromdp(11430904);
        xsim_sc_channel<0, bool > *p_59_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_59->m_axi_awvalid.bind(*p_59_m_axi_awvalid);
        p_59_m_axi_awvalid->set_sv_netview_offsetfromdp(11430960);
        xsim_sc_channel<0, bool > *p_59_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_59->m_axi_awready.bind(*p_59_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_59_m_axi_awready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_59_m_axi_wdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_59->m_axi_wdata.bind(*p_59_m_axi_wdata);
        p_59_m_axi_wdata->set_sv_netview_offsetfromdp(11431072);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_59_m_axi_wstrb = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_59->m_axi_wstrb.bind(*p_59_m_axi_wstrb);
        p_59_m_axi_wstrb->set_sv_netview_offsetfromdp(11431128);
        xsim_sc_channel<0, bool > *p_59_m_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_59->m_axi_wlast.bind(*p_59_m_axi_wlast);
        p_59_m_axi_wlast->set_sv_netview_offsetfromdp(11431184);
        xsim_sc_channel<0, bool > *p_59_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_59->m_axi_wvalid.bind(*p_59_m_axi_wvalid);
        p_59_m_axi_wvalid->set_sv_netview_offsetfromdp(11431240);
        xsim_sc_channel<0, bool > *p_59_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_59->m_axi_wready.bind(*p_59_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_59_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_59_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_59->m_axi_bresp.bind(*p_59_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_59_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_59_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_59->m_axi_bvalid.bind(*p_59_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_59_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_59_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_59->m_axi_bready.bind(*p_59_m_axi_bready);
        p_59_m_axi_bready->set_sv_netview_offsetfromdp(11431464);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_59_m_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_59->m_axi_araddr.bind(*p_59_m_axi_araddr);
        p_59_m_axi_araddr->set_sv_netview_offsetfromdp(11431520);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_59_m_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_59->m_axi_arlen.bind(*p_59_m_axi_arlen);
        p_59_m_axi_arlen->set_sv_netview_offsetfromdp(11431576);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_59_m_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_59->m_axi_arburst.bind(*p_59_m_axi_arburst);
        p_59_m_axi_arburst->set_sv_netview_offsetfromdp(11431632);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_59_m_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_59->m_axi_arlock.bind(*p_59_m_axi_arlock);
        p_59_m_axi_arlock->set_sv_netview_offsetfromdp(11431688);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_59_m_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_59->m_axi_arcache.bind(*p_59_m_axi_arcache);
        p_59_m_axi_arcache->set_sv_netview_offsetfromdp(11431744);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_59_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_59->m_axi_arprot.bind(*p_59_m_axi_arprot);
        p_59_m_axi_arprot->set_sv_netview_offsetfromdp(11431800);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_59_m_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_59->m_axi_arqos.bind(*p_59_m_axi_arqos);
        p_59_m_axi_arqos->set_sv_netview_offsetfromdp(11431856);
        xsim_sc_channel<0, bool > *p_59_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_59->m_axi_arvalid.bind(*p_59_m_axi_arvalid);
        p_59_m_axi_arvalid->set_sv_netview_offsetfromdp(11431912);
        xsim_sc_channel<0, bool > *p_59_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_59->m_axi_arready.bind(*p_59_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_59_m_axi_arready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_59_m_axi_rdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_59->m_axi_rdata.bind(*p_59_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_59_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_59_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_59->m_axi_rresp.bind(*p_59_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_59_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_59_m_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_59->m_axi_rlast.bind(*p_59_m_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_59_m_axi_rlast);
        xsim_sc_channel<0, bool > *p_59_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_59->m_axi_rvalid.bind(*p_59_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_59_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_59_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_59->m_axi_rready.bind(*p_59_m_axi_rready);
        p_59_m_axi_rready->set_sv_netview_offsetfromdp(11432248);
        sc_inst_60 = new pfm_dynamic_m01_regslice_4(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.slr0.interconnect_axilite_user_0.m01_couplers.m01_regslice");
        sc_inst_60->xsim_set_dbg_index(3552);
        xsim_sc_channel<0, bool > *p_60_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_60->aclk.bind(*p_60_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_60_aclk);
        xsim_sc_channel<0, bool > *p_60_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_60->aresetn.bind(*p_60_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_60_aresetn);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_60_s_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_60->s_axi_awaddr.bind(*p_60_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_60_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_60_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_60->s_axi_awprot.bind(*p_60_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_60_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_60_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_60->s_axi_awvalid.bind(*p_60_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_60_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_60_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_60->s_axi_awready.bind(*p_60_s_axi_awready);
        p_60_s_axi_awready->set_sv_netview_offsetfromdp(11708784);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_60_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_60->s_axi_wdata.bind(*p_60_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_60_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_60_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_60->s_axi_wstrb.bind(*p_60_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_60_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_60_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_60->s_axi_wvalid.bind(*p_60_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_60_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_60_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_60->s_axi_wready.bind(*p_60_s_axi_wready);
        p_60_s_axi_wready->set_sv_netview_offsetfromdp(11709008);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_60_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_60->s_axi_bresp.bind(*p_60_s_axi_bresp);
        p_60_s_axi_bresp->set_sv_netview_offsetfromdp(11709064);
        xsim_sc_channel<0, bool > *p_60_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_60->s_axi_bvalid.bind(*p_60_s_axi_bvalid);
        p_60_s_axi_bvalid->set_sv_netview_offsetfromdp(11709120);
        xsim_sc_channel<0, bool > *p_60_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_60->s_axi_bready.bind(*p_60_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_60_s_axi_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_60_s_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_60->s_axi_araddr.bind(*p_60_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_60_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_60_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_60->s_axi_arprot.bind(*p_60_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_60_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_60_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_60->s_axi_arvalid.bind(*p_60_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_60_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_60_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_60->s_axi_arready.bind(*p_60_s_axi_arready);
        p_60_s_axi_arready->set_sv_netview_offsetfromdp(11709400);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_60_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_60->s_axi_rdata.bind(*p_60_s_axi_rdata);
        p_60_s_axi_rdata->set_sv_netview_offsetfromdp(11709456);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_60_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_60->s_axi_rresp.bind(*p_60_s_axi_rresp);
        p_60_s_axi_rresp->set_sv_netview_offsetfromdp(11709512);
        xsim_sc_channel<0, bool > *p_60_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_60->s_axi_rvalid.bind(*p_60_s_axi_rvalid);
        p_60_s_axi_rvalid->set_sv_netview_offsetfromdp(11709568);
        xsim_sc_channel<0, bool > *p_60_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_60->s_axi_rready.bind(*p_60_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_60_s_axi_rready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_60_m_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_60->m_axi_awaddr.bind(*p_60_m_axi_awaddr);
        p_60_m_axi_awaddr->set_sv_netview_offsetfromdp(11709680);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_60_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_60->m_axi_awprot.bind(*p_60_m_axi_awprot);
        p_60_m_axi_awprot->set_sv_netview_offsetfromdp(11709736);
        xsim_sc_channel<0, bool > *p_60_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_60->m_axi_awvalid.bind(*p_60_m_axi_awvalid);
        p_60_m_axi_awvalid->set_sv_netview_offsetfromdp(11709792);
        xsim_sc_channel<0, bool > *p_60_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_60->m_axi_awready.bind(*p_60_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_60_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_60_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_60->m_axi_wdata.bind(*p_60_m_axi_wdata);
        p_60_m_axi_wdata->set_sv_netview_offsetfromdp(11709904);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_60_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_60->m_axi_wstrb.bind(*p_60_m_axi_wstrb);
        p_60_m_axi_wstrb->set_sv_netview_offsetfromdp(11709960);
        xsim_sc_channel<0, bool > *p_60_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_60->m_axi_wvalid.bind(*p_60_m_axi_wvalid);
        p_60_m_axi_wvalid->set_sv_netview_offsetfromdp(11710016);
        xsim_sc_channel<0, bool > *p_60_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_60->m_axi_wready.bind(*p_60_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_60_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_60_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_60->m_axi_bresp.bind(*p_60_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_60_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_60_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_60->m_axi_bvalid.bind(*p_60_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_60_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_60_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_60->m_axi_bready.bind(*p_60_m_axi_bready);
        p_60_m_axi_bready->set_sv_netview_offsetfromdp(11710240);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_60_m_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_60->m_axi_araddr.bind(*p_60_m_axi_araddr);
        p_60_m_axi_araddr->set_sv_netview_offsetfromdp(11710296);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_60_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_60->m_axi_arprot.bind(*p_60_m_axi_arprot);
        p_60_m_axi_arprot->set_sv_netview_offsetfromdp(11710352);
        xsim_sc_channel<0, bool > *p_60_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_60->m_axi_arvalid.bind(*p_60_m_axi_arvalid);
        p_60_m_axi_arvalid->set_sv_netview_offsetfromdp(11710408);
        xsim_sc_channel<0, bool > *p_60_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_60->m_axi_arready.bind(*p_60_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_60_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_60_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_60->m_axi_rdata.bind(*p_60_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_60_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_60_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_60->m_axi_rresp.bind(*p_60_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_60_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_60_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_60->m_axi_rvalid.bind(*p_60_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_60_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_60_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_60->m_axi_rready.bind(*p_60_m_axi_rready);
        p_60_m_axi_rready->set_sv_netview_offsetfromdp(11710688);
        sc_inst_61 = new pfm_dynamic_auto_cc_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.slr0.interconnect_axilite_user_0.m02_couplers.auto_cc");
        sc_inst_61->xsim_set_dbg_index(3593);
        xsim_sc_channel<0, bool > *p_61_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_61->s_axi_aclk.bind(*p_61_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_61_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_61_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_61->s_axi_aresetn.bind(*p_61_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_61_s_axi_aresetn);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_61_s_axi_awaddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_61->s_axi_awaddr.bind(*p_61_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_61_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_61_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_61->s_axi_awprot.bind(*p_61_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_61_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_61_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_61->s_axi_awvalid.bind(*p_61_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_61_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_61_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_61->s_axi_awready.bind(*p_61_s_axi_awready);
        p_61_s_axi_awready->set_sv_netview_offsetfromdp(11747712);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_61_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_61->s_axi_wdata.bind(*p_61_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_61_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_61_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_61->s_axi_wstrb.bind(*p_61_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_61_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_61_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_61->s_axi_wvalid.bind(*p_61_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_61_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_61_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_61->s_axi_wready.bind(*p_61_s_axi_wready);
        p_61_s_axi_wready->set_sv_netview_offsetfromdp(11747936);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_61_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_61->s_axi_bresp.bind(*p_61_s_axi_bresp);
        p_61_s_axi_bresp->set_sv_netview_offsetfromdp(11747992);
        xsim_sc_channel<0, bool > *p_61_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_61->s_axi_bvalid.bind(*p_61_s_axi_bvalid);
        p_61_s_axi_bvalid->set_sv_netview_offsetfromdp(11748048);
        xsim_sc_channel<0, bool > *p_61_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_61->s_axi_bready.bind(*p_61_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_61_s_axi_bready);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_61_s_axi_araddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_61->s_axi_araddr.bind(*p_61_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_61_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_61_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_61->s_axi_arprot.bind(*p_61_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_61_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_61_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_61->s_axi_arvalid.bind(*p_61_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_61_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_61_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_61->s_axi_arready.bind(*p_61_s_axi_arready);
        p_61_s_axi_arready->set_sv_netview_offsetfromdp(11748328);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_61_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_61->s_axi_rdata.bind(*p_61_s_axi_rdata);
        p_61_s_axi_rdata->set_sv_netview_offsetfromdp(11748384);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_61_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_61->s_axi_rresp.bind(*p_61_s_axi_rresp);
        p_61_s_axi_rresp->set_sv_netview_offsetfromdp(11748440);
        xsim_sc_channel<0, bool > *p_61_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_61->s_axi_rvalid.bind(*p_61_s_axi_rvalid);
        p_61_s_axi_rvalid->set_sv_netview_offsetfromdp(11748496);
        xsim_sc_channel<0, bool > *p_61_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_61->s_axi_rready.bind(*p_61_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_61_s_axi_rready);
        xsim_sc_channel<0, bool > *p_61_m_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_61->m_axi_aclk.bind(*p_61_m_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_61_m_axi_aclk);
        xsim_sc_channel<0, bool > *p_61_m_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_61->m_axi_aresetn.bind(*p_61_m_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_61_m_axi_aresetn);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_61_m_axi_awaddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_61->m_axi_awaddr.bind(*p_61_m_axi_awaddr);
        p_61_m_axi_awaddr->set_sv_netview_offsetfromdp(11748720);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_61_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_61->m_axi_awprot.bind(*p_61_m_axi_awprot);
        p_61_m_axi_awprot->set_sv_netview_offsetfromdp(11748776);
        xsim_sc_channel<0, bool > *p_61_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_61->m_axi_awvalid.bind(*p_61_m_axi_awvalid);
        p_61_m_axi_awvalid->set_sv_netview_offsetfromdp(11748832);
        xsim_sc_channel<0, bool > *p_61_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_61->m_axi_awready.bind(*p_61_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_61_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_61_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_61->m_axi_wdata.bind(*p_61_m_axi_wdata);
        p_61_m_axi_wdata->set_sv_netview_offsetfromdp(11748944);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_61_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_61->m_axi_wstrb.bind(*p_61_m_axi_wstrb);
        p_61_m_axi_wstrb->set_sv_netview_offsetfromdp(11749000);
        xsim_sc_channel<0, bool > *p_61_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_61->m_axi_wvalid.bind(*p_61_m_axi_wvalid);
        p_61_m_axi_wvalid->set_sv_netview_offsetfromdp(11749056);
        xsim_sc_channel<0, bool > *p_61_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_61->m_axi_wready.bind(*p_61_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_61_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_61_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_61->m_axi_bresp.bind(*p_61_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_61_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_61_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_61->m_axi_bvalid.bind(*p_61_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_61_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_61_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_61->m_axi_bready.bind(*p_61_m_axi_bready);
        p_61_m_axi_bready->set_sv_netview_offsetfromdp(11749280);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_61_m_axi_araddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_61->m_axi_araddr.bind(*p_61_m_axi_araddr);
        p_61_m_axi_araddr->set_sv_netview_offsetfromdp(11749336);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_61_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_61->m_axi_arprot.bind(*p_61_m_axi_arprot);
        p_61_m_axi_arprot->set_sv_netview_offsetfromdp(11749392);
        xsim_sc_channel<0, bool > *p_61_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_61->m_axi_arvalid.bind(*p_61_m_axi_arvalid);
        p_61_m_axi_arvalid->set_sv_netview_offsetfromdp(11749448);
        xsim_sc_channel<0, bool > *p_61_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_61->m_axi_arready.bind(*p_61_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_61_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_61_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_61->m_axi_rdata.bind(*p_61_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_61_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_61_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_61->m_axi_rresp.bind(*p_61_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_61_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_61_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_61->m_axi_rvalid.bind(*p_61_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_61_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_61_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_61->m_axi_rready.bind(*p_61_m_axi_rready);
        p_61_m_axi_rready->set_sv_netview_offsetfromdp(11749728);
        sc_inst_62 = new pfm_dynamic_m02_regslice_4(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.slr0.interconnect_axilite_user_0.m02_couplers.m02_regslice");
        sc_inst_62->xsim_set_dbg_index(3594);
        xsim_sc_channel<0, bool > *p_62_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_62->aclk.bind(*p_62_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_62_aclk);
        xsim_sc_channel<0, bool > *p_62_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_62->aresetn.bind(*p_62_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_62_aresetn);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_62_s_axi_awaddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_62->s_axi_awaddr.bind(*p_62_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_62_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_62_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_62->s_axi_awprot.bind(*p_62_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_62_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_62_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_62->s_axi_awvalid.bind(*p_62_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_62_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_62_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_62->s_axi_awready.bind(*p_62_s_axi_awready);
        p_62_s_axi_awready->set_sv_netview_offsetfromdp(11750112);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_62_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_62->s_axi_wdata.bind(*p_62_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_62_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_62_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_62->s_axi_wstrb.bind(*p_62_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_62_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_62_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_62->s_axi_wvalid.bind(*p_62_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_62_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_62_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_62->s_axi_wready.bind(*p_62_s_axi_wready);
        p_62_s_axi_wready->set_sv_netview_offsetfromdp(11750336);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_62_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_62->s_axi_bresp.bind(*p_62_s_axi_bresp);
        p_62_s_axi_bresp->set_sv_netview_offsetfromdp(11750392);
        xsim_sc_channel<0, bool > *p_62_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_62->s_axi_bvalid.bind(*p_62_s_axi_bvalid);
        p_62_s_axi_bvalid->set_sv_netview_offsetfromdp(11750448);
        xsim_sc_channel<0, bool > *p_62_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_62->s_axi_bready.bind(*p_62_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_62_s_axi_bready);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_62_s_axi_araddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_62->s_axi_araddr.bind(*p_62_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_62_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_62_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_62->s_axi_arprot.bind(*p_62_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_62_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_62_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_62->s_axi_arvalid.bind(*p_62_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_62_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_62_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_62->s_axi_arready.bind(*p_62_s_axi_arready);
        p_62_s_axi_arready->set_sv_netview_offsetfromdp(11750728);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_62_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_62->s_axi_rdata.bind(*p_62_s_axi_rdata);
        p_62_s_axi_rdata->set_sv_netview_offsetfromdp(11750784);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_62_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_62->s_axi_rresp.bind(*p_62_s_axi_rresp);
        p_62_s_axi_rresp->set_sv_netview_offsetfromdp(11750840);
        xsim_sc_channel<0, bool > *p_62_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_62->s_axi_rvalid.bind(*p_62_s_axi_rvalid);
        p_62_s_axi_rvalid->set_sv_netview_offsetfromdp(11750896);
        xsim_sc_channel<0, bool > *p_62_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_62->s_axi_rready.bind(*p_62_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_62_s_axi_rready);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_62_m_axi_awaddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_62->m_axi_awaddr.bind(*p_62_m_axi_awaddr);
        p_62_m_axi_awaddr->set_sv_netview_offsetfromdp(11751008);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_62_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_62->m_axi_awprot.bind(*p_62_m_axi_awprot);
        p_62_m_axi_awprot->set_sv_netview_offsetfromdp(11751064);
        xsim_sc_channel<0, bool > *p_62_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_62->m_axi_awvalid.bind(*p_62_m_axi_awvalid);
        p_62_m_axi_awvalid->set_sv_netview_offsetfromdp(11751120);
        xsim_sc_channel<0, bool > *p_62_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_62->m_axi_awready.bind(*p_62_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_62_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_62_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_62->m_axi_wdata.bind(*p_62_m_axi_wdata);
        p_62_m_axi_wdata->set_sv_netview_offsetfromdp(11751232);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_62_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_62->m_axi_wstrb.bind(*p_62_m_axi_wstrb);
        p_62_m_axi_wstrb->set_sv_netview_offsetfromdp(11751288);
        xsim_sc_channel<0, bool > *p_62_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_62->m_axi_wvalid.bind(*p_62_m_axi_wvalid);
        p_62_m_axi_wvalid->set_sv_netview_offsetfromdp(11751344);
        xsim_sc_channel<0, bool > *p_62_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_62->m_axi_wready.bind(*p_62_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_62_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_62_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_62->m_axi_bresp.bind(*p_62_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_62_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_62_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_62->m_axi_bvalid.bind(*p_62_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_62_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_62_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_62->m_axi_bready.bind(*p_62_m_axi_bready);
        p_62_m_axi_bready->set_sv_netview_offsetfromdp(11751568);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_62_m_axi_araddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_62->m_axi_araddr.bind(*p_62_m_axi_araddr);
        p_62_m_axi_araddr->set_sv_netview_offsetfromdp(11751624);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_62_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_62->m_axi_arprot.bind(*p_62_m_axi_arprot);
        p_62_m_axi_arprot->set_sv_netview_offsetfromdp(11751680);
        xsim_sc_channel<0, bool > *p_62_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_62->m_axi_arvalid.bind(*p_62_m_axi_arvalid);
        p_62_m_axi_arvalid->set_sv_netview_offsetfromdp(11751736);
        xsim_sc_channel<0, bool > *p_62_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_62->m_axi_arready.bind(*p_62_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_62_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_62_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_62->m_axi_rdata.bind(*p_62_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_62_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_62_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_62->m_axi_rresp.bind(*p_62_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_62_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_62_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_62->m_axi_rvalid.bind(*p_62_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_62_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_62_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_62->m_axi_rready.bind(*p_62_m_axi_rready);
        p_62_m_axi_rready->set_sv_netview_offsetfromdp(11752016);
        sc_inst_63 = new pfm_dynamic_xbar_3(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.slr0.interconnect_axilite_user_0.xbar");
        sc_inst_63->xsim_set_dbg_index(1531);
        xsim_sc_channel<0, bool > *p_63_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_63->aclk.bind(*p_63_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_63_aclk);
        xsim_sc_channel<0, bool > *p_63_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_63->aresetn.bind(*p_63_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_63_aresetn);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_63_s_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_63->s_axi_awaddr.bind(*p_63_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_63_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_63_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_63->s_axi_awprot.bind(*p_63_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_63_s_axi_awprot);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_63_s_axi_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_63->s_axi_awvalid.bind(*p_63_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_63_s_axi_awvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_63_s_axi_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_63->s_axi_awready.bind(*p_63_s_axi_awready);
        p_63_s_axi_awready->set_sv_netview_offsetfromdp(11762576);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_63_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_63->s_axi_wdata.bind(*p_63_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_63_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_63_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_63->s_axi_wstrb.bind(*p_63_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_63_s_axi_wstrb);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_63_s_axi_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_63->s_axi_wvalid.bind(*p_63_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_63_s_axi_wvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_63_s_axi_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_63->s_axi_wready.bind(*p_63_s_axi_wready);
        p_63_s_axi_wready->set_sv_netview_offsetfromdp(11762800);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_63_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_63->s_axi_bresp.bind(*p_63_s_axi_bresp);
        p_63_s_axi_bresp->set_sv_netview_offsetfromdp(11762856);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_63_s_axi_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_63->s_axi_bvalid.bind(*p_63_s_axi_bvalid);
        p_63_s_axi_bvalid->set_sv_netview_offsetfromdp(11762912);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_63_s_axi_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_63->s_axi_bready.bind(*p_63_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_63_s_axi_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_63_s_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_63->s_axi_araddr.bind(*p_63_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_63_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_63_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_63->s_axi_arprot.bind(*p_63_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_63_s_axi_arprot);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_63_s_axi_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_63->s_axi_arvalid.bind(*p_63_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_63_s_axi_arvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_63_s_axi_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_63->s_axi_arready.bind(*p_63_s_axi_arready);
        p_63_s_axi_arready->set_sv_netview_offsetfromdp(11763192);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_63_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_63->s_axi_rdata.bind(*p_63_s_axi_rdata);
        p_63_s_axi_rdata->set_sv_netview_offsetfromdp(11763248);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_63_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_63->s_axi_rresp.bind(*p_63_s_axi_rresp);
        p_63_s_axi_rresp->set_sv_netview_offsetfromdp(11763304);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_63_s_axi_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_63->s_axi_rvalid.bind(*p_63_s_axi_rvalid);
        p_63_s_axi_rvalid->set_sv_netview_offsetfromdp(11763360);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_63_s_axi_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_63->s_axi_rready.bind(*p_63_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_63_s_axi_rready);
        xsim_sc_channel<192, sc_dt::sc_bv<192> > *p_63_m_axi_awaddr = new xsim_sc_channel<192, sc_dt::sc_bv<192> >();
        sc_inst_63->m_axi_awaddr.bind(*p_63_m_axi_awaddr);
        p_63_m_axi_awaddr->set_sv_netview_offsetfromdp(11763472);
        xsim_sc_channel<9, sc_dt::sc_bv<9> > *p_63_m_axi_awprot = new xsim_sc_channel<9, sc_dt::sc_bv<9> >();
        sc_inst_63->m_axi_awprot.bind(*p_63_m_axi_awprot);
        p_63_m_axi_awprot->set_sv_netview_offsetfromdp(11763528);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_63_m_axi_awvalid = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_63->m_axi_awvalid.bind(*p_63_m_axi_awvalid);
        p_63_m_axi_awvalid->set_sv_netview_offsetfromdp(11763584);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_63_m_axi_awready = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_63->m_axi_awready.bind(*p_63_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_63_m_axi_awready);
        xsim_sc_channel<96, sc_dt::sc_bv<96> > *p_63_m_axi_wdata = new xsim_sc_channel<96, sc_dt::sc_bv<96> >();
        sc_inst_63->m_axi_wdata.bind(*p_63_m_axi_wdata);
        p_63_m_axi_wdata->set_sv_netview_offsetfromdp(11763696);
        xsim_sc_channel<12, sc_dt::sc_bv<12> > *p_63_m_axi_wstrb = new xsim_sc_channel<12, sc_dt::sc_bv<12> >();
        sc_inst_63->m_axi_wstrb.bind(*p_63_m_axi_wstrb);
        p_63_m_axi_wstrb->set_sv_netview_offsetfromdp(11763752);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_63_m_axi_wvalid = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_63->m_axi_wvalid.bind(*p_63_m_axi_wvalid);
        p_63_m_axi_wvalid->set_sv_netview_offsetfromdp(11763808);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_63_m_axi_wready = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_63->m_axi_wready.bind(*p_63_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_63_m_axi_wready);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_63_m_axi_bresp = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_63->m_axi_bresp.bind(*p_63_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_63_m_axi_bresp);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_63_m_axi_bvalid = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_63->m_axi_bvalid.bind(*p_63_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_63_m_axi_bvalid);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_63_m_axi_bready = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_63->m_axi_bready.bind(*p_63_m_axi_bready);
        p_63_m_axi_bready->set_sv_netview_offsetfromdp(11764032);
        xsim_sc_channel<192, sc_dt::sc_bv<192> > *p_63_m_axi_araddr = new xsim_sc_channel<192, sc_dt::sc_bv<192> >();
        sc_inst_63->m_axi_araddr.bind(*p_63_m_axi_araddr);
        p_63_m_axi_araddr->set_sv_netview_offsetfromdp(11764088);
        xsim_sc_channel<9, sc_dt::sc_bv<9> > *p_63_m_axi_arprot = new xsim_sc_channel<9, sc_dt::sc_bv<9> >();
        sc_inst_63->m_axi_arprot.bind(*p_63_m_axi_arprot);
        p_63_m_axi_arprot->set_sv_netview_offsetfromdp(11764144);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_63_m_axi_arvalid = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_63->m_axi_arvalid.bind(*p_63_m_axi_arvalid);
        p_63_m_axi_arvalid->set_sv_netview_offsetfromdp(11764200);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_63_m_axi_arready = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_63->m_axi_arready.bind(*p_63_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_63_m_axi_arready);
        xsim_sc_channel<96, sc_dt::sc_bv<96> > *p_63_m_axi_rdata = new xsim_sc_channel<96, sc_dt::sc_bv<96> >();
        sc_inst_63->m_axi_rdata.bind(*p_63_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_63_m_axi_rdata);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_63_m_axi_rresp = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_63->m_axi_rresp.bind(*p_63_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_63_m_axi_rresp);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_63_m_axi_rvalid = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_63->m_axi_rvalid.bind(*p_63_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_63_m_axi_rvalid);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_63_m_axi_rready = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_63->m_axi_rready.bind(*p_63_m_axi_rready);
        p_63_m_axi_rready->set_sv_netview_offsetfromdp(11764480);
        sc_inst_64 = new pfm_dynamic_smartconn_data_0_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.smartconn_data_0");
        sc_inst_64->xsim_set_dbg_index(72);
        xsim_sc_channel<0, bool > *p_64_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_64->aclk.bind(*p_64_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_64_aclk);
        xsim_sc_channel<0, bool > *p_64_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_64->aresetn.bind(*p_64_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_64_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_64_S00_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_64->S00_AXI_awid.bind(*p_64_S00_AXI_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_64_S00_AXI_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_64_S00_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_64->S00_AXI_awaddr.bind(*p_64_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_64_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_64_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_64->S00_AXI_awlen.bind(*p_64_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_64_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_64_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_64->S00_AXI_awsize.bind(*p_64_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_64_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_64_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_64->S00_AXI_awburst.bind(*p_64_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_64_S00_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_64_S00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_64->S00_AXI_awlock.bind(*p_64_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_64_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_64_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_64->S00_AXI_awcache.bind(*p_64_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_64_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_64_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_64->S00_AXI_awprot.bind(*p_64_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_64_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_64_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_64->S00_AXI_awqos.bind(*p_64_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_64_S00_AXI_awqos);
        xsim_sc_channel<0, bool > *p_64_S00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_64->S00_AXI_awvalid.bind(*p_64_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_64_S00_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_64_S00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_64->S00_AXI_awready.bind(*p_64_S00_AXI_awready);
        p_64_S00_AXI_awready->set_sv_netview_offsetfromdp(13021184);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_64_S00_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_64->S00_AXI_wdata.bind(*p_64_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_64_S00_AXI_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_64_S00_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_64->S00_AXI_wstrb.bind(*p_64_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_64_S00_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_64_S00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_64->S00_AXI_wlast.bind(*p_64_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_64_S00_AXI_wlast);
        xsim_sc_channel<0, bool > *p_64_S00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_64->S00_AXI_wvalid.bind(*p_64_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_64_S00_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_64_S00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_64->S00_AXI_wready.bind(*p_64_S00_AXI_wready);
        p_64_S00_AXI_wready->set_sv_netview_offsetfromdp(13021464);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_64_S00_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_64->S00_AXI_bid.bind(*p_64_S00_AXI_bid);
        p_64_S00_AXI_bid->set_sv_netview_offsetfromdp(13021520);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_64_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_64->S00_AXI_bresp.bind(*p_64_S00_AXI_bresp);
        p_64_S00_AXI_bresp->set_sv_netview_offsetfromdp(13021576);
        xsim_sc_channel<0, bool > *p_64_S00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_64->S00_AXI_bvalid.bind(*p_64_S00_AXI_bvalid);
        p_64_S00_AXI_bvalid->set_sv_netview_offsetfromdp(13021632);
        xsim_sc_channel<0, bool > *p_64_S00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_64->S00_AXI_bready.bind(*p_64_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_64_S00_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_64_S00_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_64->S00_AXI_arid.bind(*p_64_S00_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_64_S00_AXI_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_64_S00_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_64->S00_AXI_araddr.bind(*p_64_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_64_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_64_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_64->S00_AXI_arlen.bind(*p_64_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_64_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_64_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_64->S00_AXI_arsize.bind(*p_64_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_64_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_64_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_64->S00_AXI_arburst.bind(*p_64_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_64_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_64_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_64->S00_AXI_arlock.bind(*p_64_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_64_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_64_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_64->S00_AXI_arcache.bind(*p_64_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_64_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_64_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_64->S00_AXI_arprot.bind(*p_64_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_64_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_64_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_64->S00_AXI_arqos.bind(*p_64_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_64_S00_AXI_arqos);
        xsim_sc_channel<0, bool > *p_64_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_64->S00_AXI_arvalid.bind(*p_64_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_64_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_64_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_64->S00_AXI_arready.bind(*p_64_S00_AXI_arready);
        p_64_S00_AXI_arready->set_sv_netview_offsetfromdp(13022304);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_64_S00_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_64->S00_AXI_rid.bind(*p_64_S00_AXI_rid);
        p_64_S00_AXI_rid->set_sv_netview_offsetfromdp(13022360);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_64_S00_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_64->S00_AXI_rdata.bind(*p_64_S00_AXI_rdata);
        p_64_S00_AXI_rdata->set_sv_netview_offsetfromdp(13022416);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_64_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_64->S00_AXI_rresp.bind(*p_64_S00_AXI_rresp);
        p_64_S00_AXI_rresp->set_sv_netview_offsetfromdp(13022472);
        xsim_sc_channel<0, bool > *p_64_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_64->S00_AXI_rlast.bind(*p_64_S00_AXI_rlast);
        p_64_S00_AXI_rlast->set_sv_netview_offsetfromdp(13022528);
        xsim_sc_channel<0, bool > *p_64_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_64->S00_AXI_rvalid.bind(*p_64_S00_AXI_rvalid);
        p_64_S00_AXI_rvalid->set_sv_netview_offsetfromdp(13022584);
        xsim_sc_channel<0, bool > *p_64_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_64->S00_AXI_rready.bind(*p_64_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_64_S00_AXI_rready);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_64_M00_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_64->M00_AXI_awaddr.bind(*p_64_M00_AXI_awaddr);
        p_64_M00_AXI_awaddr->set_sv_netview_offsetfromdp(13022696);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_64_M00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_64->M00_AXI_awlen.bind(*p_64_M00_AXI_awlen);
        p_64_M00_AXI_awlen->set_sv_netview_offsetfromdp(13022752);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_64_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_64->M00_AXI_awsize.bind(*p_64_M00_AXI_awsize);
        p_64_M00_AXI_awsize->set_sv_netview_offsetfromdp(13022808);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_64_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_64->M00_AXI_awburst.bind(*p_64_M00_AXI_awburst);
        p_64_M00_AXI_awburst->set_sv_netview_offsetfromdp(13022864);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_64_M00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_64->M00_AXI_awlock.bind(*p_64_M00_AXI_awlock);
        p_64_M00_AXI_awlock->set_sv_netview_offsetfromdp(13022920);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_64_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_64->M00_AXI_awcache.bind(*p_64_M00_AXI_awcache);
        p_64_M00_AXI_awcache->set_sv_netview_offsetfromdp(13022976);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_64_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_64->M00_AXI_awprot.bind(*p_64_M00_AXI_awprot);
        p_64_M00_AXI_awprot->set_sv_netview_offsetfromdp(13023032);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_64_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_64->M00_AXI_awqos.bind(*p_64_M00_AXI_awqos);
        p_64_M00_AXI_awqos->set_sv_netview_offsetfromdp(13023088);
        xsim_sc_channel<0, bool > *p_64_M00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_64->M00_AXI_awvalid.bind(*p_64_M00_AXI_awvalid);
        p_64_M00_AXI_awvalid->set_sv_netview_offsetfromdp(13023144);
        xsim_sc_channel<0, bool > *p_64_M00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_64->M00_AXI_awready.bind(*p_64_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_64_M00_AXI_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_64_M00_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_64->M00_AXI_wdata.bind(*p_64_M00_AXI_wdata);
        p_64_M00_AXI_wdata->set_sv_netview_offsetfromdp(13023256);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_64_M00_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_64->M00_AXI_wstrb.bind(*p_64_M00_AXI_wstrb);
        p_64_M00_AXI_wstrb->set_sv_netview_offsetfromdp(13023312);
        xsim_sc_channel<0, bool > *p_64_M00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_64->M00_AXI_wlast.bind(*p_64_M00_AXI_wlast);
        p_64_M00_AXI_wlast->set_sv_netview_offsetfromdp(13023368);
        xsim_sc_channel<0, bool > *p_64_M00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_64->M00_AXI_wvalid.bind(*p_64_M00_AXI_wvalid);
        p_64_M00_AXI_wvalid->set_sv_netview_offsetfromdp(13023424);
        xsim_sc_channel<0, bool > *p_64_M00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_64->M00_AXI_wready.bind(*p_64_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_64_M00_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_64_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_64->M00_AXI_bresp.bind(*p_64_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_64_M00_AXI_bresp);
        xsim_sc_channel<0, bool > *p_64_M00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_64->M00_AXI_bvalid.bind(*p_64_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_64_M00_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_64_M00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_64->M00_AXI_bready.bind(*p_64_M00_AXI_bready);
        p_64_M00_AXI_bready->set_sv_netview_offsetfromdp(13023648);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_64_M00_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_64->M00_AXI_araddr.bind(*p_64_M00_AXI_araddr);
        p_64_M00_AXI_araddr->set_sv_netview_offsetfromdp(13023704);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_64_M00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_64->M00_AXI_arlen.bind(*p_64_M00_AXI_arlen);
        p_64_M00_AXI_arlen->set_sv_netview_offsetfromdp(13023760);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_64_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_64->M00_AXI_arsize.bind(*p_64_M00_AXI_arsize);
        p_64_M00_AXI_arsize->set_sv_netview_offsetfromdp(13023816);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_64_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_64->M00_AXI_arburst.bind(*p_64_M00_AXI_arburst);
        p_64_M00_AXI_arburst->set_sv_netview_offsetfromdp(13023872);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_64_M00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_64->M00_AXI_arlock.bind(*p_64_M00_AXI_arlock);
        p_64_M00_AXI_arlock->set_sv_netview_offsetfromdp(13023928);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_64_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_64->M00_AXI_arcache.bind(*p_64_M00_AXI_arcache);
        p_64_M00_AXI_arcache->set_sv_netview_offsetfromdp(13023984);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_64_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_64->M00_AXI_arprot.bind(*p_64_M00_AXI_arprot);
        p_64_M00_AXI_arprot->set_sv_netview_offsetfromdp(13024040);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_64_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_64->M00_AXI_arqos.bind(*p_64_M00_AXI_arqos);
        p_64_M00_AXI_arqos->set_sv_netview_offsetfromdp(13024096);
        xsim_sc_channel<0, bool > *p_64_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_64->M00_AXI_arvalid.bind(*p_64_M00_AXI_arvalid);
        p_64_M00_AXI_arvalid->set_sv_netview_offsetfromdp(13024152);
        xsim_sc_channel<0, bool > *p_64_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_64->M00_AXI_arready.bind(*p_64_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_64_M00_AXI_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_64_M00_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_64->M00_AXI_rdata.bind(*p_64_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_64_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_64_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_64->M00_AXI_rresp.bind(*p_64_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_64_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_64_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_64->M00_AXI_rlast.bind(*p_64_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_64_M00_AXI_rlast);
        xsim_sc_channel<0, bool > *p_64_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_64->M00_AXI_rvalid.bind(*p_64_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_64_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_64_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_64->M00_AXI_rready.bind(*p_64_M00_AXI_rready);
        p_64_M00_AXI_rready->set_sv_netview_offsetfromdp(13024488);
        xsim_sc_channel<37, sc_dt::sc_bv<37> > *p_64_M01_AXI_awaddr = new xsim_sc_channel<37, sc_dt::sc_bv<37> >();
        sc_inst_64->M01_AXI_awaddr.bind(*p_64_M01_AXI_awaddr);
        p_64_M01_AXI_awaddr->set_sv_netview_offsetfromdp(13024544);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_64_M01_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_64->M01_AXI_awlen.bind(*p_64_M01_AXI_awlen);
        p_64_M01_AXI_awlen->set_sv_netview_offsetfromdp(13024600);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_64_M01_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_64->M01_AXI_awsize.bind(*p_64_M01_AXI_awsize);
        p_64_M01_AXI_awsize->set_sv_netview_offsetfromdp(13024656);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_64_M01_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_64->M01_AXI_awburst.bind(*p_64_M01_AXI_awburst);
        p_64_M01_AXI_awburst->set_sv_netview_offsetfromdp(13024712);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_64_M01_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_64->M01_AXI_awlock.bind(*p_64_M01_AXI_awlock);
        p_64_M01_AXI_awlock->set_sv_netview_offsetfromdp(13024768);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_64_M01_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_64->M01_AXI_awcache.bind(*p_64_M01_AXI_awcache);
        p_64_M01_AXI_awcache->set_sv_netview_offsetfromdp(13024824);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_64_M01_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_64->M01_AXI_awprot.bind(*p_64_M01_AXI_awprot);
        p_64_M01_AXI_awprot->set_sv_netview_offsetfromdp(13024880);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_64_M01_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_64->M01_AXI_awqos.bind(*p_64_M01_AXI_awqos);
        p_64_M01_AXI_awqos->set_sv_netview_offsetfromdp(13024936);
        xsim_sc_channel<0, bool > *p_64_M01_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_64->M01_AXI_awvalid.bind(*p_64_M01_AXI_awvalid);
        p_64_M01_AXI_awvalid->set_sv_netview_offsetfromdp(13024992);
        xsim_sc_channel<0, bool > *p_64_M01_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_64->M01_AXI_awready.bind(*p_64_M01_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_64_M01_AXI_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_64_M01_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_64->M01_AXI_wdata.bind(*p_64_M01_AXI_wdata);
        p_64_M01_AXI_wdata->set_sv_netview_offsetfromdp(13025104);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_64_M01_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_64->M01_AXI_wstrb.bind(*p_64_M01_AXI_wstrb);
        p_64_M01_AXI_wstrb->set_sv_netview_offsetfromdp(13025160);
        xsim_sc_channel<0, bool > *p_64_M01_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_64->M01_AXI_wlast.bind(*p_64_M01_AXI_wlast);
        p_64_M01_AXI_wlast->set_sv_netview_offsetfromdp(13025216);
        xsim_sc_channel<0, bool > *p_64_M01_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_64->M01_AXI_wvalid.bind(*p_64_M01_AXI_wvalid);
        p_64_M01_AXI_wvalid->set_sv_netview_offsetfromdp(13025272);
        xsim_sc_channel<0, bool > *p_64_M01_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_64->M01_AXI_wready.bind(*p_64_M01_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_64_M01_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_64_M01_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_64->M01_AXI_bresp.bind(*p_64_M01_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_64_M01_AXI_bresp);
        xsim_sc_channel<0, bool > *p_64_M01_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_64->M01_AXI_bvalid.bind(*p_64_M01_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_64_M01_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_64_M01_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_64->M01_AXI_bready.bind(*p_64_M01_AXI_bready);
        p_64_M01_AXI_bready->set_sv_netview_offsetfromdp(13025496);
        xsim_sc_channel<37, sc_dt::sc_bv<37> > *p_64_M01_AXI_araddr = new xsim_sc_channel<37, sc_dt::sc_bv<37> >();
        sc_inst_64->M01_AXI_araddr.bind(*p_64_M01_AXI_araddr);
        p_64_M01_AXI_araddr->set_sv_netview_offsetfromdp(13025552);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_64_M01_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_64->M01_AXI_arlen.bind(*p_64_M01_AXI_arlen);
        p_64_M01_AXI_arlen->set_sv_netview_offsetfromdp(13025608);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_64_M01_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_64->M01_AXI_arsize.bind(*p_64_M01_AXI_arsize);
        p_64_M01_AXI_arsize->set_sv_netview_offsetfromdp(13025664);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_64_M01_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_64->M01_AXI_arburst.bind(*p_64_M01_AXI_arburst);
        p_64_M01_AXI_arburst->set_sv_netview_offsetfromdp(13025720);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_64_M01_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_64->M01_AXI_arlock.bind(*p_64_M01_AXI_arlock);
        p_64_M01_AXI_arlock->set_sv_netview_offsetfromdp(13025776);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_64_M01_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_64->M01_AXI_arcache.bind(*p_64_M01_AXI_arcache);
        p_64_M01_AXI_arcache->set_sv_netview_offsetfromdp(13025832);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_64_M01_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_64->M01_AXI_arprot.bind(*p_64_M01_AXI_arprot);
        p_64_M01_AXI_arprot->set_sv_netview_offsetfromdp(13025888);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_64_M01_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_64->M01_AXI_arqos.bind(*p_64_M01_AXI_arqos);
        p_64_M01_AXI_arqos->set_sv_netview_offsetfromdp(13025944);
        xsim_sc_channel<0, bool > *p_64_M01_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_64->M01_AXI_arvalid.bind(*p_64_M01_AXI_arvalid);
        p_64_M01_AXI_arvalid->set_sv_netview_offsetfromdp(13026000);
        xsim_sc_channel<0, bool > *p_64_M01_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_64->M01_AXI_arready.bind(*p_64_M01_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_64_M01_AXI_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_64_M01_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_64->M01_AXI_rdata.bind(*p_64_M01_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_64_M01_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_64_M01_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_64->M01_AXI_rresp.bind(*p_64_M01_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_64_M01_AXI_rresp);
        xsim_sc_channel<0, bool > *p_64_M01_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_64->M01_AXI_rlast.bind(*p_64_M01_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_64_M01_AXI_rlast);
        xsim_sc_channel<0, bool > *p_64_M01_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_64->M01_AXI_rvalid.bind(*p_64_M01_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_64_M01_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_64_M01_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_64->M01_AXI_rready.bind(*p_64_M01_AXI_rready);
        p_64_M01_AXI_rready->set_sv_netview_offsetfromdp(13026336);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_64_M02_AXI_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_64->M02_AXI_awaddr.bind(*p_64_M02_AXI_awaddr);
        p_64_M02_AXI_awaddr->set_sv_netview_offsetfromdp(13026392);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_64_M02_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_64->M02_AXI_awlen.bind(*p_64_M02_AXI_awlen);
        p_64_M02_AXI_awlen->set_sv_netview_offsetfromdp(13026448);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_64_M02_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_64->M02_AXI_awsize.bind(*p_64_M02_AXI_awsize);
        p_64_M02_AXI_awsize->set_sv_netview_offsetfromdp(13026504);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_64_M02_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_64->M02_AXI_awburst.bind(*p_64_M02_AXI_awburst);
        p_64_M02_AXI_awburst->set_sv_netview_offsetfromdp(13026560);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_64_M02_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_64->M02_AXI_awlock.bind(*p_64_M02_AXI_awlock);
        p_64_M02_AXI_awlock->set_sv_netview_offsetfromdp(13026616);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_64_M02_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_64->M02_AXI_awcache.bind(*p_64_M02_AXI_awcache);
        p_64_M02_AXI_awcache->set_sv_netview_offsetfromdp(13026672);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_64_M02_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_64->M02_AXI_awprot.bind(*p_64_M02_AXI_awprot);
        p_64_M02_AXI_awprot->set_sv_netview_offsetfromdp(13026728);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_64_M02_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_64->M02_AXI_awqos.bind(*p_64_M02_AXI_awqos);
        p_64_M02_AXI_awqos->set_sv_netview_offsetfromdp(13026784);
        xsim_sc_channel<0, bool > *p_64_M02_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_64->M02_AXI_awvalid.bind(*p_64_M02_AXI_awvalid);
        p_64_M02_AXI_awvalid->set_sv_netview_offsetfromdp(13026840);
        xsim_sc_channel<0, bool > *p_64_M02_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_64->M02_AXI_awready.bind(*p_64_M02_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_64_M02_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_64_M02_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_64->M02_AXI_wdata.bind(*p_64_M02_AXI_wdata);
        p_64_M02_AXI_wdata->set_sv_netview_offsetfromdp(13026952);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_64_M02_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_64->M02_AXI_wstrb.bind(*p_64_M02_AXI_wstrb);
        p_64_M02_AXI_wstrb->set_sv_netview_offsetfromdp(13027008);
        xsim_sc_channel<0, bool > *p_64_M02_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_64->M02_AXI_wlast.bind(*p_64_M02_AXI_wlast);
        p_64_M02_AXI_wlast->set_sv_netview_offsetfromdp(13027064);
        xsim_sc_channel<0, bool > *p_64_M02_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_64->M02_AXI_wvalid.bind(*p_64_M02_AXI_wvalid);
        p_64_M02_AXI_wvalid->set_sv_netview_offsetfromdp(13027120);
        xsim_sc_channel<0, bool > *p_64_M02_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_64->M02_AXI_wready.bind(*p_64_M02_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_64_M02_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_64_M02_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_64->M02_AXI_bresp.bind(*p_64_M02_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_64_M02_AXI_bresp);
        xsim_sc_channel<0, bool > *p_64_M02_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_64->M02_AXI_bvalid.bind(*p_64_M02_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_64_M02_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_64_M02_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_64->M02_AXI_bready.bind(*p_64_M02_AXI_bready);
        p_64_M02_AXI_bready->set_sv_netview_offsetfromdp(13027344);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_64_M02_AXI_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_64->M02_AXI_araddr.bind(*p_64_M02_AXI_araddr);
        p_64_M02_AXI_araddr->set_sv_netview_offsetfromdp(13027400);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_64_M02_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_64->M02_AXI_arlen.bind(*p_64_M02_AXI_arlen);
        p_64_M02_AXI_arlen->set_sv_netview_offsetfromdp(13027456);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_64_M02_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_64->M02_AXI_arsize.bind(*p_64_M02_AXI_arsize);
        p_64_M02_AXI_arsize->set_sv_netview_offsetfromdp(13027512);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_64_M02_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_64->M02_AXI_arburst.bind(*p_64_M02_AXI_arburst);
        p_64_M02_AXI_arburst->set_sv_netview_offsetfromdp(13027568);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_64_M02_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_64->M02_AXI_arlock.bind(*p_64_M02_AXI_arlock);
        p_64_M02_AXI_arlock->set_sv_netview_offsetfromdp(13027624);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_64_M02_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_64->M02_AXI_arcache.bind(*p_64_M02_AXI_arcache);
        p_64_M02_AXI_arcache->set_sv_netview_offsetfromdp(13027680);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_64_M02_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_64->M02_AXI_arprot.bind(*p_64_M02_AXI_arprot);
        p_64_M02_AXI_arprot->set_sv_netview_offsetfromdp(13027736);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_64_M02_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_64->M02_AXI_arqos.bind(*p_64_M02_AXI_arqos);
        p_64_M02_AXI_arqos->set_sv_netview_offsetfromdp(13027792);
        xsim_sc_channel<0, bool > *p_64_M02_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_64->M02_AXI_arvalid.bind(*p_64_M02_AXI_arvalid);
        p_64_M02_AXI_arvalid->set_sv_netview_offsetfromdp(13027848);
        xsim_sc_channel<0, bool > *p_64_M02_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_64->M02_AXI_arready.bind(*p_64_M02_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_64_M02_AXI_arready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_64_M02_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_64->M02_AXI_rdata.bind(*p_64_M02_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_64_M02_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_64_M02_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_64->M02_AXI_rresp.bind(*p_64_M02_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_64_M02_AXI_rresp);
        xsim_sc_channel<0, bool > *p_64_M02_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_64->M02_AXI_rlast.bind(*p_64_M02_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_64_M02_AXI_rlast);
        xsim_sc_channel<0, bool > *p_64_M02_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_64->M02_AXI_rvalid.bind(*p_64_M02_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_64_M02_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_64_M02_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_64->M02_AXI_rready.bind(*p_64_M02_AXI_rready);
        p_64_M02_AXI_rready->set_sv_netview_offsetfromdp(13028184);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_64_M03_AXI_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_64->M03_AXI_awaddr.bind(*p_64_M03_AXI_awaddr);
        p_64_M03_AXI_awaddr->set_sv_netview_offsetfromdp(13028240);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_64_M03_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_64->M03_AXI_awlen.bind(*p_64_M03_AXI_awlen);
        p_64_M03_AXI_awlen->set_sv_netview_offsetfromdp(13028296);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_64_M03_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_64->M03_AXI_awsize.bind(*p_64_M03_AXI_awsize);
        p_64_M03_AXI_awsize->set_sv_netview_offsetfromdp(13028352);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_64_M03_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_64->M03_AXI_awburst.bind(*p_64_M03_AXI_awburst);
        p_64_M03_AXI_awburst->set_sv_netview_offsetfromdp(13028408);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_64_M03_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_64->M03_AXI_awlock.bind(*p_64_M03_AXI_awlock);
        p_64_M03_AXI_awlock->set_sv_netview_offsetfromdp(13028464);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_64_M03_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_64->M03_AXI_awcache.bind(*p_64_M03_AXI_awcache);
        p_64_M03_AXI_awcache->set_sv_netview_offsetfromdp(13028520);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_64_M03_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_64->M03_AXI_awprot.bind(*p_64_M03_AXI_awprot);
        p_64_M03_AXI_awprot->set_sv_netview_offsetfromdp(13028576);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_64_M03_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_64->M03_AXI_awqos.bind(*p_64_M03_AXI_awqos);
        p_64_M03_AXI_awqos->set_sv_netview_offsetfromdp(13028632);
        xsim_sc_channel<0, bool > *p_64_M03_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_64->M03_AXI_awvalid.bind(*p_64_M03_AXI_awvalid);
        p_64_M03_AXI_awvalid->set_sv_netview_offsetfromdp(13028688);
        xsim_sc_channel<0, bool > *p_64_M03_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_64->M03_AXI_awready.bind(*p_64_M03_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_64_M03_AXI_awready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_64_M03_AXI_wdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_64->M03_AXI_wdata.bind(*p_64_M03_AXI_wdata);
        p_64_M03_AXI_wdata->set_sv_netview_offsetfromdp(13028800);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_64_M03_AXI_wstrb = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_64->M03_AXI_wstrb.bind(*p_64_M03_AXI_wstrb);
        p_64_M03_AXI_wstrb->set_sv_netview_offsetfromdp(13028856);
        xsim_sc_channel<0, bool > *p_64_M03_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_64->M03_AXI_wlast.bind(*p_64_M03_AXI_wlast);
        p_64_M03_AXI_wlast->set_sv_netview_offsetfromdp(13028912);
        xsim_sc_channel<0, bool > *p_64_M03_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_64->M03_AXI_wvalid.bind(*p_64_M03_AXI_wvalid);
        p_64_M03_AXI_wvalid->set_sv_netview_offsetfromdp(13028968);
        xsim_sc_channel<0, bool > *p_64_M03_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_64->M03_AXI_wready.bind(*p_64_M03_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_64_M03_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_64_M03_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_64->M03_AXI_bresp.bind(*p_64_M03_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_64_M03_AXI_bresp);
        xsim_sc_channel<0, bool > *p_64_M03_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_64->M03_AXI_bvalid.bind(*p_64_M03_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_64_M03_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_64_M03_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_64->M03_AXI_bready.bind(*p_64_M03_AXI_bready);
        p_64_M03_AXI_bready->set_sv_netview_offsetfromdp(13029192);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_64_M03_AXI_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_64->M03_AXI_araddr.bind(*p_64_M03_AXI_araddr);
        p_64_M03_AXI_araddr->set_sv_netview_offsetfromdp(13029248);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_64_M03_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_64->M03_AXI_arlen.bind(*p_64_M03_AXI_arlen);
        p_64_M03_AXI_arlen->set_sv_netview_offsetfromdp(13029304);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_64_M03_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_64->M03_AXI_arsize.bind(*p_64_M03_AXI_arsize);
        p_64_M03_AXI_arsize->set_sv_netview_offsetfromdp(13029360);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_64_M03_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_64->M03_AXI_arburst.bind(*p_64_M03_AXI_arburst);
        p_64_M03_AXI_arburst->set_sv_netview_offsetfromdp(13029416);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_64_M03_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_64->M03_AXI_arlock.bind(*p_64_M03_AXI_arlock);
        p_64_M03_AXI_arlock->set_sv_netview_offsetfromdp(13029472);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_64_M03_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_64->M03_AXI_arcache.bind(*p_64_M03_AXI_arcache);
        p_64_M03_AXI_arcache->set_sv_netview_offsetfromdp(13029528);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_64_M03_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_64->M03_AXI_arprot.bind(*p_64_M03_AXI_arprot);
        p_64_M03_AXI_arprot->set_sv_netview_offsetfromdp(13029584);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_64_M03_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_64->M03_AXI_arqos.bind(*p_64_M03_AXI_arqos);
        p_64_M03_AXI_arqos->set_sv_netview_offsetfromdp(13029640);
        xsim_sc_channel<0, bool > *p_64_M03_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_64->M03_AXI_arvalid.bind(*p_64_M03_AXI_arvalid);
        p_64_M03_AXI_arvalid->set_sv_netview_offsetfromdp(13029696);
        xsim_sc_channel<0, bool > *p_64_M03_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_64->M03_AXI_arready.bind(*p_64_M03_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_64_M03_AXI_arready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_64_M03_AXI_rdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_64->M03_AXI_rdata.bind(*p_64_M03_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_64_M03_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_64_M03_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_64->M03_AXI_rresp.bind(*p_64_M03_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_64_M03_AXI_rresp);
        xsim_sc_channel<0, bool > *p_64_M03_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_64->M03_AXI_rlast.bind(*p_64_M03_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_64_M03_AXI_rlast);
        xsim_sc_channel<0, bool > *p_64_M03_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_64->M03_AXI_rvalid.bind(*p_64_M03_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_64_M03_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_64_M03_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_64->M03_AXI_rready.bind(*p_64_M03_AXI_rready);
        p_64_M03_AXI_rready->set_sv_netview_offsetfromdp(13030032);
        sc_inst_65 = new pfm_top_sci(".pfm_top_wrapper.pfm_top_i.pfm_top_sci_inst");
        sc_inst_65->xsim_set_dbg_index(46);
        sc_inst_66 = new pfm_top_axi_vip_0_0(".pfm_top_wrapper.pfm_top_i.static_region.axi_vip_0");
        sc_inst_66->xsim_set_dbg_index(258);
        xsim_sc_channel<0, bool > *p_66_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_66->aclk.bind(*p_66_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_66_aclk);
        xsim_sc_channel<0, bool > *p_66_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_66->aresetn.bind(*p_66_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_66_aresetn);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_66_s_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_66->s_axi_awaddr.bind(*p_66_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_66_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_66_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_66->s_axi_awlen.bind(*p_66_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_66_s_axi_awlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_66_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_66->s_axi_awburst.bind(*p_66_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_66_s_axi_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_66_s_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_66->s_axi_awlock.bind(*p_66_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_66_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_66_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_66->s_axi_awcache.bind(*p_66_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_66_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_66_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_66->s_axi_awprot.bind(*p_66_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_66_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_66_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_66->s_axi_awqos.bind(*p_66_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_66_s_axi_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_66_s_axi_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_66->s_axi_awuser.bind(*p_66_s_axi_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_66_s_axi_awuser);
        xsim_sc_channel<0, bool > *p_66_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_66->s_axi_awvalid.bind(*p_66_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_66_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_66_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_66->s_axi_awready.bind(*p_66_s_axi_awready);
        p_66_s_axi_awready->set_sv_netview_offsetfromdp(13209888);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_66_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_66->s_axi_wdata.bind(*p_66_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_66_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_66_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_66->s_axi_wstrb.bind(*p_66_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_66_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_66_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_66->s_axi_wlast.bind(*p_66_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_66_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_66_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_66->s_axi_wvalid.bind(*p_66_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_66_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_66_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_66->s_axi_wready.bind(*p_66_s_axi_wready);
        p_66_s_axi_wready->set_sv_netview_offsetfromdp(13210168);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_66_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_66->s_axi_bresp.bind(*p_66_s_axi_bresp);
        p_66_s_axi_bresp->set_sv_netview_offsetfromdp(13210224);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_66_s_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_66->s_axi_buser.bind(*p_66_s_axi_buser);
        p_66_s_axi_buser->set_sv_netview_offsetfromdp(13210280);
        xsim_sc_channel<0, bool > *p_66_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_66->s_axi_bvalid.bind(*p_66_s_axi_bvalid);
        p_66_s_axi_bvalid->set_sv_netview_offsetfromdp(13210336);
        xsim_sc_channel<0, bool > *p_66_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_66->s_axi_bready.bind(*p_66_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_66_s_axi_bready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_66_s_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_66->s_axi_araddr.bind(*p_66_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_66_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_66_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_66->s_axi_arlen.bind(*p_66_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_66_s_axi_arlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_66_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_66->s_axi_arburst.bind(*p_66_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_66_s_axi_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_66_s_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_66->s_axi_arlock.bind(*p_66_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_66_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_66_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_66->s_axi_arcache.bind(*p_66_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_66_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_66_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_66->s_axi_arprot.bind(*p_66_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_66_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_66_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_66->s_axi_arqos.bind(*p_66_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_66_s_axi_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_66_s_axi_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_66->s_axi_aruser.bind(*p_66_s_axi_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_66_s_axi_aruser);
        xsim_sc_channel<0, bool > *p_66_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_66->s_axi_arvalid.bind(*p_66_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_66_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_66_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_66->s_axi_arready.bind(*p_66_s_axi_arready);
        p_66_s_axi_arready->set_sv_netview_offsetfromdp(13210952);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_66_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_66->s_axi_rdata.bind(*p_66_s_axi_rdata);
        p_66_s_axi_rdata->set_sv_netview_offsetfromdp(13211008);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_66_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_66->s_axi_rresp.bind(*p_66_s_axi_rresp);
        p_66_s_axi_rresp->set_sv_netview_offsetfromdp(13211064);
        xsim_sc_channel<0, bool > *p_66_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_66->s_axi_rlast.bind(*p_66_s_axi_rlast);
        p_66_s_axi_rlast->set_sv_netview_offsetfromdp(13211120);
        xsim_sc_channel<0, bool > *p_66_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_66->s_axi_rvalid.bind(*p_66_s_axi_rvalid);
        p_66_s_axi_rvalid->set_sv_netview_offsetfromdp(13211176);
        xsim_sc_channel<0, bool > *p_66_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_66->s_axi_rready.bind(*p_66_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_66_s_axi_rready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_66_m_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_66->m_axi_awaddr.bind(*p_66_m_axi_awaddr);
        p_66_m_axi_awaddr->set_sv_netview_offsetfromdp(13211288);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_66_m_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_66->m_axi_awlen.bind(*p_66_m_axi_awlen);
        p_66_m_axi_awlen->set_sv_netview_offsetfromdp(13211344);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_66_m_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_66->m_axi_awburst.bind(*p_66_m_axi_awburst);
        p_66_m_axi_awburst->set_sv_netview_offsetfromdp(13211400);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_66_m_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_66->m_axi_awlock.bind(*p_66_m_axi_awlock);
        p_66_m_axi_awlock->set_sv_netview_offsetfromdp(13211456);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_66_m_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_66->m_axi_awcache.bind(*p_66_m_axi_awcache);
        p_66_m_axi_awcache->set_sv_netview_offsetfromdp(13211512);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_66_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_66->m_axi_awprot.bind(*p_66_m_axi_awprot);
        p_66_m_axi_awprot->set_sv_netview_offsetfromdp(13211568);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_66_m_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_66->m_axi_awqos.bind(*p_66_m_axi_awqos);
        p_66_m_axi_awqos->set_sv_netview_offsetfromdp(13211624);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_66_m_axi_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_66->m_axi_awuser.bind(*p_66_m_axi_awuser);
        p_66_m_axi_awuser->set_sv_netview_offsetfromdp(13211680);
        xsim_sc_channel<0, bool > *p_66_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_66->m_axi_awvalid.bind(*p_66_m_axi_awvalid);
        p_66_m_axi_awvalid->set_sv_netview_offsetfromdp(13211736);
        xsim_sc_channel<0, bool > *p_66_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_66->m_axi_awready.bind(*p_66_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_66_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_66_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_66->m_axi_wdata.bind(*p_66_m_axi_wdata);
        p_66_m_axi_wdata->set_sv_netview_offsetfromdp(13211848);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_66_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_66->m_axi_wstrb.bind(*p_66_m_axi_wstrb);
        p_66_m_axi_wstrb->set_sv_netview_offsetfromdp(13211904);
        xsim_sc_channel<0, bool > *p_66_m_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_66->m_axi_wlast.bind(*p_66_m_axi_wlast);
        p_66_m_axi_wlast->set_sv_netview_offsetfromdp(13211960);
        xsim_sc_channel<0, bool > *p_66_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_66->m_axi_wvalid.bind(*p_66_m_axi_wvalid);
        p_66_m_axi_wvalid->set_sv_netview_offsetfromdp(13212016);
        xsim_sc_channel<0, bool > *p_66_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_66->m_axi_wready.bind(*p_66_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_66_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_66_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_66->m_axi_bresp.bind(*p_66_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_66_m_axi_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_66_m_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_66->m_axi_buser.bind(*p_66_m_axi_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_66_m_axi_buser);
        xsim_sc_channel<0, bool > *p_66_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_66->m_axi_bvalid.bind(*p_66_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_66_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_66_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_66->m_axi_bready.bind(*p_66_m_axi_bready);
        p_66_m_axi_bready->set_sv_netview_offsetfromdp(13212296);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_66_m_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_66->m_axi_araddr.bind(*p_66_m_axi_araddr);
        p_66_m_axi_araddr->set_sv_netview_offsetfromdp(13212352);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_66_m_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_66->m_axi_arlen.bind(*p_66_m_axi_arlen);
        p_66_m_axi_arlen->set_sv_netview_offsetfromdp(13212408);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_66_m_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_66->m_axi_arburst.bind(*p_66_m_axi_arburst);
        p_66_m_axi_arburst->set_sv_netview_offsetfromdp(13212464);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_66_m_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_66->m_axi_arlock.bind(*p_66_m_axi_arlock);
        p_66_m_axi_arlock->set_sv_netview_offsetfromdp(13212520);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_66_m_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_66->m_axi_arcache.bind(*p_66_m_axi_arcache);
        p_66_m_axi_arcache->set_sv_netview_offsetfromdp(13212576);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_66_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_66->m_axi_arprot.bind(*p_66_m_axi_arprot);
        p_66_m_axi_arprot->set_sv_netview_offsetfromdp(13212632);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_66_m_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_66->m_axi_arqos.bind(*p_66_m_axi_arqos);
        p_66_m_axi_arqos->set_sv_netview_offsetfromdp(13212688);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_66_m_axi_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_66->m_axi_aruser.bind(*p_66_m_axi_aruser);
        p_66_m_axi_aruser->set_sv_netview_offsetfromdp(13212744);
        xsim_sc_channel<0, bool > *p_66_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_66->m_axi_arvalid.bind(*p_66_m_axi_arvalid);
        p_66_m_axi_arvalid->set_sv_netview_offsetfromdp(13212800);
        xsim_sc_channel<0, bool > *p_66_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_66->m_axi_arready.bind(*p_66_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_66_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_66_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_66->m_axi_rdata.bind(*p_66_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_66_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_66_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_66->m_axi_rresp.bind(*p_66_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_66_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_66_m_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_66->m_axi_rlast.bind(*p_66_m_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_66_m_axi_rlast);
        xsim_sc_channel<0, bool > *p_66_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_66->m_axi_rvalid.bind(*p_66_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_66_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_66_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_66->m_axi_rready.bind(*p_66_m_axi_rready);
        p_66_m_axi_rready->set_sv_netview_offsetfromdp(13213136);
        sc_inst_67 = new pfm_top_xbar_0(".pfm_top_wrapper.pfm_top_i.static_region.connect_to_es_cu.xbar");
        sc_inst_67->xsim_set_dbg_index(667);
        xsim_sc_channel<0, bool > *p_67_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_67->aclk.bind(*p_67_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_67_aclk);
        xsim_sc_channel<0, bool > *p_67_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_67->aresetn.bind(*p_67_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_67_aresetn);
        xsim_sc_channel<128, sc_dt::sc_bv<128> > *p_67_s_axi_awaddr = new xsim_sc_channel<128, sc_dt::sc_bv<128> >();
        sc_inst_67->s_axi_awaddr.bind(*p_67_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_67_s_axi_awaddr);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_67_s_axi_awprot = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_67->s_axi_awprot.bind(*p_67_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_67_s_axi_awprot);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_67_s_axi_awvalid = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_67->s_axi_awvalid.bind(*p_67_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_67_s_axi_awvalid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_67_s_axi_awready = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_67->s_axi_awready.bind(*p_67_s_axi_awready);
        p_67_s_axi_awready->set_sv_netview_offsetfromdp(13328272);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_67_s_axi_wdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_67->s_axi_wdata.bind(*p_67_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_67_s_axi_wdata);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_67_s_axi_wstrb = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_67->s_axi_wstrb.bind(*p_67_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_67_s_axi_wstrb);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_67_s_axi_wvalid = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_67->s_axi_wvalid.bind(*p_67_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_67_s_axi_wvalid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_67_s_axi_wready = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_67->s_axi_wready.bind(*p_67_s_axi_wready);
        p_67_s_axi_wready->set_sv_netview_offsetfromdp(13328496);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_67_s_axi_bresp = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_67->s_axi_bresp.bind(*p_67_s_axi_bresp);
        p_67_s_axi_bresp->set_sv_netview_offsetfromdp(13328552);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_67_s_axi_bvalid = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_67->s_axi_bvalid.bind(*p_67_s_axi_bvalid);
        p_67_s_axi_bvalid->set_sv_netview_offsetfromdp(13328608);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_67_s_axi_bready = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_67->s_axi_bready.bind(*p_67_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_67_s_axi_bready);
        xsim_sc_channel<128, sc_dt::sc_bv<128> > *p_67_s_axi_araddr = new xsim_sc_channel<128, sc_dt::sc_bv<128> >();
        sc_inst_67->s_axi_araddr.bind(*p_67_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_67_s_axi_araddr);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_67_s_axi_arprot = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_67->s_axi_arprot.bind(*p_67_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_67_s_axi_arprot);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_67_s_axi_arvalid = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_67->s_axi_arvalid.bind(*p_67_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_67_s_axi_arvalid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_67_s_axi_arready = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_67->s_axi_arready.bind(*p_67_s_axi_arready);
        p_67_s_axi_arready->set_sv_netview_offsetfromdp(13328888);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_67_s_axi_rdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_67->s_axi_rdata.bind(*p_67_s_axi_rdata);
        p_67_s_axi_rdata->set_sv_netview_offsetfromdp(13328944);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_67_s_axi_rresp = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_67->s_axi_rresp.bind(*p_67_s_axi_rresp);
        p_67_s_axi_rresp->set_sv_netview_offsetfromdp(13329000);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_67_s_axi_rvalid = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_67->s_axi_rvalid.bind(*p_67_s_axi_rvalid);
        p_67_s_axi_rvalid->set_sv_netview_offsetfromdp(13329056);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_67_s_axi_rready = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_67->s_axi_rready.bind(*p_67_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_67_s_axi_rready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_67_m_axi_awaddr = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_67->m_axi_awaddr.bind(*p_67_m_axi_awaddr);
        p_67_m_axi_awaddr->set_sv_netview_offsetfromdp(13329168);
        xsim_sc_channel<12, sc_dt::sc_bv<12> > *p_67_m_axi_awprot = new xsim_sc_channel<12, sc_dt::sc_bv<12> >();
        sc_inst_67->m_axi_awprot.bind(*p_67_m_axi_awprot);
        p_67_m_axi_awprot->set_sv_netview_offsetfromdp(13329224);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_67_m_axi_awvalid = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_67->m_axi_awvalid.bind(*p_67_m_axi_awvalid);
        p_67_m_axi_awvalid->set_sv_netview_offsetfromdp(13329280);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_67_m_axi_awready = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_67->m_axi_awready.bind(*p_67_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_67_m_axi_awready);
        xsim_sc_channel<128, sc_dt::sc_bv<128> > *p_67_m_axi_wdata = new xsim_sc_channel<128, sc_dt::sc_bv<128> >();
        sc_inst_67->m_axi_wdata.bind(*p_67_m_axi_wdata);
        p_67_m_axi_wdata->set_sv_netview_offsetfromdp(13329392);
        xsim_sc_channel<16, sc_dt::sc_bv<16> > *p_67_m_axi_wstrb = new xsim_sc_channel<16, sc_dt::sc_bv<16> >();
        sc_inst_67->m_axi_wstrb.bind(*p_67_m_axi_wstrb);
        p_67_m_axi_wstrb->set_sv_netview_offsetfromdp(13329448);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_67_m_axi_wvalid = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_67->m_axi_wvalid.bind(*p_67_m_axi_wvalid);
        p_67_m_axi_wvalid->set_sv_netview_offsetfromdp(13329504);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_67_m_axi_wready = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_67->m_axi_wready.bind(*p_67_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_67_m_axi_wready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_67_m_axi_bresp = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_67->m_axi_bresp.bind(*p_67_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_67_m_axi_bresp);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_67_m_axi_bvalid = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_67->m_axi_bvalid.bind(*p_67_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_67_m_axi_bvalid);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_67_m_axi_bready = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_67->m_axi_bready.bind(*p_67_m_axi_bready);
        p_67_m_axi_bready->set_sv_netview_offsetfromdp(13329728);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_67_m_axi_araddr = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_67->m_axi_araddr.bind(*p_67_m_axi_araddr);
        p_67_m_axi_araddr->set_sv_netview_offsetfromdp(13329784);
        xsim_sc_channel<12, sc_dt::sc_bv<12> > *p_67_m_axi_arprot = new xsim_sc_channel<12, sc_dt::sc_bv<12> >();
        sc_inst_67->m_axi_arprot.bind(*p_67_m_axi_arprot);
        p_67_m_axi_arprot->set_sv_netview_offsetfromdp(13329840);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_67_m_axi_arvalid = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_67->m_axi_arvalid.bind(*p_67_m_axi_arvalid);
        p_67_m_axi_arvalid->set_sv_netview_offsetfromdp(13329896);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_67_m_axi_arready = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_67->m_axi_arready.bind(*p_67_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_67_m_axi_arready);
        xsim_sc_channel<128, sc_dt::sc_bv<128> > *p_67_m_axi_rdata = new xsim_sc_channel<128, sc_dt::sc_bv<128> >();
        sc_inst_67->m_axi_rdata.bind(*p_67_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_67_m_axi_rdata);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_67_m_axi_rresp = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_67->m_axi_rresp.bind(*p_67_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_67_m_axi_rresp);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_67_m_axi_rvalid = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_67->m_axi_rvalid.bind(*p_67_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_67_m_axi_rvalid);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_67_m_axi_rready = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_67->m_axi_rready.bind(*p_67_m_axi_rready);
        p_67_m_axi_rready->set_sv_netview_offsetfromdp(13330176);
        sc_inst_68 = new pfm_top_embedded_schedular_0(".pfm_top_wrapper.pfm_top_i.static_region.embedded_schedular");
        sc_inst_68->xsim_set_dbg_index(262);
        xsim_sc_channel<128, sc_dt::sc_bv<128> > *p_68_interrupt_cu = new xsim_sc_channel<128, sc_dt::sc_bv<128> >();
        sc_inst_68->interrupt_cu.bind(*p_68_interrupt_cu);
        (*_glb_hdl_sc_channel_map).push_back(p_68_interrupt_cu);
        xsim_sc_channel<0, bool > *p_68_interrupt_m2m = new xsim_sc_channel<0, bool >();
        sc_inst_68->interrupt_m2m.bind(*p_68_interrupt_m2m);
        p_68_interrupt_m2m->set_sv_netview_offsetfromdp(13332064);
        xsim_sc_channel<0, bool > *p_68_s_axi_ctrl_user_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_68->s_axi_ctrl_user_aresetn.bind(*p_68_s_axi_ctrl_user_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_68_s_axi_ctrl_user_aresetn);
        xsim_sc_channel<0, bool > *p_68_s_axi_data_p2p_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_68->s_axi_data_p2p_aresetn.bind(*p_68_s_axi_data_p2p_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_68_s_axi_data_p2p_aresetn);
        xsim_sc_channel<0, bool > *p_68_maxi_lite_mb_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_68->maxi_lite_mb_aresetn.bind(*p_68_maxi_lite_mb_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_68_maxi_lite_mb_aresetn);
        xsim_sc_channel<0, bool > *p_68_m_axi_data_m2m_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_68->m_axi_data_m2m_aresetn.bind(*p_68_m_axi_data_m2m_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_68_m_axi_data_m2m_aresetn);
        xsim_sc_channel<0, bool > *p_68_s_axi_ctrl_user_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_68->s_axi_ctrl_user_aclk.bind(*p_68_s_axi_ctrl_user_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_68_s_axi_ctrl_user_aclk);
        xsim_sc_channel<0, bool > *p_68_s_axi_data_p2p_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_68->s_axi_data_p2p_aclk.bind(*p_68_s_axi_data_p2p_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_68_s_axi_data_p2p_aclk);
        xsim_sc_channel<0, bool > *p_68_maxi_lite_mb_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_68->maxi_lite_mb_aclk.bind(*p_68_maxi_lite_mb_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_68_maxi_lite_mb_aclk);
        xsim_sc_channel<0, bool > *p_68_m_axi_data_m2m_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_68->m_axi_data_m2m_aclk.bind(*p_68_m_axi_data_m2m_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_68_m_axi_data_m2m_aclk);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_68_s_axi_data_p2p_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_68->s_axi_data_p2p_awaddr.bind(*p_68_s_axi_data_p2p_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_68_s_axi_data_p2p_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_68_s_axi_data_p2p_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_68->s_axi_data_p2p_awlen.bind(*p_68_s_axi_data_p2p_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_68_s_axi_data_p2p_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_68_s_axi_data_p2p_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_68->s_axi_data_p2p_awsize.bind(*p_68_s_axi_data_p2p_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_68_s_axi_data_p2p_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_68_s_axi_data_p2p_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_68->s_axi_data_p2p_awburst.bind(*p_68_s_axi_data_p2p_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_68_s_axi_data_p2p_awburst);
        xsim_sc_channel<0, bool > *p_68_s_axi_data_p2p_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_68->s_axi_data_p2p_awlock.bind(*p_68_s_axi_data_p2p_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_68_s_axi_data_p2p_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_68_s_axi_data_p2p_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_68->s_axi_data_p2p_awcache.bind(*p_68_s_axi_data_p2p_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_68_s_axi_data_p2p_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_68_s_axi_data_p2p_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_68->s_axi_data_p2p_awprot.bind(*p_68_s_axi_data_p2p_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_68_s_axi_data_p2p_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_68_s_axi_data_p2p_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_68->s_axi_data_p2p_awregion.bind(*p_68_s_axi_data_p2p_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_68_s_axi_data_p2p_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_68_s_axi_data_p2p_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_68->s_axi_data_p2p_awqos.bind(*p_68_s_axi_data_p2p_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_68_s_axi_data_p2p_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_68_s_axi_data_p2p_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_68->s_axi_data_p2p_awuser.bind(*p_68_s_axi_data_p2p_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_68_s_axi_data_p2p_awuser);
        xsim_sc_channel<0, bool > *p_68_s_axi_data_p2p_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_68->s_axi_data_p2p_awvalid.bind(*p_68_s_axi_data_p2p_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_68_s_axi_data_p2p_awvalid);
        xsim_sc_channel<0, bool > *p_68_s_axi_data_p2p_awready = new xsim_sc_channel<0, bool >();
        sc_inst_68->s_axi_data_p2p_awready.bind(*p_68_s_axi_data_p2p_awready);
        p_68_s_axi_data_p2p_awready->set_sv_netview_offsetfromdp(13333184);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_68_s_axi_data_p2p_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_68->s_axi_data_p2p_wdata.bind(*p_68_s_axi_data_p2p_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_68_s_axi_data_p2p_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_68_s_axi_data_p2p_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_68->s_axi_data_p2p_wstrb.bind(*p_68_s_axi_data_p2p_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_68_s_axi_data_p2p_wstrb);
        xsim_sc_channel<0, bool > *p_68_s_axi_data_p2p_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_68->s_axi_data_p2p_wlast.bind(*p_68_s_axi_data_p2p_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_68_s_axi_data_p2p_wlast);
        xsim_sc_channel<0, bool > *p_68_s_axi_data_p2p_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_68->s_axi_data_p2p_wvalid.bind(*p_68_s_axi_data_p2p_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_68_s_axi_data_p2p_wvalid);
        xsim_sc_channel<0, bool > *p_68_s_axi_data_p2p_wready = new xsim_sc_channel<0, bool >();
        sc_inst_68->s_axi_data_p2p_wready.bind(*p_68_s_axi_data_p2p_wready);
        p_68_s_axi_data_p2p_wready->set_sv_netview_offsetfromdp(13333464);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_68_s_axi_data_p2p_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_68->s_axi_data_p2p_bresp.bind(*p_68_s_axi_data_p2p_bresp);
        p_68_s_axi_data_p2p_bresp->set_sv_netview_offsetfromdp(13333520);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_68_s_axi_data_p2p_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_68->s_axi_data_p2p_buser.bind(*p_68_s_axi_data_p2p_buser);
        p_68_s_axi_data_p2p_buser->set_sv_netview_offsetfromdp(13333576);
        xsim_sc_channel<0, bool > *p_68_s_axi_data_p2p_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_68->s_axi_data_p2p_bvalid.bind(*p_68_s_axi_data_p2p_bvalid);
        p_68_s_axi_data_p2p_bvalid->set_sv_netview_offsetfromdp(13333632);
        xsim_sc_channel<0, bool > *p_68_s_axi_data_p2p_bready = new xsim_sc_channel<0, bool >();
        sc_inst_68->s_axi_data_p2p_bready.bind(*p_68_s_axi_data_p2p_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_68_s_axi_data_p2p_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_68_s_axi_data_p2p_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_68->s_axi_data_p2p_araddr.bind(*p_68_s_axi_data_p2p_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_68_s_axi_data_p2p_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_68_s_axi_data_p2p_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_68->s_axi_data_p2p_arlen.bind(*p_68_s_axi_data_p2p_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_68_s_axi_data_p2p_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_68_s_axi_data_p2p_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_68->s_axi_data_p2p_arsize.bind(*p_68_s_axi_data_p2p_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_68_s_axi_data_p2p_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_68_s_axi_data_p2p_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_68->s_axi_data_p2p_arburst.bind(*p_68_s_axi_data_p2p_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_68_s_axi_data_p2p_arburst);
        xsim_sc_channel<0, bool > *p_68_s_axi_data_p2p_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_68->s_axi_data_p2p_arlock.bind(*p_68_s_axi_data_p2p_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_68_s_axi_data_p2p_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_68_s_axi_data_p2p_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_68->s_axi_data_p2p_arcache.bind(*p_68_s_axi_data_p2p_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_68_s_axi_data_p2p_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_68_s_axi_data_p2p_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_68->s_axi_data_p2p_arprot.bind(*p_68_s_axi_data_p2p_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_68_s_axi_data_p2p_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_68_s_axi_data_p2p_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_68->s_axi_data_p2p_arregion.bind(*p_68_s_axi_data_p2p_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_68_s_axi_data_p2p_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_68_s_axi_data_p2p_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_68->s_axi_data_p2p_arqos.bind(*p_68_s_axi_data_p2p_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_68_s_axi_data_p2p_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_68_s_axi_data_p2p_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_68->s_axi_data_p2p_aruser.bind(*p_68_s_axi_data_p2p_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_68_s_axi_data_p2p_aruser);
        xsim_sc_channel<0, bool > *p_68_s_axi_data_p2p_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_68->s_axi_data_p2p_arvalid.bind(*p_68_s_axi_data_p2p_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_68_s_axi_data_p2p_arvalid);
        xsim_sc_channel<0, bool > *p_68_s_axi_data_p2p_arready = new xsim_sc_channel<0, bool >();
        sc_inst_68->s_axi_data_p2p_arready.bind(*p_68_s_axi_data_p2p_arready);
        p_68_s_axi_data_p2p_arready->set_sv_netview_offsetfromdp(13334360);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_68_s_axi_data_p2p_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_68->s_axi_data_p2p_rdata.bind(*p_68_s_axi_data_p2p_rdata);
        p_68_s_axi_data_p2p_rdata->set_sv_netview_offsetfromdp(13334416);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_68_s_axi_data_p2p_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_68->s_axi_data_p2p_rresp.bind(*p_68_s_axi_data_p2p_rresp);
        p_68_s_axi_data_p2p_rresp->set_sv_netview_offsetfromdp(13334472);
        xsim_sc_channel<0, bool > *p_68_s_axi_data_p2p_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_68->s_axi_data_p2p_rlast.bind(*p_68_s_axi_data_p2p_rlast);
        p_68_s_axi_data_p2p_rlast->set_sv_netview_offsetfromdp(13334528);
        xsim_sc_channel<0, bool > *p_68_s_axi_data_p2p_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_68->s_axi_data_p2p_rvalid.bind(*p_68_s_axi_data_p2p_rvalid);
        p_68_s_axi_data_p2p_rvalid->set_sv_netview_offsetfromdp(13334584);
        xsim_sc_channel<0, bool > *p_68_s_axi_data_p2p_rready = new xsim_sc_channel<0, bool >();
        sc_inst_68->s_axi_data_p2p_rready.bind(*p_68_s_axi_data_p2p_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_68_s_axi_data_p2p_rready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_68_maxi_lite_mb_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_68->maxi_lite_mb_awaddr.bind(*p_68_maxi_lite_mb_awaddr);
        p_68_maxi_lite_mb_awaddr->set_sv_netview_offsetfromdp(13334696);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_68_maxi_lite_mb_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_68->maxi_lite_mb_awprot.bind(*p_68_maxi_lite_mb_awprot);
        p_68_maxi_lite_mb_awprot->set_sv_netview_offsetfromdp(13334752);
        xsim_sc_channel<0, bool > *p_68_maxi_lite_mb_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_68->maxi_lite_mb_awvalid.bind(*p_68_maxi_lite_mb_awvalid);
        p_68_maxi_lite_mb_awvalid->set_sv_netview_offsetfromdp(13334808);
        xsim_sc_channel<0, bool > *p_68_maxi_lite_mb_awready = new xsim_sc_channel<0, bool >();
        sc_inst_68->maxi_lite_mb_awready.bind(*p_68_maxi_lite_mb_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_68_maxi_lite_mb_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_68_maxi_lite_mb_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_68->maxi_lite_mb_wdata.bind(*p_68_maxi_lite_mb_wdata);
        p_68_maxi_lite_mb_wdata->set_sv_netview_offsetfromdp(13334920);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_68_maxi_lite_mb_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_68->maxi_lite_mb_wstrb.bind(*p_68_maxi_lite_mb_wstrb);
        p_68_maxi_lite_mb_wstrb->set_sv_netview_offsetfromdp(13334976);
        xsim_sc_channel<0, bool > *p_68_maxi_lite_mb_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_68->maxi_lite_mb_wvalid.bind(*p_68_maxi_lite_mb_wvalid);
        p_68_maxi_lite_mb_wvalid->set_sv_netview_offsetfromdp(13335032);
        xsim_sc_channel<0, bool > *p_68_maxi_lite_mb_wready = new xsim_sc_channel<0, bool >();
        sc_inst_68->maxi_lite_mb_wready.bind(*p_68_maxi_lite_mb_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_68_maxi_lite_mb_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_68_maxi_lite_mb_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_68->maxi_lite_mb_bresp.bind(*p_68_maxi_lite_mb_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_68_maxi_lite_mb_bresp);
        xsim_sc_channel<0, bool > *p_68_maxi_lite_mb_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_68->maxi_lite_mb_bvalid.bind(*p_68_maxi_lite_mb_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_68_maxi_lite_mb_bvalid);
        xsim_sc_channel<0, bool > *p_68_maxi_lite_mb_bready = new xsim_sc_channel<0, bool >();
        sc_inst_68->maxi_lite_mb_bready.bind(*p_68_maxi_lite_mb_bready);
        p_68_maxi_lite_mb_bready->set_sv_netview_offsetfromdp(13335256);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_68_maxi_lite_mb_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_68->maxi_lite_mb_araddr.bind(*p_68_maxi_lite_mb_araddr);
        p_68_maxi_lite_mb_araddr->set_sv_netview_offsetfromdp(13335312);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_68_maxi_lite_mb_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_68->maxi_lite_mb_arprot.bind(*p_68_maxi_lite_mb_arprot);
        p_68_maxi_lite_mb_arprot->set_sv_netview_offsetfromdp(13335368);
        xsim_sc_channel<0, bool > *p_68_maxi_lite_mb_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_68->maxi_lite_mb_arvalid.bind(*p_68_maxi_lite_mb_arvalid);
        p_68_maxi_lite_mb_arvalid->set_sv_netview_offsetfromdp(13335424);
        xsim_sc_channel<0, bool > *p_68_maxi_lite_mb_arready = new xsim_sc_channel<0, bool >();
        sc_inst_68->maxi_lite_mb_arready.bind(*p_68_maxi_lite_mb_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_68_maxi_lite_mb_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_68_maxi_lite_mb_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_68->maxi_lite_mb_rdata.bind(*p_68_maxi_lite_mb_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_68_maxi_lite_mb_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_68_maxi_lite_mb_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_68->maxi_lite_mb_rresp.bind(*p_68_maxi_lite_mb_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_68_maxi_lite_mb_rresp);
        xsim_sc_channel<0, bool > *p_68_maxi_lite_mb_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_68->maxi_lite_mb_rvalid.bind(*p_68_maxi_lite_mb_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_68_maxi_lite_mb_rvalid);
        xsim_sc_channel<0, bool > *p_68_maxi_lite_mb_rready = new xsim_sc_channel<0, bool >();
        sc_inst_68->maxi_lite_mb_rready.bind(*p_68_maxi_lite_mb_rready);
        p_68_maxi_lite_mb_rready->set_sv_netview_offsetfromdp(13335704);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_68_s_axi_ctrl_user_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_68->s_axi_ctrl_user_awaddr.bind(*p_68_s_axi_ctrl_user_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_68_s_axi_ctrl_user_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_68_s_axi_ctrl_user_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_68->s_axi_ctrl_user_awprot.bind(*p_68_s_axi_ctrl_user_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_68_s_axi_ctrl_user_awprot);
        xsim_sc_channel<0, bool > *p_68_s_axi_ctrl_user_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_68->s_axi_ctrl_user_awvalid.bind(*p_68_s_axi_ctrl_user_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_68_s_axi_ctrl_user_awvalid);
        xsim_sc_channel<0, bool > *p_68_s_axi_ctrl_user_awready = new xsim_sc_channel<0, bool >();
        sc_inst_68->s_axi_ctrl_user_awready.bind(*p_68_s_axi_ctrl_user_awready);
        p_68_s_axi_ctrl_user_awready->set_sv_netview_offsetfromdp(13335928);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_68_s_axi_ctrl_user_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_68->s_axi_ctrl_user_wdata.bind(*p_68_s_axi_ctrl_user_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_68_s_axi_ctrl_user_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_68_s_axi_ctrl_user_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_68->s_axi_ctrl_user_wstrb.bind(*p_68_s_axi_ctrl_user_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_68_s_axi_ctrl_user_wstrb);
        xsim_sc_channel<0, bool > *p_68_s_axi_ctrl_user_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_68->s_axi_ctrl_user_wvalid.bind(*p_68_s_axi_ctrl_user_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_68_s_axi_ctrl_user_wvalid);
        xsim_sc_channel<0, bool > *p_68_s_axi_ctrl_user_wready = new xsim_sc_channel<0, bool >();
        sc_inst_68->s_axi_ctrl_user_wready.bind(*p_68_s_axi_ctrl_user_wready);
        p_68_s_axi_ctrl_user_wready->set_sv_netview_offsetfromdp(13336152);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_68_s_axi_ctrl_user_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_68->s_axi_ctrl_user_bresp.bind(*p_68_s_axi_ctrl_user_bresp);
        p_68_s_axi_ctrl_user_bresp->set_sv_netview_offsetfromdp(13336208);
        xsim_sc_channel<0, bool > *p_68_s_axi_ctrl_user_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_68->s_axi_ctrl_user_bvalid.bind(*p_68_s_axi_ctrl_user_bvalid);
        p_68_s_axi_ctrl_user_bvalid->set_sv_netview_offsetfromdp(13336264);
        xsim_sc_channel<0, bool > *p_68_s_axi_ctrl_user_bready = new xsim_sc_channel<0, bool >();
        sc_inst_68->s_axi_ctrl_user_bready.bind(*p_68_s_axi_ctrl_user_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_68_s_axi_ctrl_user_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_68_s_axi_ctrl_user_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_68->s_axi_ctrl_user_araddr.bind(*p_68_s_axi_ctrl_user_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_68_s_axi_ctrl_user_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_68_s_axi_ctrl_user_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_68->s_axi_ctrl_user_arprot.bind(*p_68_s_axi_ctrl_user_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_68_s_axi_ctrl_user_arprot);
        xsim_sc_channel<0, bool > *p_68_s_axi_ctrl_user_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_68->s_axi_ctrl_user_arvalid.bind(*p_68_s_axi_ctrl_user_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_68_s_axi_ctrl_user_arvalid);
        xsim_sc_channel<0, bool > *p_68_s_axi_ctrl_user_arready = new xsim_sc_channel<0, bool >();
        sc_inst_68->s_axi_ctrl_user_arready.bind(*p_68_s_axi_ctrl_user_arready);
        p_68_s_axi_ctrl_user_arready->set_sv_netview_offsetfromdp(13336544);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_68_s_axi_ctrl_user_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_68->s_axi_ctrl_user_rdata.bind(*p_68_s_axi_ctrl_user_rdata);
        p_68_s_axi_ctrl_user_rdata->set_sv_netview_offsetfromdp(13336600);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_68_s_axi_ctrl_user_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_68->s_axi_ctrl_user_rresp.bind(*p_68_s_axi_ctrl_user_rresp);
        p_68_s_axi_ctrl_user_rresp->set_sv_netview_offsetfromdp(13336656);
        xsim_sc_channel<0, bool > *p_68_s_axi_ctrl_user_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_68->s_axi_ctrl_user_rvalid.bind(*p_68_s_axi_ctrl_user_rvalid);
        p_68_s_axi_ctrl_user_rvalid->set_sv_netview_offsetfromdp(13336712);
        xsim_sc_channel<0, bool > *p_68_s_axi_ctrl_user_rready = new xsim_sc_channel<0, bool >();
        sc_inst_68->s_axi_ctrl_user_rready.bind(*p_68_s_axi_ctrl_user_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_68_s_axi_ctrl_user_rready);
        sc_inst_69 = new pfm_top_sim_address_0_0(".pfm_top_wrapper.pfm_top_i.static_region.sim_address_0");
        sc_inst_69->xsim_set_dbg_index(263);
        xsim_sc_channel<0, bool > *p_69_m_aximm_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_69->m_aximm_aclk.bind(*p_69_m_aximm_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_69_m_aximm_aclk);
        xsim_sc_channel<0, bool > *p_69_m_aximm_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_69->m_aximm_aresetn.bind(*p_69_m_aximm_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_69_m_aximm_aresetn);
        xsim_sc_channel<0, bool > *p_69_s_aximm_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_69->s_aximm_aclk.bind(*p_69_s_aximm_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_69_s_aximm_aclk);
        xsim_sc_channel<0, bool > *p_69_s_aximm_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_69->s_aximm_aresetn.bind(*p_69_s_aximm_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_69_s_aximm_aresetn);
        xsim_sc_channel<0, bool > *p_69_m_aximm_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_69->m_aximm_AWVALID.bind(*p_69_m_aximm_AWVALID);
        p_69_m_aximm_AWVALID->set_sv_netview_offsetfromdp(13337096);
        xsim_sc_channel<0, bool > *p_69_m_aximm_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_69->m_aximm_AWREADY.bind(*p_69_m_aximm_AWREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_69_m_aximm_AWREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_69_m_aximm_AWADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_69->m_aximm_AWADDR.bind(*p_69_m_aximm_AWADDR);
        p_69_m_aximm_AWADDR->set_sv_netview_offsetfromdp(13337208);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_69_m_aximm_AWID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_69->m_aximm_AWID.bind(*p_69_m_aximm_AWID);
        p_69_m_aximm_AWID->set_sv_netview_offsetfromdp(13337264);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_69_m_aximm_AWLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_69->m_aximm_AWLEN.bind(*p_69_m_aximm_AWLEN);
        p_69_m_aximm_AWLEN->set_sv_netview_offsetfromdp(13337320);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_69_m_aximm_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_69->m_aximm_AWSIZE.bind(*p_69_m_aximm_AWSIZE);
        p_69_m_aximm_AWSIZE->set_sv_netview_offsetfromdp(13337376);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_69_m_aximm_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_69->m_aximm_AWBURST.bind(*p_69_m_aximm_AWBURST);
        p_69_m_aximm_AWBURST->set_sv_netview_offsetfromdp(13337432);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_69_m_aximm_AWLOCK = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_69->m_aximm_AWLOCK.bind(*p_69_m_aximm_AWLOCK);
        p_69_m_aximm_AWLOCK->set_sv_netview_offsetfromdp(13337488);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_69_m_aximm_AWCACHE = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_69->m_aximm_AWCACHE.bind(*p_69_m_aximm_AWCACHE);
        p_69_m_aximm_AWCACHE->set_sv_netview_offsetfromdp(13337544);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_69_m_aximm_AWPROT = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_69->m_aximm_AWPROT.bind(*p_69_m_aximm_AWPROT);
        p_69_m_aximm_AWPROT->set_sv_netview_offsetfromdp(13337600);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_69_m_aximm_AWREGION = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_69->m_aximm_AWREGION.bind(*p_69_m_aximm_AWREGION);
        p_69_m_aximm_AWREGION->set_sv_netview_offsetfromdp(13337656);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_69_m_aximm_AWQOS = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_69->m_aximm_AWQOS.bind(*p_69_m_aximm_AWQOS);
        p_69_m_aximm_AWQOS->set_sv_netview_offsetfromdp(13337712);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_69_m_aximm_AWUSER = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_69->m_aximm_AWUSER.bind(*p_69_m_aximm_AWUSER);
        p_69_m_aximm_AWUSER->set_sv_netview_offsetfromdp(13337768);
        xsim_sc_channel<0, bool > *p_69_m_aximm_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_69->m_aximm_WVALID.bind(*p_69_m_aximm_WVALID);
        p_69_m_aximm_WVALID->set_sv_netview_offsetfromdp(13337824);
        xsim_sc_channel<0, bool > *p_69_m_aximm_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_69->m_aximm_WREADY.bind(*p_69_m_aximm_WREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_69_m_aximm_WREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_69_m_aximm_WDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_69->m_aximm_WDATA.bind(*p_69_m_aximm_WDATA);
        p_69_m_aximm_WDATA->set_sv_netview_offsetfromdp(13337936);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_69_m_aximm_WSTRB = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_69->m_aximm_WSTRB.bind(*p_69_m_aximm_WSTRB);
        p_69_m_aximm_WSTRB->set_sv_netview_offsetfromdp(13337992);
        xsim_sc_channel<0, bool > *p_69_m_aximm_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_69->m_aximm_WLAST.bind(*p_69_m_aximm_WLAST);
        p_69_m_aximm_WLAST->set_sv_netview_offsetfromdp(13338048);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_69_m_aximm_WUSER = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_69->m_aximm_WUSER.bind(*p_69_m_aximm_WUSER);
        p_69_m_aximm_WUSER->set_sv_netview_offsetfromdp(13338104);
        xsim_sc_channel<0, bool > *p_69_m_aximm_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_69->m_aximm_ARVALID.bind(*p_69_m_aximm_ARVALID);
        p_69_m_aximm_ARVALID->set_sv_netview_offsetfromdp(13338160);
        xsim_sc_channel<0, bool > *p_69_m_aximm_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_69->m_aximm_ARREADY.bind(*p_69_m_aximm_ARREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_69_m_aximm_ARREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_69_m_aximm_ARADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_69->m_aximm_ARADDR.bind(*p_69_m_aximm_ARADDR);
        p_69_m_aximm_ARADDR->set_sv_netview_offsetfromdp(13338272);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_69_m_aximm_ARID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_69->m_aximm_ARID.bind(*p_69_m_aximm_ARID);
        p_69_m_aximm_ARID->set_sv_netview_offsetfromdp(13338328);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_69_m_aximm_ARLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_69->m_aximm_ARLEN.bind(*p_69_m_aximm_ARLEN);
        p_69_m_aximm_ARLEN->set_sv_netview_offsetfromdp(13338384);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_69_m_aximm_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_69->m_aximm_ARSIZE.bind(*p_69_m_aximm_ARSIZE);
        p_69_m_aximm_ARSIZE->set_sv_netview_offsetfromdp(13338440);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_69_m_aximm_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_69->m_aximm_ARBURST.bind(*p_69_m_aximm_ARBURST);
        p_69_m_aximm_ARBURST->set_sv_netview_offsetfromdp(13338496);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_69_m_aximm_ARLOCK = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_69->m_aximm_ARLOCK.bind(*p_69_m_aximm_ARLOCK);
        p_69_m_aximm_ARLOCK->set_sv_netview_offsetfromdp(13338552);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_69_m_aximm_ARCACHE = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_69->m_aximm_ARCACHE.bind(*p_69_m_aximm_ARCACHE);
        p_69_m_aximm_ARCACHE->set_sv_netview_offsetfromdp(13338608);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_69_m_aximm_ARPROT = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_69->m_aximm_ARPROT.bind(*p_69_m_aximm_ARPROT);
        p_69_m_aximm_ARPROT->set_sv_netview_offsetfromdp(13338664);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_69_m_aximm_ARREGION = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_69->m_aximm_ARREGION.bind(*p_69_m_aximm_ARREGION);
        p_69_m_aximm_ARREGION->set_sv_netview_offsetfromdp(13338720);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_69_m_aximm_ARQOS = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_69->m_aximm_ARQOS.bind(*p_69_m_aximm_ARQOS);
        p_69_m_aximm_ARQOS->set_sv_netview_offsetfromdp(13338776);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_69_m_aximm_ARUSER = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_69->m_aximm_ARUSER.bind(*p_69_m_aximm_ARUSER);
        p_69_m_aximm_ARUSER->set_sv_netview_offsetfromdp(13338832);
        xsim_sc_channel<0, bool > *p_69_m_aximm_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_69->m_aximm_RVALID.bind(*p_69_m_aximm_RVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_69_m_aximm_RVALID);
        xsim_sc_channel<0, bool > *p_69_m_aximm_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_69->m_aximm_RREADY.bind(*p_69_m_aximm_RREADY);
        p_69_m_aximm_RREADY->set_sv_netview_offsetfromdp(13338944);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_69_m_aximm_RDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_69->m_aximm_RDATA.bind(*p_69_m_aximm_RDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_69_m_aximm_RDATA);
        xsim_sc_channel<0, bool > *p_69_m_aximm_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_69->m_aximm_RLAST.bind(*p_69_m_aximm_RLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_69_m_aximm_RLAST);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_69_m_aximm_RID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_69->m_aximm_RID.bind(*p_69_m_aximm_RID);
        (*_glb_hdl_sc_channel_map).push_back(p_69_m_aximm_RID);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_69_m_aximm_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_69->m_aximm_RRESP.bind(*p_69_m_aximm_RRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_69_m_aximm_RRESP);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_69_m_aximm_RUSER = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_69->m_aximm_RUSER.bind(*p_69_m_aximm_RUSER);
        (*_glb_hdl_sc_channel_map).push_back(p_69_m_aximm_RUSER);
        xsim_sc_channel<0, bool > *p_69_m_aximm_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_69->m_aximm_BVALID.bind(*p_69_m_aximm_BVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_69_m_aximm_BVALID);
        xsim_sc_channel<0, bool > *p_69_m_aximm_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_69->m_aximm_BREADY.bind(*p_69_m_aximm_BREADY);
        p_69_m_aximm_BREADY->set_sv_netview_offsetfromdp(13339336);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_69_m_aximm_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_69->m_aximm_BRESP.bind(*p_69_m_aximm_BRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_69_m_aximm_BRESP);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_69_m_aximm_BID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_69->m_aximm_BID.bind(*p_69_m_aximm_BID);
        (*_glb_hdl_sc_channel_map).push_back(p_69_m_aximm_BID);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_69_m_aximm_BUSER = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_69->m_aximm_BUSER.bind(*p_69_m_aximm_BUSER);
        (*_glb_hdl_sc_channel_map).push_back(p_69_m_aximm_BUSER);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_69_s_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_69->s_axi_awaddr.bind(*p_69_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_69_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_69_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_69->s_axi_awlen.bind(*p_69_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_69_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_69_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_69->s_axi_awsize.bind(*p_69_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_69_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_69_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_69->s_axi_awburst.bind(*p_69_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_69_s_axi_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_69_s_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_69->s_axi_awlock.bind(*p_69_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_69_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_69_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_69->s_axi_awcache.bind(*p_69_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_69_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_69_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_69->s_axi_awprot.bind(*p_69_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_69_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_69_s_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_69->s_axi_awregion.bind(*p_69_s_axi_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_69_s_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_69_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_69->s_axi_awqos.bind(*p_69_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_69_s_axi_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_69_s_axi_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_69->s_axi_awuser.bind(*p_69_s_axi_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_69_s_axi_awuser);
        xsim_sc_channel<0, bool > *p_69_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_69->s_axi_awvalid.bind(*p_69_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_69_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_69_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_69->s_axi_awready.bind(*p_69_s_axi_awready);
        p_69_s_axi_awready->set_sv_netview_offsetfromdp(13340176);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_69_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_69->s_axi_wdata.bind(*p_69_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_69_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_69_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_69->s_axi_wstrb.bind(*p_69_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_69_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_69_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_69->s_axi_wlast.bind(*p_69_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_69_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_69_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_69->s_axi_wvalid.bind(*p_69_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_69_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_69_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_69->s_axi_wready.bind(*p_69_s_axi_wready);
        p_69_s_axi_wready->set_sv_netview_offsetfromdp(13340456);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_69_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_69->s_axi_bresp.bind(*p_69_s_axi_bresp);
        p_69_s_axi_bresp->set_sv_netview_offsetfromdp(13340512);
        xsim_sc_channel<0, bool > *p_69_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_69->s_axi_bvalid.bind(*p_69_s_axi_bvalid);
        p_69_s_axi_bvalid->set_sv_netview_offsetfromdp(13340568);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_69_s_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_69->s_axi_buser.bind(*p_69_s_axi_buser);
        p_69_s_axi_buser->set_sv_netview_offsetfromdp(13340624);
        xsim_sc_channel<0, bool > *p_69_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_69->s_axi_bready.bind(*p_69_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_69_s_axi_bready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_69_s_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_69->s_axi_araddr.bind(*p_69_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_69_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_69_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_69->s_axi_arlen.bind(*p_69_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_69_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_69_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_69->s_axi_arsize.bind(*p_69_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_69_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_69_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_69->s_axi_arburst.bind(*p_69_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_69_s_axi_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_69_s_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_69->s_axi_arlock.bind(*p_69_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_69_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_69_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_69->s_axi_arcache.bind(*p_69_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_69_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_69_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_69->s_axi_arprot.bind(*p_69_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_69_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_69_s_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_69->s_axi_arregion.bind(*p_69_s_axi_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_69_s_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_69_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_69->s_axi_arqos.bind(*p_69_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_69_s_axi_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_69_s_axi_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_69->s_axi_aruser.bind(*p_69_s_axi_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_69_s_axi_aruser);
        xsim_sc_channel<0, bool > *p_69_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_69->s_axi_arvalid.bind(*p_69_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_69_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_69_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_69->s_axi_arready.bind(*p_69_s_axi_arready);
        p_69_s_axi_arready->set_sv_netview_offsetfromdp(13341352);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_69_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_69->s_axi_rdata.bind(*p_69_s_axi_rdata);
        p_69_s_axi_rdata->set_sv_netview_offsetfromdp(13341408);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_69_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_69->s_axi_rresp.bind(*p_69_s_axi_rresp);
        p_69_s_axi_rresp->set_sv_netview_offsetfromdp(13341464);
        xsim_sc_channel<0, bool > *p_69_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_69->s_axi_rlast.bind(*p_69_s_axi_rlast);
        p_69_s_axi_rlast->set_sv_netview_offsetfromdp(13341520);
        xsim_sc_channel<0, bool > *p_69_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_69->s_axi_rvalid.bind(*p_69_s_axi_rvalid);
        p_69_s_axi_rvalid->set_sv_netview_offsetfromdp(13341576);
        xsim_sc_channel<0, bool > *p_69_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_69->s_axi_rready.bind(*p_69_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_69_s_axi_rready);
        sc_inst_70 = new pfm_top_sim_qdma_0_0(".pfm_top_wrapper.pfm_top_i.static_region.sim_qdma_0");
        sc_inst_70->xsim_set_dbg_index(264);
        xsim_sc_channel<0, bool > *p_70_m_aximm_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_70->m_aximm_aclk.bind(*p_70_m_aximm_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_70_m_aximm_aclk);
        xsim_sc_channel<0, bool > *p_70_m_aximm_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_70->m_aximm_aresetn.bind(*p_70_m_aximm_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_70_m_aximm_aresetn);
        xsim_sc_channel<0, bool > *p_70_m_axictrl_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_70->m_axictrl_aclk.bind(*p_70_m_axictrl_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_70_m_axictrl_aclk);
        xsim_sc_channel<0, bool > *p_70_m_axictrl_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_70->m_axictrl_aresetn.bind(*p_70_m_axictrl_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_70_m_axictrl_aresetn);
        xsim_sc_channel<0, bool > *p_70_s_aximm_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_70->s_aximm_aclk.bind(*p_70_s_aximm_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_70_s_aximm_aclk);
        xsim_sc_channel<0, bool > *p_70_s_aximm_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_70->s_aximm_aresetn.bind(*p_70_s_aximm_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_70_s_aximm_aresetn);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_70_m_axictrl_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_70->m_axictrl_awaddr.bind(*p_70_m_axictrl_awaddr);
        p_70_m_axictrl_awaddr->set_sv_netview_offsetfromdp(13342072);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_70_m_axictrl_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_70->m_axictrl_awprot.bind(*p_70_m_axictrl_awprot);
        p_70_m_axictrl_awprot->set_sv_netview_offsetfromdp(13342128);
        xsim_sc_channel<0, bool > *p_70_m_axictrl_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_70->m_axictrl_awvalid.bind(*p_70_m_axictrl_awvalid);
        p_70_m_axictrl_awvalid->set_sv_netview_offsetfromdp(13342184);
        xsim_sc_channel<0, bool > *p_70_m_axictrl_awready = new xsim_sc_channel<0, bool >();
        sc_inst_70->m_axictrl_awready.bind(*p_70_m_axictrl_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_70_m_axictrl_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_70_m_axictrl_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_70->m_axictrl_wdata.bind(*p_70_m_axictrl_wdata);
        p_70_m_axictrl_wdata->set_sv_netview_offsetfromdp(13342296);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_70_m_axictrl_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_70->m_axictrl_wstrb.bind(*p_70_m_axictrl_wstrb);
        p_70_m_axictrl_wstrb->set_sv_netview_offsetfromdp(13342352);
        xsim_sc_channel<0, bool > *p_70_m_axictrl_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_70->m_axictrl_wvalid.bind(*p_70_m_axictrl_wvalid);
        p_70_m_axictrl_wvalid->set_sv_netview_offsetfromdp(13342408);
        xsim_sc_channel<0, bool > *p_70_m_axictrl_wready = new xsim_sc_channel<0, bool >();
        sc_inst_70->m_axictrl_wready.bind(*p_70_m_axictrl_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_70_m_axictrl_wready);
        xsim_sc_channel<0, bool > *p_70_m_axictrl_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_70->m_axictrl_bvalid.bind(*p_70_m_axictrl_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_70_m_axictrl_bvalid);
        xsim_sc_channel<0, bool > *p_70_m_axictrl_bready = new xsim_sc_channel<0, bool >();
        sc_inst_70->m_axictrl_bready.bind(*p_70_m_axictrl_bready);
        p_70_m_axictrl_bready->set_sv_netview_offsetfromdp(13342576);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_70_m_axictrl_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_70->m_axictrl_bresp.bind(*p_70_m_axictrl_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_70_m_axictrl_bresp);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_70_m_axictrl_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_70->m_axictrl_araddr.bind(*p_70_m_axictrl_araddr);
        p_70_m_axictrl_araddr->set_sv_netview_offsetfromdp(13342688);
        xsim_sc_channel<0, bool > *p_70_m_axictrl_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_70->m_axictrl_arvalid.bind(*p_70_m_axictrl_arvalid);
        p_70_m_axictrl_arvalid->set_sv_netview_offsetfromdp(13342744);
        xsim_sc_channel<0, bool > *p_70_m_axictrl_arready = new xsim_sc_channel<0, bool >();
        sc_inst_70->m_axictrl_arready.bind(*p_70_m_axictrl_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_70_m_axictrl_arready);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_70_m_axictrl_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_70->m_axictrl_arprot.bind(*p_70_m_axictrl_arprot);
        p_70_m_axictrl_arprot->set_sv_netview_offsetfromdp(13342856);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_70_m_axictrl_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_70->m_axictrl_rdata.bind(*p_70_m_axictrl_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_70_m_axictrl_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_70_m_axictrl_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_70->m_axictrl_rresp.bind(*p_70_m_axictrl_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_70_m_axictrl_rresp);
        xsim_sc_channel<0, bool > *p_70_m_axictrl_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_70->m_axictrl_rvalid.bind(*p_70_m_axictrl_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_70_m_axictrl_rvalid);
        xsim_sc_channel<0, bool > *p_70_m_axictrl_rready = new xsim_sc_channel<0, bool >();
        sc_inst_70->m_axictrl_rready.bind(*p_70_m_axictrl_rready);
        p_70_m_axictrl_rready->set_sv_netview_offsetfromdp(13343080);
        xsim_sc_channel<0, bool > *p_70_m_aximm_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_70->m_aximm_AWVALID.bind(*p_70_m_aximm_AWVALID);
        p_70_m_aximm_AWVALID->set_sv_netview_offsetfromdp(13343136);
        xsim_sc_channel<0, bool > *p_70_m_aximm_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_70->m_aximm_AWREADY.bind(*p_70_m_aximm_AWREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_70_m_aximm_AWREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_70_m_aximm_AWADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_70->m_aximm_AWADDR.bind(*p_70_m_aximm_AWADDR);
        p_70_m_aximm_AWADDR->set_sv_netview_offsetfromdp(13343248);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_70_m_aximm_AWID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_70->m_aximm_AWID.bind(*p_70_m_aximm_AWID);
        p_70_m_aximm_AWID->set_sv_netview_offsetfromdp(13343304);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_70_m_aximm_AWLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_70->m_aximm_AWLEN.bind(*p_70_m_aximm_AWLEN);
        p_70_m_aximm_AWLEN->set_sv_netview_offsetfromdp(13343360);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_70_m_aximm_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_70->m_aximm_AWSIZE.bind(*p_70_m_aximm_AWSIZE);
        p_70_m_aximm_AWSIZE->set_sv_netview_offsetfromdp(13343416);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_70_m_aximm_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_70->m_aximm_AWBURST.bind(*p_70_m_aximm_AWBURST);
        p_70_m_aximm_AWBURST->set_sv_netview_offsetfromdp(13343472);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_70_m_aximm_AWLOCK = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_70->m_aximm_AWLOCK.bind(*p_70_m_aximm_AWLOCK);
        p_70_m_aximm_AWLOCK->set_sv_netview_offsetfromdp(13343528);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_70_m_aximm_AWCACHE = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_70->m_aximm_AWCACHE.bind(*p_70_m_aximm_AWCACHE);
        p_70_m_aximm_AWCACHE->set_sv_netview_offsetfromdp(13343584);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_70_m_aximm_AWPROT = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_70->m_aximm_AWPROT.bind(*p_70_m_aximm_AWPROT);
        p_70_m_aximm_AWPROT->set_sv_netview_offsetfromdp(13343640);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_70_m_aximm_AWREGION = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_70->m_aximm_AWREGION.bind(*p_70_m_aximm_AWREGION);
        p_70_m_aximm_AWREGION->set_sv_netview_offsetfromdp(13343696);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_70_m_aximm_AWQOS = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_70->m_aximm_AWQOS.bind(*p_70_m_aximm_AWQOS);
        p_70_m_aximm_AWQOS->set_sv_netview_offsetfromdp(13343752);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_70_m_aximm_AWUSER = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_70->m_aximm_AWUSER.bind(*p_70_m_aximm_AWUSER);
        p_70_m_aximm_AWUSER->set_sv_netview_offsetfromdp(13343808);
        xsim_sc_channel<0, bool > *p_70_m_aximm_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_70->m_aximm_WVALID.bind(*p_70_m_aximm_WVALID);
        p_70_m_aximm_WVALID->set_sv_netview_offsetfromdp(13343864);
        xsim_sc_channel<0, bool > *p_70_m_aximm_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_70->m_aximm_WREADY.bind(*p_70_m_aximm_WREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_70_m_aximm_WREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_70_m_aximm_WDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_70->m_aximm_WDATA.bind(*p_70_m_aximm_WDATA);
        p_70_m_aximm_WDATA->set_sv_netview_offsetfromdp(13343976);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_70_m_aximm_WSTRB = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_70->m_aximm_WSTRB.bind(*p_70_m_aximm_WSTRB);
        p_70_m_aximm_WSTRB->set_sv_netview_offsetfromdp(13344032);
        xsim_sc_channel<0, bool > *p_70_m_aximm_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_70->m_aximm_WLAST.bind(*p_70_m_aximm_WLAST);
        p_70_m_aximm_WLAST->set_sv_netview_offsetfromdp(13344088);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_70_m_aximm_WUSER = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_70->m_aximm_WUSER.bind(*p_70_m_aximm_WUSER);
        p_70_m_aximm_WUSER->set_sv_netview_offsetfromdp(13344144);
        xsim_sc_channel<0, bool > *p_70_m_aximm_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_70->m_aximm_ARVALID.bind(*p_70_m_aximm_ARVALID);
        p_70_m_aximm_ARVALID->set_sv_netview_offsetfromdp(13344200);
        xsim_sc_channel<0, bool > *p_70_m_aximm_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_70->m_aximm_ARREADY.bind(*p_70_m_aximm_ARREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_70_m_aximm_ARREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_70_m_aximm_ARADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_70->m_aximm_ARADDR.bind(*p_70_m_aximm_ARADDR);
        p_70_m_aximm_ARADDR->set_sv_netview_offsetfromdp(13344312);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_70_m_aximm_ARID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_70->m_aximm_ARID.bind(*p_70_m_aximm_ARID);
        p_70_m_aximm_ARID->set_sv_netview_offsetfromdp(13344368);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_70_m_aximm_ARLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_70->m_aximm_ARLEN.bind(*p_70_m_aximm_ARLEN);
        p_70_m_aximm_ARLEN->set_sv_netview_offsetfromdp(13344424);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_70_m_aximm_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_70->m_aximm_ARSIZE.bind(*p_70_m_aximm_ARSIZE);
        p_70_m_aximm_ARSIZE->set_sv_netview_offsetfromdp(13344480);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_70_m_aximm_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_70->m_aximm_ARBURST.bind(*p_70_m_aximm_ARBURST);
        p_70_m_aximm_ARBURST->set_sv_netview_offsetfromdp(13344536);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_70_m_aximm_ARLOCK = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_70->m_aximm_ARLOCK.bind(*p_70_m_aximm_ARLOCK);
        p_70_m_aximm_ARLOCK->set_sv_netview_offsetfromdp(13344592);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_70_m_aximm_ARCACHE = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_70->m_aximm_ARCACHE.bind(*p_70_m_aximm_ARCACHE);
        p_70_m_aximm_ARCACHE->set_sv_netview_offsetfromdp(13344648);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_70_m_aximm_ARPROT = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_70->m_aximm_ARPROT.bind(*p_70_m_aximm_ARPROT);
        p_70_m_aximm_ARPROT->set_sv_netview_offsetfromdp(13344704);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_70_m_aximm_ARREGION = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_70->m_aximm_ARREGION.bind(*p_70_m_aximm_ARREGION);
        p_70_m_aximm_ARREGION->set_sv_netview_offsetfromdp(13344760);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_70_m_aximm_ARQOS = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_70->m_aximm_ARQOS.bind(*p_70_m_aximm_ARQOS);
        p_70_m_aximm_ARQOS->set_sv_netview_offsetfromdp(13344816);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_70_m_aximm_ARUSER = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_70->m_aximm_ARUSER.bind(*p_70_m_aximm_ARUSER);
        p_70_m_aximm_ARUSER->set_sv_netview_offsetfromdp(13344872);
        xsim_sc_channel<0, bool > *p_70_m_aximm_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_70->m_aximm_RVALID.bind(*p_70_m_aximm_RVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_70_m_aximm_RVALID);
        xsim_sc_channel<0, bool > *p_70_m_aximm_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_70->m_aximm_RREADY.bind(*p_70_m_aximm_RREADY);
        p_70_m_aximm_RREADY->set_sv_netview_offsetfromdp(13344984);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_70_m_aximm_RDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_70->m_aximm_RDATA.bind(*p_70_m_aximm_RDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_70_m_aximm_RDATA);
        xsim_sc_channel<0, bool > *p_70_m_aximm_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_70->m_aximm_RLAST.bind(*p_70_m_aximm_RLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_70_m_aximm_RLAST);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_70_m_aximm_RID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_70->m_aximm_RID.bind(*p_70_m_aximm_RID);
        (*_glb_hdl_sc_channel_map).push_back(p_70_m_aximm_RID);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_70_m_aximm_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_70->m_aximm_RRESP.bind(*p_70_m_aximm_RRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_70_m_aximm_RRESP);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_70_m_aximm_RUSER = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_70->m_aximm_RUSER.bind(*p_70_m_aximm_RUSER);
        (*_glb_hdl_sc_channel_map).push_back(p_70_m_aximm_RUSER);
        xsim_sc_channel<0, bool > *p_70_m_aximm_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_70->m_aximm_BVALID.bind(*p_70_m_aximm_BVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_70_m_aximm_BVALID);
        xsim_sc_channel<0, bool > *p_70_m_aximm_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_70->m_aximm_BREADY.bind(*p_70_m_aximm_BREADY);
        p_70_m_aximm_BREADY->set_sv_netview_offsetfromdp(13345376);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_70_m_aximm_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_70->m_aximm_BRESP.bind(*p_70_m_aximm_BRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_70_m_aximm_BRESP);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_70_m_aximm_BID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_70->m_aximm_BID.bind(*p_70_m_aximm_BID);
        (*_glb_hdl_sc_channel_map).push_back(p_70_m_aximm_BID);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_70_m_aximm_BUSER = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_70->m_aximm_BUSER.bind(*p_70_m_aximm_BUSER);
        (*_glb_hdl_sc_channel_map).push_back(p_70_m_aximm_BUSER);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_70_s_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_70->s_axi_awaddr.bind(*p_70_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_70_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_70_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_70->s_axi_awlen.bind(*p_70_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_70_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_70_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_70->s_axi_awsize.bind(*p_70_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_70_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_70_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_70->s_axi_awburst.bind(*p_70_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_70_s_axi_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_70_s_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_70->s_axi_awlock.bind(*p_70_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_70_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_70_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_70->s_axi_awcache.bind(*p_70_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_70_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_70_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_70->s_axi_awprot.bind(*p_70_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_70_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_70_s_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_70->s_axi_awregion.bind(*p_70_s_axi_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_70_s_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_70_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_70->s_axi_awqos.bind(*p_70_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_70_s_axi_awqos);
        xsim_sc_channel<0, bool > *p_70_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_70->s_axi_awvalid.bind(*p_70_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_70_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_70_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_70->s_axi_awready.bind(*p_70_s_axi_awready);
        p_70_s_axi_awready->set_sv_netview_offsetfromdp(13346160);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_70_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_70->s_axi_wdata.bind(*p_70_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_70_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_70_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_70->s_axi_wstrb.bind(*p_70_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_70_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_70_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_70->s_axi_wlast.bind(*p_70_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_70_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_70_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_70->s_axi_wvalid.bind(*p_70_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_70_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_70_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_70->s_axi_wready.bind(*p_70_s_axi_wready);
        p_70_s_axi_wready->set_sv_netview_offsetfromdp(13346440);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_70_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_70->s_axi_bresp.bind(*p_70_s_axi_bresp);
        p_70_s_axi_bresp->set_sv_netview_offsetfromdp(13346496);
        xsim_sc_channel<0, bool > *p_70_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_70->s_axi_bvalid.bind(*p_70_s_axi_bvalid);
        p_70_s_axi_bvalid->set_sv_netview_offsetfromdp(13346552);
        xsim_sc_channel<0, bool > *p_70_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_70->s_axi_bready.bind(*p_70_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_70_s_axi_bready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_70_s_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_70->s_axi_araddr.bind(*p_70_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_70_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_70_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_70->s_axi_arlen.bind(*p_70_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_70_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_70_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_70->s_axi_arsize.bind(*p_70_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_70_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_70_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_70->s_axi_arburst.bind(*p_70_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_70_s_axi_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_70_s_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_70->s_axi_arlock.bind(*p_70_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_70_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_70_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_70->s_axi_arcache.bind(*p_70_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_70_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_70_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_70->s_axi_arprot.bind(*p_70_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_70_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_70_s_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_70->s_axi_arregion.bind(*p_70_s_axi_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_70_s_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_70_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_70->s_axi_arqos.bind(*p_70_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_70_s_axi_arqos);
        xsim_sc_channel<0, bool > *p_70_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_70->s_axi_arvalid.bind(*p_70_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_70_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_70_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_70->s_axi_arready.bind(*p_70_s_axi_arready);
        p_70_s_axi_arready->set_sv_netview_offsetfromdp(13347224);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_70_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_70->s_axi_rdata.bind(*p_70_s_axi_rdata);
        p_70_s_axi_rdata->set_sv_netview_offsetfromdp(13347280);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_70_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_70->s_axi_rresp.bind(*p_70_s_axi_rresp);
        p_70_s_axi_rresp->set_sv_netview_offsetfromdp(13347336);
        xsim_sc_channel<0, bool > *p_70_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_70->s_axi_rlast.bind(*p_70_s_axi_rlast);
        p_70_s_axi_rlast->set_sv_netview_offsetfromdp(13347392);
        xsim_sc_channel<0, bool > *p_70_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_70->s_axi_rvalid.bind(*p_70_s_axi_rvalid);
        p_70_s_axi_rvalid->set_sv_netview_offsetfromdp(13347448);
        xsim_sc_channel<0, bool > *p_70_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_70->s_axi_rready.bind(*p_70_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_70_s_axi_rready);
        xsim_sc_channel<16, sc_dt::sc_bv<16> > *p_70_usr_irq_req = new xsim_sc_channel<16, sc_dt::sc_bv<16> >();
        sc_inst_70->usr_irq_req.bind(*p_70_usr_irq_req);
        (*_glb_hdl_sc_channel_map).push_back(p_70_usr_irq_req);
        xsim_sc_channel<16, sc_dt::sc_bv<16> > *p_70_usr_irq_ack = new xsim_sc_channel<16, sc_dt::sc_bv<16> >();
        sc_inst_70->usr_irq_ack.bind(*p_70_usr_irq_ack);
        p_70_usr_irq_ack->set_sv_netview_offsetfromdp(13347616);
        sc_inst_71 = new pfm_top_smartconnect_0_0(".pfm_top_wrapper.pfm_top_i.static_region.smartconnect_0");
        sc_inst_71->xsim_set_dbg_index(265);
        xsim_sc_channel<0, bool > *p_71_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_71->aclk.bind(*p_71_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_71_aclk);
        xsim_sc_channel<0, bool > *p_71_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_71->aresetn.bind(*p_71_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_71_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_71_S00_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_71->S00_AXI_awid.bind(*p_71_S00_AXI_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_71_S00_AXI_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_71_S00_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_71->S00_AXI_awaddr.bind(*p_71_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_71_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_71_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_71->S00_AXI_awlen.bind(*p_71_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_71_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_71_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_71->S00_AXI_awsize.bind(*p_71_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_71_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_71_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_71->S00_AXI_awburst.bind(*p_71_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_71_S00_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_71_S00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_71->S00_AXI_awlock.bind(*p_71_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_71_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_71_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_71->S00_AXI_awcache.bind(*p_71_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_71_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_71_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_71->S00_AXI_awprot.bind(*p_71_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_71_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_71_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_71->S00_AXI_awqos.bind(*p_71_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_71_S00_AXI_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_71_S00_AXI_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_71->S00_AXI_awuser.bind(*p_71_S00_AXI_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_71_S00_AXI_awuser);
        xsim_sc_channel<0, bool > *p_71_S00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_71->S00_AXI_awvalid.bind(*p_71_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_71_S00_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_71_S00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_71->S00_AXI_awready.bind(*p_71_S00_AXI_awready);
        p_71_S00_AXI_awready->set_sv_netview_offsetfromdp(13348448);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_71_S00_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_71->S00_AXI_wdata.bind(*p_71_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_71_S00_AXI_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_71_S00_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_71->S00_AXI_wstrb.bind(*p_71_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_71_S00_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_71_S00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_71->S00_AXI_wlast.bind(*p_71_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_71_S00_AXI_wlast);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_71_S00_AXI_wuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_71->S00_AXI_wuser.bind(*p_71_S00_AXI_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_71_S00_AXI_wuser);
        xsim_sc_channel<0, bool > *p_71_S00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_71->S00_AXI_wvalid.bind(*p_71_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_71_S00_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_71_S00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_71->S00_AXI_wready.bind(*p_71_S00_AXI_wready);
        p_71_S00_AXI_wready->set_sv_netview_offsetfromdp(13348784);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_71_S00_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_71->S00_AXI_bid.bind(*p_71_S00_AXI_bid);
        p_71_S00_AXI_bid->set_sv_netview_offsetfromdp(13348840);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_71_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_71->S00_AXI_bresp.bind(*p_71_S00_AXI_bresp);
        p_71_S00_AXI_bresp->set_sv_netview_offsetfromdp(13348896);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_71_S00_AXI_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_71->S00_AXI_buser.bind(*p_71_S00_AXI_buser);
        p_71_S00_AXI_buser->set_sv_netview_offsetfromdp(13348952);
        xsim_sc_channel<0, bool > *p_71_S00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_71->S00_AXI_bvalid.bind(*p_71_S00_AXI_bvalid);
        p_71_S00_AXI_bvalid->set_sv_netview_offsetfromdp(13349008);
        xsim_sc_channel<0, bool > *p_71_S00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_71->S00_AXI_bready.bind(*p_71_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_71_S00_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_71_S00_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_71->S00_AXI_arid.bind(*p_71_S00_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_71_S00_AXI_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_71_S00_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_71->S00_AXI_araddr.bind(*p_71_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_71_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_71_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_71->S00_AXI_arlen.bind(*p_71_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_71_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_71_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_71->S00_AXI_arsize.bind(*p_71_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_71_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_71_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_71->S00_AXI_arburst.bind(*p_71_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_71_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_71_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_71->S00_AXI_arlock.bind(*p_71_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_71_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_71_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_71->S00_AXI_arcache.bind(*p_71_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_71_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_71_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_71->S00_AXI_arprot.bind(*p_71_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_71_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_71_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_71->S00_AXI_arqos.bind(*p_71_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_71_S00_AXI_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_71_S00_AXI_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_71->S00_AXI_aruser.bind(*p_71_S00_AXI_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_71_S00_AXI_aruser);
        xsim_sc_channel<0, bool > *p_71_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_71->S00_AXI_arvalid.bind(*p_71_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_71_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_71_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_71->S00_AXI_arready.bind(*p_71_S00_AXI_arready);
        p_71_S00_AXI_arready->set_sv_netview_offsetfromdp(13349736);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_71_S00_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_71->S00_AXI_rid.bind(*p_71_S00_AXI_rid);
        p_71_S00_AXI_rid->set_sv_netview_offsetfromdp(13349792);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_71_S00_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_71->S00_AXI_rdata.bind(*p_71_S00_AXI_rdata);
        p_71_S00_AXI_rdata->set_sv_netview_offsetfromdp(13349848);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_71_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_71->S00_AXI_rresp.bind(*p_71_S00_AXI_rresp);
        p_71_S00_AXI_rresp->set_sv_netview_offsetfromdp(13349904);
        xsim_sc_channel<0, bool > *p_71_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_71->S00_AXI_rlast.bind(*p_71_S00_AXI_rlast);
        p_71_S00_AXI_rlast->set_sv_netview_offsetfromdp(13349960);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_71_S00_AXI_ruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_71->S00_AXI_ruser.bind(*p_71_S00_AXI_ruser);
        p_71_S00_AXI_ruser->set_sv_netview_offsetfromdp(13350016);
        xsim_sc_channel<0, bool > *p_71_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_71->S00_AXI_rvalid.bind(*p_71_S00_AXI_rvalid);
        p_71_S00_AXI_rvalid->set_sv_netview_offsetfromdp(13350072);
        xsim_sc_channel<0, bool > *p_71_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_71->S00_AXI_rready.bind(*p_71_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_71_S00_AXI_rready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_71_M00_AXI_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_71->M00_AXI_awaddr.bind(*p_71_M00_AXI_awaddr);
        p_71_M00_AXI_awaddr->set_sv_netview_offsetfromdp(13350184);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_71_M00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_71->M00_AXI_awlen.bind(*p_71_M00_AXI_awlen);
        p_71_M00_AXI_awlen->set_sv_netview_offsetfromdp(13350240);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_71_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_71->M00_AXI_awsize.bind(*p_71_M00_AXI_awsize);
        p_71_M00_AXI_awsize->set_sv_netview_offsetfromdp(13350296);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_71_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_71->M00_AXI_awburst.bind(*p_71_M00_AXI_awburst);
        p_71_M00_AXI_awburst->set_sv_netview_offsetfromdp(13350352);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_71_M00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_71->M00_AXI_awlock.bind(*p_71_M00_AXI_awlock);
        p_71_M00_AXI_awlock->set_sv_netview_offsetfromdp(13350408);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_71_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_71->M00_AXI_awcache.bind(*p_71_M00_AXI_awcache);
        p_71_M00_AXI_awcache->set_sv_netview_offsetfromdp(13350464);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_71_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_71->M00_AXI_awprot.bind(*p_71_M00_AXI_awprot);
        p_71_M00_AXI_awprot->set_sv_netview_offsetfromdp(13350520);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_71_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_71->M00_AXI_awqos.bind(*p_71_M00_AXI_awqos);
        p_71_M00_AXI_awqos->set_sv_netview_offsetfromdp(13350576);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_71_M00_AXI_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_71->M00_AXI_awuser.bind(*p_71_M00_AXI_awuser);
        p_71_M00_AXI_awuser->set_sv_netview_offsetfromdp(13350632);
        xsim_sc_channel<0, bool > *p_71_M00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_71->M00_AXI_awvalid.bind(*p_71_M00_AXI_awvalid);
        p_71_M00_AXI_awvalid->set_sv_netview_offsetfromdp(13350688);
        xsim_sc_channel<0, bool > *p_71_M00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_71->M00_AXI_awready.bind(*p_71_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_71_M00_AXI_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_71_M00_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_71->M00_AXI_wdata.bind(*p_71_M00_AXI_wdata);
        p_71_M00_AXI_wdata->set_sv_netview_offsetfromdp(13350800);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_71_M00_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_71->M00_AXI_wstrb.bind(*p_71_M00_AXI_wstrb);
        p_71_M00_AXI_wstrb->set_sv_netview_offsetfromdp(13350856);
        xsim_sc_channel<0, bool > *p_71_M00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_71->M00_AXI_wlast.bind(*p_71_M00_AXI_wlast);
        p_71_M00_AXI_wlast->set_sv_netview_offsetfromdp(13350912);
        xsim_sc_channel<0, bool > *p_71_M00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_71->M00_AXI_wvalid.bind(*p_71_M00_AXI_wvalid);
        p_71_M00_AXI_wvalid->set_sv_netview_offsetfromdp(13350968);
        xsim_sc_channel<0, bool > *p_71_M00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_71->M00_AXI_wready.bind(*p_71_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_71_M00_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_71_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_71->M00_AXI_bresp.bind(*p_71_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_71_M00_AXI_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_71_M00_AXI_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_71->M00_AXI_buser.bind(*p_71_M00_AXI_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_71_M00_AXI_buser);
        xsim_sc_channel<0, bool > *p_71_M00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_71->M00_AXI_bvalid.bind(*p_71_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_71_M00_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_71_M00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_71->M00_AXI_bready.bind(*p_71_M00_AXI_bready);
        p_71_M00_AXI_bready->set_sv_netview_offsetfromdp(13351248);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_71_M00_AXI_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_71->M00_AXI_araddr.bind(*p_71_M00_AXI_araddr);
        p_71_M00_AXI_araddr->set_sv_netview_offsetfromdp(13351304);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_71_M00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_71->M00_AXI_arlen.bind(*p_71_M00_AXI_arlen);
        p_71_M00_AXI_arlen->set_sv_netview_offsetfromdp(13351360);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_71_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_71->M00_AXI_arsize.bind(*p_71_M00_AXI_arsize);
        p_71_M00_AXI_arsize->set_sv_netview_offsetfromdp(13351416);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_71_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_71->M00_AXI_arburst.bind(*p_71_M00_AXI_arburst);
        p_71_M00_AXI_arburst->set_sv_netview_offsetfromdp(13351472);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_71_M00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_71->M00_AXI_arlock.bind(*p_71_M00_AXI_arlock);
        p_71_M00_AXI_arlock->set_sv_netview_offsetfromdp(13351528);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_71_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_71->M00_AXI_arcache.bind(*p_71_M00_AXI_arcache);
        p_71_M00_AXI_arcache->set_sv_netview_offsetfromdp(13351584);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_71_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_71->M00_AXI_arprot.bind(*p_71_M00_AXI_arprot);
        p_71_M00_AXI_arprot->set_sv_netview_offsetfromdp(13351640);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_71_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_71->M00_AXI_arqos.bind(*p_71_M00_AXI_arqos);
        p_71_M00_AXI_arqos->set_sv_netview_offsetfromdp(13351696);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_71_M00_AXI_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_71->M00_AXI_aruser.bind(*p_71_M00_AXI_aruser);
        p_71_M00_AXI_aruser->set_sv_netview_offsetfromdp(13351752);
        xsim_sc_channel<0, bool > *p_71_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_71->M00_AXI_arvalid.bind(*p_71_M00_AXI_arvalid);
        p_71_M00_AXI_arvalid->set_sv_netview_offsetfromdp(13351808);
        xsim_sc_channel<0, bool > *p_71_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_71->M00_AXI_arready.bind(*p_71_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_71_M00_AXI_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_71_M00_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_71->M00_AXI_rdata.bind(*p_71_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_71_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_71_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_71->M00_AXI_rresp.bind(*p_71_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_71_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_71_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_71->M00_AXI_rlast.bind(*p_71_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_71_M00_AXI_rlast);
        xsim_sc_channel<0, bool > *p_71_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_71->M00_AXI_rvalid.bind(*p_71_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_71_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_71_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_71->M00_AXI_rready.bind(*p_71_M00_AXI_rready);
        p_71_M00_AXI_rready->set_sv_netview_offsetfromdp(13352144);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_71_M01_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_71->M01_AXI_awaddr.bind(*p_71_M01_AXI_awaddr);
        p_71_M01_AXI_awaddr->set_sv_netview_offsetfromdp(13352200);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_71_M01_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_71->M01_AXI_awlen.bind(*p_71_M01_AXI_awlen);
        p_71_M01_AXI_awlen->set_sv_netview_offsetfromdp(13352256);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_71_M01_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_71->M01_AXI_awsize.bind(*p_71_M01_AXI_awsize);
        p_71_M01_AXI_awsize->set_sv_netview_offsetfromdp(13352312);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_71_M01_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_71->M01_AXI_awburst.bind(*p_71_M01_AXI_awburst);
        p_71_M01_AXI_awburst->set_sv_netview_offsetfromdp(13352368);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_71_M01_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_71->M01_AXI_awlock.bind(*p_71_M01_AXI_awlock);
        p_71_M01_AXI_awlock->set_sv_netview_offsetfromdp(13352424);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_71_M01_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_71->M01_AXI_awcache.bind(*p_71_M01_AXI_awcache);
        p_71_M01_AXI_awcache->set_sv_netview_offsetfromdp(13352480);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_71_M01_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_71->M01_AXI_awprot.bind(*p_71_M01_AXI_awprot);
        p_71_M01_AXI_awprot->set_sv_netview_offsetfromdp(13352536);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_71_M01_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_71->M01_AXI_awqos.bind(*p_71_M01_AXI_awqos);
        p_71_M01_AXI_awqos->set_sv_netview_offsetfromdp(13352592);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_71_M01_AXI_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_71->M01_AXI_awuser.bind(*p_71_M01_AXI_awuser);
        p_71_M01_AXI_awuser->set_sv_netview_offsetfromdp(13352648);
        xsim_sc_channel<0, bool > *p_71_M01_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_71->M01_AXI_awvalid.bind(*p_71_M01_AXI_awvalid);
        p_71_M01_AXI_awvalid->set_sv_netview_offsetfromdp(13352704);
        xsim_sc_channel<0, bool > *p_71_M01_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_71->M01_AXI_awready.bind(*p_71_M01_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_71_M01_AXI_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_71_M01_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_71->M01_AXI_wdata.bind(*p_71_M01_AXI_wdata);
        p_71_M01_AXI_wdata->set_sv_netview_offsetfromdp(13352816);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_71_M01_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_71->M01_AXI_wstrb.bind(*p_71_M01_AXI_wstrb);
        p_71_M01_AXI_wstrb->set_sv_netview_offsetfromdp(13352872);
        xsim_sc_channel<0, bool > *p_71_M01_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_71->M01_AXI_wlast.bind(*p_71_M01_AXI_wlast);
        p_71_M01_AXI_wlast->set_sv_netview_offsetfromdp(13352928);
        xsim_sc_channel<0, bool > *p_71_M01_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_71->M01_AXI_wvalid.bind(*p_71_M01_AXI_wvalid);
        p_71_M01_AXI_wvalid->set_sv_netview_offsetfromdp(13352984);
        xsim_sc_channel<0, bool > *p_71_M01_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_71->M01_AXI_wready.bind(*p_71_M01_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_71_M01_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_71_M01_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_71->M01_AXI_bresp.bind(*p_71_M01_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_71_M01_AXI_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_71_M01_AXI_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_71->M01_AXI_buser.bind(*p_71_M01_AXI_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_71_M01_AXI_buser);
        xsim_sc_channel<0, bool > *p_71_M01_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_71->M01_AXI_bvalid.bind(*p_71_M01_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_71_M01_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_71_M01_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_71->M01_AXI_bready.bind(*p_71_M01_AXI_bready);
        p_71_M01_AXI_bready->set_sv_netview_offsetfromdp(13353264);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_71_M01_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_71->M01_AXI_araddr.bind(*p_71_M01_AXI_araddr);
        p_71_M01_AXI_araddr->set_sv_netview_offsetfromdp(13353320);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_71_M01_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_71->M01_AXI_arlen.bind(*p_71_M01_AXI_arlen);
        p_71_M01_AXI_arlen->set_sv_netview_offsetfromdp(13353376);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_71_M01_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_71->M01_AXI_arsize.bind(*p_71_M01_AXI_arsize);
        p_71_M01_AXI_arsize->set_sv_netview_offsetfromdp(13353432);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_71_M01_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_71->M01_AXI_arburst.bind(*p_71_M01_AXI_arburst);
        p_71_M01_AXI_arburst->set_sv_netview_offsetfromdp(13353488);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_71_M01_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_71->M01_AXI_arlock.bind(*p_71_M01_AXI_arlock);
        p_71_M01_AXI_arlock->set_sv_netview_offsetfromdp(13353544);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_71_M01_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_71->M01_AXI_arcache.bind(*p_71_M01_AXI_arcache);
        p_71_M01_AXI_arcache->set_sv_netview_offsetfromdp(13353600);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_71_M01_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_71->M01_AXI_arprot.bind(*p_71_M01_AXI_arprot);
        p_71_M01_AXI_arprot->set_sv_netview_offsetfromdp(13353656);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_71_M01_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_71->M01_AXI_arqos.bind(*p_71_M01_AXI_arqos);
        p_71_M01_AXI_arqos->set_sv_netview_offsetfromdp(13353712);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_71_M01_AXI_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_71->M01_AXI_aruser.bind(*p_71_M01_AXI_aruser);
        p_71_M01_AXI_aruser->set_sv_netview_offsetfromdp(13353768);
        xsim_sc_channel<0, bool > *p_71_M01_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_71->M01_AXI_arvalid.bind(*p_71_M01_AXI_arvalid);
        p_71_M01_AXI_arvalid->set_sv_netview_offsetfromdp(13353824);
        xsim_sc_channel<0, bool > *p_71_M01_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_71->M01_AXI_arready.bind(*p_71_M01_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_71_M01_AXI_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_71_M01_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_71->M01_AXI_rdata.bind(*p_71_M01_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_71_M01_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_71_M01_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_71->M01_AXI_rresp.bind(*p_71_M01_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_71_M01_AXI_rresp);
        xsim_sc_channel<0, bool > *p_71_M01_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_71->M01_AXI_rlast.bind(*p_71_M01_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_71_M01_AXI_rlast);
        xsim_sc_channel<0, bool > *p_71_M01_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_71->M01_AXI_rvalid.bind(*p_71_M01_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_71_M01_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_71_M01_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_71->M01_AXI_rready.bind(*p_71_M01_AXI_rready);
        p_71_M01_AXI_rready->set_sv_netview_offsetfromdp(13354160);
    }


extern "C"
    void implicit_HDL_SCcleanup()
    {
        delete sc_inst_1;
        delete sc_inst_2;
        delete sc_inst_3;
        delete sc_inst_4;
        delete sc_inst_5;
        delete sc_inst_6;
        delete sc_inst_7;
        delete sc_inst_8;
        delete sc_inst_9;
        delete sc_inst_10;
        delete sc_inst_11;
        delete sc_inst_12;
        delete sc_inst_13;
        delete sc_inst_14;
        delete sc_inst_15;
        delete sc_inst_16;
        delete sc_inst_17;
        delete sc_inst_18;
        delete sc_inst_19;
        delete sc_inst_20;
        delete sc_inst_21;
        delete sc_inst_22;
        delete sc_inst_23;
        delete sc_inst_24;
        delete sc_inst_25;
        delete sc_inst_26;
        delete sc_inst_27;
        delete sc_inst_28;
        delete sc_inst_29;
        delete sc_inst_30;
        delete sc_inst_31;
        delete sc_inst_32;
        delete sc_inst_33;
        delete sc_inst_34;
        delete sc_inst_35;
        delete sc_inst_36;
        delete sc_inst_37;
        delete sc_inst_38;
        delete sc_inst_39;
        delete sc_inst_40;
        delete sc_inst_41;
        delete sc_inst_42;
        delete sc_inst_43;
        delete sc_inst_44;
        delete sc_inst_45;
        delete sc_inst_46;
        delete sc_inst_47;
        delete sc_inst_48;
        delete sc_inst_49;
        delete sc_inst_50;
        delete sc_inst_51;
        delete sc_inst_52;
        delete sc_inst_53;
        delete sc_inst_54;
        delete sc_inst_55;
        delete sc_inst_56;
        delete sc_inst_57;
        delete sc_inst_58;
        delete sc_inst_59;
        delete sc_inst_60;
        delete sc_inst_61;
        delete sc_inst_62;
        delete sc_inst_63;
        delete sc_inst_64;
        delete sc_inst_65;
        delete sc_inst_66;
        delete sc_inst_67;
        delete sc_inst_68;
        delete sc_inst_69;
        delete sc_inst_70;
        delete sc_inst_71;
    }
