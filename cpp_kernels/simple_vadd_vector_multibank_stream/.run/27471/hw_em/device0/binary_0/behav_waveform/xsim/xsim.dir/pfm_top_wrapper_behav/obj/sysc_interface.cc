#pragma GCC diagnostic ignored "-Wdeprecated-declarations" 
#include "xsim.dir/pfm_top_wrapper_behav/obj/sysc_interface.h"
#include <map>
#include <list>


extern "C" { std::vector<void*> *_glb_hdl_sc_channel_map; } 



extern "C"
    void call_HDL_SC_WRITE_bv_1(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<1, sc_dt::sc_bv<1> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_2(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<2, sc_dt::sc_bv<2> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_3(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<3, sc_dt::sc_bv<3> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_4(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<4, sc_dt::sc_bv<4> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_5(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<5, sc_dt::sc_bv<5> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_6(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<6, sc_dt::sc_bv<6> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_7(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<7, sc_dt::sc_bv<7> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_8(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<8, sc_dt::sc_bv<8> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_9(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<9, sc_dt::sc_bv<9> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_10(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<10, sc_dt::sc_bv<10> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_12(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<12, sc_dt::sc_bv<12> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_14(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<14, sc_dt::sc_bv<14> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_15(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<15, sc_dt::sc_bv<15> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_16(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<16, sc_dt::sc_bv<16> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_17(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<17, sc_dt::sc_bv<17> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_18(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<18, sc_dt::sc_bv<18> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_20(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<20, sc_dt::sc_bv<20> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_22(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<22, sc_dt::sc_bv<22> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_31(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<31, sc_dt::sc_bv<31> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_32(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<32, sc_dt::sc_bv<32> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_33(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<33, sc_dt::sc_bv<33> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_34(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<34, sc_dt::sc_bv<34> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_37(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<37, sc_dt::sc_bv<37> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_38(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<38, sc_dt::sc_bv<38> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_62(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<62, sc_dt::sc_bv<62> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_64(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<64, sc_dt::sc_bv<64> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_72(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<72, sc_dt::sc_bv<72> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_96(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<96, sc_dt::sc_bv<96> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_114(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<114, sc_dt::sc_bv<114> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_128(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<128, sc_dt::sc_bv<128> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_160(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<160, sc_dt::sc_bv<160> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_192(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<192, sc_dt::sc_bv<192> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_256(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<256, sc_dt::sc_bv<256> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_320(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<320, sc_dt::sc_bv<320> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_512(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<512, sc_dt::sc_bv<512> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_int(unsigned int sc_net_index, char* pval)
    {
          int val = *((int*)(pval));
          ((xsim_sc_channel<0, int>*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(val);
    } 



extern "C"
    void call_HDL_SC_WRITE_bit(unsigned int sc_net_index, char* pval)
    {
            sc_dt::sc_bit val  =  (sc_dt::sc_bit)((*((int*)(pval)) & 0x1));
          ((xsim_sc_channel<0, sc_dt::sc_bit>*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(val);
    } 



extern "C"
    void call_HDL_SC_WRITE_logic(unsigned int sc_net_index, char* pval)
    {
          sc_dt::sc_logic val  =  (sc_dt::sc_logic_value_t) (((*((int*)(pval)+1) & 0x1) << 1) | (*((int*)(pval)) & 0x1));
          ((xsim_sc_channel<0, sc_dt::sc_logic>*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(val);
    } 



extern "C"
    void call_HDL_SC_WRITE_bool(unsigned int sc_net_index, char* pval)
    {
          bool val = *((bool*)(pval));
          ((xsim_sc_channel<0, bool>*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(val);
    } 



extern "C"
    void implicit_HDL_SCinstantiate()
    {
        _glb_hdl_sc_channel_map = new std::vector<void*> ();
        sc_inst_1 = new pfm_dynamic_auto_cc_1(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.m00_couplers.auto_cc");
        sc_inst_1->xsim_set_dbg_index(1888);
        xsim_sc_channel<0, bool > *p_1_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_aclk.bind(*p_1_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_1_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_aresetn.bind(*p_1_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->s_axi_awaddr.bind(*p_1_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_1_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_1->s_axi_awprot.bind(*p_1_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_1_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_awvalid.bind(*p_1_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_1_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_awready.bind(*p_1_s_axi_awready);
        p_1_s_axi_awready->set_sv_netview_offsetfromdp(8032376);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_1_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_1->s_axi_wdata.bind(*p_1_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_1_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_1->s_axi_wstrb.bind(*p_1_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_1_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_wvalid.bind(*p_1_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_1_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_wready.bind(*p_1_s_axi_wready);
        p_1_s_axi_wready->set_sv_netview_offsetfromdp(8032600);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->s_axi_bresp.bind(*p_1_s_axi_bresp);
        p_1_s_axi_bresp->set_sv_netview_offsetfromdp(8032656);
        xsim_sc_channel<0, bool > *p_1_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_bvalid.bind(*p_1_s_axi_bvalid);
        p_1_s_axi_bvalid->set_sv_netview_offsetfromdp(8032712);
        xsim_sc_channel<0, bool > *p_1_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_bready.bind(*p_1_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_bready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->s_axi_araddr.bind(*p_1_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_1_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_1->s_axi_arprot.bind(*p_1_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_1_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_arvalid.bind(*p_1_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_1_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_arready.bind(*p_1_s_axi_arready);
        p_1_s_axi_arready->set_sv_netview_offsetfromdp(8032992);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_1_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_1->s_axi_rdata.bind(*p_1_s_axi_rdata);
        p_1_s_axi_rdata->set_sv_netview_offsetfromdp(8033048);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->s_axi_rresp.bind(*p_1_s_axi_rresp);
        p_1_s_axi_rresp->set_sv_netview_offsetfromdp(8033104);
        xsim_sc_channel<0, bool > *p_1_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_rvalid.bind(*p_1_s_axi_rvalid);
        p_1_s_axi_rvalid->set_sv_netview_offsetfromdp(8033160);
        xsim_sc_channel<0, bool > *p_1_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_rready.bind(*p_1_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_rready);
        xsim_sc_channel<0, bool > *p_1_m_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_aclk.bind(*p_1_m_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_1_m_axi_aclk);
        xsim_sc_channel<0, bool > *p_1_m_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_aresetn.bind(*p_1_m_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_1_m_axi_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_m_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->m_axi_awaddr.bind(*p_1_m_axi_awaddr);
        p_1_m_axi_awaddr->set_sv_netview_offsetfromdp(8033384);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_1_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_1->m_axi_awprot.bind(*p_1_m_axi_awprot);
        p_1_m_axi_awprot->set_sv_netview_offsetfromdp(8033440);
        xsim_sc_channel<0, bool > *p_1_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_awvalid.bind(*p_1_m_axi_awvalid);
        p_1_m_axi_awvalid->set_sv_netview_offsetfromdp(8033496);
        xsim_sc_channel<0, bool > *p_1_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_awready.bind(*p_1_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_1_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_1_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_1->m_axi_wdata.bind(*p_1_m_axi_wdata);
        p_1_m_axi_wdata->set_sv_netview_offsetfromdp(8033608);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_1_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_1->m_axi_wstrb.bind(*p_1_m_axi_wstrb);
        p_1_m_axi_wstrb->set_sv_netview_offsetfromdp(8033664);
        xsim_sc_channel<0, bool > *p_1_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_wvalid.bind(*p_1_m_axi_wvalid);
        p_1_m_axi_wvalid->set_sv_netview_offsetfromdp(8033720);
        xsim_sc_channel<0, bool > *p_1_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_wready.bind(*p_1_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_1_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->m_axi_bresp.bind(*p_1_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_1_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_1_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_bvalid.bind(*p_1_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_1_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_1_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_bready.bind(*p_1_m_axi_bready);
        p_1_m_axi_bready->set_sv_netview_offsetfromdp(8033944);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_m_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->m_axi_araddr.bind(*p_1_m_axi_araddr);
        p_1_m_axi_araddr->set_sv_netview_offsetfromdp(8034000);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_1_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_1->m_axi_arprot.bind(*p_1_m_axi_arprot);
        p_1_m_axi_arprot->set_sv_netview_offsetfromdp(8034056);
        xsim_sc_channel<0, bool > *p_1_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_arvalid.bind(*p_1_m_axi_arvalid);
        p_1_m_axi_arvalid->set_sv_netview_offsetfromdp(8034112);
        xsim_sc_channel<0, bool > *p_1_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_arready.bind(*p_1_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_1_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_1_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_1->m_axi_rdata.bind(*p_1_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_1_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->m_axi_rresp.bind(*p_1_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_1_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_1_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_rvalid.bind(*p_1_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_1_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_1_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_rready.bind(*p_1_m_axi_rready);
        p_1_m_axi_rready->set_sv_netview_offsetfromdp(8034392);
        sc_inst_2 = new pfm_dynamic_m00_regslice_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.m00_couplers.m00_regslice");
        sc_inst_2->xsim_set_dbg_index(1889);
        xsim_sc_channel<0, bool > *p_2_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_2->aclk.bind(*p_2_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_2_aclk);
        xsim_sc_channel<0, bool > *p_2_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_2->aresetn.bind(*p_2_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_2_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_2_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_2->s_axi_awaddr.bind(*p_2_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_2_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_2->s_axi_awprot.bind(*p_2_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_2_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_awvalid.bind(*p_2_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_2_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_awready.bind(*p_2_s_axi_awready);
        p_2_s_axi_awready->set_sv_netview_offsetfromdp(8034776);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_2_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_2->s_axi_wdata.bind(*p_2_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_2_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_2->s_axi_wstrb.bind(*p_2_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_2_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_wvalid.bind(*p_2_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_2_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_wready.bind(*p_2_s_axi_wready);
        p_2_s_axi_wready->set_sv_netview_offsetfromdp(8035000);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_2_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_2->s_axi_bresp.bind(*p_2_s_axi_bresp);
        p_2_s_axi_bresp->set_sv_netview_offsetfromdp(8035056);
        xsim_sc_channel<0, bool > *p_2_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_bvalid.bind(*p_2_s_axi_bvalid);
        p_2_s_axi_bvalid->set_sv_netview_offsetfromdp(8035112);
        xsim_sc_channel<0, bool > *p_2_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_bready.bind(*p_2_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_bready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_2_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_2->s_axi_araddr.bind(*p_2_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_2_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_2->s_axi_arprot.bind(*p_2_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_2_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_arvalid.bind(*p_2_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_2_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_arready.bind(*p_2_s_axi_arready);
        p_2_s_axi_arready->set_sv_netview_offsetfromdp(8035392);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_2_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_2->s_axi_rdata.bind(*p_2_s_axi_rdata);
        p_2_s_axi_rdata->set_sv_netview_offsetfromdp(8035448);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_2_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_2->s_axi_rresp.bind(*p_2_s_axi_rresp);
        p_2_s_axi_rresp->set_sv_netview_offsetfromdp(8035504);
        xsim_sc_channel<0, bool > *p_2_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_rvalid.bind(*p_2_s_axi_rvalid);
        p_2_s_axi_rvalid->set_sv_netview_offsetfromdp(8035560);
        xsim_sc_channel<0, bool > *p_2_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_rready.bind(*p_2_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_rready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_2_m_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_2->m_axi_awaddr.bind(*p_2_m_axi_awaddr);
        p_2_m_axi_awaddr->set_sv_netview_offsetfromdp(8035672);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_2_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_2->m_axi_awprot.bind(*p_2_m_axi_awprot);
        p_2_m_axi_awprot->set_sv_netview_offsetfromdp(8035728);
        xsim_sc_channel<0, bool > *p_2_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axi_awvalid.bind(*p_2_m_axi_awvalid);
        p_2_m_axi_awvalid->set_sv_netview_offsetfromdp(8035784);
        xsim_sc_channel<0, bool > *p_2_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axi_awready.bind(*p_2_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_2_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_2_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_2->m_axi_wdata.bind(*p_2_m_axi_wdata);
        p_2_m_axi_wdata->set_sv_netview_offsetfromdp(8035896);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_2_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_2->m_axi_wstrb.bind(*p_2_m_axi_wstrb);
        p_2_m_axi_wstrb->set_sv_netview_offsetfromdp(8035952);
        xsim_sc_channel<0, bool > *p_2_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axi_wvalid.bind(*p_2_m_axi_wvalid);
        p_2_m_axi_wvalid->set_sv_netview_offsetfromdp(8036008);
        xsim_sc_channel<0, bool > *p_2_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axi_wready.bind(*p_2_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_2_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_2_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_2->m_axi_bresp.bind(*p_2_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_2_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_2_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axi_bvalid.bind(*p_2_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_2_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_2_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axi_bready.bind(*p_2_m_axi_bready);
        p_2_m_axi_bready->set_sv_netview_offsetfromdp(8036232);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_2_m_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_2->m_axi_araddr.bind(*p_2_m_axi_araddr);
        p_2_m_axi_araddr->set_sv_netview_offsetfromdp(8036288);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_2_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_2->m_axi_arprot.bind(*p_2_m_axi_arprot);
        p_2_m_axi_arprot->set_sv_netview_offsetfromdp(8036344);
        xsim_sc_channel<0, bool > *p_2_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axi_arvalid.bind(*p_2_m_axi_arvalid);
        p_2_m_axi_arvalid->set_sv_netview_offsetfromdp(8036400);
        xsim_sc_channel<0, bool > *p_2_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axi_arready.bind(*p_2_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_2_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_2_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_2->m_axi_rdata.bind(*p_2_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_2_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_2_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_2->m_axi_rresp.bind(*p_2_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_2_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_2_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axi_rvalid.bind(*p_2_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_2_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_2_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axi_rready.bind(*p_2_m_axi_rready);
        p_2_m_axi_rready->set_sv_netview_offsetfromdp(8036680);
        sc_inst_3 = new pfm_dynamic_auto_cc_2(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.m01_couplers.auto_cc");
        sc_inst_3->xsim_set_dbg_index(1930);
        xsim_sc_channel<0, bool > *p_3_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_aclk.bind(*p_3_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_3_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_aresetn.bind(*p_3_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->s_axi_awaddr.bind(*p_3_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_3_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_3->s_axi_awprot.bind(*p_3_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_3_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_awvalid.bind(*p_3_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_3_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_awready.bind(*p_3_s_axi_awready);
        p_3_s_axi_awready->set_sv_netview_offsetfromdp(8072552);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_3_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_3->s_axi_wdata.bind(*p_3_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_3_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_3->s_axi_wstrb.bind(*p_3_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_3_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_wvalid.bind(*p_3_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_3_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_wready.bind(*p_3_s_axi_wready);
        p_3_s_axi_wready->set_sv_netview_offsetfromdp(8072776);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->s_axi_bresp.bind(*p_3_s_axi_bresp);
        p_3_s_axi_bresp->set_sv_netview_offsetfromdp(8072832);
        xsim_sc_channel<0, bool > *p_3_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_bvalid.bind(*p_3_s_axi_bvalid);
        p_3_s_axi_bvalid->set_sv_netview_offsetfromdp(8072888);
        xsim_sc_channel<0, bool > *p_3_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_bready.bind(*p_3_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_bready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->s_axi_araddr.bind(*p_3_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_3_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_3->s_axi_arprot.bind(*p_3_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_3_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_arvalid.bind(*p_3_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_3_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_arready.bind(*p_3_s_axi_arready);
        p_3_s_axi_arready->set_sv_netview_offsetfromdp(8073168);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_3_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_3->s_axi_rdata.bind(*p_3_s_axi_rdata);
        p_3_s_axi_rdata->set_sv_netview_offsetfromdp(8073224);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->s_axi_rresp.bind(*p_3_s_axi_rresp);
        p_3_s_axi_rresp->set_sv_netview_offsetfromdp(8073280);
        xsim_sc_channel<0, bool > *p_3_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_rvalid.bind(*p_3_s_axi_rvalid);
        p_3_s_axi_rvalid->set_sv_netview_offsetfromdp(8073336);
        xsim_sc_channel<0, bool > *p_3_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_rready.bind(*p_3_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_rready);
        xsim_sc_channel<0, bool > *p_3_m_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_aclk.bind(*p_3_m_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_3_m_axi_aclk);
        xsim_sc_channel<0, bool > *p_3_m_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_aresetn.bind(*p_3_m_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_3_m_axi_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_m_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->m_axi_awaddr.bind(*p_3_m_axi_awaddr);
        p_3_m_axi_awaddr->set_sv_netview_offsetfromdp(8073560);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_3_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_3->m_axi_awprot.bind(*p_3_m_axi_awprot);
        p_3_m_axi_awprot->set_sv_netview_offsetfromdp(8073616);
        xsim_sc_channel<0, bool > *p_3_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_awvalid.bind(*p_3_m_axi_awvalid);
        p_3_m_axi_awvalid->set_sv_netview_offsetfromdp(8073672);
        xsim_sc_channel<0, bool > *p_3_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_awready.bind(*p_3_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_3_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_3_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_3->m_axi_wdata.bind(*p_3_m_axi_wdata);
        p_3_m_axi_wdata->set_sv_netview_offsetfromdp(8073784);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_3_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_3->m_axi_wstrb.bind(*p_3_m_axi_wstrb);
        p_3_m_axi_wstrb->set_sv_netview_offsetfromdp(8073840);
        xsim_sc_channel<0, bool > *p_3_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_wvalid.bind(*p_3_m_axi_wvalid);
        p_3_m_axi_wvalid->set_sv_netview_offsetfromdp(8073896);
        xsim_sc_channel<0, bool > *p_3_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_wready.bind(*p_3_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_3_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->m_axi_bresp.bind(*p_3_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_3_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_3_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_bvalid.bind(*p_3_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_3_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_3_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_bready.bind(*p_3_m_axi_bready);
        p_3_m_axi_bready->set_sv_netview_offsetfromdp(8074120);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_m_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->m_axi_araddr.bind(*p_3_m_axi_araddr);
        p_3_m_axi_araddr->set_sv_netview_offsetfromdp(8074176);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_3_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_3->m_axi_arprot.bind(*p_3_m_axi_arprot);
        p_3_m_axi_arprot->set_sv_netview_offsetfromdp(8074232);
        xsim_sc_channel<0, bool > *p_3_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_arvalid.bind(*p_3_m_axi_arvalid);
        p_3_m_axi_arvalid->set_sv_netview_offsetfromdp(8074288);
        xsim_sc_channel<0, bool > *p_3_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_arready.bind(*p_3_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_3_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_3_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_3->m_axi_rdata.bind(*p_3_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_3_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->m_axi_rresp.bind(*p_3_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_3_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_3_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_rvalid.bind(*p_3_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_3_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_3_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_rready.bind(*p_3_m_axi_rready);
        p_3_m_axi_rready->set_sv_netview_offsetfromdp(8074568);
        sc_inst_4 = new pfm_dynamic_m01_regslice_5(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.m01_couplers.m01_regslice");
        sc_inst_4->xsim_set_dbg_index(1931);
        xsim_sc_channel<0, bool > *p_4_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_4->aclk.bind(*p_4_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_4_aclk);
        xsim_sc_channel<0, bool > *p_4_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_4->aresetn.bind(*p_4_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_4_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->s_axi_awaddr.bind(*p_4_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->s_axi_awprot.bind(*p_4_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_4_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_awvalid.bind(*p_4_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_4_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_awready.bind(*p_4_s_axi_awready);
        p_4_s_axi_awready->set_sv_netview_offsetfromdp(8074952);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_4_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_4->s_axi_wdata.bind(*p_4_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_4_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_4->s_axi_wstrb.bind(*p_4_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_4_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_wvalid.bind(*p_4_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_4_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_wready.bind(*p_4_s_axi_wready);
        p_4_s_axi_wready->set_sv_netview_offsetfromdp(8075176);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->s_axi_bresp.bind(*p_4_s_axi_bresp);
        p_4_s_axi_bresp->set_sv_netview_offsetfromdp(8075232);
        xsim_sc_channel<0, bool > *p_4_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_bvalid.bind(*p_4_s_axi_bvalid);
        p_4_s_axi_bvalid->set_sv_netview_offsetfromdp(8075288);
        xsim_sc_channel<0, bool > *p_4_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_bready.bind(*p_4_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_bready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->s_axi_araddr.bind(*p_4_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->s_axi_arprot.bind(*p_4_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_4_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_arvalid.bind(*p_4_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_4_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_arready.bind(*p_4_s_axi_arready);
        p_4_s_axi_arready->set_sv_netview_offsetfromdp(8075568);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_4_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_4->s_axi_rdata.bind(*p_4_s_axi_rdata);
        p_4_s_axi_rdata->set_sv_netview_offsetfromdp(8075624);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->s_axi_rresp.bind(*p_4_s_axi_rresp);
        p_4_s_axi_rresp->set_sv_netview_offsetfromdp(8075680);
        xsim_sc_channel<0, bool > *p_4_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_rvalid.bind(*p_4_s_axi_rvalid);
        p_4_s_axi_rvalid->set_sv_netview_offsetfromdp(8075736);
        xsim_sc_channel<0, bool > *p_4_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_rready.bind(*p_4_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_rready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_m_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->m_axi_awaddr.bind(*p_4_m_axi_awaddr);
        p_4_m_axi_awaddr->set_sv_netview_offsetfromdp(8075848);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->m_axi_awprot.bind(*p_4_m_axi_awprot);
        p_4_m_axi_awprot->set_sv_netview_offsetfromdp(8075904);
        xsim_sc_channel<0, bool > *p_4_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axi_awvalid.bind(*p_4_m_axi_awvalid);
        p_4_m_axi_awvalid->set_sv_netview_offsetfromdp(8075960);
        xsim_sc_channel<0, bool > *p_4_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axi_awready.bind(*p_4_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_4_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_4_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_4->m_axi_wdata.bind(*p_4_m_axi_wdata);
        p_4_m_axi_wdata->set_sv_netview_offsetfromdp(8076072);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_4_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_4->m_axi_wstrb.bind(*p_4_m_axi_wstrb);
        p_4_m_axi_wstrb->set_sv_netview_offsetfromdp(8076128);
        xsim_sc_channel<0, bool > *p_4_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axi_wvalid.bind(*p_4_m_axi_wvalid);
        p_4_m_axi_wvalid->set_sv_netview_offsetfromdp(8076184);
        xsim_sc_channel<0, bool > *p_4_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axi_wready.bind(*p_4_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_4_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->m_axi_bresp.bind(*p_4_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_4_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_4_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axi_bvalid.bind(*p_4_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_4_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_4_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axi_bready.bind(*p_4_m_axi_bready);
        p_4_m_axi_bready->set_sv_netview_offsetfromdp(8076408);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_m_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->m_axi_araddr.bind(*p_4_m_axi_araddr);
        p_4_m_axi_araddr->set_sv_netview_offsetfromdp(8076464);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->m_axi_arprot.bind(*p_4_m_axi_arprot);
        p_4_m_axi_arprot->set_sv_netview_offsetfromdp(8076520);
        xsim_sc_channel<0, bool > *p_4_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axi_arvalid.bind(*p_4_m_axi_arvalid);
        p_4_m_axi_arvalid->set_sv_netview_offsetfromdp(8076576);
        xsim_sc_channel<0, bool > *p_4_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axi_arready.bind(*p_4_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_4_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_4_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_4->m_axi_rdata.bind(*p_4_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_4_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->m_axi_rresp.bind(*p_4_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_4_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_4_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axi_rvalid.bind(*p_4_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_4_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_4_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axi_rready.bind(*p_4_m_axi_rready);
        p_4_m_axi_rready->set_sv_netview_offsetfromdp(8076856);
        sc_inst_5 = new pfm_dynamic_auto_cc_3(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.m02_couplers.auto_cc");
        sc_inst_5->xsim_set_dbg_index(1972);
        xsim_sc_channel<0, bool > *p_5_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_aclk.bind(*p_5_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_5_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_aresetn.bind(*p_5_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->s_axi_awaddr.bind(*p_5_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->s_axi_awprot.bind(*p_5_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_5_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_awvalid.bind(*p_5_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_5_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_awready.bind(*p_5_s_axi_awready);
        p_5_s_axi_awready->set_sv_netview_offsetfromdp(8113880);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_5_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_5->s_axi_wdata.bind(*p_5_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->s_axi_wstrb.bind(*p_5_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_5_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_wvalid.bind(*p_5_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_5_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_wready.bind(*p_5_s_axi_wready);
        p_5_s_axi_wready->set_sv_netview_offsetfromdp(8114104);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->s_axi_bresp.bind(*p_5_s_axi_bresp);
        p_5_s_axi_bresp->set_sv_netview_offsetfromdp(8114160);
        xsim_sc_channel<0, bool > *p_5_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_bvalid.bind(*p_5_s_axi_bvalid);
        p_5_s_axi_bvalid->set_sv_netview_offsetfromdp(8114216);
        xsim_sc_channel<0, bool > *p_5_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_bready.bind(*p_5_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_bready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->s_axi_araddr.bind(*p_5_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->s_axi_arprot.bind(*p_5_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_5_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_arvalid.bind(*p_5_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_5_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_arready.bind(*p_5_s_axi_arready);
        p_5_s_axi_arready->set_sv_netview_offsetfromdp(8114496);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_5_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_5->s_axi_rdata.bind(*p_5_s_axi_rdata);
        p_5_s_axi_rdata->set_sv_netview_offsetfromdp(8114552);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->s_axi_rresp.bind(*p_5_s_axi_rresp);
        p_5_s_axi_rresp->set_sv_netview_offsetfromdp(8114608);
        xsim_sc_channel<0, bool > *p_5_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_rvalid.bind(*p_5_s_axi_rvalid);
        p_5_s_axi_rvalid->set_sv_netview_offsetfromdp(8114664);
        xsim_sc_channel<0, bool > *p_5_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_rready.bind(*p_5_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_rready);
        xsim_sc_channel<0, bool > *p_5_m_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_aclk.bind(*p_5_m_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_5_m_axi_aclk);
        xsim_sc_channel<0, bool > *p_5_m_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_aresetn.bind(*p_5_m_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_5_m_axi_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_m_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->m_axi_awaddr.bind(*p_5_m_axi_awaddr);
        p_5_m_axi_awaddr->set_sv_netview_offsetfromdp(8114888);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->m_axi_awprot.bind(*p_5_m_axi_awprot);
        p_5_m_axi_awprot->set_sv_netview_offsetfromdp(8114944);
        xsim_sc_channel<0, bool > *p_5_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_awvalid.bind(*p_5_m_axi_awvalid);
        p_5_m_axi_awvalid->set_sv_netview_offsetfromdp(8115000);
        xsim_sc_channel<0, bool > *p_5_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_awready.bind(*p_5_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_5_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_5_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_5->m_axi_wdata.bind(*p_5_m_axi_wdata);
        p_5_m_axi_wdata->set_sv_netview_offsetfromdp(8115112);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->m_axi_wstrb.bind(*p_5_m_axi_wstrb);
        p_5_m_axi_wstrb->set_sv_netview_offsetfromdp(8115168);
        xsim_sc_channel<0, bool > *p_5_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_wvalid.bind(*p_5_m_axi_wvalid);
        p_5_m_axi_wvalid->set_sv_netview_offsetfromdp(8115224);
        xsim_sc_channel<0, bool > *p_5_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_wready.bind(*p_5_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_5_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->m_axi_bresp.bind(*p_5_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_5_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_5_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_bvalid.bind(*p_5_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_5_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_bready.bind(*p_5_m_axi_bready);
        p_5_m_axi_bready->set_sv_netview_offsetfromdp(8115448);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_m_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->m_axi_araddr.bind(*p_5_m_axi_araddr);
        p_5_m_axi_araddr->set_sv_netview_offsetfromdp(8115504);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->m_axi_arprot.bind(*p_5_m_axi_arprot);
        p_5_m_axi_arprot->set_sv_netview_offsetfromdp(8115560);
        xsim_sc_channel<0, bool > *p_5_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_arvalid.bind(*p_5_m_axi_arvalid);
        p_5_m_axi_arvalid->set_sv_netview_offsetfromdp(8115616);
        xsim_sc_channel<0, bool > *p_5_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_arready.bind(*p_5_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_5_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_5_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_5->m_axi_rdata.bind(*p_5_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_5_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->m_axi_rresp.bind(*p_5_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_5_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_5_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_rvalid.bind(*p_5_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_5_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_rready.bind(*p_5_m_axi_rready);
        p_5_m_axi_rready->set_sv_netview_offsetfromdp(8115896);
        sc_inst_6 = new pfm_dynamic_m02_regslice_5(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.m02_couplers.m02_regslice");
        sc_inst_6->xsim_set_dbg_index(1973);
        xsim_sc_channel<0, bool > *p_6_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_6->aclk.bind(*p_6_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_6_aclk);
        xsim_sc_channel<0, bool > *p_6_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_6->aresetn.bind(*p_6_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_6_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->s_axi_awaddr.bind(*p_6_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->s_axi_awprot.bind(*p_6_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_6_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_awvalid.bind(*p_6_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_6_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_awready.bind(*p_6_s_axi_awready);
        p_6_s_axi_awready->set_sv_netview_offsetfromdp(8116280);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->s_axi_wdata.bind(*p_6_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->s_axi_wstrb.bind(*p_6_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_6_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_wvalid.bind(*p_6_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_6_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_wready.bind(*p_6_s_axi_wready);
        p_6_s_axi_wready->set_sv_netview_offsetfromdp(8116504);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->s_axi_bresp.bind(*p_6_s_axi_bresp);
        p_6_s_axi_bresp->set_sv_netview_offsetfromdp(8116560);
        xsim_sc_channel<0, bool > *p_6_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_bvalid.bind(*p_6_s_axi_bvalid);
        p_6_s_axi_bvalid->set_sv_netview_offsetfromdp(8116616);
        xsim_sc_channel<0, bool > *p_6_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_bready.bind(*p_6_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_bready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->s_axi_araddr.bind(*p_6_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->s_axi_arprot.bind(*p_6_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_6_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_arvalid.bind(*p_6_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_6_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_arready.bind(*p_6_s_axi_arready);
        p_6_s_axi_arready->set_sv_netview_offsetfromdp(8116896);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->s_axi_rdata.bind(*p_6_s_axi_rdata);
        p_6_s_axi_rdata->set_sv_netview_offsetfromdp(8116952);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->s_axi_rresp.bind(*p_6_s_axi_rresp);
        p_6_s_axi_rresp->set_sv_netview_offsetfromdp(8117008);
        xsim_sc_channel<0, bool > *p_6_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_rvalid.bind(*p_6_s_axi_rvalid);
        p_6_s_axi_rvalid->set_sv_netview_offsetfromdp(8117064);
        xsim_sc_channel<0, bool > *p_6_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_rready.bind(*p_6_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_rready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_m_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->m_axi_awaddr.bind(*p_6_m_axi_awaddr);
        p_6_m_axi_awaddr->set_sv_netview_offsetfromdp(8117176);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->m_axi_awprot.bind(*p_6_m_axi_awprot);
        p_6_m_axi_awprot->set_sv_netview_offsetfromdp(8117232);
        xsim_sc_channel<0, bool > *p_6_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axi_awvalid.bind(*p_6_m_axi_awvalid);
        p_6_m_axi_awvalid->set_sv_netview_offsetfromdp(8117288);
        xsim_sc_channel<0, bool > *p_6_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axi_awready.bind(*p_6_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_6_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->m_axi_wdata.bind(*p_6_m_axi_wdata);
        p_6_m_axi_wdata->set_sv_netview_offsetfromdp(8117400);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->m_axi_wstrb.bind(*p_6_m_axi_wstrb);
        p_6_m_axi_wstrb->set_sv_netview_offsetfromdp(8117456);
        xsim_sc_channel<0, bool > *p_6_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axi_wvalid.bind(*p_6_m_axi_wvalid);
        p_6_m_axi_wvalid->set_sv_netview_offsetfromdp(8117512);
        xsim_sc_channel<0, bool > *p_6_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axi_wready.bind(*p_6_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_6_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->m_axi_bresp.bind(*p_6_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_6_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_6_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axi_bvalid.bind(*p_6_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_6_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_6_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axi_bready.bind(*p_6_m_axi_bready);
        p_6_m_axi_bready->set_sv_netview_offsetfromdp(8117736);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_m_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->m_axi_araddr.bind(*p_6_m_axi_araddr);
        p_6_m_axi_araddr->set_sv_netview_offsetfromdp(8117792);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->m_axi_arprot.bind(*p_6_m_axi_arprot);
        p_6_m_axi_arprot->set_sv_netview_offsetfromdp(8117848);
        xsim_sc_channel<0, bool > *p_6_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axi_arvalid.bind(*p_6_m_axi_arvalid);
        p_6_m_axi_arvalid->set_sv_netview_offsetfromdp(8117904);
        xsim_sc_channel<0, bool > *p_6_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axi_arready.bind(*p_6_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_6_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->m_axi_rdata.bind(*p_6_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_6_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->m_axi_rresp.bind(*p_6_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_6_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_6_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axi_rvalid.bind(*p_6_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_6_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_6_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axi_rready.bind(*p_6_m_axi_rready);
        p_6_m_axi_rready->set_sv_netview_offsetfromdp(8118184);
        sc_inst_7 = new pfm_dynamic_auto_cc_4(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.m03_couplers.auto_cc");
        sc_inst_7->xsim_set_dbg_index(2016);
        xsim_sc_channel<0, bool > *p_7_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_aclk.bind(*p_7_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_7_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_aresetn.bind(*p_7_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_7_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_7->s_axi_awaddr.bind(*p_7_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->s_axi_awprot.bind(*p_7_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_7_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_awvalid.bind(*p_7_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_7_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_awready.bind(*p_7_s_axi_awready);
        p_7_s_axi_awready->set_sv_netview_offsetfromdp(8154056);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_7_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_7->s_axi_wdata.bind(*p_7_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->s_axi_wstrb.bind(*p_7_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_7_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_wvalid.bind(*p_7_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_7_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_wready.bind(*p_7_s_axi_wready);
        p_7_s_axi_wready->set_sv_netview_offsetfromdp(8154280);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->s_axi_bresp.bind(*p_7_s_axi_bresp);
        p_7_s_axi_bresp->set_sv_netview_offsetfromdp(8154336);
        xsim_sc_channel<0, bool > *p_7_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_bvalid.bind(*p_7_s_axi_bvalid);
        p_7_s_axi_bvalid->set_sv_netview_offsetfromdp(8154392);
        xsim_sc_channel<0, bool > *p_7_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_bready.bind(*p_7_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_bready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_7_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_7->s_axi_araddr.bind(*p_7_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->s_axi_arprot.bind(*p_7_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_7_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_arvalid.bind(*p_7_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_7_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_arready.bind(*p_7_s_axi_arready);
        p_7_s_axi_arready->set_sv_netview_offsetfromdp(8154672);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_7_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_7->s_axi_rdata.bind(*p_7_s_axi_rdata);
        p_7_s_axi_rdata->set_sv_netview_offsetfromdp(8154728);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->s_axi_rresp.bind(*p_7_s_axi_rresp);
        p_7_s_axi_rresp->set_sv_netview_offsetfromdp(8154784);
        xsim_sc_channel<0, bool > *p_7_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_rvalid.bind(*p_7_s_axi_rvalid);
        p_7_s_axi_rvalid->set_sv_netview_offsetfromdp(8154840);
        xsim_sc_channel<0, bool > *p_7_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_rready.bind(*p_7_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_rready);
        xsim_sc_channel<0, bool > *p_7_m_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_aclk.bind(*p_7_m_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_axi_aclk);
        xsim_sc_channel<0, bool > *p_7_m_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_aresetn.bind(*p_7_m_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_axi_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_7_m_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_7->m_axi_awaddr.bind(*p_7_m_axi_awaddr);
        p_7_m_axi_awaddr->set_sv_netview_offsetfromdp(8155064);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->m_axi_awprot.bind(*p_7_m_axi_awprot);
        p_7_m_axi_awprot->set_sv_netview_offsetfromdp(8155120);
        xsim_sc_channel<0, bool > *p_7_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_awvalid.bind(*p_7_m_axi_awvalid);
        p_7_m_axi_awvalid->set_sv_netview_offsetfromdp(8155176);
        xsim_sc_channel<0, bool > *p_7_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_awready.bind(*p_7_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_7_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_7->m_axi_wdata.bind(*p_7_m_axi_wdata);
        p_7_m_axi_wdata->set_sv_netview_offsetfromdp(8155288);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->m_axi_wstrb.bind(*p_7_m_axi_wstrb);
        p_7_m_axi_wstrb->set_sv_netview_offsetfromdp(8155344);
        xsim_sc_channel<0, bool > *p_7_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_wvalid.bind(*p_7_m_axi_wvalid);
        p_7_m_axi_wvalid->set_sv_netview_offsetfromdp(8155400);
        xsim_sc_channel<0, bool > *p_7_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_wready.bind(*p_7_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->m_axi_bresp.bind(*p_7_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_7_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_bvalid.bind(*p_7_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_7_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_bready.bind(*p_7_m_axi_bready);
        p_7_m_axi_bready->set_sv_netview_offsetfromdp(8155624);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_7_m_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_7->m_axi_araddr.bind(*p_7_m_axi_araddr);
        p_7_m_axi_araddr->set_sv_netview_offsetfromdp(8155680);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->m_axi_arprot.bind(*p_7_m_axi_arprot);
        p_7_m_axi_arprot->set_sv_netview_offsetfromdp(8155736);
        xsim_sc_channel<0, bool > *p_7_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_arvalid.bind(*p_7_m_axi_arvalid);
        p_7_m_axi_arvalid->set_sv_netview_offsetfromdp(8155792);
        xsim_sc_channel<0, bool > *p_7_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_arready.bind(*p_7_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_7_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_7->m_axi_rdata.bind(*p_7_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->m_axi_rresp.bind(*p_7_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_7_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_rvalid.bind(*p_7_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_7_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_rready.bind(*p_7_m_axi_rready);
        p_7_m_axi_rready->set_sv_netview_offsetfromdp(8156072);
        sc_inst_8 = new pfm_dynamic_m03_regslice_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.m03_couplers.m03_regslice");
        sc_inst_8->xsim_set_dbg_index(2017);
        xsim_sc_channel<0, bool > *p_8_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_8->aclk.bind(*p_8_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_8_aclk);
        xsim_sc_channel<0, bool > *p_8_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_8->aresetn.bind(*p_8_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_8_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_8_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_8->s_axi_awaddr.bind(*p_8_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->s_axi_awprot.bind(*p_8_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_8_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_axi_awvalid.bind(*p_8_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_8_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_axi_awready.bind(*p_8_s_axi_awready);
        p_8_s_axi_awready->set_sv_netview_offsetfromdp(8156456);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->s_axi_wdata.bind(*p_8_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->s_axi_wstrb.bind(*p_8_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_8_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_axi_wvalid.bind(*p_8_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_8_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_axi_wready.bind(*p_8_s_axi_wready);
        p_8_s_axi_wready->set_sv_netview_offsetfromdp(8156680);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->s_axi_bresp.bind(*p_8_s_axi_bresp);
        p_8_s_axi_bresp->set_sv_netview_offsetfromdp(8156736);
        xsim_sc_channel<0, bool > *p_8_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_axi_bvalid.bind(*p_8_s_axi_bvalid);
        p_8_s_axi_bvalid->set_sv_netview_offsetfromdp(8156792);
        xsim_sc_channel<0, bool > *p_8_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_axi_bready.bind(*p_8_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_axi_bready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_8_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_8->s_axi_araddr.bind(*p_8_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->s_axi_arprot.bind(*p_8_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_8_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_axi_arvalid.bind(*p_8_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_8_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_axi_arready.bind(*p_8_s_axi_arready);
        p_8_s_axi_arready->set_sv_netview_offsetfromdp(8157072);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->s_axi_rdata.bind(*p_8_s_axi_rdata);
        p_8_s_axi_rdata->set_sv_netview_offsetfromdp(8157128);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->s_axi_rresp.bind(*p_8_s_axi_rresp);
        p_8_s_axi_rresp->set_sv_netview_offsetfromdp(8157184);
        xsim_sc_channel<0, bool > *p_8_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_axi_rvalid.bind(*p_8_s_axi_rvalid);
        p_8_s_axi_rvalid->set_sv_netview_offsetfromdp(8157240);
        xsim_sc_channel<0, bool > *p_8_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_axi_rready.bind(*p_8_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_axi_rready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_8_m_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_8->m_axi_awaddr.bind(*p_8_m_axi_awaddr);
        p_8_m_axi_awaddr->set_sv_netview_offsetfromdp(8157352);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->m_axi_awprot.bind(*p_8_m_axi_awprot);
        p_8_m_axi_awprot->set_sv_netview_offsetfromdp(8157408);
        xsim_sc_channel<0, bool > *p_8_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->m_axi_awvalid.bind(*p_8_m_axi_awvalid);
        p_8_m_axi_awvalid->set_sv_netview_offsetfromdp(8157464);
        xsim_sc_channel<0, bool > *p_8_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_8->m_axi_awready.bind(*p_8_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->m_axi_wdata.bind(*p_8_m_axi_wdata);
        p_8_m_axi_wdata->set_sv_netview_offsetfromdp(8157576);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->m_axi_wstrb.bind(*p_8_m_axi_wstrb);
        p_8_m_axi_wstrb->set_sv_netview_offsetfromdp(8157632);
        xsim_sc_channel<0, bool > *p_8_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->m_axi_wvalid.bind(*p_8_m_axi_wvalid);
        p_8_m_axi_wvalid->set_sv_netview_offsetfromdp(8157688);
        xsim_sc_channel<0, bool > *p_8_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_8->m_axi_wready.bind(*p_8_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->m_axi_bresp.bind(*p_8_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_8_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->m_axi_bvalid.bind(*p_8_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_8_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_8->m_axi_bready.bind(*p_8_m_axi_bready);
        p_8_m_axi_bready->set_sv_netview_offsetfromdp(8157912);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_8_m_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_8->m_axi_araddr.bind(*p_8_m_axi_araddr);
        p_8_m_axi_araddr->set_sv_netview_offsetfromdp(8157968);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->m_axi_arprot.bind(*p_8_m_axi_arprot);
        p_8_m_axi_arprot->set_sv_netview_offsetfromdp(8158024);
        xsim_sc_channel<0, bool > *p_8_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->m_axi_arvalid.bind(*p_8_m_axi_arvalid);
        p_8_m_axi_arvalid->set_sv_netview_offsetfromdp(8158080);
        xsim_sc_channel<0, bool > *p_8_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_8->m_axi_arready.bind(*p_8_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->m_axi_rdata.bind(*p_8_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->m_axi_rresp.bind(*p_8_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_8_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->m_axi_rvalid.bind(*p_8_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_8_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_8->m_axi_rready.bind(*p_8_m_axi_rready);
        p_8_m_axi_rready->set_sv_netview_offsetfromdp(8158360);
        sc_inst_9 = new pfm_dynamic_auto_cc_5(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.m04_couplers.auto_cc");
        sc_inst_9->xsim_set_dbg_index(2058);
        xsim_sc_channel<0, bool > *p_9_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_aclk.bind(*p_9_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_9_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_aresetn.bind(*p_9_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_9_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_9->s_axi_awaddr.bind(*p_9_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->s_axi_awprot.bind(*p_9_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_9_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_awvalid.bind(*p_9_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_9_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_awready.bind(*p_9_s_axi_awready);
        p_9_s_axi_awready->set_sv_netview_offsetfromdp(8194232);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->s_axi_wdata.bind(*p_9_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->s_axi_wstrb.bind(*p_9_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_9_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_wvalid.bind(*p_9_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_9_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_wready.bind(*p_9_s_axi_wready);
        p_9_s_axi_wready->set_sv_netview_offsetfromdp(8194456);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->s_axi_bresp.bind(*p_9_s_axi_bresp);
        p_9_s_axi_bresp->set_sv_netview_offsetfromdp(8194512);
        xsim_sc_channel<0, bool > *p_9_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_bvalid.bind(*p_9_s_axi_bvalid);
        p_9_s_axi_bvalid->set_sv_netview_offsetfromdp(8194568);
        xsim_sc_channel<0, bool > *p_9_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_bready.bind(*p_9_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_bready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_9_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_9->s_axi_araddr.bind(*p_9_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->s_axi_arprot.bind(*p_9_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_9_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_arvalid.bind(*p_9_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_9_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_arready.bind(*p_9_s_axi_arready);
        p_9_s_axi_arready->set_sv_netview_offsetfromdp(8194848);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->s_axi_rdata.bind(*p_9_s_axi_rdata);
        p_9_s_axi_rdata->set_sv_netview_offsetfromdp(8194904);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->s_axi_rresp.bind(*p_9_s_axi_rresp);
        p_9_s_axi_rresp->set_sv_netview_offsetfromdp(8194960);
        xsim_sc_channel<0, bool > *p_9_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_rvalid.bind(*p_9_s_axi_rvalid);
        p_9_s_axi_rvalid->set_sv_netview_offsetfromdp(8195016);
        xsim_sc_channel<0, bool > *p_9_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_rready.bind(*p_9_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_rready);
        xsim_sc_channel<0, bool > *p_9_m_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_9->m_axi_aclk.bind(*p_9_m_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_9_m_axi_aclk);
        xsim_sc_channel<0, bool > *p_9_m_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_9->m_axi_aresetn.bind(*p_9_m_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_9_m_axi_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_9_m_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_9->m_axi_awaddr.bind(*p_9_m_axi_awaddr);
        p_9_m_axi_awaddr->set_sv_netview_offsetfromdp(8195240);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->m_axi_awprot.bind(*p_9_m_axi_awprot);
        p_9_m_axi_awprot->set_sv_netview_offsetfromdp(8195296);
        xsim_sc_channel<0, bool > *p_9_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->m_axi_awvalid.bind(*p_9_m_axi_awvalid);
        p_9_m_axi_awvalid->set_sv_netview_offsetfromdp(8195352);
        xsim_sc_channel<0, bool > *p_9_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_9->m_axi_awready.bind(*p_9_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_9_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->m_axi_wdata.bind(*p_9_m_axi_wdata);
        p_9_m_axi_wdata->set_sv_netview_offsetfromdp(8195464);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->m_axi_wstrb.bind(*p_9_m_axi_wstrb);
        p_9_m_axi_wstrb->set_sv_netview_offsetfromdp(8195520);
        xsim_sc_channel<0, bool > *p_9_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->m_axi_wvalid.bind(*p_9_m_axi_wvalid);
        p_9_m_axi_wvalid->set_sv_netview_offsetfromdp(8195576);
        xsim_sc_channel<0, bool > *p_9_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_9->m_axi_wready.bind(*p_9_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_9_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->m_axi_bresp.bind(*p_9_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_9_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_9_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->m_axi_bvalid.bind(*p_9_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_9_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_9->m_axi_bready.bind(*p_9_m_axi_bready);
        p_9_m_axi_bready->set_sv_netview_offsetfromdp(8195800);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_9_m_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_9->m_axi_araddr.bind(*p_9_m_axi_araddr);
        p_9_m_axi_araddr->set_sv_netview_offsetfromdp(8195856);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->m_axi_arprot.bind(*p_9_m_axi_arprot);
        p_9_m_axi_arprot->set_sv_netview_offsetfromdp(8195912);
        xsim_sc_channel<0, bool > *p_9_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->m_axi_arvalid.bind(*p_9_m_axi_arvalid);
        p_9_m_axi_arvalid->set_sv_netview_offsetfromdp(8195968);
        xsim_sc_channel<0, bool > *p_9_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_9->m_axi_arready.bind(*p_9_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_9_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->m_axi_rdata.bind(*p_9_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_9_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->m_axi_rresp.bind(*p_9_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_9_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_9_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->m_axi_rvalid.bind(*p_9_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_9_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_9->m_axi_rready.bind(*p_9_m_axi_rready);
        p_9_m_axi_rready->set_sv_netview_offsetfromdp(8196248);
        sc_inst_10 = new pfm_dynamic_m04_regslice_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.m04_couplers.m04_regslice");
        sc_inst_10->xsim_set_dbg_index(2059);
        xsim_sc_channel<0, bool > *p_10_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_10->aclk.bind(*p_10_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_10_aclk);
        xsim_sc_channel<0, bool > *p_10_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_10->aresetn.bind(*p_10_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_10_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_10_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_10->s_axi_awaddr.bind(*p_10_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->s_axi_awprot.bind(*p_10_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_10_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_axi_awvalid.bind(*p_10_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_10_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_axi_awready.bind(*p_10_s_axi_awready);
        p_10_s_axi_awready->set_sv_netview_offsetfromdp(8196632);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_10_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_10->s_axi_wdata.bind(*p_10_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->s_axi_wstrb.bind(*p_10_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_10_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_axi_wvalid.bind(*p_10_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_10_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_axi_wready.bind(*p_10_s_axi_wready);
        p_10_s_axi_wready->set_sv_netview_offsetfromdp(8196856);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->s_axi_bresp.bind(*p_10_s_axi_bresp);
        p_10_s_axi_bresp->set_sv_netview_offsetfromdp(8196912);
        xsim_sc_channel<0, bool > *p_10_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_axi_bvalid.bind(*p_10_s_axi_bvalid);
        p_10_s_axi_bvalid->set_sv_netview_offsetfromdp(8196968);
        xsim_sc_channel<0, bool > *p_10_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_axi_bready.bind(*p_10_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_bready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_10_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_10->s_axi_araddr.bind(*p_10_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->s_axi_arprot.bind(*p_10_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_10_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_axi_arvalid.bind(*p_10_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_10_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_axi_arready.bind(*p_10_s_axi_arready);
        p_10_s_axi_arready->set_sv_netview_offsetfromdp(8197248);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_10_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_10->s_axi_rdata.bind(*p_10_s_axi_rdata);
        p_10_s_axi_rdata->set_sv_netview_offsetfromdp(8197304);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->s_axi_rresp.bind(*p_10_s_axi_rresp);
        p_10_s_axi_rresp->set_sv_netview_offsetfromdp(8197360);
        xsim_sc_channel<0, bool > *p_10_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_axi_rvalid.bind(*p_10_s_axi_rvalid);
        p_10_s_axi_rvalid->set_sv_netview_offsetfromdp(8197416);
        xsim_sc_channel<0, bool > *p_10_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_axi_rready.bind(*p_10_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_rready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_10_m_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_10->m_axi_awaddr.bind(*p_10_m_axi_awaddr);
        p_10_m_axi_awaddr->set_sv_netview_offsetfromdp(8197528);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->m_axi_awprot.bind(*p_10_m_axi_awprot);
        p_10_m_axi_awprot->set_sv_netview_offsetfromdp(8197584);
        xsim_sc_channel<0, bool > *p_10_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->m_axi_awvalid.bind(*p_10_m_axi_awvalid);
        p_10_m_axi_awvalid->set_sv_netview_offsetfromdp(8197640);
        xsim_sc_channel<0, bool > *p_10_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_10->m_axi_awready.bind(*p_10_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_10_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_10->m_axi_wdata.bind(*p_10_m_axi_wdata);
        p_10_m_axi_wdata->set_sv_netview_offsetfromdp(8197752);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->m_axi_wstrb.bind(*p_10_m_axi_wstrb);
        p_10_m_axi_wstrb->set_sv_netview_offsetfromdp(8197808);
        xsim_sc_channel<0, bool > *p_10_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->m_axi_wvalid.bind(*p_10_m_axi_wvalid);
        p_10_m_axi_wvalid->set_sv_netview_offsetfromdp(8197864);
        xsim_sc_channel<0, bool > *p_10_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_10->m_axi_wready.bind(*p_10_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->m_axi_bresp.bind(*p_10_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_10_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->m_axi_bvalid.bind(*p_10_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_10_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_10->m_axi_bready.bind(*p_10_m_axi_bready);
        p_10_m_axi_bready->set_sv_netview_offsetfromdp(8198088);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_10_m_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_10->m_axi_araddr.bind(*p_10_m_axi_araddr);
        p_10_m_axi_araddr->set_sv_netview_offsetfromdp(8198144);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->m_axi_arprot.bind(*p_10_m_axi_arprot);
        p_10_m_axi_arprot->set_sv_netview_offsetfromdp(8198200);
        xsim_sc_channel<0, bool > *p_10_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->m_axi_arvalid.bind(*p_10_m_axi_arvalid);
        p_10_m_axi_arvalid->set_sv_netview_offsetfromdp(8198256);
        xsim_sc_channel<0, bool > *p_10_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_10->m_axi_arready.bind(*p_10_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_10_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_10->m_axi_rdata.bind(*p_10_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->m_axi_rresp.bind(*p_10_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_10_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->m_axi_rvalid.bind(*p_10_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_10_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_10->m_axi_rready.bind(*p_10_m_axi_rready);
        p_10_m_axi_rready->set_sv_netview_offsetfromdp(8198536);
        sc_inst_11 = new pfm_dynamic_s00_regslice_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.s00_couplers.s00_regslice");
        sc_inst_11->xsim_set_dbg_index(2100);
        xsim_sc_channel<0, bool > *p_11_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_11->aclk.bind(*p_11_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_11_aclk);
        xsim_sc_channel<0, bool > *p_11_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_11->aresetn.bind(*p_11_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_11_aresetn);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_11_s_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_11->s_axi_awaddr.bind(*p_11_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_11_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_11->s_axi_awprot.bind(*p_11_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_11_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axi_awvalid.bind(*p_11_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_11_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axi_awready.bind(*p_11_s_axi_awready);
        p_11_s_axi_awready->set_sv_netview_offsetfromdp(8222176);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_11_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_11->s_axi_wdata.bind(*p_11_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->s_axi_wstrb.bind(*p_11_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_11_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axi_wvalid.bind(*p_11_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_11_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axi_wready.bind(*p_11_s_axi_wready);
        p_11_s_axi_wready->set_sv_netview_offsetfromdp(8222400);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->s_axi_bresp.bind(*p_11_s_axi_bresp);
        p_11_s_axi_bresp->set_sv_netview_offsetfromdp(8222456);
        xsim_sc_channel<0, bool > *p_11_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axi_bvalid.bind(*p_11_s_axi_bvalid);
        p_11_s_axi_bvalid->set_sv_netview_offsetfromdp(8222512);
        xsim_sc_channel<0, bool > *p_11_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axi_bready.bind(*p_11_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axi_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_11_s_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_11->s_axi_araddr.bind(*p_11_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_11_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_11->s_axi_arprot.bind(*p_11_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_11_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axi_arvalid.bind(*p_11_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_11_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axi_arready.bind(*p_11_s_axi_arready);
        p_11_s_axi_arready->set_sv_netview_offsetfromdp(8222792);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_11_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_11->s_axi_rdata.bind(*p_11_s_axi_rdata);
        p_11_s_axi_rdata->set_sv_netview_offsetfromdp(8222848);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->s_axi_rresp.bind(*p_11_s_axi_rresp);
        p_11_s_axi_rresp->set_sv_netview_offsetfromdp(8222904);
        xsim_sc_channel<0, bool > *p_11_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axi_rvalid.bind(*p_11_s_axi_rvalid);
        p_11_s_axi_rvalid->set_sv_netview_offsetfromdp(8222960);
        xsim_sc_channel<0, bool > *p_11_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axi_rready.bind(*p_11_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axi_rready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_11_m_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_11->m_axi_awaddr.bind(*p_11_m_axi_awaddr);
        p_11_m_axi_awaddr->set_sv_netview_offsetfromdp(8223072);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_11_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_11->m_axi_awprot.bind(*p_11_m_axi_awprot);
        p_11_m_axi_awprot->set_sv_netview_offsetfromdp(8223128);
        xsim_sc_channel<0, bool > *p_11_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->m_axi_awvalid.bind(*p_11_m_axi_awvalid);
        p_11_m_axi_awvalid->set_sv_netview_offsetfromdp(8223184);
        xsim_sc_channel<0, bool > *p_11_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_11->m_axi_awready.bind(*p_11_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_11_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_11_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_11->m_axi_wdata.bind(*p_11_m_axi_wdata);
        p_11_m_axi_wdata->set_sv_netview_offsetfromdp(8223296);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->m_axi_wstrb.bind(*p_11_m_axi_wstrb);
        p_11_m_axi_wstrb->set_sv_netview_offsetfromdp(8223352);
        xsim_sc_channel<0, bool > *p_11_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->m_axi_wvalid.bind(*p_11_m_axi_wvalid);
        p_11_m_axi_wvalid->set_sv_netview_offsetfromdp(8223408);
        xsim_sc_channel<0, bool > *p_11_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_11->m_axi_wready.bind(*p_11_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_11_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->m_axi_bresp.bind(*p_11_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_11_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_11_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->m_axi_bvalid.bind(*p_11_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_11_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_11_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_11->m_axi_bready.bind(*p_11_m_axi_bready);
        p_11_m_axi_bready->set_sv_netview_offsetfromdp(8223632);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_11_m_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_11->m_axi_araddr.bind(*p_11_m_axi_araddr);
        p_11_m_axi_araddr->set_sv_netview_offsetfromdp(8223688);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_11_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_11->m_axi_arprot.bind(*p_11_m_axi_arprot);
        p_11_m_axi_arprot->set_sv_netview_offsetfromdp(8223744);
        xsim_sc_channel<0, bool > *p_11_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->m_axi_arvalid.bind(*p_11_m_axi_arvalid);
        p_11_m_axi_arvalid->set_sv_netview_offsetfromdp(8223800);
        xsim_sc_channel<0, bool > *p_11_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_11->m_axi_arready.bind(*p_11_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_11_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_11_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_11->m_axi_rdata.bind(*p_11_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_11_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->m_axi_rresp.bind(*p_11_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_11_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_11_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->m_axi_rvalid.bind(*p_11_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_11_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_11_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_11->m_axi_rready.bind(*p_11_m_axi_rready);
        p_11_m_axi_rready->set_sv_netview_offsetfromdp(8224080);
        sc_inst_12 = new pfm_dynamic_xbar_4(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.xbar");
        sc_inst_12->xsim_set_dbg_index(774);
        xsim_sc_channel<0, bool > *p_12_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_12->aclk.bind(*p_12_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_12_aclk);
        xsim_sc_channel<0, bool > *p_12_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_12->aresetn.bind(*p_12_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_12_aresetn);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_12_s_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_12->s_axi_awaddr.bind(*p_12_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->s_axi_awprot.bind(*p_12_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_axi_awprot);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s_axi_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s_axi_awvalid.bind(*p_12_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_axi_awvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s_axi_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s_axi_awready.bind(*p_12_s_axi_awready);
        p_12_s_axi_awready->set_sv_netview_offsetfromdp(8224464);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_12_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_12->s_axi_wdata.bind(*p_12_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->s_axi_wstrb.bind(*p_12_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_axi_wstrb);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s_axi_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s_axi_wvalid.bind(*p_12_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_axi_wvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s_axi_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s_axi_wready.bind(*p_12_s_axi_wready);
        p_12_s_axi_wready->set_sv_netview_offsetfromdp(8224688);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->s_axi_bresp.bind(*p_12_s_axi_bresp);
        p_12_s_axi_bresp->set_sv_netview_offsetfromdp(8224744);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s_axi_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s_axi_bvalid.bind(*p_12_s_axi_bvalid);
        p_12_s_axi_bvalid->set_sv_netview_offsetfromdp(8224800);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s_axi_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s_axi_bready.bind(*p_12_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_axi_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_12_s_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_12->s_axi_araddr.bind(*p_12_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->s_axi_arprot.bind(*p_12_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_axi_arprot);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s_axi_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s_axi_arvalid.bind(*p_12_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_axi_arvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s_axi_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s_axi_arready.bind(*p_12_s_axi_arready);
        p_12_s_axi_arready->set_sv_netview_offsetfromdp(8225080);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_12_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_12->s_axi_rdata.bind(*p_12_s_axi_rdata);
        p_12_s_axi_rdata->set_sv_netview_offsetfromdp(8225136);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->s_axi_rresp.bind(*p_12_s_axi_rresp);
        p_12_s_axi_rresp->set_sv_netview_offsetfromdp(8225192);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s_axi_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s_axi_rvalid.bind(*p_12_s_axi_rvalid);
        p_12_s_axi_rvalid->set_sv_netview_offsetfromdp(8225248);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s_axi_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s_axi_rready.bind(*p_12_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_axi_rready);
        xsim_sc_channel<320, sc_dt::sc_bv<320> > *p_12_m_axi_awaddr = new xsim_sc_channel<320, sc_dt::sc_bv<320> >();
        sc_inst_12->m_axi_awaddr.bind(*p_12_m_axi_awaddr);
        p_12_m_axi_awaddr->set_sv_netview_offsetfromdp(8225360);
        xsim_sc_channel<15, sc_dt::sc_bv<15> > *p_12_m_axi_awprot = new xsim_sc_channel<15, sc_dt::sc_bv<15> >();
        sc_inst_12->m_axi_awprot.bind(*p_12_m_axi_awprot);
        p_12_m_axi_awprot->set_sv_netview_offsetfromdp(8225416);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_12_m_axi_awvalid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_12->m_axi_awvalid.bind(*p_12_m_axi_awvalid);
        p_12_m_axi_awvalid->set_sv_netview_offsetfromdp(8225472);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_12_m_axi_awready = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_12->m_axi_awready.bind(*p_12_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m_axi_awready);
        xsim_sc_channel<160, sc_dt::sc_bv<160> > *p_12_m_axi_wdata = new xsim_sc_channel<160, sc_dt::sc_bv<160> >();
        sc_inst_12->m_axi_wdata.bind(*p_12_m_axi_wdata);
        p_12_m_axi_wdata->set_sv_netview_offsetfromdp(8225584);
        xsim_sc_channel<20, sc_dt::sc_bv<20> > *p_12_m_axi_wstrb = new xsim_sc_channel<20, sc_dt::sc_bv<20> >();
        sc_inst_12->m_axi_wstrb.bind(*p_12_m_axi_wstrb);
        p_12_m_axi_wstrb->set_sv_netview_offsetfromdp(8225640);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_12_m_axi_wvalid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_12->m_axi_wvalid.bind(*p_12_m_axi_wvalid);
        p_12_m_axi_wvalid->set_sv_netview_offsetfromdp(8225696);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_12_m_axi_wready = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_12->m_axi_wready.bind(*p_12_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m_axi_wready);
        xsim_sc_channel<10, sc_dt::sc_bv<10> > *p_12_m_axi_bresp = new xsim_sc_channel<10, sc_dt::sc_bv<10> >();
        sc_inst_12->m_axi_bresp.bind(*p_12_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m_axi_bresp);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_12_m_axi_bvalid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_12->m_axi_bvalid.bind(*p_12_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m_axi_bvalid);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_12_m_axi_bready = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_12->m_axi_bready.bind(*p_12_m_axi_bready);
        p_12_m_axi_bready->set_sv_netview_offsetfromdp(8225920);
        xsim_sc_channel<320, sc_dt::sc_bv<320> > *p_12_m_axi_araddr = new xsim_sc_channel<320, sc_dt::sc_bv<320> >();
        sc_inst_12->m_axi_araddr.bind(*p_12_m_axi_araddr);
        p_12_m_axi_araddr->set_sv_netview_offsetfromdp(8225976);
        xsim_sc_channel<15, sc_dt::sc_bv<15> > *p_12_m_axi_arprot = new xsim_sc_channel<15, sc_dt::sc_bv<15> >();
        sc_inst_12->m_axi_arprot.bind(*p_12_m_axi_arprot);
        p_12_m_axi_arprot->set_sv_netview_offsetfromdp(8226032);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_12_m_axi_arvalid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_12->m_axi_arvalid.bind(*p_12_m_axi_arvalid);
        p_12_m_axi_arvalid->set_sv_netview_offsetfromdp(8226088);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_12_m_axi_arready = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_12->m_axi_arready.bind(*p_12_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m_axi_arready);
        xsim_sc_channel<160, sc_dt::sc_bv<160> > *p_12_m_axi_rdata = new xsim_sc_channel<160, sc_dt::sc_bv<160> >();
        sc_inst_12->m_axi_rdata.bind(*p_12_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m_axi_rdata);
        xsim_sc_channel<10, sc_dt::sc_bv<10> > *p_12_m_axi_rresp = new xsim_sc_channel<10, sc_dt::sc_bv<10> >();
        sc_inst_12->m_axi_rresp.bind(*p_12_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m_axi_rresp);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_12_m_axi_rvalid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_12->m_axi_rvalid.bind(*p_12_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m_axi_rvalid);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_12_m_axi_rready = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_12->m_axi_rready.bind(*p_12_m_axi_rready);
        p_12_m_axi_rready->set_sv_netview_offsetfromdp(8226368);
        sc_inst_13 = new pfm_dynamic_dpa_hub_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_hub");
        sc_inst_13->xsim_set_dbg_index(398);
        xsim_sc_channel<0, bool > *p_13_s_aximm_clk = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_aximm_clk.bind(*p_13_s_aximm_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_aximm_clk);
        xsim_sc_channel<0, bool > *p_13_s_aximm_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_aximm_aresetn.bind(*p_13_s_aximm_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_aximm_aresetn);
        xsim_sc_channel<0, bool > *p_13_trace_clk = new xsim_sc_channel<0, bool >();
        sc_inst_13->trace_clk.bind(*p_13_trace_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_13_trace_clk);
        xsim_sc_channel<0, bool > *p_13_trace_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_13->trace_aresetn.bind(*p_13_trace_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_13_trace_aresetn);
        xsim_sc_channel<0, bool > *p_13_axilite_clk = new xsim_sc_channel<0, bool >();
        sc_inst_13->axilite_clk.bind(*p_13_axilite_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_13_axilite_clk);
        xsim_sc_channel<0, bool > *p_13_axilite_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_13->axilite_aresetn.bind(*p_13_axilite_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_13_axilite_aresetn);
        xsim_sc_channel<0, bool > *p_13_trace_tready0 = new xsim_sc_channel<0, bool >();
        sc_inst_13->trace_tready0.bind(*p_13_trace_tready0);
        p_13_trace_tready0->set_sv_netview_offsetfromdp(8226808);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_13_trace_tdata0 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_13->trace_tdata0.bind(*p_13_trace_tdata0);
        (*_glb_hdl_sc_channel_map).push_back(p_13_trace_tdata0);
        xsim_sc_channel<0, bool > *p_13_trace_tlast0 = new xsim_sc_channel<0, bool >();
        sc_inst_13->trace_tlast0.bind(*p_13_trace_tlast0);
        (*_glb_hdl_sc_channel_map).push_back(p_13_trace_tlast0);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_trace_tid0 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->trace_tid0.bind(*p_13_trace_tid0);
        (*_glb_hdl_sc_channel_map).push_back(p_13_trace_tid0);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_trace_tdest0 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->trace_tdest0.bind(*p_13_trace_tdest0);
        (*_glb_hdl_sc_channel_map).push_back(p_13_trace_tdest0);
        xsim_sc_channel<0, bool > *p_13_trace_tvalid0 = new xsim_sc_channel<0, bool >();
        sc_inst_13->trace_tvalid0.bind(*p_13_trace_tvalid0);
        (*_glb_hdl_sc_channel_map).push_back(p_13_trace_tvalid0);
        xsim_sc_channel<0, bool > *p_13_trace_tready1 = new xsim_sc_channel<0, bool >();
        sc_inst_13->trace_tready1.bind(*p_13_trace_tready1);
        p_13_trace_tready1->set_sv_netview_offsetfromdp(8227144);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_13_trace_tdata1 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_13->trace_tdata1.bind(*p_13_trace_tdata1);
        p_13_trace_tdata1->set_sv_netview_offsetfromdp(8227200);
        xsim_sc_channel<0, bool > *p_13_trace_tlast1 = new xsim_sc_channel<0, bool >();
        sc_inst_13->trace_tlast1.bind(*p_13_trace_tlast1);
        (*_glb_hdl_sc_channel_map).push_back(p_13_trace_tlast1);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_trace_tid1 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->trace_tid1.bind(*p_13_trace_tid1);
        (*_glb_hdl_sc_channel_map).push_back(p_13_trace_tid1);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_trace_tdest1 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->trace_tdest1.bind(*p_13_trace_tdest1);
        (*_glb_hdl_sc_channel_map).push_back(p_13_trace_tdest1);
        xsim_sc_channel<0, bool > *p_13_trace_tvalid1 = new xsim_sc_channel<0, bool >();
        sc_inst_13->trace_tvalid1.bind(*p_13_trace_tvalid1);
        (*_glb_hdl_sc_channel_map).push_back(p_13_trace_tvalid1);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_13_trace_tdata2 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_13->trace_tdata2.bind(*p_13_trace_tdata2);
        (*_glb_hdl_sc_channel_map).push_back(p_13_trace_tdata2);
        xsim_sc_channel<0, bool > *p_13_trace_tready2 = new xsim_sc_channel<0, bool >();
        sc_inst_13->trace_tready2.bind(*p_13_trace_tready2);
        p_13_trace_tready2->set_sv_netview_offsetfromdp(8227536);
        xsim_sc_channel<0, bool > *p_13_trace_tlast2 = new xsim_sc_channel<0, bool >();
        sc_inst_13->trace_tlast2.bind(*p_13_trace_tlast2);
        (*_glb_hdl_sc_channel_map).push_back(p_13_trace_tlast2);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_trace_tid2 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->trace_tid2.bind(*p_13_trace_tid2);
        (*_glb_hdl_sc_channel_map).push_back(p_13_trace_tid2);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_trace_tdest2 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->trace_tdest2.bind(*p_13_trace_tdest2);
        (*_glb_hdl_sc_channel_map).push_back(p_13_trace_tdest2);
        xsim_sc_channel<0, bool > *p_13_trace_tvalid2 = new xsim_sc_channel<0, bool >();
        sc_inst_13->trace_tvalid2.bind(*p_13_trace_tvalid2);
        (*_glb_hdl_sc_channel_map).push_back(p_13_trace_tvalid2);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_13_trace_tdata3 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_13->trace_tdata3.bind(*p_13_trace_tdata3);
        (*_glb_hdl_sc_channel_map).push_back(p_13_trace_tdata3);
        xsim_sc_channel<0, bool > *p_13_trace_tready3 = new xsim_sc_channel<0, bool >();
        sc_inst_13->trace_tready3.bind(*p_13_trace_tready3);
        p_13_trace_tready3->set_sv_netview_offsetfromdp(8227872);
        xsim_sc_channel<0, bool > *p_13_trace_tlast3 = new xsim_sc_channel<0, bool >();
        sc_inst_13->trace_tlast3.bind(*p_13_trace_tlast3);
        (*_glb_hdl_sc_channel_map).push_back(p_13_trace_tlast3);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_trace_tid3 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->trace_tid3.bind(*p_13_trace_tid3);
        (*_glb_hdl_sc_channel_map).push_back(p_13_trace_tid3);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_trace_tdest3 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->trace_tdest3.bind(*p_13_trace_tdest3);
        (*_glb_hdl_sc_channel_map).push_back(p_13_trace_tdest3);
        xsim_sc_channel<0, bool > *p_13_trace_tvalid3 = new xsim_sc_channel<0, bool >();
        sc_inst_13->trace_tvalid3.bind(*p_13_trace_tvalid3);
        (*_glb_hdl_sc_channel_map).push_back(p_13_trace_tvalid3);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_13_trace_tdata4 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_13->trace_tdata4.bind(*p_13_trace_tdata4);
        (*_glb_hdl_sc_channel_map).push_back(p_13_trace_tdata4);
        xsim_sc_channel<0, bool > *p_13_trace_tready4 = new xsim_sc_channel<0, bool >();
        sc_inst_13->trace_tready4.bind(*p_13_trace_tready4);
        p_13_trace_tready4->set_sv_netview_offsetfromdp(8228208);
        xsim_sc_channel<0, bool > *p_13_trace_tlast4 = new xsim_sc_channel<0, bool >();
        sc_inst_13->trace_tlast4.bind(*p_13_trace_tlast4);
        (*_glb_hdl_sc_channel_map).push_back(p_13_trace_tlast4);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_trace_tid4 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->trace_tid4.bind(*p_13_trace_tid4);
        (*_glb_hdl_sc_channel_map).push_back(p_13_trace_tid4);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_trace_tdest4 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->trace_tdest4.bind(*p_13_trace_tdest4);
        (*_glb_hdl_sc_channel_map).push_back(p_13_trace_tdest4);
        xsim_sc_channel<0, bool > *p_13_trace_tvalid4 = new xsim_sc_channel<0, bool >();
        sc_inst_13->trace_tvalid4.bind(*p_13_trace_tvalid4);
        (*_glb_hdl_sc_channel_map).push_back(p_13_trace_tvalid4);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->s_axi_awaddr.bind(*p_13_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_awaddr);
        xsim_sc_channel<0, bool > *p_13_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axi_awvalid.bind(*p_13_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_13_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axi_awready.bind(*p_13_s_axi_awready);
        p_13_s_axi_awready->set_sv_netview_offsetfromdp(8228600);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_13_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_13->s_axi_wdata.bind(*p_13_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->s_axi_wstrb.bind(*p_13_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_13_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axi_wvalid.bind(*p_13_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_13_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axi_wready.bind(*p_13_s_axi_wready);
        p_13_s_axi_wready->set_sv_netview_offsetfromdp(8228824);
        xsim_sc_channel<0, bool > *p_13_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axi_bvalid.bind(*p_13_s_axi_bvalid);
        p_13_s_axi_bvalid->set_sv_netview_offsetfromdp(8228880);
        xsim_sc_channel<0, bool > *p_13_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axi_bready.bind(*p_13_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->s_axi_bresp.bind(*p_13_s_axi_bresp);
        p_13_s_axi_bresp->set_sv_netview_offsetfromdp(8228992);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->s_axi_araddr.bind(*p_13_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_araddr);
        xsim_sc_channel<0, bool > *p_13_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axi_arvalid.bind(*p_13_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_13_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axi_arready.bind(*p_13_s_axi_arready);
        p_13_s_axi_arready->set_sv_netview_offsetfromdp(8229160);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_13_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_13->s_axi_rdata.bind(*p_13_s_axi_rdata);
        p_13_s_axi_rdata->set_sv_netview_offsetfromdp(8229216);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->s_axi_rresp.bind(*p_13_s_axi_rresp);
        p_13_s_axi_rresp->set_sv_netview_offsetfromdp(8229272);
        xsim_sc_channel<0, bool > *p_13_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axi_rvalid.bind(*p_13_s_axi_rvalid);
        p_13_s_axi_rvalid->set_sv_netview_offsetfromdp(8229328);
        xsim_sc_channel<0, bool > *p_13_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axi_rready.bind(*p_13_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_rready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_s_axihub_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->s_axihub_awaddr.bind(*p_13_s_axihub_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axihub_awaddr);
        xsim_sc_channel<0, bool > *p_13_s_axihub_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axihub_awvalid.bind(*p_13_s_axihub_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axihub_awvalid);
        xsim_sc_channel<0, bool > *p_13_s_axihub_awready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axihub_awready.bind(*p_13_s_axihub_awready);
        p_13_s_axihub_awready->set_sv_netview_offsetfromdp(8229552);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_13_s_axihub_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_13->s_axihub_wdata.bind(*p_13_s_axihub_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axihub_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_s_axihub_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->s_axihub_wstrb.bind(*p_13_s_axihub_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axihub_wstrb);
        xsim_sc_channel<0, bool > *p_13_s_axihub_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axihub_wvalid.bind(*p_13_s_axihub_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axihub_wvalid);
        xsim_sc_channel<0, bool > *p_13_s_axihub_wready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axihub_wready.bind(*p_13_s_axihub_wready);
        p_13_s_axihub_wready->set_sv_netview_offsetfromdp(8229776);
        xsim_sc_channel<0, bool > *p_13_s_axihub_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axihub_bvalid.bind(*p_13_s_axihub_bvalid);
        p_13_s_axihub_bvalid->set_sv_netview_offsetfromdp(8229832);
        xsim_sc_channel<0, bool > *p_13_s_axihub_bready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axihub_bready.bind(*p_13_s_axihub_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axihub_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_s_axihub_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->s_axihub_bresp.bind(*p_13_s_axihub_bresp);
        p_13_s_axihub_bresp->set_sv_netview_offsetfromdp(8229944);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_s_axihub_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->s_axihub_araddr.bind(*p_13_s_axihub_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axihub_araddr);
        xsim_sc_channel<0, bool > *p_13_s_axihub_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axihub_arvalid.bind(*p_13_s_axihub_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axihub_arvalid);
        xsim_sc_channel<0, bool > *p_13_s_axihub_arready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axihub_arready.bind(*p_13_s_axihub_arready);
        p_13_s_axihub_arready->set_sv_netview_offsetfromdp(8230112);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_13_s_axihub_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_13->s_axihub_rdata.bind(*p_13_s_axihub_rdata);
        p_13_s_axihub_rdata->set_sv_netview_offsetfromdp(8230168);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_s_axihub_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->s_axihub_rresp.bind(*p_13_s_axihub_rresp);
        p_13_s_axihub_rresp->set_sv_netview_offsetfromdp(8230224);
        xsim_sc_channel<0, bool > *p_13_s_axihub_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axihub_rvalid.bind(*p_13_s_axihub_rvalid);
        p_13_s_axihub_rvalid->set_sv_netview_offsetfromdp(8230280);
        xsim_sc_channel<0, bool > *p_13_s_axihub_rready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axihub_rready.bind(*p_13_s_axihub_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axihub_rready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_13_s_aximm_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_13->s_aximm_awaddr.bind(*p_13_s_aximm_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_aximm_awaddr);
        xsim_sc_channel<0, bool > *p_13_s_aximm_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_aximm_awvalid.bind(*p_13_s_aximm_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_aximm_awvalid);
        xsim_sc_channel<0, bool > *p_13_s_aximm_awready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_aximm_awready.bind(*p_13_s_aximm_awready);
        p_13_s_aximm_awready->set_sv_netview_offsetfromdp(8230504);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_s_aximm_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->s_aximm_awlen.bind(*p_13_s_aximm_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_aximm_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_s_aximm_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->s_aximm_awsize.bind(*p_13_s_aximm_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_aximm_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_s_aximm_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->s_aximm_awburst.bind(*p_13_s_aximm_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_aximm_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_s_aximm_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->s_aximm_awid.bind(*p_13_s_aximm_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_aximm_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_13_s_aximm_wdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_13->s_aximm_wdata.bind(*p_13_s_aximm_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_aximm_wdata);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_s_aximm_wstrb = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->s_aximm_wstrb.bind(*p_13_s_aximm_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_aximm_wstrb);
        xsim_sc_channel<0, bool > *p_13_s_aximm_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_aximm_wvalid.bind(*p_13_s_aximm_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_aximm_wvalid);
        xsim_sc_channel<0, bool > *p_13_s_aximm_wready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_aximm_wready.bind(*p_13_s_aximm_wready);
        p_13_s_aximm_wready->set_sv_netview_offsetfromdp(8230952);
        xsim_sc_channel<0, bool > *p_13_s_aximm_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_aximm_bvalid.bind(*p_13_s_aximm_bvalid);
        p_13_s_aximm_bvalid->set_sv_netview_offsetfromdp(8231008);
        xsim_sc_channel<0, bool > *p_13_s_aximm_bready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_aximm_bready.bind(*p_13_s_aximm_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_aximm_bready);
        xsim_sc_channel<0, bool > *p_13_s_aximm_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_aximm_wlast.bind(*p_13_s_aximm_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_aximm_wlast);
        xsim_sc_channel<0, bool > *p_13_s_aximm_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_aximm_rlast.bind(*p_13_s_aximm_rlast);
        p_13_s_aximm_rlast->set_sv_netview_offsetfromdp(8231176);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_s_aximm_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->s_aximm_bresp.bind(*p_13_s_aximm_bresp);
        p_13_s_aximm_bresp->set_sv_netview_offsetfromdp(8231232);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_s_aximm_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->s_aximm_bid.bind(*p_13_s_aximm_bid);
        p_13_s_aximm_bid->set_sv_netview_offsetfromdp(8231288);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_13_s_aximm_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_13->s_aximm_araddr.bind(*p_13_s_aximm_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_aximm_araddr);
        xsim_sc_channel<0, bool > *p_13_s_aximm_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_aximm_arvalid.bind(*p_13_s_aximm_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_aximm_arvalid);
        xsim_sc_channel<0, bool > *p_13_s_aximm_arready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_aximm_arready.bind(*p_13_s_aximm_arready);
        p_13_s_aximm_arready->set_sv_netview_offsetfromdp(8231456);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_s_aximm_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->s_aximm_arlen.bind(*p_13_s_aximm_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_aximm_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_s_aximm_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->s_aximm_arsize.bind(*p_13_s_aximm_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_aximm_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_s_aximm_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->s_aximm_arburst.bind(*p_13_s_aximm_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_aximm_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_s_aximm_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->s_aximm_arid.bind(*p_13_s_aximm_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_aximm_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_13_s_aximm_rdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_13->s_aximm_rdata.bind(*p_13_s_aximm_rdata);
        p_13_s_aximm_rdata->set_sv_netview_offsetfromdp(8231736);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_s_aximm_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->s_aximm_rid.bind(*p_13_s_aximm_rid);
        p_13_s_aximm_rid->set_sv_netview_offsetfromdp(8231792);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_s_aximm_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->s_aximm_rresp.bind(*p_13_s_aximm_rresp);
        p_13_s_aximm_rresp->set_sv_netview_offsetfromdp(8231848);
        xsim_sc_channel<0, bool > *p_13_s_aximm_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_aximm_rvalid.bind(*p_13_s_aximm_rvalid);
        p_13_s_aximm_rvalid->set_sv_netview_offsetfromdp(8231904);
        xsim_sc_channel<0, bool > *p_13_s_aximm_rready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_aximm_rready.bind(*p_13_s_aximm_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_aximm_rready);
        sc_inst_14 = new pfm_dynamic_dpa_mon0_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_mon0");
        sc_inst_14->xsim_set_dbg_index(399);
        xsim_sc_channel<0, bool > *p_14_mon_clk = new xsim_sc_channel<0, bool >();
        sc_inst_14->mon_clk.bind(*p_14_mon_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_14_mon_clk);
        xsim_sc_channel<0, bool > *p_14_mon_resetn = new xsim_sc_channel<0, bool >();
        sc_inst_14->mon_resetn.bind(*p_14_mon_resetn);
        (*_glb_hdl_sc_channel_map).push_back(p_14_mon_resetn);
        xsim_sc_channel<0, bool > *p_14_trace_clk = new xsim_sc_channel<0, bool >();
        sc_inst_14->trace_clk.bind(*p_14_trace_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_14_trace_clk);
        xsim_sc_channel<0, bool > *p_14_trace_rst = new xsim_sc_channel<0, bool >();
        sc_inst_14->trace_rst.bind(*p_14_trace_rst);
        (*_glb_hdl_sc_channel_map).push_back(p_14_trace_rst);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_14_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_14->s_axi_awaddr.bind(*p_14_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->s_axi_awprot.bind(*p_14_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_14_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->s_axi_awvalid.bind(*p_14_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_14_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_14->s_axi_awready.bind(*p_14_s_axi_awready);
        p_14_s_axi_awready->set_sv_netview_offsetfromdp(8232456);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_14_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_14->s_axi_wdata.bind(*p_14_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s_axi_wstrb.bind(*p_14_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_14_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->s_axi_wvalid.bind(*p_14_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_14_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_14->s_axi_wready.bind(*p_14_s_axi_wready);
        p_14_s_axi_wready->set_sv_netview_offsetfromdp(8232680);
        xsim_sc_channel<0, bool > *p_14_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->s_axi_bvalid.bind(*p_14_s_axi_bvalid);
        p_14_s_axi_bvalid->set_sv_netview_offsetfromdp(8232736);
        xsim_sc_channel<0, bool > *p_14_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_14->s_axi_bready.bind(*p_14_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->s_axi_bresp.bind(*p_14_s_axi_bresp);
        p_14_s_axi_bresp->set_sv_netview_offsetfromdp(8232848);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_14_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_14->s_axi_araddr.bind(*p_14_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->s_axi_arprot.bind(*p_14_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_14_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->s_axi_arvalid.bind(*p_14_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_14_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_14->s_axi_arready.bind(*p_14_s_axi_arready);
        p_14_s_axi_arready->set_sv_netview_offsetfromdp(8233072);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_14_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_14->s_axi_rdata.bind(*p_14_s_axi_rdata);
        p_14_s_axi_rdata->set_sv_netview_offsetfromdp(8233128);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->s_axi_rresp.bind(*p_14_s_axi_rresp);
        p_14_s_axi_rresp->set_sv_netview_offsetfromdp(8233184);
        xsim_sc_channel<0, bool > *p_14_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->s_axi_rvalid.bind(*p_14_s_axi_rvalid);
        p_14_s_axi_rvalid->set_sv_netview_offsetfromdp(8233240);
        xsim_sc_channel<0, bool > *p_14_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_14->s_axi_rready.bind(*p_14_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_rready);
        xsim_sc_channel<0, bool > *p_14_mon_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_14->mon_AWVALID.bind(*p_14_mon_AWVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_14_mon_AWVALID);
        xsim_sc_channel<0, bool > *p_14_mon_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_14->mon_AWREADY.bind(*p_14_mon_AWREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_14_mon_AWREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_14_mon_AWADDR = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_14->mon_AWADDR.bind(*p_14_mon_AWADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_14_mon_AWADDR);
        xsim_sc_channel<0, bool > *p_14_mon_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_14->mon_WVALID.bind(*p_14_mon_WVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_14_mon_WVALID);
        xsim_sc_channel<0, bool > *p_14_mon_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_14->mon_WREADY.bind(*p_14_mon_WREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_14_mon_WREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_14_mon_WDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_14->mon_WDATA.bind(*p_14_mon_WDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_14_mon_WDATA);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_mon_WSTRB = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->mon_WSTRB.bind(*p_14_mon_WSTRB);
        (*_glb_hdl_sc_channel_map).push_back(p_14_mon_WSTRB);
        xsim_sc_channel<0, bool > *p_14_mon_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_14->mon_ARVALID.bind(*p_14_mon_ARVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_14_mon_ARVALID);
        xsim_sc_channel<0, bool > *p_14_mon_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_14->mon_ARREADY.bind(*p_14_mon_ARREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_14_mon_ARREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_14_mon_ARADDR = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_14->mon_ARADDR.bind(*p_14_mon_ARADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_14_mon_ARADDR);
        xsim_sc_channel<0, bool > *p_14_mon_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_14->mon_RVALID.bind(*p_14_mon_RVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_14_mon_RVALID);
        xsim_sc_channel<0, bool > *p_14_mon_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_14->mon_RREADY.bind(*p_14_mon_RREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_14_mon_RREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_14_mon_RDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_14->mon_RDATA.bind(*p_14_mon_RDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_14_mon_RDATA);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_mon_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->mon_RRESP.bind(*p_14_mon_RRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_14_mon_RRESP);
        xsim_sc_channel<0, bool > *p_14_mon_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_14->mon_BVALID.bind(*p_14_mon_BVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_14_mon_BVALID);
        xsim_sc_channel<0, bool > *p_14_mon_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_14->mon_BREADY.bind(*p_14_mon_BREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_14_mon_BREADY);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_mon_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->mon_BRESP.bind(*p_14_mon_BRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_14_mon_BRESP);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m_axis_tready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m_axis_tready.bind(*p_14_m_axis_tready);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m_axis_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_14_m_axis_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_14->m_axis_tdata.bind(*p_14_m_axis_tdata);
        p_14_m_axis_tdata->set_sv_netview_offsetfromdp(8234360);
        xsim_sc_channel<0, bool > *p_14_m_axis_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_14->m_axis_tlast.bind(*p_14_m_axis_tlast);
        p_14_m_axis_tlast->set_sv_netview_offsetfromdp(8234416);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_14_m_axis_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_14->m_axis_tid.bind(*p_14_m_axis_tid);
        p_14_m_axis_tid->set_sv_netview_offsetfromdp(8234472);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_14_m_axis_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_14->m_axis_tdest.bind(*p_14_m_axis_tdest);
        p_14_m_axis_tdest->set_sv_netview_offsetfromdp(8234528);
        xsim_sc_channel<0, bool > *p_14_m_axis_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->m_axis_tvalid.bind(*p_14_m_axis_tvalid);
        p_14_m_axis_tvalid->set_sv_netview_offsetfromdp(8234584);
        xsim_sc_channel<0, bool > *p_14_ap_continue = new xsim_sc_channel<0, bool >();
        sc_inst_14->ap_continue.bind(*p_14_ap_continue);
        (*_glb_hdl_sc_channel_map).push_back(p_14_ap_continue);
        xsim_sc_channel<0, bool > *p_14_ap_ready = new xsim_sc_channel<0, bool >();
        sc_inst_14->ap_ready.bind(*p_14_ap_ready);
        (*_glb_hdl_sc_channel_map).push_back(p_14_ap_ready);
        xsim_sc_channel<0, bool > *p_14_ap_start = new xsim_sc_channel<0, bool >();
        sc_inst_14->ap_start.bind(*p_14_ap_start);
        (*_glb_hdl_sc_channel_map).push_back(p_14_ap_start);
        xsim_sc_channel<0, bool > *p_14_ap_idle = new xsim_sc_channel<0, bool >();
        sc_inst_14->ap_idle.bind(*p_14_ap_idle);
        (*_glb_hdl_sc_channel_map).push_back(p_14_ap_idle);
        xsim_sc_channel<0, bool > *p_14_ap_done = new xsim_sc_channel<0, bool >();
        sc_inst_14->ap_done.bind(*p_14_ap_done);
        (*_glb_hdl_sc_channel_map).push_back(p_14_ap_done);
        sc_inst_15 = new pfm_dynamic_dpa_mon1_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_mon1");
        sc_inst_15->xsim_set_dbg_index(400);
        xsim_sc_channel<0, bool > *p_15_mon_clk = new xsim_sc_channel<0, bool >();
        sc_inst_15->mon_clk.bind(*p_15_mon_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_15_mon_clk);
        xsim_sc_channel<0, bool > *p_15_mon_resetn = new xsim_sc_channel<0, bool >();
        sc_inst_15->mon_resetn.bind(*p_15_mon_resetn);
        (*_glb_hdl_sc_channel_map).push_back(p_15_mon_resetn);
        xsim_sc_channel<0, bool > *p_15_trace_clk = new xsim_sc_channel<0, bool >();
        sc_inst_15->trace_clk.bind(*p_15_trace_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_15_trace_clk);
        xsim_sc_channel<0, bool > *p_15_trace_rst = new xsim_sc_channel<0, bool >();
        sc_inst_15->trace_rst.bind(*p_15_trace_rst);
        (*_glb_hdl_sc_channel_map).push_back(p_15_trace_rst);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->s_axi_awaddr.bind(*p_15_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_awaddr);
        xsim_sc_channel<0, bool > *p_15_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_awvalid.bind(*p_15_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_15_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_awready.bind(*p_15_s_axi_awready);
        p_15_s_axi_awready->set_sv_netview_offsetfromdp(8235304);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_15_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_15->s_axi_wdata.bind(*p_15_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s_axi_wstrb.bind(*p_15_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_15_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_wvalid.bind(*p_15_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_15_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_wready.bind(*p_15_s_axi_wready);
        p_15_s_axi_wready->set_sv_netview_offsetfromdp(8235528);
        xsim_sc_channel<0, bool > *p_15_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_bvalid.bind(*p_15_s_axi_bvalid);
        p_15_s_axi_bvalid->set_sv_netview_offsetfromdp(8235584);
        xsim_sc_channel<0, bool > *p_15_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_bready.bind(*p_15_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s_axi_bresp.bind(*p_15_s_axi_bresp);
        p_15_s_axi_bresp->set_sv_netview_offsetfromdp(8235696);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->s_axi_araddr.bind(*p_15_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_araddr);
        xsim_sc_channel<0, bool > *p_15_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_arvalid.bind(*p_15_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_15_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_arready.bind(*p_15_s_axi_arready);
        p_15_s_axi_arready->set_sv_netview_offsetfromdp(8235864);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_15_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_15->s_axi_rdata.bind(*p_15_s_axi_rdata);
        p_15_s_axi_rdata->set_sv_netview_offsetfromdp(8235920);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s_axi_rresp.bind(*p_15_s_axi_rresp);
        p_15_s_axi_rresp->set_sv_netview_offsetfromdp(8235976);
        xsim_sc_channel<0, bool > *p_15_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_rvalid.bind(*p_15_s_axi_rvalid);
        p_15_s_axi_rvalid->set_sv_netview_offsetfromdp(8236032);
        xsim_sc_channel<0, bool > *p_15_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_rready.bind(*p_15_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_rready);
        xsim_sc_channel<0, bool > *p_15_mon_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_15->mon_AWVALID.bind(*p_15_mon_AWVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_15_mon_AWVALID);
        xsim_sc_channel<0, bool > *p_15_mon_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_15->mon_AWREADY.bind(*p_15_mon_AWREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_15_mon_AWREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_mon_AWADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->mon_AWADDR.bind(*p_15_mon_AWADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_15_mon_AWADDR);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_mon_AWID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->mon_AWID.bind(*p_15_mon_AWID);
        (*_glb_hdl_sc_channel_map).push_back(p_15_mon_AWID);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_mon_AWLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->mon_AWLEN.bind(*p_15_mon_AWLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_15_mon_AWLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_mon_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->mon_AWSIZE.bind(*p_15_mon_AWSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_15_mon_AWSIZE);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_mon_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->mon_AWBURST.bind(*p_15_mon_AWBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_15_mon_AWBURST);
        xsim_sc_channel<0, bool > *p_15_mon_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_15->mon_WVALID.bind(*p_15_mon_WVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_15_mon_WVALID);
        xsim_sc_channel<0, bool > *p_15_mon_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_15->mon_WREADY.bind(*p_15_mon_WREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_15_mon_WREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_15_mon_WDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_15->mon_WDATA.bind(*p_15_mon_WDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_15_mon_WDATA);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_mon_WSTRB = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->mon_WSTRB.bind(*p_15_mon_WSTRB);
        (*_glb_hdl_sc_channel_map).push_back(p_15_mon_WSTRB);
        xsim_sc_channel<0, bool > *p_15_mon_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_15->mon_WLAST.bind(*p_15_mon_WLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_15_mon_WLAST);
        xsim_sc_channel<0, bool > *p_15_mon_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_15->mon_ARVALID.bind(*p_15_mon_ARVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_15_mon_ARVALID);
        xsim_sc_channel<0, bool > *p_15_mon_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_15->mon_ARREADY.bind(*p_15_mon_ARREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_15_mon_ARREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_mon_ARADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->mon_ARADDR.bind(*p_15_mon_ARADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_15_mon_ARADDR);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_mon_ARID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->mon_ARID.bind(*p_15_mon_ARID);
        (*_glb_hdl_sc_channel_map).push_back(p_15_mon_ARID);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_mon_ARLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->mon_ARLEN.bind(*p_15_mon_ARLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_15_mon_ARLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_mon_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->mon_ARSIZE.bind(*p_15_mon_ARSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_15_mon_ARSIZE);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_mon_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->mon_ARBURST.bind(*p_15_mon_ARBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_15_mon_ARBURST);
        xsim_sc_channel<0, bool > *p_15_mon_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_15->mon_RVALID.bind(*p_15_mon_RVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_15_mon_RVALID);
        xsim_sc_channel<0, bool > *p_15_mon_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_15->mon_RREADY.bind(*p_15_mon_RREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_15_mon_RREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_15_mon_RDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_15->mon_RDATA.bind(*p_15_mon_RDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_15_mon_RDATA);
        xsim_sc_channel<0, bool > *p_15_mon_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_15->mon_RLAST.bind(*p_15_mon_RLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_15_mon_RLAST);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_mon_RID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->mon_RID.bind(*p_15_mon_RID);
        (*_glb_hdl_sc_channel_map).push_back(p_15_mon_RID);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_mon_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->mon_RRESP.bind(*p_15_mon_RRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_15_mon_RRESP);
        xsim_sc_channel<0, bool > *p_15_mon_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_15->mon_BVALID.bind(*p_15_mon_BVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_15_mon_BVALID);
        xsim_sc_channel<0, bool > *p_15_mon_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_15->mon_BREADY.bind(*p_15_mon_BREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_15_mon_BREADY);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_mon_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->mon_BRESP.bind(*p_15_mon_BRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_15_mon_BRESP);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_mon_BID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->mon_BID.bind(*p_15_mon_BID);
        (*_glb_hdl_sc_channel_map).push_back(p_15_mon_BID);
        xsim_sc_channel<0, bool > *p_15_m_axis_rd_tready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m_axis_rd_tready.bind(*p_15_m_axis_rd_tready);
        (*_glb_hdl_sc_channel_map).push_back(p_15_m_axis_rd_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_m_axis_rd_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->m_axis_rd_tdata.bind(*p_15_m_axis_rd_tdata);
        p_15_m_axis_rd_tdata->set_sv_netview_offsetfromdp(8237824);
        xsim_sc_channel<0, bool > *p_15_m_axis_rd_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_15->m_axis_rd_tlast.bind(*p_15_m_axis_rd_tlast);
        p_15_m_axis_rd_tlast->set_sv_netview_offsetfromdp(8237880);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_m_axis_rd_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->m_axis_rd_tid.bind(*p_15_m_axis_rd_tid);
        p_15_m_axis_rd_tid->set_sv_netview_offsetfromdp(8237936);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_m_axis_rd_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->m_axis_rd_tdest.bind(*p_15_m_axis_rd_tdest);
        p_15_m_axis_rd_tdest->set_sv_netview_offsetfromdp(8237992);
        xsim_sc_channel<0, bool > *p_15_m_axis_wr_tready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m_axis_wr_tready.bind(*p_15_m_axis_wr_tready);
        (*_glb_hdl_sc_channel_map).push_back(p_15_m_axis_wr_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_m_axis_wr_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->m_axis_wr_tdata.bind(*p_15_m_axis_wr_tdata);
        p_15_m_axis_wr_tdata->set_sv_netview_offsetfromdp(8238104);
        xsim_sc_channel<0, bool > *p_15_m_axis_wr_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_15->m_axis_wr_tlast.bind(*p_15_m_axis_wr_tlast);
        p_15_m_axis_wr_tlast->set_sv_netview_offsetfromdp(8238160);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_m_axis_wr_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->m_axis_wr_tid.bind(*p_15_m_axis_wr_tid);
        p_15_m_axis_wr_tid->set_sv_netview_offsetfromdp(8238216);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_m_axis_wr_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->m_axis_wr_tdest.bind(*p_15_m_axis_wr_tdest);
        p_15_m_axis_wr_tdest->set_sv_netview_offsetfromdp(8238272);
        xsim_sc_channel<0, bool > *p_15_m_axis_wr_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m_axis_wr_tvalid.bind(*p_15_m_axis_wr_tvalid);
        p_15_m_axis_wr_tvalid->set_sv_netview_offsetfromdp(8238328);
        xsim_sc_channel<0, bool > *p_15_m_axis_rd_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m_axis_rd_tvalid.bind(*p_15_m_axis_rd_tvalid);
        p_15_m_axis_rd_tvalid->set_sv_netview_offsetfromdp(8238384);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_s_axi_awaddr_mon = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->s_axi_awaddr_mon.bind(*p_15_s_axi_awaddr_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_awaddr_mon);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_s_axi_awprot_mon = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->s_axi_awprot_mon.bind(*p_15_s_axi_awprot_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_awprot_mon);
        xsim_sc_channel<0, bool > *p_15_s_axi_awvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_awvalid_mon.bind(*p_15_s_axi_awvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_awvalid_mon);
        xsim_sc_channel<0, bool > *p_15_s_axi_awready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_awready_mon.bind(*p_15_s_axi_awready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_awready_mon);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_15_s_axi_wdata_mon = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_15->s_axi_wdata_mon.bind(*p_15_s_axi_wdata_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_wdata_mon);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s_axi_wstrb_mon = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s_axi_wstrb_mon.bind(*p_15_s_axi_wstrb_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_wstrb_mon);
        xsim_sc_channel<0, bool > *p_15_s_axi_wvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_wvalid_mon.bind(*p_15_s_axi_wvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_wvalid_mon);
        xsim_sc_channel<0, bool > *p_15_s_axi_wready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_wready_mon.bind(*p_15_s_axi_wready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_wready_mon);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s_axi_bresp_mon = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s_axi_bresp_mon.bind(*p_15_s_axi_bresp_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_bresp_mon);
        xsim_sc_channel<0, bool > *p_15_s_axi_bvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_bvalid_mon.bind(*p_15_s_axi_bvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_bvalid_mon);
        xsim_sc_channel<0, bool > *p_15_s_axi_bready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_bready_mon.bind(*p_15_s_axi_bready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_bready_mon);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_s_axi_araddr_mon = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->s_axi_araddr_mon.bind(*p_15_s_axi_araddr_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_araddr_mon);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_s_axi_arprot_mon = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->s_axi_arprot_mon.bind(*p_15_s_axi_arprot_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_arprot_mon);
        xsim_sc_channel<0, bool > *p_15_s_axi_arvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_arvalid_mon.bind(*p_15_s_axi_arvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_arvalid_mon);
        xsim_sc_channel<0, bool > *p_15_s_axi_arready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_arready_mon.bind(*p_15_s_axi_arready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_arready_mon);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_15_s_axi_rdata_mon = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_15->s_axi_rdata_mon.bind(*p_15_s_axi_rdata_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_rdata_mon);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s_axi_rresp_mon = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s_axi_rresp_mon.bind(*p_15_s_axi_rresp_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_rresp_mon);
        xsim_sc_channel<0, bool > *p_15_s_axi_rvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_rvalid_mon.bind(*p_15_s_axi_rvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_rvalid_mon);
        xsim_sc_channel<0, bool > *p_15_s_axi_rready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_rready_mon.bind(*p_15_s_axi_rready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_rready_mon);
        sc_inst_16 = new pfm_dynamic_dpa_mon2_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_mon2");
        sc_inst_16->xsim_set_dbg_index(401);
        xsim_sc_channel<0, bool > *p_16_mon_clk = new xsim_sc_channel<0, bool >();
        sc_inst_16->mon_clk.bind(*p_16_mon_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_clk);
        xsim_sc_channel<0, bool > *p_16_mon_resetn = new xsim_sc_channel<0, bool >();
        sc_inst_16->mon_resetn.bind(*p_16_mon_resetn);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_resetn);
        xsim_sc_channel<0, bool > *p_16_trace_clk = new xsim_sc_channel<0, bool >();
        sc_inst_16->trace_clk.bind(*p_16_trace_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_16_trace_clk);
        xsim_sc_channel<0, bool > *p_16_trace_rst = new xsim_sc_channel<0, bool >();
        sc_inst_16->trace_rst.bind(*p_16_trace_rst);
        (*_glb_hdl_sc_channel_map).push_back(p_16_trace_rst);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_16_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_16->s_axi_awaddr.bind(*p_16_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_awaddr);
        xsim_sc_channel<0, bool > *p_16_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_awvalid.bind(*p_16_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_16_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_awready.bind(*p_16_s_axi_awready);
        p_16_s_axi_awready->set_sv_netview_offsetfromdp(8239888);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_16_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_16->s_axi_wdata.bind(*p_16_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->s_axi_wstrb.bind(*p_16_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_16_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_wvalid.bind(*p_16_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_16_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_wready.bind(*p_16_s_axi_wready);
        p_16_s_axi_wready->set_sv_netview_offsetfromdp(8240112);
        xsim_sc_channel<0, bool > *p_16_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_bvalid.bind(*p_16_s_axi_bvalid);
        p_16_s_axi_bvalid->set_sv_netview_offsetfromdp(8240168);
        xsim_sc_channel<0, bool > *p_16_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_bready.bind(*p_16_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->s_axi_bresp.bind(*p_16_s_axi_bresp);
        p_16_s_axi_bresp->set_sv_netview_offsetfromdp(8240280);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_16_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_16->s_axi_araddr.bind(*p_16_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_araddr);
        xsim_sc_channel<0, bool > *p_16_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_arvalid.bind(*p_16_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_16_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_arready.bind(*p_16_s_axi_arready);
        p_16_s_axi_arready->set_sv_netview_offsetfromdp(8240448);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_16_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_16->s_axi_rdata.bind(*p_16_s_axi_rdata);
        p_16_s_axi_rdata->set_sv_netview_offsetfromdp(8240504);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->s_axi_rresp.bind(*p_16_s_axi_rresp);
        p_16_s_axi_rresp->set_sv_netview_offsetfromdp(8240560);
        xsim_sc_channel<0, bool > *p_16_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_rvalid.bind(*p_16_s_axi_rvalid);
        p_16_s_axi_rvalid->set_sv_netview_offsetfromdp(8240616);
        xsim_sc_channel<0, bool > *p_16_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_rready.bind(*p_16_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_rready);
        xsim_sc_channel<0, bool > *p_16_mon_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_16->mon_AWVALID.bind(*p_16_mon_AWVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_AWVALID);
        xsim_sc_channel<0, bool > *p_16_mon_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_16->mon_AWREADY.bind(*p_16_mon_AWREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_AWREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_16_mon_AWADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_16->mon_AWADDR.bind(*p_16_mon_AWADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_AWADDR);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_mon_AWID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->mon_AWID.bind(*p_16_mon_AWID);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_AWID);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_16_mon_AWLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_16->mon_AWLEN.bind(*p_16_mon_AWLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_AWLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_16_mon_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_16->mon_AWSIZE.bind(*p_16_mon_AWSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_AWSIZE);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_mon_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->mon_AWBURST.bind(*p_16_mon_AWBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_AWBURST);
        xsim_sc_channel<0, bool > *p_16_mon_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_16->mon_WVALID.bind(*p_16_mon_WVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_WVALID);
        xsim_sc_channel<0, bool > *p_16_mon_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_16->mon_WREADY.bind(*p_16_mon_WREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_WREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_16_mon_WDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_16->mon_WDATA.bind(*p_16_mon_WDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_WDATA);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_16_mon_WSTRB = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_16->mon_WSTRB.bind(*p_16_mon_WSTRB);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_WSTRB);
        xsim_sc_channel<0, bool > *p_16_mon_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_16->mon_WLAST.bind(*p_16_mon_WLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_WLAST);
        xsim_sc_channel<0, bool > *p_16_mon_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_16->mon_ARVALID.bind(*p_16_mon_ARVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_ARVALID);
        xsim_sc_channel<0, bool > *p_16_mon_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_16->mon_ARREADY.bind(*p_16_mon_ARREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_ARREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_16_mon_ARADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_16->mon_ARADDR.bind(*p_16_mon_ARADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_ARADDR);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_mon_ARID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->mon_ARID.bind(*p_16_mon_ARID);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_ARID);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_16_mon_ARLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_16->mon_ARLEN.bind(*p_16_mon_ARLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_ARLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_16_mon_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_16->mon_ARSIZE.bind(*p_16_mon_ARSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_ARSIZE);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_mon_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->mon_ARBURST.bind(*p_16_mon_ARBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_ARBURST);
        xsim_sc_channel<0, bool > *p_16_mon_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_16->mon_RVALID.bind(*p_16_mon_RVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_RVALID);
        xsim_sc_channel<0, bool > *p_16_mon_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_16->mon_RREADY.bind(*p_16_mon_RREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_RREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_16_mon_RDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_16->mon_RDATA.bind(*p_16_mon_RDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_RDATA);
        xsim_sc_channel<0, bool > *p_16_mon_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_16->mon_RLAST.bind(*p_16_mon_RLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_RLAST);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_mon_RID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->mon_RID.bind(*p_16_mon_RID);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_RID);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_mon_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->mon_RRESP.bind(*p_16_mon_RRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_RRESP);
        xsim_sc_channel<0, bool > *p_16_mon_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_16->mon_BVALID.bind(*p_16_mon_BVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_BVALID);
        xsim_sc_channel<0, bool > *p_16_mon_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_16->mon_BREADY.bind(*p_16_mon_BREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_BREADY);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_mon_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->mon_BRESP.bind(*p_16_mon_BRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_BRESP);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_mon_BID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->mon_BID.bind(*p_16_mon_BID);
        (*_glb_hdl_sc_channel_map).push_back(p_16_mon_BID);
        xsim_sc_channel<0, bool > *p_16_m_axis_rd_tready = new xsim_sc_channel<0, bool >();
        sc_inst_16->m_axis_rd_tready.bind(*p_16_m_axis_rd_tready);
        (*_glb_hdl_sc_channel_map).push_back(p_16_m_axis_rd_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_16_m_axis_rd_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_16->m_axis_rd_tdata.bind(*p_16_m_axis_rd_tdata);
        p_16_m_axis_rd_tdata->set_sv_netview_offsetfromdp(8242408);
        xsim_sc_channel<0, bool > *p_16_m_axis_rd_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_16->m_axis_rd_tlast.bind(*p_16_m_axis_rd_tlast);
        p_16_m_axis_rd_tlast->set_sv_netview_offsetfromdp(8242464);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_16_m_axis_rd_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_16->m_axis_rd_tid.bind(*p_16_m_axis_rd_tid);
        p_16_m_axis_rd_tid->set_sv_netview_offsetfromdp(8242520);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_16_m_axis_rd_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_16->m_axis_rd_tdest.bind(*p_16_m_axis_rd_tdest);
        p_16_m_axis_rd_tdest->set_sv_netview_offsetfromdp(8242576);
        xsim_sc_channel<0, bool > *p_16_m_axis_wr_tready = new xsim_sc_channel<0, bool >();
        sc_inst_16->m_axis_wr_tready.bind(*p_16_m_axis_wr_tready);
        (*_glb_hdl_sc_channel_map).push_back(p_16_m_axis_wr_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_16_m_axis_wr_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_16->m_axis_wr_tdata.bind(*p_16_m_axis_wr_tdata);
        p_16_m_axis_wr_tdata->set_sv_netview_offsetfromdp(8242688);
        xsim_sc_channel<0, bool > *p_16_m_axis_wr_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_16->m_axis_wr_tlast.bind(*p_16_m_axis_wr_tlast);
        p_16_m_axis_wr_tlast->set_sv_netview_offsetfromdp(8242744);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_16_m_axis_wr_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_16->m_axis_wr_tid.bind(*p_16_m_axis_wr_tid);
        p_16_m_axis_wr_tid->set_sv_netview_offsetfromdp(8242800);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_16_m_axis_wr_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_16->m_axis_wr_tdest.bind(*p_16_m_axis_wr_tdest);
        p_16_m_axis_wr_tdest->set_sv_netview_offsetfromdp(8242856);
        xsim_sc_channel<0, bool > *p_16_m_axis_wr_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->m_axis_wr_tvalid.bind(*p_16_m_axis_wr_tvalid);
        p_16_m_axis_wr_tvalid->set_sv_netview_offsetfromdp(8242912);
        xsim_sc_channel<0, bool > *p_16_m_axis_rd_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->m_axis_rd_tvalid.bind(*p_16_m_axis_rd_tvalid);
        p_16_m_axis_rd_tvalid->set_sv_netview_offsetfromdp(8242968);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_16_s_axi_awaddr_mon = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_16->s_axi_awaddr_mon.bind(*p_16_s_axi_awaddr_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_awaddr_mon);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_16_s_axi_awprot_mon = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_16->s_axi_awprot_mon.bind(*p_16_s_axi_awprot_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_awprot_mon);
        xsim_sc_channel<0, bool > *p_16_s_axi_awvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_awvalid_mon.bind(*p_16_s_axi_awvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_awvalid_mon);
        xsim_sc_channel<0, bool > *p_16_s_axi_awready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_awready_mon.bind(*p_16_s_axi_awready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_awready_mon);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_16_s_axi_wdata_mon = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_16->s_axi_wdata_mon.bind(*p_16_s_axi_wdata_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_wdata_mon);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_s_axi_wstrb_mon = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->s_axi_wstrb_mon.bind(*p_16_s_axi_wstrb_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_wstrb_mon);
        xsim_sc_channel<0, bool > *p_16_s_axi_wvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_wvalid_mon.bind(*p_16_s_axi_wvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_wvalid_mon);
        xsim_sc_channel<0, bool > *p_16_s_axi_wready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_wready_mon.bind(*p_16_s_axi_wready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_wready_mon);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_s_axi_bresp_mon = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->s_axi_bresp_mon.bind(*p_16_s_axi_bresp_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_bresp_mon);
        xsim_sc_channel<0, bool > *p_16_s_axi_bvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_bvalid_mon.bind(*p_16_s_axi_bvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_bvalid_mon);
        xsim_sc_channel<0, bool > *p_16_s_axi_bready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_bready_mon.bind(*p_16_s_axi_bready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_bready_mon);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_16_s_axi_araddr_mon = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_16->s_axi_araddr_mon.bind(*p_16_s_axi_araddr_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_araddr_mon);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_16_s_axi_arprot_mon = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_16->s_axi_arprot_mon.bind(*p_16_s_axi_arprot_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_arprot_mon);
        xsim_sc_channel<0, bool > *p_16_s_axi_arvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_arvalid_mon.bind(*p_16_s_axi_arvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_arvalid_mon);
        xsim_sc_channel<0, bool > *p_16_s_axi_arready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_arready_mon.bind(*p_16_s_axi_arready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_arready_mon);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_16_s_axi_rdata_mon = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_16->s_axi_rdata_mon.bind(*p_16_s_axi_rdata_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_rdata_mon);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_s_axi_rresp_mon = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->s_axi_rresp_mon.bind(*p_16_s_axi_rresp_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_rresp_mon);
        xsim_sc_channel<0, bool > *p_16_s_axi_rvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_rvalid_mon.bind(*p_16_s_axi_rvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_rvalid_mon);
        xsim_sc_channel<0, bool > *p_16_s_axi_rready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_rready_mon.bind(*p_16_s_axi_rready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_rready_mon);
        sc_inst_17 = new bd_5dca_sci(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.hmss_0.inst.bd_5dca_sci_inst");
        sc_inst_17->xsim_set_dbg_index(916);
        sc_inst_18 = new bd_5dca_hbm_inst_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.hmss_0.inst.hbm_inst");
        sc_inst_18->xsim_set_dbg_index(917);
        xsim_sc_channel<0, bool > *p_18_HBM_REF_CLK_0 = new xsim_sc_channel<0, bool >();
        sc_inst_18->HBM_REF_CLK_0.bind(*p_18_HBM_REF_CLK_0);
        (*_glb_hdl_sc_channel_map).push_back(p_18_HBM_REF_CLK_0);
        xsim_sc_channel<0, bool > *p_18_HBM_REF_CLK_1 = new xsim_sc_channel<0, bool >();
        sc_inst_18->HBM_REF_CLK_1.bind(*p_18_HBM_REF_CLK_1);
        (*_glb_hdl_sc_channel_map).push_back(p_18_HBM_REF_CLK_1);
        xsim_sc_channel<0, bool > *p_18_AXI_04_ACLK = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_04_ACLK.bind(*p_18_AXI_04_ACLK);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_04_ACLK);
        xsim_sc_channel<0, bool > *p_18_AXI_04_ARESET_N = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_04_ARESET_N.bind(*p_18_AXI_04_ARESET_N);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_04_ARESET_N);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_18_AXI_04_ARADDR = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_18->AXI_04_ARADDR.bind(*p_18_AXI_04_ARADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_04_ARADDR);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_AXI_04_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->AXI_04_ARBURST.bind(*p_18_AXI_04_ARBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_04_ARBURST);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_18_AXI_04_ARID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_18->AXI_04_ARID.bind(*p_18_AXI_04_ARID);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_04_ARID);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_AXI_04_ARLEN = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->AXI_04_ARLEN.bind(*p_18_AXI_04_ARLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_04_ARLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_18_AXI_04_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_18->AXI_04_ARSIZE.bind(*p_18_AXI_04_ARSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_04_ARSIZE);
        xsim_sc_channel<0, bool > *p_18_AXI_04_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_04_ARVALID.bind(*p_18_AXI_04_ARVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_04_ARVALID);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_18_AXI_04_AWADDR = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_18->AXI_04_AWADDR.bind(*p_18_AXI_04_AWADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_04_AWADDR);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_AXI_04_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->AXI_04_AWBURST.bind(*p_18_AXI_04_AWBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_04_AWBURST);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_18_AXI_04_AWID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_18->AXI_04_AWID.bind(*p_18_AXI_04_AWID);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_04_AWID);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_AXI_04_AWLEN = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->AXI_04_AWLEN.bind(*p_18_AXI_04_AWLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_04_AWLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_18_AXI_04_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_18->AXI_04_AWSIZE.bind(*p_18_AXI_04_AWSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_04_AWSIZE);
        xsim_sc_channel<0, bool > *p_18_AXI_04_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_04_AWVALID.bind(*p_18_AXI_04_AWVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_04_AWVALID);
        xsim_sc_channel<0, bool > *p_18_AXI_04_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_04_RREADY.bind(*p_18_AXI_04_RREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_04_RREADY);
        xsim_sc_channel<0, bool > *p_18_AXI_04_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_04_BREADY.bind(*p_18_AXI_04_BREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_04_BREADY);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_18_AXI_04_WDATA = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_18->AXI_04_WDATA.bind(*p_18_AXI_04_WDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_04_WDATA);
        xsim_sc_channel<0, bool > *p_18_AXI_04_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_04_WLAST.bind(*p_18_AXI_04_WLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_04_WLAST);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_18_AXI_04_WSTRB = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_18->AXI_04_WSTRB.bind(*p_18_AXI_04_WSTRB);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_04_WSTRB);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_18_AXI_04_WDATA_PARITY = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_18->AXI_04_WDATA_PARITY.bind(*p_18_AXI_04_WDATA_PARITY);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_04_WDATA_PARITY);
        xsim_sc_channel<0, bool > *p_18_AXI_04_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_04_WVALID.bind(*p_18_AXI_04_WVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_04_WVALID);
        xsim_sc_channel<0, bool > *p_18_AXI_16_ACLK = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_16_ACLK.bind(*p_18_AXI_16_ACLK);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_16_ACLK);
        xsim_sc_channel<0, bool > *p_18_AXI_16_ARESET_N = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_16_ARESET_N.bind(*p_18_AXI_16_ARESET_N);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_16_ARESET_N);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_18_AXI_16_ARADDR = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_18->AXI_16_ARADDR.bind(*p_18_AXI_16_ARADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_16_ARADDR);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_AXI_16_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->AXI_16_ARBURST.bind(*p_18_AXI_16_ARBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_16_ARBURST);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_18_AXI_16_ARID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_18->AXI_16_ARID.bind(*p_18_AXI_16_ARID);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_16_ARID);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_AXI_16_ARLEN = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->AXI_16_ARLEN.bind(*p_18_AXI_16_ARLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_16_ARLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_18_AXI_16_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_18->AXI_16_ARSIZE.bind(*p_18_AXI_16_ARSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_16_ARSIZE);
        xsim_sc_channel<0, bool > *p_18_AXI_16_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_16_ARVALID.bind(*p_18_AXI_16_ARVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_16_ARVALID);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_18_AXI_16_AWADDR = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_18->AXI_16_AWADDR.bind(*p_18_AXI_16_AWADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_16_AWADDR);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_AXI_16_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->AXI_16_AWBURST.bind(*p_18_AXI_16_AWBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_16_AWBURST);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_18_AXI_16_AWID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_18->AXI_16_AWID.bind(*p_18_AXI_16_AWID);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_16_AWID);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_AXI_16_AWLEN = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->AXI_16_AWLEN.bind(*p_18_AXI_16_AWLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_16_AWLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_18_AXI_16_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_18->AXI_16_AWSIZE.bind(*p_18_AXI_16_AWSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_16_AWSIZE);
        xsim_sc_channel<0, bool > *p_18_AXI_16_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_16_AWVALID.bind(*p_18_AXI_16_AWVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_16_AWVALID);
        xsim_sc_channel<0, bool > *p_18_AXI_16_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_16_RREADY.bind(*p_18_AXI_16_RREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_16_RREADY);
        xsim_sc_channel<0, bool > *p_18_AXI_16_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_16_BREADY.bind(*p_18_AXI_16_BREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_16_BREADY);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_18_AXI_16_WDATA = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_18->AXI_16_WDATA.bind(*p_18_AXI_16_WDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_16_WDATA);
        xsim_sc_channel<0, bool > *p_18_AXI_16_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_16_WLAST.bind(*p_18_AXI_16_WLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_16_WLAST);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_18_AXI_16_WSTRB = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_18->AXI_16_WSTRB.bind(*p_18_AXI_16_WSTRB);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_16_WSTRB);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_18_AXI_16_WDATA_PARITY = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_18->AXI_16_WDATA_PARITY.bind(*p_18_AXI_16_WDATA_PARITY);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_16_WDATA_PARITY);
        xsim_sc_channel<0, bool > *p_18_AXI_16_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_16_WVALID.bind(*p_18_AXI_16_WVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_16_WVALID);
        xsim_sc_channel<0, bool > *p_18_AXI_22_ACLK = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_22_ACLK.bind(*p_18_AXI_22_ACLK);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_22_ACLK);
        xsim_sc_channel<0, bool > *p_18_AXI_22_ARESET_N = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_22_ARESET_N.bind(*p_18_AXI_22_ARESET_N);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_22_ARESET_N);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_18_AXI_22_ARADDR = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_18->AXI_22_ARADDR.bind(*p_18_AXI_22_ARADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_22_ARADDR);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_AXI_22_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->AXI_22_ARBURST.bind(*p_18_AXI_22_ARBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_22_ARBURST);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_18_AXI_22_ARID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_18->AXI_22_ARID.bind(*p_18_AXI_22_ARID);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_22_ARID);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_AXI_22_ARLEN = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->AXI_22_ARLEN.bind(*p_18_AXI_22_ARLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_22_ARLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_18_AXI_22_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_18->AXI_22_ARSIZE.bind(*p_18_AXI_22_ARSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_22_ARSIZE);
        xsim_sc_channel<0, bool > *p_18_AXI_22_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_22_ARVALID.bind(*p_18_AXI_22_ARVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_22_ARVALID);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_18_AXI_22_AWADDR = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_18->AXI_22_AWADDR.bind(*p_18_AXI_22_AWADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_22_AWADDR);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_AXI_22_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->AXI_22_AWBURST.bind(*p_18_AXI_22_AWBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_22_AWBURST);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_18_AXI_22_AWID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_18->AXI_22_AWID.bind(*p_18_AXI_22_AWID);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_22_AWID);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_AXI_22_AWLEN = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->AXI_22_AWLEN.bind(*p_18_AXI_22_AWLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_22_AWLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_18_AXI_22_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_18->AXI_22_AWSIZE.bind(*p_18_AXI_22_AWSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_22_AWSIZE);
        xsim_sc_channel<0, bool > *p_18_AXI_22_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_22_AWVALID.bind(*p_18_AXI_22_AWVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_22_AWVALID);
        xsim_sc_channel<0, bool > *p_18_AXI_22_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_22_RREADY.bind(*p_18_AXI_22_RREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_22_RREADY);
        xsim_sc_channel<0, bool > *p_18_AXI_22_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_22_BREADY.bind(*p_18_AXI_22_BREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_22_BREADY);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_18_AXI_22_WDATA = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_18->AXI_22_WDATA.bind(*p_18_AXI_22_WDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_22_WDATA);
        xsim_sc_channel<0, bool > *p_18_AXI_22_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_22_WLAST.bind(*p_18_AXI_22_WLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_22_WLAST);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_18_AXI_22_WSTRB = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_18->AXI_22_WSTRB.bind(*p_18_AXI_22_WSTRB);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_22_WSTRB);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_18_AXI_22_WDATA_PARITY = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_18->AXI_22_WDATA_PARITY.bind(*p_18_AXI_22_WDATA_PARITY);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_22_WDATA_PARITY);
        xsim_sc_channel<0, bool > *p_18_AXI_22_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_22_WVALID.bind(*p_18_AXI_22_WVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_18_AXI_22_WVALID);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_18_APB_0_PWDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_18->APB_0_PWDATA.bind(*p_18_APB_0_PWDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_18_APB_0_PWDATA);
        xsim_sc_channel<22, sc_dt::sc_bv<22> > *p_18_APB_0_PADDR = new xsim_sc_channel<22, sc_dt::sc_bv<22> >();
        sc_inst_18->APB_0_PADDR.bind(*p_18_APB_0_PADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_18_APB_0_PADDR);
        xsim_sc_channel<0, bool > *p_18_APB_0_PCLK = new xsim_sc_channel<0, bool >();
        sc_inst_18->APB_0_PCLK.bind(*p_18_APB_0_PCLK);
        (*_glb_hdl_sc_channel_map).push_back(p_18_APB_0_PCLK);
        xsim_sc_channel<0, bool > *p_18_APB_0_PENABLE = new xsim_sc_channel<0, bool >();
        sc_inst_18->APB_0_PENABLE.bind(*p_18_APB_0_PENABLE);
        (*_glb_hdl_sc_channel_map).push_back(p_18_APB_0_PENABLE);
        xsim_sc_channel<0, bool > *p_18_APB_0_PRESET_N = new xsim_sc_channel<0, bool >();
        sc_inst_18->APB_0_PRESET_N.bind(*p_18_APB_0_PRESET_N);
        (*_glb_hdl_sc_channel_map).push_back(p_18_APB_0_PRESET_N);
        xsim_sc_channel<0, bool > *p_18_APB_0_PSEL = new xsim_sc_channel<0, bool >();
        sc_inst_18->APB_0_PSEL.bind(*p_18_APB_0_PSEL);
        (*_glb_hdl_sc_channel_map).push_back(p_18_APB_0_PSEL);
        xsim_sc_channel<0, bool > *p_18_APB_0_PWRITE = new xsim_sc_channel<0, bool >();
        sc_inst_18->APB_0_PWRITE.bind(*p_18_APB_0_PWRITE);
        (*_glb_hdl_sc_channel_map).push_back(p_18_APB_0_PWRITE);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_18_APB_1_PWDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_18->APB_1_PWDATA.bind(*p_18_APB_1_PWDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_18_APB_1_PWDATA);
        xsim_sc_channel<22, sc_dt::sc_bv<22> > *p_18_APB_1_PADDR = new xsim_sc_channel<22, sc_dt::sc_bv<22> >();
        sc_inst_18->APB_1_PADDR.bind(*p_18_APB_1_PADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_18_APB_1_PADDR);
        xsim_sc_channel<0, bool > *p_18_APB_1_PCLK = new xsim_sc_channel<0, bool >();
        sc_inst_18->APB_1_PCLK.bind(*p_18_APB_1_PCLK);
        (*_glb_hdl_sc_channel_map).push_back(p_18_APB_1_PCLK);
        xsim_sc_channel<0, bool > *p_18_APB_1_PENABLE = new xsim_sc_channel<0, bool >();
        sc_inst_18->APB_1_PENABLE.bind(*p_18_APB_1_PENABLE);
        (*_glb_hdl_sc_channel_map).push_back(p_18_APB_1_PENABLE);
        xsim_sc_channel<0, bool > *p_18_APB_1_PRESET_N = new xsim_sc_channel<0, bool >();
        sc_inst_18->APB_1_PRESET_N.bind(*p_18_APB_1_PRESET_N);
        (*_glb_hdl_sc_channel_map).push_back(p_18_APB_1_PRESET_N);
        xsim_sc_channel<0, bool > *p_18_APB_1_PSEL = new xsim_sc_channel<0, bool >();
        sc_inst_18->APB_1_PSEL.bind(*p_18_APB_1_PSEL);
        (*_glb_hdl_sc_channel_map).push_back(p_18_APB_1_PSEL);
        xsim_sc_channel<0, bool > *p_18_APB_1_PWRITE = new xsim_sc_channel<0, bool >();
        sc_inst_18->APB_1_PWRITE.bind(*p_18_APB_1_PWRITE);
        (*_glb_hdl_sc_channel_map).push_back(p_18_APB_1_PWRITE);
        xsim_sc_channel<0, bool > *p_18_AXI_04_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_04_ARREADY.bind(*p_18_AXI_04_ARREADY);
        p_18_AXI_04_ARREADY->set_sv_netview_offsetfromdp(8418224);
        xsim_sc_channel<0, bool > *p_18_AXI_04_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_04_AWREADY.bind(*p_18_AXI_04_AWREADY);
        p_18_AXI_04_AWREADY->set_sv_netview_offsetfromdp(8418280);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_18_AXI_04_RDATA_PARITY = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_18->AXI_04_RDATA_PARITY.bind(*p_18_AXI_04_RDATA_PARITY);
        p_18_AXI_04_RDATA_PARITY->set_sv_netview_offsetfromdp(8418336);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_18_AXI_04_RDATA = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_18->AXI_04_RDATA.bind(*p_18_AXI_04_RDATA);
        p_18_AXI_04_RDATA->set_sv_netview_offsetfromdp(8418392);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_18_AXI_04_RID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_18->AXI_04_RID.bind(*p_18_AXI_04_RID);
        p_18_AXI_04_RID->set_sv_netview_offsetfromdp(8418448);
        xsim_sc_channel<0, bool > *p_18_AXI_04_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_04_RLAST.bind(*p_18_AXI_04_RLAST);
        p_18_AXI_04_RLAST->set_sv_netview_offsetfromdp(8418504);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_AXI_04_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->AXI_04_RRESP.bind(*p_18_AXI_04_RRESP);
        p_18_AXI_04_RRESP->set_sv_netview_offsetfromdp(8418560);
        xsim_sc_channel<0, bool > *p_18_AXI_04_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_04_RVALID.bind(*p_18_AXI_04_RVALID);
        p_18_AXI_04_RVALID->set_sv_netview_offsetfromdp(8418616);
        xsim_sc_channel<0, bool > *p_18_AXI_04_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_04_WREADY.bind(*p_18_AXI_04_WREADY);
        p_18_AXI_04_WREADY->set_sv_netview_offsetfromdp(8418672);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_18_AXI_04_BID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_18->AXI_04_BID.bind(*p_18_AXI_04_BID);
        p_18_AXI_04_BID->set_sv_netview_offsetfromdp(8418728);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_AXI_04_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->AXI_04_BRESP.bind(*p_18_AXI_04_BRESP);
        p_18_AXI_04_BRESP->set_sv_netview_offsetfromdp(8418784);
        xsim_sc_channel<0, bool > *p_18_AXI_04_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_04_BVALID.bind(*p_18_AXI_04_BVALID);
        p_18_AXI_04_BVALID->set_sv_netview_offsetfromdp(8418840);
        xsim_sc_channel<0, bool > *p_18_AXI_16_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_16_ARREADY.bind(*p_18_AXI_16_ARREADY);
        p_18_AXI_16_ARREADY->set_sv_netview_offsetfromdp(8418896);
        xsim_sc_channel<0, bool > *p_18_AXI_16_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_16_AWREADY.bind(*p_18_AXI_16_AWREADY);
        p_18_AXI_16_AWREADY->set_sv_netview_offsetfromdp(8418952);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_18_AXI_16_RDATA_PARITY = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_18->AXI_16_RDATA_PARITY.bind(*p_18_AXI_16_RDATA_PARITY);
        p_18_AXI_16_RDATA_PARITY->set_sv_netview_offsetfromdp(8419008);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_18_AXI_16_RDATA = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_18->AXI_16_RDATA.bind(*p_18_AXI_16_RDATA);
        p_18_AXI_16_RDATA->set_sv_netview_offsetfromdp(8419064);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_18_AXI_16_RID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_18->AXI_16_RID.bind(*p_18_AXI_16_RID);
        p_18_AXI_16_RID->set_sv_netview_offsetfromdp(8419120);
        xsim_sc_channel<0, bool > *p_18_AXI_16_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_16_RLAST.bind(*p_18_AXI_16_RLAST);
        p_18_AXI_16_RLAST->set_sv_netview_offsetfromdp(8419176);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_AXI_16_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->AXI_16_RRESP.bind(*p_18_AXI_16_RRESP);
        p_18_AXI_16_RRESP->set_sv_netview_offsetfromdp(8419232);
        xsim_sc_channel<0, bool > *p_18_AXI_16_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_16_RVALID.bind(*p_18_AXI_16_RVALID);
        p_18_AXI_16_RVALID->set_sv_netview_offsetfromdp(8419288);
        xsim_sc_channel<0, bool > *p_18_AXI_16_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_16_WREADY.bind(*p_18_AXI_16_WREADY);
        p_18_AXI_16_WREADY->set_sv_netview_offsetfromdp(8419344);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_18_AXI_16_BID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_18->AXI_16_BID.bind(*p_18_AXI_16_BID);
        p_18_AXI_16_BID->set_sv_netview_offsetfromdp(8419400);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_AXI_16_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->AXI_16_BRESP.bind(*p_18_AXI_16_BRESP);
        p_18_AXI_16_BRESP->set_sv_netview_offsetfromdp(8419456);
        xsim_sc_channel<0, bool > *p_18_AXI_16_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_16_BVALID.bind(*p_18_AXI_16_BVALID);
        p_18_AXI_16_BVALID->set_sv_netview_offsetfromdp(8419512);
        xsim_sc_channel<0, bool > *p_18_AXI_22_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_22_ARREADY.bind(*p_18_AXI_22_ARREADY);
        p_18_AXI_22_ARREADY->set_sv_netview_offsetfromdp(8419568);
        xsim_sc_channel<0, bool > *p_18_AXI_22_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_22_AWREADY.bind(*p_18_AXI_22_AWREADY);
        p_18_AXI_22_AWREADY->set_sv_netview_offsetfromdp(8419624);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_18_AXI_22_RDATA_PARITY = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_18->AXI_22_RDATA_PARITY.bind(*p_18_AXI_22_RDATA_PARITY);
        p_18_AXI_22_RDATA_PARITY->set_sv_netview_offsetfromdp(8419680);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_18_AXI_22_RDATA = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_18->AXI_22_RDATA.bind(*p_18_AXI_22_RDATA);
        p_18_AXI_22_RDATA->set_sv_netview_offsetfromdp(8419736);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_18_AXI_22_RID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_18->AXI_22_RID.bind(*p_18_AXI_22_RID);
        p_18_AXI_22_RID->set_sv_netview_offsetfromdp(8419792);
        xsim_sc_channel<0, bool > *p_18_AXI_22_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_22_RLAST.bind(*p_18_AXI_22_RLAST);
        p_18_AXI_22_RLAST->set_sv_netview_offsetfromdp(8419848);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_AXI_22_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->AXI_22_RRESP.bind(*p_18_AXI_22_RRESP);
        p_18_AXI_22_RRESP->set_sv_netview_offsetfromdp(8419904);
        xsim_sc_channel<0, bool > *p_18_AXI_22_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_22_RVALID.bind(*p_18_AXI_22_RVALID);
        p_18_AXI_22_RVALID->set_sv_netview_offsetfromdp(8419960);
        xsim_sc_channel<0, bool > *p_18_AXI_22_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_22_WREADY.bind(*p_18_AXI_22_WREADY);
        p_18_AXI_22_WREADY->set_sv_netview_offsetfromdp(8420016);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_18_AXI_22_BID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_18->AXI_22_BID.bind(*p_18_AXI_22_BID);
        p_18_AXI_22_BID->set_sv_netview_offsetfromdp(8420072);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_AXI_22_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->AXI_22_BRESP.bind(*p_18_AXI_22_BRESP);
        p_18_AXI_22_BRESP->set_sv_netview_offsetfromdp(8420128);
        xsim_sc_channel<0, bool > *p_18_AXI_22_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_18->AXI_22_BVALID.bind(*p_18_AXI_22_BVALID);
        p_18_AXI_22_BVALID->set_sv_netview_offsetfromdp(8420184);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_18_APB_0_PRDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_18->APB_0_PRDATA.bind(*p_18_APB_0_PRDATA);
        p_18_APB_0_PRDATA->set_sv_netview_offsetfromdp(8420240);
        xsim_sc_channel<0, bool > *p_18_APB_0_PREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->APB_0_PREADY.bind(*p_18_APB_0_PREADY);
        p_18_APB_0_PREADY->set_sv_netview_offsetfromdp(8420296);
        xsim_sc_channel<0, bool > *p_18_APB_0_PSLVERR = new xsim_sc_channel<0, bool >();
        sc_inst_18->APB_0_PSLVERR.bind(*p_18_APB_0_PSLVERR);
        p_18_APB_0_PSLVERR->set_sv_netview_offsetfromdp(8420352);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_18_APB_1_PRDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_18->APB_1_PRDATA.bind(*p_18_APB_1_PRDATA);
        p_18_APB_1_PRDATA->set_sv_netview_offsetfromdp(8420408);
        xsim_sc_channel<0, bool > *p_18_APB_1_PREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->APB_1_PREADY.bind(*p_18_APB_1_PREADY);
        p_18_APB_1_PREADY->set_sv_netview_offsetfromdp(8420464);
        xsim_sc_channel<0, bool > *p_18_APB_1_PSLVERR = new xsim_sc_channel<0, bool >();
        sc_inst_18->APB_1_PSLVERR.bind(*p_18_APB_1_PSLVERR);
        p_18_APB_1_PSLVERR->set_sv_netview_offsetfromdp(8420520);
        xsim_sc_channel<0, bool > *p_18_apb_complete_0 = new xsim_sc_channel<0, bool >();
        sc_inst_18->apb_complete_0.bind(*p_18_apb_complete_0);
        p_18_apb_complete_0->set_sv_netview_offsetfromdp(8420576);
        xsim_sc_channel<0, bool > *p_18_apb_complete_1 = new xsim_sc_channel<0, bool >();
        sc_inst_18->apb_complete_1.bind(*p_18_apb_complete_1);
        p_18_apb_complete_1->set_sv_netview_offsetfromdp(8420632);
        xsim_sc_channel<0, bool > *p_18_DRAM_0_STAT_CATTRIP = new xsim_sc_channel<0, bool >();
        sc_inst_18->DRAM_0_STAT_CATTRIP.bind(*p_18_DRAM_0_STAT_CATTRIP);
        p_18_DRAM_0_STAT_CATTRIP->set_sv_netview_offsetfromdp(8420688);
        xsim_sc_channel<7, sc_dt::sc_bv<7> > *p_18_DRAM_0_STAT_TEMP = new xsim_sc_channel<7, sc_dt::sc_bv<7> >();
        sc_inst_18->DRAM_0_STAT_TEMP.bind(*p_18_DRAM_0_STAT_TEMP);
        p_18_DRAM_0_STAT_TEMP->set_sv_netview_offsetfromdp(8420744);
        xsim_sc_channel<0, bool > *p_18_DRAM_1_STAT_CATTRIP = new xsim_sc_channel<0, bool >();
        sc_inst_18->DRAM_1_STAT_CATTRIP.bind(*p_18_DRAM_1_STAT_CATTRIP);
        p_18_DRAM_1_STAT_CATTRIP->set_sv_netview_offsetfromdp(8420800);
        xsim_sc_channel<7, sc_dt::sc_bv<7> > *p_18_DRAM_1_STAT_TEMP = new xsim_sc_channel<7, sc_dt::sc_bv<7> >();
        sc_inst_18->DRAM_1_STAT_TEMP.bind(*p_18_DRAM_1_STAT_TEMP);
        p_18_DRAM_1_STAT_TEMP->set_sv_netview_offsetfromdp(8420856);
        sc_inst_19 = new bd_5dca_interconnect0_16_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.hmss_0.inst.path_16.interconnect0_16");
        sc_inst_19->xsim_set_dbg_index(2149);
        xsim_sc_channel<0, bool > *p_19_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_19->aclk.bind(*p_19_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_19_aclk);
        xsim_sc_channel<0, bool > *p_19_aclk1 = new xsim_sc_channel<0, bool >();
        sc_inst_19->aclk1.bind(*p_19_aclk1);
        (*_glb_hdl_sc_channel_map).push_back(p_19_aclk1);
        xsim_sc_channel<0, bool > *p_19_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_19->aresetn.bind(*p_19_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_19_aresetn);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_19_S00_AXI_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_19->S00_AXI_awaddr.bind(*p_19_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_19_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_19_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_19->S00_AXI_awlen.bind(*p_19_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_19_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_19_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_19->S00_AXI_awsize.bind(*p_19_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_19_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->S00_AXI_awburst.bind(*p_19_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_19_S00_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_19_S00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_19->S00_AXI_awlock.bind(*p_19_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_19_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->S00_AXI_awcache.bind(*p_19_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_19_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_19_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_19->S00_AXI_awprot.bind(*p_19_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_19_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->S00_AXI_awqos.bind(*p_19_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_19_S00_AXI_awqos);
        xsim_sc_channel<0, bool > *p_19_S00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_19->S00_AXI_awvalid.bind(*p_19_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_19_S00_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_19_S00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_19->S00_AXI_awready.bind(*p_19_S00_AXI_awready);
        p_19_S00_AXI_awready->set_sv_netview_offsetfromdp(8615008);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_19_S00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_19->S00_AXI_wdata.bind(*p_19_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_19_S00_AXI_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_19_S00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_19->S00_AXI_wstrb.bind(*p_19_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_19_S00_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_19_S00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_19->S00_AXI_wlast.bind(*p_19_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_19_S00_AXI_wlast);
        xsim_sc_channel<0, bool > *p_19_S00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_19->S00_AXI_wvalid.bind(*p_19_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_19_S00_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_19_S00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_19->S00_AXI_wready.bind(*p_19_S00_AXI_wready);
        p_19_S00_AXI_wready->set_sv_netview_offsetfromdp(8615288);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->S00_AXI_bresp.bind(*p_19_S00_AXI_bresp);
        p_19_S00_AXI_bresp->set_sv_netview_offsetfromdp(8615344);
        xsim_sc_channel<0, bool > *p_19_S00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_19->S00_AXI_bvalid.bind(*p_19_S00_AXI_bvalid);
        p_19_S00_AXI_bvalid->set_sv_netview_offsetfromdp(8615400);
        xsim_sc_channel<0, bool > *p_19_S00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_19->S00_AXI_bready.bind(*p_19_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_19_S00_AXI_bready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_19_S00_AXI_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_19->S00_AXI_araddr.bind(*p_19_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_19_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_19_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_19->S00_AXI_arlen.bind(*p_19_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_19_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_19_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_19->S00_AXI_arsize.bind(*p_19_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_19_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->S00_AXI_arburst.bind(*p_19_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_19_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_19_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_19->S00_AXI_arlock.bind(*p_19_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_19_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->S00_AXI_arcache.bind(*p_19_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_19_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_19_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_19->S00_AXI_arprot.bind(*p_19_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_19_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->S00_AXI_arqos.bind(*p_19_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_19_S00_AXI_arqos);
        xsim_sc_channel<0, bool > *p_19_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_19->S00_AXI_arvalid.bind(*p_19_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_19_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_19_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_19->S00_AXI_arready.bind(*p_19_S00_AXI_arready);
        p_19_S00_AXI_arready->set_sv_netview_offsetfromdp(8616016);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_19_S00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_19->S00_AXI_rdata.bind(*p_19_S00_AXI_rdata);
        p_19_S00_AXI_rdata->set_sv_netview_offsetfromdp(8616072);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->S00_AXI_rresp.bind(*p_19_S00_AXI_rresp);
        p_19_S00_AXI_rresp->set_sv_netview_offsetfromdp(8616128);
        xsim_sc_channel<0, bool > *p_19_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_19->S00_AXI_rlast.bind(*p_19_S00_AXI_rlast);
        p_19_S00_AXI_rlast->set_sv_netview_offsetfromdp(8616184);
        xsim_sc_channel<0, bool > *p_19_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_19->S00_AXI_rvalid.bind(*p_19_S00_AXI_rvalid);
        p_19_S00_AXI_rvalid->set_sv_netview_offsetfromdp(8616240);
        xsim_sc_channel<0, bool > *p_19_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_19->S00_AXI_rready.bind(*p_19_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_19_S00_AXI_rready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_19_M00_AXI_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_19->M00_AXI_awaddr.bind(*p_19_M00_AXI_awaddr);
        p_19_M00_AXI_awaddr->set_sv_netview_offsetfromdp(8616352);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_M00_AXI_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->M00_AXI_awlen.bind(*p_19_M00_AXI_awlen);
        p_19_M00_AXI_awlen->set_sv_netview_offsetfromdp(8616408);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_19_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_19->M00_AXI_awsize.bind(*p_19_M00_AXI_awsize);
        p_19_M00_AXI_awsize->set_sv_netview_offsetfromdp(8616464);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->M00_AXI_awburst.bind(*p_19_M00_AXI_awburst);
        p_19_M00_AXI_awburst->set_sv_netview_offsetfromdp(8616520);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_M00_AXI_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->M00_AXI_awlock.bind(*p_19_M00_AXI_awlock);
        p_19_M00_AXI_awlock->set_sv_netview_offsetfromdp(8616576);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->M00_AXI_awcache.bind(*p_19_M00_AXI_awcache);
        p_19_M00_AXI_awcache->set_sv_netview_offsetfromdp(8616632);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_19_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_19->M00_AXI_awprot.bind(*p_19_M00_AXI_awprot);
        p_19_M00_AXI_awprot->set_sv_netview_offsetfromdp(8616688);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->M00_AXI_awqos.bind(*p_19_M00_AXI_awqos);
        p_19_M00_AXI_awqos->set_sv_netview_offsetfromdp(8616744);
        xsim_sc_channel<0, bool > *p_19_M00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_19->M00_AXI_awvalid.bind(*p_19_M00_AXI_awvalid);
        p_19_M00_AXI_awvalid->set_sv_netview_offsetfromdp(8616800);
        xsim_sc_channel<0, bool > *p_19_M00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_19->M00_AXI_awready.bind(*p_19_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_19_M00_AXI_awready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_19_M00_AXI_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_19->M00_AXI_wdata.bind(*p_19_M00_AXI_wdata);
        p_19_M00_AXI_wdata->set_sv_netview_offsetfromdp(8616912);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_19_M00_AXI_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_19->M00_AXI_wstrb.bind(*p_19_M00_AXI_wstrb);
        p_19_M00_AXI_wstrb->set_sv_netview_offsetfromdp(8616968);
        xsim_sc_channel<0, bool > *p_19_M00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_19->M00_AXI_wlast.bind(*p_19_M00_AXI_wlast);
        p_19_M00_AXI_wlast->set_sv_netview_offsetfromdp(8617024);
        xsim_sc_channel<0, bool > *p_19_M00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_19->M00_AXI_wvalid.bind(*p_19_M00_AXI_wvalid);
        p_19_M00_AXI_wvalid->set_sv_netview_offsetfromdp(8617080);
        xsim_sc_channel<0, bool > *p_19_M00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_19->M00_AXI_wready.bind(*p_19_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_19_M00_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->M00_AXI_bresp.bind(*p_19_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_19_M00_AXI_bresp);
        xsim_sc_channel<0, bool > *p_19_M00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_19->M00_AXI_bvalid.bind(*p_19_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_19_M00_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_19_M00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_19->M00_AXI_bready.bind(*p_19_M00_AXI_bready);
        p_19_M00_AXI_bready->set_sv_netview_offsetfromdp(8617304);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_19_M00_AXI_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_19->M00_AXI_araddr.bind(*p_19_M00_AXI_araddr);
        p_19_M00_AXI_araddr->set_sv_netview_offsetfromdp(8617360);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_M00_AXI_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->M00_AXI_arlen.bind(*p_19_M00_AXI_arlen);
        p_19_M00_AXI_arlen->set_sv_netview_offsetfromdp(8617416);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_19_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_19->M00_AXI_arsize.bind(*p_19_M00_AXI_arsize);
        p_19_M00_AXI_arsize->set_sv_netview_offsetfromdp(8617472);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->M00_AXI_arburst.bind(*p_19_M00_AXI_arburst);
        p_19_M00_AXI_arburst->set_sv_netview_offsetfromdp(8617528);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_M00_AXI_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->M00_AXI_arlock.bind(*p_19_M00_AXI_arlock);
        p_19_M00_AXI_arlock->set_sv_netview_offsetfromdp(8617584);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->M00_AXI_arcache.bind(*p_19_M00_AXI_arcache);
        p_19_M00_AXI_arcache->set_sv_netview_offsetfromdp(8617640);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_19_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_19->M00_AXI_arprot.bind(*p_19_M00_AXI_arprot);
        p_19_M00_AXI_arprot->set_sv_netview_offsetfromdp(8617696);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->M00_AXI_arqos.bind(*p_19_M00_AXI_arqos);
        p_19_M00_AXI_arqos->set_sv_netview_offsetfromdp(8617752);
        xsim_sc_channel<0, bool > *p_19_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_19->M00_AXI_arvalid.bind(*p_19_M00_AXI_arvalid);
        p_19_M00_AXI_arvalid->set_sv_netview_offsetfromdp(8617808);
        xsim_sc_channel<0, bool > *p_19_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_19->M00_AXI_arready.bind(*p_19_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_19_M00_AXI_arready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_19_M00_AXI_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_19->M00_AXI_rdata.bind(*p_19_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_19_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->M00_AXI_rresp.bind(*p_19_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_19_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_19_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_19->M00_AXI_rlast.bind(*p_19_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_19_M00_AXI_rlast);
        xsim_sc_channel<0, bool > *p_19_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_19->M00_AXI_rvalid.bind(*p_19_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_19_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_19_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_19->M00_AXI_rready.bind(*p_19_M00_AXI_rready);
        p_19_M00_AXI_rready->set_sv_netview_offsetfromdp(8618144);
        sc_inst_20 = new bd_5dca_slice0_16_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.hmss_0.inst.path_16.slice0_16");
        sc_inst_20->xsim_set_dbg_index(2150);
        xsim_sc_channel<0, bool > *p_20_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_20->aclk.bind(*p_20_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_20_aclk);
        xsim_sc_channel<0, bool > *p_20_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_20->aresetn.bind(*p_20_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_20_aresetn);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_20_s_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_20->s_axi_awaddr.bind(*p_20_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_awaddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_s_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->s_axi_awlen.bind(*p_20_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_20_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_20->s_axi_awsize.bind(*p_20_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->s_axi_awburst.bind(*p_20_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_awburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_s_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->s_axi_awlock.bind(*p_20_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->s_axi_awcache.bind(*p_20_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_20_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_20->s_axi_awprot.bind(*p_20_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->s_axi_awqos.bind(*p_20_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_awqos);
        xsim_sc_channel<0, bool > *p_20_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_awvalid.bind(*p_20_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_20_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_awready.bind(*p_20_s_axi_awready);
        p_20_s_axi_awready->set_sv_netview_offsetfromdp(8618864);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_20_s_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_20->s_axi_wdata.bind(*p_20_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_wdata);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_20_s_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_20->s_axi_wstrb.bind(*p_20_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_20_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_wlast.bind(*p_20_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_20_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_wvalid.bind(*p_20_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_20_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_wready.bind(*p_20_s_axi_wready);
        p_20_s_axi_wready->set_sv_netview_offsetfromdp(8619144);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->s_axi_bresp.bind(*p_20_s_axi_bresp);
        p_20_s_axi_bresp->set_sv_netview_offsetfromdp(8619200);
        xsim_sc_channel<0, bool > *p_20_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_bvalid.bind(*p_20_s_axi_bvalid);
        p_20_s_axi_bvalid->set_sv_netview_offsetfromdp(8619256);
        xsim_sc_channel<0, bool > *p_20_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_bready.bind(*p_20_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_bready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_20_s_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_20->s_axi_araddr.bind(*p_20_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_araddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_s_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->s_axi_arlen.bind(*p_20_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_20_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_20->s_axi_arsize.bind(*p_20_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->s_axi_arburst.bind(*p_20_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_arburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_s_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->s_axi_arlock.bind(*p_20_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->s_axi_arcache.bind(*p_20_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_20_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_20->s_axi_arprot.bind(*p_20_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->s_axi_arqos.bind(*p_20_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_arqos);
        xsim_sc_channel<0, bool > *p_20_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_arvalid.bind(*p_20_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_20_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_arready.bind(*p_20_s_axi_arready);
        p_20_s_axi_arready->set_sv_netview_offsetfromdp(8619872);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_20_s_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_20->s_axi_rdata.bind(*p_20_s_axi_rdata);
        p_20_s_axi_rdata->set_sv_netview_offsetfromdp(8619928);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->s_axi_rresp.bind(*p_20_s_axi_rresp);
        p_20_s_axi_rresp->set_sv_netview_offsetfromdp(8619984);
        xsim_sc_channel<0, bool > *p_20_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_rlast.bind(*p_20_s_axi_rlast);
        p_20_s_axi_rlast->set_sv_netview_offsetfromdp(8620040);
        xsim_sc_channel<0, bool > *p_20_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_rvalid.bind(*p_20_s_axi_rvalid);
        p_20_s_axi_rvalid->set_sv_netview_offsetfromdp(8620096);
        xsim_sc_channel<0, bool > *p_20_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_rready.bind(*p_20_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_rready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_20_m_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_20->m_axi_awaddr.bind(*p_20_m_axi_awaddr);
        p_20_m_axi_awaddr->set_sv_netview_offsetfromdp(8620208);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_m_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->m_axi_awlen.bind(*p_20_m_axi_awlen);
        p_20_m_axi_awlen->set_sv_netview_offsetfromdp(8620264);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_20_m_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_20->m_axi_awsize.bind(*p_20_m_axi_awsize);
        p_20_m_axi_awsize->set_sv_netview_offsetfromdp(8620320);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_m_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->m_axi_awburst.bind(*p_20_m_axi_awburst);
        p_20_m_axi_awburst->set_sv_netview_offsetfromdp(8620376);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_m_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->m_axi_awlock.bind(*p_20_m_axi_awlock);
        p_20_m_axi_awlock->set_sv_netview_offsetfromdp(8620432);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_m_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->m_axi_awcache.bind(*p_20_m_axi_awcache);
        p_20_m_axi_awcache->set_sv_netview_offsetfromdp(8620488);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_20_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_20->m_axi_awprot.bind(*p_20_m_axi_awprot);
        p_20_m_axi_awprot->set_sv_netview_offsetfromdp(8620544);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_m_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->m_axi_awqos.bind(*p_20_m_axi_awqos);
        p_20_m_axi_awqos->set_sv_netview_offsetfromdp(8620600);
        xsim_sc_channel<0, bool > *p_20_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_awvalid.bind(*p_20_m_axi_awvalid);
        p_20_m_axi_awvalid->set_sv_netview_offsetfromdp(8620656);
        xsim_sc_channel<0, bool > *p_20_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_awready.bind(*p_20_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m_axi_awready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_20_m_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_20->m_axi_wdata.bind(*p_20_m_axi_wdata);
        p_20_m_axi_wdata->set_sv_netview_offsetfromdp(8620768);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_20_m_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_20->m_axi_wstrb.bind(*p_20_m_axi_wstrb);
        p_20_m_axi_wstrb->set_sv_netview_offsetfromdp(8620824);
        xsim_sc_channel<0, bool > *p_20_m_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_wlast.bind(*p_20_m_axi_wlast);
        p_20_m_axi_wlast->set_sv_netview_offsetfromdp(8620880);
        xsim_sc_channel<0, bool > *p_20_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_wvalid.bind(*p_20_m_axi_wvalid);
        p_20_m_axi_wvalid->set_sv_netview_offsetfromdp(8620936);
        xsim_sc_channel<0, bool > *p_20_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_wready.bind(*p_20_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->m_axi_bresp.bind(*p_20_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_20_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_bvalid.bind(*p_20_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_20_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_bready.bind(*p_20_m_axi_bready);
        p_20_m_axi_bready->set_sv_netview_offsetfromdp(8621160);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_20_m_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_20->m_axi_araddr.bind(*p_20_m_axi_araddr);
        p_20_m_axi_araddr->set_sv_netview_offsetfromdp(8621216);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_m_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->m_axi_arlen.bind(*p_20_m_axi_arlen);
        p_20_m_axi_arlen->set_sv_netview_offsetfromdp(8621272);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_20_m_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_20->m_axi_arsize.bind(*p_20_m_axi_arsize);
        p_20_m_axi_arsize->set_sv_netview_offsetfromdp(8621328);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_m_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->m_axi_arburst.bind(*p_20_m_axi_arburst);
        p_20_m_axi_arburst->set_sv_netview_offsetfromdp(8621384);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_m_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->m_axi_arlock.bind(*p_20_m_axi_arlock);
        p_20_m_axi_arlock->set_sv_netview_offsetfromdp(8621440);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_m_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->m_axi_arcache.bind(*p_20_m_axi_arcache);
        p_20_m_axi_arcache->set_sv_netview_offsetfromdp(8621496);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_20_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_20->m_axi_arprot.bind(*p_20_m_axi_arprot);
        p_20_m_axi_arprot->set_sv_netview_offsetfromdp(8621552);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_m_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->m_axi_arqos.bind(*p_20_m_axi_arqos);
        p_20_m_axi_arqos->set_sv_netview_offsetfromdp(8621608);
        xsim_sc_channel<0, bool > *p_20_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_arvalid.bind(*p_20_m_axi_arvalid);
        p_20_m_axi_arvalid->set_sv_netview_offsetfromdp(8621664);
        xsim_sc_channel<0, bool > *p_20_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_arready.bind(*p_20_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m_axi_arready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_20_m_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_20->m_axi_rdata.bind(*p_20_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->m_axi_rresp.bind(*p_20_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_20_m_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_rlast.bind(*p_20_m_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m_axi_rlast);
        xsim_sc_channel<0, bool > *p_20_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_rvalid.bind(*p_20_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_20_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_rready.bind(*p_20_m_axi_rready);
        p_20_m_axi_rready->set_sv_netview_offsetfromdp(8622000);
        sc_inst_21 = new bd_5dca_interconnect2_22_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.hmss_0.inst.path_22.interconnect2_22");
        sc_inst_21->xsim_set_dbg_index(2219);
        xsim_sc_channel<0, bool > *p_21_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_21->aclk.bind(*p_21_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_21_aclk);
        xsim_sc_channel<0, bool > *p_21_aclk1 = new xsim_sc_channel<0, bool >();
        sc_inst_21->aclk1.bind(*p_21_aclk1);
        (*_glb_hdl_sc_channel_map).push_back(p_21_aclk1);
        xsim_sc_channel<0, bool > *p_21_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_21->aresetn.bind(*p_21_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_21_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_21_S00_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_21->S00_AXI_arid.bind(*p_21_S00_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_21_S00_AXI_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_21_S00_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_21->S00_AXI_araddr.bind(*p_21_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_21_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_21_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_21->S00_AXI_arlen.bind(*p_21_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_21_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_21_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_21->S00_AXI_arsize.bind(*p_21_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_21_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->S00_AXI_arburst.bind(*p_21_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_21_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_21_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_21->S00_AXI_arlock.bind(*p_21_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_21_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->S00_AXI_arcache.bind(*p_21_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_21_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_21_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_21->S00_AXI_arprot.bind(*p_21_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_21_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->S00_AXI_arqos.bind(*p_21_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_21_S00_AXI_arqos);
        xsim_sc_channel<0, bool > *p_21_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_21->S00_AXI_arvalid.bind(*p_21_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_21_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_21_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_21->S00_AXI_arready.bind(*p_21_S00_AXI_arready);
        p_21_S00_AXI_arready->set_sv_netview_offsetfromdp(8665920);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_21_S00_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_21->S00_AXI_rid.bind(*p_21_S00_AXI_rid);
        p_21_S00_AXI_rid->set_sv_netview_offsetfromdp(8665976);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_21_S00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_21->S00_AXI_rdata.bind(*p_21_S00_AXI_rdata);
        p_21_S00_AXI_rdata->set_sv_netview_offsetfromdp(8666032);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->S00_AXI_rresp.bind(*p_21_S00_AXI_rresp);
        p_21_S00_AXI_rresp->set_sv_netview_offsetfromdp(8666088);
        xsim_sc_channel<0, bool > *p_21_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_21->S00_AXI_rlast.bind(*p_21_S00_AXI_rlast);
        p_21_S00_AXI_rlast->set_sv_netview_offsetfromdp(8666144);
        xsim_sc_channel<0, bool > *p_21_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_21->S00_AXI_rvalid.bind(*p_21_S00_AXI_rvalid);
        p_21_S00_AXI_rvalid->set_sv_netview_offsetfromdp(8666200);
        xsim_sc_channel<0, bool > *p_21_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_21->S00_AXI_rready.bind(*p_21_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_21_S00_AXI_rready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_21_M00_AXI_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_21->M00_AXI_araddr.bind(*p_21_M00_AXI_araddr);
        p_21_M00_AXI_araddr->set_sv_netview_offsetfromdp(8666312);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_M00_AXI_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->M00_AXI_arlen.bind(*p_21_M00_AXI_arlen);
        p_21_M00_AXI_arlen->set_sv_netview_offsetfromdp(8666368);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_21_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_21->M00_AXI_arsize.bind(*p_21_M00_AXI_arsize);
        p_21_M00_AXI_arsize->set_sv_netview_offsetfromdp(8666424);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->M00_AXI_arburst.bind(*p_21_M00_AXI_arburst);
        p_21_M00_AXI_arburst->set_sv_netview_offsetfromdp(8666480);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_M00_AXI_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->M00_AXI_arlock.bind(*p_21_M00_AXI_arlock);
        p_21_M00_AXI_arlock->set_sv_netview_offsetfromdp(8666536);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->M00_AXI_arcache.bind(*p_21_M00_AXI_arcache);
        p_21_M00_AXI_arcache->set_sv_netview_offsetfromdp(8666592);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_21_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_21->M00_AXI_arprot.bind(*p_21_M00_AXI_arprot);
        p_21_M00_AXI_arprot->set_sv_netview_offsetfromdp(8666648);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->M00_AXI_arqos.bind(*p_21_M00_AXI_arqos);
        p_21_M00_AXI_arqos->set_sv_netview_offsetfromdp(8666704);
        xsim_sc_channel<0, bool > *p_21_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_21->M00_AXI_arvalid.bind(*p_21_M00_AXI_arvalid);
        p_21_M00_AXI_arvalid->set_sv_netview_offsetfromdp(8666760);
        xsim_sc_channel<0, bool > *p_21_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_21->M00_AXI_arready.bind(*p_21_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_21_M00_AXI_arready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_21_M00_AXI_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_21->M00_AXI_rdata.bind(*p_21_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_21_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->M00_AXI_rresp.bind(*p_21_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_21_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_21_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_21->M00_AXI_rlast.bind(*p_21_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_21_M00_AXI_rlast);
        xsim_sc_channel<0, bool > *p_21_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_21->M00_AXI_rvalid.bind(*p_21_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_21_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_21_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_21->M00_AXI_rready.bind(*p_21_M00_AXI_rready);
        p_21_M00_AXI_rready->set_sv_netview_offsetfromdp(8667096);
        sc_inst_22 = new bd_5dca_slice2_22_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.hmss_0.inst.path_22.slice2_22");
        sc_inst_22->xsim_set_dbg_index(2220);
        xsim_sc_channel<0, bool > *p_22_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_22->aclk.bind(*p_22_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_22_aclk);
        xsim_sc_channel<0, bool > *p_22_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_22->aresetn.bind(*p_22_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_22_aresetn);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_22_s_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_22->s_axi_awaddr.bind(*p_22_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_awaddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_s_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->s_axi_awlen.bind(*p_22_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_22_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_22->s_axi_awsize.bind(*p_22_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->s_axi_awburst.bind(*p_22_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_awburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_s_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->s_axi_awlock.bind(*p_22_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->s_axi_awcache.bind(*p_22_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_22_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_22->s_axi_awprot.bind(*p_22_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->s_axi_awqos.bind(*p_22_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_awqos);
        xsim_sc_channel<0, bool > *p_22_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_awvalid.bind(*p_22_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_22_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_awready.bind(*p_22_s_axi_awready);
        p_22_s_axi_awready->set_sv_netview_offsetfromdp(8667816);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_22_s_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_22->s_axi_wdata.bind(*p_22_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_wdata);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_22_s_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_22->s_axi_wstrb.bind(*p_22_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_22_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_wlast.bind(*p_22_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_22_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_wvalid.bind(*p_22_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_22_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_wready.bind(*p_22_s_axi_wready);
        p_22_s_axi_wready->set_sv_netview_offsetfromdp(8668096);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->s_axi_bresp.bind(*p_22_s_axi_bresp);
        p_22_s_axi_bresp->set_sv_netview_offsetfromdp(8668152);
        xsim_sc_channel<0, bool > *p_22_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_bvalid.bind(*p_22_s_axi_bvalid);
        p_22_s_axi_bvalid->set_sv_netview_offsetfromdp(8668208);
        xsim_sc_channel<0, bool > *p_22_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_bready.bind(*p_22_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_bready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_22_s_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_22->s_axi_araddr.bind(*p_22_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_araddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_s_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->s_axi_arlen.bind(*p_22_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_22_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_22->s_axi_arsize.bind(*p_22_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->s_axi_arburst.bind(*p_22_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_arburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_s_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->s_axi_arlock.bind(*p_22_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->s_axi_arcache.bind(*p_22_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_22_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_22->s_axi_arprot.bind(*p_22_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->s_axi_arqos.bind(*p_22_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_arqos);
        xsim_sc_channel<0, bool > *p_22_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_arvalid.bind(*p_22_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_22_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_arready.bind(*p_22_s_axi_arready);
        p_22_s_axi_arready->set_sv_netview_offsetfromdp(8668824);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_22_s_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_22->s_axi_rdata.bind(*p_22_s_axi_rdata);
        p_22_s_axi_rdata->set_sv_netview_offsetfromdp(8668880);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->s_axi_rresp.bind(*p_22_s_axi_rresp);
        p_22_s_axi_rresp->set_sv_netview_offsetfromdp(8668936);
        xsim_sc_channel<0, bool > *p_22_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_rlast.bind(*p_22_s_axi_rlast);
        p_22_s_axi_rlast->set_sv_netview_offsetfromdp(8668992);
        xsim_sc_channel<0, bool > *p_22_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_rvalid.bind(*p_22_s_axi_rvalid);
        p_22_s_axi_rvalid->set_sv_netview_offsetfromdp(8669048);
        xsim_sc_channel<0, bool > *p_22_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_rready.bind(*p_22_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_rready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_22_m_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_22->m_axi_awaddr.bind(*p_22_m_axi_awaddr);
        p_22_m_axi_awaddr->set_sv_netview_offsetfromdp(8669160);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_m_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->m_axi_awlen.bind(*p_22_m_axi_awlen);
        p_22_m_axi_awlen->set_sv_netview_offsetfromdp(8669216);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_22_m_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_22->m_axi_awsize.bind(*p_22_m_axi_awsize);
        p_22_m_axi_awsize->set_sv_netview_offsetfromdp(8669272);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_m_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->m_axi_awburst.bind(*p_22_m_axi_awburst);
        p_22_m_axi_awburst->set_sv_netview_offsetfromdp(8669328);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_m_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->m_axi_awlock.bind(*p_22_m_axi_awlock);
        p_22_m_axi_awlock->set_sv_netview_offsetfromdp(8669384);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_m_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->m_axi_awcache.bind(*p_22_m_axi_awcache);
        p_22_m_axi_awcache->set_sv_netview_offsetfromdp(8669440);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_22_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_22->m_axi_awprot.bind(*p_22_m_axi_awprot);
        p_22_m_axi_awprot->set_sv_netview_offsetfromdp(8669496);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_m_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->m_axi_awqos.bind(*p_22_m_axi_awqos);
        p_22_m_axi_awqos->set_sv_netview_offsetfromdp(8669552);
        xsim_sc_channel<0, bool > *p_22_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axi_awvalid.bind(*p_22_m_axi_awvalid);
        p_22_m_axi_awvalid->set_sv_netview_offsetfromdp(8669608);
        xsim_sc_channel<0, bool > *p_22_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axi_awready.bind(*p_22_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_22_m_axi_awready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_22_m_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_22->m_axi_wdata.bind(*p_22_m_axi_wdata);
        p_22_m_axi_wdata->set_sv_netview_offsetfromdp(8669720);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_22_m_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_22->m_axi_wstrb.bind(*p_22_m_axi_wstrb);
        p_22_m_axi_wstrb->set_sv_netview_offsetfromdp(8669776);
        xsim_sc_channel<0, bool > *p_22_m_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axi_wlast.bind(*p_22_m_axi_wlast);
        p_22_m_axi_wlast->set_sv_netview_offsetfromdp(8669832);
        xsim_sc_channel<0, bool > *p_22_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axi_wvalid.bind(*p_22_m_axi_wvalid);
        p_22_m_axi_wvalid->set_sv_netview_offsetfromdp(8669888);
        xsim_sc_channel<0, bool > *p_22_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axi_wready.bind(*p_22_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_22_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->m_axi_bresp.bind(*p_22_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_22_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_22_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axi_bvalid.bind(*p_22_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_22_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_22_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axi_bready.bind(*p_22_m_axi_bready);
        p_22_m_axi_bready->set_sv_netview_offsetfromdp(8670112);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_22_m_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_22->m_axi_araddr.bind(*p_22_m_axi_araddr);
        p_22_m_axi_araddr->set_sv_netview_offsetfromdp(8670168);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_m_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->m_axi_arlen.bind(*p_22_m_axi_arlen);
        p_22_m_axi_arlen->set_sv_netview_offsetfromdp(8670224);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_22_m_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_22->m_axi_arsize.bind(*p_22_m_axi_arsize);
        p_22_m_axi_arsize->set_sv_netview_offsetfromdp(8670280);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_m_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->m_axi_arburst.bind(*p_22_m_axi_arburst);
        p_22_m_axi_arburst->set_sv_netview_offsetfromdp(8670336);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_m_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->m_axi_arlock.bind(*p_22_m_axi_arlock);
        p_22_m_axi_arlock->set_sv_netview_offsetfromdp(8670392);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_m_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->m_axi_arcache.bind(*p_22_m_axi_arcache);
        p_22_m_axi_arcache->set_sv_netview_offsetfromdp(8670448);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_22_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_22->m_axi_arprot.bind(*p_22_m_axi_arprot);
        p_22_m_axi_arprot->set_sv_netview_offsetfromdp(8670504);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_m_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->m_axi_arqos.bind(*p_22_m_axi_arqos);
        p_22_m_axi_arqos->set_sv_netview_offsetfromdp(8670560);
        xsim_sc_channel<0, bool > *p_22_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axi_arvalid.bind(*p_22_m_axi_arvalid);
        p_22_m_axi_arvalid->set_sv_netview_offsetfromdp(8670616);
        xsim_sc_channel<0, bool > *p_22_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axi_arready.bind(*p_22_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_22_m_axi_arready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_22_m_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_22->m_axi_rdata.bind(*p_22_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_22_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->m_axi_rresp.bind(*p_22_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_22_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_22_m_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axi_rlast.bind(*p_22_m_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_22_m_axi_rlast);
        xsim_sc_channel<0, bool > *p_22_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axi_rvalid.bind(*p_22_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_22_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_22_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axi_rready.bind(*p_22_m_axi_rready);
        p_22_m_axi_rready->set_sv_netview_offsetfromdp(8670952);
        sc_inst_23 = new bd_5dca_interconnect1_4_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.hmss_0.inst.path_4.interconnect1_4");
        sc_inst_23->xsim_set_dbg_index(2273);
        xsim_sc_channel<0, bool > *p_23_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_23->aclk.bind(*p_23_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_23_aclk);
        xsim_sc_channel<0, bool > *p_23_aclk1 = new xsim_sc_channel<0, bool >();
        sc_inst_23->aclk1.bind(*p_23_aclk1);
        (*_glb_hdl_sc_channel_map).push_back(p_23_aclk1);
        xsim_sc_channel<0, bool > *p_23_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_23->aresetn.bind(*p_23_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_23_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_S00_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->S00_AXI_awid.bind(*p_23_S00_AXI_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_23_S00_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_23->S00_AXI_awaddr.bind(*p_23_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_23_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_23->S00_AXI_awlen.bind(*p_23_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->S00_AXI_awsize.bind(*p_23_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->S00_AXI_awburst.bind(*p_23_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_S00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->S00_AXI_awlock.bind(*p_23_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->S00_AXI_awcache.bind(*p_23_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->S00_AXI_awprot.bind(*p_23_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->S00_AXI_awqos.bind(*p_23_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_awqos);
        xsim_sc_channel<0, bool > *p_23_S00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->S00_AXI_awvalid.bind(*p_23_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_23_S00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_23->S00_AXI_awready.bind(*p_23_S00_AXI_awready);
        p_23_S00_AXI_awready->set_sv_netview_offsetfromdp(8735480);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_23_S00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_23->S00_AXI_wdata.bind(*p_23_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_23_S00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_23->S00_AXI_wstrb.bind(*p_23_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_23_S00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_23->S00_AXI_wlast.bind(*p_23_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_wlast);
        xsim_sc_channel<0, bool > *p_23_S00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->S00_AXI_wvalid.bind(*p_23_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_23_S00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_23->S00_AXI_wready.bind(*p_23_S00_AXI_wready);
        p_23_S00_AXI_wready->set_sv_netview_offsetfromdp(8735760);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_S00_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->S00_AXI_bid.bind(*p_23_S00_AXI_bid);
        p_23_S00_AXI_bid->set_sv_netview_offsetfromdp(8735816);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->S00_AXI_bresp.bind(*p_23_S00_AXI_bresp);
        p_23_S00_AXI_bresp->set_sv_netview_offsetfromdp(8735872);
        xsim_sc_channel<0, bool > *p_23_S00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->S00_AXI_bvalid.bind(*p_23_S00_AXI_bvalid);
        p_23_S00_AXI_bvalid->set_sv_netview_offsetfromdp(8735928);
        xsim_sc_channel<0, bool > *p_23_S00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_23->S00_AXI_bready.bind(*p_23_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_S00_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->S00_AXI_arid.bind(*p_23_S00_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_23_S00_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_23->S00_AXI_araddr.bind(*p_23_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_23_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_23->S00_AXI_arlen.bind(*p_23_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->S00_AXI_arsize.bind(*p_23_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->S00_AXI_arburst.bind(*p_23_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->S00_AXI_arlock.bind(*p_23_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->S00_AXI_arcache.bind(*p_23_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->S00_AXI_arprot.bind(*p_23_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->S00_AXI_arqos.bind(*p_23_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_arqos);
        xsim_sc_channel<0, bool > *p_23_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->S00_AXI_arvalid.bind(*p_23_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_23_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_23->S00_AXI_arready.bind(*p_23_S00_AXI_arready);
        p_23_S00_AXI_arready->set_sv_netview_offsetfromdp(8736600);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_S00_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->S00_AXI_rid.bind(*p_23_S00_AXI_rid);
        p_23_S00_AXI_rid->set_sv_netview_offsetfromdp(8736656);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_23_S00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_23->S00_AXI_rdata.bind(*p_23_S00_AXI_rdata);
        p_23_S00_AXI_rdata->set_sv_netview_offsetfromdp(8736712);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->S00_AXI_rresp.bind(*p_23_S00_AXI_rresp);
        p_23_S00_AXI_rresp->set_sv_netview_offsetfromdp(8736768);
        xsim_sc_channel<0, bool > *p_23_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_23->S00_AXI_rlast.bind(*p_23_S00_AXI_rlast);
        p_23_S00_AXI_rlast->set_sv_netview_offsetfromdp(8736824);
        xsim_sc_channel<0, bool > *p_23_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->S00_AXI_rvalid.bind(*p_23_S00_AXI_rvalid);
        p_23_S00_AXI_rvalid->set_sv_netview_offsetfromdp(8736880);
        xsim_sc_channel<0, bool > *p_23_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_23->S00_AXI_rready.bind(*p_23_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_23_S00_AXI_rready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_23_M00_AXI_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_23->M00_AXI_awaddr.bind(*p_23_M00_AXI_awaddr);
        p_23_M00_AXI_awaddr->set_sv_netview_offsetfromdp(8736992);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_M00_AXI_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->M00_AXI_awlen.bind(*p_23_M00_AXI_awlen);
        p_23_M00_AXI_awlen->set_sv_netview_offsetfromdp(8737048);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->M00_AXI_awsize.bind(*p_23_M00_AXI_awsize);
        p_23_M00_AXI_awsize->set_sv_netview_offsetfromdp(8737104);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->M00_AXI_awburst.bind(*p_23_M00_AXI_awburst);
        p_23_M00_AXI_awburst->set_sv_netview_offsetfromdp(8737160);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_M00_AXI_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->M00_AXI_awlock.bind(*p_23_M00_AXI_awlock);
        p_23_M00_AXI_awlock->set_sv_netview_offsetfromdp(8737216);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->M00_AXI_awcache.bind(*p_23_M00_AXI_awcache);
        p_23_M00_AXI_awcache->set_sv_netview_offsetfromdp(8737272);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->M00_AXI_awprot.bind(*p_23_M00_AXI_awprot);
        p_23_M00_AXI_awprot->set_sv_netview_offsetfromdp(8737328);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->M00_AXI_awqos.bind(*p_23_M00_AXI_awqos);
        p_23_M00_AXI_awqos->set_sv_netview_offsetfromdp(8737384);
        xsim_sc_channel<0, bool > *p_23_M00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->M00_AXI_awvalid.bind(*p_23_M00_AXI_awvalid);
        p_23_M00_AXI_awvalid->set_sv_netview_offsetfromdp(8737440);
        xsim_sc_channel<0, bool > *p_23_M00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_23->M00_AXI_awready.bind(*p_23_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_23_M00_AXI_awready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_23_M00_AXI_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_23->M00_AXI_wdata.bind(*p_23_M00_AXI_wdata);
        p_23_M00_AXI_wdata->set_sv_netview_offsetfromdp(8737552);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_23_M00_AXI_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_23->M00_AXI_wstrb.bind(*p_23_M00_AXI_wstrb);
        p_23_M00_AXI_wstrb->set_sv_netview_offsetfromdp(8737608);
        xsim_sc_channel<0, bool > *p_23_M00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_23->M00_AXI_wlast.bind(*p_23_M00_AXI_wlast);
        p_23_M00_AXI_wlast->set_sv_netview_offsetfromdp(8737664);
        xsim_sc_channel<0, bool > *p_23_M00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->M00_AXI_wvalid.bind(*p_23_M00_AXI_wvalid);
        p_23_M00_AXI_wvalid->set_sv_netview_offsetfromdp(8737720);
        xsim_sc_channel<0, bool > *p_23_M00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_23->M00_AXI_wready.bind(*p_23_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_23_M00_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->M00_AXI_bresp.bind(*p_23_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_23_M00_AXI_bresp);
        xsim_sc_channel<0, bool > *p_23_M00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->M00_AXI_bvalid.bind(*p_23_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_23_M00_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_23_M00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_23->M00_AXI_bready.bind(*p_23_M00_AXI_bready);
        p_23_M00_AXI_bready->set_sv_netview_offsetfromdp(8737944);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_23_M00_AXI_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_23->M00_AXI_araddr.bind(*p_23_M00_AXI_araddr);
        p_23_M00_AXI_araddr->set_sv_netview_offsetfromdp(8738000);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_M00_AXI_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->M00_AXI_arlen.bind(*p_23_M00_AXI_arlen);
        p_23_M00_AXI_arlen->set_sv_netview_offsetfromdp(8738056);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->M00_AXI_arsize.bind(*p_23_M00_AXI_arsize);
        p_23_M00_AXI_arsize->set_sv_netview_offsetfromdp(8738112);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->M00_AXI_arburst.bind(*p_23_M00_AXI_arburst);
        p_23_M00_AXI_arburst->set_sv_netview_offsetfromdp(8738168);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_M00_AXI_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->M00_AXI_arlock.bind(*p_23_M00_AXI_arlock);
        p_23_M00_AXI_arlock->set_sv_netview_offsetfromdp(8738224);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->M00_AXI_arcache.bind(*p_23_M00_AXI_arcache);
        p_23_M00_AXI_arcache->set_sv_netview_offsetfromdp(8738280);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->M00_AXI_arprot.bind(*p_23_M00_AXI_arprot);
        p_23_M00_AXI_arprot->set_sv_netview_offsetfromdp(8738336);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->M00_AXI_arqos.bind(*p_23_M00_AXI_arqos);
        p_23_M00_AXI_arqos->set_sv_netview_offsetfromdp(8738392);
        xsim_sc_channel<0, bool > *p_23_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->M00_AXI_arvalid.bind(*p_23_M00_AXI_arvalid);
        p_23_M00_AXI_arvalid->set_sv_netview_offsetfromdp(8738448);
        xsim_sc_channel<0, bool > *p_23_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_23->M00_AXI_arready.bind(*p_23_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_23_M00_AXI_arready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_23_M00_AXI_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_23->M00_AXI_rdata.bind(*p_23_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_23_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->M00_AXI_rresp.bind(*p_23_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_23_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_23_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_23->M00_AXI_rlast.bind(*p_23_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_23_M00_AXI_rlast);
        xsim_sc_channel<0, bool > *p_23_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->M00_AXI_rvalid.bind(*p_23_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_23_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_23_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_23->M00_AXI_rready.bind(*p_23_M00_AXI_rready);
        p_23_M00_AXI_rready->set_sv_netview_offsetfromdp(8738784);
        sc_inst_24 = new bd_5dca_slice1_4_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.hmss_0.inst.path_4.slice1_4");
        sc_inst_24->xsim_set_dbg_index(2274);
        xsim_sc_channel<0, bool > *p_24_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_24->aclk.bind(*p_24_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_24_aclk);
        xsim_sc_channel<0, bool > *p_24_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_24->aresetn.bind(*p_24_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_24_aresetn);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_24_s_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_24->s_axi_awaddr.bind(*p_24_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_awaddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_24_s_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_24->s_axi_awlen.bind(*p_24_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_24_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_24->s_axi_awsize.bind(*p_24_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_24_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_24->s_axi_awburst.bind(*p_24_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_awburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_24_s_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_24->s_axi_awlock.bind(*p_24_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_24_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_24->s_axi_awcache.bind(*p_24_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_24_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_24->s_axi_awprot.bind(*p_24_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_24_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_24->s_axi_awqos.bind(*p_24_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_awqos);
        xsim_sc_channel<0, bool > *p_24_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_24->s_axi_awvalid.bind(*p_24_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_24_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_24->s_axi_awready.bind(*p_24_s_axi_awready);
        p_24_s_axi_awready->set_sv_netview_offsetfromdp(8739504);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_24_s_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_24->s_axi_wdata.bind(*p_24_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_wdata);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_24_s_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_24->s_axi_wstrb.bind(*p_24_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_24_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_24->s_axi_wlast.bind(*p_24_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_24_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_24->s_axi_wvalid.bind(*p_24_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_24_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_24->s_axi_wready.bind(*p_24_s_axi_wready);
        p_24_s_axi_wready->set_sv_netview_offsetfromdp(8739784);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_24_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_24->s_axi_bresp.bind(*p_24_s_axi_bresp);
        p_24_s_axi_bresp->set_sv_netview_offsetfromdp(8739840);
        xsim_sc_channel<0, bool > *p_24_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_24->s_axi_bvalid.bind(*p_24_s_axi_bvalid);
        p_24_s_axi_bvalid->set_sv_netview_offsetfromdp(8739896);
        xsim_sc_channel<0, bool > *p_24_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_24->s_axi_bready.bind(*p_24_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_bready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_24_s_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_24->s_axi_araddr.bind(*p_24_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_araddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_24_s_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_24->s_axi_arlen.bind(*p_24_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_24_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_24->s_axi_arsize.bind(*p_24_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_24_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_24->s_axi_arburst.bind(*p_24_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_arburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_24_s_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_24->s_axi_arlock.bind(*p_24_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_24_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_24->s_axi_arcache.bind(*p_24_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_24_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_24->s_axi_arprot.bind(*p_24_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_24_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_24->s_axi_arqos.bind(*p_24_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_arqos);
        xsim_sc_channel<0, bool > *p_24_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_24->s_axi_arvalid.bind(*p_24_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_24_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_24->s_axi_arready.bind(*p_24_s_axi_arready);
        p_24_s_axi_arready->set_sv_netview_offsetfromdp(8740512);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_24_s_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_24->s_axi_rdata.bind(*p_24_s_axi_rdata);
        p_24_s_axi_rdata->set_sv_netview_offsetfromdp(8740568);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_24_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_24->s_axi_rresp.bind(*p_24_s_axi_rresp);
        p_24_s_axi_rresp->set_sv_netview_offsetfromdp(8740624);
        xsim_sc_channel<0, bool > *p_24_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_24->s_axi_rlast.bind(*p_24_s_axi_rlast);
        p_24_s_axi_rlast->set_sv_netview_offsetfromdp(8740680);
        xsim_sc_channel<0, bool > *p_24_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_24->s_axi_rvalid.bind(*p_24_s_axi_rvalid);
        p_24_s_axi_rvalid->set_sv_netview_offsetfromdp(8740736);
        xsim_sc_channel<0, bool > *p_24_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_24->s_axi_rready.bind(*p_24_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_rready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_24_m_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_24->m_axi_awaddr.bind(*p_24_m_axi_awaddr);
        p_24_m_axi_awaddr->set_sv_netview_offsetfromdp(8740848);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_24_m_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_24->m_axi_awlen.bind(*p_24_m_axi_awlen);
        p_24_m_axi_awlen->set_sv_netview_offsetfromdp(8740904);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_24_m_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_24->m_axi_awsize.bind(*p_24_m_axi_awsize);
        p_24_m_axi_awsize->set_sv_netview_offsetfromdp(8740960);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_24_m_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_24->m_axi_awburst.bind(*p_24_m_axi_awburst);
        p_24_m_axi_awburst->set_sv_netview_offsetfromdp(8741016);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_24_m_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_24->m_axi_awlock.bind(*p_24_m_axi_awlock);
        p_24_m_axi_awlock->set_sv_netview_offsetfromdp(8741072);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_24_m_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_24->m_axi_awcache.bind(*p_24_m_axi_awcache);
        p_24_m_axi_awcache->set_sv_netview_offsetfromdp(8741128);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_24_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_24->m_axi_awprot.bind(*p_24_m_axi_awprot);
        p_24_m_axi_awprot->set_sv_netview_offsetfromdp(8741184);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_24_m_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_24->m_axi_awqos.bind(*p_24_m_axi_awqos);
        p_24_m_axi_awqos->set_sv_netview_offsetfromdp(8741240);
        xsim_sc_channel<0, bool > *p_24_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_axi_awvalid.bind(*p_24_m_axi_awvalid);
        p_24_m_axi_awvalid->set_sv_netview_offsetfromdp(8741296);
        xsim_sc_channel<0, bool > *p_24_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_axi_awready.bind(*p_24_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_24_m_axi_awready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_24_m_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_24->m_axi_wdata.bind(*p_24_m_axi_wdata);
        p_24_m_axi_wdata->set_sv_netview_offsetfromdp(8741408);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_24_m_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_24->m_axi_wstrb.bind(*p_24_m_axi_wstrb);
        p_24_m_axi_wstrb->set_sv_netview_offsetfromdp(8741464);
        xsim_sc_channel<0, bool > *p_24_m_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_axi_wlast.bind(*p_24_m_axi_wlast);
        p_24_m_axi_wlast->set_sv_netview_offsetfromdp(8741520);
        xsim_sc_channel<0, bool > *p_24_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_axi_wvalid.bind(*p_24_m_axi_wvalid);
        p_24_m_axi_wvalid->set_sv_netview_offsetfromdp(8741576);
        xsim_sc_channel<0, bool > *p_24_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_axi_wready.bind(*p_24_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_24_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_24_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_24->m_axi_bresp.bind(*p_24_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_24_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_24_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_axi_bvalid.bind(*p_24_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_24_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_24_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_axi_bready.bind(*p_24_m_axi_bready);
        p_24_m_axi_bready->set_sv_netview_offsetfromdp(8741800);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_24_m_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_24->m_axi_araddr.bind(*p_24_m_axi_araddr);
        p_24_m_axi_araddr->set_sv_netview_offsetfromdp(8741856);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_24_m_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_24->m_axi_arlen.bind(*p_24_m_axi_arlen);
        p_24_m_axi_arlen->set_sv_netview_offsetfromdp(8741912);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_24_m_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_24->m_axi_arsize.bind(*p_24_m_axi_arsize);
        p_24_m_axi_arsize->set_sv_netview_offsetfromdp(8741968);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_24_m_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_24->m_axi_arburst.bind(*p_24_m_axi_arburst);
        p_24_m_axi_arburst->set_sv_netview_offsetfromdp(8742024);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_24_m_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_24->m_axi_arlock.bind(*p_24_m_axi_arlock);
        p_24_m_axi_arlock->set_sv_netview_offsetfromdp(8742080);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_24_m_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_24->m_axi_arcache.bind(*p_24_m_axi_arcache);
        p_24_m_axi_arcache->set_sv_netview_offsetfromdp(8742136);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_24_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_24->m_axi_arprot.bind(*p_24_m_axi_arprot);
        p_24_m_axi_arprot->set_sv_netview_offsetfromdp(8742192);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_24_m_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_24->m_axi_arqos.bind(*p_24_m_axi_arqos);
        p_24_m_axi_arqos->set_sv_netview_offsetfromdp(8742248);
        xsim_sc_channel<0, bool > *p_24_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_axi_arvalid.bind(*p_24_m_axi_arvalid);
        p_24_m_axi_arvalid->set_sv_netview_offsetfromdp(8742304);
        xsim_sc_channel<0, bool > *p_24_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_axi_arready.bind(*p_24_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_24_m_axi_arready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_24_m_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_24->m_axi_rdata.bind(*p_24_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_24_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_24_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_24->m_axi_rresp.bind(*p_24_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_24_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_24_m_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_axi_rlast.bind(*p_24_m_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_24_m_axi_rlast);
        xsim_sc_channel<0, bool > *p_24_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_axi_rvalid.bind(*p_24_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_24_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_24_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_axi_rready.bind(*p_24_m_axi_rready);
        p_24_m_axi_rready->set_sv_netview_offsetfromdp(8742640);
        sc_inst_25 = new bd_5dca_vip_S00_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.hmss_0.inst.vip_S00");
        sc_inst_25->xsim_set_dbg_index(925);
        xsim_sc_channel<0, bool > *p_25_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_25->aclk.bind(*p_25_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_25_aclk);
        xsim_sc_channel<0, bool > *p_25_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_25->aresetn.bind(*p_25_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_25_aresetn);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_25_s_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_25->s_axi_awaddr.bind(*p_25_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_awaddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_25_s_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_25->s_axi_awlen.bind(*p_25_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_awlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_25_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_25->s_axi_awburst.bind(*p_25_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_awburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_25_s_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_25->s_axi_awlock.bind(*p_25_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_25_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_25->s_axi_awcache.bind(*p_25_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_25_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_25->s_axi_awprot.bind(*p_25_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_25_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_25->s_axi_awqos.bind(*p_25_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_awqos);
        xsim_sc_channel<0, bool > *p_25_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_axi_awvalid.bind(*p_25_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_25_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_axi_awready.bind(*p_25_s_axi_awready);
        p_25_s_axi_awready->set_sv_netview_offsetfromdp(8743920);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_25_s_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_25->s_axi_wdata.bind(*p_25_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_wdata);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_25_s_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_25->s_axi_wstrb.bind(*p_25_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_25_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_axi_wlast.bind(*p_25_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_25_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_axi_wvalid.bind(*p_25_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_25_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_axi_wready.bind(*p_25_s_axi_wready);
        p_25_s_axi_wready->set_sv_netview_offsetfromdp(8744200);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_25_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_25->s_axi_bresp.bind(*p_25_s_axi_bresp);
        p_25_s_axi_bresp->set_sv_netview_offsetfromdp(8744256);
        xsim_sc_channel<0, bool > *p_25_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_axi_bvalid.bind(*p_25_s_axi_bvalid);
        p_25_s_axi_bvalid->set_sv_netview_offsetfromdp(8744312);
        xsim_sc_channel<0, bool > *p_25_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_axi_bready.bind(*p_25_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_bready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_25_s_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_25->s_axi_araddr.bind(*p_25_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_araddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_25_s_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_25->s_axi_arlen.bind(*p_25_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_arlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_25_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_25->s_axi_arburst.bind(*p_25_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_arburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_25_s_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_25->s_axi_arlock.bind(*p_25_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_25_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_25->s_axi_arcache.bind(*p_25_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_25_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_25->s_axi_arprot.bind(*p_25_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_25_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_25->s_axi_arqos.bind(*p_25_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_arqos);
        xsim_sc_channel<0, bool > *p_25_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_axi_arvalid.bind(*p_25_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_25_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_axi_arready.bind(*p_25_s_axi_arready);
        p_25_s_axi_arready->set_sv_netview_offsetfromdp(8744872);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_25_s_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_25->s_axi_rdata.bind(*p_25_s_axi_rdata);
        p_25_s_axi_rdata->set_sv_netview_offsetfromdp(8744928);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_25_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_25->s_axi_rresp.bind(*p_25_s_axi_rresp);
        p_25_s_axi_rresp->set_sv_netview_offsetfromdp(8744984);
        xsim_sc_channel<0, bool > *p_25_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_axi_rlast.bind(*p_25_s_axi_rlast);
        p_25_s_axi_rlast->set_sv_netview_offsetfromdp(8745040);
        xsim_sc_channel<0, bool > *p_25_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_axi_rvalid.bind(*p_25_s_axi_rvalid);
        p_25_s_axi_rvalid->set_sv_netview_offsetfromdp(8745096);
        xsim_sc_channel<0, bool > *p_25_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_axi_rready.bind(*p_25_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_rready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_25_m_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_25->m_axi_awaddr.bind(*p_25_m_axi_awaddr);
        p_25_m_axi_awaddr->set_sv_netview_offsetfromdp(8745208);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_25_m_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_25->m_axi_awlen.bind(*p_25_m_axi_awlen);
        p_25_m_axi_awlen->set_sv_netview_offsetfromdp(8745264);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_25_m_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_25->m_axi_awburst.bind(*p_25_m_axi_awburst);
        p_25_m_axi_awburst->set_sv_netview_offsetfromdp(8745320);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_25_m_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_25->m_axi_awlock.bind(*p_25_m_axi_awlock);
        p_25_m_axi_awlock->set_sv_netview_offsetfromdp(8745376);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_25_m_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_25->m_axi_awcache.bind(*p_25_m_axi_awcache);
        p_25_m_axi_awcache->set_sv_netview_offsetfromdp(8745432);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_25_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_25->m_axi_awprot.bind(*p_25_m_axi_awprot);
        p_25_m_axi_awprot->set_sv_netview_offsetfromdp(8745488);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_25_m_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_25->m_axi_awqos.bind(*p_25_m_axi_awqos);
        p_25_m_axi_awqos->set_sv_netview_offsetfromdp(8745544);
        xsim_sc_channel<0, bool > *p_25_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_25->m_axi_awvalid.bind(*p_25_m_axi_awvalid);
        p_25_m_axi_awvalid->set_sv_netview_offsetfromdp(8745600);
        xsim_sc_channel<0, bool > *p_25_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_25->m_axi_awready.bind(*p_25_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_25_m_axi_awready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_25_m_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_25->m_axi_wdata.bind(*p_25_m_axi_wdata);
        p_25_m_axi_wdata->set_sv_netview_offsetfromdp(8745712);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_25_m_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_25->m_axi_wstrb.bind(*p_25_m_axi_wstrb);
        p_25_m_axi_wstrb->set_sv_netview_offsetfromdp(8745768);
        xsim_sc_channel<0, bool > *p_25_m_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_25->m_axi_wlast.bind(*p_25_m_axi_wlast);
        p_25_m_axi_wlast->set_sv_netview_offsetfromdp(8745824);
        xsim_sc_channel<0, bool > *p_25_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_25->m_axi_wvalid.bind(*p_25_m_axi_wvalid);
        p_25_m_axi_wvalid->set_sv_netview_offsetfromdp(8745880);
        xsim_sc_channel<0, bool > *p_25_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_25->m_axi_wready.bind(*p_25_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_25_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_25_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_25->m_axi_bresp.bind(*p_25_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_25_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_25_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_25->m_axi_bvalid.bind(*p_25_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_25_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_25_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_25->m_axi_bready.bind(*p_25_m_axi_bready);
        p_25_m_axi_bready->set_sv_netview_offsetfromdp(8746104);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_25_m_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_25->m_axi_araddr.bind(*p_25_m_axi_araddr);
        p_25_m_axi_araddr->set_sv_netview_offsetfromdp(8746160);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_25_m_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_25->m_axi_arlen.bind(*p_25_m_axi_arlen);
        p_25_m_axi_arlen->set_sv_netview_offsetfromdp(8746216);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_25_m_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_25->m_axi_arburst.bind(*p_25_m_axi_arburst);
        p_25_m_axi_arburst->set_sv_netview_offsetfromdp(8746272);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_25_m_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_25->m_axi_arlock.bind(*p_25_m_axi_arlock);
        p_25_m_axi_arlock->set_sv_netview_offsetfromdp(8746328);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_25_m_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_25->m_axi_arcache.bind(*p_25_m_axi_arcache);
        p_25_m_axi_arcache->set_sv_netview_offsetfromdp(8746384);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_25_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_25->m_axi_arprot.bind(*p_25_m_axi_arprot);
        p_25_m_axi_arprot->set_sv_netview_offsetfromdp(8746440);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_25_m_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_25->m_axi_arqos.bind(*p_25_m_axi_arqos);
        p_25_m_axi_arqos->set_sv_netview_offsetfromdp(8746496);
        xsim_sc_channel<0, bool > *p_25_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_25->m_axi_arvalid.bind(*p_25_m_axi_arvalid);
        p_25_m_axi_arvalid->set_sv_netview_offsetfromdp(8746552);
        xsim_sc_channel<0, bool > *p_25_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_25->m_axi_arready.bind(*p_25_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_25_m_axi_arready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_25_m_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_25->m_axi_rdata.bind(*p_25_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_25_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_25_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_25->m_axi_rresp.bind(*p_25_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_25_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_25_m_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_25->m_axi_rlast.bind(*p_25_m_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_25_m_axi_rlast);
        xsim_sc_channel<0, bool > *p_25_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_25->m_axi_rvalid.bind(*p_25_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_25_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_25_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_25->m_axi_rready.bind(*p_25_m_axi_rready);
        p_25_m_axi_rready->set_sv_netview_offsetfromdp(8746888);
        sc_inst_26 = new bd_5dca_vip_S01_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.hmss_0.inst.vip_S01");
        sc_inst_26->xsim_set_dbg_index(926);
        xsim_sc_channel<0, bool > *p_26_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_26->aclk.bind(*p_26_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_26_aclk);
        xsim_sc_channel<0, bool > *p_26_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_26->aresetn.bind(*p_26_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_26_aresetn);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_26_s_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_26->s_axi_awaddr.bind(*p_26_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_awaddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_s_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->s_axi_awlen.bind(*p_26_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_awlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_26_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_26->s_axi_awburst.bind(*p_26_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_awburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_26_s_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_26->s_axi_awlock.bind(*p_26_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->s_axi_awcache.bind(*p_26_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_26_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_26->s_axi_awprot.bind(*p_26_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->s_axi_awqos.bind(*p_26_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_awqos);
        xsim_sc_channel<0, bool > *p_26_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->s_axi_awvalid.bind(*p_26_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_26_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_26->s_axi_awready.bind(*p_26_s_axi_awready);
        p_26_s_axi_awready->set_sv_netview_offsetfromdp(8747552);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_26_s_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_26->s_axi_wdata.bind(*p_26_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_wdata);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_26_s_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_26->s_axi_wstrb.bind(*p_26_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_26_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_26->s_axi_wlast.bind(*p_26_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_26_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->s_axi_wvalid.bind(*p_26_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_26_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_26->s_axi_wready.bind(*p_26_s_axi_wready);
        p_26_s_axi_wready->set_sv_netview_offsetfromdp(8747832);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_26_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_26->s_axi_bresp.bind(*p_26_s_axi_bresp);
        p_26_s_axi_bresp->set_sv_netview_offsetfromdp(8747888);
        xsim_sc_channel<0, bool > *p_26_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->s_axi_bvalid.bind(*p_26_s_axi_bvalid);
        p_26_s_axi_bvalid->set_sv_netview_offsetfromdp(8747944);
        xsim_sc_channel<0, bool > *p_26_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_26->s_axi_bready.bind(*p_26_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_bready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_26_s_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_26->s_axi_araddr.bind(*p_26_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_araddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_s_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->s_axi_arlen.bind(*p_26_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_arlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_26_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_26->s_axi_arburst.bind(*p_26_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_arburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_26_s_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_26->s_axi_arlock.bind(*p_26_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->s_axi_arcache.bind(*p_26_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_26_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_26->s_axi_arprot.bind(*p_26_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->s_axi_arqos.bind(*p_26_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_arqos);
        xsim_sc_channel<0, bool > *p_26_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->s_axi_arvalid.bind(*p_26_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_26_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_26->s_axi_arready.bind(*p_26_s_axi_arready);
        p_26_s_axi_arready->set_sv_netview_offsetfromdp(8748504);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_26_s_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_26->s_axi_rdata.bind(*p_26_s_axi_rdata);
        p_26_s_axi_rdata->set_sv_netview_offsetfromdp(8748560);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_26_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_26->s_axi_rresp.bind(*p_26_s_axi_rresp);
        p_26_s_axi_rresp->set_sv_netview_offsetfromdp(8748616);
        xsim_sc_channel<0, bool > *p_26_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_26->s_axi_rlast.bind(*p_26_s_axi_rlast);
        p_26_s_axi_rlast->set_sv_netview_offsetfromdp(8748672);
        xsim_sc_channel<0, bool > *p_26_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->s_axi_rvalid.bind(*p_26_s_axi_rvalid);
        p_26_s_axi_rvalid->set_sv_netview_offsetfromdp(8748728);
        xsim_sc_channel<0, bool > *p_26_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_26->s_axi_rready.bind(*p_26_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_rready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_26_m_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_26->m_axi_awaddr.bind(*p_26_m_axi_awaddr);
        p_26_m_axi_awaddr->set_sv_netview_offsetfromdp(8748840);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_m_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->m_axi_awlen.bind(*p_26_m_axi_awlen);
        p_26_m_axi_awlen->set_sv_netview_offsetfromdp(8748896);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_26_m_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_26->m_axi_awburst.bind(*p_26_m_axi_awburst);
        p_26_m_axi_awburst->set_sv_netview_offsetfromdp(8748952);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_26_m_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_26->m_axi_awlock.bind(*p_26_m_axi_awlock);
        p_26_m_axi_awlock->set_sv_netview_offsetfromdp(8749008);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_m_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->m_axi_awcache.bind(*p_26_m_axi_awcache);
        p_26_m_axi_awcache->set_sv_netview_offsetfromdp(8749064);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_26_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_26->m_axi_awprot.bind(*p_26_m_axi_awprot);
        p_26_m_axi_awprot->set_sv_netview_offsetfromdp(8749120);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_m_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->m_axi_awqos.bind(*p_26_m_axi_awqos);
        p_26_m_axi_awqos->set_sv_netview_offsetfromdp(8749176);
        xsim_sc_channel<0, bool > *p_26_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->m_axi_awvalid.bind(*p_26_m_axi_awvalid);
        p_26_m_axi_awvalid->set_sv_netview_offsetfromdp(8749232);
        xsim_sc_channel<0, bool > *p_26_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_26->m_axi_awready.bind(*p_26_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_26_m_axi_awready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_26_m_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_26->m_axi_wdata.bind(*p_26_m_axi_wdata);
        p_26_m_axi_wdata->set_sv_netview_offsetfromdp(8749344);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_26_m_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_26->m_axi_wstrb.bind(*p_26_m_axi_wstrb);
        p_26_m_axi_wstrb->set_sv_netview_offsetfromdp(8749400);
        xsim_sc_channel<0, bool > *p_26_m_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_26->m_axi_wlast.bind(*p_26_m_axi_wlast);
        p_26_m_axi_wlast->set_sv_netview_offsetfromdp(8749456);
        xsim_sc_channel<0, bool > *p_26_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->m_axi_wvalid.bind(*p_26_m_axi_wvalid);
        p_26_m_axi_wvalid->set_sv_netview_offsetfromdp(8749512);
        xsim_sc_channel<0, bool > *p_26_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_26->m_axi_wready.bind(*p_26_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_26_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_26_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_26->m_axi_bresp.bind(*p_26_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_26_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_26_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->m_axi_bvalid.bind(*p_26_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_26_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_26_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_26->m_axi_bready.bind(*p_26_m_axi_bready);
        p_26_m_axi_bready->set_sv_netview_offsetfromdp(8749736);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_26_m_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_26->m_axi_araddr.bind(*p_26_m_axi_araddr);
        p_26_m_axi_araddr->set_sv_netview_offsetfromdp(8749792);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_m_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->m_axi_arlen.bind(*p_26_m_axi_arlen);
        p_26_m_axi_arlen->set_sv_netview_offsetfromdp(8749848);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_26_m_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_26->m_axi_arburst.bind(*p_26_m_axi_arburst);
        p_26_m_axi_arburst->set_sv_netview_offsetfromdp(8749904);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_26_m_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_26->m_axi_arlock.bind(*p_26_m_axi_arlock);
        p_26_m_axi_arlock->set_sv_netview_offsetfromdp(8749960);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_m_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->m_axi_arcache.bind(*p_26_m_axi_arcache);
        p_26_m_axi_arcache->set_sv_netview_offsetfromdp(8750016);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_26_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_26->m_axi_arprot.bind(*p_26_m_axi_arprot);
        p_26_m_axi_arprot->set_sv_netview_offsetfromdp(8750072);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_m_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->m_axi_arqos.bind(*p_26_m_axi_arqos);
        p_26_m_axi_arqos->set_sv_netview_offsetfromdp(8750128);
        xsim_sc_channel<0, bool > *p_26_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->m_axi_arvalid.bind(*p_26_m_axi_arvalid);
        p_26_m_axi_arvalid->set_sv_netview_offsetfromdp(8750184);
        xsim_sc_channel<0, bool > *p_26_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_26->m_axi_arready.bind(*p_26_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_26_m_axi_arready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_26_m_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_26->m_axi_rdata.bind(*p_26_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_26_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_26_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_26->m_axi_rresp.bind(*p_26_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_26_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_26_m_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_26->m_axi_rlast.bind(*p_26_m_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_26_m_axi_rlast);
        xsim_sc_channel<0, bool > *p_26_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->m_axi_rvalid.bind(*p_26_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_26_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_26_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_26->m_axi_rready.bind(*p_26_m_axi_rready);
        p_26_m_axi_rready->set_sv_netview_offsetfromdp(8750520);
        sc_inst_27 = new bd_5dca_vip_S02_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.hmss_0.inst.vip_S02");
        sc_inst_27->xsim_set_dbg_index(927);
        xsim_sc_channel<0, bool > *p_27_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_27->aclk.bind(*p_27_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_27_aclk);
        xsim_sc_channel<0, bool > *p_27_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_27->aresetn.bind(*p_27_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_27_aresetn);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_27_s_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_27->s_axi_awaddr.bind(*p_27_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_awaddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_27_s_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_27->s_axi_awlen.bind(*p_27_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_awlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_27_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_27->s_axi_awburst.bind(*p_27_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_awburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_27_s_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_27->s_axi_awlock.bind(*p_27_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_27_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_27->s_axi_awcache.bind(*p_27_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_27_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_27->s_axi_awprot.bind(*p_27_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_27_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_27->s_axi_awqos.bind(*p_27_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_awqos);
        xsim_sc_channel<0, bool > *p_27_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_27->s_axi_awvalid.bind(*p_27_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_27_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_27->s_axi_awready.bind(*p_27_s_axi_awready);
        p_27_s_axi_awready->set_sv_netview_offsetfromdp(8751184);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_27_s_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_27->s_axi_wdata.bind(*p_27_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_wdata);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_27_s_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_27->s_axi_wstrb.bind(*p_27_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_27_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_27->s_axi_wlast.bind(*p_27_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_27_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_27->s_axi_wvalid.bind(*p_27_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_27_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_27->s_axi_wready.bind(*p_27_s_axi_wready);
        p_27_s_axi_wready->set_sv_netview_offsetfromdp(8751464);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_27_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_27->s_axi_bresp.bind(*p_27_s_axi_bresp);
        p_27_s_axi_bresp->set_sv_netview_offsetfromdp(8751520);
        xsim_sc_channel<0, bool > *p_27_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_27->s_axi_bvalid.bind(*p_27_s_axi_bvalid);
        p_27_s_axi_bvalid->set_sv_netview_offsetfromdp(8751576);
        xsim_sc_channel<0, bool > *p_27_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_27->s_axi_bready.bind(*p_27_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_bready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_27_s_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_27->s_axi_araddr.bind(*p_27_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_araddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_27_s_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_27->s_axi_arlen.bind(*p_27_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_arlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_27_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_27->s_axi_arburst.bind(*p_27_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_arburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_27_s_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_27->s_axi_arlock.bind(*p_27_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_27_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_27->s_axi_arcache.bind(*p_27_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_27_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_27->s_axi_arprot.bind(*p_27_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_27_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_27->s_axi_arqos.bind(*p_27_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_arqos);
        xsim_sc_channel<0, bool > *p_27_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_27->s_axi_arvalid.bind(*p_27_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_27_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_27->s_axi_arready.bind(*p_27_s_axi_arready);
        p_27_s_axi_arready->set_sv_netview_offsetfromdp(8752136);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_27_s_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_27->s_axi_rdata.bind(*p_27_s_axi_rdata);
        p_27_s_axi_rdata->set_sv_netview_offsetfromdp(8752192);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_27_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_27->s_axi_rresp.bind(*p_27_s_axi_rresp);
        p_27_s_axi_rresp->set_sv_netview_offsetfromdp(8752248);
        xsim_sc_channel<0, bool > *p_27_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_27->s_axi_rlast.bind(*p_27_s_axi_rlast);
        p_27_s_axi_rlast->set_sv_netview_offsetfromdp(8752304);
        xsim_sc_channel<0, bool > *p_27_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_27->s_axi_rvalid.bind(*p_27_s_axi_rvalid);
        p_27_s_axi_rvalid->set_sv_netview_offsetfromdp(8752360);
        xsim_sc_channel<0, bool > *p_27_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_27->s_axi_rready.bind(*p_27_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_rready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_27_m_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_27->m_axi_awaddr.bind(*p_27_m_axi_awaddr);
        p_27_m_axi_awaddr->set_sv_netview_offsetfromdp(8752472);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_27_m_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_27->m_axi_awlen.bind(*p_27_m_axi_awlen);
        p_27_m_axi_awlen->set_sv_netview_offsetfromdp(8752528);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_27_m_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_27->m_axi_awburst.bind(*p_27_m_axi_awburst);
        p_27_m_axi_awburst->set_sv_netview_offsetfromdp(8752584);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_27_m_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_27->m_axi_awlock.bind(*p_27_m_axi_awlock);
        p_27_m_axi_awlock->set_sv_netview_offsetfromdp(8752640);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_27_m_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_27->m_axi_awcache.bind(*p_27_m_axi_awcache);
        p_27_m_axi_awcache->set_sv_netview_offsetfromdp(8752696);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_27_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_27->m_axi_awprot.bind(*p_27_m_axi_awprot);
        p_27_m_axi_awprot->set_sv_netview_offsetfromdp(8752752);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_27_m_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_27->m_axi_awqos.bind(*p_27_m_axi_awqos);
        p_27_m_axi_awqos->set_sv_netview_offsetfromdp(8752808);
        xsim_sc_channel<0, bool > *p_27_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_27->m_axi_awvalid.bind(*p_27_m_axi_awvalid);
        p_27_m_axi_awvalid->set_sv_netview_offsetfromdp(8752864);
        xsim_sc_channel<0, bool > *p_27_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_27->m_axi_awready.bind(*p_27_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_27_m_axi_awready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_27_m_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_27->m_axi_wdata.bind(*p_27_m_axi_wdata);
        p_27_m_axi_wdata->set_sv_netview_offsetfromdp(8752976);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_27_m_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_27->m_axi_wstrb.bind(*p_27_m_axi_wstrb);
        p_27_m_axi_wstrb->set_sv_netview_offsetfromdp(8753032);
        xsim_sc_channel<0, bool > *p_27_m_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_27->m_axi_wlast.bind(*p_27_m_axi_wlast);
        p_27_m_axi_wlast->set_sv_netview_offsetfromdp(8753088);
        xsim_sc_channel<0, bool > *p_27_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_27->m_axi_wvalid.bind(*p_27_m_axi_wvalid);
        p_27_m_axi_wvalid->set_sv_netview_offsetfromdp(8753144);
        xsim_sc_channel<0, bool > *p_27_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_27->m_axi_wready.bind(*p_27_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_27_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_27_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_27->m_axi_bresp.bind(*p_27_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_27_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_27_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_27->m_axi_bvalid.bind(*p_27_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_27_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_27_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_27->m_axi_bready.bind(*p_27_m_axi_bready);
        p_27_m_axi_bready->set_sv_netview_offsetfromdp(8753368);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_27_m_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_27->m_axi_araddr.bind(*p_27_m_axi_araddr);
        p_27_m_axi_araddr->set_sv_netview_offsetfromdp(8753424);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_27_m_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_27->m_axi_arlen.bind(*p_27_m_axi_arlen);
        p_27_m_axi_arlen->set_sv_netview_offsetfromdp(8753480);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_27_m_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_27->m_axi_arburst.bind(*p_27_m_axi_arburst);
        p_27_m_axi_arburst->set_sv_netview_offsetfromdp(8753536);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_27_m_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_27->m_axi_arlock.bind(*p_27_m_axi_arlock);
        p_27_m_axi_arlock->set_sv_netview_offsetfromdp(8753592);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_27_m_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_27->m_axi_arcache.bind(*p_27_m_axi_arcache);
        p_27_m_axi_arcache->set_sv_netview_offsetfromdp(8753648);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_27_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_27->m_axi_arprot.bind(*p_27_m_axi_arprot);
        p_27_m_axi_arprot->set_sv_netview_offsetfromdp(8753704);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_27_m_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_27->m_axi_arqos.bind(*p_27_m_axi_arqos);
        p_27_m_axi_arqos->set_sv_netview_offsetfromdp(8753760);
        xsim_sc_channel<0, bool > *p_27_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_27->m_axi_arvalid.bind(*p_27_m_axi_arvalid);
        p_27_m_axi_arvalid->set_sv_netview_offsetfromdp(8753816);
        xsim_sc_channel<0, bool > *p_27_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_27->m_axi_arready.bind(*p_27_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_27_m_axi_arready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_27_m_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_27->m_axi_rdata.bind(*p_27_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_27_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_27_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_27->m_axi_rresp.bind(*p_27_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_27_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_27_m_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_27->m_axi_rlast.bind(*p_27_m_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_27_m_axi_rlast);
        xsim_sc_channel<0, bool > *p_27_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_27->m_axi_rvalid.bind(*p_27_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_27_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_27_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_27->m_axi_rready.bind(*p_27_m_axi_rready);
        p_27_m_axi_rready->set_sv_netview_offsetfromdp(8754152);
        sc_inst_28 = new pfm_dynamic_irq_const_tieoff_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.irq_const_tieoff");
        sc_inst_28->xsim_set_dbg_index(55);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_28_dout = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_28->dout.bind(*p_28_dout);
        p_28_dout->set_sv_netview_offsetfromdp(8923304);
        sc_inst_29 = new bd_d216_sci(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.bd_d216_sci_inst");
        sc_inst_29->xsim_set_dbg_index(1278);
        sc_inst_30 = new bd_d216_interconnect_DDR4_MEM00_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.interconnect.interconnect_ddr4_mem00");
        sc_inst_30->xsim_set_dbg_index(2537);
        xsim_sc_channel<0, bool > *p_30_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_30->aclk.bind(*p_30_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_30_aclk);
        xsim_sc_channel<0, bool > *p_30_aclk1 = new xsim_sc_channel<0, bool >();
        sc_inst_30->aclk1.bind(*p_30_aclk1);
        (*_glb_hdl_sc_channel_map).push_back(p_30_aclk1);
        xsim_sc_channel<0, bool > *p_30_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_30->aresetn.bind(*p_30_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_30_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_30_S00_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_30->S00_AXI_awid.bind(*p_30_S00_AXI_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_30_S00_AXI_awid);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_30_S00_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_30->S00_AXI_awaddr.bind(*p_30_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_30_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_30_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_30->S00_AXI_awlen.bind(*p_30_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_30_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_30_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_30->S00_AXI_awsize.bind(*p_30_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_30_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_30_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_30->S00_AXI_awburst.bind(*p_30_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_30_S00_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_30_S00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_30->S00_AXI_awlock.bind(*p_30_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_30_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_30_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_30->S00_AXI_awcache.bind(*p_30_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_30_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_30_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_30->S00_AXI_awprot.bind(*p_30_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_30_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_30_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_30->S00_AXI_awqos.bind(*p_30_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_30_S00_AXI_awqos);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_30_S00_AXI_awuser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_30->S00_AXI_awuser.bind(*p_30_S00_AXI_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_30_S00_AXI_awuser);
        xsim_sc_channel<0, bool > *p_30_S00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_30->S00_AXI_awvalid.bind(*p_30_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_30_S00_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_30_S00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_30->S00_AXI_awready.bind(*p_30_S00_AXI_awready);
        p_30_S00_AXI_awready->set_sv_netview_offsetfromdp(9817816);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_30_S00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_30->S00_AXI_wdata.bind(*p_30_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_30_S00_AXI_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_30_S00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_30->S00_AXI_wstrb.bind(*p_30_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_30_S00_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_30_S00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_30->S00_AXI_wlast.bind(*p_30_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_30_S00_AXI_wlast);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_30_S00_AXI_wuser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_30->S00_AXI_wuser.bind(*p_30_S00_AXI_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_30_S00_AXI_wuser);
        xsim_sc_channel<0, bool > *p_30_S00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_30->S00_AXI_wvalid.bind(*p_30_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_30_S00_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_30_S00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_30->S00_AXI_wready.bind(*p_30_S00_AXI_wready);
        p_30_S00_AXI_wready->set_sv_netview_offsetfromdp(9818152);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_30_S00_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_30->S00_AXI_bid.bind(*p_30_S00_AXI_bid);
        p_30_S00_AXI_bid->set_sv_netview_offsetfromdp(9818208);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_30_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_30->S00_AXI_bresp.bind(*p_30_S00_AXI_bresp);
        p_30_S00_AXI_bresp->set_sv_netview_offsetfromdp(9818264);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_30_S00_AXI_buser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_30->S00_AXI_buser.bind(*p_30_S00_AXI_buser);
        p_30_S00_AXI_buser->set_sv_netview_offsetfromdp(9818320);
        xsim_sc_channel<0, bool > *p_30_S00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_30->S00_AXI_bvalid.bind(*p_30_S00_AXI_bvalid);
        p_30_S00_AXI_bvalid->set_sv_netview_offsetfromdp(9818376);
        xsim_sc_channel<0, bool > *p_30_S00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_30->S00_AXI_bready.bind(*p_30_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_30_S00_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_30_S00_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_30->S00_AXI_arid.bind(*p_30_S00_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_30_S00_AXI_arid);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_30_S00_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_30->S00_AXI_araddr.bind(*p_30_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_30_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_30_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_30->S00_AXI_arlen.bind(*p_30_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_30_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_30_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_30->S00_AXI_arsize.bind(*p_30_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_30_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_30_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_30->S00_AXI_arburst.bind(*p_30_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_30_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_30_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_30->S00_AXI_arlock.bind(*p_30_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_30_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_30_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_30->S00_AXI_arcache.bind(*p_30_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_30_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_30_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_30->S00_AXI_arprot.bind(*p_30_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_30_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_30_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_30->S00_AXI_arqos.bind(*p_30_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_30_S00_AXI_arqos);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_30_S00_AXI_aruser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_30->S00_AXI_aruser.bind(*p_30_S00_AXI_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_30_S00_AXI_aruser);
        xsim_sc_channel<0, bool > *p_30_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_30->S00_AXI_arvalid.bind(*p_30_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_30_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_30_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_30->S00_AXI_arready.bind(*p_30_S00_AXI_arready);
        p_30_S00_AXI_arready->set_sv_netview_offsetfromdp(9819104);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_30_S00_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_30->S00_AXI_rid.bind(*p_30_S00_AXI_rid);
        p_30_S00_AXI_rid->set_sv_netview_offsetfromdp(9819160);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_30_S00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_30->S00_AXI_rdata.bind(*p_30_S00_AXI_rdata);
        p_30_S00_AXI_rdata->set_sv_netview_offsetfromdp(9819216);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_30_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_30->S00_AXI_rresp.bind(*p_30_S00_AXI_rresp);
        p_30_S00_AXI_rresp->set_sv_netview_offsetfromdp(9819272);
        xsim_sc_channel<0, bool > *p_30_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_30->S00_AXI_rlast.bind(*p_30_S00_AXI_rlast);
        p_30_S00_AXI_rlast->set_sv_netview_offsetfromdp(9819328);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_30_S00_AXI_ruser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_30->S00_AXI_ruser.bind(*p_30_S00_AXI_ruser);
        p_30_S00_AXI_ruser->set_sv_netview_offsetfromdp(9819384);
        xsim_sc_channel<0, bool > *p_30_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_30->S00_AXI_rvalid.bind(*p_30_S00_AXI_rvalid);
        p_30_S00_AXI_rvalid->set_sv_netview_offsetfromdp(9819440);
        xsim_sc_channel<0, bool > *p_30_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_30->S00_AXI_rready.bind(*p_30_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_30_S00_AXI_rready);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_30_M00_AXI_awaddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_30->M00_AXI_awaddr.bind(*p_30_M00_AXI_awaddr);
        p_30_M00_AXI_awaddr->set_sv_netview_offsetfromdp(9819552);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_30_M00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_30->M00_AXI_awlen.bind(*p_30_M00_AXI_awlen);
        p_30_M00_AXI_awlen->set_sv_netview_offsetfromdp(9819608);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_30_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_30->M00_AXI_awsize.bind(*p_30_M00_AXI_awsize);
        p_30_M00_AXI_awsize->set_sv_netview_offsetfromdp(9819664);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_30_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_30->M00_AXI_awburst.bind(*p_30_M00_AXI_awburst);
        p_30_M00_AXI_awburst->set_sv_netview_offsetfromdp(9819720);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_30_M00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_30->M00_AXI_awlock.bind(*p_30_M00_AXI_awlock);
        p_30_M00_AXI_awlock->set_sv_netview_offsetfromdp(9819776);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_30_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_30->M00_AXI_awcache.bind(*p_30_M00_AXI_awcache);
        p_30_M00_AXI_awcache->set_sv_netview_offsetfromdp(9819832);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_30_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_30->M00_AXI_awprot.bind(*p_30_M00_AXI_awprot);
        p_30_M00_AXI_awprot->set_sv_netview_offsetfromdp(9819888);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_30_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_30->M00_AXI_awqos.bind(*p_30_M00_AXI_awqos);
        p_30_M00_AXI_awqos->set_sv_netview_offsetfromdp(9819944);
        xsim_sc_channel<0, bool > *p_30_M00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_30->M00_AXI_awvalid.bind(*p_30_M00_AXI_awvalid);
        p_30_M00_AXI_awvalid->set_sv_netview_offsetfromdp(9820000);
        xsim_sc_channel<0, bool > *p_30_M00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_30->M00_AXI_awready.bind(*p_30_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_30_M00_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_30_M00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_30->M00_AXI_wdata.bind(*p_30_M00_AXI_wdata);
        p_30_M00_AXI_wdata->set_sv_netview_offsetfromdp(9820112);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_30_M00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_30->M00_AXI_wstrb.bind(*p_30_M00_AXI_wstrb);
        p_30_M00_AXI_wstrb->set_sv_netview_offsetfromdp(9820168);
        xsim_sc_channel<0, bool > *p_30_M00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_30->M00_AXI_wlast.bind(*p_30_M00_AXI_wlast);
        p_30_M00_AXI_wlast->set_sv_netview_offsetfromdp(9820224);
        xsim_sc_channel<0, bool > *p_30_M00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_30->M00_AXI_wvalid.bind(*p_30_M00_AXI_wvalid);
        p_30_M00_AXI_wvalid->set_sv_netview_offsetfromdp(9820280);
        xsim_sc_channel<0, bool > *p_30_M00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_30->M00_AXI_wready.bind(*p_30_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_30_M00_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_30_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_30->M00_AXI_bresp.bind(*p_30_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_30_M00_AXI_bresp);
        xsim_sc_channel<0, bool > *p_30_M00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_30->M00_AXI_bvalid.bind(*p_30_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_30_M00_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_30_M00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_30->M00_AXI_bready.bind(*p_30_M00_AXI_bready);
        p_30_M00_AXI_bready->set_sv_netview_offsetfromdp(9820504);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_30_M00_AXI_araddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_30->M00_AXI_araddr.bind(*p_30_M00_AXI_araddr);
        p_30_M00_AXI_araddr->set_sv_netview_offsetfromdp(9820560);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_30_M00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_30->M00_AXI_arlen.bind(*p_30_M00_AXI_arlen);
        p_30_M00_AXI_arlen->set_sv_netview_offsetfromdp(9820616);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_30_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_30->M00_AXI_arsize.bind(*p_30_M00_AXI_arsize);
        p_30_M00_AXI_arsize->set_sv_netview_offsetfromdp(9820672);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_30_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_30->M00_AXI_arburst.bind(*p_30_M00_AXI_arburst);
        p_30_M00_AXI_arburst->set_sv_netview_offsetfromdp(9820728);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_30_M00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_30->M00_AXI_arlock.bind(*p_30_M00_AXI_arlock);
        p_30_M00_AXI_arlock->set_sv_netview_offsetfromdp(9820784);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_30_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_30->M00_AXI_arcache.bind(*p_30_M00_AXI_arcache);
        p_30_M00_AXI_arcache->set_sv_netview_offsetfromdp(9820840);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_30_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_30->M00_AXI_arprot.bind(*p_30_M00_AXI_arprot);
        p_30_M00_AXI_arprot->set_sv_netview_offsetfromdp(9820896);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_30_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_30->M00_AXI_arqos.bind(*p_30_M00_AXI_arqos);
        p_30_M00_AXI_arqos->set_sv_netview_offsetfromdp(9820952);
        xsim_sc_channel<0, bool > *p_30_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_30->M00_AXI_arvalid.bind(*p_30_M00_AXI_arvalid);
        p_30_M00_AXI_arvalid->set_sv_netview_offsetfromdp(9821008);
        xsim_sc_channel<0, bool > *p_30_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_30->M00_AXI_arready.bind(*p_30_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_30_M00_AXI_arready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_30_M00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_30->M00_AXI_rdata.bind(*p_30_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_30_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_30_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_30->M00_AXI_rresp.bind(*p_30_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_30_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_30_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_30->M00_AXI_rlast.bind(*p_30_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_30_M00_AXI_rlast);
        xsim_sc_channel<0, bool > *p_30_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_30->M00_AXI_rvalid.bind(*p_30_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_30_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_30_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_30->M00_AXI_rready.bind(*p_30_M00_AXI_rready);
        p_30_M00_AXI_rready->set_sv_netview_offsetfromdp(9821344);
        sc_inst_31 = new bd_d216_interconnect_DDR4_MEM01_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.interconnect.interconnect_ddr4_mem01");
        sc_inst_31->xsim_set_dbg_index(2538);
        xsim_sc_channel<0, bool > *p_31_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_31->aclk.bind(*p_31_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_31_aclk);
        xsim_sc_channel<0, bool > *p_31_aclk1 = new xsim_sc_channel<0, bool >();
        sc_inst_31->aclk1.bind(*p_31_aclk1);
        (*_glb_hdl_sc_channel_map).push_back(p_31_aclk1);
        xsim_sc_channel<0, bool > *p_31_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_31->aresetn.bind(*p_31_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_31_aresetn);
        xsim_sc_channel<37, sc_dt::sc_bv<37> > *p_31_S00_AXI_awaddr = new xsim_sc_channel<37, sc_dt::sc_bv<37> >();
        sc_inst_31->S00_AXI_awaddr.bind(*p_31_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_31_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_31_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_31->S00_AXI_awlen.bind(*p_31_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_31_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_31_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_31->S00_AXI_awsize.bind(*p_31_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_31_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_31_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_31->S00_AXI_awburst.bind(*p_31_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_31_S00_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_31_S00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_31->S00_AXI_awlock.bind(*p_31_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_31_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_31_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_31->S00_AXI_awcache.bind(*p_31_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_31_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_31_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_31->S00_AXI_awprot.bind(*p_31_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_31_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_31_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_31->S00_AXI_awqos.bind(*p_31_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_31_S00_AXI_awqos);
        xsim_sc_channel<0, bool > *p_31_S00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_31->S00_AXI_awvalid.bind(*p_31_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_31_S00_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_31_S00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_31->S00_AXI_awready.bind(*p_31_S00_AXI_awready);
        p_31_S00_AXI_awready->set_sv_netview_offsetfromdp(9822120);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_31_S00_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_31->S00_AXI_wdata.bind(*p_31_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_31_S00_AXI_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_31_S00_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_31->S00_AXI_wstrb.bind(*p_31_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_31_S00_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_31_S00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_31->S00_AXI_wlast.bind(*p_31_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_31_S00_AXI_wlast);
        xsim_sc_channel<0, bool > *p_31_S00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_31->S00_AXI_wvalid.bind(*p_31_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_31_S00_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_31_S00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_31->S00_AXI_wready.bind(*p_31_S00_AXI_wready);
        p_31_S00_AXI_wready->set_sv_netview_offsetfromdp(9822400);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_31_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_31->S00_AXI_bresp.bind(*p_31_S00_AXI_bresp);
        p_31_S00_AXI_bresp->set_sv_netview_offsetfromdp(9822456);
        xsim_sc_channel<0, bool > *p_31_S00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_31->S00_AXI_bvalid.bind(*p_31_S00_AXI_bvalid);
        p_31_S00_AXI_bvalid->set_sv_netview_offsetfromdp(9822512);
        xsim_sc_channel<0, bool > *p_31_S00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_31->S00_AXI_bready.bind(*p_31_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_31_S00_AXI_bready);
        xsim_sc_channel<37, sc_dt::sc_bv<37> > *p_31_S00_AXI_araddr = new xsim_sc_channel<37, sc_dt::sc_bv<37> >();
        sc_inst_31->S00_AXI_araddr.bind(*p_31_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_31_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_31_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_31->S00_AXI_arlen.bind(*p_31_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_31_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_31_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_31->S00_AXI_arsize.bind(*p_31_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_31_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_31_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_31->S00_AXI_arburst.bind(*p_31_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_31_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_31_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_31->S00_AXI_arlock.bind(*p_31_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_31_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_31_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_31->S00_AXI_arcache.bind(*p_31_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_31_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_31_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_31->S00_AXI_arprot.bind(*p_31_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_31_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_31_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_31->S00_AXI_arqos.bind(*p_31_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_31_S00_AXI_arqos);
        xsim_sc_channel<0, bool > *p_31_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_31->S00_AXI_arvalid.bind(*p_31_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_31_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_31_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_31->S00_AXI_arready.bind(*p_31_S00_AXI_arready);
        p_31_S00_AXI_arready->set_sv_netview_offsetfromdp(9823128);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_31_S00_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_31->S00_AXI_rdata.bind(*p_31_S00_AXI_rdata);
        p_31_S00_AXI_rdata->set_sv_netview_offsetfromdp(9823184);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_31_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_31->S00_AXI_rresp.bind(*p_31_S00_AXI_rresp);
        p_31_S00_AXI_rresp->set_sv_netview_offsetfromdp(9823240);
        xsim_sc_channel<0, bool > *p_31_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_31->S00_AXI_rlast.bind(*p_31_S00_AXI_rlast);
        p_31_S00_AXI_rlast->set_sv_netview_offsetfromdp(9823296);
        xsim_sc_channel<0, bool > *p_31_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_31->S00_AXI_rvalid.bind(*p_31_S00_AXI_rvalid);
        p_31_S00_AXI_rvalid->set_sv_netview_offsetfromdp(9823352);
        xsim_sc_channel<0, bool > *p_31_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_31->S00_AXI_rready.bind(*p_31_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_31_S00_AXI_rready);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_31_M00_AXI_awaddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_31->M00_AXI_awaddr.bind(*p_31_M00_AXI_awaddr);
        p_31_M00_AXI_awaddr->set_sv_netview_offsetfromdp(9823464);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_31_M00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_31->M00_AXI_awlen.bind(*p_31_M00_AXI_awlen);
        p_31_M00_AXI_awlen->set_sv_netview_offsetfromdp(9823520);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_31_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_31->M00_AXI_awsize.bind(*p_31_M00_AXI_awsize);
        p_31_M00_AXI_awsize->set_sv_netview_offsetfromdp(9823576);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_31_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_31->M00_AXI_awburst.bind(*p_31_M00_AXI_awburst);
        p_31_M00_AXI_awburst->set_sv_netview_offsetfromdp(9823632);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_31_M00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_31->M00_AXI_awlock.bind(*p_31_M00_AXI_awlock);
        p_31_M00_AXI_awlock->set_sv_netview_offsetfromdp(9823688);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_31_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_31->M00_AXI_awcache.bind(*p_31_M00_AXI_awcache);
        p_31_M00_AXI_awcache->set_sv_netview_offsetfromdp(9823744);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_31_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_31->M00_AXI_awprot.bind(*p_31_M00_AXI_awprot);
        p_31_M00_AXI_awprot->set_sv_netview_offsetfromdp(9823800);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_31_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_31->M00_AXI_awqos.bind(*p_31_M00_AXI_awqos);
        p_31_M00_AXI_awqos->set_sv_netview_offsetfromdp(9823856);
        xsim_sc_channel<0, bool > *p_31_M00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_31->M00_AXI_awvalid.bind(*p_31_M00_AXI_awvalid);
        p_31_M00_AXI_awvalid->set_sv_netview_offsetfromdp(9823912);
        xsim_sc_channel<0, bool > *p_31_M00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_31->M00_AXI_awready.bind(*p_31_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_31_M00_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_31_M00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_31->M00_AXI_wdata.bind(*p_31_M00_AXI_wdata);
        p_31_M00_AXI_wdata->set_sv_netview_offsetfromdp(9824024);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_31_M00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_31->M00_AXI_wstrb.bind(*p_31_M00_AXI_wstrb);
        p_31_M00_AXI_wstrb->set_sv_netview_offsetfromdp(9824080);
        xsim_sc_channel<0, bool > *p_31_M00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_31->M00_AXI_wlast.bind(*p_31_M00_AXI_wlast);
        p_31_M00_AXI_wlast->set_sv_netview_offsetfromdp(9824136);
        xsim_sc_channel<0, bool > *p_31_M00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_31->M00_AXI_wvalid.bind(*p_31_M00_AXI_wvalid);
        p_31_M00_AXI_wvalid->set_sv_netview_offsetfromdp(9824192);
        xsim_sc_channel<0, bool > *p_31_M00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_31->M00_AXI_wready.bind(*p_31_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_31_M00_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_31_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_31->M00_AXI_bresp.bind(*p_31_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_31_M00_AXI_bresp);
        xsim_sc_channel<0, bool > *p_31_M00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_31->M00_AXI_bvalid.bind(*p_31_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_31_M00_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_31_M00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_31->M00_AXI_bready.bind(*p_31_M00_AXI_bready);
        p_31_M00_AXI_bready->set_sv_netview_offsetfromdp(9824416);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_31_M00_AXI_araddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_31->M00_AXI_araddr.bind(*p_31_M00_AXI_araddr);
        p_31_M00_AXI_araddr->set_sv_netview_offsetfromdp(9824472);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_31_M00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_31->M00_AXI_arlen.bind(*p_31_M00_AXI_arlen);
        p_31_M00_AXI_arlen->set_sv_netview_offsetfromdp(9824528);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_31_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_31->M00_AXI_arsize.bind(*p_31_M00_AXI_arsize);
        p_31_M00_AXI_arsize->set_sv_netview_offsetfromdp(9824584);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_31_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_31->M00_AXI_arburst.bind(*p_31_M00_AXI_arburst);
        p_31_M00_AXI_arburst->set_sv_netview_offsetfromdp(9824640);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_31_M00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_31->M00_AXI_arlock.bind(*p_31_M00_AXI_arlock);
        p_31_M00_AXI_arlock->set_sv_netview_offsetfromdp(9824696);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_31_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_31->M00_AXI_arcache.bind(*p_31_M00_AXI_arcache);
        p_31_M00_AXI_arcache->set_sv_netview_offsetfromdp(9824752);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_31_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_31->M00_AXI_arprot.bind(*p_31_M00_AXI_arprot);
        p_31_M00_AXI_arprot->set_sv_netview_offsetfromdp(9824808);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_31_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_31->M00_AXI_arqos.bind(*p_31_M00_AXI_arqos);
        p_31_M00_AXI_arqos->set_sv_netview_offsetfromdp(9824864);
        xsim_sc_channel<0, bool > *p_31_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_31->M00_AXI_arvalid.bind(*p_31_M00_AXI_arvalid);
        p_31_M00_AXI_arvalid->set_sv_netview_offsetfromdp(9824920);
        xsim_sc_channel<0, bool > *p_31_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_31->M00_AXI_arready.bind(*p_31_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_31_M00_AXI_arready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_31_M00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_31->M00_AXI_rdata.bind(*p_31_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_31_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_31_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_31->M00_AXI_rresp.bind(*p_31_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_31_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_31_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_31->M00_AXI_rlast.bind(*p_31_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_31_M00_AXI_rlast);
        xsim_sc_channel<0, bool > *p_31_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_31->M00_AXI_rvalid.bind(*p_31_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_31_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_31_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_31->M00_AXI_rready.bind(*p_31_M00_AXI_rready);
        p_31_M00_AXI_rready->set_sv_netview_offsetfromdp(9825256);
        sc_inst_32 = new bd_d216_interconnect_M00_AXI_MEM00_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.interconnect.interconnect_m00_axi_mem00");
        sc_inst_32->xsim_set_dbg_index(2539);
        xsim_sc_channel<0, bool > *p_32_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_32->aclk.bind(*p_32_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_32_aclk);
        xsim_sc_channel<0, bool > *p_32_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_32->aresetn.bind(*p_32_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_32_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_32_S00_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_32->S00_AXI_awid.bind(*p_32_S00_AXI_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_32_S00_AXI_awid);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_32_S00_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_32->S00_AXI_awaddr.bind(*p_32_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_32_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_32_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_32->S00_AXI_awlen.bind(*p_32_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_32_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_32_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_32->S00_AXI_awsize.bind(*p_32_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_32_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_32_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_32->S00_AXI_awburst.bind(*p_32_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_32_S00_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_32_S00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_32->S00_AXI_awlock.bind(*p_32_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_32_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_32_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_32->S00_AXI_awcache.bind(*p_32_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_32_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_32_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_32->S00_AXI_awprot.bind(*p_32_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_32_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_32_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_32->S00_AXI_awqos.bind(*p_32_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_32_S00_AXI_awqos);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_32_S00_AXI_awuser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_32->S00_AXI_awuser.bind(*p_32_S00_AXI_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_32_S00_AXI_awuser);
        xsim_sc_channel<0, bool > *p_32_S00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_32->S00_AXI_awvalid.bind(*p_32_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_32_S00_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_32_S00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_32->S00_AXI_awready.bind(*p_32_S00_AXI_awready);
        p_32_S00_AXI_awready->set_sv_netview_offsetfromdp(9826088);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_32_S00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_32->S00_AXI_wdata.bind(*p_32_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_32_S00_AXI_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_32_S00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_32->S00_AXI_wstrb.bind(*p_32_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_32_S00_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_32_S00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_32->S00_AXI_wlast.bind(*p_32_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_32_S00_AXI_wlast);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_32_S00_AXI_wuser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_32->S00_AXI_wuser.bind(*p_32_S00_AXI_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_32_S00_AXI_wuser);
        xsim_sc_channel<0, bool > *p_32_S00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_32->S00_AXI_wvalid.bind(*p_32_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_32_S00_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_32_S00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_32->S00_AXI_wready.bind(*p_32_S00_AXI_wready);
        p_32_S00_AXI_wready->set_sv_netview_offsetfromdp(9826424);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_32_S00_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_32->S00_AXI_bid.bind(*p_32_S00_AXI_bid);
        p_32_S00_AXI_bid->set_sv_netview_offsetfromdp(9826480);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_32_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_32->S00_AXI_bresp.bind(*p_32_S00_AXI_bresp);
        p_32_S00_AXI_bresp->set_sv_netview_offsetfromdp(9826536);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_32_S00_AXI_buser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_32->S00_AXI_buser.bind(*p_32_S00_AXI_buser);
        p_32_S00_AXI_buser->set_sv_netview_offsetfromdp(9826592);
        xsim_sc_channel<0, bool > *p_32_S00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_32->S00_AXI_bvalid.bind(*p_32_S00_AXI_bvalid);
        p_32_S00_AXI_bvalid->set_sv_netview_offsetfromdp(9826648);
        xsim_sc_channel<0, bool > *p_32_S00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_32->S00_AXI_bready.bind(*p_32_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_32_S00_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_32_S00_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_32->S00_AXI_arid.bind(*p_32_S00_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_32_S00_AXI_arid);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_32_S00_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_32->S00_AXI_araddr.bind(*p_32_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_32_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_32_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_32->S00_AXI_arlen.bind(*p_32_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_32_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_32_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_32->S00_AXI_arsize.bind(*p_32_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_32_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_32_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_32->S00_AXI_arburst.bind(*p_32_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_32_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_32_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_32->S00_AXI_arlock.bind(*p_32_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_32_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_32_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_32->S00_AXI_arcache.bind(*p_32_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_32_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_32_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_32->S00_AXI_arprot.bind(*p_32_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_32_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_32_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_32->S00_AXI_arqos.bind(*p_32_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_32_S00_AXI_arqos);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_32_S00_AXI_aruser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_32->S00_AXI_aruser.bind(*p_32_S00_AXI_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_32_S00_AXI_aruser);
        xsim_sc_channel<0, bool > *p_32_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_32->S00_AXI_arvalid.bind(*p_32_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_32_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_32_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_32->S00_AXI_arready.bind(*p_32_S00_AXI_arready);
        p_32_S00_AXI_arready->set_sv_netview_offsetfromdp(9827376);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_32_S00_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_32->S00_AXI_rid.bind(*p_32_S00_AXI_rid);
        p_32_S00_AXI_rid->set_sv_netview_offsetfromdp(9827432);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_32_S00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_32->S00_AXI_rdata.bind(*p_32_S00_AXI_rdata);
        p_32_S00_AXI_rdata->set_sv_netview_offsetfromdp(9827488);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_32_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_32->S00_AXI_rresp.bind(*p_32_S00_AXI_rresp);
        p_32_S00_AXI_rresp->set_sv_netview_offsetfromdp(9827544);
        xsim_sc_channel<0, bool > *p_32_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_32->S00_AXI_rlast.bind(*p_32_S00_AXI_rlast);
        p_32_S00_AXI_rlast->set_sv_netview_offsetfromdp(9827600);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_32_S00_AXI_ruser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_32->S00_AXI_ruser.bind(*p_32_S00_AXI_ruser);
        p_32_S00_AXI_ruser->set_sv_netview_offsetfromdp(9827656);
        xsim_sc_channel<0, bool > *p_32_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_32->S00_AXI_rvalid.bind(*p_32_S00_AXI_rvalid);
        p_32_S00_AXI_rvalid->set_sv_netview_offsetfromdp(9827712);
        xsim_sc_channel<0, bool > *p_32_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_32->S00_AXI_rready.bind(*p_32_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_32_S00_AXI_rready);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_32_M00_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_32->M00_AXI_awaddr.bind(*p_32_M00_AXI_awaddr);
        p_32_M00_AXI_awaddr->set_sv_netview_offsetfromdp(9827824);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_32_M00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_32->M00_AXI_awlen.bind(*p_32_M00_AXI_awlen);
        p_32_M00_AXI_awlen->set_sv_netview_offsetfromdp(9827880);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_32_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_32->M00_AXI_awsize.bind(*p_32_M00_AXI_awsize);
        p_32_M00_AXI_awsize->set_sv_netview_offsetfromdp(9827936);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_32_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_32->M00_AXI_awburst.bind(*p_32_M00_AXI_awburst);
        p_32_M00_AXI_awburst->set_sv_netview_offsetfromdp(9827992);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_32_M00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_32->M00_AXI_awlock.bind(*p_32_M00_AXI_awlock);
        p_32_M00_AXI_awlock->set_sv_netview_offsetfromdp(9828048);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_32_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_32->M00_AXI_awcache.bind(*p_32_M00_AXI_awcache);
        p_32_M00_AXI_awcache->set_sv_netview_offsetfromdp(9828104);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_32_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_32->M00_AXI_awprot.bind(*p_32_M00_AXI_awprot);
        p_32_M00_AXI_awprot->set_sv_netview_offsetfromdp(9828160);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_32_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_32->M00_AXI_awqos.bind(*p_32_M00_AXI_awqos);
        p_32_M00_AXI_awqos->set_sv_netview_offsetfromdp(9828216);
        xsim_sc_channel<0, bool > *p_32_M00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_32->M00_AXI_awvalid.bind(*p_32_M00_AXI_awvalid);
        p_32_M00_AXI_awvalid->set_sv_netview_offsetfromdp(9828272);
        xsim_sc_channel<0, bool > *p_32_M00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_32->M00_AXI_awready.bind(*p_32_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_32_M00_AXI_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_32_M00_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_32->M00_AXI_wdata.bind(*p_32_M00_AXI_wdata);
        p_32_M00_AXI_wdata->set_sv_netview_offsetfromdp(9828384);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_32_M00_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_32->M00_AXI_wstrb.bind(*p_32_M00_AXI_wstrb);
        p_32_M00_AXI_wstrb->set_sv_netview_offsetfromdp(9828440);
        xsim_sc_channel<0, bool > *p_32_M00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_32->M00_AXI_wlast.bind(*p_32_M00_AXI_wlast);
        p_32_M00_AXI_wlast->set_sv_netview_offsetfromdp(9828496);
        xsim_sc_channel<0, bool > *p_32_M00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_32->M00_AXI_wvalid.bind(*p_32_M00_AXI_wvalid);
        p_32_M00_AXI_wvalid->set_sv_netview_offsetfromdp(9828552);
        xsim_sc_channel<0, bool > *p_32_M00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_32->M00_AXI_wready.bind(*p_32_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_32_M00_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_32_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_32->M00_AXI_bresp.bind(*p_32_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_32_M00_AXI_bresp);
        xsim_sc_channel<0, bool > *p_32_M00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_32->M00_AXI_bvalid.bind(*p_32_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_32_M00_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_32_M00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_32->M00_AXI_bready.bind(*p_32_M00_AXI_bready);
        p_32_M00_AXI_bready->set_sv_netview_offsetfromdp(9828776);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_32_M00_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_32->M00_AXI_araddr.bind(*p_32_M00_AXI_araddr);
        p_32_M00_AXI_araddr->set_sv_netview_offsetfromdp(9828832);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_32_M00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_32->M00_AXI_arlen.bind(*p_32_M00_AXI_arlen);
        p_32_M00_AXI_arlen->set_sv_netview_offsetfromdp(9828888);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_32_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_32->M00_AXI_arsize.bind(*p_32_M00_AXI_arsize);
        p_32_M00_AXI_arsize->set_sv_netview_offsetfromdp(9828944);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_32_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_32->M00_AXI_arburst.bind(*p_32_M00_AXI_arburst);
        p_32_M00_AXI_arburst->set_sv_netview_offsetfromdp(9829000);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_32_M00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_32->M00_AXI_arlock.bind(*p_32_M00_AXI_arlock);
        p_32_M00_AXI_arlock->set_sv_netview_offsetfromdp(9829056);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_32_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_32->M00_AXI_arcache.bind(*p_32_M00_AXI_arcache);
        p_32_M00_AXI_arcache->set_sv_netview_offsetfromdp(9829112);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_32_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_32->M00_AXI_arprot.bind(*p_32_M00_AXI_arprot);
        p_32_M00_AXI_arprot->set_sv_netview_offsetfromdp(9829168);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_32_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_32->M00_AXI_arqos.bind(*p_32_M00_AXI_arqos);
        p_32_M00_AXI_arqos->set_sv_netview_offsetfromdp(9829224);
        xsim_sc_channel<0, bool > *p_32_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_32->M00_AXI_arvalid.bind(*p_32_M00_AXI_arvalid);
        p_32_M00_AXI_arvalid->set_sv_netview_offsetfromdp(9829280);
        xsim_sc_channel<0, bool > *p_32_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_32->M00_AXI_arready.bind(*p_32_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_32_M00_AXI_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_32_M00_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_32->M00_AXI_rdata.bind(*p_32_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_32_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_32_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_32->M00_AXI_rresp.bind(*p_32_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_32_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_32_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_32->M00_AXI_rlast.bind(*p_32_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_32_M00_AXI_rlast);
        xsim_sc_channel<0, bool > *p_32_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_32->M00_AXI_rvalid.bind(*p_32_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_32_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_32_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_32->M00_AXI_rready.bind(*p_32_M00_AXI_rready);
        p_32_M00_AXI_rready->set_sv_netview_offsetfromdp(9829616);
        sc_inst_33 = new bd_d216_interconnect_PLRAM_MEM00_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.interconnect.interconnect_plram_mem00");
        sc_inst_33->xsim_set_dbg_index(2540);
        xsim_sc_channel<0, bool > *p_33_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_33->aclk.bind(*p_33_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_33_aclk);
        xsim_sc_channel<0, bool > *p_33_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_33->aresetn.bind(*p_33_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_33_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_33_S00_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_33->S00_AXI_awid.bind(*p_33_S00_AXI_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_awid);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_33_S00_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_33->S00_AXI_awaddr.bind(*p_33_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_33_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_33->S00_AXI_awlen.bind(*p_33_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_33_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_33->S00_AXI_awsize.bind(*p_33_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_33_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_33->S00_AXI_awburst.bind(*p_33_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_33_S00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_33->S00_AXI_awlock.bind(*p_33_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_33_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_33->S00_AXI_awcache.bind(*p_33_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_33_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_33->S00_AXI_awprot.bind(*p_33_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_33_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_33->S00_AXI_awqos.bind(*p_33_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_awqos);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_33_S00_AXI_awuser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_33->S00_AXI_awuser.bind(*p_33_S00_AXI_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_awuser);
        xsim_sc_channel<0, bool > *p_33_S00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_33->S00_AXI_awvalid.bind(*p_33_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_33_S00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_33->S00_AXI_awready.bind(*p_33_S00_AXI_awready);
        p_33_S00_AXI_awready->set_sv_netview_offsetfromdp(9830448);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_33_S00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_33->S00_AXI_wdata.bind(*p_33_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_33_S00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_33->S00_AXI_wstrb.bind(*p_33_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_33_S00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_33->S00_AXI_wlast.bind(*p_33_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_wlast);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_33_S00_AXI_wuser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_33->S00_AXI_wuser.bind(*p_33_S00_AXI_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_wuser);
        xsim_sc_channel<0, bool > *p_33_S00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_33->S00_AXI_wvalid.bind(*p_33_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_33_S00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_33->S00_AXI_wready.bind(*p_33_S00_AXI_wready);
        p_33_S00_AXI_wready->set_sv_netview_offsetfromdp(9830784);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_33_S00_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_33->S00_AXI_bid.bind(*p_33_S00_AXI_bid);
        p_33_S00_AXI_bid->set_sv_netview_offsetfromdp(9830840);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_33_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_33->S00_AXI_bresp.bind(*p_33_S00_AXI_bresp);
        p_33_S00_AXI_bresp->set_sv_netview_offsetfromdp(9830896);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_33_S00_AXI_buser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_33->S00_AXI_buser.bind(*p_33_S00_AXI_buser);
        p_33_S00_AXI_buser->set_sv_netview_offsetfromdp(9830952);
        xsim_sc_channel<0, bool > *p_33_S00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_33->S00_AXI_bvalid.bind(*p_33_S00_AXI_bvalid);
        p_33_S00_AXI_bvalid->set_sv_netview_offsetfromdp(9831008);
        xsim_sc_channel<0, bool > *p_33_S00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_33->S00_AXI_bready.bind(*p_33_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_33_S00_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_33->S00_AXI_arid.bind(*p_33_S00_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_arid);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_33_S00_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_33->S00_AXI_araddr.bind(*p_33_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_33_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_33->S00_AXI_arlen.bind(*p_33_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_33_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_33->S00_AXI_arsize.bind(*p_33_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_33_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_33->S00_AXI_arburst.bind(*p_33_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_33_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_33->S00_AXI_arlock.bind(*p_33_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_33_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_33->S00_AXI_arcache.bind(*p_33_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_33_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_33->S00_AXI_arprot.bind(*p_33_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_33_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_33->S00_AXI_arqos.bind(*p_33_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_arqos);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_33_S00_AXI_aruser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_33->S00_AXI_aruser.bind(*p_33_S00_AXI_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_aruser);
        xsim_sc_channel<0, bool > *p_33_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_33->S00_AXI_arvalid.bind(*p_33_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_33_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_33->S00_AXI_arready.bind(*p_33_S00_AXI_arready);
        p_33_S00_AXI_arready->set_sv_netview_offsetfromdp(9831736);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_33_S00_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_33->S00_AXI_rid.bind(*p_33_S00_AXI_rid);
        p_33_S00_AXI_rid->set_sv_netview_offsetfromdp(9831792);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_33_S00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_33->S00_AXI_rdata.bind(*p_33_S00_AXI_rdata);
        p_33_S00_AXI_rdata->set_sv_netview_offsetfromdp(9831848);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_33_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_33->S00_AXI_rresp.bind(*p_33_S00_AXI_rresp);
        p_33_S00_AXI_rresp->set_sv_netview_offsetfromdp(9831904);
        xsim_sc_channel<0, bool > *p_33_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_33->S00_AXI_rlast.bind(*p_33_S00_AXI_rlast);
        p_33_S00_AXI_rlast->set_sv_netview_offsetfromdp(9831960);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_33_S00_AXI_ruser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_33->S00_AXI_ruser.bind(*p_33_S00_AXI_ruser);
        p_33_S00_AXI_ruser->set_sv_netview_offsetfromdp(9832016);
        xsim_sc_channel<0, bool > *p_33_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_33->S00_AXI_rvalid.bind(*p_33_S00_AXI_rvalid);
        p_33_S00_AXI_rvalid->set_sv_netview_offsetfromdp(9832072);
        xsim_sc_channel<0, bool > *p_33_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_33->S00_AXI_rready.bind(*p_33_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_33_S00_AXI_rready);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_33_M00_AXI_awaddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_33->M00_AXI_awaddr.bind(*p_33_M00_AXI_awaddr);
        p_33_M00_AXI_awaddr->set_sv_netview_offsetfromdp(9832184);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_33_M00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_33->M00_AXI_awlen.bind(*p_33_M00_AXI_awlen);
        p_33_M00_AXI_awlen->set_sv_netview_offsetfromdp(9832240);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_33_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_33->M00_AXI_awsize.bind(*p_33_M00_AXI_awsize);
        p_33_M00_AXI_awsize->set_sv_netview_offsetfromdp(9832296);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_33_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_33->M00_AXI_awburst.bind(*p_33_M00_AXI_awburst);
        p_33_M00_AXI_awburst->set_sv_netview_offsetfromdp(9832352);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_33_M00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_33->M00_AXI_awlock.bind(*p_33_M00_AXI_awlock);
        p_33_M00_AXI_awlock->set_sv_netview_offsetfromdp(9832408);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_33_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_33->M00_AXI_awcache.bind(*p_33_M00_AXI_awcache);
        p_33_M00_AXI_awcache->set_sv_netview_offsetfromdp(9832464);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_33_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_33->M00_AXI_awprot.bind(*p_33_M00_AXI_awprot);
        p_33_M00_AXI_awprot->set_sv_netview_offsetfromdp(9832520);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_33_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_33->M00_AXI_awqos.bind(*p_33_M00_AXI_awqos);
        p_33_M00_AXI_awqos->set_sv_netview_offsetfromdp(9832576);
        xsim_sc_channel<0, bool > *p_33_M00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_33->M00_AXI_awvalid.bind(*p_33_M00_AXI_awvalid);
        p_33_M00_AXI_awvalid->set_sv_netview_offsetfromdp(9832632);
        xsim_sc_channel<0, bool > *p_33_M00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_33->M00_AXI_awready.bind(*p_33_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_33_M00_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_33_M00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_33->M00_AXI_wdata.bind(*p_33_M00_AXI_wdata);
        p_33_M00_AXI_wdata->set_sv_netview_offsetfromdp(9832744);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_33_M00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_33->M00_AXI_wstrb.bind(*p_33_M00_AXI_wstrb);
        p_33_M00_AXI_wstrb->set_sv_netview_offsetfromdp(9832800);
        xsim_sc_channel<0, bool > *p_33_M00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_33->M00_AXI_wlast.bind(*p_33_M00_AXI_wlast);
        p_33_M00_AXI_wlast->set_sv_netview_offsetfromdp(9832856);
        xsim_sc_channel<0, bool > *p_33_M00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_33->M00_AXI_wvalid.bind(*p_33_M00_AXI_wvalid);
        p_33_M00_AXI_wvalid->set_sv_netview_offsetfromdp(9832912);
        xsim_sc_channel<0, bool > *p_33_M00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_33->M00_AXI_wready.bind(*p_33_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_33_M00_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_33_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_33->M00_AXI_bresp.bind(*p_33_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_33_M00_AXI_bresp);
        xsim_sc_channel<0, bool > *p_33_M00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_33->M00_AXI_bvalid.bind(*p_33_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_33_M00_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_33_M00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_33->M00_AXI_bready.bind(*p_33_M00_AXI_bready);
        p_33_M00_AXI_bready->set_sv_netview_offsetfromdp(9833136);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_33_M00_AXI_araddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_33->M00_AXI_araddr.bind(*p_33_M00_AXI_araddr);
        p_33_M00_AXI_araddr->set_sv_netview_offsetfromdp(9833192);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_33_M00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_33->M00_AXI_arlen.bind(*p_33_M00_AXI_arlen);
        p_33_M00_AXI_arlen->set_sv_netview_offsetfromdp(9833248);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_33_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_33->M00_AXI_arsize.bind(*p_33_M00_AXI_arsize);
        p_33_M00_AXI_arsize->set_sv_netview_offsetfromdp(9833304);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_33_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_33->M00_AXI_arburst.bind(*p_33_M00_AXI_arburst);
        p_33_M00_AXI_arburst->set_sv_netview_offsetfromdp(9833360);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_33_M00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_33->M00_AXI_arlock.bind(*p_33_M00_AXI_arlock);
        p_33_M00_AXI_arlock->set_sv_netview_offsetfromdp(9833416);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_33_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_33->M00_AXI_arcache.bind(*p_33_M00_AXI_arcache);
        p_33_M00_AXI_arcache->set_sv_netview_offsetfromdp(9833472);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_33_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_33->M00_AXI_arprot.bind(*p_33_M00_AXI_arprot);
        p_33_M00_AXI_arprot->set_sv_netview_offsetfromdp(9833528);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_33_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_33->M00_AXI_arqos.bind(*p_33_M00_AXI_arqos);
        p_33_M00_AXI_arqos->set_sv_netview_offsetfromdp(9833584);
        xsim_sc_channel<0, bool > *p_33_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_33->M00_AXI_arvalid.bind(*p_33_M00_AXI_arvalid);
        p_33_M00_AXI_arvalid->set_sv_netview_offsetfromdp(9833640);
        xsim_sc_channel<0, bool > *p_33_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_33->M00_AXI_arready.bind(*p_33_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_33_M00_AXI_arready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_33_M00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_33->M00_AXI_rdata.bind(*p_33_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_33_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_33_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_33->M00_AXI_rresp.bind(*p_33_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_33_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_33_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_33->M00_AXI_rlast.bind(*p_33_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_33_M00_AXI_rlast);
        xsim_sc_channel<0, bool > *p_33_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_33->M00_AXI_rvalid.bind(*p_33_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_33_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_33_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_33->M00_AXI_rready.bind(*p_33_M00_AXI_rready);
        p_33_M00_AXI_rready->set_sv_netview_offsetfromdp(9833976);
        sc_inst_34 = new bd_d216_interconnect_PLRAM_MEM01_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.interconnect.interconnect_plram_mem01");
        sc_inst_34->xsim_set_dbg_index(2541);
        xsim_sc_channel<0, bool > *p_34_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_34->aclk.bind(*p_34_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_34_aclk);
        xsim_sc_channel<0, bool > *p_34_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_34->aresetn.bind(*p_34_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_34_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_34_S00_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_34->S00_AXI_awid.bind(*p_34_S00_AXI_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_awid);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_34_S00_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_34->S00_AXI_awaddr.bind(*p_34_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_34_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_34->S00_AXI_awlen.bind(*p_34_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_34_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_34->S00_AXI_awsize.bind(*p_34_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_34_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_34->S00_AXI_awburst.bind(*p_34_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_34_S00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_34->S00_AXI_awlock.bind(*p_34_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_34_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_34->S00_AXI_awcache.bind(*p_34_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_34_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_34->S00_AXI_awprot.bind(*p_34_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_34_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_34->S00_AXI_awqos.bind(*p_34_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_awqos);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_34_S00_AXI_awuser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_34->S00_AXI_awuser.bind(*p_34_S00_AXI_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_awuser);
        xsim_sc_channel<0, bool > *p_34_S00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_34->S00_AXI_awvalid.bind(*p_34_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_34_S00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_34->S00_AXI_awready.bind(*p_34_S00_AXI_awready);
        p_34_S00_AXI_awready->set_sv_netview_offsetfromdp(9834808);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_34_S00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_34->S00_AXI_wdata.bind(*p_34_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_34_S00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_34->S00_AXI_wstrb.bind(*p_34_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_34_S00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_34->S00_AXI_wlast.bind(*p_34_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_wlast);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_34_S00_AXI_wuser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_34->S00_AXI_wuser.bind(*p_34_S00_AXI_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_wuser);
        xsim_sc_channel<0, bool > *p_34_S00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_34->S00_AXI_wvalid.bind(*p_34_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_34_S00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_34->S00_AXI_wready.bind(*p_34_S00_AXI_wready);
        p_34_S00_AXI_wready->set_sv_netview_offsetfromdp(9835144);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_34_S00_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_34->S00_AXI_bid.bind(*p_34_S00_AXI_bid);
        p_34_S00_AXI_bid->set_sv_netview_offsetfromdp(9835200);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_34_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_34->S00_AXI_bresp.bind(*p_34_S00_AXI_bresp);
        p_34_S00_AXI_bresp->set_sv_netview_offsetfromdp(9835256);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_34_S00_AXI_buser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_34->S00_AXI_buser.bind(*p_34_S00_AXI_buser);
        p_34_S00_AXI_buser->set_sv_netview_offsetfromdp(9835312);
        xsim_sc_channel<0, bool > *p_34_S00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_34->S00_AXI_bvalid.bind(*p_34_S00_AXI_bvalid);
        p_34_S00_AXI_bvalid->set_sv_netview_offsetfromdp(9835368);
        xsim_sc_channel<0, bool > *p_34_S00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_34->S00_AXI_bready.bind(*p_34_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_34_S00_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_34->S00_AXI_arid.bind(*p_34_S00_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_arid);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_34_S00_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_34->S00_AXI_araddr.bind(*p_34_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_34_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_34->S00_AXI_arlen.bind(*p_34_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_34_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_34->S00_AXI_arsize.bind(*p_34_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_34_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_34->S00_AXI_arburst.bind(*p_34_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_34_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_34->S00_AXI_arlock.bind(*p_34_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_34_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_34->S00_AXI_arcache.bind(*p_34_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_34_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_34->S00_AXI_arprot.bind(*p_34_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_34_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_34->S00_AXI_arqos.bind(*p_34_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_arqos);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_34_S00_AXI_aruser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_34->S00_AXI_aruser.bind(*p_34_S00_AXI_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_aruser);
        xsim_sc_channel<0, bool > *p_34_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_34->S00_AXI_arvalid.bind(*p_34_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_34_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_34->S00_AXI_arready.bind(*p_34_S00_AXI_arready);
        p_34_S00_AXI_arready->set_sv_netview_offsetfromdp(9836096);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_34_S00_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_34->S00_AXI_rid.bind(*p_34_S00_AXI_rid);
        p_34_S00_AXI_rid->set_sv_netview_offsetfromdp(9836152);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_34_S00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_34->S00_AXI_rdata.bind(*p_34_S00_AXI_rdata);
        p_34_S00_AXI_rdata->set_sv_netview_offsetfromdp(9836208);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_34_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_34->S00_AXI_rresp.bind(*p_34_S00_AXI_rresp);
        p_34_S00_AXI_rresp->set_sv_netview_offsetfromdp(9836264);
        xsim_sc_channel<0, bool > *p_34_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_34->S00_AXI_rlast.bind(*p_34_S00_AXI_rlast);
        p_34_S00_AXI_rlast->set_sv_netview_offsetfromdp(9836320);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_34_S00_AXI_ruser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_34->S00_AXI_ruser.bind(*p_34_S00_AXI_ruser);
        p_34_S00_AXI_ruser->set_sv_netview_offsetfromdp(9836376);
        xsim_sc_channel<0, bool > *p_34_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_34->S00_AXI_rvalid.bind(*p_34_S00_AXI_rvalid);
        p_34_S00_AXI_rvalid->set_sv_netview_offsetfromdp(9836432);
        xsim_sc_channel<0, bool > *p_34_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_34->S00_AXI_rready.bind(*p_34_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_34_S00_AXI_rready);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_34_M00_AXI_awaddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_34->M00_AXI_awaddr.bind(*p_34_M00_AXI_awaddr);
        p_34_M00_AXI_awaddr->set_sv_netview_offsetfromdp(9836544);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_34_M00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_34->M00_AXI_awlen.bind(*p_34_M00_AXI_awlen);
        p_34_M00_AXI_awlen->set_sv_netview_offsetfromdp(9836600);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_34_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_34->M00_AXI_awsize.bind(*p_34_M00_AXI_awsize);
        p_34_M00_AXI_awsize->set_sv_netview_offsetfromdp(9836656);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_34_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_34->M00_AXI_awburst.bind(*p_34_M00_AXI_awburst);
        p_34_M00_AXI_awburst->set_sv_netview_offsetfromdp(9836712);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_34_M00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_34->M00_AXI_awlock.bind(*p_34_M00_AXI_awlock);
        p_34_M00_AXI_awlock->set_sv_netview_offsetfromdp(9836768);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_34_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_34->M00_AXI_awcache.bind(*p_34_M00_AXI_awcache);
        p_34_M00_AXI_awcache->set_sv_netview_offsetfromdp(9836824);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_34_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_34->M00_AXI_awprot.bind(*p_34_M00_AXI_awprot);
        p_34_M00_AXI_awprot->set_sv_netview_offsetfromdp(9836880);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_34_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_34->M00_AXI_awqos.bind(*p_34_M00_AXI_awqos);
        p_34_M00_AXI_awqos->set_sv_netview_offsetfromdp(9836936);
        xsim_sc_channel<0, bool > *p_34_M00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_34->M00_AXI_awvalid.bind(*p_34_M00_AXI_awvalid);
        p_34_M00_AXI_awvalid->set_sv_netview_offsetfromdp(9836992);
        xsim_sc_channel<0, bool > *p_34_M00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_34->M00_AXI_awready.bind(*p_34_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_34_M00_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_34_M00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_34->M00_AXI_wdata.bind(*p_34_M00_AXI_wdata);
        p_34_M00_AXI_wdata->set_sv_netview_offsetfromdp(9837104);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_34_M00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_34->M00_AXI_wstrb.bind(*p_34_M00_AXI_wstrb);
        p_34_M00_AXI_wstrb->set_sv_netview_offsetfromdp(9837160);
        xsim_sc_channel<0, bool > *p_34_M00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_34->M00_AXI_wlast.bind(*p_34_M00_AXI_wlast);
        p_34_M00_AXI_wlast->set_sv_netview_offsetfromdp(9837216);
        xsim_sc_channel<0, bool > *p_34_M00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_34->M00_AXI_wvalid.bind(*p_34_M00_AXI_wvalid);
        p_34_M00_AXI_wvalid->set_sv_netview_offsetfromdp(9837272);
        xsim_sc_channel<0, bool > *p_34_M00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_34->M00_AXI_wready.bind(*p_34_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_34_M00_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_34_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_34->M00_AXI_bresp.bind(*p_34_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_34_M00_AXI_bresp);
        xsim_sc_channel<0, bool > *p_34_M00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_34->M00_AXI_bvalid.bind(*p_34_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_34_M00_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_34_M00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_34->M00_AXI_bready.bind(*p_34_M00_AXI_bready);
        p_34_M00_AXI_bready->set_sv_netview_offsetfromdp(9837496);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_34_M00_AXI_araddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_34->M00_AXI_araddr.bind(*p_34_M00_AXI_araddr);
        p_34_M00_AXI_araddr->set_sv_netview_offsetfromdp(9837552);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_34_M00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_34->M00_AXI_arlen.bind(*p_34_M00_AXI_arlen);
        p_34_M00_AXI_arlen->set_sv_netview_offsetfromdp(9837608);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_34_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_34->M00_AXI_arsize.bind(*p_34_M00_AXI_arsize);
        p_34_M00_AXI_arsize->set_sv_netview_offsetfromdp(9837664);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_34_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_34->M00_AXI_arburst.bind(*p_34_M00_AXI_arburst);
        p_34_M00_AXI_arburst->set_sv_netview_offsetfromdp(9837720);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_34_M00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_34->M00_AXI_arlock.bind(*p_34_M00_AXI_arlock);
        p_34_M00_AXI_arlock->set_sv_netview_offsetfromdp(9837776);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_34_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_34->M00_AXI_arcache.bind(*p_34_M00_AXI_arcache);
        p_34_M00_AXI_arcache->set_sv_netview_offsetfromdp(9837832);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_34_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_34->M00_AXI_arprot.bind(*p_34_M00_AXI_arprot);
        p_34_M00_AXI_arprot->set_sv_netview_offsetfromdp(9837888);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_34_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_34->M00_AXI_arqos.bind(*p_34_M00_AXI_arqos);
        p_34_M00_AXI_arqos->set_sv_netview_offsetfromdp(9837944);
        xsim_sc_channel<0, bool > *p_34_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_34->M00_AXI_arvalid.bind(*p_34_M00_AXI_arvalid);
        p_34_M00_AXI_arvalid->set_sv_netview_offsetfromdp(9838000);
        xsim_sc_channel<0, bool > *p_34_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_34->M00_AXI_arready.bind(*p_34_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_34_M00_AXI_arready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_34_M00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_34->M00_AXI_rdata.bind(*p_34_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_34_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_34_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_34->M00_AXI_rresp.bind(*p_34_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_34_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_34_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_34->M00_AXI_rlast.bind(*p_34_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_34_M00_AXI_rlast);
        xsim_sc_channel<0, bool > *p_34_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_34->M00_AXI_rvalid.bind(*p_34_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_34_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_34_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_34->M00_AXI_rready.bind(*p_34_M00_AXI_rready);
        p_34_M00_AXI_rready->set_sv_netview_offsetfromdp(9838336);
        sc_inst_35 = new bd_d216_interconnect_PLRAM_MEM02_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.interconnect.interconnect_plram_mem02");
        sc_inst_35->xsim_set_dbg_index(2542);
        xsim_sc_channel<0, bool > *p_35_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_35->aclk.bind(*p_35_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_35_aclk);
        xsim_sc_channel<0, bool > *p_35_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_35->aresetn.bind(*p_35_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_35_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_35_S00_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_35->S00_AXI_awid.bind(*p_35_S00_AXI_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_awid);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_35_S00_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_35->S00_AXI_awaddr.bind(*p_35_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_35_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_35->S00_AXI_awlen.bind(*p_35_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_35_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_35->S00_AXI_awsize.bind(*p_35_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_35_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_35->S00_AXI_awburst.bind(*p_35_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_35_S00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_35->S00_AXI_awlock.bind(*p_35_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->S00_AXI_awcache.bind(*p_35_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_35_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_35->S00_AXI_awprot.bind(*p_35_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->S00_AXI_awqos.bind(*p_35_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_awqos);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_35_S00_AXI_awuser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_35->S00_AXI_awuser.bind(*p_35_S00_AXI_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_awuser);
        xsim_sc_channel<0, bool > *p_35_S00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_35->S00_AXI_awvalid.bind(*p_35_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_35_S00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_35->S00_AXI_awready.bind(*p_35_S00_AXI_awready);
        p_35_S00_AXI_awready->set_sv_netview_offsetfromdp(9839168);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_35_S00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_35->S00_AXI_wdata.bind(*p_35_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_35_S00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_35->S00_AXI_wstrb.bind(*p_35_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_35_S00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_35->S00_AXI_wlast.bind(*p_35_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_wlast);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_35_S00_AXI_wuser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_35->S00_AXI_wuser.bind(*p_35_S00_AXI_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_wuser);
        xsim_sc_channel<0, bool > *p_35_S00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_35->S00_AXI_wvalid.bind(*p_35_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_35_S00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_35->S00_AXI_wready.bind(*p_35_S00_AXI_wready);
        p_35_S00_AXI_wready->set_sv_netview_offsetfromdp(9839504);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_35_S00_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_35->S00_AXI_bid.bind(*p_35_S00_AXI_bid);
        p_35_S00_AXI_bid->set_sv_netview_offsetfromdp(9839560);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_35_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_35->S00_AXI_bresp.bind(*p_35_S00_AXI_bresp);
        p_35_S00_AXI_bresp->set_sv_netview_offsetfromdp(9839616);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_35_S00_AXI_buser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_35->S00_AXI_buser.bind(*p_35_S00_AXI_buser);
        p_35_S00_AXI_buser->set_sv_netview_offsetfromdp(9839672);
        xsim_sc_channel<0, bool > *p_35_S00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_35->S00_AXI_bvalid.bind(*p_35_S00_AXI_bvalid);
        p_35_S00_AXI_bvalid->set_sv_netview_offsetfromdp(9839728);
        xsim_sc_channel<0, bool > *p_35_S00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_35->S00_AXI_bready.bind(*p_35_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_35_S00_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_35->S00_AXI_arid.bind(*p_35_S00_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_arid);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_35_S00_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_35->S00_AXI_araddr.bind(*p_35_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_35_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_35->S00_AXI_arlen.bind(*p_35_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_35_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_35->S00_AXI_arsize.bind(*p_35_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_35_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_35->S00_AXI_arburst.bind(*p_35_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_35_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_35->S00_AXI_arlock.bind(*p_35_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->S00_AXI_arcache.bind(*p_35_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_35_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_35->S00_AXI_arprot.bind(*p_35_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->S00_AXI_arqos.bind(*p_35_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_arqos);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_35_S00_AXI_aruser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_35->S00_AXI_aruser.bind(*p_35_S00_AXI_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_aruser);
        xsim_sc_channel<0, bool > *p_35_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_35->S00_AXI_arvalid.bind(*p_35_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_35_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_35->S00_AXI_arready.bind(*p_35_S00_AXI_arready);
        p_35_S00_AXI_arready->set_sv_netview_offsetfromdp(9840456);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_35_S00_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_35->S00_AXI_rid.bind(*p_35_S00_AXI_rid);
        p_35_S00_AXI_rid->set_sv_netview_offsetfromdp(9840512);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_35_S00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_35->S00_AXI_rdata.bind(*p_35_S00_AXI_rdata);
        p_35_S00_AXI_rdata->set_sv_netview_offsetfromdp(9840568);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_35_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_35->S00_AXI_rresp.bind(*p_35_S00_AXI_rresp);
        p_35_S00_AXI_rresp->set_sv_netview_offsetfromdp(9840624);
        xsim_sc_channel<0, bool > *p_35_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_35->S00_AXI_rlast.bind(*p_35_S00_AXI_rlast);
        p_35_S00_AXI_rlast->set_sv_netview_offsetfromdp(9840680);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_35_S00_AXI_ruser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_35->S00_AXI_ruser.bind(*p_35_S00_AXI_ruser);
        p_35_S00_AXI_ruser->set_sv_netview_offsetfromdp(9840736);
        xsim_sc_channel<0, bool > *p_35_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_35->S00_AXI_rvalid.bind(*p_35_S00_AXI_rvalid);
        p_35_S00_AXI_rvalid->set_sv_netview_offsetfromdp(9840792);
        xsim_sc_channel<0, bool > *p_35_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_35->S00_AXI_rready.bind(*p_35_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_35_S00_AXI_rready);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_35_M00_AXI_awaddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_35->M00_AXI_awaddr.bind(*p_35_M00_AXI_awaddr);
        p_35_M00_AXI_awaddr->set_sv_netview_offsetfromdp(9840904);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_35_M00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_35->M00_AXI_awlen.bind(*p_35_M00_AXI_awlen);
        p_35_M00_AXI_awlen->set_sv_netview_offsetfromdp(9840960);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_35_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_35->M00_AXI_awsize.bind(*p_35_M00_AXI_awsize);
        p_35_M00_AXI_awsize->set_sv_netview_offsetfromdp(9841016);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_35_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_35->M00_AXI_awburst.bind(*p_35_M00_AXI_awburst);
        p_35_M00_AXI_awburst->set_sv_netview_offsetfromdp(9841072);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_35_M00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_35->M00_AXI_awlock.bind(*p_35_M00_AXI_awlock);
        p_35_M00_AXI_awlock->set_sv_netview_offsetfromdp(9841128);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->M00_AXI_awcache.bind(*p_35_M00_AXI_awcache);
        p_35_M00_AXI_awcache->set_sv_netview_offsetfromdp(9841184);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_35_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_35->M00_AXI_awprot.bind(*p_35_M00_AXI_awprot);
        p_35_M00_AXI_awprot->set_sv_netview_offsetfromdp(9841240);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->M00_AXI_awqos.bind(*p_35_M00_AXI_awqos);
        p_35_M00_AXI_awqos->set_sv_netview_offsetfromdp(9841296);
        xsim_sc_channel<0, bool > *p_35_M00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_35->M00_AXI_awvalid.bind(*p_35_M00_AXI_awvalid);
        p_35_M00_AXI_awvalid->set_sv_netview_offsetfromdp(9841352);
        xsim_sc_channel<0, bool > *p_35_M00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_35->M00_AXI_awready.bind(*p_35_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M00_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_35_M00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_35->M00_AXI_wdata.bind(*p_35_M00_AXI_wdata);
        p_35_M00_AXI_wdata->set_sv_netview_offsetfromdp(9841464);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_35_M00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_35->M00_AXI_wstrb.bind(*p_35_M00_AXI_wstrb);
        p_35_M00_AXI_wstrb->set_sv_netview_offsetfromdp(9841520);
        xsim_sc_channel<0, bool > *p_35_M00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_35->M00_AXI_wlast.bind(*p_35_M00_AXI_wlast);
        p_35_M00_AXI_wlast->set_sv_netview_offsetfromdp(9841576);
        xsim_sc_channel<0, bool > *p_35_M00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_35->M00_AXI_wvalid.bind(*p_35_M00_AXI_wvalid);
        p_35_M00_AXI_wvalid->set_sv_netview_offsetfromdp(9841632);
        xsim_sc_channel<0, bool > *p_35_M00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_35->M00_AXI_wready.bind(*p_35_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M00_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_35_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_35->M00_AXI_bresp.bind(*p_35_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M00_AXI_bresp);
        xsim_sc_channel<0, bool > *p_35_M00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_35->M00_AXI_bvalid.bind(*p_35_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M00_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_35_M00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_35->M00_AXI_bready.bind(*p_35_M00_AXI_bready);
        p_35_M00_AXI_bready->set_sv_netview_offsetfromdp(9841856);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_35_M00_AXI_araddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_35->M00_AXI_araddr.bind(*p_35_M00_AXI_araddr);
        p_35_M00_AXI_araddr->set_sv_netview_offsetfromdp(9841912);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_35_M00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_35->M00_AXI_arlen.bind(*p_35_M00_AXI_arlen);
        p_35_M00_AXI_arlen->set_sv_netview_offsetfromdp(9841968);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_35_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_35->M00_AXI_arsize.bind(*p_35_M00_AXI_arsize);
        p_35_M00_AXI_arsize->set_sv_netview_offsetfromdp(9842024);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_35_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_35->M00_AXI_arburst.bind(*p_35_M00_AXI_arburst);
        p_35_M00_AXI_arburst->set_sv_netview_offsetfromdp(9842080);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_35_M00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_35->M00_AXI_arlock.bind(*p_35_M00_AXI_arlock);
        p_35_M00_AXI_arlock->set_sv_netview_offsetfromdp(9842136);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->M00_AXI_arcache.bind(*p_35_M00_AXI_arcache);
        p_35_M00_AXI_arcache->set_sv_netview_offsetfromdp(9842192);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_35_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_35->M00_AXI_arprot.bind(*p_35_M00_AXI_arprot);
        p_35_M00_AXI_arprot->set_sv_netview_offsetfromdp(9842248);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->M00_AXI_arqos.bind(*p_35_M00_AXI_arqos);
        p_35_M00_AXI_arqos->set_sv_netview_offsetfromdp(9842304);
        xsim_sc_channel<0, bool > *p_35_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_35->M00_AXI_arvalid.bind(*p_35_M00_AXI_arvalid);
        p_35_M00_AXI_arvalid->set_sv_netview_offsetfromdp(9842360);
        xsim_sc_channel<0, bool > *p_35_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_35->M00_AXI_arready.bind(*p_35_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M00_AXI_arready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_35_M00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_35->M00_AXI_rdata.bind(*p_35_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_35_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_35->M00_AXI_rresp.bind(*p_35_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_35_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_35->M00_AXI_rlast.bind(*p_35_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M00_AXI_rlast);
        xsim_sc_channel<0, bool > *p_35_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_35->M00_AXI_rvalid.bind(*p_35_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_35_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_35_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_35->M00_AXI_rready.bind(*p_35_M00_AXI_rready);
        p_35_M00_AXI_rready->set_sv_netview_offsetfromdp(9842696);
        sc_inst_36 = new bd_d216_interconnect_PLRAM_MEM03_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.interconnect.interconnect_plram_mem03");
        sc_inst_36->xsim_set_dbg_index(2543);
        xsim_sc_channel<0, bool > *p_36_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_36->aclk.bind(*p_36_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_36_aclk);
        xsim_sc_channel<0, bool > *p_36_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_36->aresetn.bind(*p_36_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_36_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_36_S00_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_36->S00_AXI_awid.bind(*p_36_S00_AXI_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_awid);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_36_S00_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_36->S00_AXI_awaddr.bind(*p_36_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_36_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_36->S00_AXI_awlen.bind(*p_36_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_36_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_36->S00_AXI_awsize.bind(*p_36_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_36_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_36->S00_AXI_awburst.bind(*p_36_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_36_S00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_36->S00_AXI_awlock.bind(*p_36_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_36_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_36->S00_AXI_awcache.bind(*p_36_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_36_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_36->S00_AXI_awprot.bind(*p_36_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_36_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_36->S00_AXI_awqos.bind(*p_36_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_awqos);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_36_S00_AXI_awuser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_36->S00_AXI_awuser.bind(*p_36_S00_AXI_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_awuser);
        xsim_sc_channel<0, bool > *p_36_S00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_36->S00_AXI_awvalid.bind(*p_36_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_36_S00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_36->S00_AXI_awready.bind(*p_36_S00_AXI_awready);
        p_36_S00_AXI_awready->set_sv_netview_offsetfromdp(9843528);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_36_S00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_36->S00_AXI_wdata.bind(*p_36_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_36_S00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_36->S00_AXI_wstrb.bind(*p_36_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_36_S00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_36->S00_AXI_wlast.bind(*p_36_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_wlast);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_36_S00_AXI_wuser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_36->S00_AXI_wuser.bind(*p_36_S00_AXI_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_wuser);
        xsim_sc_channel<0, bool > *p_36_S00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_36->S00_AXI_wvalid.bind(*p_36_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_36_S00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_36->S00_AXI_wready.bind(*p_36_S00_AXI_wready);
        p_36_S00_AXI_wready->set_sv_netview_offsetfromdp(9843864);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_36_S00_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_36->S00_AXI_bid.bind(*p_36_S00_AXI_bid);
        p_36_S00_AXI_bid->set_sv_netview_offsetfromdp(9843920);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_36_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_36->S00_AXI_bresp.bind(*p_36_S00_AXI_bresp);
        p_36_S00_AXI_bresp->set_sv_netview_offsetfromdp(9843976);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_36_S00_AXI_buser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_36->S00_AXI_buser.bind(*p_36_S00_AXI_buser);
        p_36_S00_AXI_buser->set_sv_netview_offsetfromdp(9844032);
        xsim_sc_channel<0, bool > *p_36_S00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_36->S00_AXI_bvalid.bind(*p_36_S00_AXI_bvalid);
        p_36_S00_AXI_bvalid->set_sv_netview_offsetfromdp(9844088);
        xsim_sc_channel<0, bool > *p_36_S00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_36->S00_AXI_bready.bind(*p_36_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_36_S00_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_36->S00_AXI_arid.bind(*p_36_S00_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_arid);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_36_S00_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_36->S00_AXI_araddr.bind(*p_36_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_36_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_36->S00_AXI_arlen.bind(*p_36_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_36_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_36->S00_AXI_arsize.bind(*p_36_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_36_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_36->S00_AXI_arburst.bind(*p_36_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_36_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_36->S00_AXI_arlock.bind(*p_36_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_36_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_36->S00_AXI_arcache.bind(*p_36_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_36_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_36->S00_AXI_arprot.bind(*p_36_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_36_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_36->S00_AXI_arqos.bind(*p_36_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_arqos);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_36_S00_AXI_aruser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_36->S00_AXI_aruser.bind(*p_36_S00_AXI_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_aruser);
        xsim_sc_channel<0, bool > *p_36_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_36->S00_AXI_arvalid.bind(*p_36_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_36_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_36->S00_AXI_arready.bind(*p_36_S00_AXI_arready);
        p_36_S00_AXI_arready->set_sv_netview_offsetfromdp(9844816);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_36_S00_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_36->S00_AXI_rid.bind(*p_36_S00_AXI_rid);
        p_36_S00_AXI_rid->set_sv_netview_offsetfromdp(9844872);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_36_S00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_36->S00_AXI_rdata.bind(*p_36_S00_AXI_rdata);
        p_36_S00_AXI_rdata->set_sv_netview_offsetfromdp(9844928);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_36_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_36->S00_AXI_rresp.bind(*p_36_S00_AXI_rresp);
        p_36_S00_AXI_rresp->set_sv_netview_offsetfromdp(9844984);
        xsim_sc_channel<0, bool > *p_36_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_36->S00_AXI_rlast.bind(*p_36_S00_AXI_rlast);
        p_36_S00_AXI_rlast->set_sv_netview_offsetfromdp(9845040);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_36_S00_AXI_ruser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_36->S00_AXI_ruser.bind(*p_36_S00_AXI_ruser);
        p_36_S00_AXI_ruser->set_sv_netview_offsetfromdp(9845096);
        xsim_sc_channel<0, bool > *p_36_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_36->S00_AXI_rvalid.bind(*p_36_S00_AXI_rvalid);
        p_36_S00_AXI_rvalid->set_sv_netview_offsetfromdp(9845152);
        xsim_sc_channel<0, bool > *p_36_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_36->S00_AXI_rready.bind(*p_36_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_36_S00_AXI_rready);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_36_M00_AXI_awaddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_36->M00_AXI_awaddr.bind(*p_36_M00_AXI_awaddr);
        p_36_M00_AXI_awaddr->set_sv_netview_offsetfromdp(9845264);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_36_M00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_36->M00_AXI_awlen.bind(*p_36_M00_AXI_awlen);
        p_36_M00_AXI_awlen->set_sv_netview_offsetfromdp(9845320);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_36_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_36->M00_AXI_awsize.bind(*p_36_M00_AXI_awsize);
        p_36_M00_AXI_awsize->set_sv_netview_offsetfromdp(9845376);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_36_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_36->M00_AXI_awburst.bind(*p_36_M00_AXI_awburst);
        p_36_M00_AXI_awburst->set_sv_netview_offsetfromdp(9845432);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_36_M00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_36->M00_AXI_awlock.bind(*p_36_M00_AXI_awlock);
        p_36_M00_AXI_awlock->set_sv_netview_offsetfromdp(9845488);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_36_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_36->M00_AXI_awcache.bind(*p_36_M00_AXI_awcache);
        p_36_M00_AXI_awcache->set_sv_netview_offsetfromdp(9845544);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_36_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_36->M00_AXI_awprot.bind(*p_36_M00_AXI_awprot);
        p_36_M00_AXI_awprot->set_sv_netview_offsetfromdp(9845600);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_36_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_36->M00_AXI_awqos.bind(*p_36_M00_AXI_awqos);
        p_36_M00_AXI_awqos->set_sv_netview_offsetfromdp(9845656);
        xsim_sc_channel<0, bool > *p_36_M00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_36->M00_AXI_awvalid.bind(*p_36_M00_AXI_awvalid);
        p_36_M00_AXI_awvalid->set_sv_netview_offsetfromdp(9845712);
        xsim_sc_channel<0, bool > *p_36_M00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_36->M00_AXI_awready.bind(*p_36_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M00_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_36_M00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_36->M00_AXI_wdata.bind(*p_36_M00_AXI_wdata);
        p_36_M00_AXI_wdata->set_sv_netview_offsetfromdp(9845824);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_36_M00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_36->M00_AXI_wstrb.bind(*p_36_M00_AXI_wstrb);
        p_36_M00_AXI_wstrb->set_sv_netview_offsetfromdp(9845880);
        xsim_sc_channel<0, bool > *p_36_M00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_36->M00_AXI_wlast.bind(*p_36_M00_AXI_wlast);
        p_36_M00_AXI_wlast->set_sv_netview_offsetfromdp(9845936);
        xsim_sc_channel<0, bool > *p_36_M00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_36->M00_AXI_wvalid.bind(*p_36_M00_AXI_wvalid);
        p_36_M00_AXI_wvalid->set_sv_netview_offsetfromdp(9845992);
        xsim_sc_channel<0, bool > *p_36_M00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_36->M00_AXI_wready.bind(*p_36_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M00_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_36_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_36->M00_AXI_bresp.bind(*p_36_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M00_AXI_bresp);
        xsim_sc_channel<0, bool > *p_36_M00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_36->M00_AXI_bvalid.bind(*p_36_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M00_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_36_M00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_36->M00_AXI_bready.bind(*p_36_M00_AXI_bready);
        p_36_M00_AXI_bready->set_sv_netview_offsetfromdp(9846216);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_36_M00_AXI_araddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_36->M00_AXI_araddr.bind(*p_36_M00_AXI_araddr);
        p_36_M00_AXI_araddr->set_sv_netview_offsetfromdp(9846272);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_36_M00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_36->M00_AXI_arlen.bind(*p_36_M00_AXI_arlen);
        p_36_M00_AXI_arlen->set_sv_netview_offsetfromdp(9846328);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_36_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_36->M00_AXI_arsize.bind(*p_36_M00_AXI_arsize);
        p_36_M00_AXI_arsize->set_sv_netview_offsetfromdp(9846384);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_36_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_36->M00_AXI_arburst.bind(*p_36_M00_AXI_arburst);
        p_36_M00_AXI_arburst->set_sv_netview_offsetfromdp(9846440);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_36_M00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_36->M00_AXI_arlock.bind(*p_36_M00_AXI_arlock);
        p_36_M00_AXI_arlock->set_sv_netview_offsetfromdp(9846496);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_36_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_36->M00_AXI_arcache.bind(*p_36_M00_AXI_arcache);
        p_36_M00_AXI_arcache->set_sv_netview_offsetfromdp(9846552);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_36_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_36->M00_AXI_arprot.bind(*p_36_M00_AXI_arprot);
        p_36_M00_AXI_arprot->set_sv_netview_offsetfromdp(9846608);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_36_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_36->M00_AXI_arqos.bind(*p_36_M00_AXI_arqos);
        p_36_M00_AXI_arqos->set_sv_netview_offsetfromdp(9846664);
        xsim_sc_channel<0, bool > *p_36_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_36->M00_AXI_arvalid.bind(*p_36_M00_AXI_arvalid);
        p_36_M00_AXI_arvalid->set_sv_netview_offsetfromdp(9846720);
        xsim_sc_channel<0, bool > *p_36_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_36->M00_AXI_arready.bind(*p_36_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M00_AXI_arready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_36_M00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_36->M00_AXI_rdata.bind(*p_36_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_36_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_36->M00_AXI_rresp.bind(*p_36_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_36_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_36->M00_AXI_rlast.bind(*p_36_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M00_AXI_rlast);
        xsim_sc_channel<0, bool > *p_36_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_36->M00_AXI_rvalid.bind(*p_36_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_36_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_36_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_36->M00_AXI_rready.bind(*p_36_M00_AXI_rready);
        p_36_M00_AXI_rready->set_sv_netview_offsetfromdp(9847056);
        sc_inst_37 = new bd_d216_interconnect_PLRAM_MEM04_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.interconnect.interconnect_plram_mem04");
        sc_inst_37->xsim_set_dbg_index(2544);
        xsim_sc_channel<0, bool > *p_37_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_37->aclk.bind(*p_37_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_37_aclk);
        xsim_sc_channel<0, bool > *p_37_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_37->aresetn.bind(*p_37_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_37_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_37_S00_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_37->S00_AXI_awid.bind(*p_37_S00_AXI_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_awid);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_37_S00_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_37->S00_AXI_awaddr.bind(*p_37_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_37_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_37->S00_AXI_awlen.bind(*p_37_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_37_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_37->S00_AXI_awsize.bind(*p_37_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_37_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_37->S00_AXI_awburst.bind(*p_37_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_37_S00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_37->S00_AXI_awlock.bind(*p_37_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_37_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_37->S00_AXI_awcache.bind(*p_37_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_37_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_37->S00_AXI_awprot.bind(*p_37_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_37_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_37->S00_AXI_awqos.bind(*p_37_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_awqos);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_37_S00_AXI_awuser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_37->S00_AXI_awuser.bind(*p_37_S00_AXI_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_awuser);
        xsim_sc_channel<0, bool > *p_37_S00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_37->S00_AXI_awvalid.bind(*p_37_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_37_S00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_37->S00_AXI_awready.bind(*p_37_S00_AXI_awready);
        p_37_S00_AXI_awready->set_sv_netview_offsetfromdp(9847888);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_37_S00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_37->S00_AXI_wdata.bind(*p_37_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_37_S00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_37->S00_AXI_wstrb.bind(*p_37_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_37_S00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_37->S00_AXI_wlast.bind(*p_37_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_wlast);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_37_S00_AXI_wuser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_37->S00_AXI_wuser.bind(*p_37_S00_AXI_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_wuser);
        xsim_sc_channel<0, bool > *p_37_S00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_37->S00_AXI_wvalid.bind(*p_37_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_37_S00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_37->S00_AXI_wready.bind(*p_37_S00_AXI_wready);
        p_37_S00_AXI_wready->set_sv_netview_offsetfromdp(9848224);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_37_S00_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_37->S00_AXI_bid.bind(*p_37_S00_AXI_bid);
        p_37_S00_AXI_bid->set_sv_netview_offsetfromdp(9848280);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_37_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_37->S00_AXI_bresp.bind(*p_37_S00_AXI_bresp);
        p_37_S00_AXI_bresp->set_sv_netview_offsetfromdp(9848336);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_37_S00_AXI_buser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_37->S00_AXI_buser.bind(*p_37_S00_AXI_buser);
        p_37_S00_AXI_buser->set_sv_netview_offsetfromdp(9848392);
        xsim_sc_channel<0, bool > *p_37_S00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_37->S00_AXI_bvalid.bind(*p_37_S00_AXI_bvalid);
        p_37_S00_AXI_bvalid->set_sv_netview_offsetfromdp(9848448);
        xsim_sc_channel<0, bool > *p_37_S00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_37->S00_AXI_bready.bind(*p_37_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_37_S00_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_37->S00_AXI_arid.bind(*p_37_S00_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_arid);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_37_S00_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_37->S00_AXI_araddr.bind(*p_37_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_37_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_37->S00_AXI_arlen.bind(*p_37_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_37_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_37->S00_AXI_arsize.bind(*p_37_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_37_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_37->S00_AXI_arburst.bind(*p_37_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_37_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_37->S00_AXI_arlock.bind(*p_37_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_37_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_37->S00_AXI_arcache.bind(*p_37_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_37_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_37->S00_AXI_arprot.bind(*p_37_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_37_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_37->S00_AXI_arqos.bind(*p_37_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_arqos);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_37_S00_AXI_aruser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_37->S00_AXI_aruser.bind(*p_37_S00_AXI_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_aruser);
        xsim_sc_channel<0, bool > *p_37_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_37->S00_AXI_arvalid.bind(*p_37_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_37_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_37->S00_AXI_arready.bind(*p_37_S00_AXI_arready);
        p_37_S00_AXI_arready->set_sv_netview_offsetfromdp(9849176);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_37_S00_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_37->S00_AXI_rid.bind(*p_37_S00_AXI_rid);
        p_37_S00_AXI_rid->set_sv_netview_offsetfromdp(9849232);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_37_S00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_37->S00_AXI_rdata.bind(*p_37_S00_AXI_rdata);
        p_37_S00_AXI_rdata->set_sv_netview_offsetfromdp(9849288);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_37_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_37->S00_AXI_rresp.bind(*p_37_S00_AXI_rresp);
        p_37_S00_AXI_rresp->set_sv_netview_offsetfromdp(9849344);
        xsim_sc_channel<0, bool > *p_37_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_37->S00_AXI_rlast.bind(*p_37_S00_AXI_rlast);
        p_37_S00_AXI_rlast->set_sv_netview_offsetfromdp(9849400);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_37_S00_AXI_ruser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_37->S00_AXI_ruser.bind(*p_37_S00_AXI_ruser);
        p_37_S00_AXI_ruser->set_sv_netview_offsetfromdp(9849456);
        xsim_sc_channel<0, bool > *p_37_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_37->S00_AXI_rvalid.bind(*p_37_S00_AXI_rvalid);
        p_37_S00_AXI_rvalid->set_sv_netview_offsetfromdp(9849512);
        xsim_sc_channel<0, bool > *p_37_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_37->S00_AXI_rready.bind(*p_37_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_rready);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_37_M00_AXI_awaddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_37->M00_AXI_awaddr.bind(*p_37_M00_AXI_awaddr);
        p_37_M00_AXI_awaddr->set_sv_netview_offsetfromdp(9849624);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_37_M00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_37->M00_AXI_awlen.bind(*p_37_M00_AXI_awlen);
        p_37_M00_AXI_awlen->set_sv_netview_offsetfromdp(9849680);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_37_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_37->M00_AXI_awsize.bind(*p_37_M00_AXI_awsize);
        p_37_M00_AXI_awsize->set_sv_netview_offsetfromdp(9849736);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_37_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_37->M00_AXI_awburst.bind(*p_37_M00_AXI_awburst);
        p_37_M00_AXI_awburst->set_sv_netview_offsetfromdp(9849792);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_37_M00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_37->M00_AXI_awlock.bind(*p_37_M00_AXI_awlock);
        p_37_M00_AXI_awlock->set_sv_netview_offsetfromdp(9849848);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_37_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_37->M00_AXI_awcache.bind(*p_37_M00_AXI_awcache);
        p_37_M00_AXI_awcache->set_sv_netview_offsetfromdp(9849904);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_37_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_37->M00_AXI_awprot.bind(*p_37_M00_AXI_awprot);
        p_37_M00_AXI_awprot->set_sv_netview_offsetfromdp(9849960);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_37_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_37->M00_AXI_awqos.bind(*p_37_M00_AXI_awqos);
        p_37_M00_AXI_awqos->set_sv_netview_offsetfromdp(9850016);
        xsim_sc_channel<0, bool > *p_37_M00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_37->M00_AXI_awvalid.bind(*p_37_M00_AXI_awvalid);
        p_37_M00_AXI_awvalid->set_sv_netview_offsetfromdp(9850072);
        xsim_sc_channel<0, bool > *p_37_M00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_37->M00_AXI_awready.bind(*p_37_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_37_M00_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_37_M00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_37->M00_AXI_wdata.bind(*p_37_M00_AXI_wdata);
        p_37_M00_AXI_wdata->set_sv_netview_offsetfromdp(9850184);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_37_M00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_37->M00_AXI_wstrb.bind(*p_37_M00_AXI_wstrb);
        p_37_M00_AXI_wstrb->set_sv_netview_offsetfromdp(9850240);
        xsim_sc_channel<0, bool > *p_37_M00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_37->M00_AXI_wlast.bind(*p_37_M00_AXI_wlast);
        p_37_M00_AXI_wlast->set_sv_netview_offsetfromdp(9850296);
        xsim_sc_channel<0, bool > *p_37_M00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_37->M00_AXI_wvalid.bind(*p_37_M00_AXI_wvalid);
        p_37_M00_AXI_wvalid->set_sv_netview_offsetfromdp(9850352);
        xsim_sc_channel<0, bool > *p_37_M00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_37->M00_AXI_wready.bind(*p_37_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_37_M00_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_37_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_37->M00_AXI_bresp.bind(*p_37_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_37_M00_AXI_bresp);
        xsim_sc_channel<0, bool > *p_37_M00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_37->M00_AXI_bvalid.bind(*p_37_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_37_M00_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_37_M00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_37->M00_AXI_bready.bind(*p_37_M00_AXI_bready);
        p_37_M00_AXI_bready->set_sv_netview_offsetfromdp(9850576);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_37_M00_AXI_araddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_37->M00_AXI_araddr.bind(*p_37_M00_AXI_araddr);
        p_37_M00_AXI_araddr->set_sv_netview_offsetfromdp(9850632);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_37_M00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_37->M00_AXI_arlen.bind(*p_37_M00_AXI_arlen);
        p_37_M00_AXI_arlen->set_sv_netview_offsetfromdp(9850688);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_37_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_37->M00_AXI_arsize.bind(*p_37_M00_AXI_arsize);
        p_37_M00_AXI_arsize->set_sv_netview_offsetfromdp(9850744);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_37_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_37->M00_AXI_arburst.bind(*p_37_M00_AXI_arburst);
        p_37_M00_AXI_arburst->set_sv_netview_offsetfromdp(9850800);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_37_M00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_37->M00_AXI_arlock.bind(*p_37_M00_AXI_arlock);
        p_37_M00_AXI_arlock->set_sv_netview_offsetfromdp(9850856);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_37_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_37->M00_AXI_arcache.bind(*p_37_M00_AXI_arcache);
        p_37_M00_AXI_arcache->set_sv_netview_offsetfromdp(9850912);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_37_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_37->M00_AXI_arprot.bind(*p_37_M00_AXI_arprot);
        p_37_M00_AXI_arprot->set_sv_netview_offsetfromdp(9850968);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_37_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_37->M00_AXI_arqos.bind(*p_37_M00_AXI_arqos);
        p_37_M00_AXI_arqos->set_sv_netview_offsetfromdp(9851024);
        xsim_sc_channel<0, bool > *p_37_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_37->M00_AXI_arvalid.bind(*p_37_M00_AXI_arvalid);
        p_37_M00_AXI_arvalid->set_sv_netview_offsetfromdp(9851080);
        xsim_sc_channel<0, bool > *p_37_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_37->M00_AXI_arready.bind(*p_37_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_37_M00_AXI_arready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_37_M00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_37->M00_AXI_rdata.bind(*p_37_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_37_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_37_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_37->M00_AXI_rresp.bind(*p_37_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_37_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_37_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_37->M00_AXI_rlast.bind(*p_37_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_37_M00_AXI_rlast);
        xsim_sc_channel<0, bool > *p_37_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_37->M00_AXI_rvalid.bind(*p_37_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_37_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_37_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_37->M00_AXI_rready.bind(*p_37_M00_AXI_rready);
        p_37_M00_AXI_rready->set_sv_netview_offsetfromdp(9851416);
        sc_inst_38 = new bd_d216_interconnect_PLRAM_MEM05_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.interconnect.interconnect_plram_mem05");
        sc_inst_38->xsim_set_dbg_index(2545);
        xsim_sc_channel<0, bool > *p_38_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_38->aclk.bind(*p_38_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_38_aclk);
        xsim_sc_channel<0, bool > *p_38_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_38->aresetn.bind(*p_38_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_38_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_38_S00_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_38->S00_AXI_awid.bind(*p_38_S00_AXI_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_awid);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_38_S00_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_38->S00_AXI_awaddr.bind(*p_38_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_38_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_38->S00_AXI_awlen.bind(*p_38_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_38_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_38->S00_AXI_awsize.bind(*p_38_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_38_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_38->S00_AXI_awburst.bind(*p_38_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_38_S00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_38->S00_AXI_awlock.bind(*p_38_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_38_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_38->S00_AXI_awcache.bind(*p_38_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_38_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_38->S00_AXI_awprot.bind(*p_38_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_38_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_38->S00_AXI_awqos.bind(*p_38_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_awqos);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_38_S00_AXI_awuser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_38->S00_AXI_awuser.bind(*p_38_S00_AXI_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_awuser);
        xsim_sc_channel<0, bool > *p_38_S00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_38->S00_AXI_awvalid.bind(*p_38_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_38_S00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_38->S00_AXI_awready.bind(*p_38_S00_AXI_awready);
        p_38_S00_AXI_awready->set_sv_netview_offsetfromdp(9852248);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_38_S00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_38->S00_AXI_wdata.bind(*p_38_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_38_S00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_38->S00_AXI_wstrb.bind(*p_38_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_38_S00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_38->S00_AXI_wlast.bind(*p_38_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_wlast);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_38_S00_AXI_wuser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_38->S00_AXI_wuser.bind(*p_38_S00_AXI_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_wuser);
        xsim_sc_channel<0, bool > *p_38_S00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_38->S00_AXI_wvalid.bind(*p_38_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_38_S00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_38->S00_AXI_wready.bind(*p_38_S00_AXI_wready);
        p_38_S00_AXI_wready->set_sv_netview_offsetfromdp(9852584);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_38_S00_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_38->S00_AXI_bid.bind(*p_38_S00_AXI_bid);
        p_38_S00_AXI_bid->set_sv_netview_offsetfromdp(9852640);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_38_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_38->S00_AXI_bresp.bind(*p_38_S00_AXI_bresp);
        p_38_S00_AXI_bresp->set_sv_netview_offsetfromdp(9852696);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_38_S00_AXI_buser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_38->S00_AXI_buser.bind(*p_38_S00_AXI_buser);
        p_38_S00_AXI_buser->set_sv_netview_offsetfromdp(9852752);
        xsim_sc_channel<0, bool > *p_38_S00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_38->S00_AXI_bvalid.bind(*p_38_S00_AXI_bvalid);
        p_38_S00_AXI_bvalid->set_sv_netview_offsetfromdp(9852808);
        xsim_sc_channel<0, bool > *p_38_S00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_38->S00_AXI_bready.bind(*p_38_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_38_S00_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_38->S00_AXI_arid.bind(*p_38_S00_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_arid);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_38_S00_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_38->S00_AXI_araddr.bind(*p_38_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_38_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_38->S00_AXI_arlen.bind(*p_38_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_38_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_38->S00_AXI_arsize.bind(*p_38_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_38_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_38->S00_AXI_arburst.bind(*p_38_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_38_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_38->S00_AXI_arlock.bind(*p_38_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_38_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_38->S00_AXI_arcache.bind(*p_38_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_38_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_38->S00_AXI_arprot.bind(*p_38_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_38_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_38->S00_AXI_arqos.bind(*p_38_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_arqos);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_38_S00_AXI_aruser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_38->S00_AXI_aruser.bind(*p_38_S00_AXI_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_aruser);
        xsim_sc_channel<0, bool > *p_38_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_38->S00_AXI_arvalid.bind(*p_38_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_38_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_38->S00_AXI_arready.bind(*p_38_S00_AXI_arready);
        p_38_S00_AXI_arready->set_sv_netview_offsetfromdp(9853536);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_38_S00_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_38->S00_AXI_rid.bind(*p_38_S00_AXI_rid);
        p_38_S00_AXI_rid->set_sv_netview_offsetfromdp(9853592);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_38_S00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_38->S00_AXI_rdata.bind(*p_38_S00_AXI_rdata);
        p_38_S00_AXI_rdata->set_sv_netview_offsetfromdp(9853648);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_38_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_38->S00_AXI_rresp.bind(*p_38_S00_AXI_rresp);
        p_38_S00_AXI_rresp->set_sv_netview_offsetfromdp(9853704);
        xsim_sc_channel<0, bool > *p_38_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_38->S00_AXI_rlast.bind(*p_38_S00_AXI_rlast);
        p_38_S00_AXI_rlast->set_sv_netview_offsetfromdp(9853760);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_38_S00_AXI_ruser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_38->S00_AXI_ruser.bind(*p_38_S00_AXI_ruser);
        p_38_S00_AXI_ruser->set_sv_netview_offsetfromdp(9853816);
        xsim_sc_channel<0, bool > *p_38_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_38->S00_AXI_rvalid.bind(*p_38_S00_AXI_rvalid);
        p_38_S00_AXI_rvalid->set_sv_netview_offsetfromdp(9853872);
        xsim_sc_channel<0, bool > *p_38_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_38->S00_AXI_rready.bind(*p_38_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_rready);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_38_M00_AXI_awaddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_38->M00_AXI_awaddr.bind(*p_38_M00_AXI_awaddr);
        p_38_M00_AXI_awaddr->set_sv_netview_offsetfromdp(9853984);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_38_M00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_38->M00_AXI_awlen.bind(*p_38_M00_AXI_awlen);
        p_38_M00_AXI_awlen->set_sv_netview_offsetfromdp(9854040);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_38_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_38->M00_AXI_awsize.bind(*p_38_M00_AXI_awsize);
        p_38_M00_AXI_awsize->set_sv_netview_offsetfromdp(9854096);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_38_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_38->M00_AXI_awburst.bind(*p_38_M00_AXI_awburst);
        p_38_M00_AXI_awburst->set_sv_netview_offsetfromdp(9854152);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_38_M00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_38->M00_AXI_awlock.bind(*p_38_M00_AXI_awlock);
        p_38_M00_AXI_awlock->set_sv_netview_offsetfromdp(9854208);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_38_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_38->M00_AXI_awcache.bind(*p_38_M00_AXI_awcache);
        p_38_M00_AXI_awcache->set_sv_netview_offsetfromdp(9854264);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_38_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_38->M00_AXI_awprot.bind(*p_38_M00_AXI_awprot);
        p_38_M00_AXI_awprot->set_sv_netview_offsetfromdp(9854320);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_38_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_38->M00_AXI_awqos.bind(*p_38_M00_AXI_awqos);
        p_38_M00_AXI_awqos->set_sv_netview_offsetfromdp(9854376);
        xsim_sc_channel<0, bool > *p_38_M00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_38->M00_AXI_awvalid.bind(*p_38_M00_AXI_awvalid);
        p_38_M00_AXI_awvalid->set_sv_netview_offsetfromdp(9854432);
        xsim_sc_channel<0, bool > *p_38_M00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_38->M00_AXI_awready.bind(*p_38_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M00_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_38_M00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_38->M00_AXI_wdata.bind(*p_38_M00_AXI_wdata);
        p_38_M00_AXI_wdata->set_sv_netview_offsetfromdp(9854544);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_38_M00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_38->M00_AXI_wstrb.bind(*p_38_M00_AXI_wstrb);
        p_38_M00_AXI_wstrb->set_sv_netview_offsetfromdp(9854600);
        xsim_sc_channel<0, bool > *p_38_M00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_38->M00_AXI_wlast.bind(*p_38_M00_AXI_wlast);
        p_38_M00_AXI_wlast->set_sv_netview_offsetfromdp(9854656);
        xsim_sc_channel<0, bool > *p_38_M00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_38->M00_AXI_wvalid.bind(*p_38_M00_AXI_wvalid);
        p_38_M00_AXI_wvalid->set_sv_netview_offsetfromdp(9854712);
        xsim_sc_channel<0, bool > *p_38_M00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_38->M00_AXI_wready.bind(*p_38_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M00_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_38_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_38->M00_AXI_bresp.bind(*p_38_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M00_AXI_bresp);
        xsim_sc_channel<0, bool > *p_38_M00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_38->M00_AXI_bvalid.bind(*p_38_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M00_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_38_M00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_38->M00_AXI_bready.bind(*p_38_M00_AXI_bready);
        p_38_M00_AXI_bready->set_sv_netview_offsetfromdp(9854936);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_38_M00_AXI_araddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_38->M00_AXI_araddr.bind(*p_38_M00_AXI_araddr);
        p_38_M00_AXI_araddr->set_sv_netview_offsetfromdp(9854992);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_38_M00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_38->M00_AXI_arlen.bind(*p_38_M00_AXI_arlen);
        p_38_M00_AXI_arlen->set_sv_netview_offsetfromdp(9855048);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_38_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_38->M00_AXI_arsize.bind(*p_38_M00_AXI_arsize);
        p_38_M00_AXI_arsize->set_sv_netview_offsetfromdp(9855104);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_38_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_38->M00_AXI_arburst.bind(*p_38_M00_AXI_arburst);
        p_38_M00_AXI_arburst->set_sv_netview_offsetfromdp(9855160);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_38_M00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_38->M00_AXI_arlock.bind(*p_38_M00_AXI_arlock);
        p_38_M00_AXI_arlock->set_sv_netview_offsetfromdp(9855216);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_38_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_38->M00_AXI_arcache.bind(*p_38_M00_AXI_arcache);
        p_38_M00_AXI_arcache->set_sv_netview_offsetfromdp(9855272);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_38_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_38->M00_AXI_arprot.bind(*p_38_M00_AXI_arprot);
        p_38_M00_AXI_arprot->set_sv_netview_offsetfromdp(9855328);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_38_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_38->M00_AXI_arqos.bind(*p_38_M00_AXI_arqos);
        p_38_M00_AXI_arqos->set_sv_netview_offsetfromdp(9855384);
        xsim_sc_channel<0, bool > *p_38_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_38->M00_AXI_arvalid.bind(*p_38_M00_AXI_arvalid);
        p_38_M00_AXI_arvalid->set_sv_netview_offsetfromdp(9855440);
        xsim_sc_channel<0, bool > *p_38_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_38->M00_AXI_arready.bind(*p_38_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M00_AXI_arready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_38_M00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_38->M00_AXI_rdata.bind(*p_38_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_38_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_38->M00_AXI_rresp.bind(*p_38_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_38_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_38->M00_AXI_rlast.bind(*p_38_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M00_AXI_rlast);
        xsim_sc_channel<0, bool > *p_38_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_38->M00_AXI_rvalid.bind(*p_38_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_38_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_38->M00_AXI_rready.bind(*p_38_M00_AXI_rready);
        p_38_M00_AXI_rready->set_sv_netview_offsetfromdp(9855776);
        sc_inst_39 = new bd_d216_interconnect_S00_AXI_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.interconnect.interconnect_s00_axi");
        sc_inst_39->xsim_set_dbg_index(2546);
        xsim_sc_channel<0, bool > *p_39_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_39->aclk.bind(*p_39_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_39_aclk);
        xsim_sc_channel<0, bool > *p_39_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_39->aresetn.bind(*p_39_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_39_aresetn);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_39_S00_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_39->S00_AXI_awaddr.bind(*p_39_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_39_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_39->S00_AXI_awlen.bind(*p_39_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_39_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_39->S00_AXI_awsize.bind(*p_39_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_39_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_39->S00_AXI_awburst.bind(*p_39_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_39_S00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_39->S00_AXI_awlock.bind(*p_39_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_39_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_39->S00_AXI_awcache.bind(*p_39_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_39_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_39->S00_AXI_awprot.bind(*p_39_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_39_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_39->S00_AXI_awqos.bind(*p_39_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_awqos);
        xsim_sc_channel<0, bool > *p_39_S00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->S00_AXI_awvalid.bind(*p_39_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_39_S00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_39->S00_AXI_awready.bind(*p_39_S00_AXI_awready);
        p_39_S00_AXI_awready->set_sv_netview_offsetfromdp(9856496);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_39_S00_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_39->S00_AXI_wdata.bind(*p_39_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_39_S00_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_39->S00_AXI_wstrb.bind(*p_39_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_39_S00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_39->S00_AXI_wlast.bind(*p_39_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_wlast);
        xsim_sc_channel<0, bool > *p_39_S00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->S00_AXI_wvalid.bind(*p_39_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_39_S00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_39->S00_AXI_wready.bind(*p_39_S00_AXI_wready);
        p_39_S00_AXI_wready->set_sv_netview_offsetfromdp(9856776);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_39_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_39->S00_AXI_bresp.bind(*p_39_S00_AXI_bresp);
        p_39_S00_AXI_bresp->set_sv_netview_offsetfromdp(9856832);
        xsim_sc_channel<0, bool > *p_39_S00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->S00_AXI_bvalid.bind(*p_39_S00_AXI_bvalid);
        p_39_S00_AXI_bvalid->set_sv_netview_offsetfromdp(9856888);
        xsim_sc_channel<0, bool > *p_39_S00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_39->S00_AXI_bready.bind(*p_39_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_bready);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_39_S00_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_39->S00_AXI_araddr.bind(*p_39_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_39_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_39->S00_AXI_arlen.bind(*p_39_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_39_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_39->S00_AXI_arsize.bind(*p_39_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_39_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_39->S00_AXI_arburst.bind(*p_39_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_39_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_39->S00_AXI_arlock.bind(*p_39_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_39_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_39->S00_AXI_arcache.bind(*p_39_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_39_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_39->S00_AXI_arprot.bind(*p_39_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_39_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_39->S00_AXI_arqos.bind(*p_39_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_arqos);
        xsim_sc_channel<0, bool > *p_39_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->S00_AXI_arvalid.bind(*p_39_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_39_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_39->S00_AXI_arready.bind(*p_39_S00_AXI_arready);
        p_39_S00_AXI_arready->set_sv_netview_offsetfromdp(9857504);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_39_S00_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_39->S00_AXI_rdata.bind(*p_39_S00_AXI_rdata);
        p_39_S00_AXI_rdata->set_sv_netview_offsetfromdp(9857560);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_39_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_39->S00_AXI_rresp.bind(*p_39_S00_AXI_rresp);
        p_39_S00_AXI_rresp->set_sv_netview_offsetfromdp(9857616);
        xsim_sc_channel<0, bool > *p_39_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_39->S00_AXI_rlast.bind(*p_39_S00_AXI_rlast);
        p_39_S00_AXI_rlast->set_sv_netview_offsetfromdp(9857672);
        xsim_sc_channel<0, bool > *p_39_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->S00_AXI_rvalid.bind(*p_39_S00_AXI_rvalid);
        p_39_S00_AXI_rvalid->set_sv_netview_offsetfromdp(9857728);
        xsim_sc_channel<0, bool > *p_39_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_39->S00_AXI_rready.bind(*p_39_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_rready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_39_M00_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_39->M00_AXI_awid.bind(*p_39_M00_AXI_awid);
        p_39_M00_AXI_awid->set_sv_netview_offsetfromdp(9857840);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_39_M00_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_39->M00_AXI_awaddr.bind(*p_39_M00_AXI_awaddr);
        p_39_M00_AXI_awaddr->set_sv_netview_offsetfromdp(9857896);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_39_M00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_39->M00_AXI_awlen.bind(*p_39_M00_AXI_awlen);
        p_39_M00_AXI_awlen->set_sv_netview_offsetfromdp(9857952);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_39_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_39->M00_AXI_awsize.bind(*p_39_M00_AXI_awsize);
        p_39_M00_AXI_awsize->set_sv_netview_offsetfromdp(9858008);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_39_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_39->M00_AXI_awburst.bind(*p_39_M00_AXI_awburst);
        p_39_M00_AXI_awburst->set_sv_netview_offsetfromdp(9858064);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_39_M00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_39->M00_AXI_awlock.bind(*p_39_M00_AXI_awlock);
        p_39_M00_AXI_awlock->set_sv_netview_offsetfromdp(9858120);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_39_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_39->M00_AXI_awcache.bind(*p_39_M00_AXI_awcache);
        p_39_M00_AXI_awcache->set_sv_netview_offsetfromdp(9858176);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_39_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_39->M00_AXI_awprot.bind(*p_39_M00_AXI_awprot);
        p_39_M00_AXI_awprot->set_sv_netview_offsetfromdp(9858232);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_39_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_39->M00_AXI_awqos.bind(*p_39_M00_AXI_awqos);
        p_39_M00_AXI_awqos->set_sv_netview_offsetfromdp(9858288);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_39_M00_AXI_awuser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_39->M00_AXI_awuser.bind(*p_39_M00_AXI_awuser);
        p_39_M00_AXI_awuser->set_sv_netview_offsetfromdp(9858344);
        xsim_sc_channel<0, bool > *p_39_M00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->M00_AXI_awvalid.bind(*p_39_M00_AXI_awvalid);
        p_39_M00_AXI_awvalid->set_sv_netview_offsetfromdp(9858400);
        xsim_sc_channel<0, bool > *p_39_M00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_39->M00_AXI_awready.bind(*p_39_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M00_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_39_M00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_39->M00_AXI_wdata.bind(*p_39_M00_AXI_wdata);
        p_39_M00_AXI_wdata->set_sv_netview_offsetfromdp(9858512);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_39_M00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_39->M00_AXI_wstrb.bind(*p_39_M00_AXI_wstrb);
        p_39_M00_AXI_wstrb->set_sv_netview_offsetfromdp(9858568);
        xsim_sc_channel<0, bool > *p_39_M00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_39->M00_AXI_wlast.bind(*p_39_M00_AXI_wlast);
        p_39_M00_AXI_wlast->set_sv_netview_offsetfromdp(9858624);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_39_M00_AXI_wuser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_39->M00_AXI_wuser.bind(*p_39_M00_AXI_wuser);
        p_39_M00_AXI_wuser->set_sv_netview_offsetfromdp(9858680);
        xsim_sc_channel<0, bool > *p_39_M00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->M00_AXI_wvalid.bind(*p_39_M00_AXI_wvalid);
        p_39_M00_AXI_wvalid->set_sv_netview_offsetfromdp(9858736);
        xsim_sc_channel<0, bool > *p_39_M00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_39->M00_AXI_wready.bind(*p_39_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M00_AXI_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_39_M00_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_39->M00_AXI_bid.bind(*p_39_M00_AXI_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M00_AXI_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_39_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_39->M00_AXI_bresp.bind(*p_39_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M00_AXI_bresp);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_39_M00_AXI_buser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_39->M00_AXI_buser.bind(*p_39_M00_AXI_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M00_AXI_buser);
        xsim_sc_channel<0, bool > *p_39_M00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->M00_AXI_bvalid.bind(*p_39_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M00_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_39_M00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_39->M00_AXI_bready.bind(*p_39_M00_AXI_bready);
        p_39_M00_AXI_bready->set_sv_netview_offsetfromdp(9859072);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_39_M00_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_39->M00_AXI_arid.bind(*p_39_M00_AXI_arid);
        p_39_M00_AXI_arid->set_sv_netview_offsetfromdp(9859128);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_39_M00_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_39->M00_AXI_araddr.bind(*p_39_M00_AXI_araddr);
        p_39_M00_AXI_araddr->set_sv_netview_offsetfromdp(9859184);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_39_M00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_39->M00_AXI_arlen.bind(*p_39_M00_AXI_arlen);
        p_39_M00_AXI_arlen->set_sv_netview_offsetfromdp(9859240);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_39_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_39->M00_AXI_arsize.bind(*p_39_M00_AXI_arsize);
        p_39_M00_AXI_arsize->set_sv_netview_offsetfromdp(9859296);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_39_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_39->M00_AXI_arburst.bind(*p_39_M00_AXI_arburst);
        p_39_M00_AXI_arburst->set_sv_netview_offsetfromdp(9859352);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_39_M00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_39->M00_AXI_arlock.bind(*p_39_M00_AXI_arlock);
        p_39_M00_AXI_arlock->set_sv_netview_offsetfromdp(9859408);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_39_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_39->M00_AXI_arcache.bind(*p_39_M00_AXI_arcache);
        p_39_M00_AXI_arcache->set_sv_netview_offsetfromdp(9859464);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_39_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_39->M00_AXI_arprot.bind(*p_39_M00_AXI_arprot);
        p_39_M00_AXI_arprot->set_sv_netview_offsetfromdp(9859520);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_39_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_39->M00_AXI_arqos.bind(*p_39_M00_AXI_arqos);
        p_39_M00_AXI_arqos->set_sv_netview_offsetfromdp(9859576);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_39_M00_AXI_aruser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_39->M00_AXI_aruser.bind(*p_39_M00_AXI_aruser);
        p_39_M00_AXI_aruser->set_sv_netview_offsetfromdp(9859632);
        xsim_sc_channel<0, bool > *p_39_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->M00_AXI_arvalid.bind(*p_39_M00_AXI_arvalid);
        p_39_M00_AXI_arvalid->set_sv_netview_offsetfromdp(9859688);
        xsim_sc_channel<0, bool > *p_39_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_39->M00_AXI_arready.bind(*p_39_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M00_AXI_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_39_M00_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_39->M00_AXI_rid.bind(*p_39_M00_AXI_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M00_AXI_rid);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_39_M00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_39->M00_AXI_rdata.bind(*p_39_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_39_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_39->M00_AXI_rresp.bind(*p_39_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_39_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_39->M00_AXI_rlast.bind(*p_39_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M00_AXI_rlast);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_39_M00_AXI_ruser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_39->M00_AXI_ruser.bind(*p_39_M00_AXI_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M00_AXI_ruser);
        xsim_sc_channel<0, bool > *p_39_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->M00_AXI_rvalid.bind(*p_39_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_39_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_39->M00_AXI_rready.bind(*p_39_M00_AXI_rready);
        p_39_M00_AXI_rready->set_sv_netview_offsetfromdp(9860136);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_39_M01_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_39->M01_AXI_awid.bind(*p_39_M01_AXI_awid);
        p_39_M01_AXI_awid->set_sv_netview_offsetfromdp(9860192);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_39_M01_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_39->M01_AXI_awaddr.bind(*p_39_M01_AXI_awaddr);
        p_39_M01_AXI_awaddr->set_sv_netview_offsetfromdp(9860248);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_39_M01_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_39->M01_AXI_awlen.bind(*p_39_M01_AXI_awlen);
        p_39_M01_AXI_awlen->set_sv_netview_offsetfromdp(9860304);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_39_M01_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_39->M01_AXI_awsize.bind(*p_39_M01_AXI_awsize);
        p_39_M01_AXI_awsize->set_sv_netview_offsetfromdp(9860360);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_39_M01_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_39->M01_AXI_awburst.bind(*p_39_M01_AXI_awburst);
        p_39_M01_AXI_awburst->set_sv_netview_offsetfromdp(9860416);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_39_M01_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_39->M01_AXI_awlock.bind(*p_39_M01_AXI_awlock);
        p_39_M01_AXI_awlock->set_sv_netview_offsetfromdp(9860472);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_39_M01_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_39->M01_AXI_awcache.bind(*p_39_M01_AXI_awcache);
        p_39_M01_AXI_awcache->set_sv_netview_offsetfromdp(9860528);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_39_M01_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_39->M01_AXI_awprot.bind(*p_39_M01_AXI_awprot);
        p_39_M01_AXI_awprot->set_sv_netview_offsetfromdp(9860584);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_39_M01_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_39->M01_AXI_awqos.bind(*p_39_M01_AXI_awqos);
        p_39_M01_AXI_awqos->set_sv_netview_offsetfromdp(9860640);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_39_M01_AXI_awuser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_39->M01_AXI_awuser.bind(*p_39_M01_AXI_awuser);
        p_39_M01_AXI_awuser->set_sv_netview_offsetfromdp(9860696);
        xsim_sc_channel<0, bool > *p_39_M01_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->M01_AXI_awvalid.bind(*p_39_M01_AXI_awvalid);
        p_39_M01_AXI_awvalid->set_sv_netview_offsetfromdp(9860752);
        xsim_sc_channel<0, bool > *p_39_M01_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_39->M01_AXI_awready.bind(*p_39_M01_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M01_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_39_M01_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_39->M01_AXI_wdata.bind(*p_39_M01_AXI_wdata);
        p_39_M01_AXI_wdata->set_sv_netview_offsetfromdp(9860864);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_39_M01_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_39->M01_AXI_wstrb.bind(*p_39_M01_AXI_wstrb);
        p_39_M01_AXI_wstrb->set_sv_netview_offsetfromdp(9860920);
        xsim_sc_channel<0, bool > *p_39_M01_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_39->M01_AXI_wlast.bind(*p_39_M01_AXI_wlast);
        p_39_M01_AXI_wlast->set_sv_netview_offsetfromdp(9860976);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_39_M01_AXI_wuser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_39->M01_AXI_wuser.bind(*p_39_M01_AXI_wuser);
        p_39_M01_AXI_wuser->set_sv_netview_offsetfromdp(9861032);
        xsim_sc_channel<0, bool > *p_39_M01_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->M01_AXI_wvalid.bind(*p_39_M01_AXI_wvalid);
        p_39_M01_AXI_wvalid->set_sv_netview_offsetfromdp(9861088);
        xsim_sc_channel<0, bool > *p_39_M01_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_39->M01_AXI_wready.bind(*p_39_M01_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M01_AXI_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_39_M01_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_39->M01_AXI_bid.bind(*p_39_M01_AXI_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M01_AXI_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_39_M01_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_39->M01_AXI_bresp.bind(*p_39_M01_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M01_AXI_bresp);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_39_M01_AXI_buser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_39->M01_AXI_buser.bind(*p_39_M01_AXI_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M01_AXI_buser);
        xsim_sc_channel<0, bool > *p_39_M01_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->M01_AXI_bvalid.bind(*p_39_M01_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M01_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_39_M01_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_39->M01_AXI_bready.bind(*p_39_M01_AXI_bready);
        p_39_M01_AXI_bready->set_sv_netview_offsetfromdp(9861424);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_39_M01_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_39->M01_AXI_arid.bind(*p_39_M01_AXI_arid);
        p_39_M01_AXI_arid->set_sv_netview_offsetfromdp(9861480);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_39_M01_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_39->M01_AXI_araddr.bind(*p_39_M01_AXI_araddr);
        p_39_M01_AXI_araddr->set_sv_netview_offsetfromdp(9861536);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_39_M01_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_39->M01_AXI_arlen.bind(*p_39_M01_AXI_arlen);
        p_39_M01_AXI_arlen->set_sv_netview_offsetfromdp(9861592);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_39_M01_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_39->M01_AXI_arsize.bind(*p_39_M01_AXI_arsize);
        p_39_M01_AXI_arsize->set_sv_netview_offsetfromdp(9861648);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_39_M01_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_39->M01_AXI_arburst.bind(*p_39_M01_AXI_arburst);
        p_39_M01_AXI_arburst->set_sv_netview_offsetfromdp(9861704);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_39_M01_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_39->M01_AXI_arlock.bind(*p_39_M01_AXI_arlock);
        p_39_M01_AXI_arlock->set_sv_netview_offsetfromdp(9861760);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_39_M01_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_39->M01_AXI_arcache.bind(*p_39_M01_AXI_arcache);
        p_39_M01_AXI_arcache->set_sv_netview_offsetfromdp(9861816);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_39_M01_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_39->M01_AXI_arprot.bind(*p_39_M01_AXI_arprot);
        p_39_M01_AXI_arprot->set_sv_netview_offsetfromdp(9861872);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_39_M01_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_39->M01_AXI_arqos.bind(*p_39_M01_AXI_arqos);
        p_39_M01_AXI_arqos->set_sv_netview_offsetfromdp(9861928);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_39_M01_AXI_aruser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_39->M01_AXI_aruser.bind(*p_39_M01_AXI_aruser);
        p_39_M01_AXI_aruser->set_sv_netview_offsetfromdp(9861984);
        xsim_sc_channel<0, bool > *p_39_M01_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->M01_AXI_arvalid.bind(*p_39_M01_AXI_arvalid);
        p_39_M01_AXI_arvalid->set_sv_netview_offsetfromdp(9862040);
        xsim_sc_channel<0, bool > *p_39_M01_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_39->M01_AXI_arready.bind(*p_39_M01_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M01_AXI_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_39_M01_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_39->M01_AXI_rid.bind(*p_39_M01_AXI_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M01_AXI_rid);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_39_M01_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_39->M01_AXI_rdata.bind(*p_39_M01_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M01_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_39_M01_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_39->M01_AXI_rresp.bind(*p_39_M01_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M01_AXI_rresp);
        xsim_sc_channel<0, bool > *p_39_M01_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_39->M01_AXI_rlast.bind(*p_39_M01_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M01_AXI_rlast);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_39_M01_AXI_ruser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_39->M01_AXI_ruser.bind(*p_39_M01_AXI_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M01_AXI_ruser);
        xsim_sc_channel<0, bool > *p_39_M01_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->M01_AXI_rvalid.bind(*p_39_M01_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M01_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_39_M01_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_39->M01_AXI_rready.bind(*p_39_M01_AXI_rready);
        p_39_M01_AXI_rready->set_sv_netview_offsetfromdp(9862488);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_39_M02_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_39->M02_AXI_awid.bind(*p_39_M02_AXI_awid);
        p_39_M02_AXI_awid->set_sv_netview_offsetfromdp(9862544);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_39_M02_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_39->M02_AXI_awaddr.bind(*p_39_M02_AXI_awaddr);
        p_39_M02_AXI_awaddr->set_sv_netview_offsetfromdp(9862600);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_39_M02_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_39->M02_AXI_awlen.bind(*p_39_M02_AXI_awlen);
        p_39_M02_AXI_awlen->set_sv_netview_offsetfromdp(9862656);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_39_M02_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_39->M02_AXI_awsize.bind(*p_39_M02_AXI_awsize);
        p_39_M02_AXI_awsize->set_sv_netview_offsetfromdp(9862712);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_39_M02_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_39->M02_AXI_awburst.bind(*p_39_M02_AXI_awburst);
        p_39_M02_AXI_awburst->set_sv_netview_offsetfromdp(9862768);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_39_M02_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_39->M02_AXI_awlock.bind(*p_39_M02_AXI_awlock);
        p_39_M02_AXI_awlock->set_sv_netview_offsetfromdp(9862824);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_39_M02_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_39->M02_AXI_awcache.bind(*p_39_M02_AXI_awcache);
        p_39_M02_AXI_awcache->set_sv_netview_offsetfromdp(9862880);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_39_M02_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_39->M02_AXI_awprot.bind(*p_39_M02_AXI_awprot);
        p_39_M02_AXI_awprot->set_sv_netview_offsetfromdp(9862936);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_39_M02_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_39->M02_AXI_awqos.bind(*p_39_M02_AXI_awqos);
        p_39_M02_AXI_awqos->set_sv_netview_offsetfromdp(9862992);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_39_M02_AXI_awuser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_39->M02_AXI_awuser.bind(*p_39_M02_AXI_awuser);
        p_39_M02_AXI_awuser->set_sv_netview_offsetfromdp(9863048);
        xsim_sc_channel<0, bool > *p_39_M02_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->M02_AXI_awvalid.bind(*p_39_M02_AXI_awvalid);
        p_39_M02_AXI_awvalid->set_sv_netview_offsetfromdp(9863104);
        xsim_sc_channel<0, bool > *p_39_M02_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_39->M02_AXI_awready.bind(*p_39_M02_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M02_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_39_M02_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_39->M02_AXI_wdata.bind(*p_39_M02_AXI_wdata);
        p_39_M02_AXI_wdata->set_sv_netview_offsetfromdp(9863216);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_39_M02_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_39->M02_AXI_wstrb.bind(*p_39_M02_AXI_wstrb);
        p_39_M02_AXI_wstrb->set_sv_netview_offsetfromdp(9863272);
        xsim_sc_channel<0, bool > *p_39_M02_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_39->M02_AXI_wlast.bind(*p_39_M02_AXI_wlast);
        p_39_M02_AXI_wlast->set_sv_netview_offsetfromdp(9863328);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_39_M02_AXI_wuser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_39->M02_AXI_wuser.bind(*p_39_M02_AXI_wuser);
        p_39_M02_AXI_wuser->set_sv_netview_offsetfromdp(9863384);
        xsim_sc_channel<0, bool > *p_39_M02_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->M02_AXI_wvalid.bind(*p_39_M02_AXI_wvalid);
        p_39_M02_AXI_wvalid->set_sv_netview_offsetfromdp(9863440);
        xsim_sc_channel<0, bool > *p_39_M02_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_39->M02_AXI_wready.bind(*p_39_M02_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M02_AXI_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_39_M02_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_39->M02_AXI_bid.bind(*p_39_M02_AXI_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M02_AXI_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_39_M02_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_39->M02_AXI_bresp.bind(*p_39_M02_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M02_AXI_bresp);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_39_M02_AXI_buser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_39->M02_AXI_buser.bind(*p_39_M02_AXI_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M02_AXI_buser);
        xsim_sc_channel<0, bool > *p_39_M02_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->M02_AXI_bvalid.bind(*p_39_M02_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M02_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_39_M02_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_39->M02_AXI_bready.bind(*p_39_M02_AXI_bready);
        p_39_M02_AXI_bready->set_sv_netview_offsetfromdp(9863776);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_39_M02_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_39->M02_AXI_arid.bind(*p_39_M02_AXI_arid);
        p_39_M02_AXI_arid->set_sv_netview_offsetfromdp(9863832);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_39_M02_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_39->M02_AXI_araddr.bind(*p_39_M02_AXI_araddr);
        p_39_M02_AXI_araddr->set_sv_netview_offsetfromdp(9863888);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_39_M02_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_39->M02_AXI_arlen.bind(*p_39_M02_AXI_arlen);
        p_39_M02_AXI_arlen->set_sv_netview_offsetfromdp(9863944);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_39_M02_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_39->M02_AXI_arsize.bind(*p_39_M02_AXI_arsize);
        p_39_M02_AXI_arsize->set_sv_netview_offsetfromdp(9864000);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_39_M02_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_39->M02_AXI_arburst.bind(*p_39_M02_AXI_arburst);
        p_39_M02_AXI_arburst->set_sv_netview_offsetfromdp(9864056);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_39_M02_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_39->M02_AXI_arlock.bind(*p_39_M02_AXI_arlock);
        p_39_M02_AXI_arlock->set_sv_netview_offsetfromdp(9864112);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_39_M02_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_39->M02_AXI_arcache.bind(*p_39_M02_AXI_arcache);
        p_39_M02_AXI_arcache->set_sv_netview_offsetfromdp(9864168);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_39_M02_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_39->M02_AXI_arprot.bind(*p_39_M02_AXI_arprot);
        p_39_M02_AXI_arprot->set_sv_netview_offsetfromdp(9864224);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_39_M02_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_39->M02_AXI_arqos.bind(*p_39_M02_AXI_arqos);
        p_39_M02_AXI_arqos->set_sv_netview_offsetfromdp(9864280);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_39_M02_AXI_aruser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_39->M02_AXI_aruser.bind(*p_39_M02_AXI_aruser);
        p_39_M02_AXI_aruser->set_sv_netview_offsetfromdp(9864336);
        xsim_sc_channel<0, bool > *p_39_M02_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->M02_AXI_arvalid.bind(*p_39_M02_AXI_arvalid);
        p_39_M02_AXI_arvalid->set_sv_netview_offsetfromdp(9864392);
        xsim_sc_channel<0, bool > *p_39_M02_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_39->M02_AXI_arready.bind(*p_39_M02_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M02_AXI_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_39_M02_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_39->M02_AXI_rid.bind(*p_39_M02_AXI_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M02_AXI_rid);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_39_M02_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_39->M02_AXI_rdata.bind(*p_39_M02_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M02_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_39_M02_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_39->M02_AXI_rresp.bind(*p_39_M02_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M02_AXI_rresp);
        xsim_sc_channel<0, bool > *p_39_M02_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_39->M02_AXI_rlast.bind(*p_39_M02_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M02_AXI_rlast);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_39_M02_AXI_ruser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_39->M02_AXI_ruser.bind(*p_39_M02_AXI_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M02_AXI_ruser);
        xsim_sc_channel<0, bool > *p_39_M02_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->M02_AXI_rvalid.bind(*p_39_M02_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M02_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_39_M02_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_39->M02_AXI_rready.bind(*p_39_M02_AXI_rready);
        p_39_M02_AXI_rready->set_sv_netview_offsetfromdp(9864840);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_39_M03_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_39->M03_AXI_awid.bind(*p_39_M03_AXI_awid);
        p_39_M03_AXI_awid->set_sv_netview_offsetfromdp(9864896);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_39_M03_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_39->M03_AXI_awaddr.bind(*p_39_M03_AXI_awaddr);
        p_39_M03_AXI_awaddr->set_sv_netview_offsetfromdp(9864952);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_39_M03_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_39->M03_AXI_awlen.bind(*p_39_M03_AXI_awlen);
        p_39_M03_AXI_awlen->set_sv_netview_offsetfromdp(9865008);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_39_M03_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_39->M03_AXI_awsize.bind(*p_39_M03_AXI_awsize);
        p_39_M03_AXI_awsize->set_sv_netview_offsetfromdp(9865064);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_39_M03_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_39->M03_AXI_awburst.bind(*p_39_M03_AXI_awburst);
        p_39_M03_AXI_awburst->set_sv_netview_offsetfromdp(9865120);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_39_M03_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_39->M03_AXI_awlock.bind(*p_39_M03_AXI_awlock);
        p_39_M03_AXI_awlock->set_sv_netview_offsetfromdp(9865176);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_39_M03_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_39->M03_AXI_awcache.bind(*p_39_M03_AXI_awcache);
        p_39_M03_AXI_awcache->set_sv_netview_offsetfromdp(9865232);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_39_M03_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_39->M03_AXI_awprot.bind(*p_39_M03_AXI_awprot);
        p_39_M03_AXI_awprot->set_sv_netview_offsetfromdp(9865288);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_39_M03_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_39->M03_AXI_awqos.bind(*p_39_M03_AXI_awqos);
        p_39_M03_AXI_awqos->set_sv_netview_offsetfromdp(9865344);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_39_M03_AXI_awuser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_39->M03_AXI_awuser.bind(*p_39_M03_AXI_awuser);
        p_39_M03_AXI_awuser->set_sv_netview_offsetfromdp(9865400);
        xsim_sc_channel<0, bool > *p_39_M03_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->M03_AXI_awvalid.bind(*p_39_M03_AXI_awvalid);
        p_39_M03_AXI_awvalid->set_sv_netview_offsetfromdp(9865456);
        xsim_sc_channel<0, bool > *p_39_M03_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_39->M03_AXI_awready.bind(*p_39_M03_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M03_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_39_M03_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_39->M03_AXI_wdata.bind(*p_39_M03_AXI_wdata);
        p_39_M03_AXI_wdata->set_sv_netview_offsetfromdp(9865568);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_39_M03_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_39->M03_AXI_wstrb.bind(*p_39_M03_AXI_wstrb);
        p_39_M03_AXI_wstrb->set_sv_netview_offsetfromdp(9865624);
        xsim_sc_channel<0, bool > *p_39_M03_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_39->M03_AXI_wlast.bind(*p_39_M03_AXI_wlast);
        p_39_M03_AXI_wlast->set_sv_netview_offsetfromdp(9865680);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_39_M03_AXI_wuser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_39->M03_AXI_wuser.bind(*p_39_M03_AXI_wuser);
        p_39_M03_AXI_wuser->set_sv_netview_offsetfromdp(9865736);
        xsim_sc_channel<0, bool > *p_39_M03_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->M03_AXI_wvalid.bind(*p_39_M03_AXI_wvalid);
        p_39_M03_AXI_wvalid->set_sv_netview_offsetfromdp(9865792);
        xsim_sc_channel<0, bool > *p_39_M03_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_39->M03_AXI_wready.bind(*p_39_M03_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M03_AXI_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_39_M03_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_39->M03_AXI_bid.bind(*p_39_M03_AXI_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M03_AXI_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_39_M03_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_39->M03_AXI_bresp.bind(*p_39_M03_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M03_AXI_bresp);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_39_M03_AXI_buser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_39->M03_AXI_buser.bind(*p_39_M03_AXI_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M03_AXI_buser);
        xsim_sc_channel<0, bool > *p_39_M03_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->M03_AXI_bvalid.bind(*p_39_M03_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M03_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_39_M03_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_39->M03_AXI_bready.bind(*p_39_M03_AXI_bready);
        p_39_M03_AXI_bready->set_sv_netview_offsetfromdp(9866128);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_39_M03_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_39->M03_AXI_arid.bind(*p_39_M03_AXI_arid);
        p_39_M03_AXI_arid->set_sv_netview_offsetfromdp(9866184);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_39_M03_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_39->M03_AXI_araddr.bind(*p_39_M03_AXI_araddr);
        p_39_M03_AXI_araddr->set_sv_netview_offsetfromdp(9866240);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_39_M03_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_39->M03_AXI_arlen.bind(*p_39_M03_AXI_arlen);
        p_39_M03_AXI_arlen->set_sv_netview_offsetfromdp(9866296);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_39_M03_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_39->M03_AXI_arsize.bind(*p_39_M03_AXI_arsize);
        p_39_M03_AXI_arsize->set_sv_netview_offsetfromdp(9866352);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_39_M03_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_39->M03_AXI_arburst.bind(*p_39_M03_AXI_arburst);
        p_39_M03_AXI_arburst->set_sv_netview_offsetfromdp(9866408);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_39_M03_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_39->M03_AXI_arlock.bind(*p_39_M03_AXI_arlock);
        p_39_M03_AXI_arlock->set_sv_netview_offsetfromdp(9866464);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_39_M03_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_39->M03_AXI_arcache.bind(*p_39_M03_AXI_arcache);
        p_39_M03_AXI_arcache->set_sv_netview_offsetfromdp(9866520);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_39_M03_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_39->M03_AXI_arprot.bind(*p_39_M03_AXI_arprot);
        p_39_M03_AXI_arprot->set_sv_netview_offsetfromdp(9866576);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_39_M03_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_39->M03_AXI_arqos.bind(*p_39_M03_AXI_arqos);
        p_39_M03_AXI_arqos->set_sv_netview_offsetfromdp(9866632);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_39_M03_AXI_aruser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_39->M03_AXI_aruser.bind(*p_39_M03_AXI_aruser);
        p_39_M03_AXI_aruser->set_sv_netview_offsetfromdp(9866688);
        xsim_sc_channel<0, bool > *p_39_M03_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->M03_AXI_arvalid.bind(*p_39_M03_AXI_arvalid);
        p_39_M03_AXI_arvalid->set_sv_netview_offsetfromdp(9866744);
        xsim_sc_channel<0, bool > *p_39_M03_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_39->M03_AXI_arready.bind(*p_39_M03_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M03_AXI_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_39_M03_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_39->M03_AXI_rid.bind(*p_39_M03_AXI_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M03_AXI_rid);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_39_M03_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_39->M03_AXI_rdata.bind(*p_39_M03_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M03_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_39_M03_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_39->M03_AXI_rresp.bind(*p_39_M03_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M03_AXI_rresp);
        xsim_sc_channel<0, bool > *p_39_M03_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_39->M03_AXI_rlast.bind(*p_39_M03_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M03_AXI_rlast);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_39_M03_AXI_ruser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_39->M03_AXI_ruser.bind(*p_39_M03_AXI_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M03_AXI_ruser);
        xsim_sc_channel<0, bool > *p_39_M03_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->M03_AXI_rvalid.bind(*p_39_M03_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M03_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_39_M03_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_39->M03_AXI_rready.bind(*p_39_M03_AXI_rready);
        p_39_M03_AXI_rready->set_sv_netview_offsetfromdp(9867192);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_39_M04_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_39->M04_AXI_awid.bind(*p_39_M04_AXI_awid);
        p_39_M04_AXI_awid->set_sv_netview_offsetfromdp(9867248);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_39_M04_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_39->M04_AXI_awaddr.bind(*p_39_M04_AXI_awaddr);
        p_39_M04_AXI_awaddr->set_sv_netview_offsetfromdp(9867304);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_39_M04_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_39->M04_AXI_awlen.bind(*p_39_M04_AXI_awlen);
        p_39_M04_AXI_awlen->set_sv_netview_offsetfromdp(9867360);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_39_M04_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_39->M04_AXI_awsize.bind(*p_39_M04_AXI_awsize);
        p_39_M04_AXI_awsize->set_sv_netview_offsetfromdp(9867416);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_39_M04_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_39->M04_AXI_awburst.bind(*p_39_M04_AXI_awburst);
        p_39_M04_AXI_awburst->set_sv_netview_offsetfromdp(9867472);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_39_M04_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_39->M04_AXI_awlock.bind(*p_39_M04_AXI_awlock);
        p_39_M04_AXI_awlock->set_sv_netview_offsetfromdp(9867528);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_39_M04_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_39->M04_AXI_awcache.bind(*p_39_M04_AXI_awcache);
        p_39_M04_AXI_awcache->set_sv_netview_offsetfromdp(9867584);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_39_M04_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_39->M04_AXI_awprot.bind(*p_39_M04_AXI_awprot);
        p_39_M04_AXI_awprot->set_sv_netview_offsetfromdp(9867640);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_39_M04_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_39->M04_AXI_awqos.bind(*p_39_M04_AXI_awqos);
        p_39_M04_AXI_awqos->set_sv_netview_offsetfromdp(9867696);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_39_M04_AXI_awuser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_39->M04_AXI_awuser.bind(*p_39_M04_AXI_awuser);
        p_39_M04_AXI_awuser->set_sv_netview_offsetfromdp(9867752);
        xsim_sc_channel<0, bool > *p_39_M04_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->M04_AXI_awvalid.bind(*p_39_M04_AXI_awvalid);
        p_39_M04_AXI_awvalid->set_sv_netview_offsetfromdp(9867808);
        xsim_sc_channel<0, bool > *p_39_M04_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_39->M04_AXI_awready.bind(*p_39_M04_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M04_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_39_M04_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_39->M04_AXI_wdata.bind(*p_39_M04_AXI_wdata);
        p_39_M04_AXI_wdata->set_sv_netview_offsetfromdp(9867920);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_39_M04_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_39->M04_AXI_wstrb.bind(*p_39_M04_AXI_wstrb);
        p_39_M04_AXI_wstrb->set_sv_netview_offsetfromdp(9867976);
        xsim_sc_channel<0, bool > *p_39_M04_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_39->M04_AXI_wlast.bind(*p_39_M04_AXI_wlast);
        p_39_M04_AXI_wlast->set_sv_netview_offsetfromdp(9868032);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_39_M04_AXI_wuser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_39->M04_AXI_wuser.bind(*p_39_M04_AXI_wuser);
        p_39_M04_AXI_wuser->set_sv_netview_offsetfromdp(9868088);
        xsim_sc_channel<0, bool > *p_39_M04_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->M04_AXI_wvalid.bind(*p_39_M04_AXI_wvalid);
        p_39_M04_AXI_wvalid->set_sv_netview_offsetfromdp(9868144);
        xsim_sc_channel<0, bool > *p_39_M04_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_39->M04_AXI_wready.bind(*p_39_M04_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M04_AXI_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_39_M04_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_39->M04_AXI_bid.bind(*p_39_M04_AXI_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M04_AXI_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_39_M04_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_39->M04_AXI_bresp.bind(*p_39_M04_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M04_AXI_bresp);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_39_M04_AXI_buser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_39->M04_AXI_buser.bind(*p_39_M04_AXI_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M04_AXI_buser);
        xsim_sc_channel<0, bool > *p_39_M04_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->M04_AXI_bvalid.bind(*p_39_M04_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M04_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_39_M04_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_39->M04_AXI_bready.bind(*p_39_M04_AXI_bready);
        p_39_M04_AXI_bready->set_sv_netview_offsetfromdp(9868480);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_39_M04_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_39->M04_AXI_arid.bind(*p_39_M04_AXI_arid);
        p_39_M04_AXI_arid->set_sv_netview_offsetfromdp(9868536);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_39_M04_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_39->M04_AXI_araddr.bind(*p_39_M04_AXI_araddr);
        p_39_M04_AXI_araddr->set_sv_netview_offsetfromdp(9868592);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_39_M04_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_39->M04_AXI_arlen.bind(*p_39_M04_AXI_arlen);
        p_39_M04_AXI_arlen->set_sv_netview_offsetfromdp(9868648);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_39_M04_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_39->M04_AXI_arsize.bind(*p_39_M04_AXI_arsize);
        p_39_M04_AXI_arsize->set_sv_netview_offsetfromdp(9868704);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_39_M04_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_39->M04_AXI_arburst.bind(*p_39_M04_AXI_arburst);
        p_39_M04_AXI_arburst->set_sv_netview_offsetfromdp(9868760);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_39_M04_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_39->M04_AXI_arlock.bind(*p_39_M04_AXI_arlock);
        p_39_M04_AXI_arlock->set_sv_netview_offsetfromdp(9868816);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_39_M04_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_39->M04_AXI_arcache.bind(*p_39_M04_AXI_arcache);
        p_39_M04_AXI_arcache->set_sv_netview_offsetfromdp(9868872);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_39_M04_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_39->M04_AXI_arprot.bind(*p_39_M04_AXI_arprot);
        p_39_M04_AXI_arprot->set_sv_netview_offsetfromdp(9868928);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_39_M04_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_39->M04_AXI_arqos.bind(*p_39_M04_AXI_arqos);
        p_39_M04_AXI_arqos->set_sv_netview_offsetfromdp(9868984);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_39_M04_AXI_aruser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_39->M04_AXI_aruser.bind(*p_39_M04_AXI_aruser);
        p_39_M04_AXI_aruser->set_sv_netview_offsetfromdp(9869040);
        xsim_sc_channel<0, bool > *p_39_M04_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->M04_AXI_arvalid.bind(*p_39_M04_AXI_arvalid);
        p_39_M04_AXI_arvalid->set_sv_netview_offsetfromdp(9869096);
        xsim_sc_channel<0, bool > *p_39_M04_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_39->M04_AXI_arready.bind(*p_39_M04_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M04_AXI_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_39_M04_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_39->M04_AXI_rid.bind(*p_39_M04_AXI_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M04_AXI_rid);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_39_M04_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_39->M04_AXI_rdata.bind(*p_39_M04_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M04_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_39_M04_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_39->M04_AXI_rresp.bind(*p_39_M04_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M04_AXI_rresp);
        xsim_sc_channel<0, bool > *p_39_M04_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_39->M04_AXI_rlast.bind(*p_39_M04_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M04_AXI_rlast);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_39_M04_AXI_ruser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_39->M04_AXI_ruser.bind(*p_39_M04_AXI_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M04_AXI_ruser);
        xsim_sc_channel<0, bool > *p_39_M04_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->M04_AXI_rvalid.bind(*p_39_M04_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M04_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_39_M04_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_39->M04_AXI_rready.bind(*p_39_M04_AXI_rready);
        p_39_M04_AXI_rready->set_sv_netview_offsetfromdp(9869544);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_39_M05_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_39->M05_AXI_awid.bind(*p_39_M05_AXI_awid);
        p_39_M05_AXI_awid->set_sv_netview_offsetfromdp(9869600);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_39_M05_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_39->M05_AXI_awaddr.bind(*p_39_M05_AXI_awaddr);
        p_39_M05_AXI_awaddr->set_sv_netview_offsetfromdp(9869656);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_39_M05_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_39->M05_AXI_awlen.bind(*p_39_M05_AXI_awlen);
        p_39_M05_AXI_awlen->set_sv_netview_offsetfromdp(9869712);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_39_M05_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_39->M05_AXI_awsize.bind(*p_39_M05_AXI_awsize);
        p_39_M05_AXI_awsize->set_sv_netview_offsetfromdp(9869768);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_39_M05_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_39->M05_AXI_awburst.bind(*p_39_M05_AXI_awburst);
        p_39_M05_AXI_awburst->set_sv_netview_offsetfromdp(9869824);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_39_M05_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_39->M05_AXI_awlock.bind(*p_39_M05_AXI_awlock);
        p_39_M05_AXI_awlock->set_sv_netview_offsetfromdp(9869880);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_39_M05_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_39->M05_AXI_awcache.bind(*p_39_M05_AXI_awcache);
        p_39_M05_AXI_awcache->set_sv_netview_offsetfromdp(9869936);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_39_M05_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_39->M05_AXI_awprot.bind(*p_39_M05_AXI_awprot);
        p_39_M05_AXI_awprot->set_sv_netview_offsetfromdp(9869992);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_39_M05_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_39->M05_AXI_awqos.bind(*p_39_M05_AXI_awqos);
        p_39_M05_AXI_awqos->set_sv_netview_offsetfromdp(9870048);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_39_M05_AXI_awuser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_39->M05_AXI_awuser.bind(*p_39_M05_AXI_awuser);
        p_39_M05_AXI_awuser->set_sv_netview_offsetfromdp(9870104);
        xsim_sc_channel<0, bool > *p_39_M05_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->M05_AXI_awvalid.bind(*p_39_M05_AXI_awvalid);
        p_39_M05_AXI_awvalid->set_sv_netview_offsetfromdp(9870160);
        xsim_sc_channel<0, bool > *p_39_M05_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_39->M05_AXI_awready.bind(*p_39_M05_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M05_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_39_M05_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_39->M05_AXI_wdata.bind(*p_39_M05_AXI_wdata);
        p_39_M05_AXI_wdata->set_sv_netview_offsetfromdp(9870272);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_39_M05_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_39->M05_AXI_wstrb.bind(*p_39_M05_AXI_wstrb);
        p_39_M05_AXI_wstrb->set_sv_netview_offsetfromdp(9870328);
        xsim_sc_channel<0, bool > *p_39_M05_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_39->M05_AXI_wlast.bind(*p_39_M05_AXI_wlast);
        p_39_M05_AXI_wlast->set_sv_netview_offsetfromdp(9870384);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_39_M05_AXI_wuser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_39->M05_AXI_wuser.bind(*p_39_M05_AXI_wuser);
        p_39_M05_AXI_wuser->set_sv_netview_offsetfromdp(9870440);
        xsim_sc_channel<0, bool > *p_39_M05_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->M05_AXI_wvalid.bind(*p_39_M05_AXI_wvalid);
        p_39_M05_AXI_wvalid->set_sv_netview_offsetfromdp(9870496);
        xsim_sc_channel<0, bool > *p_39_M05_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_39->M05_AXI_wready.bind(*p_39_M05_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M05_AXI_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_39_M05_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_39->M05_AXI_bid.bind(*p_39_M05_AXI_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M05_AXI_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_39_M05_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_39->M05_AXI_bresp.bind(*p_39_M05_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M05_AXI_bresp);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_39_M05_AXI_buser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_39->M05_AXI_buser.bind(*p_39_M05_AXI_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M05_AXI_buser);
        xsim_sc_channel<0, bool > *p_39_M05_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->M05_AXI_bvalid.bind(*p_39_M05_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M05_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_39_M05_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_39->M05_AXI_bready.bind(*p_39_M05_AXI_bready);
        p_39_M05_AXI_bready->set_sv_netview_offsetfromdp(9870832);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_39_M05_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_39->M05_AXI_arid.bind(*p_39_M05_AXI_arid);
        p_39_M05_AXI_arid->set_sv_netview_offsetfromdp(9870888);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_39_M05_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_39->M05_AXI_araddr.bind(*p_39_M05_AXI_araddr);
        p_39_M05_AXI_araddr->set_sv_netview_offsetfromdp(9870944);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_39_M05_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_39->M05_AXI_arlen.bind(*p_39_M05_AXI_arlen);
        p_39_M05_AXI_arlen->set_sv_netview_offsetfromdp(9871000);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_39_M05_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_39->M05_AXI_arsize.bind(*p_39_M05_AXI_arsize);
        p_39_M05_AXI_arsize->set_sv_netview_offsetfromdp(9871056);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_39_M05_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_39->M05_AXI_arburst.bind(*p_39_M05_AXI_arburst);
        p_39_M05_AXI_arburst->set_sv_netview_offsetfromdp(9871112);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_39_M05_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_39->M05_AXI_arlock.bind(*p_39_M05_AXI_arlock);
        p_39_M05_AXI_arlock->set_sv_netview_offsetfromdp(9871168);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_39_M05_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_39->M05_AXI_arcache.bind(*p_39_M05_AXI_arcache);
        p_39_M05_AXI_arcache->set_sv_netview_offsetfromdp(9871224);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_39_M05_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_39->M05_AXI_arprot.bind(*p_39_M05_AXI_arprot);
        p_39_M05_AXI_arprot->set_sv_netview_offsetfromdp(9871280);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_39_M05_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_39->M05_AXI_arqos.bind(*p_39_M05_AXI_arqos);
        p_39_M05_AXI_arqos->set_sv_netview_offsetfromdp(9871336);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_39_M05_AXI_aruser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_39->M05_AXI_aruser.bind(*p_39_M05_AXI_aruser);
        p_39_M05_AXI_aruser->set_sv_netview_offsetfromdp(9871392);
        xsim_sc_channel<0, bool > *p_39_M05_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->M05_AXI_arvalid.bind(*p_39_M05_AXI_arvalid);
        p_39_M05_AXI_arvalid->set_sv_netview_offsetfromdp(9871448);
        xsim_sc_channel<0, bool > *p_39_M05_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_39->M05_AXI_arready.bind(*p_39_M05_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M05_AXI_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_39_M05_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_39->M05_AXI_rid.bind(*p_39_M05_AXI_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M05_AXI_rid);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_39_M05_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_39->M05_AXI_rdata.bind(*p_39_M05_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M05_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_39_M05_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_39->M05_AXI_rresp.bind(*p_39_M05_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M05_AXI_rresp);
        xsim_sc_channel<0, bool > *p_39_M05_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_39->M05_AXI_rlast.bind(*p_39_M05_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M05_AXI_rlast);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_39_M05_AXI_ruser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_39->M05_AXI_ruser.bind(*p_39_M05_AXI_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M05_AXI_ruser);
        xsim_sc_channel<0, bool > *p_39_M05_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->M05_AXI_rvalid.bind(*p_39_M05_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M05_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_39_M05_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_39->M05_AXI_rready.bind(*p_39_M05_AXI_rready);
        p_39_M05_AXI_rready->set_sv_netview_offsetfromdp(9871896);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_39_M06_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_39->M06_AXI_awid.bind(*p_39_M06_AXI_awid);
        p_39_M06_AXI_awid->set_sv_netview_offsetfromdp(9871952);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_39_M06_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_39->M06_AXI_awaddr.bind(*p_39_M06_AXI_awaddr);
        p_39_M06_AXI_awaddr->set_sv_netview_offsetfromdp(9872008);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_39_M06_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_39->M06_AXI_awlen.bind(*p_39_M06_AXI_awlen);
        p_39_M06_AXI_awlen->set_sv_netview_offsetfromdp(9872064);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_39_M06_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_39->M06_AXI_awsize.bind(*p_39_M06_AXI_awsize);
        p_39_M06_AXI_awsize->set_sv_netview_offsetfromdp(9872120);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_39_M06_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_39->M06_AXI_awburst.bind(*p_39_M06_AXI_awburst);
        p_39_M06_AXI_awburst->set_sv_netview_offsetfromdp(9872176);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_39_M06_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_39->M06_AXI_awlock.bind(*p_39_M06_AXI_awlock);
        p_39_M06_AXI_awlock->set_sv_netview_offsetfromdp(9872232);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_39_M06_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_39->M06_AXI_awcache.bind(*p_39_M06_AXI_awcache);
        p_39_M06_AXI_awcache->set_sv_netview_offsetfromdp(9872288);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_39_M06_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_39->M06_AXI_awprot.bind(*p_39_M06_AXI_awprot);
        p_39_M06_AXI_awprot->set_sv_netview_offsetfromdp(9872344);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_39_M06_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_39->M06_AXI_awqos.bind(*p_39_M06_AXI_awqos);
        p_39_M06_AXI_awqos->set_sv_netview_offsetfromdp(9872400);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_39_M06_AXI_awuser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_39->M06_AXI_awuser.bind(*p_39_M06_AXI_awuser);
        p_39_M06_AXI_awuser->set_sv_netview_offsetfromdp(9872456);
        xsim_sc_channel<0, bool > *p_39_M06_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->M06_AXI_awvalid.bind(*p_39_M06_AXI_awvalid);
        p_39_M06_AXI_awvalid->set_sv_netview_offsetfromdp(9872512);
        xsim_sc_channel<0, bool > *p_39_M06_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_39->M06_AXI_awready.bind(*p_39_M06_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M06_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_39_M06_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_39->M06_AXI_wdata.bind(*p_39_M06_AXI_wdata);
        p_39_M06_AXI_wdata->set_sv_netview_offsetfromdp(9872624);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_39_M06_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_39->M06_AXI_wstrb.bind(*p_39_M06_AXI_wstrb);
        p_39_M06_AXI_wstrb->set_sv_netview_offsetfromdp(9872680);
        xsim_sc_channel<0, bool > *p_39_M06_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_39->M06_AXI_wlast.bind(*p_39_M06_AXI_wlast);
        p_39_M06_AXI_wlast->set_sv_netview_offsetfromdp(9872736);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_39_M06_AXI_wuser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_39->M06_AXI_wuser.bind(*p_39_M06_AXI_wuser);
        p_39_M06_AXI_wuser->set_sv_netview_offsetfromdp(9872792);
        xsim_sc_channel<0, bool > *p_39_M06_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->M06_AXI_wvalid.bind(*p_39_M06_AXI_wvalid);
        p_39_M06_AXI_wvalid->set_sv_netview_offsetfromdp(9872848);
        xsim_sc_channel<0, bool > *p_39_M06_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_39->M06_AXI_wready.bind(*p_39_M06_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M06_AXI_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_39_M06_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_39->M06_AXI_bid.bind(*p_39_M06_AXI_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M06_AXI_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_39_M06_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_39->M06_AXI_bresp.bind(*p_39_M06_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M06_AXI_bresp);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_39_M06_AXI_buser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_39->M06_AXI_buser.bind(*p_39_M06_AXI_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M06_AXI_buser);
        xsim_sc_channel<0, bool > *p_39_M06_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->M06_AXI_bvalid.bind(*p_39_M06_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M06_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_39_M06_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_39->M06_AXI_bready.bind(*p_39_M06_AXI_bready);
        p_39_M06_AXI_bready->set_sv_netview_offsetfromdp(9873184);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_39_M06_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_39->M06_AXI_arid.bind(*p_39_M06_AXI_arid);
        p_39_M06_AXI_arid->set_sv_netview_offsetfromdp(9873240);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_39_M06_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_39->M06_AXI_araddr.bind(*p_39_M06_AXI_araddr);
        p_39_M06_AXI_araddr->set_sv_netview_offsetfromdp(9873296);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_39_M06_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_39->M06_AXI_arlen.bind(*p_39_M06_AXI_arlen);
        p_39_M06_AXI_arlen->set_sv_netview_offsetfromdp(9873352);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_39_M06_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_39->M06_AXI_arsize.bind(*p_39_M06_AXI_arsize);
        p_39_M06_AXI_arsize->set_sv_netview_offsetfromdp(9873408);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_39_M06_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_39->M06_AXI_arburst.bind(*p_39_M06_AXI_arburst);
        p_39_M06_AXI_arburst->set_sv_netview_offsetfromdp(9873464);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_39_M06_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_39->M06_AXI_arlock.bind(*p_39_M06_AXI_arlock);
        p_39_M06_AXI_arlock->set_sv_netview_offsetfromdp(9873520);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_39_M06_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_39->M06_AXI_arcache.bind(*p_39_M06_AXI_arcache);
        p_39_M06_AXI_arcache->set_sv_netview_offsetfromdp(9873576);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_39_M06_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_39->M06_AXI_arprot.bind(*p_39_M06_AXI_arprot);
        p_39_M06_AXI_arprot->set_sv_netview_offsetfromdp(9873632);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_39_M06_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_39->M06_AXI_arqos.bind(*p_39_M06_AXI_arqos);
        p_39_M06_AXI_arqos->set_sv_netview_offsetfromdp(9873688);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_39_M06_AXI_aruser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_39->M06_AXI_aruser.bind(*p_39_M06_AXI_aruser);
        p_39_M06_AXI_aruser->set_sv_netview_offsetfromdp(9873744);
        xsim_sc_channel<0, bool > *p_39_M06_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->M06_AXI_arvalid.bind(*p_39_M06_AXI_arvalid);
        p_39_M06_AXI_arvalid->set_sv_netview_offsetfromdp(9873800);
        xsim_sc_channel<0, bool > *p_39_M06_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_39->M06_AXI_arready.bind(*p_39_M06_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M06_AXI_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_39_M06_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_39->M06_AXI_rid.bind(*p_39_M06_AXI_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M06_AXI_rid);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_39_M06_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_39->M06_AXI_rdata.bind(*p_39_M06_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M06_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_39_M06_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_39->M06_AXI_rresp.bind(*p_39_M06_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M06_AXI_rresp);
        xsim_sc_channel<0, bool > *p_39_M06_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_39->M06_AXI_rlast.bind(*p_39_M06_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M06_AXI_rlast);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_39_M06_AXI_ruser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_39->M06_AXI_ruser.bind(*p_39_M06_AXI_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M06_AXI_ruser);
        xsim_sc_channel<0, bool > *p_39_M06_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->M06_AXI_rvalid.bind(*p_39_M06_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M06_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_39_M06_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_39->M06_AXI_rready.bind(*p_39_M06_AXI_rready);
        p_39_M06_AXI_rready->set_sv_netview_offsetfromdp(9874248);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_39_M07_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_39->M07_AXI_awid.bind(*p_39_M07_AXI_awid);
        p_39_M07_AXI_awid->set_sv_netview_offsetfromdp(9874304);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_39_M07_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_39->M07_AXI_awaddr.bind(*p_39_M07_AXI_awaddr);
        p_39_M07_AXI_awaddr->set_sv_netview_offsetfromdp(9874360);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_39_M07_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_39->M07_AXI_awlen.bind(*p_39_M07_AXI_awlen);
        p_39_M07_AXI_awlen->set_sv_netview_offsetfromdp(9874416);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_39_M07_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_39->M07_AXI_awsize.bind(*p_39_M07_AXI_awsize);
        p_39_M07_AXI_awsize->set_sv_netview_offsetfromdp(9874472);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_39_M07_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_39->M07_AXI_awburst.bind(*p_39_M07_AXI_awburst);
        p_39_M07_AXI_awburst->set_sv_netview_offsetfromdp(9874528);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_39_M07_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_39->M07_AXI_awlock.bind(*p_39_M07_AXI_awlock);
        p_39_M07_AXI_awlock->set_sv_netview_offsetfromdp(9874584);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_39_M07_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_39->M07_AXI_awcache.bind(*p_39_M07_AXI_awcache);
        p_39_M07_AXI_awcache->set_sv_netview_offsetfromdp(9874640);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_39_M07_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_39->M07_AXI_awprot.bind(*p_39_M07_AXI_awprot);
        p_39_M07_AXI_awprot->set_sv_netview_offsetfromdp(9874696);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_39_M07_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_39->M07_AXI_awqos.bind(*p_39_M07_AXI_awqos);
        p_39_M07_AXI_awqos->set_sv_netview_offsetfromdp(9874752);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_39_M07_AXI_awuser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_39->M07_AXI_awuser.bind(*p_39_M07_AXI_awuser);
        p_39_M07_AXI_awuser->set_sv_netview_offsetfromdp(9874808);
        xsim_sc_channel<0, bool > *p_39_M07_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->M07_AXI_awvalid.bind(*p_39_M07_AXI_awvalid);
        p_39_M07_AXI_awvalid->set_sv_netview_offsetfromdp(9874864);
        xsim_sc_channel<0, bool > *p_39_M07_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_39->M07_AXI_awready.bind(*p_39_M07_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M07_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_39_M07_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_39->M07_AXI_wdata.bind(*p_39_M07_AXI_wdata);
        p_39_M07_AXI_wdata->set_sv_netview_offsetfromdp(9874976);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_39_M07_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_39->M07_AXI_wstrb.bind(*p_39_M07_AXI_wstrb);
        p_39_M07_AXI_wstrb->set_sv_netview_offsetfromdp(9875032);
        xsim_sc_channel<0, bool > *p_39_M07_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_39->M07_AXI_wlast.bind(*p_39_M07_AXI_wlast);
        p_39_M07_AXI_wlast->set_sv_netview_offsetfromdp(9875088);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_39_M07_AXI_wuser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_39->M07_AXI_wuser.bind(*p_39_M07_AXI_wuser);
        p_39_M07_AXI_wuser->set_sv_netview_offsetfromdp(9875144);
        xsim_sc_channel<0, bool > *p_39_M07_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->M07_AXI_wvalid.bind(*p_39_M07_AXI_wvalid);
        p_39_M07_AXI_wvalid->set_sv_netview_offsetfromdp(9875200);
        xsim_sc_channel<0, bool > *p_39_M07_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_39->M07_AXI_wready.bind(*p_39_M07_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M07_AXI_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_39_M07_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_39->M07_AXI_bid.bind(*p_39_M07_AXI_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M07_AXI_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_39_M07_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_39->M07_AXI_bresp.bind(*p_39_M07_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M07_AXI_bresp);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_39_M07_AXI_buser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_39->M07_AXI_buser.bind(*p_39_M07_AXI_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M07_AXI_buser);
        xsim_sc_channel<0, bool > *p_39_M07_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->M07_AXI_bvalid.bind(*p_39_M07_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M07_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_39_M07_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_39->M07_AXI_bready.bind(*p_39_M07_AXI_bready);
        p_39_M07_AXI_bready->set_sv_netview_offsetfromdp(9875536);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_39_M07_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_39->M07_AXI_arid.bind(*p_39_M07_AXI_arid);
        p_39_M07_AXI_arid->set_sv_netview_offsetfromdp(9875592);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_39_M07_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_39->M07_AXI_araddr.bind(*p_39_M07_AXI_araddr);
        p_39_M07_AXI_araddr->set_sv_netview_offsetfromdp(9875648);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_39_M07_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_39->M07_AXI_arlen.bind(*p_39_M07_AXI_arlen);
        p_39_M07_AXI_arlen->set_sv_netview_offsetfromdp(9875704);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_39_M07_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_39->M07_AXI_arsize.bind(*p_39_M07_AXI_arsize);
        p_39_M07_AXI_arsize->set_sv_netview_offsetfromdp(9875760);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_39_M07_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_39->M07_AXI_arburst.bind(*p_39_M07_AXI_arburst);
        p_39_M07_AXI_arburst->set_sv_netview_offsetfromdp(9875816);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_39_M07_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_39->M07_AXI_arlock.bind(*p_39_M07_AXI_arlock);
        p_39_M07_AXI_arlock->set_sv_netview_offsetfromdp(9875872);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_39_M07_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_39->M07_AXI_arcache.bind(*p_39_M07_AXI_arcache);
        p_39_M07_AXI_arcache->set_sv_netview_offsetfromdp(9875928);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_39_M07_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_39->M07_AXI_arprot.bind(*p_39_M07_AXI_arprot);
        p_39_M07_AXI_arprot->set_sv_netview_offsetfromdp(9875984);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_39_M07_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_39->M07_AXI_arqos.bind(*p_39_M07_AXI_arqos);
        p_39_M07_AXI_arqos->set_sv_netview_offsetfromdp(9876040);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_39_M07_AXI_aruser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_39->M07_AXI_aruser.bind(*p_39_M07_AXI_aruser);
        p_39_M07_AXI_aruser->set_sv_netview_offsetfromdp(9876096);
        xsim_sc_channel<0, bool > *p_39_M07_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->M07_AXI_arvalid.bind(*p_39_M07_AXI_arvalid);
        p_39_M07_AXI_arvalid->set_sv_netview_offsetfromdp(9876152);
        xsim_sc_channel<0, bool > *p_39_M07_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_39->M07_AXI_arready.bind(*p_39_M07_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M07_AXI_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_39_M07_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_39->M07_AXI_rid.bind(*p_39_M07_AXI_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M07_AXI_rid);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_39_M07_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_39->M07_AXI_rdata.bind(*p_39_M07_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M07_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_39_M07_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_39->M07_AXI_rresp.bind(*p_39_M07_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M07_AXI_rresp);
        xsim_sc_channel<0, bool > *p_39_M07_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_39->M07_AXI_rlast.bind(*p_39_M07_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M07_AXI_rlast);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_39_M07_AXI_ruser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_39->M07_AXI_ruser.bind(*p_39_M07_AXI_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M07_AXI_ruser);
        xsim_sc_channel<0, bool > *p_39_M07_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->M07_AXI_rvalid.bind(*p_39_M07_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M07_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_39_M07_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_39->M07_AXI_rready.bind(*p_39_M07_AXI_rready);
        p_39_M07_AXI_rready->set_sv_netview_offsetfromdp(9876600);
        sc_inst_40 = new bd_d216_rs_M00_AXI_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.interconnect.rs_m00_axi");
        sc_inst_40->xsim_set_dbg_index(2547);
        xsim_sc_channel<0, bool > *p_40_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_40->aclk.bind(*p_40_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_40_aclk);
        xsim_sc_channel<0, bool > *p_40_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_40->aresetn.bind(*p_40_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_40_aresetn);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_40_s_axi_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_40->s_axi_awaddr.bind(*p_40_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_40_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_40_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_40->s_axi_awlen.bind(*p_40_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_40_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_40_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_40->s_axi_awsize.bind(*p_40_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_40_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_40_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_40->s_axi_awburst.bind(*p_40_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_40_s_axi_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_40_s_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_40->s_axi_awlock.bind(*p_40_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_40_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_40_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_40->s_axi_awcache.bind(*p_40_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_40_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_40_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_40->s_axi_awprot.bind(*p_40_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_40_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_40_s_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_40->s_axi_awregion.bind(*p_40_s_axi_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_40_s_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_40_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_40->s_axi_awqos.bind(*p_40_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_40_s_axi_awqos);
        xsim_sc_channel<0, bool > *p_40_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_40->s_axi_awvalid.bind(*p_40_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_40_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_40_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_40->s_axi_awready.bind(*p_40_s_axi_awready);
        p_40_s_axi_awready->set_sv_netview_offsetfromdp(9877376);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_40_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_40->s_axi_wdata.bind(*p_40_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_40_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_40_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_40->s_axi_wstrb.bind(*p_40_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_40_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_40_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_40->s_axi_wlast.bind(*p_40_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_40_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_40_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_40->s_axi_wvalid.bind(*p_40_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_40_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_40_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_40->s_axi_wready.bind(*p_40_s_axi_wready);
        p_40_s_axi_wready->set_sv_netview_offsetfromdp(9877656);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_40_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_40->s_axi_bresp.bind(*p_40_s_axi_bresp);
        p_40_s_axi_bresp->set_sv_netview_offsetfromdp(9877712);
        xsim_sc_channel<0, bool > *p_40_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_40->s_axi_bvalid.bind(*p_40_s_axi_bvalid);
        p_40_s_axi_bvalid->set_sv_netview_offsetfromdp(9877768);
        xsim_sc_channel<0, bool > *p_40_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_40->s_axi_bready.bind(*p_40_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_40_s_axi_bready);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_40_s_axi_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_40->s_axi_araddr.bind(*p_40_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_40_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_40_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_40->s_axi_arlen.bind(*p_40_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_40_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_40_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_40->s_axi_arsize.bind(*p_40_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_40_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_40_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_40->s_axi_arburst.bind(*p_40_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_40_s_axi_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_40_s_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_40->s_axi_arlock.bind(*p_40_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_40_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_40_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_40->s_axi_arcache.bind(*p_40_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_40_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_40_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_40->s_axi_arprot.bind(*p_40_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_40_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_40_s_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_40->s_axi_arregion.bind(*p_40_s_axi_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_40_s_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_40_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_40->s_axi_arqos.bind(*p_40_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_40_s_axi_arqos);
        xsim_sc_channel<0, bool > *p_40_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_40->s_axi_arvalid.bind(*p_40_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_40_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_40_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_40->s_axi_arready.bind(*p_40_s_axi_arready);
        p_40_s_axi_arready->set_sv_netview_offsetfromdp(9878440);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_40_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_40->s_axi_rdata.bind(*p_40_s_axi_rdata);
        p_40_s_axi_rdata->set_sv_netview_offsetfromdp(9878496);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_40_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_40->s_axi_rresp.bind(*p_40_s_axi_rresp);
        p_40_s_axi_rresp->set_sv_netview_offsetfromdp(9878552);
        xsim_sc_channel<0, bool > *p_40_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_40->s_axi_rlast.bind(*p_40_s_axi_rlast);
        p_40_s_axi_rlast->set_sv_netview_offsetfromdp(9878608);
        xsim_sc_channel<0, bool > *p_40_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_40->s_axi_rvalid.bind(*p_40_s_axi_rvalid);
        p_40_s_axi_rvalid->set_sv_netview_offsetfromdp(9878664);
        xsim_sc_channel<0, bool > *p_40_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_40->s_axi_rready.bind(*p_40_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_40_s_axi_rready);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_40_m_axi_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_40->m_axi_awaddr.bind(*p_40_m_axi_awaddr);
        p_40_m_axi_awaddr->set_sv_netview_offsetfromdp(9878776);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_40_m_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_40->m_axi_awlen.bind(*p_40_m_axi_awlen);
        p_40_m_axi_awlen->set_sv_netview_offsetfromdp(9878832);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_40_m_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_40->m_axi_awsize.bind(*p_40_m_axi_awsize);
        p_40_m_axi_awsize->set_sv_netview_offsetfromdp(9878888);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_40_m_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_40->m_axi_awburst.bind(*p_40_m_axi_awburst);
        p_40_m_axi_awburst->set_sv_netview_offsetfromdp(9878944);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_40_m_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_40->m_axi_awlock.bind(*p_40_m_axi_awlock);
        p_40_m_axi_awlock->set_sv_netview_offsetfromdp(9879000);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_40_m_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_40->m_axi_awcache.bind(*p_40_m_axi_awcache);
        p_40_m_axi_awcache->set_sv_netview_offsetfromdp(9879056);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_40_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_40->m_axi_awprot.bind(*p_40_m_axi_awprot);
        p_40_m_axi_awprot->set_sv_netview_offsetfromdp(9879112);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_40_m_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_40->m_axi_awregion.bind(*p_40_m_axi_awregion);
        p_40_m_axi_awregion->set_sv_netview_offsetfromdp(9879168);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_40_m_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_40->m_axi_awqos.bind(*p_40_m_axi_awqos);
        p_40_m_axi_awqos->set_sv_netview_offsetfromdp(9879224);
        xsim_sc_channel<0, bool > *p_40_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_40->m_axi_awvalid.bind(*p_40_m_axi_awvalid);
        p_40_m_axi_awvalid->set_sv_netview_offsetfromdp(9879280);
        xsim_sc_channel<0, bool > *p_40_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_40->m_axi_awready.bind(*p_40_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_40_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_40_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_40->m_axi_wdata.bind(*p_40_m_axi_wdata);
        p_40_m_axi_wdata->set_sv_netview_offsetfromdp(9879392);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_40_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_40->m_axi_wstrb.bind(*p_40_m_axi_wstrb);
        p_40_m_axi_wstrb->set_sv_netview_offsetfromdp(9879448);
        xsim_sc_channel<0, bool > *p_40_m_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_40->m_axi_wlast.bind(*p_40_m_axi_wlast);
        p_40_m_axi_wlast->set_sv_netview_offsetfromdp(9879504);
        xsim_sc_channel<0, bool > *p_40_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_40->m_axi_wvalid.bind(*p_40_m_axi_wvalid);
        p_40_m_axi_wvalid->set_sv_netview_offsetfromdp(9879560);
        xsim_sc_channel<0, bool > *p_40_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_40->m_axi_wready.bind(*p_40_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_40_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_40_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_40->m_axi_bresp.bind(*p_40_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_40_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_40_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_40->m_axi_bvalid.bind(*p_40_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_40_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_40_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_40->m_axi_bready.bind(*p_40_m_axi_bready);
        p_40_m_axi_bready->set_sv_netview_offsetfromdp(9879784);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_40_m_axi_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_40->m_axi_araddr.bind(*p_40_m_axi_araddr);
        p_40_m_axi_araddr->set_sv_netview_offsetfromdp(9879840);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_40_m_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_40->m_axi_arlen.bind(*p_40_m_axi_arlen);
        p_40_m_axi_arlen->set_sv_netview_offsetfromdp(9879896);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_40_m_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_40->m_axi_arsize.bind(*p_40_m_axi_arsize);
        p_40_m_axi_arsize->set_sv_netview_offsetfromdp(9879952);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_40_m_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_40->m_axi_arburst.bind(*p_40_m_axi_arburst);
        p_40_m_axi_arburst->set_sv_netview_offsetfromdp(9880008);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_40_m_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_40->m_axi_arlock.bind(*p_40_m_axi_arlock);
        p_40_m_axi_arlock->set_sv_netview_offsetfromdp(9880064);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_40_m_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_40->m_axi_arcache.bind(*p_40_m_axi_arcache);
        p_40_m_axi_arcache->set_sv_netview_offsetfromdp(9880120);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_40_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_40->m_axi_arprot.bind(*p_40_m_axi_arprot);
        p_40_m_axi_arprot->set_sv_netview_offsetfromdp(9880176);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_40_m_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_40->m_axi_arregion.bind(*p_40_m_axi_arregion);
        p_40_m_axi_arregion->set_sv_netview_offsetfromdp(9880232);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_40_m_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_40->m_axi_arqos.bind(*p_40_m_axi_arqos);
        p_40_m_axi_arqos->set_sv_netview_offsetfromdp(9880288);
        xsim_sc_channel<0, bool > *p_40_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_40->m_axi_arvalid.bind(*p_40_m_axi_arvalid);
        p_40_m_axi_arvalid->set_sv_netview_offsetfromdp(9880344);
        xsim_sc_channel<0, bool > *p_40_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_40->m_axi_arready.bind(*p_40_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_40_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_40_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_40->m_axi_rdata.bind(*p_40_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_40_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_40_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_40->m_axi_rresp.bind(*p_40_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_40_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_40_m_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_40->m_axi_rlast.bind(*p_40_m_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_40_m_axi_rlast);
        xsim_sc_channel<0, bool > *p_40_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_40->m_axi_rvalid.bind(*p_40_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_40_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_40_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_40->m_axi_rready.bind(*p_40_m_axi_rready);
        p_40_m_axi_rready->set_sv_netview_offsetfromdp(9880680);
        sc_inst_41 = new bd_d216_ddr4_mem00_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.memory.ddr4_mem00");
        sc_inst_41->xsim_set_dbg_index(2910);
        xsim_sc_channel<0, bool > *p_41_c0_init_calib_complete = new xsim_sc_channel<0, bool >();
        sc_inst_41->c0_init_calib_complete.bind(*p_41_c0_init_calib_complete);
        p_41_c0_init_calib_complete->set_sv_netview_offsetfromdp(10223376);
        xsim_sc_channel<0, bool > *p_41_dbg_clk = new xsim_sc_channel<0, bool >();
        sc_inst_41->dbg_clk.bind(*p_41_dbg_clk);
        p_41_dbg_clk->set_sv_netview_offsetfromdp(10223432);
        xsim_sc_channel<0, bool > *p_41_c0_sys_clk_p = new xsim_sc_channel<0, bool >();
        sc_inst_41->c0_sys_clk_p.bind(*p_41_c0_sys_clk_p);
        (*_glb_hdl_sc_channel_map).push_back(p_41_c0_sys_clk_p);
        xsim_sc_channel<0, bool > *p_41_c0_sys_clk_n = new xsim_sc_channel<0, bool >();
        sc_inst_41->c0_sys_clk_n.bind(*p_41_c0_sys_clk_n);
        (*_glb_hdl_sc_channel_map).push_back(p_41_c0_sys_clk_n);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_41_dbg_bus = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_41->dbg_bus.bind(*p_41_dbg_bus);
        p_41_dbg_bus->set_sv_netview_offsetfromdp(10223600);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_41_c0_ddr4_adr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_41->c0_ddr4_adr.bind(*p_41_c0_ddr4_adr);
        p_41_c0_ddr4_adr->set_sv_netview_offsetfromdp(10223656);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_41_c0_ddr4_ba = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_41->c0_ddr4_ba.bind(*p_41_c0_ddr4_ba);
        p_41_c0_ddr4_ba->set_sv_netview_offsetfromdp(10223712);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_41_c0_ddr4_cke = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_41->c0_ddr4_cke.bind(*p_41_c0_ddr4_cke);
        p_41_c0_ddr4_cke->set_sv_netview_offsetfromdp(10223768);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_41_c0_ddr4_cs_n = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_41->c0_ddr4_cs_n.bind(*p_41_c0_ddr4_cs_n);
        p_41_c0_ddr4_cs_n->set_sv_netview_offsetfromdp(10223824);
        xsim_sc_channel<72, sc_dt::sc_bv<72> > *p_41_c0_ddr4_dq = new xsim_sc_channel<72, sc_dt::sc_bv<72> >();
        sc_inst_41->c0_ddr4_dq.bind(*p_41_c0_ddr4_dq);
        p_41_c0_ddr4_dq->set_sv_netview_offsetfromdp(10223880);
        xsim_sc_channel<18, sc_dt::sc_bv<18> > *p_41_c0_ddr4_dqs_c = new xsim_sc_channel<18, sc_dt::sc_bv<18> >();
        sc_inst_41->c0_ddr4_dqs_c.bind(*p_41_c0_ddr4_dqs_c);
        p_41_c0_ddr4_dqs_c->set_sv_netview_offsetfromdp(10223936);
        xsim_sc_channel<18, sc_dt::sc_bv<18> > *p_41_c0_ddr4_dqs_t = new xsim_sc_channel<18, sc_dt::sc_bv<18> >();
        sc_inst_41->c0_ddr4_dqs_t.bind(*p_41_c0_ddr4_dqs_t);
        p_41_c0_ddr4_dqs_t->set_sv_netview_offsetfromdp(10223992);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_41_c0_ddr4_odt = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_41->c0_ddr4_odt.bind(*p_41_c0_ddr4_odt);
        p_41_c0_ddr4_odt->set_sv_netview_offsetfromdp(10224048);
        xsim_sc_channel<0, bool > *p_41_c0_ddr4_parity = new xsim_sc_channel<0, bool >();
        sc_inst_41->c0_ddr4_parity.bind(*p_41_c0_ddr4_parity);
        p_41_c0_ddr4_parity->set_sv_netview_offsetfromdp(10224104);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_41_c0_ddr4_bg = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_41->c0_ddr4_bg.bind(*p_41_c0_ddr4_bg);
        p_41_c0_ddr4_bg->set_sv_netview_offsetfromdp(10224160);
        xsim_sc_channel<0, bool > *p_41_c0_ddr4_reset_n = new xsim_sc_channel<0, bool >();
        sc_inst_41->c0_ddr4_reset_n.bind(*p_41_c0_ddr4_reset_n);
        p_41_c0_ddr4_reset_n->set_sv_netview_offsetfromdp(10224216);
        xsim_sc_channel<0, bool > *p_41_c0_ddr4_act_n = new xsim_sc_channel<0, bool >();
        sc_inst_41->c0_ddr4_act_n.bind(*p_41_c0_ddr4_act_n);
        p_41_c0_ddr4_act_n->set_sv_netview_offsetfromdp(10224272);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_41_c0_ddr4_ck_c = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_41->c0_ddr4_ck_c.bind(*p_41_c0_ddr4_ck_c);
        p_41_c0_ddr4_ck_c->set_sv_netview_offsetfromdp(10224328);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_41_c0_ddr4_ck_t = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_41->c0_ddr4_ck_t.bind(*p_41_c0_ddr4_ck_t);
        p_41_c0_ddr4_ck_t->set_sv_netview_offsetfromdp(10224384);
        xsim_sc_channel<0, bool > *p_41_c0_ddr4_ui_clk = new xsim_sc_channel<0, bool >();
        sc_inst_41->c0_ddr4_ui_clk.bind(*p_41_c0_ddr4_ui_clk);
        p_41_c0_ddr4_ui_clk->set_sv_netview_offsetfromdp(10224440);
        xsim_sc_channel<0, bool > *p_41_c0_ddr4_ui_clk_sync_rst = new xsim_sc_channel<0, bool >();
        sc_inst_41->c0_ddr4_ui_clk_sync_rst.bind(*p_41_c0_ddr4_ui_clk_sync_rst);
        p_41_c0_ddr4_ui_clk_sync_rst->set_sv_netview_offsetfromdp(10224496);
        xsim_sc_channel<0, bool > *p_41_c0_ddr4_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_41->c0_ddr4_aresetn.bind(*p_41_c0_ddr4_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_41_c0_ddr4_aresetn);
        xsim_sc_channel<0, bool > *p_41_c0_ddr4_s_axi_ctrl_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_41->c0_ddr4_s_axi_ctrl_awvalid.bind(*p_41_c0_ddr4_s_axi_ctrl_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_41_c0_ddr4_s_axi_ctrl_awvalid);
        xsim_sc_channel<0, bool > *p_41_c0_ddr4_s_axi_ctrl_awready = new xsim_sc_channel<0, bool >();
        sc_inst_41->c0_ddr4_s_axi_ctrl_awready.bind(*p_41_c0_ddr4_s_axi_ctrl_awready);
        p_41_c0_ddr4_s_axi_ctrl_awready->set_sv_netview_offsetfromdp(10224664);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_41_c0_ddr4_s_axi_ctrl_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_41->c0_ddr4_s_axi_ctrl_awaddr.bind(*p_41_c0_ddr4_s_axi_ctrl_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_41_c0_ddr4_s_axi_ctrl_awaddr);
        xsim_sc_channel<0, bool > *p_41_c0_ddr4_s_axi_ctrl_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_41->c0_ddr4_s_axi_ctrl_wvalid.bind(*p_41_c0_ddr4_s_axi_ctrl_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_41_c0_ddr4_s_axi_ctrl_wvalid);
        xsim_sc_channel<0, bool > *p_41_c0_ddr4_s_axi_ctrl_wready = new xsim_sc_channel<0, bool >();
        sc_inst_41->c0_ddr4_s_axi_ctrl_wready.bind(*p_41_c0_ddr4_s_axi_ctrl_wready);
        p_41_c0_ddr4_s_axi_ctrl_wready->set_sv_netview_offsetfromdp(10224832);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_41_c0_ddr4_s_axi_ctrl_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_41->c0_ddr4_s_axi_ctrl_wdata.bind(*p_41_c0_ddr4_s_axi_ctrl_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_41_c0_ddr4_s_axi_ctrl_wdata);
        xsim_sc_channel<0, bool > *p_41_c0_ddr4_s_axi_ctrl_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_41->c0_ddr4_s_axi_ctrl_bvalid.bind(*p_41_c0_ddr4_s_axi_ctrl_bvalid);
        p_41_c0_ddr4_s_axi_ctrl_bvalid->set_sv_netview_offsetfromdp(10224944);
        xsim_sc_channel<0, bool > *p_41_c0_ddr4_s_axi_ctrl_bready = new xsim_sc_channel<0, bool >();
        sc_inst_41->c0_ddr4_s_axi_ctrl_bready.bind(*p_41_c0_ddr4_s_axi_ctrl_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_41_c0_ddr4_s_axi_ctrl_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_41_c0_ddr4_s_axi_ctrl_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_41->c0_ddr4_s_axi_ctrl_bresp.bind(*p_41_c0_ddr4_s_axi_ctrl_bresp);
        p_41_c0_ddr4_s_axi_ctrl_bresp->set_sv_netview_offsetfromdp(10225056);
        xsim_sc_channel<0, bool > *p_41_c0_ddr4_s_axi_ctrl_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_41->c0_ddr4_s_axi_ctrl_arvalid.bind(*p_41_c0_ddr4_s_axi_ctrl_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_41_c0_ddr4_s_axi_ctrl_arvalid);
        xsim_sc_channel<0, bool > *p_41_c0_ddr4_s_axi_ctrl_arready = new xsim_sc_channel<0, bool >();
        sc_inst_41->c0_ddr4_s_axi_ctrl_arready.bind(*p_41_c0_ddr4_s_axi_ctrl_arready);
        p_41_c0_ddr4_s_axi_ctrl_arready->set_sv_netview_offsetfromdp(10225168);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_41_c0_ddr4_s_axi_ctrl_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_41->c0_ddr4_s_axi_ctrl_araddr.bind(*p_41_c0_ddr4_s_axi_ctrl_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_41_c0_ddr4_s_axi_ctrl_araddr);
        xsim_sc_channel<0, bool > *p_41_c0_ddr4_s_axi_ctrl_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_41->c0_ddr4_s_axi_ctrl_rvalid.bind(*p_41_c0_ddr4_s_axi_ctrl_rvalid);
        p_41_c0_ddr4_s_axi_ctrl_rvalid->set_sv_netview_offsetfromdp(10225280);
        xsim_sc_channel<0, bool > *p_41_c0_ddr4_s_axi_ctrl_rready = new xsim_sc_channel<0, bool >();
        sc_inst_41->c0_ddr4_s_axi_ctrl_rready.bind(*p_41_c0_ddr4_s_axi_ctrl_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_41_c0_ddr4_s_axi_ctrl_rready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_41_c0_ddr4_s_axi_ctrl_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_41->c0_ddr4_s_axi_ctrl_rdata.bind(*p_41_c0_ddr4_s_axi_ctrl_rdata);
        p_41_c0_ddr4_s_axi_ctrl_rdata->set_sv_netview_offsetfromdp(10225392);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_41_c0_ddr4_s_axi_ctrl_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_41->c0_ddr4_s_axi_ctrl_rresp.bind(*p_41_c0_ddr4_s_axi_ctrl_rresp);
        p_41_c0_ddr4_s_axi_ctrl_rresp->set_sv_netview_offsetfromdp(10225448);
        xsim_sc_channel<0, bool > *p_41_c0_ddr4_interrupt = new xsim_sc_channel<0, bool >();
        sc_inst_41->c0_ddr4_interrupt.bind(*p_41_c0_ddr4_interrupt);
        p_41_c0_ddr4_interrupt->set_sv_netview_offsetfromdp(10225504);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_41_c0_ddr4_s_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_41->c0_ddr4_s_axi_awid.bind(*p_41_c0_ddr4_s_axi_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_41_c0_ddr4_s_axi_awid);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_41_c0_ddr4_s_axi_awaddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_41->c0_ddr4_s_axi_awaddr.bind(*p_41_c0_ddr4_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_41_c0_ddr4_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_41_c0_ddr4_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_41->c0_ddr4_s_axi_awlen.bind(*p_41_c0_ddr4_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_41_c0_ddr4_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_41_c0_ddr4_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_41->c0_ddr4_s_axi_awsize.bind(*p_41_c0_ddr4_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_41_c0_ddr4_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_41_c0_ddr4_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_41->c0_ddr4_s_axi_awburst.bind(*p_41_c0_ddr4_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_41_c0_ddr4_s_axi_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_41_c0_ddr4_s_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_41->c0_ddr4_s_axi_awlock.bind(*p_41_c0_ddr4_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_41_c0_ddr4_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_41_c0_ddr4_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_41->c0_ddr4_s_axi_awcache.bind(*p_41_c0_ddr4_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_41_c0_ddr4_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_41_c0_ddr4_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_41->c0_ddr4_s_axi_awprot.bind(*p_41_c0_ddr4_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_41_c0_ddr4_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_41_c0_ddr4_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_41->c0_ddr4_s_axi_awqos.bind(*p_41_c0_ddr4_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_41_c0_ddr4_s_axi_awqos);
        xsim_sc_channel<0, bool > *p_41_c0_ddr4_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_41->c0_ddr4_s_axi_awvalid.bind(*p_41_c0_ddr4_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_41_c0_ddr4_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_41_c0_ddr4_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_41->c0_ddr4_s_axi_awready.bind(*p_41_c0_ddr4_s_axi_awready);
        p_41_c0_ddr4_s_axi_awready->set_sv_netview_offsetfromdp(10226120);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_41_c0_ddr4_s_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_41->c0_ddr4_s_axi_wdata.bind(*p_41_c0_ddr4_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_41_c0_ddr4_s_axi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_41_c0_ddr4_s_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_41->c0_ddr4_s_axi_wstrb.bind(*p_41_c0_ddr4_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_41_c0_ddr4_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_41_c0_ddr4_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_41->c0_ddr4_s_axi_wlast.bind(*p_41_c0_ddr4_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_41_c0_ddr4_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_41_c0_ddr4_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_41->c0_ddr4_s_axi_wvalid.bind(*p_41_c0_ddr4_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_41_c0_ddr4_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_41_c0_ddr4_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_41->c0_ddr4_s_axi_wready.bind(*p_41_c0_ddr4_s_axi_wready);
        p_41_c0_ddr4_s_axi_wready->set_sv_netview_offsetfromdp(10226400);
        xsim_sc_channel<0, bool > *p_41_c0_ddr4_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_41->c0_ddr4_s_axi_bready.bind(*p_41_c0_ddr4_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_41_c0_ddr4_s_axi_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_41_c0_ddr4_s_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_41->c0_ddr4_s_axi_bid.bind(*p_41_c0_ddr4_s_axi_bid);
        p_41_c0_ddr4_s_axi_bid->set_sv_netview_offsetfromdp(10226512);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_41_c0_ddr4_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_41->c0_ddr4_s_axi_bresp.bind(*p_41_c0_ddr4_s_axi_bresp);
        p_41_c0_ddr4_s_axi_bresp->set_sv_netview_offsetfromdp(10226568);
        xsim_sc_channel<0, bool > *p_41_c0_ddr4_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_41->c0_ddr4_s_axi_bvalid.bind(*p_41_c0_ddr4_s_axi_bvalid);
        p_41_c0_ddr4_s_axi_bvalid->set_sv_netview_offsetfromdp(10226624);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_41_c0_ddr4_s_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_41->c0_ddr4_s_axi_arid.bind(*p_41_c0_ddr4_s_axi_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_41_c0_ddr4_s_axi_arid);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_41_c0_ddr4_s_axi_araddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_41->c0_ddr4_s_axi_araddr.bind(*p_41_c0_ddr4_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_41_c0_ddr4_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_41_c0_ddr4_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_41->c0_ddr4_s_axi_arlen.bind(*p_41_c0_ddr4_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_41_c0_ddr4_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_41_c0_ddr4_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_41->c0_ddr4_s_axi_arsize.bind(*p_41_c0_ddr4_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_41_c0_ddr4_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_41_c0_ddr4_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_41->c0_ddr4_s_axi_arburst.bind(*p_41_c0_ddr4_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_41_c0_ddr4_s_axi_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_41_c0_ddr4_s_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_41->c0_ddr4_s_axi_arlock.bind(*p_41_c0_ddr4_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_41_c0_ddr4_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_41_c0_ddr4_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_41->c0_ddr4_s_axi_arcache.bind(*p_41_c0_ddr4_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_41_c0_ddr4_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_41_c0_ddr4_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_41->c0_ddr4_s_axi_arprot.bind(*p_41_c0_ddr4_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_41_c0_ddr4_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_41_c0_ddr4_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_41->c0_ddr4_s_axi_arqos.bind(*p_41_c0_ddr4_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_41_c0_ddr4_s_axi_arqos);
        xsim_sc_channel<0, bool > *p_41_c0_ddr4_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_41->c0_ddr4_s_axi_arvalid.bind(*p_41_c0_ddr4_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_41_c0_ddr4_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_41_c0_ddr4_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_41->c0_ddr4_s_axi_arready.bind(*p_41_c0_ddr4_s_axi_arready);
        p_41_c0_ddr4_s_axi_arready->set_sv_netview_offsetfromdp(10227240);
        xsim_sc_channel<0, bool > *p_41_c0_ddr4_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_41->c0_ddr4_s_axi_rready.bind(*p_41_c0_ddr4_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_41_c0_ddr4_s_axi_rready);
        xsim_sc_channel<0, bool > *p_41_c0_ddr4_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_41->c0_ddr4_s_axi_rlast.bind(*p_41_c0_ddr4_s_axi_rlast);
        p_41_c0_ddr4_s_axi_rlast->set_sv_netview_offsetfromdp(10227352);
        xsim_sc_channel<0, bool > *p_41_c0_ddr4_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_41->c0_ddr4_s_axi_rvalid.bind(*p_41_c0_ddr4_s_axi_rvalid);
        p_41_c0_ddr4_s_axi_rvalid->set_sv_netview_offsetfromdp(10227408);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_41_c0_ddr4_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_41->c0_ddr4_s_axi_rresp.bind(*p_41_c0_ddr4_s_axi_rresp);
        p_41_c0_ddr4_s_axi_rresp->set_sv_netview_offsetfromdp(10227464);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_41_c0_ddr4_s_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_41->c0_ddr4_s_axi_rid.bind(*p_41_c0_ddr4_s_axi_rid);
        p_41_c0_ddr4_s_axi_rid->set_sv_netview_offsetfromdp(10227520);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_41_c0_ddr4_s_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_41->c0_ddr4_s_axi_rdata.bind(*p_41_c0_ddr4_s_axi_rdata);
        p_41_c0_ddr4_s_axi_rdata->set_sv_netview_offsetfromdp(10227576);
        xsim_sc_channel<0, bool > *p_41_addn_ui_clkout1 = new xsim_sc_channel<0, bool >();
        sc_inst_41->addn_ui_clkout1.bind(*p_41_addn_ui_clkout1);
        p_41_addn_ui_clkout1->set_sv_netview_offsetfromdp(10227632);
        xsim_sc_channel<0, bool > *p_41_sys_rst = new xsim_sc_channel<0, bool >();
        sc_inst_41->sys_rst.bind(*p_41_sys_rst);
        (*_glb_hdl_sc_channel_map).push_back(p_41_sys_rst);
        sc_inst_42 = new bd_d216_ddr4_mem00_ctrl_cc_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.memory.ddr4_mem00_ctrl_cc");
        sc_inst_42->xsim_set_dbg_index(2911);
        xsim_sc_channel<0, bool > *p_42_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_42->s_axi_aclk.bind(*p_42_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_42_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_42_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_42->s_axi_aresetn.bind(*p_42_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_42_s_axi_aresetn);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_42_s_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_42->s_axi_awaddr.bind(*p_42_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_42_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_42_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_42->s_axi_awprot.bind(*p_42_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_42_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_42_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_42->s_axi_awvalid.bind(*p_42_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_42_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_42_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_42->s_axi_awready.bind(*p_42_s_axi_awready);
        p_42_s_axi_awready->set_sv_netview_offsetfromdp(10228072);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_42_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_42->s_axi_wdata.bind(*p_42_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_42_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_42_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_42->s_axi_wstrb.bind(*p_42_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_42_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_42_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_42->s_axi_wvalid.bind(*p_42_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_42_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_42_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_42->s_axi_wready.bind(*p_42_s_axi_wready);
        p_42_s_axi_wready->set_sv_netview_offsetfromdp(10228296);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_42_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_42->s_axi_bresp.bind(*p_42_s_axi_bresp);
        p_42_s_axi_bresp->set_sv_netview_offsetfromdp(10228352);
        xsim_sc_channel<0, bool > *p_42_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_42->s_axi_bvalid.bind(*p_42_s_axi_bvalid);
        p_42_s_axi_bvalid->set_sv_netview_offsetfromdp(10228408);
        xsim_sc_channel<0, bool > *p_42_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_42->s_axi_bready.bind(*p_42_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_42_s_axi_bready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_42_s_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_42->s_axi_araddr.bind(*p_42_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_42_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_42_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_42->s_axi_arprot.bind(*p_42_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_42_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_42_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_42->s_axi_arvalid.bind(*p_42_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_42_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_42_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_42->s_axi_arready.bind(*p_42_s_axi_arready);
        p_42_s_axi_arready->set_sv_netview_offsetfromdp(10228688);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_42_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_42->s_axi_rdata.bind(*p_42_s_axi_rdata);
        p_42_s_axi_rdata->set_sv_netview_offsetfromdp(10228744);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_42_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_42->s_axi_rresp.bind(*p_42_s_axi_rresp);
        p_42_s_axi_rresp->set_sv_netview_offsetfromdp(10228800);
        xsim_sc_channel<0, bool > *p_42_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_42->s_axi_rvalid.bind(*p_42_s_axi_rvalid);
        p_42_s_axi_rvalid->set_sv_netview_offsetfromdp(10228856);
        xsim_sc_channel<0, bool > *p_42_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_42->s_axi_rready.bind(*p_42_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_42_s_axi_rready);
        xsim_sc_channel<0, bool > *p_42_m_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_42->m_axi_aclk.bind(*p_42_m_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_42_m_axi_aclk);
        xsim_sc_channel<0, bool > *p_42_m_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_42->m_axi_aresetn.bind(*p_42_m_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_42_m_axi_aresetn);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_42_m_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_42->m_axi_awaddr.bind(*p_42_m_axi_awaddr);
        p_42_m_axi_awaddr->set_sv_netview_offsetfromdp(10229080);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_42_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_42->m_axi_awprot.bind(*p_42_m_axi_awprot);
        p_42_m_axi_awprot->set_sv_netview_offsetfromdp(10229136);
        xsim_sc_channel<0, bool > *p_42_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_42->m_axi_awvalid.bind(*p_42_m_axi_awvalid);
        p_42_m_axi_awvalid->set_sv_netview_offsetfromdp(10229192);
        xsim_sc_channel<0, bool > *p_42_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_42->m_axi_awready.bind(*p_42_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_42_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_42_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_42->m_axi_wdata.bind(*p_42_m_axi_wdata);
        p_42_m_axi_wdata->set_sv_netview_offsetfromdp(10229304);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_42_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_42->m_axi_wstrb.bind(*p_42_m_axi_wstrb);
        p_42_m_axi_wstrb->set_sv_netview_offsetfromdp(10229360);
        xsim_sc_channel<0, bool > *p_42_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_42->m_axi_wvalid.bind(*p_42_m_axi_wvalid);
        p_42_m_axi_wvalid->set_sv_netview_offsetfromdp(10229416);
        xsim_sc_channel<0, bool > *p_42_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_42->m_axi_wready.bind(*p_42_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_42_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_42_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_42->m_axi_bresp.bind(*p_42_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_42_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_42_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_42->m_axi_bvalid.bind(*p_42_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_42_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_42_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_42->m_axi_bready.bind(*p_42_m_axi_bready);
        p_42_m_axi_bready->set_sv_netview_offsetfromdp(10229640);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_42_m_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_42->m_axi_araddr.bind(*p_42_m_axi_araddr);
        p_42_m_axi_araddr->set_sv_netview_offsetfromdp(10229696);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_42_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_42->m_axi_arprot.bind(*p_42_m_axi_arprot);
        p_42_m_axi_arprot->set_sv_netview_offsetfromdp(10229752);
        xsim_sc_channel<0, bool > *p_42_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_42->m_axi_arvalid.bind(*p_42_m_axi_arvalid);
        p_42_m_axi_arvalid->set_sv_netview_offsetfromdp(10229808);
        xsim_sc_channel<0, bool > *p_42_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_42->m_axi_arready.bind(*p_42_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_42_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_42_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_42->m_axi_rdata.bind(*p_42_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_42_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_42_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_42->m_axi_rresp.bind(*p_42_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_42_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_42_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_42->m_axi_rvalid.bind(*p_42_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_42_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_42_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_42->m_axi_rready.bind(*p_42_m_axi_rready);
        p_42_m_axi_rready->set_sv_netview_offsetfromdp(10230088);
        sc_inst_43 = new bd_d216_ddr4_mem01_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.memory.ddr4_mem01");
        sc_inst_43->xsim_set_dbg_index(2912);
        xsim_sc_channel<0, bool > *p_43_c0_init_calib_complete = new xsim_sc_channel<0, bool >();
        sc_inst_43->c0_init_calib_complete.bind(*p_43_c0_init_calib_complete);
        p_43_c0_init_calib_complete->set_sv_netview_offsetfromdp(10230192);
        xsim_sc_channel<0, bool > *p_43_dbg_clk = new xsim_sc_channel<0, bool >();
        sc_inst_43->dbg_clk.bind(*p_43_dbg_clk);
        p_43_dbg_clk->set_sv_netview_offsetfromdp(10230248);
        xsim_sc_channel<0, bool > *p_43_c0_sys_clk_p = new xsim_sc_channel<0, bool >();
        sc_inst_43->c0_sys_clk_p.bind(*p_43_c0_sys_clk_p);
        (*_glb_hdl_sc_channel_map).push_back(p_43_c0_sys_clk_p);
        xsim_sc_channel<0, bool > *p_43_c0_sys_clk_n = new xsim_sc_channel<0, bool >();
        sc_inst_43->c0_sys_clk_n.bind(*p_43_c0_sys_clk_n);
        (*_glb_hdl_sc_channel_map).push_back(p_43_c0_sys_clk_n);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_43_dbg_bus = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_43->dbg_bus.bind(*p_43_dbg_bus);
        p_43_dbg_bus->set_sv_netview_offsetfromdp(10230416);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_43_c0_ddr4_adr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_43->c0_ddr4_adr.bind(*p_43_c0_ddr4_adr);
        p_43_c0_ddr4_adr->set_sv_netview_offsetfromdp(10230472);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_43_c0_ddr4_ba = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_43->c0_ddr4_ba.bind(*p_43_c0_ddr4_ba);
        p_43_c0_ddr4_ba->set_sv_netview_offsetfromdp(10230528);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_43_c0_ddr4_cke = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_43->c0_ddr4_cke.bind(*p_43_c0_ddr4_cke);
        p_43_c0_ddr4_cke->set_sv_netview_offsetfromdp(10230584);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_43_c0_ddr4_cs_n = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_43->c0_ddr4_cs_n.bind(*p_43_c0_ddr4_cs_n);
        p_43_c0_ddr4_cs_n->set_sv_netview_offsetfromdp(10230640);
        xsim_sc_channel<72, sc_dt::sc_bv<72> > *p_43_c0_ddr4_dq = new xsim_sc_channel<72, sc_dt::sc_bv<72> >();
        sc_inst_43->c0_ddr4_dq.bind(*p_43_c0_ddr4_dq);
        p_43_c0_ddr4_dq->set_sv_netview_offsetfromdp(10230696);
        xsim_sc_channel<18, sc_dt::sc_bv<18> > *p_43_c0_ddr4_dqs_c = new xsim_sc_channel<18, sc_dt::sc_bv<18> >();
        sc_inst_43->c0_ddr4_dqs_c.bind(*p_43_c0_ddr4_dqs_c);
        p_43_c0_ddr4_dqs_c->set_sv_netview_offsetfromdp(10230752);
        xsim_sc_channel<18, sc_dt::sc_bv<18> > *p_43_c0_ddr4_dqs_t = new xsim_sc_channel<18, sc_dt::sc_bv<18> >();
        sc_inst_43->c0_ddr4_dqs_t.bind(*p_43_c0_ddr4_dqs_t);
        p_43_c0_ddr4_dqs_t->set_sv_netview_offsetfromdp(10230808);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_43_c0_ddr4_odt = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_43->c0_ddr4_odt.bind(*p_43_c0_ddr4_odt);
        p_43_c0_ddr4_odt->set_sv_netview_offsetfromdp(10230864);
        xsim_sc_channel<0, bool > *p_43_c0_ddr4_parity = new xsim_sc_channel<0, bool >();
        sc_inst_43->c0_ddr4_parity.bind(*p_43_c0_ddr4_parity);
        p_43_c0_ddr4_parity->set_sv_netview_offsetfromdp(10230920);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_43_c0_ddr4_bg = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_43->c0_ddr4_bg.bind(*p_43_c0_ddr4_bg);
        p_43_c0_ddr4_bg->set_sv_netview_offsetfromdp(10230976);
        xsim_sc_channel<0, bool > *p_43_c0_ddr4_reset_n = new xsim_sc_channel<0, bool >();
        sc_inst_43->c0_ddr4_reset_n.bind(*p_43_c0_ddr4_reset_n);
        p_43_c0_ddr4_reset_n->set_sv_netview_offsetfromdp(10231032);
        xsim_sc_channel<0, bool > *p_43_c0_ddr4_act_n = new xsim_sc_channel<0, bool >();
        sc_inst_43->c0_ddr4_act_n.bind(*p_43_c0_ddr4_act_n);
        p_43_c0_ddr4_act_n->set_sv_netview_offsetfromdp(10231088);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_43_c0_ddr4_ck_c = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_43->c0_ddr4_ck_c.bind(*p_43_c0_ddr4_ck_c);
        p_43_c0_ddr4_ck_c->set_sv_netview_offsetfromdp(10231144);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_43_c0_ddr4_ck_t = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_43->c0_ddr4_ck_t.bind(*p_43_c0_ddr4_ck_t);
        p_43_c0_ddr4_ck_t->set_sv_netview_offsetfromdp(10231200);
        xsim_sc_channel<0, bool > *p_43_c0_ddr4_ui_clk = new xsim_sc_channel<0, bool >();
        sc_inst_43->c0_ddr4_ui_clk.bind(*p_43_c0_ddr4_ui_clk);
        p_43_c0_ddr4_ui_clk->set_sv_netview_offsetfromdp(10231256);
        xsim_sc_channel<0, bool > *p_43_c0_ddr4_ui_clk_sync_rst = new xsim_sc_channel<0, bool >();
        sc_inst_43->c0_ddr4_ui_clk_sync_rst.bind(*p_43_c0_ddr4_ui_clk_sync_rst);
        p_43_c0_ddr4_ui_clk_sync_rst->set_sv_netview_offsetfromdp(10231312);
        xsim_sc_channel<0, bool > *p_43_c0_ddr4_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_43->c0_ddr4_aresetn.bind(*p_43_c0_ddr4_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_43_c0_ddr4_aresetn);
        xsim_sc_channel<0, bool > *p_43_c0_ddr4_s_axi_ctrl_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_43->c0_ddr4_s_axi_ctrl_awvalid.bind(*p_43_c0_ddr4_s_axi_ctrl_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_43_c0_ddr4_s_axi_ctrl_awvalid);
        xsim_sc_channel<0, bool > *p_43_c0_ddr4_s_axi_ctrl_awready = new xsim_sc_channel<0, bool >();
        sc_inst_43->c0_ddr4_s_axi_ctrl_awready.bind(*p_43_c0_ddr4_s_axi_ctrl_awready);
        p_43_c0_ddr4_s_axi_ctrl_awready->set_sv_netview_offsetfromdp(10231480);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_43_c0_ddr4_s_axi_ctrl_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_43->c0_ddr4_s_axi_ctrl_awaddr.bind(*p_43_c0_ddr4_s_axi_ctrl_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_43_c0_ddr4_s_axi_ctrl_awaddr);
        xsim_sc_channel<0, bool > *p_43_c0_ddr4_s_axi_ctrl_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_43->c0_ddr4_s_axi_ctrl_wvalid.bind(*p_43_c0_ddr4_s_axi_ctrl_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_43_c0_ddr4_s_axi_ctrl_wvalid);
        xsim_sc_channel<0, bool > *p_43_c0_ddr4_s_axi_ctrl_wready = new xsim_sc_channel<0, bool >();
        sc_inst_43->c0_ddr4_s_axi_ctrl_wready.bind(*p_43_c0_ddr4_s_axi_ctrl_wready);
        p_43_c0_ddr4_s_axi_ctrl_wready->set_sv_netview_offsetfromdp(10231648);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_43_c0_ddr4_s_axi_ctrl_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_43->c0_ddr4_s_axi_ctrl_wdata.bind(*p_43_c0_ddr4_s_axi_ctrl_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_43_c0_ddr4_s_axi_ctrl_wdata);
        xsim_sc_channel<0, bool > *p_43_c0_ddr4_s_axi_ctrl_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_43->c0_ddr4_s_axi_ctrl_bvalid.bind(*p_43_c0_ddr4_s_axi_ctrl_bvalid);
        p_43_c0_ddr4_s_axi_ctrl_bvalid->set_sv_netview_offsetfromdp(10231760);
        xsim_sc_channel<0, bool > *p_43_c0_ddr4_s_axi_ctrl_bready = new xsim_sc_channel<0, bool >();
        sc_inst_43->c0_ddr4_s_axi_ctrl_bready.bind(*p_43_c0_ddr4_s_axi_ctrl_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_43_c0_ddr4_s_axi_ctrl_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_43_c0_ddr4_s_axi_ctrl_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_43->c0_ddr4_s_axi_ctrl_bresp.bind(*p_43_c0_ddr4_s_axi_ctrl_bresp);
        p_43_c0_ddr4_s_axi_ctrl_bresp->set_sv_netview_offsetfromdp(10231872);
        xsim_sc_channel<0, bool > *p_43_c0_ddr4_s_axi_ctrl_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_43->c0_ddr4_s_axi_ctrl_arvalid.bind(*p_43_c0_ddr4_s_axi_ctrl_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_43_c0_ddr4_s_axi_ctrl_arvalid);
        xsim_sc_channel<0, bool > *p_43_c0_ddr4_s_axi_ctrl_arready = new xsim_sc_channel<0, bool >();
        sc_inst_43->c0_ddr4_s_axi_ctrl_arready.bind(*p_43_c0_ddr4_s_axi_ctrl_arready);
        p_43_c0_ddr4_s_axi_ctrl_arready->set_sv_netview_offsetfromdp(10231984);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_43_c0_ddr4_s_axi_ctrl_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_43->c0_ddr4_s_axi_ctrl_araddr.bind(*p_43_c0_ddr4_s_axi_ctrl_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_43_c0_ddr4_s_axi_ctrl_araddr);
        xsim_sc_channel<0, bool > *p_43_c0_ddr4_s_axi_ctrl_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_43->c0_ddr4_s_axi_ctrl_rvalid.bind(*p_43_c0_ddr4_s_axi_ctrl_rvalid);
        p_43_c0_ddr4_s_axi_ctrl_rvalid->set_sv_netview_offsetfromdp(10232096);
        xsim_sc_channel<0, bool > *p_43_c0_ddr4_s_axi_ctrl_rready = new xsim_sc_channel<0, bool >();
        sc_inst_43->c0_ddr4_s_axi_ctrl_rready.bind(*p_43_c0_ddr4_s_axi_ctrl_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_43_c0_ddr4_s_axi_ctrl_rready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_43_c0_ddr4_s_axi_ctrl_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_43->c0_ddr4_s_axi_ctrl_rdata.bind(*p_43_c0_ddr4_s_axi_ctrl_rdata);
        p_43_c0_ddr4_s_axi_ctrl_rdata->set_sv_netview_offsetfromdp(10232208);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_43_c0_ddr4_s_axi_ctrl_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_43->c0_ddr4_s_axi_ctrl_rresp.bind(*p_43_c0_ddr4_s_axi_ctrl_rresp);
        p_43_c0_ddr4_s_axi_ctrl_rresp->set_sv_netview_offsetfromdp(10232264);
        xsim_sc_channel<0, bool > *p_43_c0_ddr4_interrupt = new xsim_sc_channel<0, bool >();
        sc_inst_43->c0_ddr4_interrupt.bind(*p_43_c0_ddr4_interrupt);
        p_43_c0_ddr4_interrupt->set_sv_netview_offsetfromdp(10232320);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_43_c0_ddr4_s_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_43->c0_ddr4_s_axi_awid.bind(*p_43_c0_ddr4_s_axi_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_43_c0_ddr4_s_axi_awid);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_43_c0_ddr4_s_axi_awaddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_43->c0_ddr4_s_axi_awaddr.bind(*p_43_c0_ddr4_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_43_c0_ddr4_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_43_c0_ddr4_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_43->c0_ddr4_s_axi_awlen.bind(*p_43_c0_ddr4_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_43_c0_ddr4_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_43_c0_ddr4_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_43->c0_ddr4_s_axi_awsize.bind(*p_43_c0_ddr4_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_43_c0_ddr4_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_43_c0_ddr4_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_43->c0_ddr4_s_axi_awburst.bind(*p_43_c0_ddr4_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_43_c0_ddr4_s_axi_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_43_c0_ddr4_s_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_43->c0_ddr4_s_axi_awlock.bind(*p_43_c0_ddr4_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_43_c0_ddr4_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_43_c0_ddr4_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_43->c0_ddr4_s_axi_awcache.bind(*p_43_c0_ddr4_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_43_c0_ddr4_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_43_c0_ddr4_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_43->c0_ddr4_s_axi_awprot.bind(*p_43_c0_ddr4_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_43_c0_ddr4_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_43_c0_ddr4_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_43->c0_ddr4_s_axi_awqos.bind(*p_43_c0_ddr4_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_43_c0_ddr4_s_axi_awqos);
        xsim_sc_channel<0, bool > *p_43_c0_ddr4_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_43->c0_ddr4_s_axi_awvalid.bind(*p_43_c0_ddr4_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_43_c0_ddr4_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_43_c0_ddr4_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_43->c0_ddr4_s_axi_awready.bind(*p_43_c0_ddr4_s_axi_awready);
        p_43_c0_ddr4_s_axi_awready->set_sv_netview_offsetfromdp(10232936);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_43_c0_ddr4_s_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_43->c0_ddr4_s_axi_wdata.bind(*p_43_c0_ddr4_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_43_c0_ddr4_s_axi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_43_c0_ddr4_s_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_43->c0_ddr4_s_axi_wstrb.bind(*p_43_c0_ddr4_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_43_c0_ddr4_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_43_c0_ddr4_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_43->c0_ddr4_s_axi_wlast.bind(*p_43_c0_ddr4_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_43_c0_ddr4_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_43_c0_ddr4_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_43->c0_ddr4_s_axi_wvalid.bind(*p_43_c0_ddr4_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_43_c0_ddr4_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_43_c0_ddr4_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_43->c0_ddr4_s_axi_wready.bind(*p_43_c0_ddr4_s_axi_wready);
        p_43_c0_ddr4_s_axi_wready->set_sv_netview_offsetfromdp(10233216);
        xsim_sc_channel<0, bool > *p_43_c0_ddr4_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_43->c0_ddr4_s_axi_bready.bind(*p_43_c0_ddr4_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_43_c0_ddr4_s_axi_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_43_c0_ddr4_s_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_43->c0_ddr4_s_axi_bid.bind(*p_43_c0_ddr4_s_axi_bid);
        p_43_c0_ddr4_s_axi_bid->set_sv_netview_offsetfromdp(10233328);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_43_c0_ddr4_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_43->c0_ddr4_s_axi_bresp.bind(*p_43_c0_ddr4_s_axi_bresp);
        p_43_c0_ddr4_s_axi_bresp->set_sv_netview_offsetfromdp(10233384);
        xsim_sc_channel<0, bool > *p_43_c0_ddr4_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_43->c0_ddr4_s_axi_bvalid.bind(*p_43_c0_ddr4_s_axi_bvalid);
        p_43_c0_ddr4_s_axi_bvalid->set_sv_netview_offsetfromdp(10233440);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_43_c0_ddr4_s_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_43->c0_ddr4_s_axi_arid.bind(*p_43_c0_ddr4_s_axi_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_43_c0_ddr4_s_axi_arid);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_43_c0_ddr4_s_axi_araddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_43->c0_ddr4_s_axi_araddr.bind(*p_43_c0_ddr4_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_43_c0_ddr4_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_43_c0_ddr4_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_43->c0_ddr4_s_axi_arlen.bind(*p_43_c0_ddr4_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_43_c0_ddr4_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_43_c0_ddr4_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_43->c0_ddr4_s_axi_arsize.bind(*p_43_c0_ddr4_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_43_c0_ddr4_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_43_c0_ddr4_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_43->c0_ddr4_s_axi_arburst.bind(*p_43_c0_ddr4_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_43_c0_ddr4_s_axi_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_43_c0_ddr4_s_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_43->c0_ddr4_s_axi_arlock.bind(*p_43_c0_ddr4_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_43_c0_ddr4_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_43_c0_ddr4_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_43->c0_ddr4_s_axi_arcache.bind(*p_43_c0_ddr4_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_43_c0_ddr4_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_43_c0_ddr4_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_43->c0_ddr4_s_axi_arprot.bind(*p_43_c0_ddr4_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_43_c0_ddr4_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_43_c0_ddr4_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_43->c0_ddr4_s_axi_arqos.bind(*p_43_c0_ddr4_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_43_c0_ddr4_s_axi_arqos);
        xsim_sc_channel<0, bool > *p_43_c0_ddr4_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_43->c0_ddr4_s_axi_arvalid.bind(*p_43_c0_ddr4_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_43_c0_ddr4_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_43_c0_ddr4_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_43->c0_ddr4_s_axi_arready.bind(*p_43_c0_ddr4_s_axi_arready);
        p_43_c0_ddr4_s_axi_arready->set_sv_netview_offsetfromdp(10234056);
        xsim_sc_channel<0, bool > *p_43_c0_ddr4_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_43->c0_ddr4_s_axi_rready.bind(*p_43_c0_ddr4_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_43_c0_ddr4_s_axi_rready);
        xsim_sc_channel<0, bool > *p_43_c0_ddr4_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_43->c0_ddr4_s_axi_rlast.bind(*p_43_c0_ddr4_s_axi_rlast);
        p_43_c0_ddr4_s_axi_rlast->set_sv_netview_offsetfromdp(10234168);
        xsim_sc_channel<0, bool > *p_43_c0_ddr4_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_43->c0_ddr4_s_axi_rvalid.bind(*p_43_c0_ddr4_s_axi_rvalid);
        p_43_c0_ddr4_s_axi_rvalid->set_sv_netview_offsetfromdp(10234224);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_43_c0_ddr4_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_43->c0_ddr4_s_axi_rresp.bind(*p_43_c0_ddr4_s_axi_rresp);
        p_43_c0_ddr4_s_axi_rresp->set_sv_netview_offsetfromdp(10234280);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_43_c0_ddr4_s_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_43->c0_ddr4_s_axi_rid.bind(*p_43_c0_ddr4_s_axi_rid);
        p_43_c0_ddr4_s_axi_rid->set_sv_netview_offsetfromdp(10234336);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_43_c0_ddr4_s_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_43->c0_ddr4_s_axi_rdata.bind(*p_43_c0_ddr4_s_axi_rdata);
        p_43_c0_ddr4_s_axi_rdata->set_sv_netview_offsetfromdp(10234392);
        xsim_sc_channel<0, bool > *p_43_addn_ui_clkout1 = new xsim_sc_channel<0, bool >();
        sc_inst_43->addn_ui_clkout1.bind(*p_43_addn_ui_clkout1);
        p_43_addn_ui_clkout1->set_sv_netview_offsetfromdp(10234448);
        xsim_sc_channel<0, bool > *p_43_sys_rst = new xsim_sc_channel<0, bool >();
        sc_inst_43->sys_rst.bind(*p_43_sys_rst);
        (*_glb_hdl_sc_channel_map).push_back(p_43_sys_rst);
        sc_inst_44 = new bd_d216_ddr4_mem01_ctrl_cc_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.memory.ddr4_mem01_ctrl_cc");
        sc_inst_44->xsim_set_dbg_index(2913);
        xsim_sc_channel<0, bool > *p_44_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_44->s_axi_aclk.bind(*p_44_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_44_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_44_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_44->s_axi_aresetn.bind(*p_44_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_44_s_axi_aresetn);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_44_s_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_44->s_axi_awaddr.bind(*p_44_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_44_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_44_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_44->s_axi_awprot.bind(*p_44_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_44_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_44_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_44->s_axi_awvalid.bind(*p_44_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_44_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_44_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_44->s_axi_awready.bind(*p_44_s_axi_awready);
        p_44_s_axi_awready->set_sv_netview_offsetfromdp(10234888);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_44_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_44->s_axi_wdata.bind(*p_44_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_44_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_44_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_44->s_axi_wstrb.bind(*p_44_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_44_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_44_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_44->s_axi_wvalid.bind(*p_44_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_44_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_44_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_44->s_axi_wready.bind(*p_44_s_axi_wready);
        p_44_s_axi_wready->set_sv_netview_offsetfromdp(10235112);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_44_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_44->s_axi_bresp.bind(*p_44_s_axi_bresp);
        p_44_s_axi_bresp->set_sv_netview_offsetfromdp(10235168);
        xsim_sc_channel<0, bool > *p_44_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_44->s_axi_bvalid.bind(*p_44_s_axi_bvalid);
        p_44_s_axi_bvalid->set_sv_netview_offsetfromdp(10235224);
        xsim_sc_channel<0, bool > *p_44_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_44->s_axi_bready.bind(*p_44_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_44_s_axi_bready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_44_s_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_44->s_axi_araddr.bind(*p_44_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_44_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_44_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_44->s_axi_arprot.bind(*p_44_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_44_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_44_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_44->s_axi_arvalid.bind(*p_44_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_44_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_44_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_44->s_axi_arready.bind(*p_44_s_axi_arready);
        p_44_s_axi_arready->set_sv_netview_offsetfromdp(10235504);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_44_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_44->s_axi_rdata.bind(*p_44_s_axi_rdata);
        p_44_s_axi_rdata->set_sv_netview_offsetfromdp(10235560);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_44_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_44->s_axi_rresp.bind(*p_44_s_axi_rresp);
        p_44_s_axi_rresp->set_sv_netview_offsetfromdp(10235616);
        xsim_sc_channel<0, bool > *p_44_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_44->s_axi_rvalid.bind(*p_44_s_axi_rvalid);
        p_44_s_axi_rvalid->set_sv_netview_offsetfromdp(10235672);
        xsim_sc_channel<0, bool > *p_44_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_44->s_axi_rready.bind(*p_44_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_44_s_axi_rready);
        xsim_sc_channel<0, bool > *p_44_m_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_44->m_axi_aclk.bind(*p_44_m_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_44_m_axi_aclk);
        xsim_sc_channel<0, bool > *p_44_m_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_44->m_axi_aresetn.bind(*p_44_m_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_44_m_axi_aresetn);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_44_m_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_44->m_axi_awaddr.bind(*p_44_m_axi_awaddr);
        p_44_m_axi_awaddr->set_sv_netview_offsetfromdp(10235896);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_44_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_44->m_axi_awprot.bind(*p_44_m_axi_awprot);
        p_44_m_axi_awprot->set_sv_netview_offsetfromdp(10235952);
        xsim_sc_channel<0, bool > *p_44_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_44->m_axi_awvalid.bind(*p_44_m_axi_awvalid);
        p_44_m_axi_awvalid->set_sv_netview_offsetfromdp(10236008);
        xsim_sc_channel<0, bool > *p_44_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_44->m_axi_awready.bind(*p_44_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_44_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_44_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_44->m_axi_wdata.bind(*p_44_m_axi_wdata);
        p_44_m_axi_wdata->set_sv_netview_offsetfromdp(10236120);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_44_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_44->m_axi_wstrb.bind(*p_44_m_axi_wstrb);
        p_44_m_axi_wstrb->set_sv_netview_offsetfromdp(10236176);
        xsim_sc_channel<0, bool > *p_44_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_44->m_axi_wvalid.bind(*p_44_m_axi_wvalid);
        p_44_m_axi_wvalid->set_sv_netview_offsetfromdp(10236232);
        xsim_sc_channel<0, bool > *p_44_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_44->m_axi_wready.bind(*p_44_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_44_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_44_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_44->m_axi_bresp.bind(*p_44_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_44_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_44_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_44->m_axi_bvalid.bind(*p_44_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_44_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_44_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_44->m_axi_bready.bind(*p_44_m_axi_bready);
        p_44_m_axi_bready->set_sv_netview_offsetfromdp(10236456);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_44_m_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_44->m_axi_araddr.bind(*p_44_m_axi_araddr);
        p_44_m_axi_araddr->set_sv_netview_offsetfromdp(10236512);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_44_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_44->m_axi_arprot.bind(*p_44_m_axi_arprot);
        p_44_m_axi_arprot->set_sv_netview_offsetfromdp(10236568);
        xsim_sc_channel<0, bool > *p_44_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_44->m_axi_arvalid.bind(*p_44_m_axi_arvalid);
        p_44_m_axi_arvalid->set_sv_netview_offsetfromdp(10236624);
        xsim_sc_channel<0, bool > *p_44_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_44->m_axi_arready.bind(*p_44_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_44_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_44_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_44->m_axi_rdata.bind(*p_44_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_44_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_44_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_44->m_axi_rresp.bind(*p_44_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_44_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_44_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_44->m_axi_rvalid.bind(*p_44_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_44_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_44_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_44->m_axi_rready.bind(*p_44_m_axi_rready);
        p_44_m_axi_rready->set_sv_netview_offsetfromdp(10236904);
        sc_inst_45 = new bd_d216_interconnect_ddrmem_ctrl_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.memory.interconnect_ddrmem_ctrl");
        sc_inst_45->xsim_set_dbg_index(2914);
        xsim_sc_channel<0, bool > *p_45_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_45->aclk.bind(*p_45_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_45_aclk);
        xsim_sc_channel<0, bool > *p_45_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_45->aresetn.bind(*p_45_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_45_aresetn);
        xsim_sc_channel<31, sc_dt::sc_bv<31> > *p_45_s_axi_awaddr = new xsim_sc_channel<31, sc_dt::sc_bv<31> >();
        sc_inst_45->s_axi_awaddr.bind(*p_45_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_45_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_45_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_45->s_axi_awprot.bind(*p_45_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_45_s_axi_awprot);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_s_axi_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->s_axi_awvalid.bind(*p_45_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_45_s_axi_awvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_s_axi_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->s_axi_awready.bind(*p_45_s_axi_awready);
        p_45_s_axi_awready->set_sv_netview_offsetfromdp(10237288);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_45_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_45->s_axi_wdata.bind(*p_45_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_45_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_45_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_45->s_axi_wstrb.bind(*p_45_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_45_s_axi_wstrb);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_s_axi_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->s_axi_wvalid.bind(*p_45_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_45_s_axi_wvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_s_axi_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->s_axi_wready.bind(*p_45_s_axi_wready);
        p_45_s_axi_wready->set_sv_netview_offsetfromdp(10237512);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_45_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_45->s_axi_bresp.bind(*p_45_s_axi_bresp);
        p_45_s_axi_bresp->set_sv_netview_offsetfromdp(10237568);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_s_axi_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->s_axi_bvalid.bind(*p_45_s_axi_bvalid);
        p_45_s_axi_bvalid->set_sv_netview_offsetfromdp(10237624);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_s_axi_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->s_axi_bready.bind(*p_45_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_45_s_axi_bready);
        xsim_sc_channel<31, sc_dt::sc_bv<31> > *p_45_s_axi_araddr = new xsim_sc_channel<31, sc_dt::sc_bv<31> >();
        sc_inst_45->s_axi_araddr.bind(*p_45_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_45_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_45_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_45->s_axi_arprot.bind(*p_45_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_45_s_axi_arprot);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_s_axi_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->s_axi_arvalid.bind(*p_45_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_45_s_axi_arvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_s_axi_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->s_axi_arready.bind(*p_45_s_axi_arready);
        p_45_s_axi_arready->set_sv_netview_offsetfromdp(10237904);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_45_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_45->s_axi_rdata.bind(*p_45_s_axi_rdata);
        p_45_s_axi_rdata->set_sv_netview_offsetfromdp(10237960);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_45_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_45->s_axi_rresp.bind(*p_45_s_axi_rresp);
        p_45_s_axi_rresp->set_sv_netview_offsetfromdp(10238016);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_s_axi_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->s_axi_rvalid.bind(*p_45_s_axi_rvalid);
        p_45_s_axi_rvalid->set_sv_netview_offsetfromdp(10238072);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_s_axi_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->s_axi_rready.bind(*p_45_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_45_s_axi_rready);
        xsim_sc_channel<62, sc_dt::sc_bv<62> > *p_45_m_axi_awaddr = new xsim_sc_channel<62, sc_dt::sc_bv<62> >();
        sc_inst_45->m_axi_awaddr.bind(*p_45_m_axi_awaddr);
        p_45_m_axi_awaddr->set_sv_netview_offsetfromdp(10238184);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_45_m_axi_awprot = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_45->m_axi_awprot.bind(*p_45_m_axi_awprot);
        p_45_m_axi_awprot->set_sv_netview_offsetfromdp(10238240);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_45_m_axi_awvalid = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_45->m_axi_awvalid.bind(*p_45_m_axi_awvalid);
        p_45_m_axi_awvalid->set_sv_netview_offsetfromdp(10238296);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_45_m_axi_awready = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_45->m_axi_awready.bind(*p_45_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_45_m_axi_awready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_45_m_axi_wdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_45->m_axi_wdata.bind(*p_45_m_axi_wdata);
        p_45_m_axi_wdata->set_sv_netview_offsetfromdp(10238408);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_45_m_axi_wstrb = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_45->m_axi_wstrb.bind(*p_45_m_axi_wstrb);
        p_45_m_axi_wstrb->set_sv_netview_offsetfromdp(10238464);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_45_m_axi_wvalid = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_45->m_axi_wvalid.bind(*p_45_m_axi_wvalid);
        p_45_m_axi_wvalid->set_sv_netview_offsetfromdp(10238520);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_45_m_axi_wready = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_45->m_axi_wready.bind(*p_45_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_45_m_axi_wready);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_45_m_axi_bresp = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_45->m_axi_bresp.bind(*p_45_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_45_m_axi_bresp);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_45_m_axi_bvalid = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_45->m_axi_bvalid.bind(*p_45_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_45_m_axi_bvalid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_45_m_axi_bready = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_45->m_axi_bready.bind(*p_45_m_axi_bready);
        p_45_m_axi_bready->set_sv_netview_offsetfromdp(10238744);
        xsim_sc_channel<62, sc_dt::sc_bv<62> > *p_45_m_axi_araddr = new xsim_sc_channel<62, sc_dt::sc_bv<62> >();
        sc_inst_45->m_axi_araddr.bind(*p_45_m_axi_araddr);
        p_45_m_axi_araddr->set_sv_netview_offsetfromdp(10238800);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_45_m_axi_arprot = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_45->m_axi_arprot.bind(*p_45_m_axi_arprot);
        p_45_m_axi_arprot->set_sv_netview_offsetfromdp(10238856);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_45_m_axi_arvalid = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_45->m_axi_arvalid.bind(*p_45_m_axi_arvalid);
        p_45_m_axi_arvalid->set_sv_netview_offsetfromdp(10238912);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_45_m_axi_arready = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_45->m_axi_arready.bind(*p_45_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_45_m_axi_arready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_45_m_axi_rdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_45->m_axi_rdata.bind(*p_45_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_45_m_axi_rdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_45_m_axi_rresp = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_45->m_axi_rresp.bind(*p_45_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_45_m_axi_rresp);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_45_m_axi_rvalid = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_45->m_axi_rvalid.bind(*p_45_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_45_m_axi_rvalid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_45_m_axi_rready = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_45->m_axi_rready.bind(*p_45_m_axi_rready);
        p_45_m_axi_rready->set_sv_netview_offsetfromdp(10239192);
        sc_inst_46 = new bd_d216_plram_mem00_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.memory.plram_mem00");
        sc_inst_46->xsim_set_dbg_index(2915);
        xsim_sc_channel<0, bool > *p_46_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_46->s_axi_aclk.bind(*p_46_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_46_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_46->s_axi_aresetn.bind(*p_46_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_aresetn);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_46_s_axi_awaddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_46->s_axi_awaddr.bind(*p_46_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_46_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_46->s_axi_awlen.bind(*p_46_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_46_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_46->s_axi_awsize.bind(*p_46_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_46_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_46->s_axi_awburst.bind(*p_46_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_awburst);
        xsim_sc_channel<0, bool > *p_46_s_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_46->s_axi_awlock.bind(*p_46_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_46_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_46->s_axi_awcache.bind(*p_46_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_46_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_46->s_axi_awprot.bind(*p_46_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_46_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_46->s_axi_awvalid.bind(*p_46_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_46_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_46->s_axi_awready.bind(*p_46_s_axi_awready);
        p_46_s_axi_awready->set_sv_netview_offsetfromdp(10239856);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_46_s_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_46->s_axi_wdata.bind(*p_46_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_46_s_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_46->s_axi_wstrb.bind(*p_46_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_46_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_46->s_axi_wlast.bind(*p_46_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_46_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_46->s_axi_wvalid.bind(*p_46_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_46_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_46->s_axi_wready.bind(*p_46_s_axi_wready);
        p_46_s_axi_wready->set_sv_netview_offsetfromdp(10240136);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_46_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_46->s_axi_bresp.bind(*p_46_s_axi_bresp);
        p_46_s_axi_bresp->set_sv_netview_offsetfromdp(10240192);
        xsim_sc_channel<0, bool > *p_46_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_46->s_axi_bvalid.bind(*p_46_s_axi_bvalid);
        p_46_s_axi_bvalid->set_sv_netview_offsetfromdp(10240248);
        xsim_sc_channel<0, bool > *p_46_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_46->s_axi_bready.bind(*p_46_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_bready);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_46_s_axi_araddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_46->s_axi_araddr.bind(*p_46_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_46_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_46->s_axi_arlen.bind(*p_46_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_46_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_46->s_axi_arsize.bind(*p_46_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_46_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_46->s_axi_arburst.bind(*p_46_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_arburst);
        xsim_sc_channel<0, bool > *p_46_s_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_46->s_axi_arlock.bind(*p_46_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_46_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_46->s_axi_arcache.bind(*p_46_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_46_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_46->s_axi_arprot.bind(*p_46_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_46_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_46->s_axi_arvalid.bind(*p_46_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_46_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_46->s_axi_arready.bind(*p_46_s_axi_arready);
        p_46_s_axi_arready->set_sv_netview_offsetfromdp(10240808);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_46_s_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_46->s_axi_rdata.bind(*p_46_s_axi_rdata);
        p_46_s_axi_rdata->set_sv_netview_offsetfromdp(10240864);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_46_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_46->s_axi_rresp.bind(*p_46_s_axi_rresp);
        p_46_s_axi_rresp->set_sv_netview_offsetfromdp(10240920);
        xsim_sc_channel<0, bool > *p_46_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_46->s_axi_rlast.bind(*p_46_s_axi_rlast);
        p_46_s_axi_rlast->set_sv_netview_offsetfromdp(10240976);
        xsim_sc_channel<0, bool > *p_46_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_46->s_axi_rvalid.bind(*p_46_s_axi_rvalid);
        p_46_s_axi_rvalid->set_sv_netview_offsetfromdp(10241032);
        xsim_sc_channel<0, bool > *p_46_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_46->s_axi_rready.bind(*p_46_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_rready);
        xsim_sc_channel<0, bool > *p_46_bram_rst_a = new xsim_sc_channel<0, bool >();
        sc_inst_46->bram_rst_a.bind(*p_46_bram_rst_a);
        p_46_bram_rst_a->set_sv_netview_offsetfromdp(10241144);
        xsim_sc_channel<0, bool > *p_46_bram_clk_a = new xsim_sc_channel<0, bool >();
        sc_inst_46->bram_clk_a.bind(*p_46_bram_clk_a);
        p_46_bram_clk_a->set_sv_netview_offsetfromdp(10241200);
        xsim_sc_channel<0, bool > *p_46_bram_en_a = new xsim_sc_channel<0, bool >();
        sc_inst_46->bram_en_a.bind(*p_46_bram_en_a);
        p_46_bram_en_a->set_sv_netview_offsetfromdp(10241256);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_46_bram_we_a = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_46->bram_we_a.bind(*p_46_bram_we_a);
        p_46_bram_we_a->set_sv_netview_offsetfromdp(10241312);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_46_bram_addr_a = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_46->bram_addr_a.bind(*p_46_bram_addr_a);
        p_46_bram_addr_a->set_sv_netview_offsetfromdp(10241368);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_46_bram_wrdata_a = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_46->bram_wrdata_a.bind(*p_46_bram_wrdata_a);
        p_46_bram_wrdata_a->set_sv_netview_offsetfromdp(10241424);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_46_bram_rddata_a = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_46->bram_rddata_a.bind(*p_46_bram_rddata_a);
        (*_glb_hdl_sc_channel_map).push_back(p_46_bram_rddata_a);
        xsim_sc_channel<0, bool > *p_46_bram_rst_b = new xsim_sc_channel<0, bool >();
        sc_inst_46->bram_rst_b.bind(*p_46_bram_rst_b);
        p_46_bram_rst_b->set_sv_netview_offsetfromdp(10241536);
        xsim_sc_channel<0, bool > *p_46_bram_clk_b = new xsim_sc_channel<0, bool >();
        sc_inst_46->bram_clk_b.bind(*p_46_bram_clk_b);
        p_46_bram_clk_b->set_sv_netview_offsetfromdp(10241592);
        xsim_sc_channel<0, bool > *p_46_bram_en_b = new xsim_sc_channel<0, bool >();
        sc_inst_46->bram_en_b.bind(*p_46_bram_en_b);
        p_46_bram_en_b->set_sv_netview_offsetfromdp(10241648);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_46_bram_we_b = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_46->bram_we_b.bind(*p_46_bram_we_b);
        p_46_bram_we_b->set_sv_netview_offsetfromdp(10241704);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_46_bram_addr_b = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_46->bram_addr_b.bind(*p_46_bram_addr_b);
        p_46_bram_addr_b->set_sv_netview_offsetfromdp(10241760);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_46_bram_wrdata_b = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_46->bram_wrdata_b.bind(*p_46_bram_wrdata_b);
        p_46_bram_wrdata_b->set_sv_netview_offsetfromdp(10241816);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_46_bram_rddata_b = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_46->bram_rddata_b.bind(*p_46_bram_rddata_b);
        (*_glb_hdl_sc_channel_map).push_back(p_46_bram_rddata_b);
        sc_inst_47 = new bd_d216_plram_mem01_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.memory.plram_mem01");
        sc_inst_47->xsim_set_dbg_index(2917);
        xsim_sc_channel<0, bool > *p_47_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_47->s_axi_aclk.bind(*p_47_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_47_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_47_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_47->s_axi_aresetn.bind(*p_47_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_47_s_axi_aresetn);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_47_s_axi_awaddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_47->s_axi_awaddr.bind(*p_47_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_47_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_47_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_47->s_axi_awlen.bind(*p_47_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_47_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_47_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_47->s_axi_awsize.bind(*p_47_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_47_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_47_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_47->s_axi_awburst.bind(*p_47_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_47_s_axi_awburst);
        xsim_sc_channel<0, bool > *p_47_s_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_47->s_axi_awlock.bind(*p_47_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_47_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_47_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_47->s_axi_awcache.bind(*p_47_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_47_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_47_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_47->s_axi_awprot.bind(*p_47_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_47_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_47_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_47->s_axi_awvalid.bind(*p_47_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_47_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_47_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_47->s_axi_awready.bind(*p_47_s_axi_awready);
        p_47_s_axi_awready->set_sv_netview_offsetfromdp(10303656);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_47_s_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_47->s_axi_wdata.bind(*p_47_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_47_s_axi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_47_s_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_47->s_axi_wstrb.bind(*p_47_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_47_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_47_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_47->s_axi_wlast.bind(*p_47_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_47_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_47_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_47->s_axi_wvalid.bind(*p_47_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_47_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_47_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_47->s_axi_wready.bind(*p_47_s_axi_wready);
        p_47_s_axi_wready->set_sv_netview_offsetfromdp(10303936);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_47_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_47->s_axi_bresp.bind(*p_47_s_axi_bresp);
        p_47_s_axi_bresp->set_sv_netview_offsetfromdp(10303992);
        xsim_sc_channel<0, bool > *p_47_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_47->s_axi_bvalid.bind(*p_47_s_axi_bvalid);
        p_47_s_axi_bvalid->set_sv_netview_offsetfromdp(10304048);
        xsim_sc_channel<0, bool > *p_47_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_47->s_axi_bready.bind(*p_47_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_47_s_axi_bready);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_47_s_axi_araddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_47->s_axi_araddr.bind(*p_47_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_47_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_47_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_47->s_axi_arlen.bind(*p_47_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_47_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_47_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_47->s_axi_arsize.bind(*p_47_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_47_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_47_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_47->s_axi_arburst.bind(*p_47_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_47_s_axi_arburst);
        xsim_sc_channel<0, bool > *p_47_s_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_47->s_axi_arlock.bind(*p_47_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_47_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_47_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_47->s_axi_arcache.bind(*p_47_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_47_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_47_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_47->s_axi_arprot.bind(*p_47_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_47_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_47_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_47->s_axi_arvalid.bind(*p_47_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_47_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_47_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_47->s_axi_arready.bind(*p_47_s_axi_arready);
        p_47_s_axi_arready->set_sv_netview_offsetfromdp(10304608);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_47_s_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_47->s_axi_rdata.bind(*p_47_s_axi_rdata);
        p_47_s_axi_rdata->set_sv_netview_offsetfromdp(10304664);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_47_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_47->s_axi_rresp.bind(*p_47_s_axi_rresp);
        p_47_s_axi_rresp->set_sv_netview_offsetfromdp(10304720);
        xsim_sc_channel<0, bool > *p_47_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_47->s_axi_rlast.bind(*p_47_s_axi_rlast);
        p_47_s_axi_rlast->set_sv_netview_offsetfromdp(10304776);
        xsim_sc_channel<0, bool > *p_47_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_47->s_axi_rvalid.bind(*p_47_s_axi_rvalid);
        p_47_s_axi_rvalid->set_sv_netview_offsetfromdp(10304832);
        xsim_sc_channel<0, bool > *p_47_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_47->s_axi_rready.bind(*p_47_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_47_s_axi_rready);
        xsim_sc_channel<0, bool > *p_47_bram_rst_a = new xsim_sc_channel<0, bool >();
        sc_inst_47->bram_rst_a.bind(*p_47_bram_rst_a);
        p_47_bram_rst_a->set_sv_netview_offsetfromdp(10304944);
        xsim_sc_channel<0, bool > *p_47_bram_clk_a = new xsim_sc_channel<0, bool >();
        sc_inst_47->bram_clk_a.bind(*p_47_bram_clk_a);
        p_47_bram_clk_a->set_sv_netview_offsetfromdp(10305000);
        xsim_sc_channel<0, bool > *p_47_bram_en_a = new xsim_sc_channel<0, bool >();
        sc_inst_47->bram_en_a.bind(*p_47_bram_en_a);
        p_47_bram_en_a->set_sv_netview_offsetfromdp(10305056);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_47_bram_we_a = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_47->bram_we_a.bind(*p_47_bram_we_a);
        p_47_bram_we_a->set_sv_netview_offsetfromdp(10305112);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_47_bram_addr_a = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_47->bram_addr_a.bind(*p_47_bram_addr_a);
        p_47_bram_addr_a->set_sv_netview_offsetfromdp(10305168);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_47_bram_wrdata_a = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_47->bram_wrdata_a.bind(*p_47_bram_wrdata_a);
        p_47_bram_wrdata_a->set_sv_netview_offsetfromdp(10305224);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_47_bram_rddata_a = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_47->bram_rddata_a.bind(*p_47_bram_rddata_a);
        (*_glb_hdl_sc_channel_map).push_back(p_47_bram_rddata_a);
        xsim_sc_channel<0, bool > *p_47_bram_rst_b = new xsim_sc_channel<0, bool >();
        sc_inst_47->bram_rst_b.bind(*p_47_bram_rst_b);
        p_47_bram_rst_b->set_sv_netview_offsetfromdp(10305336);
        xsim_sc_channel<0, bool > *p_47_bram_clk_b = new xsim_sc_channel<0, bool >();
        sc_inst_47->bram_clk_b.bind(*p_47_bram_clk_b);
        p_47_bram_clk_b->set_sv_netview_offsetfromdp(10305392);
        xsim_sc_channel<0, bool > *p_47_bram_en_b = new xsim_sc_channel<0, bool >();
        sc_inst_47->bram_en_b.bind(*p_47_bram_en_b);
        p_47_bram_en_b->set_sv_netview_offsetfromdp(10305448);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_47_bram_we_b = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_47->bram_we_b.bind(*p_47_bram_we_b);
        p_47_bram_we_b->set_sv_netview_offsetfromdp(10305504);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_47_bram_addr_b = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_47->bram_addr_b.bind(*p_47_bram_addr_b);
        p_47_bram_addr_b->set_sv_netview_offsetfromdp(10305560);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_47_bram_wrdata_b = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_47->bram_wrdata_b.bind(*p_47_bram_wrdata_b);
        p_47_bram_wrdata_b->set_sv_netview_offsetfromdp(10305616);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_47_bram_rddata_b = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_47->bram_rddata_b.bind(*p_47_bram_rddata_b);
        (*_glb_hdl_sc_channel_map).push_back(p_47_bram_rddata_b);
        sc_inst_48 = new bd_d216_plram_mem02_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.memory.plram_mem02");
        sc_inst_48->xsim_set_dbg_index(2919);
        xsim_sc_channel<0, bool > *p_48_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_48->s_axi_aclk.bind(*p_48_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_48_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_48->s_axi_aresetn.bind(*p_48_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_aresetn);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_48_s_axi_awaddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_48->s_axi_awaddr.bind(*p_48_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_48_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_48->s_axi_awlen.bind(*p_48_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_48_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_48->s_axi_awsize.bind(*p_48_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_48_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_48->s_axi_awburst.bind(*p_48_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_awburst);
        xsim_sc_channel<0, bool > *p_48_s_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_48->s_axi_awlock.bind(*p_48_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_48_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_48->s_axi_awcache.bind(*p_48_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_48_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_48->s_axi_awprot.bind(*p_48_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_48_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_48->s_axi_awvalid.bind(*p_48_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_48_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_48->s_axi_awready.bind(*p_48_s_axi_awready);
        p_48_s_axi_awready->set_sv_netview_offsetfromdp(10367456);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_48_s_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_48->s_axi_wdata.bind(*p_48_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_48_s_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_48->s_axi_wstrb.bind(*p_48_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_48_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_48->s_axi_wlast.bind(*p_48_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_48_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_48->s_axi_wvalid.bind(*p_48_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_48_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_48->s_axi_wready.bind(*p_48_s_axi_wready);
        p_48_s_axi_wready->set_sv_netview_offsetfromdp(10367736);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_48_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_48->s_axi_bresp.bind(*p_48_s_axi_bresp);
        p_48_s_axi_bresp->set_sv_netview_offsetfromdp(10367792);
        xsim_sc_channel<0, bool > *p_48_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_48->s_axi_bvalid.bind(*p_48_s_axi_bvalid);
        p_48_s_axi_bvalid->set_sv_netview_offsetfromdp(10367848);
        xsim_sc_channel<0, bool > *p_48_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_48->s_axi_bready.bind(*p_48_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_bready);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_48_s_axi_araddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_48->s_axi_araddr.bind(*p_48_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_48_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_48->s_axi_arlen.bind(*p_48_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_48_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_48->s_axi_arsize.bind(*p_48_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_48_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_48->s_axi_arburst.bind(*p_48_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_arburst);
        xsim_sc_channel<0, bool > *p_48_s_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_48->s_axi_arlock.bind(*p_48_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_48_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_48->s_axi_arcache.bind(*p_48_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_48_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_48->s_axi_arprot.bind(*p_48_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_48_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_48->s_axi_arvalid.bind(*p_48_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_48_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_48->s_axi_arready.bind(*p_48_s_axi_arready);
        p_48_s_axi_arready->set_sv_netview_offsetfromdp(10368408);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_48_s_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_48->s_axi_rdata.bind(*p_48_s_axi_rdata);
        p_48_s_axi_rdata->set_sv_netview_offsetfromdp(10368464);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_48_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_48->s_axi_rresp.bind(*p_48_s_axi_rresp);
        p_48_s_axi_rresp->set_sv_netview_offsetfromdp(10368520);
        xsim_sc_channel<0, bool > *p_48_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_48->s_axi_rlast.bind(*p_48_s_axi_rlast);
        p_48_s_axi_rlast->set_sv_netview_offsetfromdp(10368576);
        xsim_sc_channel<0, bool > *p_48_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_48->s_axi_rvalid.bind(*p_48_s_axi_rvalid);
        p_48_s_axi_rvalid->set_sv_netview_offsetfromdp(10368632);
        xsim_sc_channel<0, bool > *p_48_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_48->s_axi_rready.bind(*p_48_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_rready);
        xsim_sc_channel<0, bool > *p_48_bram_rst_a = new xsim_sc_channel<0, bool >();
        sc_inst_48->bram_rst_a.bind(*p_48_bram_rst_a);
        p_48_bram_rst_a->set_sv_netview_offsetfromdp(10368744);
        xsim_sc_channel<0, bool > *p_48_bram_clk_a = new xsim_sc_channel<0, bool >();
        sc_inst_48->bram_clk_a.bind(*p_48_bram_clk_a);
        p_48_bram_clk_a->set_sv_netview_offsetfromdp(10368800);
        xsim_sc_channel<0, bool > *p_48_bram_en_a = new xsim_sc_channel<0, bool >();
        sc_inst_48->bram_en_a.bind(*p_48_bram_en_a);
        p_48_bram_en_a->set_sv_netview_offsetfromdp(10368856);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_48_bram_we_a = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_48->bram_we_a.bind(*p_48_bram_we_a);
        p_48_bram_we_a->set_sv_netview_offsetfromdp(10368912);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_48_bram_addr_a = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_48->bram_addr_a.bind(*p_48_bram_addr_a);
        p_48_bram_addr_a->set_sv_netview_offsetfromdp(10368968);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_48_bram_wrdata_a = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_48->bram_wrdata_a.bind(*p_48_bram_wrdata_a);
        p_48_bram_wrdata_a->set_sv_netview_offsetfromdp(10369024);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_48_bram_rddata_a = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_48->bram_rddata_a.bind(*p_48_bram_rddata_a);
        (*_glb_hdl_sc_channel_map).push_back(p_48_bram_rddata_a);
        xsim_sc_channel<0, bool > *p_48_bram_rst_b = new xsim_sc_channel<0, bool >();
        sc_inst_48->bram_rst_b.bind(*p_48_bram_rst_b);
        p_48_bram_rst_b->set_sv_netview_offsetfromdp(10369136);
        xsim_sc_channel<0, bool > *p_48_bram_clk_b = new xsim_sc_channel<0, bool >();
        sc_inst_48->bram_clk_b.bind(*p_48_bram_clk_b);
        p_48_bram_clk_b->set_sv_netview_offsetfromdp(10369192);
        xsim_sc_channel<0, bool > *p_48_bram_en_b = new xsim_sc_channel<0, bool >();
        sc_inst_48->bram_en_b.bind(*p_48_bram_en_b);
        p_48_bram_en_b->set_sv_netview_offsetfromdp(10369248);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_48_bram_we_b = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_48->bram_we_b.bind(*p_48_bram_we_b);
        p_48_bram_we_b->set_sv_netview_offsetfromdp(10369304);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_48_bram_addr_b = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_48->bram_addr_b.bind(*p_48_bram_addr_b);
        p_48_bram_addr_b->set_sv_netview_offsetfromdp(10369360);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_48_bram_wrdata_b = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_48->bram_wrdata_b.bind(*p_48_bram_wrdata_b);
        p_48_bram_wrdata_b->set_sv_netview_offsetfromdp(10369416);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_48_bram_rddata_b = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_48->bram_rddata_b.bind(*p_48_bram_rddata_b);
        (*_glb_hdl_sc_channel_map).push_back(p_48_bram_rddata_b);
        sc_inst_49 = new bd_d216_plram_mem03_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.memory.plram_mem03");
        sc_inst_49->xsim_set_dbg_index(2921);
        xsim_sc_channel<0, bool > *p_49_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_49->s_axi_aclk.bind(*p_49_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_49_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_49_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_49->s_axi_aresetn.bind(*p_49_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_49_s_axi_aresetn);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_49_s_axi_awaddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_49->s_axi_awaddr.bind(*p_49_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_49_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_49_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_49->s_axi_awlen.bind(*p_49_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_49_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_49_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_49->s_axi_awsize.bind(*p_49_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_49_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_49_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_49->s_axi_awburst.bind(*p_49_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_49_s_axi_awburst);
        xsim_sc_channel<0, bool > *p_49_s_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_49->s_axi_awlock.bind(*p_49_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_49_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_49_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_49->s_axi_awcache.bind(*p_49_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_49_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_49_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_49->s_axi_awprot.bind(*p_49_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_49_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_49_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_49->s_axi_awvalid.bind(*p_49_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_49_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_49_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_49->s_axi_awready.bind(*p_49_s_axi_awready);
        p_49_s_axi_awready->set_sv_netview_offsetfromdp(10431256);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_49_s_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_49->s_axi_wdata.bind(*p_49_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_49_s_axi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_49_s_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_49->s_axi_wstrb.bind(*p_49_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_49_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_49_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_49->s_axi_wlast.bind(*p_49_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_49_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_49_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_49->s_axi_wvalid.bind(*p_49_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_49_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_49_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_49->s_axi_wready.bind(*p_49_s_axi_wready);
        p_49_s_axi_wready->set_sv_netview_offsetfromdp(10431536);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_49_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_49->s_axi_bresp.bind(*p_49_s_axi_bresp);
        p_49_s_axi_bresp->set_sv_netview_offsetfromdp(10431592);
        xsim_sc_channel<0, bool > *p_49_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_49->s_axi_bvalid.bind(*p_49_s_axi_bvalid);
        p_49_s_axi_bvalid->set_sv_netview_offsetfromdp(10431648);
        xsim_sc_channel<0, bool > *p_49_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_49->s_axi_bready.bind(*p_49_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_49_s_axi_bready);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_49_s_axi_araddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_49->s_axi_araddr.bind(*p_49_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_49_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_49_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_49->s_axi_arlen.bind(*p_49_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_49_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_49_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_49->s_axi_arsize.bind(*p_49_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_49_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_49_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_49->s_axi_arburst.bind(*p_49_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_49_s_axi_arburst);
        xsim_sc_channel<0, bool > *p_49_s_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_49->s_axi_arlock.bind(*p_49_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_49_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_49_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_49->s_axi_arcache.bind(*p_49_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_49_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_49_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_49->s_axi_arprot.bind(*p_49_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_49_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_49_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_49->s_axi_arvalid.bind(*p_49_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_49_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_49_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_49->s_axi_arready.bind(*p_49_s_axi_arready);
        p_49_s_axi_arready->set_sv_netview_offsetfromdp(10432208);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_49_s_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_49->s_axi_rdata.bind(*p_49_s_axi_rdata);
        p_49_s_axi_rdata->set_sv_netview_offsetfromdp(10432264);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_49_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_49->s_axi_rresp.bind(*p_49_s_axi_rresp);
        p_49_s_axi_rresp->set_sv_netview_offsetfromdp(10432320);
        xsim_sc_channel<0, bool > *p_49_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_49->s_axi_rlast.bind(*p_49_s_axi_rlast);
        p_49_s_axi_rlast->set_sv_netview_offsetfromdp(10432376);
        xsim_sc_channel<0, bool > *p_49_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_49->s_axi_rvalid.bind(*p_49_s_axi_rvalid);
        p_49_s_axi_rvalid->set_sv_netview_offsetfromdp(10432432);
        xsim_sc_channel<0, bool > *p_49_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_49->s_axi_rready.bind(*p_49_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_49_s_axi_rready);
        xsim_sc_channel<0, bool > *p_49_bram_rst_a = new xsim_sc_channel<0, bool >();
        sc_inst_49->bram_rst_a.bind(*p_49_bram_rst_a);
        p_49_bram_rst_a->set_sv_netview_offsetfromdp(10432544);
        xsim_sc_channel<0, bool > *p_49_bram_clk_a = new xsim_sc_channel<0, bool >();
        sc_inst_49->bram_clk_a.bind(*p_49_bram_clk_a);
        p_49_bram_clk_a->set_sv_netview_offsetfromdp(10432600);
        xsim_sc_channel<0, bool > *p_49_bram_en_a = new xsim_sc_channel<0, bool >();
        sc_inst_49->bram_en_a.bind(*p_49_bram_en_a);
        p_49_bram_en_a->set_sv_netview_offsetfromdp(10432656);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_49_bram_we_a = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_49->bram_we_a.bind(*p_49_bram_we_a);
        p_49_bram_we_a->set_sv_netview_offsetfromdp(10432712);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_49_bram_addr_a = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_49->bram_addr_a.bind(*p_49_bram_addr_a);
        p_49_bram_addr_a->set_sv_netview_offsetfromdp(10432768);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_49_bram_wrdata_a = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_49->bram_wrdata_a.bind(*p_49_bram_wrdata_a);
        p_49_bram_wrdata_a->set_sv_netview_offsetfromdp(10432824);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_49_bram_rddata_a = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_49->bram_rddata_a.bind(*p_49_bram_rddata_a);
        (*_glb_hdl_sc_channel_map).push_back(p_49_bram_rddata_a);
        xsim_sc_channel<0, bool > *p_49_bram_rst_b = new xsim_sc_channel<0, bool >();
        sc_inst_49->bram_rst_b.bind(*p_49_bram_rst_b);
        p_49_bram_rst_b->set_sv_netview_offsetfromdp(10432936);
        xsim_sc_channel<0, bool > *p_49_bram_clk_b = new xsim_sc_channel<0, bool >();
        sc_inst_49->bram_clk_b.bind(*p_49_bram_clk_b);
        p_49_bram_clk_b->set_sv_netview_offsetfromdp(10432992);
        xsim_sc_channel<0, bool > *p_49_bram_en_b = new xsim_sc_channel<0, bool >();
        sc_inst_49->bram_en_b.bind(*p_49_bram_en_b);
        p_49_bram_en_b->set_sv_netview_offsetfromdp(10433048);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_49_bram_we_b = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_49->bram_we_b.bind(*p_49_bram_we_b);
        p_49_bram_we_b->set_sv_netview_offsetfromdp(10433104);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_49_bram_addr_b = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_49->bram_addr_b.bind(*p_49_bram_addr_b);
        p_49_bram_addr_b->set_sv_netview_offsetfromdp(10433160);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_49_bram_wrdata_b = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_49->bram_wrdata_b.bind(*p_49_bram_wrdata_b);
        p_49_bram_wrdata_b->set_sv_netview_offsetfromdp(10433216);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_49_bram_rddata_b = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_49->bram_rddata_b.bind(*p_49_bram_rddata_b);
        (*_glb_hdl_sc_channel_map).push_back(p_49_bram_rddata_b);
        sc_inst_50 = new bd_d216_plram_mem04_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.memory.plram_mem04");
        sc_inst_50->xsim_set_dbg_index(2923);
        xsim_sc_channel<0, bool > *p_50_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_50->s_axi_aclk.bind(*p_50_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_50_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_50->s_axi_aresetn.bind(*p_50_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_aresetn);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_50_s_axi_awaddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_50->s_axi_awaddr.bind(*p_50_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_50_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_50->s_axi_awlen.bind(*p_50_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_50_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_50->s_axi_awsize.bind(*p_50_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_50_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_50->s_axi_awburst.bind(*p_50_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_awburst);
        xsim_sc_channel<0, bool > *p_50_s_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_50->s_axi_awlock.bind(*p_50_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_50_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_50->s_axi_awcache.bind(*p_50_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_50_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_50->s_axi_awprot.bind(*p_50_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_50_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_50->s_axi_awvalid.bind(*p_50_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_50_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_50->s_axi_awready.bind(*p_50_s_axi_awready);
        p_50_s_axi_awready->set_sv_netview_offsetfromdp(10495056);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_50_s_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_50->s_axi_wdata.bind(*p_50_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_50_s_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_50->s_axi_wstrb.bind(*p_50_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_50_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_50->s_axi_wlast.bind(*p_50_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_50_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_50->s_axi_wvalid.bind(*p_50_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_50_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_50->s_axi_wready.bind(*p_50_s_axi_wready);
        p_50_s_axi_wready->set_sv_netview_offsetfromdp(10495336);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_50_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_50->s_axi_bresp.bind(*p_50_s_axi_bresp);
        p_50_s_axi_bresp->set_sv_netview_offsetfromdp(10495392);
        xsim_sc_channel<0, bool > *p_50_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_50->s_axi_bvalid.bind(*p_50_s_axi_bvalid);
        p_50_s_axi_bvalid->set_sv_netview_offsetfromdp(10495448);
        xsim_sc_channel<0, bool > *p_50_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_50->s_axi_bready.bind(*p_50_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_bready);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_50_s_axi_araddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_50->s_axi_araddr.bind(*p_50_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_50_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_50->s_axi_arlen.bind(*p_50_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_50_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_50->s_axi_arsize.bind(*p_50_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_50_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_50->s_axi_arburst.bind(*p_50_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_arburst);
        xsim_sc_channel<0, bool > *p_50_s_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_50->s_axi_arlock.bind(*p_50_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_50_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_50->s_axi_arcache.bind(*p_50_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_50_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_50->s_axi_arprot.bind(*p_50_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_50_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_50->s_axi_arvalid.bind(*p_50_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_50_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_50->s_axi_arready.bind(*p_50_s_axi_arready);
        p_50_s_axi_arready->set_sv_netview_offsetfromdp(10496008);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_50_s_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_50->s_axi_rdata.bind(*p_50_s_axi_rdata);
        p_50_s_axi_rdata->set_sv_netview_offsetfromdp(10496064);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_50_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_50->s_axi_rresp.bind(*p_50_s_axi_rresp);
        p_50_s_axi_rresp->set_sv_netview_offsetfromdp(10496120);
        xsim_sc_channel<0, bool > *p_50_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_50->s_axi_rlast.bind(*p_50_s_axi_rlast);
        p_50_s_axi_rlast->set_sv_netview_offsetfromdp(10496176);
        xsim_sc_channel<0, bool > *p_50_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_50->s_axi_rvalid.bind(*p_50_s_axi_rvalid);
        p_50_s_axi_rvalid->set_sv_netview_offsetfromdp(10496232);
        xsim_sc_channel<0, bool > *p_50_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_50->s_axi_rready.bind(*p_50_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_rready);
        xsim_sc_channel<0, bool > *p_50_bram_rst_a = new xsim_sc_channel<0, bool >();
        sc_inst_50->bram_rst_a.bind(*p_50_bram_rst_a);
        p_50_bram_rst_a->set_sv_netview_offsetfromdp(10496344);
        xsim_sc_channel<0, bool > *p_50_bram_clk_a = new xsim_sc_channel<0, bool >();
        sc_inst_50->bram_clk_a.bind(*p_50_bram_clk_a);
        p_50_bram_clk_a->set_sv_netview_offsetfromdp(10496400);
        xsim_sc_channel<0, bool > *p_50_bram_en_a = new xsim_sc_channel<0, bool >();
        sc_inst_50->bram_en_a.bind(*p_50_bram_en_a);
        p_50_bram_en_a->set_sv_netview_offsetfromdp(10496456);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_50_bram_we_a = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_50->bram_we_a.bind(*p_50_bram_we_a);
        p_50_bram_we_a->set_sv_netview_offsetfromdp(10496512);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_50_bram_addr_a = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_50->bram_addr_a.bind(*p_50_bram_addr_a);
        p_50_bram_addr_a->set_sv_netview_offsetfromdp(10496568);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_50_bram_wrdata_a = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_50->bram_wrdata_a.bind(*p_50_bram_wrdata_a);
        p_50_bram_wrdata_a->set_sv_netview_offsetfromdp(10496624);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_50_bram_rddata_a = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_50->bram_rddata_a.bind(*p_50_bram_rddata_a);
        (*_glb_hdl_sc_channel_map).push_back(p_50_bram_rddata_a);
        xsim_sc_channel<0, bool > *p_50_bram_rst_b = new xsim_sc_channel<0, bool >();
        sc_inst_50->bram_rst_b.bind(*p_50_bram_rst_b);
        p_50_bram_rst_b->set_sv_netview_offsetfromdp(10496736);
        xsim_sc_channel<0, bool > *p_50_bram_clk_b = new xsim_sc_channel<0, bool >();
        sc_inst_50->bram_clk_b.bind(*p_50_bram_clk_b);
        p_50_bram_clk_b->set_sv_netview_offsetfromdp(10496792);
        xsim_sc_channel<0, bool > *p_50_bram_en_b = new xsim_sc_channel<0, bool >();
        sc_inst_50->bram_en_b.bind(*p_50_bram_en_b);
        p_50_bram_en_b->set_sv_netview_offsetfromdp(10496848);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_50_bram_we_b = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_50->bram_we_b.bind(*p_50_bram_we_b);
        p_50_bram_we_b->set_sv_netview_offsetfromdp(10496904);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_50_bram_addr_b = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_50->bram_addr_b.bind(*p_50_bram_addr_b);
        p_50_bram_addr_b->set_sv_netview_offsetfromdp(10496960);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_50_bram_wrdata_b = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_50->bram_wrdata_b.bind(*p_50_bram_wrdata_b);
        p_50_bram_wrdata_b->set_sv_netview_offsetfromdp(10497016);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_50_bram_rddata_b = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_50->bram_rddata_b.bind(*p_50_bram_rddata_b);
        (*_glb_hdl_sc_channel_map).push_back(p_50_bram_rddata_b);
        sc_inst_51 = new bd_d216_plram_mem05_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.memory.plram_mem05");
        sc_inst_51->xsim_set_dbg_index(2925);
        xsim_sc_channel<0, bool > *p_51_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_51->s_axi_aclk.bind(*p_51_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_51_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_51->s_axi_aresetn.bind(*p_51_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_aresetn);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_51_s_axi_awaddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_51->s_axi_awaddr.bind(*p_51_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_51_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_51->s_axi_awlen.bind(*p_51_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_51_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_51->s_axi_awsize.bind(*p_51_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_51_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_51->s_axi_awburst.bind(*p_51_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_awburst);
        xsim_sc_channel<0, bool > *p_51_s_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_51->s_axi_awlock.bind(*p_51_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_51_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_51->s_axi_awcache.bind(*p_51_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_51_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_51->s_axi_awprot.bind(*p_51_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_51_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_51->s_axi_awvalid.bind(*p_51_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_51_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_51->s_axi_awready.bind(*p_51_s_axi_awready);
        p_51_s_axi_awready->set_sv_netview_offsetfromdp(10558856);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_51_s_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_51->s_axi_wdata.bind(*p_51_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_51_s_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_51->s_axi_wstrb.bind(*p_51_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_51_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_51->s_axi_wlast.bind(*p_51_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_51_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_51->s_axi_wvalid.bind(*p_51_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_51_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_51->s_axi_wready.bind(*p_51_s_axi_wready);
        p_51_s_axi_wready->set_sv_netview_offsetfromdp(10559136);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_51_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_51->s_axi_bresp.bind(*p_51_s_axi_bresp);
        p_51_s_axi_bresp->set_sv_netview_offsetfromdp(10559192);
        xsim_sc_channel<0, bool > *p_51_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_51->s_axi_bvalid.bind(*p_51_s_axi_bvalid);
        p_51_s_axi_bvalid->set_sv_netview_offsetfromdp(10559248);
        xsim_sc_channel<0, bool > *p_51_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_51->s_axi_bready.bind(*p_51_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_bready);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_51_s_axi_araddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_51->s_axi_araddr.bind(*p_51_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_51_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_51->s_axi_arlen.bind(*p_51_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_51_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_51->s_axi_arsize.bind(*p_51_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_51_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_51->s_axi_arburst.bind(*p_51_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_arburst);
        xsim_sc_channel<0, bool > *p_51_s_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_51->s_axi_arlock.bind(*p_51_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_51_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_51->s_axi_arcache.bind(*p_51_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_51_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_51->s_axi_arprot.bind(*p_51_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_51_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_51->s_axi_arvalid.bind(*p_51_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_51_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_51->s_axi_arready.bind(*p_51_s_axi_arready);
        p_51_s_axi_arready->set_sv_netview_offsetfromdp(10559808);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_51_s_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_51->s_axi_rdata.bind(*p_51_s_axi_rdata);
        p_51_s_axi_rdata->set_sv_netview_offsetfromdp(10559864);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_51_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_51->s_axi_rresp.bind(*p_51_s_axi_rresp);
        p_51_s_axi_rresp->set_sv_netview_offsetfromdp(10559920);
        xsim_sc_channel<0, bool > *p_51_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_51->s_axi_rlast.bind(*p_51_s_axi_rlast);
        p_51_s_axi_rlast->set_sv_netview_offsetfromdp(10559976);
        xsim_sc_channel<0, bool > *p_51_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_51->s_axi_rvalid.bind(*p_51_s_axi_rvalid);
        p_51_s_axi_rvalid->set_sv_netview_offsetfromdp(10560032);
        xsim_sc_channel<0, bool > *p_51_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_51->s_axi_rready.bind(*p_51_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_rready);
        xsim_sc_channel<0, bool > *p_51_bram_rst_a = new xsim_sc_channel<0, bool >();
        sc_inst_51->bram_rst_a.bind(*p_51_bram_rst_a);
        p_51_bram_rst_a->set_sv_netview_offsetfromdp(10560144);
        xsim_sc_channel<0, bool > *p_51_bram_clk_a = new xsim_sc_channel<0, bool >();
        sc_inst_51->bram_clk_a.bind(*p_51_bram_clk_a);
        p_51_bram_clk_a->set_sv_netview_offsetfromdp(10560200);
        xsim_sc_channel<0, bool > *p_51_bram_en_a = new xsim_sc_channel<0, bool >();
        sc_inst_51->bram_en_a.bind(*p_51_bram_en_a);
        p_51_bram_en_a->set_sv_netview_offsetfromdp(10560256);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_51_bram_we_a = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_51->bram_we_a.bind(*p_51_bram_we_a);
        p_51_bram_we_a->set_sv_netview_offsetfromdp(10560312);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_51_bram_addr_a = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_51->bram_addr_a.bind(*p_51_bram_addr_a);
        p_51_bram_addr_a->set_sv_netview_offsetfromdp(10560368);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_51_bram_wrdata_a = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_51->bram_wrdata_a.bind(*p_51_bram_wrdata_a);
        p_51_bram_wrdata_a->set_sv_netview_offsetfromdp(10560424);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_51_bram_rddata_a = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_51->bram_rddata_a.bind(*p_51_bram_rddata_a);
        (*_glb_hdl_sc_channel_map).push_back(p_51_bram_rddata_a);
        xsim_sc_channel<0, bool > *p_51_bram_rst_b = new xsim_sc_channel<0, bool >();
        sc_inst_51->bram_rst_b.bind(*p_51_bram_rst_b);
        p_51_bram_rst_b->set_sv_netview_offsetfromdp(10560536);
        xsim_sc_channel<0, bool > *p_51_bram_clk_b = new xsim_sc_channel<0, bool >();
        sc_inst_51->bram_clk_b.bind(*p_51_bram_clk_b);
        p_51_bram_clk_b->set_sv_netview_offsetfromdp(10560592);
        xsim_sc_channel<0, bool > *p_51_bram_en_b = new xsim_sc_channel<0, bool >();
        sc_inst_51->bram_en_b.bind(*p_51_bram_en_b);
        p_51_bram_en_b->set_sv_netview_offsetfromdp(10560648);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_51_bram_we_b = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_51->bram_we_b.bind(*p_51_bram_we_b);
        p_51_bram_we_b->set_sv_netview_offsetfromdp(10560704);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_51_bram_addr_b = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_51->bram_addr_b.bind(*p_51_bram_addr_b);
        p_51_bram_addr_b->set_sv_netview_offsetfromdp(10560760);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_51_bram_wrdata_b = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_51->bram_wrdata_b.bind(*p_51_bram_wrdata_b);
        p_51_bram_wrdata_b->set_sv_netview_offsetfromdp(10560816);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_51_bram_rddata_b = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_51->bram_rddata_b.bind(*p_51_bram_rddata_b);
        (*_glb_hdl_sc_channel_map).push_back(p_51_bram_rddata_b);
        sc_inst_52 = new pfm_dynamic_sci(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.pfm_dynamic_sci_inst");
        sc_inst_52->xsim_set_dbg_index(62);
        sc_inst_53 = new pfm_dynamic_profile_vip_0_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.profile_vip_0");
        sc_inst_53->xsim_set_dbg_index(63);
        xsim_sc_channel<0, bool > *p_53_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_53->aclk.bind(*p_53_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_53_aclk);
        xsim_sc_channel<0, bool > *p_53_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_53->aresetn.bind(*p_53_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_53_aresetn);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_53_s_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_53->s_axi_awaddr.bind(*p_53_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_53_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_53->s_axi_awlen.bind(*p_53_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_awlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_53_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_53->s_axi_awburst.bind(*p_53_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_53_s_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_53->s_axi_awlock.bind(*p_53_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_53_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_53->s_axi_awcache.bind(*p_53_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_53_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_53->s_axi_awprot.bind(*p_53_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_53_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_53->s_axi_awqos.bind(*p_53_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_awqos);
        xsim_sc_channel<0, bool > *p_53_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_53->s_axi_awvalid.bind(*p_53_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_53_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_53->s_axi_awready.bind(*p_53_s_axi_awready);
        p_53_s_axi_awready->set_sv_netview_offsetfromdp(10906784);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_53_s_axi_wdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_53->s_axi_wdata.bind(*p_53_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_wdata);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_53_s_axi_wstrb = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_53->s_axi_wstrb.bind(*p_53_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_53_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_53->s_axi_wlast.bind(*p_53_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_53_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_53->s_axi_wvalid.bind(*p_53_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_53_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_53->s_axi_wready.bind(*p_53_s_axi_wready);
        p_53_s_axi_wready->set_sv_netview_offsetfromdp(10907064);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_53_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_53->s_axi_bresp.bind(*p_53_s_axi_bresp);
        p_53_s_axi_bresp->set_sv_netview_offsetfromdp(10907120);
        xsim_sc_channel<0, bool > *p_53_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_53->s_axi_bvalid.bind(*p_53_s_axi_bvalid);
        p_53_s_axi_bvalid->set_sv_netview_offsetfromdp(10907176);
        xsim_sc_channel<0, bool > *p_53_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_53->s_axi_bready.bind(*p_53_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_bready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_53_s_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_53->s_axi_araddr.bind(*p_53_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_53_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_53->s_axi_arlen.bind(*p_53_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_arlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_53_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_53->s_axi_arburst.bind(*p_53_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_53_s_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_53->s_axi_arlock.bind(*p_53_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_53_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_53->s_axi_arcache.bind(*p_53_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_53_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_53->s_axi_arprot.bind(*p_53_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_53_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_53->s_axi_arqos.bind(*p_53_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_arqos);
        xsim_sc_channel<0, bool > *p_53_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_53->s_axi_arvalid.bind(*p_53_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_53_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_53->s_axi_arready.bind(*p_53_s_axi_arready);
        p_53_s_axi_arready->set_sv_netview_offsetfromdp(10907736);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_53_s_axi_rdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_53->s_axi_rdata.bind(*p_53_s_axi_rdata);
        p_53_s_axi_rdata->set_sv_netview_offsetfromdp(10907792);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_53_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_53->s_axi_rresp.bind(*p_53_s_axi_rresp);
        p_53_s_axi_rresp->set_sv_netview_offsetfromdp(10907848);
        xsim_sc_channel<0, bool > *p_53_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_53->s_axi_rlast.bind(*p_53_s_axi_rlast);
        p_53_s_axi_rlast->set_sv_netview_offsetfromdp(10907904);
        xsim_sc_channel<0, bool > *p_53_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_53->s_axi_rvalid.bind(*p_53_s_axi_rvalid);
        p_53_s_axi_rvalid->set_sv_netview_offsetfromdp(10907960);
        xsim_sc_channel<0, bool > *p_53_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_53->s_axi_rready.bind(*p_53_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_rready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_53_m_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_53->m_axi_awaddr.bind(*p_53_m_axi_awaddr);
        p_53_m_axi_awaddr->set_sv_netview_offsetfromdp(10908072);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_53_m_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_53->m_axi_awlen.bind(*p_53_m_axi_awlen);
        p_53_m_axi_awlen->set_sv_netview_offsetfromdp(10908128);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_53_m_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_53->m_axi_awburst.bind(*p_53_m_axi_awburst);
        p_53_m_axi_awburst->set_sv_netview_offsetfromdp(10908184);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_53_m_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_53->m_axi_awlock.bind(*p_53_m_axi_awlock);
        p_53_m_axi_awlock->set_sv_netview_offsetfromdp(10908240);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_53_m_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_53->m_axi_awcache.bind(*p_53_m_axi_awcache);
        p_53_m_axi_awcache->set_sv_netview_offsetfromdp(10908296);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_53_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_53->m_axi_awprot.bind(*p_53_m_axi_awprot);
        p_53_m_axi_awprot->set_sv_netview_offsetfromdp(10908352);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_53_m_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_53->m_axi_awqos.bind(*p_53_m_axi_awqos);
        p_53_m_axi_awqos->set_sv_netview_offsetfromdp(10908408);
        xsim_sc_channel<0, bool > *p_53_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_53->m_axi_awvalid.bind(*p_53_m_axi_awvalid);
        p_53_m_axi_awvalid->set_sv_netview_offsetfromdp(10908464);
        xsim_sc_channel<0, bool > *p_53_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_53->m_axi_awready.bind(*p_53_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_53_m_axi_awready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_53_m_axi_wdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_53->m_axi_wdata.bind(*p_53_m_axi_wdata);
        p_53_m_axi_wdata->set_sv_netview_offsetfromdp(10908576);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_53_m_axi_wstrb = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_53->m_axi_wstrb.bind(*p_53_m_axi_wstrb);
        p_53_m_axi_wstrb->set_sv_netview_offsetfromdp(10908632);
        xsim_sc_channel<0, bool > *p_53_m_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_53->m_axi_wlast.bind(*p_53_m_axi_wlast);
        p_53_m_axi_wlast->set_sv_netview_offsetfromdp(10908688);
        xsim_sc_channel<0, bool > *p_53_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_53->m_axi_wvalid.bind(*p_53_m_axi_wvalid);
        p_53_m_axi_wvalid->set_sv_netview_offsetfromdp(10908744);
        xsim_sc_channel<0, bool > *p_53_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_53->m_axi_wready.bind(*p_53_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_53_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_53_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_53->m_axi_bresp.bind(*p_53_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_53_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_53_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_53->m_axi_bvalid.bind(*p_53_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_53_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_53_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_53->m_axi_bready.bind(*p_53_m_axi_bready);
        p_53_m_axi_bready->set_sv_netview_offsetfromdp(10908968);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_53_m_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_53->m_axi_araddr.bind(*p_53_m_axi_araddr);
        p_53_m_axi_araddr->set_sv_netview_offsetfromdp(10909024);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_53_m_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_53->m_axi_arlen.bind(*p_53_m_axi_arlen);
        p_53_m_axi_arlen->set_sv_netview_offsetfromdp(10909080);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_53_m_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_53->m_axi_arburst.bind(*p_53_m_axi_arburst);
        p_53_m_axi_arburst->set_sv_netview_offsetfromdp(10909136);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_53_m_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_53->m_axi_arlock.bind(*p_53_m_axi_arlock);
        p_53_m_axi_arlock->set_sv_netview_offsetfromdp(10909192);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_53_m_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_53->m_axi_arcache.bind(*p_53_m_axi_arcache);
        p_53_m_axi_arcache->set_sv_netview_offsetfromdp(10909248);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_53_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_53->m_axi_arprot.bind(*p_53_m_axi_arprot);
        p_53_m_axi_arprot->set_sv_netview_offsetfromdp(10909304);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_53_m_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_53->m_axi_arqos.bind(*p_53_m_axi_arqos);
        p_53_m_axi_arqos->set_sv_netview_offsetfromdp(10909360);
        xsim_sc_channel<0, bool > *p_53_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_53->m_axi_arvalid.bind(*p_53_m_axi_arvalid);
        p_53_m_axi_arvalid->set_sv_netview_offsetfromdp(10909416);
        xsim_sc_channel<0, bool > *p_53_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_53->m_axi_arready.bind(*p_53_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_53_m_axi_arready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_53_m_axi_rdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_53->m_axi_rdata.bind(*p_53_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_53_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_53_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_53->m_axi_rresp.bind(*p_53_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_53_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_53_m_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_53->m_axi_rlast.bind(*p_53_m_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_53_m_axi_rlast);
        xsim_sc_channel<0, bool > *p_53_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_53->m_axi_rvalid.bind(*p_53_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_53_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_53_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_53->m_axi_rready.bind(*p_53_m_axi_rready);
        p_53_m_axi_rready->set_sv_netview_offsetfromdp(10909752);
        sc_inst_54 = new pfm_dynamic_m01_regslice_4(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.slr0.interconnect_axilite_user_0.m01_couplers.m01_regslice");
        sc_inst_54->xsim_set_dbg_index(3404);
        xsim_sc_channel<0, bool > *p_54_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_54->aclk.bind(*p_54_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_54_aclk);
        xsim_sc_channel<0, bool > *p_54_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_54->aresetn.bind(*p_54_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_54_aresetn);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_54_s_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_54->s_axi_awaddr.bind(*p_54_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_54_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_54->s_axi_awprot.bind(*p_54_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_54_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_54->s_axi_awvalid.bind(*p_54_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_54_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_54->s_axi_awready.bind(*p_54_s_axi_awready);
        p_54_s_axi_awready->set_sv_netview_offsetfromdp(11186288);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_54_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_54->s_axi_wdata.bind(*p_54_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_54_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_54->s_axi_wstrb.bind(*p_54_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_54_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_54->s_axi_wvalid.bind(*p_54_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_54_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_54->s_axi_wready.bind(*p_54_s_axi_wready);
        p_54_s_axi_wready->set_sv_netview_offsetfromdp(11186512);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_54_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_54->s_axi_bresp.bind(*p_54_s_axi_bresp);
        p_54_s_axi_bresp->set_sv_netview_offsetfromdp(11186568);
        xsim_sc_channel<0, bool > *p_54_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_54->s_axi_bvalid.bind(*p_54_s_axi_bvalid);
        p_54_s_axi_bvalid->set_sv_netview_offsetfromdp(11186624);
        xsim_sc_channel<0, bool > *p_54_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_54->s_axi_bready.bind(*p_54_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_54_s_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_54->s_axi_araddr.bind(*p_54_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_54_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_54->s_axi_arprot.bind(*p_54_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_54_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_54->s_axi_arvalid.bind(*p_54_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_54_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_54->s_axi_arready.bind(*p_54_s_axi_arready);
        p_54_s_axi_arready->set_sv_netview_offsetfromdp(11186904);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_54_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_54->s_axi_rdata.bind(*p_54_s_axi_rdata);
        p_54_s_axi_rdata->set_sv_netview_offsetfromdp(11186960);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_54_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_54->s_axi_rresp.bind(*p_54_s_axi_rresp);
        p_54_s_axi_rresp->set_sv_netview_offsetfromdp(11187016);
        xsim_sc_channel<0, bool > *p_54_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_54->s_axi_rvalid.bind(*p_54_s_axi_rvalid);
        p_54_s_axi_rvalid->set_sv_netview_offsetfromdp(11187072);
        xsim_sc_channel<0, bool > *p_54_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_54->s_axi_rready.bind(*p_54_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_rready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_54_m_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_54->m_axi_awaddr.bind(*p_54_m_axi_awaddr);
        p_54_m_axi_awaddr->set_sv_netview_offsetfromdp(11187184);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_54_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_54->m_axi_awprot.bind(*p_54_m_axi_awprot);
        p_54_m_axi_awprot->set_sv_netview_offsetfromdp(11187240);
        xsim_sc_channel<0, bool > *p_54_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_54->m_axi_awvalid.bind(*p_54_m_axi_awvalid);
        p_54_m_axi_awvalid->set_sv_netview_offsetfromdp(11187296);
        xsim_sc_channel<0, bool > *p_54_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_54->m_axi_awready.bind(*p_54_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_54_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_54_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_54->m_axi_wdata.bind(*p_54_m_axi_wdata);
        p_54_m_axi_wdata->set_sv_netview_offsetfromdp(11187408);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_54_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_54->m_axi_wstrb.bind(*p_54_m_axi_wstrb);
        p_54_m_axi_wstrb->set_sv_netview_offsetfromdp(11187464);
        xsim_sc_channel<0, bool > *p_54_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_54->m_axi_wvalid.bind(*p_54_m_axi_wvalid);
        p_54_m_axi_wvalid->set_sv_netview_offsetfromdp(11187520);
        xsim_sc_channel<0, bool > *p_54_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_54->m_axi_wready.bind(*p_54_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_54_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_54_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_54->m_axi_bresp.bind(*p_54_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_54_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_54_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_54->m_axi_bvalid.bind(*p_54_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_54_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_54_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_54->m_axi_bready.bind(*p_54_m_axi_bready);
        p_54_m_axi_bready->set_sv_netview_offsetfromdp(11187744);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_54_m_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_54->m_axi_araddr.bind(*p_54_m_axi_araddr);
        p_54_m_axi_araddr->set_sv_netview_offsetfromdp(11187800);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_54_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_54->m_axi_arprot.bind(*p_54_m_axi_arprot);
        p_54_m_axi_arprot->set_sv_netview_offsetfromdp(11187856);
        xsim_sc_channel<0, bool > *p_54_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_54->m_axi_arvalid.bind(*p_54_m_axi_arvalid);
        p_54_m_axi_arvalid->set_sv_netview_offsetfromdp(11187912);
        xsim_sc_channel<0, bool > *p_54_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_54->m_axi_arready.bind(*p_54_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_54_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_54_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_54->m_axi_rdata.bind(*p_54_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_54_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_54_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_54->m_axi_rresp.bind(*p_54_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_54_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_54_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_54->m_axi_rvalid.bind(*p_54_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_54_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_54_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_54->m_axi_rready.bind(*p_54_m_axi_rready);
        p_54_m_axi_rready->set_sv_netview_offsetfromdp(11188192);
        sc_inst_55 = new pfm_dynamic_auto_cc_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.slr0.interconnect_axilite_user_0.m02_couplers.auto_cc");
        sc_inst_55->xsim_set_dbg_index(3445);
        xsim_sc_channel<0, bool > *p_55_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_55->s_axi_aclk.bind(*p_55_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_55_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_55->s_axi_aresetn.bind(*p_55_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_aresetn);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_55_s_axi_awaddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_55->s_axi_awaddr.bind(*p_55_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_55_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_55->s_axi_awprot.bind(*p_55_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_55_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_55->s_axi_awvalid.bind(*p_55_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_55_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_55->s_axi_awready.bind(*p_55_s_axi_awready);
        p_55_s_axi_awready->set_sv_netview_offsetfromdp(11225216);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_55_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_55->s_axi_wdata.bind(*p_55_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_55_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_55->s_axi_wstrb.bind(*p_55_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_55_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_55->s_axi_wvalid.bind(*p_55_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_55_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_55->s_axi_wready.bind(*p_55_s_axi_wready);
        p_55_s_axi_wready->set_sv_netview_offsetfromdp(11225440);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_55_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_55->s_axi_bresp.bind(*p_55_s_axi_bresp);
        p_55_s_axi_bresp->set_sv_netview_offsetfromdp(11225496);
        xsim_sc_channel<0, bool > *p_55_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_55->s_axi_bvalid.bind(*p_55_s_axi_bvalid);
        p_55_s_axi_bvalid->set_sv_netview_offsetfromdp(11225552);
        xsim_sc_channel<0, bool > *p_55_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_55->s_axi_bready.bind(*p_55_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_bready);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_55_s_axi_araddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_55->s_axi_araddr.bind(*p_55_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_55_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_55->s_axi_arprot.bind(*p_55_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_55_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_55->s_axi_arvalid.bind(*p_55_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_55_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_55->s_axi_arready.bind(*p_55_s_axi_arready);
        p_55_s_axi_arready->set_sv_netview_offsetfromdp(11225832);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_55_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_55->s_axi_rdata.bind(*p_55_s_axi_rdata);
        p_55_s_axi_rdata->set_sv_netview_offsetfromdp(11225888);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_55_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_55->s_axi_rresp.bind(*p_55_s_axi_rresp);
        p_55_s_axi_rresp->set_sv_netview_offsetfromdp(11225944);
        xsim_sc_channel<0, bool > *p_55_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_55->s_axi_rvalid.bind(*p_55_s_axi_rvalid);
        p_55_s_axi_rvalid->set_sv_netview_offsetfromdp(11226000);
        xsim_sc_channel<0, bool > *p_55_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_55->s_axi_rready.bind(*p_55_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_rready);
        xsim_sc_channel<0, bool > *p_55_m_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_55->m_axi_aclk.bind(*p_55_m_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_55_m_axi_aclk);
        xsim_sc_channel<0, bool > *p_55_m_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_55->m_axi_aresetn.bind(*p_55_m_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_55_m_axi_aresetn);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_55_m_axi_awaddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_55->m_axi_awaddr.bind(*p_55_m_axi_awaddr);
        p_55_m_axi_awaddr->set_sv_netview_offsetfromdp(11226224);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_55_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_55->m_axi_awprot.bind(*p_55_m_axi_awprot);
        p_55_m_axi_awprot->set_sv_netview_offsetfromdp(11226280);
        xsim_sc_channel<0, bool > *p_55_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_55->m_axi_awvalid.bind(*p_55_m_axi_awvalid);
        p_55_m_axi_awvalid->set_sv_netview_offsetfromdp(11226336);
        xsim_sc_channel<0, bool > *p_55_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_55->m_axi_awready.bind(*p_55_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_55_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_55_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_55->m_axi_wdata.bind(*p_55_m_axi_wdata);
        p_55_m_axi_wdata->set_sv_netview_offsetfromdp(11226448);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_55_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_55->m_axi_wstrb.bind(*p_55_m_axi_wstrb);
        p_55_m_axi_wstrb->set_sv_netview_offsetfromdp(11226504);
        xsim_sc_channel<0, bool > *p_55_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_55->m_axi_wvalid.bind(*p_55_m_axi_wvalid);
        p_55_m_axi_wvalid->set_sv_netview_offsetfromdp(11226560);
        xsim_sc_channel<0, bool > *p_55_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_55->m_axi_wready.bind(*p_55_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_55_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_55_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_55->m_axi_bresp.bind(*p_55_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_55_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_55_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_55->m_axi_bvalid.bind(*p_55_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_55_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_55_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_55->m_axi_bready.bind(*p_55_m_axi_bready);
        p_55_m_axi_bready->set_sv_netview_offsetfromdp(11226784);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_55_m_axi_araddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_55->m_axi_araddr.bind(*p_55_m_axi_araddr);
        p_55_m_axi_araddr->set_sv_netview_offsetfromdp(11226840);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_55_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_55->m_axi_arprot.bind(*p_55_m_axi_arprot);
        p_55_m_axi_arprot->set_sv_netview_offsetfromdp(11226896);
        xsim_sc_channel<0, bool > *p_55_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_55->m_axi_arvalid.bind(*p_55_m_axi_arvalid);
        p_55_m_axi_arvalid->set_sv_netview_offsetfromdp(11226952);
        xsim_sc_channel<0, bool > *p_55_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_55->m_axi_arready.bind(*p_55_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_55_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_55_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_55->m_axi_rdata.bind(*p_55_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_55_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_55_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_55->m_axi_rresp.bind(*p_55_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_55_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_55_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_55->m_axi_rvalid.bind(*p_55_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_55_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_55_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_55->m_axi_rready.bind(*p_55_m_axi_rready);
        p_55_m_axi_rready->set_sv_netview_offsetfromdp(11227232);
        sc_inst_56 = new pfm_dynamic_m02_regslice_4(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.slr0.interconnect_axilite_user_0.m02_couplers.m02_regslice");
        sc_inst_56->xsim_set_dbg_index(3446);
        xsim_sc_channel<0, bool > *p_56_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_56->aclk.bind(*p_56_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_56_aclk);
        xsim_sc_channel<0, bool > *p_56_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_56->aresetn.bind(*p_56_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_56_aresetn);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_56_s_axi_awaddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_56->s_axi_awaddr.bind(*p_56_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_56_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_56->s_axi_awprot.bind(*p_56_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_56_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_56->s_axi_awvalid.bind(*p_56_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_56_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_56->s_axi_awready.bind(*p_56_s_axi_awready);
        p_56_s_axi_awready->set_sv_netview_offsetfromdp(11227616);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_56_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_56->s_axi_wdata.bind(*p_56_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_56_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_56->s_axi_wstrb.bind(*p_56_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_56_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_56->s_axi_wvalid.bind(*p_56_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_56_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_56->s_axi_wready.bind(*p_56_s_axi_wready);
        p_56_s_axi_wready->set_sv_netview_offsetfromdp(11227840);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_56_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_56->s_axi_bresp.bind(*p_56_s_axi_bresp);
        p_56_s_axi_bresp->set_sv_netview_offsetfromdp(11227896);
        xsim_sc_channel<0, bool > *p_56_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_56->s_axi_bvalid.bind(*p_56_s_axi_bvalid);
        p_56_s_axi_bvalid->set_sv_netview_offsetfromdp(11227952);
        xsim_sc_channel<0, bool > *p_56_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_56->s_axi_bready.bind(*p_56_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_bready);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_56_s_axi_araddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_56->s_axi_araddr.bind(*p_56_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_56_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_56->s_axi_arprot.bind(*p_56_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_56_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_56->s_axi_arvalid.bind(*p_56_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_56_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_56->s_axi_arready.bind(*p_56_s_axi_arready);
        p_56_s_axi_arready->set_sv_netview_offsetfromdp(11228232);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_56_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_56->s_axi_rdata.bind(*p_56_s_axi_rdata);
        p_56_s_axi_rdata->set_sv_netview_offsetfromdp(11228288);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_56_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_56->s_axi_rresp.bind(*p_56_s_axi_rresp);
        p_56_s_axi_rresp->set_sv_netview_offsetfromdp(11228344);
        xsim_sc_channel<0, bool > *p_56_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_56->s_axi_rvalid.bind(*p_56_s_axi_rvalid);
        p_56_s_axi_rvalid->set_sv_netview_offsetfromdp(11228400);
        xsim_sc_channel<0, bool > *p_56_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_56->s_axi_rready.bind(*p_56_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_rready);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_56_m_axi_awaddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_56->m_axi_awaddr.bind(*p_56_m_axi_awaddr);
        p_56_m_axi_awaddr->set_sv_netview_offsetfromdp(11228512);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_56_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_56->m_axi_awprot.bind(*p_56_m_axi_awprot);
        p_56_m_axi_awprot->set_sv_netview_offsetfromdp(11228568);
        xsim_sc_channel<0, bool > *p_56_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_56->m_axi_awvalid.bind(*p_56_m_axi_awvalid);
        p_56_m_axi_awvalid->set_sv_netview_offsetfromdp(11228624);
        xsim_sc_channel<0, bool > *p_56_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_56->m_axi_awready.bind(*p_56_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_56_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_56_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_56->m_axi_wdata.bind(*p_56_m_axi_wdata);
        p_56_m_axi_wdata->set_sv_netview_offsetfromdp(11228736);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_56_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_56->m_axi_wstrb.bind(*p_56_m_axi_wstrb);
        p_56_m_axi_wstrb->set_sv_netview_offsetfromdp(11228792);
        xsim_sc_channel<0, bool > *p_56_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_56->m_axi_wvalid.bind(*p_56_m_axi_wvalid);
        p_56_m_axi_wvalid->set_sv_netview_offsetfromdp(11228848);
        xsim_sc_channel<0, bool > *p_56_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_56->m_axi_wready.bind(*p_56_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_56_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_56_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_56->m_axi_bresp.bind(*p_56_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_56_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_56_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_56->m_axi_bvalid.bind(*p_56_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_56_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_56_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_56->m_axi_bready.bind(*p_56_m_axi_bready);
        p_56_m_axi_bready->set_sv_netview_offsetfromdp(11229072);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_56_m_axi_araddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_56->m_axi_araddr.bind(*p_56_m_axi_araddr);
        p_56_m_axi_araddr->set_sv_netview_offsetfromdp(11229128);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_56_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_56->m_axi_arprot.bind(*p_56_m_axi_arprot);
        p_56_m_axi_arprot->set_sv_netview_offsetfromdp(11229184);
        xsim_sc_channel<0, bool > *p_56_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_56->m_axi_arvalid.bind(*p_56_m_axi_arvalid);
        p_56_m_axi_arvalid->set_sv_netview_offsetfromdp(11229240);
        xsim_sc_channel<0, bool > *p_56_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_56->m_axi_arready.bind(*p_56_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_56_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_56_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_56->m_axi_rdata.bind(*p_56_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_56_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_56_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_56->m_axi_rresp.bind(*p_56_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_56_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_56_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_56->m_axi_rvalid.bind(*p_56_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_56_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_56_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_56->m_axi_rready.bind(*p_56_m_axi_rready);
        p_56_m_axi_rready->set_sv_netview_offsetfromdp(11229520);
        sc_inst_57 = new pfm_dynamic_xbar_3(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.slr0.interconnect_axilite_user_0.xbar");
        sc_inst_57->xsim_set_dbg_index(1496);
        xsim_sc_channel<0, bool > *p_57_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_57->aclk.bind(*p_57_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_57_aclk);
        xsim_sc_channel<0, bool > *p_57_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_57->aresetn.bind(*p_57_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_57_aresetn);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_57_s_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_57->s_axi_awaddr.bind(*p_57_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_57_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_57->s_axi_awprot.bind(*p_57_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_awprot);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_57_s_axi_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_57->s_axi_awvalid.bind(*p_57_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_awvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_57_s_axi_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_57->s_axi_awready.bind(*p_57_s_axi_awready);
        p_57_s_axi_awready->set_sv_netview_offsetfromdp(11240080);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_57_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_57->s_axi_wdata.bind(*p_57_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_57_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_57->s_axi_wstrb.bind(*p_57_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_wstrb);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_57_s_axi_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_57->s_axi_wvalid.bind(*p_57_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_wvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_57_s_axi_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_57->s_axi_wready.bind(*p_57_s_axi_wready);
        p_57_s_axi_wready->set_sv_netview_offsetfromdp(11240304);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_57_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_57->s_axi_bresp.bind(*p_57_s_axi_bresp);
        p_57_s_axi_bresp->set_sv_netview_offsetfromdp(11240360);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_57_s_axi_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_57->s_axi_bvalid.bind(*p_57_s_axi_bvalid);
        p_57_s_axi_bvalid->set_sv_netview_offsetfromdp(11240416);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_57_s_axi_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_57->s_axi_bready.bind(*p_57_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_57_s_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_57->s_axi_araddr.bind(*p_57_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_57_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_57->s_axi_arprot.bind(*p_57_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_arprot);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_57_s_axi_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_57->s_axi_arvalid.bind(*p_57_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_arvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_57_s_axi_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_57->s_axi_arready.bind(*p_57_s_axi_arready);
        p_57_s_axi_arready->set_sv_netview_offsetfromdp(11240696);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_57_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_57->s_axi_rdata.bind(*p_57_s_axi_rdata);
        p_57_s_axi_rdata->set_sv_netview_offsetfromdp(11240752);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_57_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_57->s_axi_rresp.bind(*p_57_s_axi_rresp);
        p_57_s_axi_rresp->set_sv_netview_offsetfromdp(11240808);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_57_s_axi_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_57->s_axi_rvalid.bind(*p_57_s_axi_rvalid);
        p_57_s_axi_rvalid->set_sv_netview_offsetfromdp(11240864);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_57_s_axi_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_57->s_axi_rready.bind(*p_57_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_rready);
        xsim_sc_channel<192, sc_dt::sc_bv<192> > *p_57_m_axi_awaddr = new xsim_sc_channel<192, sc_dt::sc_bv<192> >();
        sc_inst_57->m_axi_awaddr.bind(*p_57_m_axi_awaddr);
        p_57_m_axi_awaddr->set_sv_netview_offsetfromdp(11240976);
        xsim_sc_channel<9, sc_dt::sc_bv<9> > *p_57_m_axi_awprot = new xsim_sc_channel<9, sc_dt::sc_bv<9> >();
        sc_inst_57->m_axi_awprot.bind(*p_57_m_axi_awprot);
        p_57_m_axi_awprot->set_sv_netview_offsetfromdp(11241032);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_57_m_axi_awvalid = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_57->m_axi_awvalid.bind(*p_57_m_axi_awvalid);
        p_57_m_axi_awvalid->set_sv_netview_offsetfromdp(11241088);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_57_m_axi_awready = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_57->m_axi_awready.bind(*p_57_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_57_m_axi_awready);
        xsim_sc_channel<96, sc_dt::sc_bv<96> > *p_57_m_axi_wdata = new xsim_sc_channel<96, sc_dt::sc_bv<96> >();
        sc_inst_57->m_axi_wdata.bind(*p_57_m_axi_wdata);
        p_57_m_axi_wdata->set_sv_netview_offsetfromdp(11241200);
        xsim_sc_channel<12, sc_dt::sc_bv<12> > *p_57_m_axi_wstrb = new xsim_sc_channel<12, sc_dt::sc_bv<12> >();
        sc_inst_57->m_axi_wstrb.bind(*p_57_m_axi_wstrb);
        p_57_m_axi_wstrb->set_sv_netview_offsetfromdp(11241256);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_57_m_axi_wvalid = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_57->m_axi_wvalid.bind(*p_57_m_axi_wvalid);
        p_57_m_axi_wvalid->set_sv_netview_offsetfromdp(11241312);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_57_m_axi_wready = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_57->m_axi_wready.bind(*p_57_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_57_m_axi_wready);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_57_m_axi_bresp = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_57->m_axi_bresp.bind(*p_57_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_57_m_axi_bresp);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_57_m_axi_bvalid = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_57->m_axi_bvalid.bind(*p_57_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_57_m_axi_bvalid);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_57_m_axi_bready = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_57->m_axi_bready.bind(*p_57_m_axi_bready);
        p_57_m_axi_bready->set_sv_netview_offsetfromdp(11241536);
        xsim_sc_channel<192, sc_dt::sc_bv<192> > *p_57_m_axi_araddr = new xsim_sc_channel<192, sc_dt::sc_bv<192> >();
        sc_inst_57->m_axi_araddr.bind(*p_57_m_axi_araddr);
        p_57_m_axi_araddr->set_sv_netview_offsetfromdp(11241592);
        xsim_sc_channel<9, sc_dt::sc_bv<9> > *p_57_m_axi_arprot = new xsim_sc_channel<9, sc_dt::sc_bv<9> >();
        sc_inst_57->m_axi_arprot.bind(*p_57_m_axi_arprot);
        p_57_m_axi_arprot->set_sv_netview_offsetfromdp(11241648);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_57_m_axi_arvalid = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_57->m_axi_arvalid.bind(*p_57_m_axi_arvalid);
        p_57_m_axi_arvalid->set_sv_netview_offsetfromdp(11241704);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_57_m_axi_arready = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_57->m_axi_arready.bind(*p_57_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_57_m_axi_arready);
        xsim_sc_channel<96, sc_dt::sc_bv<96> > *p_57_m_axi_rdata = new xsim_sc_channel<96, sc_dt::sc_bv<96> >();
        sc_inst_57->m_axi_rdata.bind(*p_57_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_57_m_axi_rdata);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_57_m_axi_rresp = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_57->m_axi_rresp.bind(*p_57_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_57_m_axi_rresp);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_57_m_axi_rvalid = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_57->m_axi_rvalid.bind(*p_57_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_57_m_axi_rvalid);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_57_m_axi_rready = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_57->m_axi_rready.bind(*p_57_m_axi_rready);
        p_57_m_axi_rready->set_sv_netview_offsetfromdp(11241984);
        sc_inst_58 = new pfm_dynamic_smartconn_data_0_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.smartconn_data_0");
        sc_inst_58->xsim_set_dbg_index(71);
        xsim_sc_channel<0, bool > *p_58_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_58->aclk.bind(*p_58_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_58_aclk);
        xsim_sc_channel<0, bool > *p_58_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_58->aresetn.bind(*p_58_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_58_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_58_S00_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_58->S00_AXI_awid.bind(*p_58_S00_AXI_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_58_S00_AXI_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_58_S00_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_58->S00_AXI_awaddr.bind(*p_58_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_58_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_58_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_58->S00_AXI_awlen.bind(*p_58_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_58_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_58_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_58->S00_AXI_awsize.bind(*p_58_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_58_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_58_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_58->S00_AXI_awburst.bind(*p_58_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_58_S00_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_58_S00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_58->S00_AXI_awlock.bind(*p_58_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_58_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_58_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_58->S00_AXI_awcache.bind(*p_58_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_58_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_58_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_58->S00_AXI_awprot.bind(*p_58_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_58_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_58_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_58->S00_AXI_awqos.bind(*p_58_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_58_S00_AXI_awqos);
        xsim_sc_channel<0, bool > *p_58_S00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_58->S00_AXI_awvalid.bind(*p_58_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_58_S00_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_58_S00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_58->S00_AXI_awready.bind(*p_58_S00_AXI_awready);
        p_58_S00_AXI_awready->set_sv_netview_offsetfromdp(12498688);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_58_S00_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_58->S00_AXI_wdata.bind(*p_58_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_58_S00_AXI_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_58_S00_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_58->S00_AXI_wstrb.bind(*p_58_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_58_S00_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_58_S00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_58->S00_AXI_wlast.bind(*p_58_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_58_S00_AXI_wlast);
        xsim_sc_channel<0, bool > *p_58_S00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_58->S00_AXI_wvalid.bind(*p_58_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_58_S00_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_58_S00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_58->S00_AXI_wready.bind(*p_58_S00_AXI_wready);
        p_58_S00_AXI_wready->set_sv_netview_offsetfromdp(12498968);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_58_S00_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_58->S00_AXI_bid.bind(*p_58_S00_AXI_bid);
        p_58_S00_AXI_bid->set_sv_netview_offsetfromdp(12499024);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_58_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_58->S00_AXI_bresp.bind(*p_58_S00_AXI_bresp);
        p_58_S00_AXI_bresp->set_sv_netview_offsetfromdp(12499080);
        xsim_sc_channel<0, bool > *p_58_S00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_58->S00_AXI_bvalid.bind(*p_58_S00_AXI_bvalid);
        p_58_S00_AXI_bvalid->set_sv_netview_offsetfromdp(12499136);
        xsim_sc_channel<0, bool > *p_58_S00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_58->S00_AXI_bready.bind(*p_58_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_58_S00_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_58_S00_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_58->S00_AXI_arid.bind(*p_58_S00_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_58_S00_AXI_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_58_S00_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_58->S00_AXI_araddr.bind(*p_58_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_58_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_58_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_58->S00_AXI_arlen.bind(*p_58_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_58_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_58_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_58->S00_AXI_arsize.bind(*p_58_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_58_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_58_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_58->S00_AXI_arburst.bind(*p_58_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_58_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_58_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_58->S00_AXI_arlock.bind(*p_58_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_58_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_58_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_58->S00_AXI_arcache.bind(*p_58_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_58_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_58_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_58->S00_AXI_arprot.bind(*p_58_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_58_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_58_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_58->S00_AXI_arqos.bind(*p_58_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_58_S00_AXI_arqos);
        xsim_sc_channel<0, bool > *p_58_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_58->S00_AXI_arvalid.bind(*p_58_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_58_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_58_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_58->S00_AXI_arready.bind(*p_58_S00_AXI_arready);
        p_58_S00_AXI_arready->set_sv_netview_offsetfromdp(12499808);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_58_S00_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_58->S00_AXI_rid.bind(*p_58_S00_AXI_rid);
        p_58_S00_AXI_rid->set_sv_netview_offsetfromdp(12499864);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_58_S00_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_58->S00_AXI_rdata.bind(*p_58_S00_AXI_rdata);
        p_58_S00_AXI_rdata->set_sv_netview_offsetfromdp(12499920);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_58_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_58->S00_AXI_rresp.bind(*p_58_S00_AXI_rresp);
        p_58_S00_AXI_rresp->set_sv_netview_offsetfromdp(12499976);
        xsim_sc_channel<0, bool > *p_58_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_58->S00_AXI_rlast.bind(*p_58_S00_AXI_rlast);
        p_58_S00_AXI_rlast->set_sv_netview_offsetfromdp(12500032);
        xsim_sc_channel<0, bool > *p_58_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_58->S00_AXI_rvalid.bind(*p_58_S00_AXI_rvalid);
        p_58_S00_AXI_rvalid->set_sv_netview_offsetfromdp(12500088);
        xsim_sc_channel<0, bool > *p_58_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_58->S00_AXI_rready.bind(*p_58_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_58_S00_AXI_rready);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_58_M00_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_58->M00_AXI_awaddr.bind(*p_58_M00_AXI_awaddr);
        p_58_M00_AXI_awaddr->set_sv_netview_offsetfromdp(12500200);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_58_M00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_58->M00_AXI_awlen.bind(*p_58_M00_AXI_awlen);
        p_58_M00_AXI_awlen->set_sv_netview_offsetfromdp(12500256);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_58_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_58->M00_AXI_awsize.bind(*p_58_M00_AXI_awsize);
        p_58_M00_AXI_awsize->set_sv_netview_offsetfromdp(12500312);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_58_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_58->M00_AXI_awburst.bind(*p_58_M00_AXI_awburst);
        p_58_M00_AXI_awburst->set_sv_netview_offsetfromdp(12500368);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_58_M00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_58->M00_AXI_awlock.bind(*p_58_M00_AXI_awlock);
        p_58_M00_AXI_awlock->set_sv_netview_offsetfromdp(12500424);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_58_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_58->M00_AXI_awcache.bind(*p_58_M00_AXI_awcache);
        p_58_M00_AXI_awcache->set_sv_netview_offsetfromdp(12500480);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_58_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_58->M00_AXI_awprot.bind(*p_58_M00_AXI_awprot);
        p_58_M00_AXI_awprot->set_sv_netview_offsetfromdp(12500536);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_58_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_58->M00_AXI_awqos.bind(*p_58_M00_AXI_awqos);
        p_58_M00_AXI_awqos->set_sv_netview_offsetfromdp(12500592);
        xsim_sc_channel<0, bool > *p_58_M00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_58->M00_AXI_awvalid.bind(*p_58_M00_AXI_awvalid);
        p_58_M00_AXI_awvalid->set_sv_netview_offsetfromdp(12500648);
        xsim_sc_channel<0, bool > *p_58_M00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_58->M00_AXI_awready.bind(*p_58_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_58_M00_AXI_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_58_M00_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_58->M00_AXI_wdata.bind(*p_58_M00_AXI_wdata);
        p_58_M00_AXI_wdata->set_sv_netview_offsetfromdp(12500760);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_58_M00_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_58->M00_AXI_wstrb.bind(*p_58_M00_AXI_wstrb);
        p_58_M00_AXI_wstrb->set_sv_netview_offsetfromdp(12500816);
        xsim_sc_channel<0, bool > *p_58_M00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_58->M00_AXI_wlast.bind(*p_58_M00_AXI_wlast);
        p_58_M00_AXI_wlast->set_sv_netview_offsetfromdp(12500872);
        xsim_sc_channel<0, bool > *p_58_M00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_58->M00_AXI_wvalid.bind(*p_58_M00_AXI_wvalid);
        p_58_M00_AXI_wvalid->set_sv_netview_offsetfromdp(12500928);
        xsim_sc_channel<0, bool > *p_58_M00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_58->M00_AXI_wready.bind(*p_58_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_58_M00_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_58_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_58->M00_AXI_bresp.bind(*p_58_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_58_M00_AXI_bresp);
        xsim_sc_channel<0, bool > *p_58_M00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_58->M00_AXI_bvalid.bind(*p_58_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_58_M00_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_58_M00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_58->M00_AXI_bready.bind(*p_58_M00_AXI_bready);
        p_58_M00_AXI_bready->set_sv_netview_offsetfromdp(12501152);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_58_M00_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_58->M00_AXI_araddr.bind(*p_58_M00_AXI_araddr);
        p_58_M00_AXI_araddr->set_sv_netview_offsetfromdp(12501208);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_58_M00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_58->M00_AXI_arlen.bind(*p_58_M00_AXI_arlen);
        p_58_M00_AXI_arlen->set_sv_netview_offsetfromdp(12501264);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_58_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_58->M00_AXI_arsize.bind(*p_58_M00_AXI_arsize);
        p_58_M00_AXI_arsize->set_sv_netview_offsetfromdp(12501320);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_58_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_58->M00_AXI_arburst.bind(*p_58_M00_AXI_arburst);
        p_58_M00_AXI_arburst->set_sv_netview_offsetfromdp(12501376);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_58_M00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_58->M00_AXI_arlock.bind(*p_58_M00_AXI_arlock);
        p_58_M00_AXI_arlock->set_sv_netview_offsetfromdp(12501432);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_58_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_58->M00_AXI_arcache.bind(*p_58_M00_AXI_arcache);
        p_58_M00_AXI_arcache->set_sv_netview_offsetfromdp(12501488);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_58_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_58->M00_AXI_arprot.bind(*p_58_M00_AXI_arprot);
        p_58_M00_AXI_arprot->set_sv_netview_offsetfromdp(12501544);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_58_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_58->M00_AXI_arqos.bind(*p_58_M00_AXI_arqos);
        p_58_M00_AXI_arqos->set_sv_netview_offsetfromdp(12501600);
        xsim_sc_channel<0, bool > *p_58_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_58->M00_AXI_arvalid.bind(*p_58_M00_AXI_arvalid);
        p_58_M00_AXI_arvalid->set_sv_netview_offsetfromdp(12501656);
        xsim_sc_channel<0, bool > *p_58_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_58->M00_AXI_arready.bind(*p_58_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_58_M00_AXI_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_58_M00_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_58->M00_AXI_rdata.bind(*p_58_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_58_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_58_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_58->M00_AXI_rresp.bind(*p_58_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_58_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_58_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_58->M00_AXI_rlast.bind(*p_58_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_58_M00_AXI_rlast);
        xsim_sc_channel<0, bool > *p_58_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_58->M00_AXI_rvalid.bind(*p_58_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_58_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_58_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_58->M00_AXI_rready.bind(*p_58_M00_AXI_rready);
        p_58_M00_AXI_rready->set_sv_netview_offsetfromdp(12501992);
        xsim_sc_channel<37, sc_dt::sc_bv<37> > *p_58_M01_AXI_awaddr = new xsim_sc_channel<37, sc_dt::sc_bv<37> >();
        sc_inst_58->M01_AXI_awaddr.bind(*p_58_M01_AXI_awaddr);
        p_58_M01_AXI_awaddr->set_sv_netview_offsetfromdp(12502048);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_58_M01_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_58->M01_AXI_awlen.bind(*p_58_M01_AXI_awlen);
        p_58_M01_AXI_awlen->set_sv_netview_offsetfromdp(12502104);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_58_M01_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_58->M01_AXI_awsize.bind(*p_58_M01_AXI_awsize);
        p_58_M01_AXI_awsize->set_sv_netview_offsetfromdp(12502160);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_58_M01_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_58->M01_AXI_awburst.bind(*p_58_M01_AXI_awburst);
        p_58_M01_AXI_awburst->set_sv_netview_offsetfromdp(12502216);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_58_M01_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_58->M01_AXI_awlock.bind(*p_58_M01_AXI_awlock);
        p_58_M01_AXI_awlock->set_sv_netview_offsetfromdp(12502272);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_58_M01_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_58->M01_AXI_awcache.bind(*p_58_M01_AXI_awcache);
        p_58_M01_AXI_awcache->set_sv_netview_offsetfromdp(12502328);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_58_M01_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_58->M01_AXI_awprot.bind(*p_58_M01_AXI_awprot);
        p_58_M01_AXI_awprot->set_sv_netview_offsetfromdp(12502384);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_58_M01_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_58->M01_AXI_awqos.bind(*p_58_M01_AXI_awqos);
        p_58_M01_AXI_awqos->set_sv_netview_offsetfromdp(12502440);
        xsim_sc_channel<0, bool > *p_58_M01_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_58->M01_AXI_awvalid.bind(*p_58_M01_AXI_awvalid);
        p_58_M01_AXI_awvalid->set_sv_netview_offsetfromdp(12502496);
        xsim_sc_channel<0, bool > *p_58_M01_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_58->M01_AXI_awready.bind(*p_58_M01_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_58_M01_AXI_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_58_M01_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_58->M01_AXI_wdata.bind(*p_58_M01_AXI_wdata);
        p_58_M01_AXI_wdata->set_sv_netview_offsetfromdp(12502608);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_58_M01_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_58->M01_AXI_wstrb.bind(*p_58_M01_AXI_wstrb);
        p_58_M01_AXI_wstrb->set_sv_netview_offsetfromdp(12502664);
        xsim_sc_channel<0, bool > *p_58_M01_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_58->M01_AXI_wlast.bind(*p_58_M01_AXI_wlast);
        p_58_M01_AXI_wlast->set_sv_netview_offsetfromdp(12502720);
        xsim_sc_channel<0, bool > *p_58_M01_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_58->M01_AXI_wvalid.bind(*p_58_M01_AXI_wvalid);
        p_58_M01_AXI_wvalid->set_sv_netview_offsetfromdp(12502776);
        xsim_sc_channel<0, bool > *p_58_M01_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_58->M01_AXI_wready.bind(*p_58_M01_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_58_M01_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_58_M01_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_58->M01_AXI_bresp.bind(*p_58_M01_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_58_M01_AXI_bresp);
        xsim_sc_channel<0, bool > *p_58_M01_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_58->M01_AXI_bvalid.bind(*p_58_M01_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_58_M01_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_58_M01_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_58->M01_AXI_bready.bind(*p_58_M01_AXI_bready);
        p_58_M01_AXI_bready->set_sv_netview_offsetfromdp(12503000);
        xsim_sc_channel<37, sc_dt::sc_bv<37> > *p_58_M01_AXI_araddr = new xsim_sc_channel<37, sc_dt::sc_bv<37> >();
        sc_inst_58->M01_AXI_araddr.bind(*p_58_M01_AXI_araddr);
        p_58_M01_AXI_araddr->set_sv_netview_offsetfromdp(12503056);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_58_M01_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_58->M01_AXI_arlen.bind(*p_58_M01_AXI_arlen);
        p_58_M01_AXI_arlen->set_sv_netview_offsetfromdp(12503112);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_58_M01_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_58->M01_AXI_arsize.bind(*p_58_M01_AXI_arsize);
        p_58_M01_AXI_arsize->set_sv_netview_offsetfromdp(12503168);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_58_M01_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_58->M01_AXI_arburst.bind(*p_58_M01_AXI_arburst);
        p_58_M01_AXI_arburst->set_sv_netview_offsetfromdp(12503224);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_58_M01_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_58->M01_AXI_arlock.bind(*p_58_M01_AXI_arlock);
        p_58_M01_AXI_arlock->set_sv_netview_offsetfromdp(12503280);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_58_M01_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_58->M01_AXI_arcache.bind(*p_58_M01_AXI_arcache);
        p_58_M01_AXI_arcache->set_sv_netview_offsetfromdp(12503336);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_58_M01_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_58->M01_AXI_arprot.bind(*p_58_M01_AXI_arprot);
        p_58_M01_AXI_arprot->set_sv_netview_offsetfromdp(12503392);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_58_M01_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_58->M01_AXI_arqos.bind(*p_58_M01_AXI_arqos);
        p_58_M01_AXI_arqos->set_sv_netview_offsetfromdp(12503448);
        xsim_sc_channel<0, bool > *p_58_M01_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_58->M01_AXI_arvalid.bind(*p_58_M01_AXI_arvalid);
        p_58_M01_AXI_arvalid->set_sv_netview_offsetfromdp(12503504);
        xsim_sc_channel<0, bool > *p_58_M01_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_58->M01_AXI_arready.bind(*p_58_M01_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_58_M01_AXI_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_58_M01_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_58->M01_AXI_rdata.bind(*p_58_M01_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_58_M01_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_58_M01_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_58->M01_AXI_rresp.bind(*p_58_M01_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_58_M01_AXI_rresp);
        xsim_sc_channel<0, bool > *p_58_M01_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_58->M01_AXI_rlast.bind(*p_58_M01_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_58_M01_AXI_rlast);
        xsim_sc_channel<0, bool > *p_58_M01_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_58->M01_AXI_rvalid.bind(*p_58_M01_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_58_M01_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_58_M01_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_58->M01_AXI_rready.bind(*p_58_M01_AXI_rready);
        p_58_M01_AXI_rready->set_sv_netview_offsetfromdp(12503840);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_58_M02_AXI_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_58->M02_AXI_awaddr.bind(*p_58_M02_AXI_awaddr);
        p_58_M02_AXI_awaddr->set_sv_netview_offsetfromdp(12503896);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_58_M02_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_58->M02_AXI_awlen.bind(*p_58_M02_AXI_awlen);
        p_58_M02_AXI_awlen->set_sv_netview_offsetfromdp(12503952);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_58_M02_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_58->M02_AXI_awsize.bind(*p_58_M02_AXI_awsize);
        p_58_M02_AXI_awsize->set_sv_netview_offsetfromdp(12504008);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_58_M02_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_58->M02_AXI_awburst.bind(*p_58_M02_AXI_awburst);
        p_58_M02_AXI_awburst->set_sv_netview_offsetfromdp(12504064);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_58_M02_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_58->M02_AXI_awlock.bind(*p_58_M02_AXI_awlock);
        p_58_M02_AXI_awlock->set_sv_netview_offsetfromdp(12504120);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_58_M02_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_58->M02_AXI_awcache.bind(*p_58_M02_AXI_awcache);
        p_58_M02_AXI_awcache->set_sv_netview_offsetfromdp(12504176);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_58_M02_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_58->M02_AXI_awprot.bind(*p_58_M02_AXI_awprot);
        p_58_M02_AXI_awprot->set_sv_netview_offsetfromdp(12504232);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_58_M02_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_58->M02_AXI_awqos.bind(*p_58_M02_AXI_awqos);
        p_58_M02_AXI_awqos->set_sv_netview_offsetfromdp(12504288);
        xsim_sc_channel<0, bool > *p_58_M02_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_58->M02_AXI_awvalid.bind(*p_58_M02_AXI_awvalid);
        p_58_M02_AXI_awvalid->set_sv_netview_offsetfromdp(12504344);
        xsim_sc_channel<0, bool > *p_58_M02_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_58->M02_AXI_awready.bind(*p_58_M02_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_58_M02_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_58_M02_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_58->M02_AXI_wdata.bind(*p_58_M02_AXI_wdata);
        p_58_M02_AXI_wdata->set_sv_netview_offsetfromdp(12504456);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_58_M02_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_58->M02_AXI_wstrb.bind(*p_58_M02_AXI_wstrb);
        p_58_M02_AXI_wstrb->set_sv_netview_offsetfromdp(12504512);
        xsim_sc_channel<0, bool > *p_58_M02_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_58->M02_AXI_wlast.bind(*p_58_M02_AXI_wlast);
        p_58_M02_AXI_wlast->set_sv_netview_offsetfromdp(12504568);
        xsim_sc_channel<0, bool > *p_58_M02_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_58->M02_AXI_wvalid.bind(*p_58_M02_AXI_wvalid);
        p_58_M02_AXI_wvalid->set_sv_netview_offsetfromdp(12504624);
        xsim_sc_channel<0, bool > *p_58_M02_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_58->M02_AXI_wready.bind(*p_58_M02_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_58_M02_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_58_M02_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_58->M02_AXI_bresp.bind(*p_58_M02_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_58_M02_AXI_bresp);
        xsim_sc_channel<0, bool > *p_58_M02_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_58->M02_AXI_bvalid.bind(*p_58_M02_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_58_M02_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_58_M02_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_58->M02_AXI_bready.bind(*p_58_M02_AXI_bready);
        p_58_M02_AXI_bready->set_sv_netview_offsetfromdp(12504848);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_58_M02_AXI_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_58->M02_AXI_araddr.bind(*p_58_M02_AXI_araddr);
        p_58_M02_AXI_araddr->set_sv_netview_offsetfromdp(12504904);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_58_M02_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_58->M02_AXI_arlen.bind(*p_58_M02_AXI_arlen);
        p_58_M02_AXI_arlen->set_sv_netview_offsetfromdp(12504960);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_58_M02_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_58->M02_AXI_arsize.bind(*p_58_M02_AXI_arsize);
        p_58_M02_AXI_arsize->set_sv_netview_offsetfromdp(12505016);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_58_M02_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_58->M02_AXI_arburst.bind(*p_58_M02_AXI_arburst);
        p_58_M02_AXI_arburst->set_sv_netview_offsetfromdp(12505072);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_58_M02_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_58->M02_AXI_arlock.bind(*p_58_M02_AXI_arlock);
        p_58_M02_AXI_arlock->set_sv_netview_offsetfromdp(12505128);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_58_M02_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_58->M02_AXI_arcache.bind(*p_58_M02_AXI_arcache);
        p_58_M02_AXI_arcache->set_sv_netview_offsetfromdp(12505184);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_58_M02_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_58->M02_AXI_arprot.bind(*p_58_M02_AXI_arprot);
        p_58_M02_AXI_arprot->set_sv_netview_offsetfromdp(12505240);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_58_M02_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_58->M02_AXI_arqos.bind(*p_58_M02_AXI_arqos);
        p_58_M02_AXI_arqos->set_sv_netview_offsetfromdp(12505296);
        xsim_sc_channel<0, bool > *p_58_M02_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_58->M02_AXI_arvalid.bind(*p_58_M02_AXI_arvalid);
        p_58_M02_AXI_arvalid->set_sv_netview_offsetfromdp(12505352);
        xsim_sc_channel<0, bool > *p_58_M02_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_58->M02_AXI_arready.bind(*p_58_M02_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_58_M02_AXI_arready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_58_M02_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_58->M02_AXI_rdata.bind(*p_58_M02_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_58_M02_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_58_M02_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_58->M02_AXI_rresp.bind(*p_58_M02_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_58_M02_AXI_rresp);
        xsim_sc_channel<0, bool > *p_58_M02_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_58->M02_AXI_rlast.bind(*p_58_M02_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_58_M02_AXI_rlast);
        xsim_sc_channel<0, bool > *p_58_M02_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_58->M02_AXI_rvalid.bind(*p_58_M02_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_58_M02_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_58_M02_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_58->M02_AXI_rready.bind(*p_58_M02_AXI_rready);
        p_58_M02_AXI_rready->set_sv_netview_offsetfromdp(12505688);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_58_M03_AXI_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_58->M03_AXI_awaddr.bind(*p_58_M03_AXI_awaddr);
        p_58_M03_AXI_awaddr->set_sv_netview_offsetfromdp(12505744);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_58_M03_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_58->M03_AXI_awlen.bind(*p_58_M03_AXI_awlen);
        p_58_M03_AXI_awlen->set_sv_netview_offsetfromdp(12505800);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_58_M03_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_58->M03_AXI_awsize.bind(*p_58_M03_AXI_awsize);
        p_58_M03_AXI_awsize->set_sv_netview_offsetfromdp(12505856);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_58_M03_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_58->M03_AXI_awburst.bind(*p_58_M03_AXI_awburst);
        p_58_M03_AXI_awburst->set_sv_netview_offsetfromdp(12505912);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_58_M03_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_58->M03_AXI_awlock.bind(*p_58_M03_AXI_awlock);
        p_58_M03_AXI_awlock->set_sv_netview_offsetfromdp(12505968);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_58_M03_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_58->M03_AXI_awcache.bind(*p_58_M03_AXI_awcache);
        p_58_M03_AXI_awcache->set_sv_netview_offsetfromdp(12506024);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_58_M03_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_58->M03_AXI_awprot.bind(*p_58_M03_AXI_awprot);
        p_58_M03_AXI_awprot->set_sv_netview_offsetfromdp(12506080);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_58_M03_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_58->M03_AXI_awqos.bind(*p_58_M03_AXI_awqos);
        p_58_M03_AXI_awqos->set_sv_netview_offsetfromdp(12506136);
        xsim_sc_channel<0, bool > *p_58_M03_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_58->M03_AXI_awvalid.bind(*p_58_M03_AXI_awvalid);
        p_58_M03_AXI_awvalid->set_sv_netview_offsetfromdp(12506192);
        xsim_sc_channel<0, bool > *p_58_M03_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_58->M03_AXI_awready.bind(*p_58_M03_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_58_M03_AXI_awready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_58_M03_AXI_wdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_58->M03_AXI_wdata.bind(*p_58_M03_AXI_wdata);
        p_58_M03_AXI_wdata->set_sv_netview_offsetfromdp(12506304);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_58_M03_AXI_wstrb = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_58->M03_AXI_wstrb.bind(*p_58_M03_AXI_wstrb);
        p_58_M03_AXI_wstrb->set_sv_netview_offsetfromdp(12506360);
        xsim_sc_channel<0, bool > *p_58_M03_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_58->M03_AXI_wlast.bind(*p_58_M03_AXI_wlast);
        p_58_M03_AXI_wlast->set_sv_netview_offsetfromdp(12506416);
        xsim_sc_channel<0, bool > *p_58_M03_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_58->M03_AXI_wvalid.bind(*p_58_M03_AXI_wvalid);
        p_58_M03_AXI_wvalid->set_sv_netview_offsetfromdp(12506472);
        xsim_sc_channel<0, bool > *p_58_M03_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_58->M03_AXI_wready.bind(*p_58_M03_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_58_M03_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_58_M03_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_58->M03_AXI_bresp.bind(*p_58_M03_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_58_M03_AXI_bresp);
        xsim_sc_channel<0, bool > *p_58_M03_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_58->M03_AXI_bvalid.bind(*p_58_M03_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_58_M03_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_58_M03_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_58->M03_AXI_bready.bind(*p_58_M03_AXI_bready);
        p_58_M03_AXI_bready->set_sv_netview_offsetfromdp(12506696);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_58_M03_AXI_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_58->M03_AXI_araddr.bind(*p_58_M03_AXI_araddr);
        p_58_M03_AXI_araddr->set_sv_netview_offsetfromdp(12506752);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_58_M03_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_58->M03_AXI_arlen.bind(*p_58_M03_AXI_arlen);
        p_58_M03_AXI_arlen->set_sv_netview_offsetfromdp(12506808);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_58_M03_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_58->M03_AXI_arsize.bind(*p_58_M03_AXI_arsize);
        p_58_M03_AXI_arsize->set_sv_netview_offsetfromdp(12506864);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_58_M03_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_58->M03_AXI_arburst.bind(*p_58_M03_AXI_arburst);
        p_58_M03_AXI_arburst->set_sv_netview_offsetfromdp(12506920);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_58_M03_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_58->M03_AXI_arlock.bind(*p_58_M03_AXI_arlock);
        p_58_M03_AXI_arlock->set_sv_netview_offsetfromdp(12506976);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_58_M03_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_58->M03_AXI_arcache.bind(*p_58_M03_AXI_arcache);
        p_58_M03_AXI_arcache->set_sv_netview_offsetfromdp(12507032);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_58_M03_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_58->M03_AXI_arprot.bind(*p_58_M03_AXI_arprot);
        p_58_M03_AXI_arprot->set_sv_netview_offsetfromdp(12507088);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_58_M03_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_58->M03_AXI_arqos.bind(*p_58_M03_AXI_arqos);
        p_58_M03_AXI_arqos->set_sv_netview_offsetfromdp(12507144);
        xsim_sc_channel<0, bool > *p_58_M03_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_58->M03_AXI_arvalid.bind(*p_58_M03_AXI_arvalid);
        p_58_M03_AXI_arvalid->set_sv_netview_offsetfromdp(12507200);
        xsim_sc_channel<0, bool > *p_58_M03_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_58->M03_AXI_arready.bind(*p_58_M03_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_58_M03_AXI_arready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_58_M03_AXI_rdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_58->M03_AXI_rdata.bind(*p_58_M03_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_58_M03_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_58_M03_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_58->M03_AXI_rresp.bind(*p_58_M03_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_58_M03_AXI_rresp);
        xsim_sc_channel<0, bool > *p_58_M03_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_58->M03_AXI_rlast.bind(*p_58_M03_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_58_M03_AXI_rlast);
        xsim_sc_channel<0, bool > *p_58_M03_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_58->M03_AXI_rvalid.bind(*p_58_M03_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_58_M03_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_58_M03_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_58->M03_AXI_rready.bind(*p_58_M03_AXI_rready);
        p_58_M03_AXI_rready->set_sv_netview_offsetfromdp(12507536);
        sc_inst_59 = new pfm_top_sci(".pfm_top_wrapper.pfm_top_i.pfm_top_sci_inst");
        sc_inst_59->xsim_set_dbg_index(45);
        sc_inst_60 = new pfm_top_axi_vip_0_0(".pfm_top_wrapper.pfm_top_i.static_region.axi_vip_0");
        sc_inst_60->xsim_set_dbg_index(257);
        xsim_sc_channel<0, bool > *p_60_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_60->aclk.bind(*p_60_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_60_aclk);
        xsim_sc_channel<0, bool > *p_60_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_60->aresetn.bind(*p_60_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_60_aresetn);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_60_s_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_60->s_axi_awaddr.bind(*p_60_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_60_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_60_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_60->s_axi_awlen.bind(*p_60_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_60_s_axi_awlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_60_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_60->s_axi_awburst.bind(*p_60_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_60_s_axi_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_60_s_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_60->s_axi_awlock.bind(*p_60_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_60_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_60_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_60->s_axi_awcache.bind(*p_60_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_60_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_60_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_60->s_axi_awprot.bind(*p_60_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_60_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_60_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_60->s_axi_awqos.bind(*p_60_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_60_s_axi_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_60_s_axi_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_60->s_axi_awuser.bind(*p_60_s_axi_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_60_s_axi_awuser);
        xsim_sc_channel<0, bool > *p_60_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_60->s_axi_awvalid.bind(*p_60_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_60_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_60_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_60->s_axi_awready.bind(*p_60_s_axi_awready);
        p_60_s_axi_awready->set_sv_netview_offsetfromdp(12687392);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_60_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_60->s_axi_wdata.bind(*p_60_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_60_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_60_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_60->s_axi_wstrb.bind(*p_60_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_60_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_60_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_60->s_axi_wlast.bind(*p_60_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_60_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_60_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_60->s_axi_wvalid.bind(*p_60_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_60_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_60_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_60->s_axi_wready.bind(*p_60_s_axi_wready);
        p_60_s_axi_wready->set_sv_netview_offsetfromdp(12687672);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_60_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_60->s_axi_bresp.bind(*p_60_s_axi_bresp);
        p_60_s_axi_bresp->set_sv_netview_offsetfromdp(12687728);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_60_s_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_60->s_axi_buser.bind(*p_60_s_axi_buser);
        p_60_s_axi_buser->set_sv_netview_offsetfromdp(12687784);
        xsim_sc_channel<0, bool > *p_60_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_60->s_axi_bvalid.bind(*p_60_s_axi_bvalid);
        p_60_s_axi_bvalid->set_sv_netview_offsetfromdp(12687840);
        xsim_sc_channel<0, bool > *p_60_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_60->s_axi_bready.bind(*p_60_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_60_s_axi_bready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_60_s_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_60->s_axi_araddr.bind(*p_60_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_60_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_60_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_60->s_axi_arlen.bind(*p_60_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_60_s_axi_arlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_60_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_60->s_axi_arburst.bind(*p_60_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_60_s_axi_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_60_s_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_60->s_axi_arlock.bind(*p_60_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_60_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_60_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_60->s_axi_arcache.bind(*p_60_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_60_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_60_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_60->s_axi_arprot.bind(*p_60_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_60_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_60_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_60->s_axi_arqos.bind(*p_60_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_60_s_axi_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_60_s_axi_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_60->s_axi_aruser.bind(*p_60_s_axi_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_60_s_axi_aruser);
        xsim_sc_channel<0, bool > *p_60_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_60->s_axi_arvalid.bind(*p_60_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_60_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_60_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_60->s_axi_arready.bind(*p_60_s_axi_arready);
        p_60_s_axi_arready->set_sv_netview_offsetfromdp(12688456);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_60_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_60->s_axi_rdata.bind(*p_60_s_axi_rdata);
        p_60_s_axi_rdata->set_sv_netview_offsetfromdp(12688512);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_60_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_60->s_axi_rresp.bind(*p_60_s_axi_rresp);
        p_60_s_axi_rresp->set_sv_netview_offsetfromdp(12688568);
        xsim_sc_channel<0, bool > *p_60_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_60->s_axi_rlast.bind(*p_60_s_axi_rlast);
        p_60_s_axi_rlast->set_sv_netview_offsetfromdp(12688624);
        xsim_sc_channel<0, bool > *p_60_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_60->s_axi_rvalid.bind(*p_60_s_axi_rvalid);
        p_60_s_axi_rvalid->set_sv_netview_offsetfromdp(12688680);
        xsim_sc_channel<0, bool > *p_60_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_60->s_axi_rready.bind(*p_60_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_60_s_axi_rready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_60_m_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_60->m_axi_awaddr.bind(*p_60_m_axi_awaddr);
        p_60_m_axi_awaddr->set_sv_netview_offsetfromdp(12688792);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_60_m_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_60->m_axi_awlen.bind(*p_60_m_axi_awlen);
        p_60_m_axi_awlen->set_sv_netview_offsetfromdp(12688848);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_60_m_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_60->m_axi_awburst.bind(*p_60_m_axi_awburst);
        p_60_m_axi_awburst->set_sv_netview_offsetfromdp(12688904);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_60_m_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_60->m_axi_awlock.bind(*p_60_m_axi_awlock);
        p_60_m_axi_awlock->set_sv_netview_offsetfromdp(12688960);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_60_m_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_60->m_axi_awcache.bind(*p_60_m_axi_awcache);
        p_60_m_axi_awcache->set_sv_netview_offsetfromdp(12689016);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_60_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_60->m_axi_awprot.bind(*p_60_m_axi_awprot);
        p_60_m_axi_awprot->set_sv_netview_offsetfromdp(12689072);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_60_m_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_60->m_axi_awqos.bind(*p_60_m_axi_awqos);
        p_60_m_axi_awqos->set_sv_netview_offsetfromdp(12689128);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_60_m_axi_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_60->m_axi_awuser.bind(*p_60_m_axi_awuser);
        p_60_m_axi_awuser->set_sv_netview_offsetfromdp(12689184);
        xsim_sc_channel<0, bool > *p_60_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_60->m_axi_awvalid.bind(*p_60_m_axi_awvalid);
        p_60_m_axi_awvalid->set_sv_netview_offsetfromdp(12689240);
        xsim_sc_channel<0, bool > *p_60_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_60->m_axi_awready.bind(*p_60_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_60_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_60_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_60->m_axi_wdata.bind(*p_60_m_axi_wdata);
        p_60_m_axi_wdata->set_sv_netview_offsetfromdp(12689352);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_60_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_60->m_axi_wstrb.bind(*p_60_m_axi_wstrb);
        p_60_m_axi_wstrb->set_sv_netview_offsetfromdp(12689408);
        xsim_sc_channel<0, bool > *p_60_m_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_60->m_axi_wlast.bind(*p_60_m_axi_wlast);
        p_60_m_axi_wlast->set_sv_netview_offsetfromdp(12689464);
        xsim_sc_channel<0, bool > *p_60_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_60->m_axi_wvalid.bind(*p_60_m_axi_wvalid);
        p_60_m_axi_wvalid->set_sv_netview_offsetfromdp(12689520);
        xsim_sc_channel<0, bool > *p_60_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_60->m_axi_wready.bind(*p_60_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_60_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_60_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_60->m_axi_bresp.bind(*p_60_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_60_m_axi_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_60_m_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_60->m_axi_buser.bind(*p_60_m_axi_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_60_m_axi_buser);
        xsim_sc_channel<0, bool > *p_60_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_60->m_axi_bvalid.bind(*p_60_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_60_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_60_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_60->m_axi_bready.bind(*p_60_m_axi_bready);
        p_60_m_axi_bready->set_sv_netview_offsetfromdp(12689800);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_60_m_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_60->m_axi_araddr.bind(*p_60_m_axi_araddr);
        p_60_m_axi_araddr->set_sv_netview_offsetfromdp(12689856);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_60_m_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_60->m_axi_arlen.bind(*p_60_m_axi_arlen);
        p_60_m_axi_arlen->set_sv_netview_offsetfromdp(12689912);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_60_m_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_60->m_axi_arburst.bind(*p_60_m_axi_arburst);
        p_60_m_axi_arburst->set_sv_netview_offsetfromdp(12689968);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_60_m_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_60->m_axi_arlock.bind(*p_60_m_axi_arlock);
        p_60_m_axi_arlock->set_sv_netview_offsetfromdp(12690024);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_60_m_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_60->m_axi_arcache.bind(*p_60_m_axi_arcache);
        p_60_m_axi_arcache->set_sv_netview_offsetfromdp(12690080);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_60_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_60->m_axi_arprot.bind(*p_60_m_axi_arprot);
        p_60_m_axi_arprot->set_sv_netview_offsetfromdp(12690136);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_60_m_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_60->m_axi_arqos.bind(*p_60_m_axi_arqos);
        p_60_m_axi_arqos->set_sv_netview_offsetfromdp(12690192);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_60_m_axi_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_60->m_axi_aruser.bind(*p_60_m_axi_aruser);
        p_60_m_axi_aruser->set_sv_netview_offsetfromdp(12690248);
        xsim_sc_channel<0, bool > *p_60_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_60->m_axi_arvalid.bind(*p_60_m_axi_arvalid);
        p_60_m_axi_arvalid->set_sv_netview_offsetfromdp(12690304);
        xsim_sc_channel<0, bool > *p_60_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_60->m_axi_arready.bind(*p_60_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_60_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_60_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_60->m_axi_rdata.bind(*p_60_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_60_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_60_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_60->m_axi_rresp.bind(*p_60_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_60_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_60_m_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_60->m_axi_rlast.bind(*p_60_m_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_60_m_axi_rlast);
        xsim_sc_channel<0, bool > *p_60_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_60->m_axi_rvalid.bind(*p_60_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_60_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_60_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_60->m_axi_rready.bind(*p_60_m_axi_rready);
        p_60_m_axi_rready->set_sv_netview_offsetfromdp(12690640);
        sc_inst_61 = new pfm_top_xbar_0(".pfm_top_wrapper.pfm_top_i.static_region.connect_to_es_cu.xbar");
        sc_inst_61->xsim_set_dbg_index(654);
        xsim_sc_channel<0, bool > *p_61_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_61->aclk.bind(*p_61_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_61_aclk);
        xsim_sc_channel<0, bool > *p_61_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_61->aresetn.bind(*p_61_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_61_aresetn);
        xsim_sc_channel<128, sc_dt::sc_bv<128> > *p_61_s_axi_awaddr = new xsim_sc_channel<128, sc_dt::sc_bv<128> >();
        sc_inst_61->s_axi_awaddr.bind(*p_61_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_61_s_axi_awaddr);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_61_s_axi_awprot = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_61->s_axi_awprot.bind(*p_61_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_61_s_axi_awprot);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_61_s_axi_awvalid = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_61->s_axi_awvalid.bind(*p_61_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_61_s_axi_awvalid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_61_s_axi_awready = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_61->s_axi_awready.bind(*p_61_s_axi_awready);
        p_61_s_axi_awready->set_sv_netview_offsetfromdp(12805776);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_61_s_axi_wdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_61->s_axi_wdata.bind(*p_61_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_61_s_axi_wdata);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_61_s_axi_wstrb = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_61->s_axi_wstrb.bind(*p_61_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_61_s_axi_wstrb);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_61_s_axi_wvalid = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_61->s_axi_wvalid.bind(*p_61_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_61_s_axi_wvalid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_61_s_axi_wready = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_61->s_axi_wready.bind(*p_61_s_axi_wready);
        p_61_s_axi_wready->set_sv_netview_offsetfromdp(12806000);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_61_s_axi_bresp = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_61->s_axi_bresp.bind(*p_61_s_axi_bresp);
        p_61_s_axi_bresp->set_sv_netview_offsetfromdp(12806056);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_61_s_axi_bvalid = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_61->s_axi_bvalid.bind(*p_61_s_axi_bvalid);
        p_61_s_axi_bvalid->set_sv_netview_offsetfromdp(12806112);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_61_s_axi_bready = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_61->s_axi_bready.bind(*p_61_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_61_s_axi_bready);
        xsim_sc_channel<128, sc_dt::sc_bv<128> > *p_61_s_axi_araddr = new xsim_sc_channel<128, sc_dt::sc_bv<128> >();
        sc_inst_61->s_axi_araddr.bind(*p_61_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_61_s_axi_araddr);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_61_s_axi_arprot = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_61->s_axi_arprot.bind(*p_61_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_61_s_axi_arprot);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_61_s_axi_arvalid = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_61->s_axi_arvalid.bind(*p_61_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_61_s_axi_arvalid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_61_s_axi_arready = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_61->s_axi_arready.bind(*p_61_s_axi_arready);
        p_61_s_axi_arready->set_sv_netview_offsetfromdp(12806392);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_61_s_axi_rdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_61->s_axi_rdata.bind(*p_61_s_axi_rdata);
        p_61_s_axi_rdata->set_sv_netview_offsetfromdp(12806448);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_61_s_axi_rresp = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_61->s_axi_rresp.bind(*p_61_s_axi_rresp);
        p_61_s_axi_rresp->set_sv_netview_offsetfromdp(12806504);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_61_s_axi_rvalid = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_61->s_axi_rvalid.bind(*p_61_s_axi_rvalid);
        p_61_s_axi_rvalid->set_sv_netview_offsetfromdp(12806560);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_61_s_axi_rready = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_61->s_axi_rready.bind(*p_61_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_61_s_axi_rready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_61_m_axi_awaddr = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_61->m_axi_awaddr.bind(*p_61_m_axi_awaddr);
        p_61_m_axi_awaddr->set_sv_netview_offsetfromdp(12806672);
        xsim_sc_channel<12, sc_dt::sc_bv<12> > *p_61_m_axi_awprot = new xsim_sc_channel<12, sc_dt::sc_bv<12> >();
        sc_inst_61->m_axi_awprot.bind(*p_61_m_axi_awprot);
        p_61_m_axi_awprot->set_sv_netview_offsetfromdp(12806728);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_61_m_axi_awvalid = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_61->m_axi_awvalid.bind(*p_61_m_axi_awvalid);
        p_61_m_axi_awvalid->set_sv_netview_offsetfromdp(12806784);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_61_m_axi_awready = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_61->m_axi_awready.bind(*p_61_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_61_m_axi_awready);
        xsim_sc_channel<128, sc_dt::sc_bv<128> > *p_61_m_axi_wdata = new xsim_sc_channel<128, sc_dt::sc_bv<128> >();
        sc_inst_61->m_axi_wdata.bind(*p_61_m_axi_wdata);
        p_61_m_axi_wdata->set_sv_netview_offsetfromdp(12806896);
        xsim_sc_channel<16, sc_dt::sc_bv<16> > *p_61_m_axi_wstrb = new xsim_sc_channel<16, sc_dt::sc_bv<16> >();
        sc_inst_61->m_axi_wstrb.bind(*p_61_m_axi_wstrb);
        p_61_m_axi_wstrb->set_sv_netview_offsetfromdp(12806952);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_61_m_axi_wvalid = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_61->m_axi_wvalid.bind(*p_61_m_axi_wvalid);
        p_61_m_axi_wvalid->set_sv_netview_offsetfromdp(12807008);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_61_m_axi_wready = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_61->m_axi_wready.bind(*p_61_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_61_m_axi_wready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_61_m_axi_bresp = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_61->m_axi_bresp.bind(*p_61_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_61_m_axi_bresp);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_61_m_axi_bvalid = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_61->m_axi_bvalid.bind(*p_61_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_61_m_axi_bvalid);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_61_m_axi_bready = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_61->m_axi_bready.bind(*p_61_m_axi_bready);
        p_61_m_axi_bready->set_sv_netview_offsetfromdp(12807232);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_61_m_axi_araddr = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_61->m_axi_araddr.bind(*p_61_m_axi_araddr);
        p_61_m_axi_araddr->set_sv_netview_offsetfromdp(12807288);
        xsim_sc_channel<12, sc_dt::sc_bv<12> > *p_61_m_axi_arprot = new xsim_sc_channel<12, sc_dt::sc_bv<12> >();
        sc_inst_61->m_axi_arprot.bind(*p_61_m_axi_arprot);
        p_61_m_axi_arprot->set_sv_netview_offsetfromdp(12807344);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_61_m_axi_arvalid = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_61->m_axi_arvalid.bind(*p_61_m_axi_arvalid);
        p_61_m_axi_arvalid->set_sv_netview_offsetfromdp(12807400);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_61_m_axi_arready = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_61->m_axi_arready.bind(*p_61_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_61_m_axi_arready);
        xsim_sc_channel<128, sc_dt::sc_bv<128> > *p_61_m_axi_rdata = new xsim_sc_channel<128, sc_dt::sc_bv<128> >();
        sc_inst_61->m_axi_rdata.bind(*p_61_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_61_m_axi_rdata);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_61_m_axi_rresp = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_61->m_axi_rresp.bind(*p_61_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_61_m_axi_rresp);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_61_m_axi_rvalid = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_61->m_axi_rvalid.bind(*p_61_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_61_m_axi_rvalid);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_61_m_axi_rready = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_61->m_axi_rready.bind(*p_61_m_axi_rready);
        p_61_m_axi_rready->set_sv_netview_offsetfromdp(12807680);
        sc_inst_62 = new pfm_top_embedded_schedular_0(".pfm_top_wrapper.pfm_top_i.static_region.embedded_schedular");
        sc_inst_62->xsim_set_dbg_index(261);
        xsim_sc_channel<128, sc_dt::sc_bv<128> > *p_62_interrupt_cu = new xsim_sc_channel<128, sc_dt::sc_bv<128> >();
        sc_inst_62->interrupt_cu.bind(*p_62_interrupt_cu);
        (*_glb_hdl_sc_channel_map).push_back(p_62_interrupt_cu);
        xsim_sc_channel<0, bool > *p_62_interrupt_m2m = new xsim_sc_channel<0, bool >();
        sc_inst_62->interrupt_m2m.bind(*p_62_interrupt_m2m);
        p_62_interrupt_m2m->set_sv_netview_offsetfromdp(12809568);
        xsim_sc_channel<0, bool > *p_62_s_axi_ctrl_user_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_62->s_axi_ctrl_user_aresetn.bind(*p_62_s_axi_ctrl_user_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_62_s_axi_ctrl_user_aresetn);
        xsim_sc_channel<0, bool > *p_62_s_axi_data_p2p_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_62->s_axi_data_p2p_aresetn.bind(*p_62_s_axi_data_p2p_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_62_s_axi_data_p2p_aresetn);
        xsim_sc_channel<0, bool > *p_62_maxi_lite_mb_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_62->maxi_lite_mb_aresetn.bind(*p_62_maxi_lite_mb_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_62_maxi_lite_mb_aresetn);
        xsim_sc_channel<0, bool > *p_62_m_axi_data_m2m_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_62->m_axi_data_m2m_aresetn.bind(*p_62_m_axi_data_m2m_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_62_m_axi_data_m2m_aresetn);
        xsim_sc_channel<0, bool > *p_62_s_axi_ctrl_user_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_62->s_axi_ctrl_user_aclk.bind(*p_62_s_axi_ctrl_user_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_62_s_axi_ctrl_user_aclk);
        xsim_sc_channel<0, bool > *p_62_s_axi_data_p2p_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_62->s_axi_data_p2p_aclk.bind(*p_62_s_axi_data_p2p_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_62_s_axi_data_p2p_aclk);
        xsim_sc_channel<0, bool > *p_62_maxi_lite_mb_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_62->maxi_lite_mb_aclk.bind(*p_62_maxi_lite_mb_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_62_maxi_lite_mb_aclk);
        xsim_sc_channel<0, bool > *p_62_m_axi_data_m2m_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_62->m_axi_data_m2m_aclk.bind(*p_62_m_axi_data_m2m_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_62_m_axi_data_m2m_aclk);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_62_s_axi_data_p2p_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_62->s_axi_data_p2p_awaddr.bind(*p_62_s_axi_data_p2p_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_62_s_axi_data_p2p_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_62_s_axi_data_p2p_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_62->s_axi_data_p2p_awlen.bind(*p_62_s_axi_data_p2p_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_62_s_axi_data_p2p_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_62_s_axi_data_p2p_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_62->s_axi_data_p2p_awsize.bind(*p_62_s_axi_data_p2p_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_62_s_axi_data_p2p_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_62_s_axi_data_p2p_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_62->s_axi_data_p2p_awburst.bind(*p_62_s_axi_data_p2p_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_62_s_axi_data_p2p_awburst);
        xsim_sc_channel<0, bool > *p_62_s_axi_data_p2p_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_62->s_axi_data_p2p_awlock.bind(*p_62_s_axi_data_p2p_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_62_s_axi_data_p2p_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_62_s_axi_data_p2p_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_62->s_axi_data_p2p_awcache.bind(*p_62_s_axi_data_p2p_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_62_s_axi_data_p2p_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_62_s_axi_data_p2p_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_62->s_axi_data_p2p_awprot.bind(*p_62_s_axi_data_p2p_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_62_s_axi_data_p2p_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_62_s_axi_data_p2p_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_62->s_axi_data_p2p_awregion.bind(*p_62_s_axi_data_p2p_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_62_s_axi_data_p2p_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_62_s_axi_data_p2p_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_62->s_axi_data_p2p_awqos.bind(*p_62_s_axi_data_p2p_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_62_s_axi_data_p2p_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_62_s_axi_data_p2p_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_62->s_axi_data_p2p_awuser.bind(*p_62_s_axi_data_p2p_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_62_s_axi_data_p2p_awuser);
        xsim_sc_channel<0, bool > *p_62_s_axi_data_p2p_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_62->s_axi_data_p2p_awvalid.bind(*p_62_s_axi_data_p2p_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_62_s_axi_data_p2p_awvalid);
        xsim_sc_channel<0, bool > *p_62_s_axi_data_p2p_awready = new xsim_sc_channel<0, bool >();
        sc_inst_62->s_axi_data_p2p_awready.bind(*p_62_s_axi_data_p2p_awready);
        p_62_s_axi_data_p2p_awready->set_sv_netview_offsetfromdp(12810688);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_62_s_axi_data_p2p_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_62->s_axi_data_p2p_wdata.bind(*p_62_s_axi_data_p2p_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_62_s_axi_data_p2p_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_62_s_axi_data_p2p_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_62->s_axi_data_p2p_wstrb.bind(*p_62_s_axi_data_p2p_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_62_s_axi_data_p2p_wstrb);
        xsim_sc_channel<0, bool > *p_62_s_axi_data_p2p_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_62->s_axi_data_p2p_wlast.bind(*p_62_s_axi_data_p2p_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_62_s_axi_data_p2p_wlast);
        xsim_sc_channel<0, bool > *p_62_s_axi_data_p2p_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_62->s_axi_data_p2p_wvalid.bind(*p_62_s_axi_data_p2p_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_62_s_axi_data_p2p_wvalid);
        xsim_sc_channel<0, bool > *p_62_s_axi_data_p2p_wready = new xsim_sc_channel<0, bool >();
        sc_inst_62->s_axi_data_p2p_wready.bind(*p_62_s_axi_data_p2p_wready);
        p_62_s_axi_data_p2p_wready->set_sv_netview_offsetfromdp(12810968);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_62_s_axi_data_p2p_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_62->s_axi_data_p2p_bresp.bind(*p_62_s_axi_data_p2p_bresp);
        p_62_s_axi_data_p2p_bresp->set_sv_netview_offsetfromdp(12811024);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_62_s_axi_data_p2p_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_62->s_axi_data_p2p_buser.bind(*p_62_s_axi_data_p2p_buser);
        p_62_s_axi_data_p2p_buser->set_sv_netview_offsetfromdp(12811080);
        xsim_sc_channel<0, bool > *p_62_s_axi_data_p2p_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_62->s_axi_data_p2p_bvalid.bind(*p_62_s_axi_data_p2p_bvalid);
        p_62_s_axi_data_p2p_bvalid->set_sv_netview_offsetfromdp(12811136);
        xsim_sc_channel<0, bool > *p_62_s_axi_data_p2p_bready = new xsim_sc_channel<0, bool >();
        sc_inst_62->s_axi_data_p2p_bready.bind(*p_62_s_axi_data_p2p_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_62_s_axi_data_p2p_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_62_s_axi_data_p2p_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_62->s_axi_data_p2p_araddr.bind(*p_62_s_axi_data_p2p_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_62_s_axi_data_p2p_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_62_s_axi_data_p2p_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_62->s_axi_data_p2p_arlen.bind(*p_62_s_axi_data_p2p_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_62_s_axi_data_p2p_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_62_s_axi_data_p2p_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_62->s_axi_data_p2p_arsize.bind(*p_62_s_axi_data_p2p_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_62_s_axi_data_p2p_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_62_s_axi_data_p2p_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_62->s_axi_data_p2p_arburst.bind(*p_62_s_axi_data_p2p_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_62_s_axi_data_p2p_arburst);
        xsim_sc_channel<0, bool > *p_62_s_axi_data_p2p_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_62->s_axi_data_p2p_arlock.bind(*p_62_s_axi_data_p2p_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_62_s_axi_data_p2p_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_62_s_axi_data_p2p_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_62->s_axi_data_p2p_arcache.bind(*p_62_s_axi_data_p2p_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_62_s_axi_data_p2p_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_62_s_axi_data_p2p_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_62->s_axi_data_p2p_arprot.bind(*p_62_s_axi_data_p2p_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_62_s_axi_data_p2p_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_62_s_axi_data_p2p_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_62->s_axi_data_p2p_arregion.bind(*p_62_s_axi_data_p2p_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_62_s_axi_data_p2p_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_62_s_axi_data_p2p_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_62->s_axi_data_p2p_arqos.bind(*p_62_s_axi_data_p2p_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_62_s_axi_data_p2p_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_62_s_axi_data_p2p_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_62->s_axi_data_p2p_aruser.bind(*p_62_s_axi_data_p2p_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_62_s_axi_data_p2p_aruser);
        xsim_sc_channel<0, bool > *p_62_s_axi_data_p2p_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_62->s_axi_data_p2p_arvalid.bind(*p_62_s_axi_data_p2p_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_62_s_axi_data_p2p_arvalid);
        xsim_sc_channel<0, bool > *p_62_s_axi_data_p2p_arready = new xsim_sc_channel<0, bool >();
        sc_inst_62->s_axi_data_p2p_arready.bind(*p_62_s_axi_data_p2p_arready);
        p_62_s_axi_data_p2p_arready->set_sv_netview_offsetfromdp(12811864);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_62_s_axi_data_p2p_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_62->s_axi_data_p2p_rdata.bind(*p_62_s_axi_data_p2p_rdata);
        p_62_s_axi_data_p2p_rdata->set_sv_netview_offsetfromdp(12811920);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_62_s_axi_data_p2p_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_62->s_axi_data_p2p_rresp.bind(*p_62_s_axi_data_p2p_rresp);
        p_62_s_axi_data_p2p_rresp->set_sv_netview_offsetfromdp(12811976);
        xsim_sc_channel<0, bool > *p_62_s_axi_data_p2p_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_62->s_axi_data_p2p_rlast.bind(*p_62_s_axi_data_p2p_rlast);
        p_62_s_axi_data_p2p_rlast->set_sv_netview_offsetfromdp(12812032);
        xsim_sc_channel<0, bool > *p_62_s_axi_data_p2p_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_62->s_axi_data_p2p_rvalid.bind(*p_62_s_axi_data_p2p_rvalid);
        p_62_s_axi_data_p2p_rvalid->set_sv_netview_offsetfromdp(12812088);
        xsim_sc_channel<0, bool > *p_62_s_axi_data_p2p_rready = new xsim_sc_channel<0, bool >();
        sc_inst_62->s_axi_data_p2p_rready.bind(*p_62_s_axi_data_p2p_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_62_s_axi_data_p2p_rready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_62_maxi_lite_mb_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_62->maxi_lite_mb_awaddr.bind(*p_62_maxi_lite_mb_awaddr);
        p_62_maxi_lite_mb_awaddr->set_sv_netview_offsetfromdp(12812200);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_62_maxi_lite_mb_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_62->maxi_lite_mb_awprot.bind(*p_62_maxi_lite_mb_awprot);
        p_62_maxi_lite_mb_awprot->set_sv_netview_offsetfromdp(12812256);
        xsim_sc_channel<0, bool > *p_62_maxi_lite_mb_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_62->maxi_lite_mb_awvalid.bind(*p_62_maxi_lite_mb_awvalid);
        p_62_maxi_lite_mb_awvalid->set_sv_netview_offsetfromdp(12812312);
        xsim_sc_channel<0, bool > *p_62_maxi_lite_mb_awready = new xsim_sc_channel<0, bool >();
        sc_inst_62->maxi_lite_mb_awready.bind(*p_62_maxi_lite_mb_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_62_maxi_lite_mb_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_62_maxi_lite_mb_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_62->maxi_lite_mb_wdata.bind(*p_62_maxi_lite_mb_wdata);
        p_62_maxi_lite_mb_wdata->set_sv_netview_offsetfromdp(12812424);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_62_maxi_lite_mb_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_62->maxi_lite_mb_wstrb.bind(*p_62_maxi_lite_mb_wstrb);
        p_62_maxi_lite_mb_wstrb->set_sv_netview_offsetfromdp(12812480);
        xsim_sc_channel<0, bool > *p_62_maxi_lite_mb_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_62->maxi_lite_mb_wvalid.bind(*p_62_maxi_lite_mb_wvalid);
        p_62_maxi_lite_mb_wvalid->set_sv_netview_offsetfromdp(12812536);
        xsim_sc_channel<0, bool > *p_62_maxi_lite_mb_wready = new xsim_sc_channel<0, bool >();
        sc_inst_62->maxi_lite_mb_wready.bind(*p_62_maxi_lite_mb_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_62_maxi_lite_mb_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_62_maxi_lite_mb_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_62->maxi_lite_mb_bresp.bind(*p_62_maxi_lite_mb_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_62_maxi_lite_mb_bresp);
        xsim_sc_channel<0, bool > *p_62_maxi_lite_mb_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_62->maxi_lite_mb_bvalid.bind(*p_62_maxi_lite_mb_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_62_maxi_lite_mb_bvalid);
        xsim_sc_channel<0, bool > *p_62_maxi_lite_mb_bready = new xsim_sc_channel<0, bool >();
        sc_inst_62->maxi_lite_mb_bready.bind(*p_62_maxi_lite_mb_bready);
        p_62_maxi_lite_mb_bready->set_sv_netview_offsetfromdp(12812760);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_62_maxi_lite_mb_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_62->maxi_lite_mb_araddr.bind(*p_62_maxi_lite_mb_araddr);
        p_62_maxi_lite_mb_araddr->set_sv_netview_offsetfromdp(12812816);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_62_maxi_lite_mb_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_62->maxi_lite_mb_arprot.bind(*p_62_maxi_lite_mb_arprot);
        p_62_maxi_lite_mb_arprot->set_sv_netview_offsetfromdp(12812872);
        xsim_sc_channel<0, bool > *p_62_maxi_lite_mb_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_62->maxi_lite_mb_arvalid.bind(*p_62_maxi_lite_mb_arvalid);
        p_62_maxi_lite_mb_arvalid->set_sv_netview_offsetfromdp(12812928);
        xsim_sc_channel<0, bool > *p_62_maxi_lite_mb_arready = new xsim_sc_channel<0, bool >();
        sc_inst_62->maxi_lite_mb_arready.bind(*p_62_maxi_lite_mb_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_62_maxi_lite_mb_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_62_maxi_lite_mb_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_62->maxi_lite_mb_rdata.bind(*p_62_maxi_lite_mb_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_62_maxi_lite_mb_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_62_maxi_lite_mb_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_62->maxi_lite_mb_rresp.bind(*p_62_maxi_lite_mb_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_62_maxi_lite_mb_rresp);
        xsim_sc_channel<0, bool > *p_62_maxi_lite_mb_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_62->maxi_lite_mb_rvalid.bind(*p_62_maxi_lite_mb_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_62_maxi_lite_mb_rvalid);
        xsim_sc_channel<0, bool > *p_62_maxi_lite_mb_rready = new xsim_sc_channel<0, bool >();
        sc_inst_62->maxi_lite_mb_rready.bind(*p_62_maxi_lite_mb_rready);
        p_62_maxi_lite_mb_rready->set_sv_netview_offsetfromdp(12813208);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_62_s_axi_ctrl_user_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_62->s_axi_ctrl_user_awaddr.bind(*p_62_s_axi_ctrl_user_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_62_s_axi_ctrl_user_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_62_s_axi_ctrl_user_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_62->s_axi_ctrl_user_awprot.bind(*p_62_s_axi_ctrl_user_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_62_s_axi_ctrl_user_awprot);
        xsim_sc_channel<0, bool > *p_62_s_axi_ctrl_user_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_62->s_axi_ctrl_user_awvalid.bind(*p_62_s_axi_ctrl_user_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_62_s_axi_ctrl_user_awvalid);
        xsim_sc_channel<0, bool > *p_62_s_axi_ctrl_user_awready = new xsim_sc_channel<0, bool >();
        sc_inst_62->s_axi_ctrl_user_awready.bind(*p_62_s_axi_ctrl_user_awready);
        p_62_s_axi_ctrl_user_awready->set_sv_netview_offsetfromdp(12813432);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_62_s_axi_ctrl_user_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_62->s_axi_ctrl_user_wdata.bind(*p_62_s_axi_ctrl_user_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_62_s_axi_ctrl_user_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_62_s_axi_ctrl_user_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_62->s_axi_ctrl_user_wstrb.bind(*p_62_s_axi_ctrl_user_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_62_s_axi_ctrl_user_wstrb);
        xsim_sc_channel<0, bool > *p_62_s_axi_ctrl_user_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_62->s_axi_ctrl_user_wvalid.bind(*p_62_s_axi_ctrl_user_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_62_s_axi_ctrl_user_wvalid);
        xsim_sc_channel<0, bool > *p_62_s_axi_ctrl_user_wready = new xsim_sc_channel<0, bool >();
        sc_inst_62->s_axi_ctrl_user_wready.bind(*p_62_s_axi_ctrl_user_wready);
        p_62_s_axi_ctrl_user_wready->set_sv_netview_offsetfromdp(12813656);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_62_s_axi_ctrl_user_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_62->s_axi_ctrl_user_bresp.bind(*p_62_s_axi_ctrl_user_bresp);
        p_62_s_axi_ctrl_user_bresp->set_sv_netview_offsetfromdp(12813712);
        xsim_sc_channel<0, bool > *p_62_s_axi_ctrl_user_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_62->s_axi_ctrl_user_bvalid.bind(*p_62_s_axi_ctrl_user_bvalid);
        p_62_s_axi_ctrl_user_bvalid->set_sv_netview_offsetfromdp(12813768);
        xsim_sc_channel<0, bool > *p_62_s_axi_ctrl_user_bready = new xsim_sc_channel<0, bool >();
        sc_inst_62->s_axi_ctrl_user_bready.bind(*p_62_s_axi_ctrl_user_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_62_s_axi_ctrl_user_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_62_s_axi_ctrl_user_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_62->s_axi_ctrl_user_araddr.bind(*p_62_s_axi_ctrl_user_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_62_s_axi_ctrl_user_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_62_s_axi_ctrl_user_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_62->s_axi_ctrl_user_arprot.bind(*p_62_s_axi_ctrl_user_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_62_s_axi_ctrl_user_arprot);
        xsim_sc_channel<0, bool > *p_62_s_axi_ctrl_user_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_62->s_axi_ctrl_user_arvalid.bind(*p_62_s_axi_ctrl_user_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_62_s_axi_ctrl_user_arvalid);
        xsim_sc_channel<0, bool > *p_62_s_axi_ctrl_user_arready = new xsim_sc_channel<0, bool >();
        sc_inst_62->s_axi_ctrl_user_arready.bind(*p_62_s_axi_ctrl_user_arready);
        p_62_s_axi_ctrl_user_arready->set_sv_netview_offsetfromdp(12814048);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_62_s_axi_ctrl_user_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_62->s_axi_ctrl_user_rdata.bind(*p_62_s_axi_ctrl_user_rdata);
        p_62_s_axi_ctrl_user_rdata->set_sv_netview_offsetfromdp(12814104);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_62_s_axi_ctrl_user_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_62->s_axi_ctrl_user_rresp.bind(*p_62_s_axi_ctrl_user_rresp);
        p_62_s_axi_ctrl_user_rresp->set_sv_netview_offsetfromdp(12814160);
        xsim_sc_channel<0, bool > *p_62_s_axi_ctrl_user_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_62->s_axi_ctrl_user_rvalid.bind(*p_62_s_axi_ctrl_user_rvalid);
        p_62_s_axi_ctrl_user_rvalid->set_sv_netview_offsetfromdp(12814216);
        xsim_sc_channel<0, bool > *p_62_s_axi_ctrl_user_rready = new xsim_sc_channel<0, bool >();
        sc_inst_62->s_axi_ctrl_user_rready.bind(*p_62_s_axi_ctrl_user_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_62_s_axi_ctrl_user_rready);
        sc_inst_63 = new pfm_top_sim_address_0_0(".pfm_top_wrapper.pfm_top_i.static_region.sim_address_0");
        sc_inst_63->xsim_set_dbg_index(262);
        xsim_sc_channel<0, bool > *p_63_m_aximm_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_63->m_aximm_aclk.bind(*p_63_m_aximm_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_63_m_aximm_aclk);
        xsim_sc_channel<0, bool > *p_63_m_aximm_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_63->m_aximm_aresetn.bind(*p_63_m_aximm_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_63_m_aximm_aresetn);
        xsim_sc_channel<0, bool > *p_63_s_aximm_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_63->s_aximm_aclk.bind(*p_63_s_aximm_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_63_s_aximm_aclk);
        xsim_sc_channel<0, bool > *p_63_s_aximm_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_63->s_aximm_aresetn.bind(*p_63_s_aximm_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_63_s_aximm_aresetn);
        xsim_sc_channel<0, bool > *p_63_m_aximm_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_63->m_aximm_AWVALID.bind(*p_63_m_aximm_AWVALID);
        p_63_m_aximm_AWVALID->set_sv_netview_offsetfromdp(12814600);
        xsim_sc_channel<0, bool > *p_63_m_aximm_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_63->m_aximm_AWREADY.bind(*p_63_m_aximm_AWREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_63_m_aximm_AWREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_63_m_aximm_AWADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_63->m_aximm_AWADDR.bind(*p_63_m_aximm_AWADDR);
        p_63_m_aximm_AWADDR->set_sv_netview_offsetfromdp(12814712);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_63_m_aximm_AWID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_63->m_aximm_AWID.bind(*p_63_m_aximm_AWID);
        p_63_m_aximm_AWID->set_sv_netview_offsetfromdp(12814768);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_63_m_aximm_AWLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_63->m_aximm_AWLEN.bind(*p_63_m_aximm_AWLEN);
        p_63_m_aximm_AWLEN->set_sv_netview_offsetfromdp(12814824);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_63_m_aximm_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_63->m_aximm_AWSIZE.bind(*p_63_m_aximm_AWSIZE);
        p_63_m_aximm_AWSIZE->set_sv_netview_offsetfromdp(12814880);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_63_m_aximm_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_63->m_aximm_AWBURST.bind(*p_63_m_aximm_AWBURST);
        p_63_m_aximm_AWBURST->set_sv_netview_offsetfromdp(12814936);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_63_m_aximm_AWLOCK = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_63->m_aximm_AWLOCK.bind(*p_63_m_aximm_AWLOCK);
        p_63_m_aximm_AWLOCK->set_sv_netview_offsetfromdp(12814992);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_63_m_aximm_AWCACHE = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_63->m_aximm_AWCACHE.bind(*p_63_m_aximm_AWCACHE);
        p_63_m_aximm_AWCACHE->set_sv_netview_offsetfromdp(12815048);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_63_m_aximm_AWPROT = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_63->m_aximm_AWPROT.bind(*p_63_m_aximm_AWPROT);
        p_63_m_aximm_AWPROT->set_sv_netview_offsetfromdp(12815104);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_63_m_aximm_AWREGION = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_63->m_aximm_AWREGION.bind(*p_63_m_aximm_AWREGION);
        p_63_m_aximm_AWREGION->set_sv_netview_offsetfromdp(12815160);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_63_m_aximm_AWQOS = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_63->m_aximm_AWQOS.bind(*p_63_m_aximm_AWQOS);
        p_63_m_aximm_AWQOS->set_sv_netview_offsetfromdp(12815216);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_63_m_aximm_AWUSER = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_63->m_aximm_AWUSER.bind(*p_63_m_aximm_AWUSER);
        p_63_m_aximm_AWUSER->set_sv_netview_offsetfromdp(12815272);
        xsim_sc_channel<0, bool > *p_63_m_aximm_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_63->m_aximm_WVALID.bind(*p_63_m_aximm_WVALID);
        p_63_m_aximm_WVALID->set_sv_netview_offsetfromdp(12815328);
        xsim_sc_channel<0, bool > *p_63_m_aximm_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_63->m_aximm_WREADY.bind(*p_63_m_aximm_WREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_63_m_aximm_WREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_63_m_aximm_WDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_63->m_aximm_WDATA.bind(*p_63_m_aximm_WDATA);
        p_63_m_aximm_WDATA->set_sv_netview_offsetfromdp(12815440);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_63_m_aximm_WSTRB = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_63->m_aximm_WSTRB.bind(*p_63_m_aximm_WSTRB);
        p_63_m_aximm_WSTRB->set_sv_netview_offsetfromdp(12815496);
        xsim_sc_channel<0, bool > *p_63_m_aximm_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_63->m_aximm_WLAST.bind(*p_63_m_aximm_WLAST);
        p_63_m_aximm_WLAST->set_sv_netview_offsetfromdp(12815552);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_63_m_aximm_WUSER = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_63->m_aximm_WUSER.bind(*p_63_m_aximm_WUSER);
        p_63_m_aximm_WUSER->set_sv_netview_offsetfromdp(12815608);
        xsim_sc_channel<0, bool > *p_63_m_aximm_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_63->m_aximm_ARVALID.bind(*p_63_m_aximm_ARVALID);
        p_63_m_aximm_ARVALID->set_sv_netview_offsetfromdp(12815664);
        xsim_sc_channel<0, bool > *p_63_m_aximm_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_63->m_aximm_ARREADY.bind(*p_63_m_aximm_ARREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_63_m_aximm_ARREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_63_m_aximm_ARADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_63->m_aximm_ARADDR.bind(*p_63_m_aximm_ARADDR);
        p_63_m_aximm_ARADDR->set_sv_netview_offsetfromdp(12815776);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_63_m_aximm_ARID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_63->m_aximm_ARID.bind(*p_63_m_aximm_ARID);
        p_63_m_aximm_ARID->set_sv_netview_offsetfromdp(12815832);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_63_m_aximm_ARLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_63->m_aximm_ARLEN.bind(*p_63_m_aximm_ARLEN);
        p_63_m_aximm_ARLEN->set_sv_netview_offsetfromdp(12815888);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_63_m_aximm_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_63->m_aximm_ARSIZE.bind(*p_63_m_aximm_ARSIZE);
        p_63_m_aximm_ARSIZE->set_sv_netview_offsetfromdp(12815944);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_63_m_aximm_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_63->m_aximm_ARBURST.bind(*p_63_m_aximm_ARBURST);
        p_63_m_aximm_ARBURST->set_sv_netview_offsetfromdp(12816000);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_63_m_aximm_ARLOCK = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_63->m_aximm_ARLOCK.bind(*p_63_m_aximm_ARLOCK);
        p_63_m_aximm_ARLOCK->set_sv_netview_offsetfromdp(12816056);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_63_m_aximm_ARCACHE = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_63->m_aximm_ARCACHE.bind(*p_63_m_aximm_ARCACHE);
        p_63_m_aximm_ARCACHE->set_sv_netview_offsetfromdp(12816112);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_63_m_aximm_ARPROT = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_63->m_aximm_ARPROT.bind(*p_63_m_aximm_ARPROT);
        p_63_m_aximm_ARPROT->set_sv_netview_offsetfromdp(12816168);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_63_m_aximm_ARREGION = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_63->m_aximm_ARREGION.bind(*p_63_m_aximm_ARREGION);
        p_63_m_aximm_ARREGION->set_sv_netview_offsetfromdp(12816224);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_63_m_aximm_ARQOS = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_63->m_aximm_ARQOS.bind(*p_63_m_aximm_ARQOS);
        p_63_m_aximm_ARQOS->set_sv_netview_offsetfromdp(12816280);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_63_m_aximm_ARUSER = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_63->m_aximm_ARUSER.bind(*p_63_m_aximm_ARUSER);
        p_63_m_aximm_ARUSER->set_sv_netview_offsetfromdp(12816336);
        xsim_sc_channel<0, bool > *p_63_m_aximm_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_63->m_aximm_RVALID.bind(*p_63_m_aximm_RVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_63_m_aximm_RVALID);
        xsim_sc_channel<0, bool > *p_63_m_aximm_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_63->m_aximm_RREADY.bind(*p_63_m_aximm_RREADY);
        p_63_m_aximm_RREADY->set_sv_netview_offsetfromdp(12816448);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_63_m_aximm_RDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_63->m_aximm_RDATA.bind(*p_63_m_aximm_RDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_63_m_aximm_RDATA);
        xsim_sc_channel<0, bool > *p_63_m_aximm_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_63->m_aximm_RLAST.bind(*p_63_m_aximm_RLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_63_m_aximm_RLAST);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_63_m_aximm_RID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_63->m_aximm_RID.bind(*p_63_m_aximm_RID);
        (*_glb_hdl_sc_channel_map).push_back(p_63_m_aximm_RID);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_63_m_aximm_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_63->m_aximm_RRESP.bind(*p_63_m_aximm_RRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_63_m_aximm_RRESP);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_63_m_aximm_RUSER = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_63->m_aximm_RUSER.bind(*p_63_m_aximm_RUSER);
        (*_glb_hdl_sc_channel_map).push_back(p_63_m_aximm_RUSER);
        xsim_sc_channel<0, bool > *p_63_m_aximm_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_63->m_aximm_BVALID.bind(*p_63_m_aximm_BVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_63_m_aximm_BVALID);
        xsim_sc_channel<0, bool > *p_63_m_aximm_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_63->m_aximm_BREADY.bind(*p_63_m_aximm_BREADY);
        p_63_m_aximm_BREADY->set_sv_netview_offsetfromdp(12816840);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_63_m_aximm_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_63->m_aximm_BRESP.bind(*p_63_m_aximm_BRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_63_m_aximm_BRESP);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_63_m_aximm_BID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_63->m_aximm_BID.bind(*p_63_m_aximm_BID);
        (*_glb_hdl_sc_channel_map).push_back(p_63_m_aximm_BID);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_63_m_aximm_BUSER = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_63->m_aximm_BUSER.bind(*p_63_m_aximm_BUSER);
        (*_glb_hdl_sc_channel_map).push_back(p_63_m_aximm_BUSER);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_63_s_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_63->s_axi_awaddr.bind(*p_63_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_63_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_63_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_63->s_axi_awlen.bind(*p_63_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_63_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_63_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_63->s_axi_awsize.bind(*p_63_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_63_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_63_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_63->s_axi_awburst.bind(*p_63_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_63_s_axi_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_63_s_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_63->s_axi_awlock.bind(*p_63_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_63_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_63_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_63->s_axi_awcache.bind(*p_63_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_63_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_63_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_63->s_axi_awprot.bind(*p_63_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_63_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_63_s_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_63->s_axi_awregion.bind(*p_63_s_axi_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_63_s_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_63_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_63->s_axi_awqos.bind(*p_63_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_63_s_axi_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_63_s_axi_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_63->s_axi_awuser.bind(*p_63_s_axi_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_63_s_axi_awuser);
        xsim_sc_channel<0, bool > *p_63_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_63->s_axi_awvalid.bind(*p_63_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_63_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_63_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_63->s_axi_awready.bind(*p_63_s_axi_awready);
        p_63_s_axi_awready->set_sv_netview_offsetfromdp(12817680);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_63_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_63->s_axi_wdata.bind(*p_63_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_63_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_63_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_63->s_axi_wstrb.bind(*p_63_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_63_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_63_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_63->s_axi_wlast.bind(*p_63_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_63_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_63_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_63->s_axi_wvalid.bind(*p_63_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_63_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_63_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_63->s_axi_wready.bind(*p_63_s_axi_wready);
        p_63_s_axi_wready->set_sv_netview_offsetfromdp(12817960);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_63_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_63->s_axi_bresp.bind(*p_63_s_axi_bresp);
        p_63_s_axi_bresp->set_sv_netview_offsetfromdp(12818016);
        xsim_sc_channel<0, bool > *p_63_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_63->s_axi_bvalid.bind(*p_63_s_axi_bvalid);
        p_63_s_axi_bvalid->set_sv_netview_offsetfromdp(12818072);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_63_s_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_63->s_axi_buser.bind(*p_63_s_axi_buser);
        p_63_s_axi_buser->set_sv_netview_offsetfromdp(12818128);
        xsim_sc_channel<0, bool > *p_63_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_63->s_axi_bready.bind(*p_63_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_63_s_axi_bready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_63_s_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_63->s_axi_araddr.bind(*p_63_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_63_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_63_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_63->s_axi_arlen.bind(*p_63_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_63_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_63_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_63->s_axi_arsize.bind(*p_63_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_63_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_63_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_63->s_axi_arburst.bind(*p_63_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_63_s_axi_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_63_s_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_63->s_axi_arlock.bind(*p_63_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_63_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_63_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_63->s_axi_arcache.bind(*p_63_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_63_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_63_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_63->s_axi_arprot.bind(*p_63_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_63_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_63_s_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_63->s_axi_arregion.bind(*p_63_s_axi_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_63_s_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_63_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_63->s_axi_arqos.bind(*p_63_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_63_s_axi_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_63_s_axi_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_63->s_axi_aruser.bind(*p_63_s_axi_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_63_s_axi_aruser);
        xsim_sc_channel<0, bool > *p_63_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_63->s_axi_arvalid.bind(*p_63_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_63_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_63_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_63->s_axi_arready.bind(*p_63_s_axi_arready);
        p_63_s_axi_arready->set_sv_netview_offsetfromdp(12818856);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_63_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_63->s_axi_rdata.bind(*p_63_s_axi_rdata);
        p_63_s_axi_rdata->set_sv_netview_offsetfromdp(12818912);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_63_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_63->s_axi_rresp.bind(*p_63_s_axi_rresp);
        p_63_s_axi_rresp->set_sv_netview_offsetfromdp(12818968);
        xsim_sc_channel<0, bool > *p_63_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_63->s_axi_rlast.bind(*p_63_s_axi_rlast);
        p_63_s_axi_rlast->set_sv_netview_offsetfromdp(12819024);
        xsim_sc_channel<0, bool > *p_63_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_63->s_axi_rvalid.bind(*p_63_s_axi_rvalid);
        p_63_s_axi_rvalid->set_sv_netview_offsetfromdp(12819080);
        xsim_sc_channel<0, bool > *p_63_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_63->s_axi_rready.bind(*p_63_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_63_s_axi_rready);
        sc_inst_64 = new pfm_top_sim_qdma_0_0(".pfm_top_wrapper.pfm_top_i.static_region.sim_qdma_0");
        sc_inst_64->xsim_set_dbg_index(263);
        xsim_sc_channel<0, bool > *p_64_m_aximm_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_64->m_aximm_aclk.bind(*p_64_m_aximm_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_64_m_aximm_aclk);
        xsim_sc_channel<0, bool > *p_64_m_aximm_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_64->m_aximm_aresetn.bind(*p_64_m_aximm_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_64_m_aximm_aresetn);
        xsim_sc_channel<0, bool > *p_64_m_axictrl_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_64->m_axictrl_aclk.bind(*p_64_m_axictrl_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_64_m_axictrl_aclk);
        xsim_sc_channel<0, bool > *p_64_m_axictrl_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_64->m_axictrl_aresetn.bind(*p_64_m_axictrl_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_64_m_axictrl_aresetn);
        xsim_sc_channel<0, bool > *p_64_s_aximm_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_64->s_aximm_aclk.bind(*p_64_s_aximm_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_64_s_aximm_aclk);
        xsim_sc_channel<0, bool > *p_64_s_aximm_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_64->s_aximm_aresetn.bind(*p_64_s_aximm_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_64_s_aximm_aresetn);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_64_m_axictrl_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_64->m_axictrl_awaddr.bind(*p_64_m_axictrl_awaddr);
        p_64_m_axictrl_awaddr->set_sv_netview_offsetfromdp(12819576);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_64_m_axictrl_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_64->m_axictrl_awprot.bind(*p_64_m_axictrl_awprot);
        p_64_m_axictrl_awprot->set_sv_netview_offsetfromdp(12819632);
        xsim_sc_channel<0, bool > *p_64_m_axictrl_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_64->m_axictrl_awvalid.bind(*p_64_m_axictrl_awvalid);
        p_64_m_axictrl_awvalid->set_sv_netview_offsetfromdp(12819688);
        xsim_sc_channel<0, bool > *p_64_m_axictrl_awready = new xsim_sc_channel<0, bool >();
        sc_inst_64->m_axictrl_awready.bind(*p_64_m_axictrl_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_64_m_axictrl_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_64_m_axictrl_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_64->m_axictrl_wdata.bind(*p_64_m_axictrl_wdata);
        p_64_m_axictrl_wdata->set_sv_netview_offsetfromdp(12819800);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_64_m_axictrl_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_64->m_axictrl_wstrb.bind(*p_64_m_axictrl_wstrb);
        p_64_m_axictrl_wstrb->set_sv_netview_offsetfromdp(12819856);
        xsim_sc_channel<0, bool > *p_64_m_axictrl_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_64->m_axictrl_wvalid.bind(*p_64_m_axictrl_wvalid);
        p_64_m_axictrl_wvalid->set_sv_netview_offsetfromdp(12819912);
        xsim_sc_channel<0, bool > *p_64_m_axictrl_wready = new xsim_sc_channel<0, bool >();
        sc_inst_64->m_axictrl_wready.bind(*p_64_m_axictrl_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_64_m_axictrl_wready);
        xsim_sc_channel<0, bool > *p_64_m_axictrl_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_64->m_axictrl_bvalid.bind(*p_64_m_axictrl_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_64_m_axictrl_bvalid);
        xsim_sc_channel<0, bool > *p_64_m_axictrl_bready = new xsim_sc_channel<0, bool >();
        sc_inst_64->m_axictrl_bready.bind(*p_64_m_axictrl_bready);
        p_64_m_axictrl_bready->set_sv_netview_offsetfromdp(12820080);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_64_m_axictrl_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_64->m_axictrl_bresp.bind(*p_64_m_axictrl_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_64_m_axictrl_bresp);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_64_m_axictrl_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_64->m_axictrl_araddr.bind(*p_64_m_axictrl_araddr);
        p_64_m_axictrl_araddr->set_sv_netview_offsetfromdp(12820192);
        xsim_sc_channel<0, bool > *p_64_m_axictrl_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_64->m_axictrl_arvalid.bind(*p_64_m_axictrl_arvalid);
        p_64_m_axictrl_arvalid->set_sv_netview_offsetfromdp(12820248);
        xsim_sc_channel<0, bool > *p_64_m_axictrl_arready = new xsim_sc_channel<0, bool >();
        sc_inst_64->m_axictrl_arready.bind(*p_64_m_axictrl_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_64_m_axictrl_arready);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_64_m_axictrl_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_64->m_axictrl_arprot.bind(*p_64_m_axictrl_arprot);
        p_64_m_axictrl_arprot->set_sv_netview_offsetfromdp(12820360);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_64_m_axictrl_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_64->m_axictrl_rdata.bind(*p_64_m_axictrl_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_64_m_axictrl_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_64_m_axictrl_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_64->m_axictrl_rresp.bind(*p_64_m_axictrl_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_64_m_axictrl_rresp);
        xsim_sc_channel<0, bool > *p_64_m_axictrl_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_64->m_axictrl_rvalid.bind(*p_64_m_axictrl_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_64_m_axictrl_rvalid);
        xsim_sc_channel<0, bool > *p_64_m_axictrl_rready = new xsim_sc_channel<0, bool >();
        sc_inst_64->m_axictrl_rready.bind(*p_64_m_axictrl_rready);
        p_64_m_axictrl_rready->set_sv_netview_offsetfromdp(12820584);
        xsim_sc_channel<0, bool > *p_64_m_aximm_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_64->m_aximm_AWVALID.bind(*p_64_m_aximm_AWVALID);
        p_64_m_aximm_AWVALID->set_sv_netview_offsetfromdp(12820640);
        xsim_sc_channel<0, bool > *p_64_m_aximm_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_64->m_aximm_AWREADY.bind(*p_64_m_aximm_AWREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_64_m_aximm_AWREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_64_m_aximm_AWADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_64->m_aximm_AWADDR.bind(*p_64_m_aximm_AWADDR);
        p_64_m_aximm_AWADDR->set_sv_netview_offsetfromdp(12820752);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_64_m_aximm_AWID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_64->m_aximm_AWID.bind(*p_64_m_aximm_AWID);
        p_64_m_aximm_AWID->set_sv_netview_offsetfromdp(12820808);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_64_m_aximm_AWLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_64->m_aximm_AWLEN.bind(*p_64_m_aximm_AWLEN);
        p_64_m_aximm_AWLEN->set_sv_netview_offsetfromdp(12820864);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_64_m_aximm_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_64->m_aximm_AWSIZE.bind(*p_64_m_aximm_AWSIZE);
        p_64_m_aximm_AWSIZE->set_sv_netview_offsetfromdp(12820920);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_64_m_aximm_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_64->m_aximm_AWBURST.bind(*p_64_m_aximm_AWBURST);
        p_64_m_aximm_AWBURST->set_sv_netview_offsetfromdp(12820976);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_64_m_aximm_AWLOCK = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_64->m_aximm_AWLOCK.bind(*p_64_m_aximm_AWLOCK);
        p_64_m_aximm_AWLOCK->set_sv_netview_offsetfromdp(12821032);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_64_m_aximm_AWCACHE = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_64->m_aximm_AWCACHE.bind(*p_64_m_aximm_AWCACHE);
        p_64_m_aximm_AWCACHE->set_sv_netview_offsetfromdp(12821088);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_64_m_aximm_AWPROT = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_64->m_aximm_AWPROT.bind(*p_64_m_aximm_AWPROT);
        p_64_m_aximm_AWPROT->set_sv_netview_offsetfromdp(12821144);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_64_m_aximm_AWREGION = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_64->m_aximm_AWREGION.bind(*p_64_m_aximm_AWREGION);
        p_64_m_aximm_AWREGION->set_sv_netview_offsetfromdp(12821200);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_64_m_aximm_AWQOS = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_64->m_aximm_AWQOS.bind(*p_64_m_aximm_AWQOS);
        p_64_m_aximm_AWQOS->set_sv_netview_offsetfromdp(12821256);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_64_m_aximm_AWUSER = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_64->m_aximm_AWUSER.bind(*p_64_m_aximm_AWUSER);
        p_64_m_aximm_AWUSER->set_sv_netview_offsetfromdp(12821312);
        xsim_sc_channel<0, bool > *p_64_m_aximm_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_64->m_aximm_WVALID.bind(*p_64_m_aximm_WVALID);
        p_64_m_aximm_WVALID->set_sv_netview_offsetfromdp(12821368);
        xsim_sc_channel<0, bool > *p_64_m_aximm_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_64->m_aximm_WREADY.bind(*p_64_m_aximm_WREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_64_m_aximm_WREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_64_m_aximm_WDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_64->m_aximm_WDATA.bind(*p_64_m_aximm_WDATA);
        p_64_m_aximm_WDATA->set_sv_netview_offsetfromdp(12821480);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_64_m_aximm_WSTRB = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_64->m_aximm_WSTRB.bind(*p_64_m_aximm_WSTRB);
        p_64_m_aximm_WSTRB->set_sv_netview_offsetfromdp(12821536);
        xsim_sc_channel<0, bool > *p_64_m_aximm_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_64->m_aximm_WLAST.bind(*p_64_m_aximm_WLAST);
        p_64_m_aximm_WLAST->set_sv_netview_offsetfromdp(12821592);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_64_m_aximm_WUSER = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_64->m_aximm_WUSER.bind(*p_64_m_aximm_WUSER);
        p_64_m_aximm_WUSER->set_sv_netview_offsetfromdp(12821648);
        xsim_sc_channel<0, bool > *p_64_m_aximm_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_64->m_aximm_ARVALID.bind(*p_64_m_aximm_ARVALID);
        p_64_m_aximm_ARVALID->set_sv_netview_offsetfromdp(12821704);
        xsim_sc_channel<0, bool > *p_64_m_aximm_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_64->m_aximm_ARREADY.bind(*p_64_m_aximm_ARREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_64_m_aximm_ARREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_64_m_aximm_ARADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_64->m_aximm_ARADDR.bind(*p_64_m_aximm_ARADDR);
        p_64_m_aximm_ARADDR->set_sv_netview_offsetfromdp(12821816);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_64_m_aximm_ARID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_64->m_aximm_ARID.bind(*p_64_m_aximm_ARID);
        p_64_m_aximm_ARID->set_sv_netview_offsetfromdp(12821872);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_64_m_aximm_ARLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_64->m_aximm_ARLEN.bind(*p_64_m_aximm_ARLEN);
        p_64_m_aximm_ARLEN->set_sv_netview_offsetfromdp(12821928);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_64_m_aximm_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_64->m_aximm_ARSIZE.bind(*p_64_m_aximm_ARSIZE);
        p_64_m_aximm_ARSIZE->set_sv_netview_offsetfromdp(12821984);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_64_m_aximm_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_64->m_aximm_ARBURST.bind(*p_64_m_aximm_ARBURST);
        p_64_m_aximm_ARBURST->set_sv_netview_offsetfromdp(12822040);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_64_m_aximm_ARLOCK = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_64->m_aximm_ARLOCK.bind(*p_64_m_aximm_ARLOCK);
        p_64_m_aximm_ARLOCK->set_sv_netview_offsetfromdp(12822096);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_64_m_aximm_ARCACHE = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_64->m_aximm_ARCACHE.bind(*p_64_m_aximm_ARCACHE);
        p_64_m_aximm_ARCACHE->set_sv_netview_offsetfromdp(12822152);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_64_m_aximm_ARPROT = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_64->m_aximm_ARPROT.bind(*p_64_m_aximm_ARPROT);
        p_64_m_aximm_ARPROT->set_sv_netview_offsetfromdp(12822208);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_64_m_aximm_ARREGION = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_64->m_aximm_ARREGION.bind(*p_64_m_aximm_ARREGION);
        p_64_m_aximm_ARREGION->set_sv_netview_offsetfromdp(12822264);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_64_m_aximm_ARQOS = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_64->m_aximm_ARQOS.bind(*p_64_m_aximm_ARQOS);
        p_64_m_aximm_ARQOS->set_sv_netview_offsetfromdp(12822320);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_64_m_aximm_ARUSER = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_64->m_aximm_ARUSER.bind(*p_64_m_aximm_ARUSER);
        p_64_m_aximm_ARUSER->set_sv_netview_offsetfromdp(12822376);
        xsim_sc_channel<0, bool > *p_64_m_aximm_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_64->m_aximm_RVALID.bind(*p_64_m_aximm_RVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_64_m_aximm_RVALID);
        xsim_sc_channel<0, bool > *p_64_m_aximm_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_64->m_aximm_RREADY.bind(*p_64_m_aximm_RREADY);
        p_64_m_aximm_RREADY->set_sv_netview_offsetfromdp(12822488);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_64_m_aximm_RDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_64->m_aximm_RDATA.bind(*p_64_m_aximm_RDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_64_m_aximm_RDATA);
        xsim_sc_channel<0, bool > *p_64_m_aximm_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_64->m_aximm_RLAST.bind(*p_64_m_aximm_RLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_64_m_aximm_RLAST);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_64_m_aximm_RID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_64->m_aximm_RID.bind(*p_64_m_aximm_RID);
        (*_glb_hdl_sc_channel_map).push_back(p_64_m_aximm_RID);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_64_m_aximm_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_64->m_aximm_RRESP.bind(*p_64_m_aximm_RRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_64_m_aximm_RRESP);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_64_m_aximm_RUSER = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_64->m_aximm_RUSER.bind(*p_64_m_aximm_RUSER);
        (*_glb_hdl_sc_channel_map).push_back(p_64_m_aximm_RUSER);
        xsim_sc_channel<0, bool > *p_64_m_aximm_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_64->m_aximm_BVALID.bind(*p_64_m_aximm_BVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_64_m_aximm_BVALID);
        xsim_sc_channel<0, bool > *p_64_m_aximm_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_64->m_aximm_BREADY.bind(*p_64_m_aximm_BREADY);
        p_64_m_aximm_BREADY->set_sv_netview_offsetfromdp(12822880);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_64_m_aximm_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_64->m_aximm_BRESP.bind(*p_64_m_aximm_BRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_64_m_aximm_BRESP);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_64_m_aximm_BID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_64->m_aximm_BID.bind(*p_64_m_aximm_BID);
        (*_glb_hdl_sc_channel_map).push_back(p_64_m_aximm_BID);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_64_m_aximm_BUSER = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_64->m_aximm_BUSER.bind(*p_64_m_aximm_BUSER);
        (*_glb_hdl_sc_channel_map).push_back(p_64_m_aximm_BUSER);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_64_s_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_64->s_axi_awaddr.bind(*p_64_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_64_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_64_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_64->s_axi_awlen.bind(*p_64_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_64_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_64_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_64->s_axi_awsize.bind(*p_64_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_64_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_64_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_64->s_axi_awburst.bind(*p_64_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_64_s_axi_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_64_s_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_64->s_axi_awlock.bind(*p_64_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_64_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_64_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_64->s_axi_awcache.bind(*p_64_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_64_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_64_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_64->s_axi_awprot.bind(*p_64_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_64_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_64_s_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_64->s_axi_awregion.bind(*p_64_s_axi_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_64_s_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_64_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_64->s_axi_awqos.bind(*p_64_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_64_s_axi_awqos);
        xsim_sc_channel<0, bool > *p_64_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_64->s_axi_awvalid.bind(*p_64_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_64_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_64_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_64->s_axi_awready.bind(*p_64_s_axi_awready);
        p_64_s_axi_awready->set_sv_netview_offsetfromdp(12823664);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_64_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_64->s_axi_wdata.bind(*p_64_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_64_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_64_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_64->s_axi_wstrb.bind(*p_64_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_64_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_64_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_64->s_axi_wlast.bind(*p_64_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_64_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_64_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_64->s_axi_wvalid.bind(*p_64_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_64_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_64_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_64->s_axi_wready.bind(*p_64_s_axi_wready);
        p_64_s_axi_wready->set_sv_netview_offsetfromdp(12823944);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_64_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_64->s_axi_bresp.bind(*p_64_s_axi_bresp);
        p_64_s_axi_bresp->set_sv_netview_offsetfromdp(12824000);
        xsim_sc_channel<0, bool > *p_64_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_64->s_axi_bvalid.bind(*p_64_s_axi_bvalid);
        p_64_s_axi_bvalid->set_sv_netview_offsetfromdp(12824056);
        xsim_sc_channel<0, bool > *p_64_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_64->s_axi_bready.bind(*p_64_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_64_s_axi_bready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_64_s_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_64->s_axi_araddr.bind(*p_64_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_64_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_64_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_64->s_axi_arlen.bind(*p_64_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_64_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_64_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_64->s_axi_arsize.bind(*p_64_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_64_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_64_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_64->s_axi_arburst.bind(*p_64_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_64_s_axi_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_64_s_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_64->s_axi_arlock.bind(*p_64_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_64_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_64_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_64->s_axi_arcache.bind(*p_64_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_64_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_64_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_64->s_axi_arprot.bind(*p_64_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_64_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_64_s_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_64->s_axi_arregion.bind(*p_64_s_axi_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_64_s_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_64_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_64->s_axi_arqos.bind(*p_64_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_64_s_axi_arqos);
        xsim_sc_channel<0, bool > *p_64_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_64->s_axi_arvalid.bind(*p_64_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_64_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_64_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_64->s_axi_arready.bind(*p_64_s_axi_arready);
        p_64_s_axi_arready->set_sv_netview_offsetfromdp(12824728);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_64_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_64->s_axi_rdata.bind(*p_64_s_axi_rdata);
        p_64_s_axi_rdata->set_sv_netview_offsetfromdp(12824784);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_64_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_64->s_axi_rresp.bind(*p_64_s_axi_rresp);
        p_64_s_axi_rresp->set_sv_netview_offsetfromdp(12824840);
        xsim_sc_channel<0, bool > *p_64_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_64->s_axi_rlast.bind(*p_64_s_axi_rlast);
        p_64_s_axi_rlast->set_sv_netview_offsetfromdp(12824896);
        xsim_sc_channel<0, bool > *p_64_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_64->s_axi_rvalid.bind(*p_64_s_axi_rvalid);
        p_64_s_axi_rvalid->set_sv_netview_offsetfromdp(12824952);
        xsim_sc_channel<0, bool > *p_64_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_64->s_axi_rready.bind(*p_64_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_64_s_axi_rready);
        xsim_sc_channel<16, sc_dt::sc_bv<16> > *p_64_usr_irq_req = new xsim_sc_channel<16, sc_dt::sc_bv<16> >();
        sc_inst_64->usr_irq_req.bind(*p_64_usr_irq_req);
        (*_glb_hdl_sc_channel_map).push_back(p_64_usr_irq_req);
        xsim_sc_channel<16, sc_dt::sc_bv<16> > *p_64_usr_irq_ack = new xsim_sc_channel<16, sc_dt::sc_bv<16> >();
        sc_inst_64->usr_irq_ack.bind(*p_64_usr_irq_ack);
        p_64_usr_irq_ack->set_sv_netview_offsetfromdp(12825120);
        sc_inst_65 = new pfm_top_smartconnect_0_0(".pfm_top_wrapper.pfm_top_i.static_region.smartconnect_0");
        sc_inst_65->xsim_set_dbg_index(264);
        xsim_sc_channel<0, bool > *p_65_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_65->aclk.bind(*p_65_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_65_aclk);
        xsim_sc_channel<0, bool > *p_65_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_65->aresetn.bind(*p_65_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_65_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_65_S00_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_65->S00_AXI_awid.bind(*p_65_S00_AXI_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_65_S00_AXI_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_65_S00_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_65->S00_AXI_awaddr.bind(*p_65_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_65_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_65_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_65->S00_AXI_awlen.bind(*p_65_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_65_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_65_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_65->S00_AXI_awsize.bind(*p_65_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_65_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_65_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_65->S00_AXI_awburst.bind(*p_65_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_65_S00_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_65_S00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_65->S00_AXI_awlock.bind(*p_65_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_65_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_65_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_65->S00_AXI_awcache.bind(*p_65_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_65_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_65_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_65->S00_AXI_awprot.bind(*p_65_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_65_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_65_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_65->S00_AXI_awqos.bind(*p_65_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_65_S00_AXI_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_65_S00_AXI_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_65->S00_AXI_awuser.bind(*p_65_S00_AXI_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_65_S00_AXI_awuser);
        xsim_sc_channel<0, bool > *p_65_S00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_65->S00_AXI_awvalid.bind(*p_65_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_65_S00_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_65_S00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_65->S00_AXI_awready.bind(*p_65_S00_AXI_awready);
        p_65_S00_AXI_awready->set_sv_netview_offsetfromdp(12825952);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_65_S00_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_65->S00_AXI_wdata.bind(*p_65_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_65_S00_AXI_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_65_S00_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_65->S00_AXI_wstrb.bind(*p_65_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_65_S00_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_65_S00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_65->S00_AXI_wlast.bind(*p_65_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_65_S00_AXI_wlast);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_65_S00_AXI_wuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_65->S00_AXI_wuser.bind(*p_65_S00_AXI_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_65_S00_AXI_wuser);
        xsim_sc_channel<0, bool > *p_65_S00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_65->S00_AXI_wvalid.bind(*p_65_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_65_S00_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_65_S00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_65->S00_AXI_wready.bind(*p_65_S00_AXI_wready);
        p_65_S00_AXI_wready->set_sv_netview_offsetfromdp(12826288);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_65_S00_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_65->S00_AXI_bid.bind(*p_65_S00_AXI_bid);
        p_65_S00_AXI_bid->set_sv_netview_offsetfromdp(12826344);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_65_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_65->S00_AXI_bresp.bind(*p_65_S00_AXI_bresp);
        p_65_S00_AXI_bresp->set_sv_netview_offsetfromdp(12826400);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_65_S00_AXI_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_65->S00_AXI_buser.bind(*p_65_S00_AXI_buser);
        p_65_S00_AXI_buser->set_sv_netview_offsetfromdp(12826456);
        xsim_sc_channel<0, bool > *p_65_S00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_65->S00_AXI_bvalid.bind(*p_65_S00_AXI_bvalid);
        p_65_S00_AXI_bvalid->set_sv_netview_offsetfromdp(12826512);
        xsim_sc_channel<0, bool > *p_65_S00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_65->S00_AXI_bready.bind(*p_65_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_65_S00_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_65_S00_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_65->S00_AXI_arid.bind(*p_65_S00_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_65_S00_AXI_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_65_S00_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_65->S00_AXI_araddr.bind(*p_65_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_65_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_65_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_65->S00_AXI_arlen.bind(*p_65_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_65_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_65_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_65->S00_AXI_arsize.bind(*p_65_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_65_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_65_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_65->S00_AXI_arburst.bind(*p_65_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_65_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_65_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_65->S00_AXI_arlock.bind(*p_65_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_65_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_65_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_65->S00_AXI_arcache.bind(*p_65_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_65_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_65_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_65->S00_AXI_arprot.bind(*p_65_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_65_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_65_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_65->S00_AXI_arqos.bind(*p_65_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_65_S00_AXI_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_65_S00_AXI_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_65->S00_AXI_aruser.bind(*p_65_S00_AXI_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_65_S00_AXI_aruser);
        xsim_sc_channel<0, bool > *p_65_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_65->S00_AXI_arvalid.bind(*p_65_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_65_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_65_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_65->S00_AXI_arready.bind(*p_65_S00_AXI_arready);
        p_65_S00_AXI_arready->set_sv_netview_offsetfromdp(12827240);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_65_S00_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_65->S00_AXI_rid.bind(*p_65_S00_AXI_rid);
        p_65_S00_AXI_rid->set_sv_netview_offsetfromdp(12827296);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_65_S00_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_65->S00_AXI_rdata.bind(*p_65_S00_AXI_rdata);
        p_65_S00_AXI_rdata->set_sv_netview_offsetfromdp(12827352);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_65_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_65->S00_AXI_rresp.bind(*p_65_S00_AXI_rresp);
        p_65_S00_AXI_rresp->set_sv_netview_offsetfromdp(12827408);
        xsim_sc_channel<0, bool > *p_65_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_65->S00_AXI_rlast.bind(*p_65_S00_AXI_rlast);
        p_65_S00_AXI_rlast->set_sv_netview_offsetfromdp(12827464);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_65_S00_AXI_ruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_65->S00_AXI_ruser.bind(*p_65_S00_AXI_ruser);
        p_65_S00_AXI_ruser->set_sv_netview_offsetfromdp(12827520);
        xsim_sc_channel<0, bool > *p_65_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_65->S00_AXI_rvalid.bind(*p_65_S00_AXI_rvalid);
        p_65_S00_AXI_rvalid->set_sv_netview_offsetfromdp(12827576);
        xsim_sc_channel<0, bool > *p_65_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_65->S00_AXI_rready.bind(*p_65_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_65_S00_AXI_rready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_65_M00_AXI_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_65->M00_AXI_awaddr.bind(*p_65_M00_AXI_awaddr);
        p_65_M00_AXI_awaddr->set_sv_netview_offsetfromdp(12827688);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_65_M00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_65->M00_AXI_awlen.bind(*p_65_M00_AXI_awlen);
        p_65_M00_AXI_awlen->set_sv_netview_offsetfromdp(12827744);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_65_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_65->M00_AXI_awsize.bind(*p_65_M00_AXI_awsize);
        p_65_M00_AXI_awsize->set_sv_netview_offsetfromdp(12827800);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_65_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_65->M00_AXI_awburst.bind(*p_65_M00_AXI_awburst);
        p_65_M00_AXI_awburst->set_sv_netview_offsetfromdp(12827856);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_65_M00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_65->M00_AXI_awlock.bind(*p_65_M00_AXI_awlock);
        p_65_M00_AXI_awlock->set_sv_netview_offsetfromdp(12827912);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_65_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_65->M00_AXI_awcache.bind(*p_65_M00_AXI_awcache);
        p_65_M00_AXI_awcache->set_sv_netview_offsetfromdp(12827968);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_65_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_65->M00_AXI_awprot.bind(*p_65_M00_AXI_awprot);
        p_65_M00_AXI_awprot->set_sv_netview_offsetfromdp(12828024);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_65_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_65->M00_AXI_awqos.bind(*p_65_M00_AXI_awqos);
        p_65_M00_AXI_awqos->set_sv_netview_offsetfromdp(12828080);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_65_M00_AXI_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_65->M00_AXI_awuser.bind(*p_65_M00_AXI_awuser);
        p_65_M00_AXI_awuser->set_sv_netview_offsetfromdp(12828136);
        xsim_sc_channel<0, bool > *p_65_M00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_65->M00_AXI_awvalid.bind(*p_65_M00_AXI_awvalid);
        p_65_M00_AXI_awvalid->set_sv_netview_offsetfromdp(12828192);
        xsim_sc_channel<0, bool > *p_65_M00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_65->M00_AXI_awready.bind(*p_65_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_65_M00_AXI_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_65_M00_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_65->M00_AXI_wdata.bind(*p_65_M00_AXI_wdata);
        p_65_M00_AXI_wdata->set_sv_netview_offsetfromdp(12828304);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_65_M00_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_65->M00_AXI_wstrb.bind(*p_65_M00_AXI_wstrb);
        p_65_M00_AXI_wstrb->set_sv_netview_offsetfromdp(12828360);
        xsim_sc_channel<0, bool > *p_65_M00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_65->M00_AXI_wlast.bind(*p_65_M00_AXI_wlast);
        p_65_M00_AXI_wlast->set_sv_netview_offsetfromdp(12828416);
        xsim_sc_channel<0, bool > *p_65_M00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_65->M00_AXI_wvalid.bind(*p_65_M00_AXI_wvalid);
        p_65_M00_AXI_wvalid->set_sv_netview_offsetfromdp(12828472);
        xsim_sc_channel<0, bool > *p_65_M00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_65->M00_AXI_wready.bind(*p_65_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_65_M00_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_65_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_65->M00_AXI_bresp.bind(*p_65_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_65_M00_AXI_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_65_M00_AXI_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_65->M00_AXI_buser.bind(*p_65_M00_AXI_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_65_M00_AXI_buser);
        xsim_sc_channel<0, bool > *p_65_M00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_65->M00_AXI_bvalid.bind(*p_65_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_65_M00_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_65_M00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_65->M00_AXI_bready.bind(*p_65_M00_AXI_bready);
        p_65_M00_AXI_bready->set_sv_netview_offsetfromdp(12828752);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_65_M00_AXI_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_65->M00_AXI_araddr.bind(*p_65_M00_AXI_araddr);
        p_65_M00_AXI_araddr->set_sv_netview_offsetfromdp(12828808);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_65_M00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_65->M00_AXI_arlen.bind(*p_65_M00_AXI_arlen);
        p_65_M00_AXI_arlen->set_sv_netview_offsetfromdp(12828864);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_65_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_65->M00_AXI_arsize.bind(*p_65_M00_AXI_arsize);
        p_65_M00_AXI_arsize->set_sv_netview_offsetfromdp(12828920);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_65_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_65->M00_AXI_arburst.bind(*p_65_M00_AXI_arburst);
        p_65_M00_AXI_arburst->set_sv_netview_offsetfromdp(12828976);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_65_M00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_65->M00_AXI_arlock.bind(*p_65_M00_AXI_arlock);
        p_65_M00_AXI_arlock->set_sv_netview_offsetfromdp(12829032);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_65_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_65->M00_AXI_arcache.bind(*p_65_M00_AXI_arcache);
        p_65_M00_AXI_arcache->set_sv_netview_offsetfromdp(12829088);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_65_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_65->M00_AXI_arprot.bind(*p_65_M00_AXI_arprot);
        p_65_M00_AXI_arprot->set_sv_netview_offsetfromdp(12829144);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_65_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_65->M00_AXI_arqos.bind(*p_65_M00_AXI_arqos);
        p_65_M00_AXI_arqos->set_sv_netview_offsetfromdp(12829200);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_65_M00_AXI_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_65->M00_AXI_aruser.bind(*p_65_M00_AXI_aruser);
        p_65_M00_AXI_aruser->set_sv_netview_offsetfromdp(12829256);
        xsim_sc_channel<0, bool > *p_65_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_65->M00_AXI_arvalid.bind(*p_65_M00_AXI_arvalid);
        p_65_M00_AXI_arvalid->set_sv_netview_offsetfromdp(12829312);
        xsim_sc_channel<0, bool > *p_65_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_65->M00_AXI_arready.bind(*p_65_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_65_M00_AXI_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_65_M00_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_65->M00_AXI_rdata.bind(*p_65_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_65_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_65_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_65->M00_AXI_rresp.bind(*p_65_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_65_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_65_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_65->M00_AXI_rlast.bind(*p_65_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_65_M00_AXI_rlast);
        xsim_sc_channel<0, bool > *p_65_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_65->M00_AXI_rvalid.bind(*p_65_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_65_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_65_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_65->M00_AXI_rready.bind(*p_65_M00_AXI_rready);
        p_65_M00_AXI_rready->set_sv_netview_offsetfromdp(12829648);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_65_M01_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_65->M01_AXI_awaddr.bind(*p_65_M01_AXI_awaddr);
        p_65_M01_AXI_awaddr->set_sv_netview_offsetfromdp(12829704);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_65_M01_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_65->M01_AXI_awlen.bind(*p_65_M01_AXI_awlen);
        p_65_M01_AXI_awlen->set_sv_netview_offsetfromdp(12829760);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_65_M01_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_65->M01_AXI_awsize.bind(*p_65_M01_AXI_awsize);
        p_65_M01_AXI_awsize->set_sv_netview_offsetfromdp(12829816);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_65_M01_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_65->M01_AXI_awburst.bind(*p_65_M01_AXI_awburst);
        p_65_M01_AXI_awburst->set_sv_netview_offsetfromdp(12829872);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_65_M01_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_65->M01_AXI_awlock.bind(*p_65_M01_AXI_awlock);
        p_65_M01_AXI_awlock->set_sv_netview_offsetfromdp(12829928);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_65_M01_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_65->M01_AXI_awcache.bind(*p_65_M01_AXI_awcache);
        p_65_M01_AXI_awcache->set_sv_netview_offsetfromdp(12829984);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_65_M01_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_65->M01_AXI_awprot.bind(*p_65_M01_AXI_awprot);
        p_65_M01_AXI_awprot->set_sv_netview_offsetfromdp(12830040);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_65_M01_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_65->M01_AXI_awqos.bind(*p_65_M01_AXI_awqos);
        p_65_M01_AXI_awqos->set_sv_netview_offsetfromdp(12830096);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_65_M01_AXI_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_65->M01_AXI_awuser.bind(*p_65_M01_AXI_awuser);
        p_65_M01_AXI_awuser->set_sv_netview_offsetfromdp(12830152);
        xsim_sc_channel<0, bool > *p_65_M01_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_65->M01_AXI_awvalid.bind(*p_65_M01_AXI_awvalid);
        p_65_M01_AXI_awvalid->set_sv_netview_offsetfromdp(12830208);
        xsim_sc_channel<0, bool > *p_65_M01_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_65->M01_AXI_awready.bind(*p_65_M01_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_65_M01_AXI_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_65_M01_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_65->M01_AXI_wdata.bind(*p_65_M01_AXI_wdata);
        p_65_M01_AXI_wdata->set_sv_netview_offsetfromdp(12830320);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_65_M01_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_65->M01_AXI_wstrb.bind(*p_65_M01_AXI_wstrb);
        p_65_M01_AXI_wstrb->set_sv_netview_offsetfromdp(12830376);
        xsim_sc_channel<0, bool > *p_65_M01_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_65->M01_AXI_wlast.bind(*p_65_M01_AXI_wlast);
        p_65_M01_AXI_wlast->set_sv_netview_offsetfromdp(12830432);
        xsim_sc_channel<0, bool > *p_65_M01_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_65->M01_AXI_wvalid.bind(*p_65_M01_AXI_wvalid);
        p_65_M01_AXI_wvalid->set_sv_netview_offsetfromdp(12830488);
        xsim_sc_channel<0, bool > *p_65_M01_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_65->M01_AXI_wready.bind(*p_65_M01_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_65_M01_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_65_M01_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_65->M01_AXI_bresp.bind(*p_65_M01_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_65_M01_AXI_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_65_M01_AXI_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_65->M01_AXI_buser.bind(*p_65_M01_AXI_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_65_M01_AXI_buser);
        xsim_sc_channel<0, bool > *p_65_M01_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_65->M01_AXI_bvalid.bind(*p_65_M01_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_65_M01_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_65_M01_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_65->M01_AXI_bready.bind(*p_65_M01_AXI_bready);
        p_65_M01_AXI_bready->set_sv_netview_offsetfromdp(12830768);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_65_M01_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_65->M01_AXI_araddr.bind(*p_65_M01_AXI_araddr);
        p_65_M01_AXI_araddr->set_sv_netview_offsetfromdp(12830824);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_65_M01_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_65->M01_AXI_arlen.bind(*p_65_M01_AXI_arlen);
        p_65_M01_AXI_arlen->set_sv_netview_offsetfromdp(12830880);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_65_M01_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_65->M01_AXI_arsize.bind(*p_65_M01_AXI_arsize);
        p_65_M01_AXI_arsize->set_sv_netview_offsetfromdp(12830936);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_65_M01_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_65->M01_AXI_arburst.bind(*p_65_M01_AXI_arburst);
        p_65_M01_AXI_arburst->set_sv_netview_offsetfromdp(12830992);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_65_M01_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_65->M01_AXI_arlock.bind(*p_65_M01_AXI_arlock);
        p_65_M01_AXI_arlock->set_sv_netview_offsetfromdp(12831048);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_65_M01_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_65->M01_AXI_arcache.bind(*p_65_M01_AXI_arcache);
        p_65_M01_AXI_arcache->set_sv_netview_offsetfromdp(12831104);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_65_M01_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_65->M01_AXI_arprot.bind(*p_65_M01_AXI_arprot);
        p_65_M01_AXI_arprot->set_sv_netview_offsetfromdp(12831160);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_65_M01_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_65->M01_AXI_arqos.bind(*p_65_M01_AXI_arqos);
        p_65_M01_AXI_arqos->set_sv_netview_offsetfromdp(12831216);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_65_M01_AXI_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_65->M01_AXI_aruser.bind(*p_65_M01_AXI_aruser);
        p_65_M01_AXI_aruser->set_sv_netview_offsetfromdp(12831272);
        xsim_sc_channel<0, bool > *p_65_M01_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_65->M01_AXI_arvalid.bind(*p_65_M01_AXI_arvalid);
        p_65_M01_AXI_arvalid->set_sv_netview_offsetfromdp(12831328);
        xsim_sc_channel<0, bool > *p_65_M01_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_65->M01_AXI_arready.bind(*p_65_M01_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_65_M01_AXI_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_65_M01_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_65->M01_AXI_rdata.bind(*p_65_M01_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_65_M01_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_65_M01_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_65->M01_AXI_rresp.bind(*p_65_M01_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_65_M01_AXI_rresp);
        xsim_sc_channel<0, bool > *p_65_M01_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_65->M01_AXI_rlast.bind(*p_65_M01_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_65_M01_AXI_rlast);
        xsim_sc_channel<0, bool > *p_65_M01_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_65->M01_AXI_rvalid.bind(*p_65_M01_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_65_M01_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_65_M01_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_65->M01_AXI_rready.bind(*p_65_M01_AXI_rready);
        p_65_M01_AXI_rready->set_sv_netview_offsetfromdp(12831664);
    }


extern "C"
    void implicit_HDL_SCcleanup()
    {
        delete sc_inst_1;
        delete sc_inst_2;
        delete sc_inst_3;
        delete sc_inst_4;
        delete sc_inst_5;
        delete sc_inst_6;
        delete sc_inst_7;
        delete sc_inst_8;
        delete sc_inst_9;
        delete sc_inst_10;
        delete sc_inst_11;
        delete sc_inst_12;
        delete sc_inst_13;
        delete sc_inst_14;
        delete sc_inst_15;
        delete sc_inst_16;
        delete sc_inst_17;
        delete sc_inst_18;
        delete sc_inst_19;
        delete sc_inst_20;
        delete sc_inst_21;
        delete sc_inst_22;
        delete sc_inst_23;
        delete sc_inst_24;
        delete sc_inst_25;
        delete sc_inst_26;
        delete sc_inst_27;
        delete sc_inst_28;
        delete sc_inst_29;
        delete sc_inst_30;
        delete sc_inst_31;
        delete sc_inst_32;
        delete sc_inst_33;
        delete sc_inst_34;
        delete sc_inst_35;
        delete sc_inst_36;
        delete sc_inst_37;
        delete sc_inst_38;
        delete sc_inst_39;
        delete sc_inst_40;
        delete sc_inst_41;
        delete sc_inst_42;
        delete sc_inst_43;
        delete sc_inst_44;
        delete sc_inst_45;
        delete sc_inst_46;
        delete sc_inst_47;
        delete sc_inst_48;
        delete sc_inst_49;
        delete sc_inst_50;
        delete sc_inst_51;
        delete sc_inst_52;
        delete sc_inst_53;
        delete sc_inst_54;
        delete sc_inst_55;
        delete sc_inst_56;
        delete sc_inst_57;
        delete sc_inst_58;
        delete sc_inst_59;
        delete sc_inst_60;
        delete sc_inst_61;
        delete sc_inst_62;
        delete sc_inst_63;
        delete sc_inst_64;
        delete sc_inst_65;
    }
